; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_4593f0.no_mem_exit(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_459480.get_mem2Dpel(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_49e170.PutPel_14(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_42ffd0.GenerateFullPelRepresentation(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x4b8c50_type = type <{ [4 x i8] }>
@G_0x4b8c50= global %G_0x4b8c50_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x4b8c58_type = type <{ [4 x i8] }>
@G_0x4b8c58= global %G_0x4b8c58_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x4b8c60_type = type <{ [4 x i8] }>
@G_0x4b8c60= global %G_0x4b8c60_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
@G_0x6cb8f8= global %G_0x6cb8f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x726410_type = type <{ [8 x i8] }>
@G_0x726410= global %G_0x726410_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4c03bd_type = type <{ [8 x i8] }>
@G__0x4c03bd= global %G__0x4c03bd_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4c03e0_type = type <{ [8 x i8] }>
@G__0x4c03e0= global %G__0x4c03e0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @UnifiedOneForthPix(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .UnifiedOneForthPix:	 RIP: 42dd50	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 42dd50	 Bytes: 1
  %loadMem_42dd50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd50 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd50)
  store %struct.Memory* %call_42dd50, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 42dd51	 Bytes: 3
  %loadMem_42dd51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd51 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd51)
  store %struct.Memory* %call_42dd51, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 42dd54	 Bytes: 1
  %loadMem_42dd54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd54 = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd54)
  store %struct.Memory* %call_42dd54, %struct.Memory** %MEMORY

  ; Code: subq $0x478, %rsp	 RIP: 42dd55	 Bytes: 7
  %loadMem_42dd55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd55 = call %struct.Memory* @routine_subq__0x478___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd55)
  store %struct.Memory* %call_42dd55, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x10(%rbp)	 RIP: 42dd5c	 Bytes: 4
  %loadMem_42dd5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd5c = call %struct.Memory* @routine_movq__rdi__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd5c)
  store %struct.Memory* %call_42dd5c, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 42dd60	 Bytes: 4
  %loadMem_42dd60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd60 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd60)
  store %struct.Memory* %call_42dd60, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rdi), %rdi	 RIP: 42dd64	 Bytes: 7
  %loadMem_42dd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd64 = call %struct.Memory* @routine_movq_0x1918__rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd64)
  store %struct.Memory* %call_42dd64, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x48(%rbp)	 RIP: 42dd6b	 Bytes: 4
  %loadMem_42dd6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd6b = call %struct.Memory* @routine_movq__rdi__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd6b)
  store %struct.Memory* %call_42dd6b, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 42dd6f	 Bytes: 4
  %loadMem_42dd6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd6f = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd6f)
  store %struct.Memory* %call_42dd6f, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rdi), %eax	 RIP: 42dd73	 Bytes: 6
  %loadMem_42dd73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd73 = call %struct.Memory* @routine_movl_0x18f8__rdi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd73)
  store %struct.Memory* %call_42dd73, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 42dd79	 Bytes: 3
  %loadMem_42dd79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd79 = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd79)
  store %struct.Memory* %call_42dd79, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 42dd7c	 Bytes: 4
  %loadMem_42dd7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd7c = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd7c)
  store %struct.Memory* %call_42dd7c, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rdi), %eax	 RIP: 42dd80	 Bytes: 6
  %loadMem_42dd80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd80 = call %struct.Memory* @routine_movl_0x18fc__rdi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd80)
  store %struct.Memory* %call_42dd80, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x50(%rbp)	 RIP: 42dd86	 Bytes: 3
  %loadMem_42dd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd86 = call %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd86)
  store %struct.Memory* %call_42dd86, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 42dd89	 Bytes: 4
  %loadMem_42dd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd89 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd89)
  store %struct.Memory* %call_42dd89, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0x1930(%rdi)	 RIP: 42dd8d	 Bytes: 8
  %loadMem_42dd8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd8d = call %struct.Memory* @routine_cmpq__0x0__0x1930__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd8d)
  store %struct.Memory* %call_42dd8d, %struct.Memory** %MEMORY

  ; Code: jne .L_42ddad	 RIP: 42dd95	 Bytes: 6
  %loadMem_42dd95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd95 = call %struct.Memory* @routine_jne_.L_42ddad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd95, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_42dd95, %struct.Memory** %MEMORY

  %loadBr_42dd95 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42dd95 = icmp eq i8 %loadBr_42dd95, 1
  br i1 %cmpBr_42dd95, label %block_.L_42ddad, label %block_42dd9b

block_42dd9b:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42dd9b	 Bytes: 4
  %loadMem_42dd9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd9b = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd9b)
  store %struct.Memory* %call_42dd9b, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0x1920(%rax)	 RIP: 42dd9f	 Bytes: 8
  %loadMem_42dd9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dd9f = call %struct.Memory* @routine_cmpq__0x0__0x1920__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dd9f)
  store %struct.Memory* %call_42dd9f, %struct.Memory** %MEMORY

  ; Code: je .L_42ddb2	 RIP: 42dda7	 Bytes: 6
  %loadMem_42dda7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dda7 = call %struct.Memory* @routine_je_.L_42ddb2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dda7, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_42dda7, %struct.Memory** %MEMORY

  %loadBr_42dda7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42dda7 = icmp eq i8 %loadBr_42dda7, 1
  br i1 %cmpBr_42dda7, label %block_.L_42ddb2, label %block_.L_42ddad

  ; Code: .L_42ddad:	 RIP: 42ddad	 Bytes: 0
block_.L_42ddad:

  ; Code: jmpq .L_42ffb8	 RIP: 42ddad	 Bytes: 5
  %loadMem_42ddad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddad = call %struct.Memory* @routine_jmpq_.L_42ffb8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddad, i64 8715, i64 5)
  store %struct.Memory* %call_42ddad, %struct.Memory** %MEMORY

  br label %block_.L_42ffb8

  ; Code: .L_42ddb2:	 RIP: 42ddb2	 Bytes: 0
block_.L_42ddb2:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42ddb2	 Bytes: 4
  %loadMem_42ddb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddb2 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddb2)
  store %struct.Memory* %call_42ddb2, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42ddb6	 Bytes: 6
  %loadMem_42ddb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddb6 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddb6)
  store %struct.Memory* %call_42ddb6, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42ddbc	 Bytes: 4
  %loadMem_42ddbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddbc = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddbc)
  store %struct.Memory* %call_42ddbc, %struct.Memory** %MEMORY

  ; Code: imull 0x18fc(%rax), %ecx	 RIP: 42ddc0	 Bytes: 7
  %loadMem_42ddc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddc0 = call %struct.Memory* @routine_imull_0x18fc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddc0)
  store %struct.Memory* %call_42ddc0, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rax	 RIP: 42ddc7	 Bytes: 3
  %loadMem_42ddc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddc7 = call %struct.Memory* @routine_movslq__ecx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddc7)
  store %struct.Memory* %call_42ddc7, %struct.Memory** %MEMORY

  ; Code: shlq $0x1, %rax	 RIP: 42ddca	 Bytes: 4
  %loadMem_42ddca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddca = call %struct.Memory* @routine_shlq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddca)
  store %struct.Memory* %call_42ddca, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 42ddce	 Bytes: 3
  %loadMem_42ddce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddce = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddce)
  store %struct.Memory* %call_42ddce, %struct.Memory** %MEMORY

  ; Code: callq .malloc_plt	 RIP: 42ddd1	 Bytes: 5
  %loadMem1_42ddd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ddd1 = call %struct.Memory* @routine_callq_.malloc_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ddd1, i64 -183425, i64 5, i64 5)
  store %struct.Memory* %call1_42ddd1, %struct.Memory** %MEMORY

  %loadMem2_42ddd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ddd1 = load i64, i64* %3
  %call2_42ddd1 = call %struct.Memory* @ext_malloc(%struct.State* %0, i64  %loadPC_42ddd1, %struct.Memory* %loadMem2_42ddd1)
  store %struct.Memory* %call2_42ddd1, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42ddd6	 Bytes: 2
  %loadMem_42ddd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddd6 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddd6)
  store %struct.Memory* %call_42ddd6, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 42ddd8	 Bytes: 2
  %loadMem_42ddd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddd8 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddd8)
  store %struct.Memory* %call_42ddd8, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdx	 RIP: 42ddda	 Bytes: 4
  %loadMem_42ddda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddda = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddda)
  store %struct.Memory* %call_42ddda, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x1920(%rdx)	 RIP: 42ddde	 Bytes: 7
  %loadMem_42ddde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddde = call %struct.Memory* @routine_movq__rax__0x1920__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddde)
  store %struct.Memory* %call_42ddde, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42dde5	 Bytes: 4
  %loadMem_42dde5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dde5 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dde5)
  store %struct.Memory* %call_42dde5, %struct.Memory** %MEMORY

  ; Code: cmpq 0x1920(%rax), %rdi	 RIP: 42dde9	 Bytes: 7
  %loadMem_42dde9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dde9 = call %struct.Memory* @routine_cmpq_0x1920__rax____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dde9)
  store %struct.Memory* %call_42dde9, %struct.Memory** %MEMORY

  ; Code: jne .L_42de05	 RIP: 42ddf0	 Bytes: 6
  %loadMem_42ddf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddf0 = call %struct.Memory* @routine_jne_.L_42de05(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddf0, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_42ddf0, %struct.Memory** %MEMORY

  %loadBr_42ddf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42ddf0 = icmp eq i8 %loadBr_42ddf0, 1
  br i1 %cmpBr_42ddf0, label %block_.L_42de05, label %block_42ddf6

block_42ddf6:
  ; Code: movq $0x4c03bd, %rdi	 RIP: 42ddf6	 Bytes: 10
  %loadMem_42ddf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ddf6 = call %struct.Memory* @routine_movq__0x4c03bd___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ddf6)
  store %struct.Memory* %call_42ddf6, %struct.Memory** %MEMORY

  ; Code: callq .no_mem_exit	 RIP: 42de00	 Bytes: 5
  %loadMem1_42de00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42de00 = call %struct.Memory* @routine_callq_.no_mem_exit(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42de00, i64 177648, i64 5, i64 5)
  store %struct.Memory* %call1_42de00, %struct.Memory** %MEMORY

  %loadMem2_42de00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42de00 = load i64, i64* %3
  %call2_42de00 = call %struct.Memory* @sub_4593f0.no_mem_exit(%struct.State* %0, i64  %loadPC_42de00, %struct.Memory* %loadMem2_42de00)
  store %struct.Memory* %call2_42de00, %struct.Memory** %MEMORY

  ; Code: .L_42de05:	 RIP: 42de05	 Bytes: 0
  br label %block_.L_42de05
block_.L_42de05:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42de05	 Bytes: 4
  %loadMem_42de05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de05 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de05)
  store %struct.Memory* %call_42de05, %struct.Memory** %MEMORY

  ; Code: addq $0x1930, %rax	 RIP: 42de09	 Bytes: 6
  %loadMem_42de09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de09 = call %struct.Memory* @routine_addq__0x1930___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de09)
  store %struct.Memory* %call_42de09, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42de0f	 Bytes: 4
  %loadMem_42de0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de0f = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de0f)
  store %struct.Memory* %call_42de0f, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rcx), %edx	 RIP: 42de13	 Bytes: 6
  %loadMem_42de13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de13 = call %struct.Memory* @routine_movl_0x18fc__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de13)
  store %struct.Memory* %call_42de13, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %edx	 RIP: 42de19	 Bytes: 3
  %loadMem_42de19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de19 = call %struct.Memory* @routine_addl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de19)
  store %struct.Memory* %call_42de19, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %edx	 RIP: 42de1c	 Bytes: 3
  %loadMem_42de1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de1c = call %struct.Memory* @routine_shll__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de1c)
  store %struct.Memory* %call_42de1c, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42de1f	 Bytes: 4
  %loadMem_42de1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de1f = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de1f)
  store %struct.Memory* %call_42de1f, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rcx), %esi	 RIP: 42de23	 Bytes: 6
  %loadMem_42de23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de23 = call %struct.Memory* @routine_movl_0x18f8__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de23)
  store %struct.Memory* %call_42de23, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %esi	 RIP: 42de29	 Bytes: 3
  %loadMem_42de29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de29 = call %struct.Memory* @routine_addl__0x8___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de29)
  store %struct.Memory* %call_42de29, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %esi	 RIP: 42de2c	 Bytes: 3
  %loadMem_42de2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de2c = call %struct.Memory* @routine_shll__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de2c)
  store %struct.Memory* %call_42de2c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 42de2f	 Bytes: 3
  %loadMem_42de2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de2f = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de2f)
  store %struct.Memory* %call_42de2f, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x54(%rbp)	 RIP: 42de32	 Bytes: 3
  %loadMem_42de32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de32 = call %struct.Memory* @routine_movl__esi__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de32)
  store %struct.Memory* %call_42de32, %struct.Memory** %MEMORY

  ; Code: movl %edx, %esi	 RIP: 42de35	 Bytes: 2
  %loadMem_42de35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de35 = call %struct.Memory* @routine_movl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de35)
  store %struct.Memory* %call_42de35, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 42de37	 Bytes: 3
  %loadMem_42de37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de37 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de37)
  store %struct.Memory* %call_42de37, %struct.Memory** %MEMORY

  ; Code: callq .get_mem2Dpel	 RIP: 42de3a	 Bytes: 5
  %loadMem1_42de3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42de3a = call %struct.Memory* @routine_callq_.get_mem2Dpel(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42de3a, i64 177734, i64 5, i64 5)
  store %struct.Memory* %call1_42de3a, %struct.Memory** %MEMORY

  %loadMem2_42de3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42de3a = load i64, i64* %3
  %call2_42de3a = call %struct.Memory* @sub_459480.get_mem2Dpel(%struct.State* %0, i64  %loadPC_42de3a, %struct.Memory* %loadMem2_42de3a)
  store %struct.Memory* %call2_42de3a, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb8f8, %rcx	 RIP: 42de3f	 Bytes: 8
  %loadMem_42de3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de3f = call %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de3f)
  store %struct.Memory* %call_42de3f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x504(%rcx)	 RIP: 42de47	 Bytes: 7
  %loadMem_42de47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de47 = call %struct.Memory* @routine_cmpl__0x0__0x504__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de47)
  store %struct.Memory* %call_42de47, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 42de4e	 Bytes: 3
  %loadMem_42de4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de4e = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de4e)
  store %struct.Memory* %call_42de4e, %struct.Memory** %MEMORY

  ; Code: jne .L_42de7e	 RIP: 42de51	 Bytes: 6
  %loadMem_42de51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de51 = call %struct.Memory* @routine_jne_.L_42de7e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de51, i8* %BRANCH_TAKEN, i64 45, i64 6, i64 6)
  store %struct.Memory* %call_42de51, %struct.Memory** %MEMORY

  %loadBr_42de51 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42de51 = icmp eq i8 %loadBr_42de51, 1
  br i1 %cmpBr_42de51, label %block_.L_42de7e, label %block_42de57

block_42de57:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 42de57	 Bytes: 8
  %loadMem_42de57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de57 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de57)
  store %struct.Memory* %call_42de57, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x508(%rax)	 RIP: 42de5f	 Bytes: 7
  %loadMem_42de5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de5f = call %struct.Memory* @routine_cmpl__0x0__0x508__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de5f)
  store %struct.Memory* %call_42de5f, %struct.Memory** %MEMORY

  ; Code: jne .L_42de7e	 RIP: 42de66	 Bytes: 6
  %loadMem_42de66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de66 = call %struct.Memory* @routine_jne_.L_42de7e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de66, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_42de66, %struct.Memory** %MEMORY

  %loadBr_42de66 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42de66 = icmp eq i8 %loadBr_42de66, 1
  br i1 %cmpBr_42de66, label %block_.L_42de7e, label %block_42de6c

block_42de6c:
  ; Code: movq 0x6cb8f8, %rax	 RIP: 42de6c	 Bytes: 8
  %loadMem_42de6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de6c = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de6c)
  store %struct.Memory* %call_42de6c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x3c(%rax)	 RIP: 42de74	 Bytes: 4
  %loadMem_42de74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de74 = call %struct.Memory* @routine_cmpl__0x0__0x3c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de74)
  store %struct.Memory* %call_42de74, %struct.Memory** %MEMORY

  ; Code: je .L_42df0e	 RIP: 42de78	 Bytes: 6
  %loadMem_42de78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de78 = call %struct.Memory* @routine_je_.L_42df0e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de78, i8* %BRANCH_TAKEN, i64 150, i64 6, i64 6)
  store %struct.Memory* %call_42de78, %struct.Memory** %MEMORY

  %loadBr_42de78 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42de78 = icmp eq i8 %loadBr_42de78, 1
  br i1 %cmpBr_42de78, label %block_.L_42df0e, label %block_.L_42de7e

  ; Code: .L_42de7e:	 RIP: 42de7e	 Bytes: 0
block_.L_42de7e:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42de7e	 Bytes: 4
  %loadMem_42de7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de7e = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de7e)
  store %struct.Memory* %call_42de7e, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42de82	 Bytes: 6
  %loadMem_42de82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de82 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de82)
  store %struct.Memory* %call_42de82, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42de88	 Bytes: 4
  %loadMem_42de88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de88 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de88)
  store %struct.Memory* %call_42de88, %struct.Memory** %MEMORY

  ; Code: imull 0x18fc(%rax), %ecx	 RIP: 42de8c	 Bytes: 7
  %loadMem_42de8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de8c = call %struct.Memory* @routine_imull_0x18fc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de8c)
  store %struct.Memory* %call_42de8c, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rax	 RIP: 42de93	 Bytes: 3
  %loadMem_42de93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de93 = call %struct.Memory* @routine_movslq__ecx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de93)
  store %struct.Memory* %call_42de93, %struct.Memory** %MEMORY

  ; Code: shlq $0x1, %rax	 RIP: 42de96	 Bytes: 4
  %loadMem_42de96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de96 = call %struct.Memory* @routine_shlq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de96)
  store %struct.Memory* %call_42de96, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 42de9a	 Bytes: 3
  %loadMem_42de9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42de9a = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42de9a)
  store %struct.Memory* %call_42de9a, %struct.Memory** %MEMORY

  ; Code: callq .malloc_plt	 RIP: 42de9d	 Bytes: 5
  %loadMem1_42de9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42de9d = call %struct.Memory* @routine_callq_.malloc_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42de9d, i64 -183629, i64 5, i64 5)
  store %struct.Memory* %call1_42de9d, %struct.Memory** %MEMORY

  %loadMem2_42de9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42de9d = load i64, i64* %3
  %call2_42de9d = call %struct.Memory* @ext_malloc(%struct.State* %0, i64  %loadPC_42de9d, %struct.Memory* %loadMem2_42de9d)
  store %struct.Memory* %call2_42de9d, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42dea2	 Bytes: 2
  %loadMem_42dea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dea2 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dea2)
  store %struct.Memory* %call_42dea2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 42dea4	 Bytes: 2
  %loadMem_42dea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dea4 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dea4)
  store %struct.Memory* %call_42dea4, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdx	 RIP: 42dea6	 Bytes: 4
  %loadMem_42dea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dea6 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dea6)
  store %struct.Memory* %call_42dea6, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x1928(%rdx)	 RIP: 42deaa	 Bytes: 7
  %loadMem_42deaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42deaa = call %struct.Memory* @routine_movq__rax__0x1928__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42deaa)
  store %struct.Memory* %call_42deaa, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42deb1	 Bytes: 4
  %loadMem_42deb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42deb1 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42deb1)
  store %struct.Memory* %call_42deb1, %struct.Memory** %MEMORY

  ; Code: cmpq 0x1928(%rax), %rdi	 RIP: 42deb5	 Bytes: 7
  %loadMem_42deb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42deb5 = call %struct.Memory* @routine_cmpq_0x1928__rax____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42deb5)
  store %struct.Memory* %call_42deb5, %struct.Memory** %MEMORY

  ; Code: jne .L_42ded1	 RIP: 42debc	 Bytes: 6
  %loadMem_42debc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42debc = call %struct.Memory* @routine_jne_.L_42ded1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42debc, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_42debc, %struct.Memory** %MEMORY

  %loadBr_42debc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42debc = icmp eq i8 %loadBr_42debc, 1
  br i1 %cmpBr_42debc, label %block_.L_42ded1, label %block_42dec2

block_42dec2:
  ; Code: movq $0x4c03e0, %rdi	 RIP: 42dec2	 Bytes: 10
  %loadMem_42dec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dec2 = call %struct.Memory* @routine_movq__0x4c03e0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dec2)
  store %struct.Memory* %call_42dec2, %struct.Memory** %MEMORY

  ; Code: callq .no_mem_exit	 RIP: 42decc	 Bytes: 5
  %loadMem1_42decc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42decc = call %struct.Memory* @routine_callq_.no_mem_exit(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42decc, i64 177444, i64 5, i64 5)
  store %struct.Memory* %call1_42decc, %struct.Memory** %MEMORY

  %loadMem2_42decc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42decc = load i64, i64* %3
  %call2_42decc = call %struct.Memory* @sub_4593f0.no_mem_exit(%struct.State* %0, i64  %loadPC_42decc, %struct.Memory* %loadMem2_42decc)
  store %struct.Memory* %call2_42decc, %struct.Memory** %MEMORY

  ; Code: .L_42ded1:	 RIP: 42ded1	 Bytes: 0
  br label %block_.L_42ded1
block_.L_42ded1:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42ded1	 Bytes: 4
  %loadMem_42ded1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ded1 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ded1)
  store %struct.Memory* %call_42ded1, %struct.Memory** %MEMORY

  ; Code: addq $0x1938, %rax	 RIP: 42ded5	 Bytes: 6
  %loadMem_42ded5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ded5 = call %struct.Memory* @routine_addq__0x1938___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ded5)
  store %struct.Memory* %call_42ded5, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42dedb	 Bytes: 4
  %loadMem_42dedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dedb = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dedb)
  store %struct.Memory* %call_42dedb, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rcx), %edx	 RIP: 42dedf	 Bytes: 6
  %loadMem_42dedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dedf = call %struct.Memory* @routine_movl_0x18fc__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dedf)
  store %struct.Memory* %call_42dedf, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %edx	 RIP: 42dee5	 Bytes: 3
  %loadMem_42dee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dee5 = call %struct.Memory* @routine_addl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dee5)
  store %struct.Memory* %call_42dee5, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %edx	 RIP: 42dee8	 Bytes: 3
  %loadMem_42dee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dee8 = call %struct.Memory* @routine_shll__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dee8)
  store %struct.Memory* %call_42dee8, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42deeb	 Bytes: 4
  %loadMem_42deeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42deeb = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42deeb)
  store %struct.Memory* %call_42deeb, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rcx), %esi	 RIP: 42deef	 Bytes: 6
  %loadMem_42deef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42deef = call %struct.Memory* @routine_movl_0x18f8__rcx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42deef)
  store %struct.Memory* %call_42deef, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %esi	 RIP: 42def5	 Bytes: 3
  %loadMem_42def5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42def5 = call %struct.Memory* @routine_addl__0x8___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42def5)
  store %struct.Memory* %call_42def5, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %esi	 RIP: 42def8	 Bytes: 3
  %loadMem_42def8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42def8 = call %struct.Memory* @routine_shll__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42def8)
  store %struct.Memory* %call_42def8, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 42defb	 Bytes: 3
  %loadMem_42defb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42defb = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42defb)
  store %struct.Memory* %call_42defb, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x5c(%rbp)	 RIP: 42defe	 Bytes: 3
  %loadMem_42defe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42defe = call %struct.Memory* @routine_movl__esi__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42defe)
  store %struct.Memory* %call_42defe, %struct.Memory** %MEMORY

  ; Code: movl %edx, %esi	 RIP: 42df01	 Bytes: 2
  %loadMem_42df01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df01 = call %struct.Memory* @routine_movl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df01)
  store %struct.Memory* %call_42df01, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edx	 RIP: 42df03	 Bytes: 3
  %loadMem_42df03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df03 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df03)
  store %struct.Memory* %call_42df03, %struct.Memory** %MEMORY

  ; Code: callq .get_mem2Dpel	 RIP: 42df06	 Bytes: 5
  %loadMem1_42df06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42df06 = call %struct.Memory* @routine_callq_.get_mem2Dpel(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42df06, i64 177530, i64 5, i64 5)
  store %struct.Memory* %call1_42df06, %struct.Memory** %MEMORY

  %loadMem2_42df06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42df06 = load i64, i64* %3
  %call2_42df06 = call %struct.Memory* @sub_459480.get_mem2Dpel(%struct.State* %0, i64  %loadPC_42df06, %struct.Memory* %loadMem2_42df06)
  store %struct.Memory* %call2_42df06, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x60(%rbp)	 RIP: 42df0b	 Bytes: 3
  %loadMem_42df0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df0b = call %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df0b)
  store %struct.Memory* %call_42df0b, %struct.Memory** %MEMORY

  ; Code: .L_42df0e:	 RIP: 42df0e	 Bytes: 0
  br label %block_.L_42df0e
block_.L_42df0e:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42df0e	 Bytes: 4
  %loadMem_42df0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df0e = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df0e)
  store %struct.Memory* %call_42df0e, %struct.Memory** %MEMORY

  ; Code: movq 0x1930(%rax), %rax	 RIP: 42df12	 Bytes: 7
  %loadMem_42df12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df12 = call %struct.Memory* @routine_movq_0x1930__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df12)
  store %struct.Memory* %call_42df12, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x38(%rbp)	 RIP: 42df19	 Bytes: 4
  %loadMem_42df19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df19 = call %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df19)
  store %struct.Memory* %call_42df19, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42df1d	 Bytes: 4
  %loadMem_42df1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df1d = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df1d)
  store %struct.Memory* %call_42df1d, %struct.Memory** %MEMORY

  ; Code: movq 0x1920(%rax), %rax	 RIP: 42df21	 Bytes: 7
  %loadMem_42df21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df21 = call %struct.Memory* @routine_movq_0x1920__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df21)
  store %struct.Memory* %call_42df21, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x40(%rbp)	 RIP: 42df28	 Bytes: 4
  %loadMem_42df28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df28 = call %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df28)
  store %struct.Memory* %call_42df28, %struct.Memory** %MEMORY

  ; Code: movl $0xfffffffc, -0x1c(%rbp)	 RIP: 42df2c	 Bytes: 7
  %loadMem_42df2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df2c = call %struct.Memory* @routine_movl__0xfffffffc__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df2c)
  store %struct.Memory* %call_42df2c, %struct.Memory** %MEMORY

  ; Code: .L_42df33:	 RIP: 42df33	 Bytes: 0
  br label %block_.L_42df33
block_.L_42df33:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42df33	 Bytes: 3
  %loadMem_42df33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df33 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df33)
  store %struct.Memory* %call_42df33, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42df36	 Bytes: 4
  %loadMem_42df36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df36 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df36)
  store %struct.Memory* %call_42df36, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rcx), %edx	 RIP: 42df3a	 Bytes: 6
  %loadMem_42df3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df3a = call %struct.Memory* @routine_movl_0x18fc__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df3a)
  store %struct.Memory* %call_42df3a, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %edx	 RIP: 42df40	 Bytes: 3
  %loadMem_42df40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df40 = call %struct.Memory* @routine_addl__0x4___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df40)
  store %struct.Memory* %call_42df40, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 42df43	 Bytes: 2
  %loadMem_42df43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df43 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df43)
  store %struct.Memory* %call_42df43, %struct.Memory** %MEMORY

  ; Code: jge .L_42e666	 RIP: 42df45	 Bytes: 6
  %loadMem_42df45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df45 = call %struct.Memory* @routine_jge_.L_42e666(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df45, i8* %BRANCH_TAKEN, i64 1825, i64 6, i64 6)
  store %struct.Memory* %call_42df45, %struct.Memory** %MEMORY

  %loadBr_42df45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42df45 = icmp eq i8 %loadBr_42df45, 1
  br i1 %cmpBr_42df45, label %block_.L_42e666, label %block_42df4b

block_42df4b:
  ; Code: movl $0xfffffffc, -0x18(%rbp)	 RIP: 42df4b	 Bytes: 7
  %loadMem_42df4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df4b = call %struct.Memory* @routine_movl__0xfffffffc__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df4b)
  store %struct.Memory* %call_42df4b, %struct.Memory** %MEMORY

  ; Code: .L_42df52:	 RIP: 42df52	 Bytes: 0
  br label %block_.L_42df52
block_.L_42df52:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42df52	 Bytes: 3
  %loadMem_42df52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df52 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df52)
  store %struct.Memory* %call_42df52, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42df55	 Bytes: 4
  %loadMem_42df55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df55 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df55)
  store %struct.Memory* %call_42df55, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rcx), %edx	 RIP: 42df59	 Bytes: 6
  %loadMem_42df59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df59 = call %struct.Memory* @routine_movl_0x18f8__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df59)
  store %struct.Memory* %call_42df59, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %edx	 RIP: 42df5f	 Bytes: 3
  %loadMem_42df5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df5f = call %struct.Memory* @routine_addl__0x4___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df5f)
  store %struct.Memory* %call_42df5f, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 42df62	 Bytes: 2
  %loadMem_42df62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df62 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df62)
  store %struct.Memory* %call_42df62, %struct.Memory** %MEMORY

  ; Code: jge .L_42e653	 RIP: 42df64	 Bytes: 6
  %loadMem_42df64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df64 = call %struct.Memory* @routine_jge_.L_42e653(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df64, i8* %BRANCH_TAKEN, i64 1775, i64 6, i64 6)
  store %struct.Memory* %call_42df64, %struct.Memory** %MEMORY

  %loadBr_42df64 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42df64 = icmp eq i8 %loadBr_42df64, 1
  br i1 %cmpBr_42df64, label %block_.L_42e653, label %block_42df6a

block_42df6a:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42df6a	 Bytes: 4
  %loadMem_42df6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df6a = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df6a)
  store %struct.Memory* %call_42df6a, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rax), %ecx	 RIP: 42df6e	 Bytes: 6
  %loadMem_42df6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df6e = call %struct.Memory* @routine_movl_0x18fc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df6e)
  store %struct.Memory* %call_42df6e, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42df74	 Bytes: 3
  %loadMem_42df74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df74 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df74)
  store %struct.Memory* %call_42df74, %struct.Memory** %MEMORY

  ; Code: cmpl -0x1c(%rbp), %ecx	 RIP: 42df77	 Bytes: 3
  %loadMem_42df77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df77 = call %struct.Memory* @routine_cmpl_MINUS0x1c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df77)
  store %struct.Memory* %call_42df77, %struct.Memory** %MEMORY

  ; Code: jge .L_42df95	 RIP: 42df7a	 Bytes: 6
  %loadMem_42df7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df7a = call %struct.Memory* @routine_jge_.L_42df95(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df7a, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_42df7a, %struct.Memory** %MEMORY

  %loadBr_42df7a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42df7a = icmp eq i8 %loadBr_42df7a, 1
  br i1 %cmpBr_42df7a, label %block_.L_42df95, label %block_42df80

block_42df80:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42df80	 Bytes: 4
  %loadMem_42df80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df80 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df80)
  store %struct.Memory* %call_42df80, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rax), %ecx	 RIP: 42df84	 Bytes: 6
  %loadMem_42df84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df84 = call %struct.Memory* @routine_movl_0x18fc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df84)
  store %struct.Memory* %call_42df84, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42df8a	 Bytes: 3
  %loadMem_42df8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df8a = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df8a)
  store %struct.Memory* %call_42df8a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x64(%rbp)	 RIP: 42df8d	 Bytes: 3
  %loadMem_42df8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df8d = call %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df8d)
  store %struct.Memory* %call_42df8d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42df9b	 RIP: 42df90	 Bytes: 5
  %loadMem_42df90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df90 = call %struct.Memory* @routine_jmpq_.L_42df9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df90, i64 11, i64 5)
  store %struct.Memory* %call_42df90, %struct.Memory** %MEMORY

  br label %block_.L_42df9b

  ; Code: .L_42df95:	 RIP: 42df95	 Bytes: 0
block_.L_42df95:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42df95	 Bytes: 3
  %loadMem_42df95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df95 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df95)
  store %struct.Memory* %call_42df95, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x64(%rbp)	 RIP: 42df98	 Bytes: 3
  %loadMem_42df98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df98 = call %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df98)
  store %struct.Memory* %call_42df98, %struct.Memory** %MEMORY

  ; Code: .L_42df9b:	 RIP: 42df9b	 Bytes: 0
  br label %block_.L_42df9b
block_.L_42df9b:

  ; Code: movl -0x64(%rbp), %eax	 RIP: 42df9b	 Bytes: 3
  %loadMem_42df9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df9b = call %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df9b)
  store %struct.Memory* %call_42df9b, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42df9e	 Bytes: 2
  %loadMem_42df9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42df9e = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42df9e)
  store %struct.Memory* %call_42df9e, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42dfa0	 Bytes: 2
  %loadMem_42dfa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfa0 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfa0)
  store %struct.Memory* %call_42dfa0, %struct.Memory** %MEMORY

  ; Code: jle .L_42dfb2	 RIP: 42dfa2	 Bytes: 6
  %loadMem_42dfa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfa2 = call %struct.Memory* @routine_jle_.L_42dfb2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfa2, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_42dfa2, %struct.Memory** %MEMORY

  %loadBr_42dfa2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42dfa2 = icmp eq i8 %loadBr_42dfa2, 1
  br i1 %cmpBr_42dfa2, label %block_.L_42dfb2, label %block_42dfa8

block_42dfa8:
  ; Code: xorl %eax, %eax	 RIP: 42dfa8	 Bytes: 2
  %loadMem_42dfa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfa8 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfa8)
  store %struct.Memory* %call_42dfa8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 42dfaa	 Bytes: 3
  %loadMem_42dfaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfaa = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfaa)
  store %struct.Memory* %call_42dfaa, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42dfe9	 RIP: 42dfad	 Bytes: 5
  %loadMem_42dfad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfad = call %struct.Memory* @routine_jmpq_.L_42dfe9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfad, i64 60, i64 5)
  store %struct.Memory* %call_42dfad, %struct.Memory** %MEMORY

  br label %block_.L_42dfe9

  ; Code: .L_42dfb2:	 RIP: 42dfb2	 Bytes: 0
block_.L_42dfb2:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42dfb2	 Bytes: 4
  %loadMem_42dfb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfb2 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfb2)
  store %struct.Memory* %call_42dfb2, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rax), %ecx	 RIP: 42dfb6	 Bytes: 6
  %loadMem_42dfb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfb6 = call %struct.Memory* @routine_movl_0x18fc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfb6)
  store %struct.Memory* %call_42dfb6, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42dfbc	 Bytes: 3
  %loadMem_42dfbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfbc = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfbc)
  store %struct.Memory* %call_42dfbc, %struct.Memory** %MEMORY

  ; Code: cmpl -0x1c(%rbp), %ecx	 RIP: 42dfbf	 Bytes: 3
  %loadMem_42dfbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfbf = call %struct.Memory* @routine_cmpl_MINUS0x1c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfbf)
  store %struct.Memory* %call_42dfbf, %struct.Memory** %MEMORY

  ; Code: jge .L_42dfdd	 RIP: 42dfc2	 Bytes: 6
  %loadMem_42dfc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfc2 = call %struct.Memory* @routine_jge_.L_42dfdd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfc2, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_42dfc2, %struct.Memory** %MEMORY

  %loadBr_42dfc2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42dfc2 = icmp eq i8 %loadBr_42dfc2, 1
  br i1 %cmpBr_42dfc2, label %block_.L_42dfdd, label %block_42dfc8

block_42dfc8:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42dfc8	 Bytes: 4
  %loadMem_42dfc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfc8 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfc8)
  store %struct.Memory* %call_42dfc8, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rax), %ecx	 RIP: 42dfcc	 Bytes: 6
  %loadMem_42dfcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfcc = call %struct.Memory* @routine_movl_0x18fc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfcc)
  store %struct.Memory* %call_42dfcc, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42dfd2	 Bytes: 3
  %loadMem_42dfd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfd2 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfd2)
  store %struct.Memory* %call_42dfd2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x6c(%rbp)	 RIP: 42dfd5	 Bytes: 3
  %loadMem_42dfd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfd5 = call %struct.Memory* @routine_movl__ecx__MINUS0x6c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfd5)
  store %struct.Memory* %call_42dfd5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42dfe3	 RIP: 42dfd8	 Bytes: 5
  %loadMem_42dfd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfd8 = call %struct.Memory* @routine_jmpq_.L_42dfe3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfd8, i64 11, i64 5)
  store %struct.Memory* %call_42dfd8, %struct.Memory** %MEMORY

  br label %block_.L_42dfe3

  ; Code: .L_42dfdd:	 RIP: 42dfdd	 Bytes: 0
block_.L_42dfdd:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42dfdd	 Bytes: 3
  %loadMem_42dfdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfdd = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfdd)
  store %struct.Memory* %call_42dfdd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6c(%rbp)	 RIP: 42dfe0	 Bytes: 3
  %loadMem_42dfe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfe0 = call %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfe0)
  store %struct.Memory* %call_42dfe0, %struct.Memory** %MEMORY

  ; Code: .L_42dfe3:	 RIP: 42dfe3	 Bytes: 0
  br label %block_.L_42dfe3
block_.L_42dfe3:

  ; Code: movl -0x6c(%rbp), %eax	 RIP: 42dfe3	 Bytes: 3
  %loadMem_42dfe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfe3 = call %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfe3)
  store %struct.Memory* %call_42dfe3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68(%rbp)	 RIP: 42dfe6	 Bytes: 3
  %loadMem_42dfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfe6 = call %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfe6)
  store %struct.Memory* %call_42dfe6, %struct.Memory** %MEMORY

  ; Code: .L_42dfe9:	 RIP: 42dfe9	 Bytes: 0
  br label %block_.L_42dfe9
block_.L_42dfe9:

  ; Code: movl -0x68(%rbp), %eax	 RIP: 42dfe9	 Bytes: 3
  %loadMem_42dfe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfe9 = call %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfe9)
  store %struct.Memory* %call_42dfe9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 42dfec	 Bytes: 3
  %loadMem_42dfec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfec = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfec)
  store %struct.Memory* %call_42dfec, %struct.Memory** %MEMORY

  ; Code: movl 0x4b8c50, %eax	 RIP: 42dfef	 Bytes: 7
  %loadMem_42dfef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dfef = call %struct.Memory* @routine_movl_0x4b8c50___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dfef)
  store %struct.Memory* %call_42dfef, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rcx	 RIP: 42dff6	 Bytes: 4
  %loadMem_42dff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dff6 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dff6)
  store %struct.Memory* %call_42dff6, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdx	 RIP: 42dffa	 Bytes: 4
  %loadMem_42dffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dffa = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dffa)
  store %struct.Memory* %call_42dffa, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 42dffe	 Bytes: 4
  %loadMem_42dffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42dffe = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42dffe)
  store %struct.Memory* %call_42dffe, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdx	 RIP: 42e002	 Bytes: 4
  %loadMem_42e002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e002 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e002)
  store %struct.Memory* %call_42e002, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rdx), %esi	 RIP: 42e006	 Bytes: 6
  %loadMem_42e006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e006 = call %struct.Memory* @routine_movl_0x18f8__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e006)
  store %struct.Memory* %call_42e006, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %esi	 RIP: 42e00c	 Bytes: 3
  %loadMem_42e00c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e00c = call %struct.Memory* @routine_subl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e00c)
  store %struct.Memory* %call_42e00c, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %esi	 RIP: 42e00f	 Bytes: 3
  %loadMem_42e00f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e00f = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e00f)
  store %struct.Memory* %call_42e00f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x70(%rbp)	 RIP: 42e012	 Bytes: 3
  %loadMem_42e012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e012 = call %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e012)
  store %struct.Memory* %call_42e012, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x78(%rbp)	 RIP: 42e015	 Bytes: 4
  %loadMem_42e015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e015 = call %struct.Memory* @routine_movq__rcx__MINUS0x78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e015)
  store %struct.Memory* %call_42e015, %struct.Memory** %MEMORY

  ; Code: jge .L_42e034	 RIP: 42e019	 Bytes: 6
  %loadMem_42e019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e019 = call %struct.Memory* @routine_jge_.L_42e034(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e019, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_42e019, %struct.Memory** %MEMORY

  %loadBr_42e019 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e019 = icmp eq i8 %loadBr_42e019, 1
  br i1 %cmpBr_42e019, label %block_.L_42e034, label %block_42e01f

block_42e01f:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e01f	 Bytes: 4
  %loadMem_42e01f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e01f = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e01f)
  store %struct.Memory* %call_42e01f, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e023	 Bytes: 6
  %loadMem_42e023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e023 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e023)
  store %struct.Memory* %call_42e023, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e029	 Bytes: 3
  %loadMem_42e029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e029 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e029)
  store %struct.Memory* %call_42e029, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x7c(%rbp)	 RIP: 42e02c	 Bytes: 3
  %loadMem_42e02c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e02c = call %struct.Memory* @routine_movl__ecx__MINUS0x7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e02c)
  store %struct.Memory* %call_42e02c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e03a	 RIP: 42e02f	 Bytes: 5
  %loadMem_42e02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e02f = call %struct.Memory* @routine_jmpq_.L_42e03a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e02f, i64 11, i64 5)
  store %struct.Memory* %call_42e02f, %struct.Memory** %MEMORY

  br label %block_.L_42e03a

  ; Code: .L_42e034:	 RIP: 42e034	 Bytes: 0
block_.L_42e034:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e034	 Bytes: 3
  %loadMem_42e034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e034 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e034)
  store %struct.Memory* %call_42e034, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x7c(%rbp)	 RIP: 42e037	 Bytes: 3
  %loadMem_42e037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e037 = call %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e037)
  store %struct.Memory* %call_42e037, %struct.Memory** %MEMORY

  ; Code: .L_42e03a:	 RIP: 42e03a	 Bytes: 0
  br label %block_.L_42e03a
block_.L_42e03a:

  ; Code: movl -0x7c(%rbp), %eax	 RIP: 42e03a	 Bytes: 3
  %loadMem_42e03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e03a = call %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e03a)
  store %struct.Memory* %call_42e03a, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e03d	 Bytes: 2
  %loadMem_42e03d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e03d = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e03d)
  store %struct.Memory* %call_42e03d, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42e03f	 Bytes: 2
  %loadMem_42e03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e03f = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e03f)
  store %struct.Memory* %call_42e03f, %struct.Memory** %MEMORY

  ; Code: jle .L_42e051	 RIP: 42e041	 Bytes: 6
  %loadMem_42e041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e041 = call %struct.Memory* @routine_jle_.L_42e051(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e041, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_42e041, %struct.Memory** %MEMORY

  %loadBr_42e041 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e041 = icmp eq i8 %loadBr_42e041, 1
  br i1 %cmpBr_42e041, label %block_.L_42e051, label %block_42e047

block_42e047:
  ; Code: xorl %eax, %eax	 RIP: 42e047	 Bytes: 2
  %loadMem_42e047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e047 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e047)
  store %struct.Memory* %call_42e047, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x80(%rbp)	 RIP: 42e049	 Bytes: 3
  %loadMem_42e049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e049 = call %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e049)
  store %struct.Memory* %call_42e049, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e091	 RIP: 42e04c	 Bytes: 5
  %loadMem_42e04c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e04c = call %struct.Memory* @routine_jmpq_.L_42e091(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e04c, i64 69, i64 5)
  store %struct.Memory* %call_42e04c, %struct.Memory** %MEMORY

  br label %block_.L_42e091

  ; Code: .L_42e051:	 RIP: 42e051	 Bytes: 0
block_.L_42e051:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e051	 Bytes: 4
  %loadMem_42e051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e051 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e051)
  store %struct.Memory* %call_42e051, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e055	 Bytes: 6
  %loadMem_42e055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e055 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e055)
  store %struct.Memory* %call_42e055, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e05b	 Bytes: 3
  %loadMem_42e05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e05b = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e05b)
  store %struct.Memory* %call_42e05b, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %ecx	 RIP: 42e05e	 Bytes: 3
  %loadMem_42e05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e05e = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e05e)
  store %struct.Memory* %call_42e05e, %struct.Memory** %MEMORY

  ; Code: jge .L_42e07f	 RIP: 42e061	 Bytes: 6
  %loadMem_42e061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e061 = call %struct.Memory* @routine_jge_.L_42e07f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e061, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e061, %struct.Memory** %MEMORY

  %loadBr_42e061 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e061 = icmp eq i8 %loadBr_42e061, 1
  br i1 %cmpBr_42e061, label %block_.L_42e07f, label %block_42e067

block_42e067:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e067	 Bytes: 4
  %loadMem_42e067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e067 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e067)
  store %struct.Memory* %call_42e067, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e06b	 Bytes: 6
  %loadMem_42e06b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e06b = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e06b)
  store %struct.Memory* %call_42e06b, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e071	 Bytes: 3
  %loadMem_42e071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e071 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e071)
  store %struct.Memory* %call_42e071, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x84(%rbp)	 RIP: 42e074	 Bytes: 6
  %loadMem_42e074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e074 = call %struct.Memory* @routine_movl__ecx__MINUS0x84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e074)
  store %struct.Memory* %call_42e074, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e088	 RIP: 42e07a	 Bytes: 5
  %loadMem_42e07a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e07a = call %struct.Memory* @routine_jmpq_.L_42e088(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e07a, i64 14, i64 5)
  store %struct.Memory* %call_42e07a, %struct.Memory** %MEMORY

  br label %block_.L_42e088

  ; Code: .L_42e07f:	 RIP: 42e07f	 Bytes: 0
block_.L_42e07f:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e07f	 Bytes: 3
  %loadMem_42e07f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e07f = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e07f)
  store %struct.Memory* %call_42e07f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x84(%rbp)	 RIP: 42e082	 Bytes: 6
  %loadMem_42e082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e082 = call %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e082)
  store %struct.Memory* %call_42e082, %struct.Memory** %MEMORY

  ; Code: .L_42e088:	 RIP: 42e088	 Bytes: 0
  br label %block_.L_42e088
block_.L_42e088:

  ; Code: movl -0x84(%rbp), %eax	 RIP: 42e088	 Bytes: 6
  %loadMem_42e088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e088 = call %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e088)
  store %struct.Memory* %call_42e088, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x80(%rbp)	 RIP: 42e08e	 Bytes: 3
  %loadMem_42e08e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e08e = call %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e08e)
  store %struct.Memory* %call_42e08e, %struct.Memory** %MEMORY

  ; Code: .L_42e091:	 RIP: 42e091	 Bytes: 0
  br label %block_.L_42e091
block_.L_42e091:

  ; Code: movl -0x80(%rbp), %eax	 RIP: 42e091	 Bytes: 3
  %loadMem_42e091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e091 = call %struct.Memory* @routine_movl_MINUS0x80__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e091)
  store %struct.Memory* %call_42e091, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e094	 Bytes: 3
  %loadMem_42e094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e094 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e094)
  store %struct.Memory* %call_42e094, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %rdx	 RIP: 42e097	 Bytes: 4
  %loadMem_42e097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e097 = call %struct.Memory* @routine_movq_MINUS0x78__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e097)
  store %struct.Memory* %call_42e097, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rcx,2), %eax	 RIP: 42e09b	 Bytes: 4
  %loadMem_42e09b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e09b = call %struct.Memory* @routine_movzwl___rdx__rcx_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e09b)
  store %struct.Memory* %call_42e09b, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rcx	 RIP: 42e09f	 Bytes: 4
  %loadMem_42e09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e09f = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e09f)
  store %struct.Memory* %call_42e09f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 42e0a3	 Bytes: 4
  %loadMem_42e0a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0a3 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0a3)
  store %struct.Memory* %call_42e0a3, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 42e0a7	 Bytes: 4
  %loadMem_42e0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0a7 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0a7)
  store %struct.Memory* %call_42e0a7, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rsi	 RIP: 42e0ab	 Bytes: 4
  %loadMem_42e0ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0ab = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0ab)
  store %struct.Memory* %call_42e0ab, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rsi), %edi	 RIP: 42e0af	 Bytes: 6
  %loadMem_42e0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0af = call %struct.Memory* @routine_movl_0x18f8__rsi____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0af)
  store %struct.Memory* %call_42e0af, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edi	 RIP: 42e0b5	 Bytes: 3
  %loadMem_42e0b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0b5 = call %struct.Memory* @routine_subl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0b5)
  store %struct.Memory* %call_42e0b5, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r8d	 RIP: 42e0b8	 Bytes: 4
  %loadMem_42e0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0b8 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0b8)
  store %struct.Memory* %call_42e0b8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %r8d	 RIP: 42e0bc	 Bytes: 4
  %loadMem_42e0bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0bc = call %struct.Memory* @routine_addl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0bc)
  store %struct.Memory* %call_42e0bc, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %edi	 RIP: 42e0c0	 Bytes: 3
  %loadMem_42e0c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0c0 = call %struct.Memory* @routine_cmpl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0c0)
  store %struct.Memory* %call_42e0c0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x88(%rbp)	 RIP: 42e0c3	 Bytes: 6
  %loadMem_42e0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0c3 = call %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0c3)
  store %struct.Memory* %call_42e0c3, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x90(%rbp)	 RIP: 42e0c9	 Bytes: 7
  %loadMem_42e0c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0c9 = call %struct.Memory* @routine_movq__rcx__MINUS0x90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0c9)
  store %struct.Memory* %call_42e0c9, %struct.Memory** %MEMORY

  ; Code: jge .L_42e0ee	 RIP: 42e0d0	 Bytes: 6
  %loadMem_42e0d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0d0 = call %struct.Memory* @routine_jge_.L_42e0ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0d0, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e0d0, %struct.Memory** %MEMORY

  %loadBr_42e0d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e0d0 = icmp eq i8 %loadBr_42e0d0, 1
  br i1 %cmpBr_42e0d0, label %block_.L_42e0ee, label %block_42e0d6

block_42e0d6:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e0d6	 Bytes: 4
  %loadMem_42e0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0d6 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0d6)
  store %struct.Memory* %call_42e0d6, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e0da	 Bytes: 6
  %loadMem_42e0da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0da = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0da)
  store %struct.Memory* %call_42e0da, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e0e0	 Bytes: 3
  %loadMem_42e0e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0e0 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0e0)
  store %struct.Memory* %call_42e0e0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x94(%rbp)	 RIP: 42e0e3	 Bytes: 6
  %loadMem_42e0e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0e3 = call %struct.Memory* @routine_movl__ecx__MINUS0x94__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0e3)
  store %struct.Memory* %call_42e0e3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e0fa	 RIP: 42e0e9	 Bytes: 5
  %loadMem_42e0e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0e9 = call %struct.Memory* @routine_jmpq_.L_42e0fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0e9, i64 17, i64 5)
  store %struct.Memory* %call_42e0e9, %struct.Memory** %MEMORY

  br label %block_.L_42e0fa

  ; Code: .L_42e0ee:	 RIP: 42e0ee	 Bytes: 0
block_.L_42e0ee:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e0ee	 Bytes: 3
  %loadMem_42e0ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0ee = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0ee)
  store %struct.Memory* %call_42e0ee, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42e0f1	 Bytes: 3
  %loadMem_42e0f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0f1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0f1)
  store %struct.Memory* %call_42e0f1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x94(%rbp)	 RIP: 42e0f4	 Bytes: 6
  %loadMem_42e0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0f4 = call %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0f4)
  store %struct.Memory* %call_42e0f4, %struct.Memory** %MEMORY

  ; Code: .L_42e0fa:	 RIP: 42e0fa	 Bytes: 0
  br label %block_.L_42e0fa
block_.L_42e0fa:

  ; Code: movl -0x94(%rbp), %eax	 RIP: 42e0fa	 Bytes: 6
  %loadMem_42e0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e0fa = call %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e0fa)
  store %struct.Memory* %call_42e0fa, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e100	 Bytes: 2
  %loadMem_42e100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e100 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e100)
  store %struct.Memory* %call_42e100, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42e102	 Bytes: 2
  %loadMem_42e102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e102 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e102)
  store %struct.Memory* %call_42e102, %struct.Memory** %MEMORY

  ; Code: jle .L_42e117	 RIP: 42e104	 Bytes: 6
  %loadMem_42e104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e104 = call %struct.Memory* @routine_jle_.L_42e117(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e104, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e104, %struct.Memory** %MEMORY

  %loadBr_42e104 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e104 = icmp eq i8 %loadBr_42e104, 1
  br i1 %cmpBr_42e104, label %block_.L_42e117, label %block_42e10a

block_42e10a:
  ; Code: xorl %eax, %eax	 RIP: 42e10a	 Bytes: 2
  %loadMem_42e10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e10a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e10a)
  store %struct.Memory* %call_42e10a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x98(%rbp)	 RIP: 42e10c	 Bytes: 6
  %loadMem_42e10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e10c = call %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e10c)
  store %struct.Memory* %call_42e10c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e162	 RIP: 42e112	 Bytes: 5
  %loadMem_42e112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e112 = call %struct.Memory* @routine_jmpq_.L_42e162(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e112, i64 80, i64 5)
  store %struct.Memory* %call_42e112, %struct.Memory** %MEMORY

  br label %block_.L_42e162

  ; Code: .L_42e117:	 RIP: 42e117	 Bytes: 0
block_.L_42e117:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e117	 Bytes: 4
  %loadMem_42e117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e117 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e117)
  store %struct.Memory* %call_42e117, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e11b	 Bytes: 6
  %loadMem_42e11b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e11b = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e11b)
  store %struct.Memory* %call_42e11b, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e121	 Bytes: 3
  %loadMem_42e121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e121 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e121)
  store %struct.Memory* %call_42e121, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42e124	 Bytes: 3
  %loadMem_42e124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e124 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e124)
  store %struct.Memory* %call_42e124, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 42e127	 Bytes: 3
  %loadMem_42e127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e127 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e127)
  store %struct.Memory* %call_42e127, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42e12a	 Bytes: 2
  %loadMem_42e12a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e12a = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e12a)
  store %struct.Memory* %call_42e12a, %struct.Memory** %MEMORY

  ; Code: jge .L_42e14a	 RIP: 42e12c	 Bytes: 6
  %loadMem_42e12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e12c = call %struct.Memory* @routine_jge_.L_42e14a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e12c, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e12c, %struct.Memory** %MEMORY

  %loadBr_42e12c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e12c = icmp eq i8 %loadBr_42e12c, 1
  br i1 %cmpBr_42e12c, label %block_.L_42e14a, label %block_42e132

block_42e132:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e132	 Bytes: 4
  %loadMem_42e132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e132 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e132)
  store %struct.Memory* %call_42e132, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e136	 Bytes: 6
  %loadMem_42e136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e136 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e136)
  store %struct.Memory* %call_42e136, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e13c	 Bytes: 3
  %loadMem_42e13c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e13c = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e13c)
  store %struct.Memory* %call_42e13c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x9c(%rbp)	 RIP: 42e13f	 Bytes: 6
  %loadMem_42e13f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e13f = call %struct.Memory* @routine_movl__ecx__MINUS0x9c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e13f)
  store %struct.Memory* %call_42e13f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e156	 RIP: 42e145	 Bytes: 5
  %loadMem_42e145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e145 = call %struct.Memory* @routine_jmpq_.L_42e156(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e145, i64 17, i64 5)
  store %struct.Memory* %call_42e145, %struct.Memory** %MEMORY

  br label %block_.L_42e156

  ; Code: .L_42e14a:	 RIP: 42e14a	 Bytes: 0
block_.L_42e14a:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e14a	 Bytes: 3
  %loadMem_42e14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e14a = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e14a)
  store %struct.Memory* %call_42e14a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42e14d	 Bytes: 3
  %loadMem_42e14d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e14d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e14d)
  store %struct.Memory* %call_42e14d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x9c(%rbp)	 RIP: 42e150	 Bytes: 6
  %loadMem_42e150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e150 = call %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e150)
  store %struct.Memory* %call_42e150, %struct.Memory** %MEMORY

  ; Code: .L_42e156:	 RIP: 42e156	 Bytes: 0
  br label %block_.L_42e156
block_.L_42e156:

  ; Code: movl -0x9c(%rbp), %eax	 RIP: 42e156	 Bytes: 6
  %loadMem_42e156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e156 = call %struct.Memory* @routine_movl_MINUS0x9c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e156)
  store %struct.Memory* %call_42e156, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x98(%rbp)	 RIP: 42e15c	 Bytes: 6
  %loadMem_42e15c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e15c = call %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e15c)
  store %struct.Memory* %call_42e15c, %struct.Memory** %MEMORY

  ; Code: .L_42e162:	 RIP: 42e162	 Bytes: 0
  br label %block_.L_42e162
block_.L_42e162:

  ; Code: movl -0x98(%rbp), %eax	 RIP: 42e162	 Bytes: 6
  %loadMem_42e162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e162 = call %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e162)
  store %struct.Memory* %call_42e162, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e168	 Bytes: 3
  %loadMem_42e168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e168 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e168)
  store %struct.Memory* %call_42e168, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rdx	 RIP: 42e16b	 Bytes: 7
  %loadMem_42e16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e16b = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e16b)
  store %struct.Memory* %call_42e16b, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rcx,2), %eax	 RIP: 42e172	 Bytes: 4
  %loadMem_42e172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e172 = call %struct.Memory* @routine_movzwl___rdx__rcx_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e172)
  store %struct.Memory* %call_42e172, %struct.Memory** %MEMORY

  ; Code: movl -0x88(%rbp), %esi	 RIP: 42e176	 Bytes: 6
  %loadMem_42e176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e176 = call %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e176)
  store %struct.Memory* %call_42e176, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 42e17c	 Bytes: 2
  %loadMem_42e17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e17c = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e17c)
  store %struct.Memory* %call_42e17c, %struct.Memory** %MEMORY

  ; Code: movl -0x70(%rbp), %eax	 RIP: 42e17e	 Bytes: 3
  %loadMem_42e17e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e17e = call %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e17e)
  store %struct.Memory* %call_42e17e, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 42e181	 Bytes: 3
  %loadMem_42e181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e181 = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e181)
  store %struct.Memory* %call_42e181, %struct.Memory** %MEMORY

  ; Code: movl 0x4b8c58, %esi	 RIP: 42e184	 Bytes: 7
  %loadMem_42e184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e184 = call %struct.Memory* @routine_movl_0x4b8c58___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e184)
  store %struct.Memory* %call_42e184, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rcx	 RIP: 42e18b	 Bytes: 4
  %loadMem_42e18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e18b = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e18b)
  store %struct.Memory* %call_42e18b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 42e18f	 Bytes: 4
  %loadMem_42e18f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e18f = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e18f)
  store %struct.Memory* %call_42e18f, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdi,8), %rcx	 RIP: 42e193	 Bytes: 4
  %loadMem_42e193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e193 = call %struct.Memory* @routine_movq___rcx__rdi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e193)
  store %struct.Memory* %call_42e193, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 42e197	 Bytes: 4
  %loadMem_42e197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e197 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e197)
  store %struct.Memory* %call_42e197, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rdi), %r8d	 RIP: 42e19b	 Bytes: 7
  %loadMem_42e19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e19b = call %struct.Memory* @routine_movl_0x18f8__rdi____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e19b)
  store %struct.Memory* %call_42e19b, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %r8d	 RIP: 42e1a2	 Bytes: 4
  %loadMem_42e1a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1a2 = call %struct.Memory* @routine_subl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1a2)
  store %struct.Memory* %call_42e1a2, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r9d	 RIP: 42e1a6	 Bytes: 4
  %loadMem_42e1a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1a6 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1a6)
  store %struct.Memory* %call_42e1a6, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %r9d	 RIP: 42e1aa	 Bytes: 4
  %loadMem_42e1aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1aa = call %struct.Memory* @routine_subl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1aa)
  store %struct.Memory* %call_42e1aa, %struct.Memory** %MEMORY

  ; Code: cmpl %r9d, %r8d	 RIP: 42e1ae	 Bytes: 3
  %loadMem_42e1ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1ae = call %struct.Memory* @routine_cmpl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1ae)
  store %struct.Memory* %call_42e1ae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xa0(%rbp)	 RIP: 42e1b1	 Bytes: 6
  %loadMem_42e1b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1b1 = call %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1b1)
  store %struct.Memory* %call_42e1b1, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0xa4(%rbp)	 RIP: 42e1b7	 Bytes: 6
  %loadMem_42e1b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1b7 = call %struct.Memory* @routine_movl__esi__MINUS0xa4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1b7)
  store %struct.Memory* %call_42e1b7, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0xb0(%rbp)	 RIP: 42e1bd	 Bytes: 7
  %loadMem_42e1bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1bd = call %struct.Memory* @routine_movq__rcx__MINUS0xb0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1bd)
  store %struct.Memory* %call_42e1bd, %struct.Memory** %MEMORY

  ; Code: jge .L_42e1e2	 RIP: 42e1c4	 Bytes: 6
  %loadMem_42e1c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1c4 = call %struct.Memory* @routine_jge_.L_42e1e2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1c4, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e1c4, %struct.Memory** %MEMORY

  %loadBr_42e1c4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e1c4 = icmp eq i8 %loadBr_42e1c4, 1
  br i1 %cmpBr_42e1c4, label %block_.L_42e1e2, label %block_42e1ca

block_42e1ca:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e1ca	 Bytes: 4
  %loadMem_42e1ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1ca = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1ca)
  store %struct.Memory* %call_42e1ca, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e1ce	 Bytes: 6
  %loadMem_42e1ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1ce = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1ce)
  store %struct.Memory* %call_42e1ce, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e1d4	 Bytes: 3
  %loadMem_42e1d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1d4 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1d4)
  store %struct.Memory* %call_42e1d4, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xb4(%rbp)	 RIP: 42e1d7	 Bytes: 6
  %loadMem_42e1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1d7 = call %struct.Memory* @routine_movl__ecx__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1d7)
  store %struct.Memory* %call_42e1d7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e1ee	 RIP: 42e1dd	 Bytes: 5
  %loadMem_42e1dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1dd = call %struct.Memory* @routine_jmpq_.L_42e1ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1dd, i64 17, i64 5)
  store %struct.Memory* %call_42e1dd, %struct.Memory** %MEMORY

  br label %block_.L_42e1ee

  ; Code: .L_42e1e2:	 RIP: 42e1e2	 Bytes: 0
block_.L_42e1e2:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e1e2	 Bytes: 3
  %loadMem_42e1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1e2 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1e2)
  store %struct.Memory* %call_42e1e2, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 42e1e5	 Bytes: 3
  %loadMem_42e1e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1e5 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1e5)
  store %struct.Memory* %call_42e1e5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb4(%rbp)	 RIP: 42e1e8	 Bytes: 6
  %loadMem_42e1e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1e8 = call %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1e8)
  store %struct.Memory* %call_42e1e8, %struct.Memory** %MEMORY

  ; Code: .L_42e1ee:	 RIP: 42e1ee	 Bytes: 0
  br label %block_.L_42e1ee
block_.L_42e1ee:

  ; Code: movl -0xb4(%rbp), %eax	 RIP: 42e1ee	 Bytes: 6
  %loadMem_42e1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1ee = call %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1ee)
  store %struct.Memory* %call_42e1ee, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e1f4	 Bytes: 2
  %loadMem_42e1f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1f4 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1f4)
  store %struct.Memory* %call_42e1f4, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42e1f6	 Bytes: 2
  %loadMem_42e1f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1f6 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1f6)
  store %struct.Memory* %call_42e1f6, %struct.Memory** %MEMORY

  ; Code: jle .L_42e20b	 RIP: 42e1f8	 Bytes: 6
  %loadMem_42e1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1f8 = call %struct.Memory* @routine_jle_.L_42e20b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1f8, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e1f8, %struct.Memory** %MEMORY

  %loadBr_42e1f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e1f8 = icmp eq i8 %loadBr_42e1f8, 1
  br i1 %cmpBr_42e1f8, label %block_.L_42e20b, label %block_42e1fe

block_42e1fe:
  ; Code: xorl %eax, %eax	 RIP: 42e1fe	 Bytes: 2
  %loadMem_42e1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e1fe = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e1fe)
  store %struct.Memory* %call_42e1fe, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 42e200	 Bytes: 6
  %loadMem_42e200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e200 = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e200)
  store %struct.Memory* %call_42e200, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e256	 RIP: 42e206	 Bytes: 5
  %loadMem_42e206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e206 = call %struct.Memory* @routine_jmpq_.L_42e256(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e206, i64 80, i64 5)
  store %struct.Memory* %call_42e206, %struct.Memory** %MEMORY

  br label %block_.L_42e256

  ; Code: .L_42e20b:	 RIP: 42e20b	 Bytes: 0
block_.L_42e20b:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e20b	 Bytes: 4
  %loadMem_42e20b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e20b = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e20b)
  store %struct.Memory* %call_42e20b, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e20f	 Bytes: 6
  %loadMem_42e20f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e20f = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e20f)
  store %struct.Memory* %call_42e20f, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e215	 Bytes: 3
  %loadMem_42e215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e215 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e215)
  store %struct.Memory* %call_42e215, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42e218	 Bytes: 3
  %loadMem_42e218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e218 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e218)
  store %struct.Memory* %call_42e218, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edx	 RIP: 42e21b	 Bytes: 3
  %loadMem_42e21b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e21b = call %struct.Memory* @routine_subl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e21b)
  store %struct.Memory* %call_42e21b, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42e21e	 Bytes: 2
  %loadMem_42e21e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e21e = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e21e)
  store %struct.Memory* %call_42e21e, %struct.Memory** %MEMORY

  ; Code: jge .L_42e23e	 RIP: 42e220	 Bytes: 6
  %loadMem_42e220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e220 = call %struct.Memory* @routine_jge_.L_42e23e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e220, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e220, %struct.Memory** %MEMORY

  %loadBr_42e220 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e220 = icmp eq i8 %loadBr_42e220, 1
  br i1 %cmpBr_42e220, label %block_.L_42e23e, label %block_42e226

block_42e226:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e226	 Bytes: 4
  %loadMem_42e226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e226 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e226)
  store %struct.Memory* %call_42e226, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e22a	 Bytes: 6
  %loadMem_42e22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e22a = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e22a)
  store %struct.Memory* %call_42e22a, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e230	 Bytes: 3
  %loadMem_42e230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e230 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e230)
  store %struct.Memory* %call_42e230, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xbc(%rbp)	 RIP: 42e233	 Bytes: 6
  %loadMem_42e233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e233 = call %struct.Memory* @routine_movl__ecx__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e233)
  store %struct.Memory* %call_42e233, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e24a	 RIP: 42e239	 Bytes: 5
  %loadMem_42e239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e239 = call %struct.Memory* @routine_jmpq_.L_42e24a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e239, i64 17, i64 5)
  store %struct.Memory* %call_42e239, %struct.Memory** %MEMORY

  br label %block_.L_42e24a

  ; Code: .L_42e23e:	 RIP: 42e23e	 Bytes: 0
block_.L_42e23e:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e23e	 Bytes: 3
  %loadMem_42e23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e23e = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e23e)
  store %struct.Memory* %call_42e23e, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 42e241	 Bytes: 3
  %loadMem_42e241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e241 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e241)
  store %struct.Memory* %call_42e241, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xbc(%rbp)	 RIP: 42e244	 Bytes: 6
  %loadMem_42e244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e244 = call %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e244)
  store %struct.Memory* %call_42e244, %struct.Memory** %MEMORY

  ; Code: .L_42e24a:	 RIP: 42e24a	 Bytes: 0
  br label %block_.L_42e24a
block_.L_42e24a:

  ; Code: movl -0xbc(%rbp), %eax	 RIP: 42e24a	 Bytes: 6
  %loadMem_42e24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e24a = call %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e24a)
  store %struct.Memory* %call_42e24a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xb8(%rbp)	 RIP: 42e250	 Bytes: 6
  %loadMem_42e250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e250 = call %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e250)
  store %struct.Memory* %call_42e250, %struct.Memory** %MEMORY

  ; Code: .L_42e256:	 RIP: 42e256	 Bytes: 0
  br label %block_.L_42e256
block_.L_42e256:

  ; Code: movl -0xb8(%rbp), %eax	 RIP: 42e256	 Bytes: 6
  %loadMem_42e256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e256 = call %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e256)
  store %struct.Memory* %call_42e256, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e25c	 Bytes: 3
  %loadMem_42e25c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e25c = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e25c)
  store %struct.Memory* %call_42e25c, %struct.Memory** %MEMORY

  ; Code: movq -0xb0(%rbp), %rdx	 RIP: 42e25f	 Bytes: 7
  %loadMem_42e25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e25f = call %struct.Memory* @routine_movq_MINUS0xb0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e25f)
  store %struct.Memory* %call_42e25f, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rcx,2), %eax	 RIP: 42e266	 Bytes: 4
  %loadMem_42e266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e266 = call %struct.Memory* @routine_movzwl___rdx__rcx_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e266)
  store %struct.Memory* %call_42e266, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rcx	 RIP: 42e26a	 Bytes: 4
  %loadMem_42e26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e26a = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e26a)
  store %struct.Memory* %call_42e26a, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 42e26e	 Bytes: 4
  %loadMem_42e26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e26e = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e26e)
  store %struct.Memory* %call_42e26e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 42e272	 Bytes: 4
  %loadMem_42e272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e272 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e272)
  store %struct.Memory* %call_42e272, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rsi	 RIP: 42e276	 Bytes: 4
  %loadMem_42e276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e276 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e276)
  store %struct.Memory* %call_42e276, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rsi), %edi	 RIP: 42e27a	 Bytes: 6
  %loadMem_42e27a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e27a = call %struct.Memory* @routine_movl_0x18f8__rsi____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e27a)
  store %struct.Memory* %call_42e27a, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edi	 RIP: 42e280	 Bytes: 3
  %loadMem_42e280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e280 = call %struct.Memory* @routine_subl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e280)
  store %struct.Memory* %call_42e280, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r8d	 RIP: 42e283	 Bytes: 4
  %loadMem_42e283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e283 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e283)
  store %struct.Memory* %call_42e283, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %r8d	 RIP: 42e287	 Bytes: 4
  %loadMem_42e287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e287 = call %struct.Memory* @routine_addl__0x2___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e287)
  store %struct.Memory* %call_42e287, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %edi	 RIP: 42e28b	 Bytes: 3
  %loadMem_42e28b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e28b = call %struct.Memory* @routine_cmpl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e28b)
  store %struct.Memory* %call_42e28b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc0(%rbp)	 RIP: 42e28e	 Bytes: 6
  %loadMem_42e28e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e28e = call %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e28e)
  store %struct.Memory* %call_42e28e, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0xc8(%rbp)	 RIP: 42e294	 Bytes: 7
  %loadMem_42e294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e294 = call %struct.Memory* @routine_movq__rcx__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e294)
  store %struct.Memory* %call_42e294, %struct.Memory** %MEMORY

  ; Code: jge .L_42e2b9	 RIP: 42e29b	 Bytes: 6
  %loadMem_42e29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e29b = call %struct.Memory* @routine_jge_.L_42e2b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e29b, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e29b, %struct.Memory** %MEMORY

  %loadBr_42e29b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e29b = icmp eq i8 %loadBr_42e29b, 1
  br i1 %cmpBr_42e29b, label %block_.L_42e2b9, label %block_42e2a1

block_42e2a1:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e2a1	 Bytes: 4
  %loadMem_42e2a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2a1 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2a1)
  store %struct.Memory* %call_42e2a1, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e2a5	 Bytes: 6
  %loadMem_42e2a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2a5 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2a5)
  store %struct.Memory* %call_42e2a5, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e2ab	 Bytes: 3
  %loadMem_42e2ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2ab = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2ab)
  store %struct.Memory* %call_42e2ab, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xcc(%rbp)	 RIP: 42e2ae	 Bytes: 6
  %loadMem_42e2ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2ae = call %struct.Memory* @routine_movl__ecx__MINUS0xcc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2ae)
  store %struct.Memory* %call_42e2ae, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e2c5	 RIP: 42e2b4	 Bytes: 5
  %loadMem_42e2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2b4 = call %struct.Memory* @routine_jmpq_.L_42e2c5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2b4, i64 17, i64 5)
  store %struct.Memory* %call_42e2b4, %struct.Memory** %MEMORY

  br label %block_.L_42e2c5

  ; Code: .L_42e2b9:	 RIP: 42e2b9	 Bytes: 0
block_.L_42e2b9:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e2b9	 Bytes: 3
  %loadMem_42e2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2b9 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2b9)
  store %struct.Memory* %call_42e2b9, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42e2bc	 Bytes: 3
  %loadMem_42e2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2bc = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2bc)
  store %struct.Memory* %call_42e2bc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xcc(%rbp)	 RIP: 42e2bf	 Bytes: 6
  %loadMem_42e2bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2bf = call %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2bf)
  store %struct.Memory* %call_42e2bf, %struct.Memory** %MEMORY

  ; Code: .L_42e2c5:	 RIP: 42e2c5	 Bytes: 0
  br label %block_.L_42e2c5
block_.L_42e2c5:

  ; Code: movl -0xcc(%rbp), %eax	 RIP: 42e2c5	 Bytes: 6
  %loadMem_42e2c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2c5 = call %struct.Memory* @routine_movl_MINUS0xcc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2c5)
  store %struct.Memory* %call_42e2c5, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e2cb	 Bytes: 2
  %loadMem_42e2cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2cb = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2cb)
  store %struct.Memory* %call_42e2cb, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42e2cd	 Bytes: 2
  %loadMem_42e2cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2cd = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2cd)
  store %struct.Memory* %call_42e2cd, %struct.Memory** %MEMORY

  ; Code: jle .L_42e2e2	 RIP: 42e2cf	 Bytes: 6
  %loadMem_42e2cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2cf = call %struct.Memory* @routine_jle_.L_42e2e2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2cf, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e2cf, %struct.Memory** %MEMORY

  %loadBr_42e2cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e2cf = icmp eq i8 %loadBr_42e2cf, 1
  br i1 %cmpBr_42e2cf, label %block_.L_42e2e2, label %block_42e2d5

block_42e2d5:
  ; Code: xorl %eax, %eax	 RIP: 42e2d5	 Bytes: 2
  %loadMem_42e2d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2d5 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2d5)
  store %struct.Memory* %call_42e2d5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd0(%rbp)	 RIP: 42e2d7	 Bytes: 6
  %loadMem_42e2d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2d7 = call %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2d7)
  store %struct.Memory* %call_42e2d7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e32d	 RIP: 42e2dd	 Bytes: 5
  %loadMem_42e2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2dd = call %struct.Memory* @routine_jmpq_.L_42e32d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2dd, i64 80, i64 5)
  store %struct.Memory* %call_42e2dd, %struct.Memory** %MEMORY

  br label %block_.L_42e32d

  ; Code: .L_42e2e2:	 RIP: 42e2e2	 Bytes: 0
block_.L_42e2e2:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e2e2	 Bytes: 4
  %loadMem_42e2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2e2 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2e2)
  store %struct.Memory* %call_42e2e2, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e2e6	 Bytes: 6
  %loadMem_42e2e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2e6 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2e6)
  store %struct.Memory* %call_42e2e6, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e2ec	 Bytes: 3
  %loadMem_42e2ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2ec = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2ec)
  store %struct.Memory* %call_42e2ec, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42e2ef	 Bytes: 3
  %loadMem_42e2ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2ef = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2ef)
  store %struct.Memory* %call_42e2ef, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42e2f2	 Bytes: 3
  %loadMem_42e2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2f2 = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2f2)
  store %struct.Memory* %call_42e2f2, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42e2f5	 Bytes: 2
  %loadMem_42e2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2f5 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2f5)
  store %struct.Memory* %call_42e2f5, %struct.Memory** %MEMORY

  ; Code: jge .L_42e315	 RIP: 42e2f7	 Bytes: 6
  %loadMem_42e2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2f7 = call %struct.Memory* @routine_jge_.L_42e315(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2f7, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e2f7, %struct.Memory** %MEMORY

  %loadBr_42e2f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e2f7 = icmp eq i8 %loadBr_42e2f7, 1
  br i1 %cmpBr_42e2f7, label %block_.L_42e315, label %block_42e2fd

block_42e2fd:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e2fd	 Bytes: 4
  %loadMem_42e2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e2fd = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e2fd)
  store %struct.Memory* %call_42e2fd, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e301	 Bytes: 6
  %loadMem_42e301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e301 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e301)
  store %struct.Memory* %call_42e301, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e307	 Bytes: 3
  %loadMem_42e307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e307 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e307)
  store %struct.Memory* %call_42e307, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xd4(%rbp)	 RIP: 42e30a	 Bytes: 6
  %loadMem_42e30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e30a = call %struct.Memory* @routine_movl__ecx__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e30a)
  store %struct.Memory* %call_42e30a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e321	 RIP: 42e310	 Bytes: 5
  %loadMem_42e310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e310 = call %struct.Memory* @routine_jmpq_.L_42e321(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e310, i64 17, i64 5)
  store %struct.Memory* %call_42e310, %struct.Memory** %MEMORY

  br label %block_.L_42e321

  ; Code: .L_42e315:	 RIP: 42e315	 Bytes: 0
block_.L_42e315:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e315	 Bytes: 3
  %loadMem_42e315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e315 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e315)
  store %struct.Memory* %call_42e315, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42e318	 Bytes: 3
  %loadMem_42e318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e318 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e318)
  store %struct.Memory* %call_42e318, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4(%rbp)	 RIP: 42e31b	 Bytes: 6
  %loadMem_42e31b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e31b = call %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e31b)
  store %struct.Memory* %call_42e31b, %struct.Memory** %MEMORY

  ; Code: .L_42e321:	 RIP: 42e321	 Bytes: 0
  br label %block_.L_42e321
block_.L_42e321:

  ; Code: movl -0xd4(%rbp), %eax	 RIP: 42e321	 Bytes: 6
  %loadMem_42e321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e321 = call %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e321)
  store %struct.Memory* %call_42e321, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd0(%rbp)	 RIP: 42e327	 Bytes: 6
  %loadMem_42e327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e327 = call %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e327)
  store %struct.Memory* %call_42e327, %struct.Memory** %MEMORY

  ; Code: .L_42e32d:	 RIP: 42e32d	 Bytes: 0
  br label %block_.L_42e32d
block_.L_42e32d:

  ; Code: movl -0xd0(%rbp), %eax	 RIP: 42e32d	 Bytes: 6
  %loadMem_42e32d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e32d = call %struct.Memory* @routine_movl_MINUS0xd0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e32d)
  store %struct.Memory* %call_42e32d, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e333	 Bytes: 3
  %loadMem_42e333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e333 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e333)
  store %struct.Memory* %call_42e333, %struct.Memory** %MEMORY

  ; Code: movq -0xc8(%rbp), %rdx	 RIP: 42e336	 Bytes: 7
  %loadMem_42e336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e336 = call %struct.Memory* @routine_movq_MINUS0xc8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e336)
  store %struct.Memory* %call_42e336, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rcx,2), %eax	 RIP: 42e33d	 Bytes: 4
  %loadMem_42e33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e33d = call %struct.Memory* @routine_movzwl___rdx__rcx_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e33d)
  store %struct.Memory* %call_42e33d, %struct.Memory** %MEMORY

  ; Code: movl -0xc0(%rbp), %esi	 RIP: 42e341	 Bytes: 6
  %loadMem_42e341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e341 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e341)
  store %struct.Memory* %call_42e341, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 42e347	 Bytes: 2
  %loadMem_42e347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e347 = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e347)
  store %struct.Memory* %call_42e347, %struct.Memory** %MEMORY

  ; Code: movl -0xa4(%rbp), %eax	 RIP: 42e349	 Bytes: 6
  %loadMem_42e349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e349 = call %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e349)
  store %struct.Memory* %call_42e349, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 42e34f	 Bytes: 3
  %loadMem_42e34f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e34f = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e34f)
  store %struct.Memory* %call_42e34f, %struct.Memory** %MEMORY

  ; Code: movl -0xa0(%rbp), %esi	 RIP: 42e352	 Bytes: 6
  %loadMem_42e352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e352 = call %struct.Memory* @routine_movl_MINUS0xa0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e352)
  store %struct.Memory* %call_42e352, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 42e358	 Bytes: 2
  %loadMem_42e358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e358 = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e358)
  store %struct.Memory* %call_42e358, %struct.Memory** %MEMORY

  ; Code: movl 0x4b8c60, %eax	 RIP: 42e35a	 Bytes: 7
  %loadMem_42e35a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e35a = call %struct.Memory* @routine_movl_0x4b8c60___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e35a)
  store %struct.Memory* %call_42e35a, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rcx	 RIP: 42e361	 Bytes: 4
  %loadMem_42e361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e361 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e361)
  store %struct.Memory* %call_42e361, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 42e365	 Bytes: 4
  %loadMem_42e365 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e365 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e365)
  store %struct.Memory* %call_42e365, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdi,8), %rcx	 RIP: 42e369	 Bytes: 4
  %loadMem_42e369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e369 = call %struct.Memory* @routine_movq___rcx__rdi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e369)
  store %struct.Memory* %call_42e369, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 42e36d	 Bytes: 4
  %loadMem_42e36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e36d = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e36d)
  store %struct.Memory* %call_42e36d, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rdi), %r8d	 RIP: 42e371	 Bytes: 7
  %loadMem_42e371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e371 = call %struct.Memory* @routine_movl_0x18f8__rdi____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e371)
  store %struct.Memory* %call_42e371, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %r8d	 RIP: 42e378	 Bytes: 4
  %loadMem_42e378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e378 = call %struct.Memory* @routine_subl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e378)
  store %struct.Memory* %call_42e378, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r9d	 RIP: 42e37c	 Bytes: 4
  %loadMem_42e37c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e37c = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e37c)
  store %struct.Memory* %call_42e37c, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %r9d	 RIP: 42e380	 Bytes: 4
  %loadMem_42e380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e380 = call %struct.Memory* @routine_subl__0x2___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e380)
  store %struct.Memory* %call_42e380, %struct.Memory** %MEMORY

  ; Code: cmpl %r9d, %r8d	 RIP: 42e384	 Bytes: 3
  %loadMem_42e384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e384 = call %struct.Memory* @routine_cmpl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e384)
  store %struct.Memory* %call_42e384, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0xd8(%rbp)	 RIP: 42e387	 Bytes: 6
  %loadMem_42e387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e387 = call %struct.Memory* @routine_movl__esi__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e387)
  store %struct.Memory* %call_42e387, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xdc(%rbp)	 RIP: 42e38d	 Bytes: 6
  %loadMem_42e38d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e38d = call %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e38d)
  store %struct.Memory* %call_42e38d, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0xe8(%rbp)	 RIP: 42e393	 Bytes: 7
  %loadMem_42e393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e393 = call %struct.Memory* @routine_movq__rcx__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e393)
  store %struct.Memory* %call_42e393, %struct.Memory** %MEMORY

  ; Code: jge .L_42e3b8	 RIP: 42e39a	 Bytes: 6
  %loadMem_42e39a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e39a = call %struct.Memory* @routine_jge_.L_42e3b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e39a, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e39a, %struct.Memory** %MEMORY

  %loadBr_42e39a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e39a = icmp eq i8 %loadBr_42e39a, 1
  br i1 %cmpBr_42e39a, label %block_.L_42e3b8, label %block_42e3a0

block_42e3a0:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e3a0	 Bytes: 4
  %loadMem_42e3a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3a0 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3a0)
  store %struct.Memory* %call_42e3a0, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e3a4	 Bytes: 6
  %loadMem_42e3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3a4 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3a4)
  store %struct.Memory* %call_42e3a4, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e3aa	 Bytes: 3
  %loadMem_42e3aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3aa = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3aa)
  store %struct.Memory* %call_42e3aa, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xec(%rbp)	 RIP: 42e3ad	 Bytes: 6
  %loadMem_42e3ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3ad = call %struct.Memory* @routine_movl__ecx__MINUS0xec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3ad)
  store %struct.Memory* %call_42e3ad, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e3c4	 RIP: 42e3b3	 Bytes: 5
  %loadMem_42e3b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3b3 = call %struct.Memory* @routine_jmpq_.L_42e3c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3b3, i64 17, i64 5)
  store %struct.Memory* %call_42e3b3, %struct.Memory** %MEMORY

  br label %block_.L_42e3c4

  ; Code: .L_42e3b8:	 RIP: 42e3b8	 Bytes: 0
block_.L_42e3b8:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e3b8	 Bytes: 3
  %loadMem_42e3b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3b8 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3b8)
  store %struct.Memory* %call_42e3b8, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %eax	 RIP: 42e3bb	 Bytes: 3
  %loadMem_42e3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3bb = call %struct.Memory* @routine_subl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3bb)
  store %struct.Memory* %call_42e3bb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xec(%rbp)	 RIP: 42e3be	 Bytes: 6
  %loadMem_42e3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3be = call %struct.Memory* @routine_movl__eax__MINUS0xec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3be)
  store %struct.Memory* %call_42e3be, %struct.Memory** %MEMORY

  ; Code: .L_42e3c4:	 RIP: 42e3c4	 Bytes: 0
  br label %block_.L_42e3c4
block_.L_42e3c4:

  ; Code: movl -0xec(%rbp), %eax	 RIP: 42e3c4	 Bytes: 6
  %loadMem_42e3c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3c4 = call %struct.Memory* @routine_movl_MINUS0xec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3c4)
  store %struct.Memory* %call_42e3c4, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e3ca	 Bytes: 2
  %loadMem_42e3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3ca = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3ca)
  store %struct.Memory* %call_42e3ca, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42e3cc	 Bytes: 2
  %loadMem_42e3cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3cc = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3cc)
  store %struct.Memory* %call_42e3cc, %struct.Memory** %MEMORY

  ; Code: jle .L_42e3e1	 RIP: 42e3ce	 Bytes: 6
  %loadMem_42e3ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3ce = call %struct.Memory* @routine_jle_.L_42e3e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3ce, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e3ce, %struct.Memory** %MEMORY

  %loadBr_42e3ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e3ce = icmp eq i8 %loadBr_42e3ce, 1
  br i1 %cmpBr_42e3ce, label %block_.L_42e3e1, label %block_42e3d4

block_42e3d4:
  ; Code: xorl %eax, %eax	 RIP: 42e3d4	 Bytes: 2
  %loadMem_42e3d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3d4 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3d4)
  store %struct.Memory* %call_42e3d4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf0(%rbp)	 RIP: 42e3d6	 Bytes: 6
  %loadMem_42e3d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3d6 = call %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3d6)
  store %struct.Memory* %call_42e3d6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e42c	 RIP: 42e3dc	 Bytes: 5
  %loadMem_42e3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3dc = call %struct.Memory* @routine_jmpq_.L_42e42c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3dc, i64 80, i64 5)
  store %struct.Memory* %call_42e3dc, %struct.Memory** %MEMORY

  br label %block_.L_42e42c

  ; Code: .L_42e3e1:	 RIP: 42e3e1	 Bytes: 0
block_.L_42e3e1:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e3e1	 Bytes: 4
  %loadMem_42e3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3e1 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3e1)
  store %struct.Memory* %call_42e3e1, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e3e5	 Bytes: 6
  %loadMem_42e3e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3e5 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3e5)
  store %struct.Memory* %call_42e3e5, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e3eb	 Bytes: 3
  %loadMem_42e3eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3eb = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3eb)
  store %struct.Memory* %call_42e3eb, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42e3ee	 Bytes: 3
  %loadMem_42e3ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3ee = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3ee)
  store %struct.Memory* %call_42e3ee, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %edx	 RIP: 42e3f1	 Bytes: 3
  %loadMem_42e3f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3f1 = call %struct.Memory* @routine_subl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3f1)
  store %struct.Memory* %call_42e3f1, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42e3f4	 Bytes: 2
  %loadMem_42e3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3f4 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3f4)
  store %struct.Memory* %call_42e3f4, %struct.Memory** %MEMORY

  ; Code: jge .L_42e414	 RIP: 42e3f6	 Bytes: 6
  %loadMem_42e3f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3f6 = call %struct.Memory* @routine_jge_.L_42e414(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3f6, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e3f6, %struct.Memory** %MEMORY

  %loadBr_42e3f6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e3f6 = icmp eq i8 %loadBr_42e3f6, 1
  br i1 %cmpBr_42e3f6, label %block_.L_42e414, label %block_42e3fc

block_42e3fc:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e3fc	 Bytes: 4
  %loadMem_42e3fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e3fc = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e3fc)
  store %struct.Memory* %call_42e3fc, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e400	 Bytes: 6
  %loadMem_42e400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e400 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e400)
  store %struct.Memory* %call_42e400, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e406	 Bytes: 3
  %loadMem_42e406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e406 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e406)
  store %struct.Memory* %call_42e406, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xf4(%rbp)	 RIP: 42e409	 Bytes: 6
  %loadMem_42e409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e409 = call %struct.Memory* @routine_movl__ecx__MINUS0xf4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e409)
  store %struct.Memory* %call_42e409, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e420	 RIP: 42e40f	 Bytes: 5
  %loadMem_42e40f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e40f = call %struct.Memory* @routine_jmpq_.L_42e420(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e40f, i64 17, i64 5)
  store %struct.Memory* %call_42e40f, %struct.Memory** %MEMORY

  br label %block_.L_42e420

  ; Code: .L_42e414:	 RIP: 42e414	 Bytes: 0
block_.L_42e414:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e414	 Bytes: 3
  %loadMem_42e414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e414 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e414)
  store %struct.Memory* %call_42e414, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %eax	 RIP: 42e417	 Bytes: 3
  %loadMem_42e417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e417 = call %struct.Memory* @routine_subl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e417)
  store %struct.Memory* %call_42e417, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf4(%rbp)	 RIP: 42e41a	 Bytes: 6
  %loadMem_42e41a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e41a = call %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e41a)
  store %struct.Memory* %call_42e41a, %struct.Memory** %MEMORY

  ; Code: .L_42e420:	 RIP: 42e420	 Bytes: 0
  br label %block_.L_42e420
block_.L_42e420:

  ; Code: movl -0xf4(%rbp), %eax	 RIP: 42e420	 Bytes: 6
  %loadMem_42e420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e420 = call %struct.Memory* @routine_movl_MINUS0xf4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e420)
  store %struct.Memory* %call_42e420, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf0(%rbp)	 RIP: 42e426	 Bytes: 6
  %loadMem_42e426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e426 = call %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e426)
  store %struct.Memory* %call_42e426, %struct.Memory** %MEMORY

  ; Code: .L_42e42c:	 RIP: 42e42c	 Bytes: 0
  br label %block_.L_42e42c
block_.L_42e42c:

  ; Code: movl -0xf0(%rbp), %eax	 RIP: 42e42c	 Bytes: 6
  %loadMem_42e42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e42c = call %struct.Memory* @routine_movl_MINUS0xf0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e42c)
  store %struct.Memory* %call_42e42c, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e432	 Bytes: 3
  %loadMem_42e432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e432 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e432)
  store %struct.Memory* %call_42e432, %struct.Memory** %MEMORY

  ; Code: movq -0xe8(%rbp), %rdx	 RIP: 42e435	 Bytes: 7
  %loadMem_42e435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e435 = call %struct.Memory* @routine_movq_MINUS0xe8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e435)
  store %struct.Memory* %call_42e435, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rcx,2), %eax	 RIP: 42e43c	 Bytes: 4
  %loadMem_42e43c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e43c = call %struct.Memory* @routine_movzwl___rdx__rcx_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e43c)
  store %struct.Memory* %call_42e43c, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rcx	 RIP: 42e440	 Bytes: 4
  %loadMem_42e440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e440 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e440)
  store %struct.Memory* %call_42e440, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rsi	 RIP: 42e444	 Bytes: 4
  %loadMem_42e444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e444 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e444)
  store %struct.Memory* %call_42e444, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 42e448	 Bytes: 4
  %loadMem_42e448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e448 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e448)
  store %struct.Memory* %call_42e448, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rsi	 RIP: 42e44c	 Bytes: 4
  %loadMem_42e44c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e44c = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e44c)
  store %struct.Memory* %call_42e44c, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rsi), %edi	 RIP: 42e450	 Bytes: 6
  %loadMem_42e450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e450 = call %struct.Memory* @routine_movl_0x18f8__rsi____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e450)
  store %struct.Memory* %call_42e450, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %edi	 RIP: 42e456	 Bytes: 3
  %loadMem_42e456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e456 = call %struct.Memory* @routine_subl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e456)
  store %struct.Memory* %call_42e456, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r8d	 RIP: 42e459	 Bytes: 4
  %loadMem_42e459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e459 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e459)
  store %struct.Memory* %call_42e459, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %r8d	 RIP: 42e45d	 Bytes: 4
  %loadMem_42e45d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e45d = call %struct.Memory* @routine_addl__0x3___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e45d)
  store %struct.Memory* %call_42e45d, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %edi	 RIP: 42e461	 Bytes: 3
  %loadMem_42e461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e461 = call %struct.Memory* @routine_cmpl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e461)
  store %struct.Memory* %call_42e461, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf8(%rbp)	 RIP: 42e464	 Bytes: 6
  %loadMem_42e464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e464 = call %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e464)
  store %struct.Memory* %call_42e464, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x100(%rbp)	 RIP: 42e46a	 Bytes: 7
  %loadMem_42e46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e46a = call %struct.Memory* @routine_movq__rcx__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e46a)
  store %struct.Memory* %call_42e46a, %struct.Memory** %MEMORY

  ; Code: jge .L_42e48f	 RIP: 42e471	 Bytes: 6
  %loadMem_42e471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e471 = call %struct.Memory* @routine_jge_.L_42e48f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e471, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e471, %struct.Memory** %MEMORY

  %loadBr_42e471 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e471 = icmp eq i8 %loadBr_42e471, 1
  br i1 %cmpBr_42e471, label %block_.L_42e48f, label %block_42e477

block_42e477:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e477	 Bytes: 4
  %loadMem_42e477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e477 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e477)
  store %struct.Memory* %call_42e477, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e47b	 Bytes: 6
  %loadMem_42e47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e47b = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e47b)
  store %struct.Memory* %call_42e47b, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e481	 Bytes: 3
  %loadMem_42e481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e481 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e481)
  store %struct.Memory* %call_42e481, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x104(%rbp)	 RIP: 42e484	 Bytes: 6
  %loadMem_42e484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e484 = call %struct.Memory* @routine_movl__ecx__MINUS0x104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e484)
  store %struct.Memory* %call_42e484, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e49b	 RIP: 42e48a	 Bytes: 5
  %loadMem_42e48a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e48a = call %struct.Memory* @routine_jmpq_.L_42e49b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e48a, i64 17, i64 5)
  store %struct.Memory* %call_42e48a, %struct.Memory** %MEMORY

  br label %block_.L_42e49b

  ; Code: .L_42e48f:	 RIP: 42e48f	 Bytes: 0
block_.L_42e48f:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e48f	 Bytes: 3
  %loadMem_42e48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e48f = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e48f)
  store %struct.Memory* %call_42e48f, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %eax	 RIP: 42e492	 Bytes: 3
  %loadMem_42e492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e492 = call %struct.Memory* @routine_addl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e492)
  store %struct.Memory* %call_42e492, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x104(%rbp)	 RIP: 42e495	 Bytes: 6
  %loadMem_42e495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e495 = call %struct.Memory* @routine_movl__eax__MINUS0x104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e495)
  store %struct.Memory* %call_42e495, %struct.Memory** %MEMORY

  ; Code: .L_42e49b:	 RIP: 42e49b	 Bytes: 0
  br label %block_.L_42e49b
block_.L_42e49b:

  ; Code: movl -0x104(%rbp), %eax	 RIP: 42e49b	 Bytes: 6
  %loadMem_42e49b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e49b = call %struct.Memory* @routine_movl_MINUS0x104__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e49b)
  store %struct.Memory* %call_42e49b, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e4a1	 Bytes: 2
  %loadMem_42e4a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4a1 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4a1)
  store %struct.Memory* %call_42e4a1, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42e4a3	 Bytes: 2
  %loadMem_42e4a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4a3 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4a3)
  store %struct.Memory* %call_42e4a3, %struct.Memory** %MEMORY

  ; Code: jle .L_42e4b8	 RIP: 42e4a5	 Bytes: 6
  %loadMem_42e4a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4a5 = call %struct.Memory* @routine_jle_.L_42e4b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4a5, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e4a5, %struct.Memory** %MEMORY

  %loadBr_42e4a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e4a5 = icmp eq i8 %loadBr_42e4a5, 1
  br i1 %cmpBr_42e4a5, label %block_.L_42e4b8, label %block_42e4ab

block_42e4ab:
  ; Code: xorl %eax, %eax	 RIP: 42e4ab	 Bytes: 2
  %loadMem_42e4ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4ab = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4ab)
  store %struct.Memory* %call_42e4ab, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x108(%rbp)	 RIP: 42e4ad	 Bytes: 6
  %loadMem_42e4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4ad = call %struct.Memory* @routine_movl__eax__MINUS0x108__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4ad)
  store %struct.Memory* %call_42e4ad, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e503	 RIP: 42e4b3	 Bytes: 5
  %loadMem_42e4b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4b3 = call %struct.Memory* @routine_jmpq_.L_42e503(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4b3, i64 80, i64 5)
  store %struct.Memory* %call_42e4b3, %struct.Memory** %MEMORY

  br label %block_.L_42e503

  ; Code: .L_42e4b8:	 RIP: 42e4b8	 Bytes: 0
block_.L_42e4b8:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e4b8	 Bytes: 4
  %loadMem_42e4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4b8 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4b8)
  store %struct.Memory* %call_42e4b8, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e4bc	 Bytes: 6
  %loadMem_42e4bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4bc = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4bc)
  store %struct.Memory* %call_42e4bc, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e4c2	 Bytes: 3
  %loadMem_42e4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4c2 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4c2)
  store %struct.Memory* %call_42e4c2, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42e4c5	 Bytes: 3
  %loadMem_42e4c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4c5 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4c5)
  store %struct.Memory* %call_42e4c5, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %edx	 RIP: 42e4c8	 Bytes: 3
  %loadMem_42e4c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4c8 = call %struct.Memory* @routine_addl__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4c8)
  store %struct.Memory* %call_42e4c8, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42e4cb	 Bytes: 2
  %loadMem_42e4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4cb = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4cb)
  store %struct.Memory* %call_42e4cb, %struct.Memory** %MEMORY

  ; Code: jge .L_42e4eb	 RIP: 42e4cd	 Bytes: 6
  %loadMem_42e4cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4cd = call %struct.Memory* @routine_jge_.L_42e4eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4cd, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e4cd, %struct.Memory** %MEMORY

  %loadBr_42e4cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e4cd = icmp eq i8 %loadBr_42e4cd, 1
  br i1 %cmpBr_42e4cd, label %block_.L_42e4eb, label %block_42e4d3

block_42e4d3:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e4d3	 Bytes: 4
  %loadMem_42e4d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4d3 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4d3)
  store %struct.Memory* %call_42e4d3, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e4d7	 Bytes: 6
  %loadMem_42e4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4d7 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4d7)
  store %struct.Memory* %call_42e4d7, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e4dd	 Bytes: 3
  %loadMem_42e4dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4dd = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4dd)
  store %struct.Memory* %call_42e4dd, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x10c(%rbp)	 RIP: 42e4e0	 Bytes: 6
  %loadMem_42e4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4e0 = call %struct.Memory* @routine_movl__ecx__MINUS0x10c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4e0)
  store %struct.Memory* %call_42e4e0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e4f7	 RIP: 42e4e6	 Bytes: 5
  %loadMem_42e4e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4e6 = call %struct.Memory* @routine_jmpq_.L_42e4f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4e6, i64 17, i64 5)
  store %struct.Memory* %call_42e4e6, %struct.Memory** %MEMORY

  br label %block_.L_42e4f7

  ; Code: .L_42e4eb:	 RIP: 42e4eb	 Bytes: 0
block_.L_42e4eb:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e4eb	 Bytes: 3
  %loadMem_42e4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4eb = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4eb)
  store %struct.Memory* %call_42e4eb, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %eax	 RIP: 42e4ee	 Bytes: 3
  %loadMem_42e4ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4ee = call %struct.Memory* @routine_addl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4ee)
  store %struct.Memory* %call_42e4ee, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10c(%rbp)	 RIP: 42e4f1	 Bytes: 6
  %loadMem_42e4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4f1 = call %struct.Memory* @routine_movl__eax__MINUS0x10c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4f1)
  store %struct.Memory* %call_42e4f1, %struct.Memory** %MEMORY

  ; Code: .L_42e4f7:	 RIP: 42e4f7	 Bytes: 0
  br label %block_.L_42e4f7
block_.L_42e4f7:

  ; Code: movl -0x10c(%rbp), %eax	 RIP: 42e4f7	 Bytes: 6
  %loadMem_42e4f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4f7 = call %struct.Memory* @routine_movl_MINUS0x10c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4f7)
  store %struct.Memory* %call_42e4f7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x108(%rbp)	 RIP: 42e4fd	 Bytes: 6
  %loadMem_42e4fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e4fd = call %struct.Memory* @routine_movl__eax__MINUS0x108__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e4fd)
  store %struct.Memory* %call_42e4fd, %struct.Memory** %MEMORY

  ; Code: .L_42e503:	 RIP: 42e503	 Bytes: 0
  br label %block_.L_42e503
block_.L_42e503:

  ; Code: movl -0x108(%rbp), %eax	 RIP: 42e503	 Bytes: 6
  %loadMem_42e503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e503 = call %struct.Memory* @routine_movl_MINUS0x108__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e503)
  store %struct.Memory* %call_42e503, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e509	 Bytes: 3
  %loadMem_42e509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e509 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e509)
  store %struct.Memory* %call_42e509, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdx	 RIP: 42e50c	 Bytes: 7
  %loadMem_42e50c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e50c = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e50c)
  store %struct.Memory* %call_42e50c, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rcx,2), %eax	 RIP: 42e513	 Bytes: 4
  %loadMem_42e513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e513 = call %struct.Memory* @routine_movzwl___rdx__rcx_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e513)
  store %struct.Memory* %call_42e513, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 42e517	 Bytes: 6
  %loadMem_42e517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e517 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e517)
  store %struct.Memory* %call_42e517, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 42e51d	 Bytes: 2
  %loadMem_42e51d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e51d = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e51d)
  store %struct.Memory* %call_42e51d, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %eax	 RIP: 42e51f	 Bytes: 6
  %loadMem_42e51f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e51f = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e51f)
  store %struct.Memory* %call_42e51f, %struct.Memory** %MEMORY

  ; Code: imull %esi, %eax	 RIP: 42e525	 Bytes: 3
  %loadMem_42e525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e525 = call %struct.Memory* @routine_imull__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e525)
  store %struct.Memory* %call_42e525, %struct.Memory** %MEMORY

  ; Code: movl -0xd8(%rbp), %esi	 RIP: 42e528	 Bytes: 6
  %loadMem_42e528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e528 = call %struct.Memory* @routine_movl_MINUS0xd8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e528)
  store %struct.Memory* %call_42e528, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 42e52e	 Bytes: 2
  %loadMem_42e52e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e52e = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e52e)
  store %struct.Memory* %call_42e52e, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x14(%rbp)	 RIP: 42e530	 Bytes: 3
  %loadMem_42e530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e530 = call %struct.Memory* @routine_movl__esi__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e530)
  store %struct.Memory* %call_42e530, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rcx	 RIP: 42e533	 Bytes: 4
  %loadMem_42e533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e533 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e533)
  store %struct.Memory* %call_42e533, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rdi	 RIP: 42e537	 Bytes: 4
  %loadMem_42e537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e537 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e537)
  store %struct.Memory* %call_42e537, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdi,8), %rcx	 RIP: 42e53b	 Bytes: 4
  %loadMem_42e53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e53b = call %struct.Memory* @routine_movq___rcx__rdi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e53b)
  store %struct.Memory* %call_42e53b, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 42e53f	 Bytes: 4
  %loadMem_42e53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e53f = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e53f)
  store %struct.Memory* %call_42e53f, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rdi), %eax	 RIP: 42e543	 Bytes: 6
  %loadMem_42e543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e543 = call %struct.Memory* @routine_movl_0x18f8__rdi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e543)
  store %struct.Memory* %call_42e543, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 42e549	 Bytes: 3
  %loadMem_42e549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e549 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e549)
  store %struct.Memory* %call_42e549, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %eax	 RIP: 42e54c	 Bytes: 3
  %loadMem_42e54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e54c = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e54c)
  store %struct.Memory* %call_42e54c, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x118(%rbp)	 RIP: 42e54f	 Bytes: 7
  %loadMem_42e54f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e54f = call %struct.Memory* @routine_movq__rcx__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e54f)
  store %struct.Memory* %call_42e54f, %struct.Memory** %MEMORY

  ; Code: jge .L_42e574	 RIP: 42e556	 Bytes: 6
  %loadMem_42e556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e556 = call %struct.Memory* @routine_jge_.L_42e574(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e556, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e556, %struct.Memory** %MEMORY

  %loadBr_42e556 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e556 = icmp eq i8 %loadBr_42e556, 1
  br i1 %cmpBr_42e556, label %block_.L_42e574, label %block_42e55c

block_42e55c:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e55c	 Bytes: 4
  %loadMem_42e55c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e55c = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e55c)
  store %struct.Memory* %call_42e55c, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e560	 Bytes: 6
  %loadMem_42e560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e560 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e560)
  store %struct.Memory* %call_42e560, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e566	 Bytes: 3
  %loadMem_42e566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e566 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e566)
  store %struct.Memory* %call_42e566, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x11c(%rbp)	 RIP: 42e569	 Bytes: 6
  %loadMem_42e569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e569 = call %struct.Memory* @routine_movl__ecx__MINUS0x11c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e569)
  store %struct.Memory* %call_42e569, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e57d	 RIP: 42e56f	 Bytes: 5
  %loadMem_42e56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e56f = call %struct.Memory* @routine_jmpq_.L_42e57d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e56f, i64 14, i64 5)
  store %struct.Memory* %call_42e56f, %struct.Memory** %MEMORY

  br label %block_.L_42e57d

  ; Code: .L_42e574:	 RIP: 42e574	 Bytes: 0
block_.L_42e574:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e574	 Bytes: 3
  %loadMem_42e574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e574 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e574)
  store %struct.Memory* %call_42e574, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x11c(%rbp)	 RIP: 42e577	 Bytes: 6
  %loadMem_42e577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e577 = call %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e577)
  store %struct.Memory* %call_42e577, %struct.Memory** %MEMORY

  ; Code: .L_42e57d:	 RIP: 42e57d	 Bytes: 0
  br label %block_.L_42e57d
block_.L_42e57d:

  ; Code: movl -0x11c(%rbp), %eax	 RIP: 42e57d	 Bytes: 6
  %loadMem_42e57d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e57d = call %struct.Memory* @routine_movl_MINUS0x11c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e57d)
  store %struct.Memory* %call_42e57d, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e583	 Bytes: 2
  %loadMem_42e583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e583 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e583)
  store %struct.Memory* %call_42e583, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42e585	 Bytes: 2
  %loadMem_42e585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e585 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e585)
  store %struct.Memory* %call_42e585, %struct.Memory** %MEMORY

  ; Code: jle .L_42e59a	 RIP: 42e587	 Bytes: 6
  %loadMem_42e587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e587 = call %struct.Memory* @routine_jle_.L_42e59a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e587, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e587, %struct.Memory** %MEMORY

  %loadBr_42e587 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e587 = icmp eq i8 %loadBr_42e587, 1
  br i1 %cmpBr_42e587, label %block_.L_42e59a, label %block_42e58d

block_42e58d:
  ; Code: xorl %eax, %eax	 RIP: 42e58d	 Bytes: 2
  %loadMem_42e58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e58d = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e58d)
  store %struct.Memory* %call_42e58d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x120(%rbp)	 RIP: 42e58f	 Bytes: 6
  %loadMem_42e58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e58f = call %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e58f)
  store %struct.Memory* %call_42e58f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e5dd	 RIP: 42e595	 Bytes: 5
  %loadMem_42e595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e595 = call %struct.Memory* @routine_jmpq_.L_42e5dd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e595, i64 72, i64 5)
  store %struct.Memory* %call_42e595, %struct.Memory** %MEMORY

  br label %block_.L_42e5dd

  ; Code: .L_42e59a:	 RIP: 42e59a	 Bytes: 0
block_.L_42e59a:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e59a	 Bytes: 4
  %loadMem_42e59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e59a = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e59a)
  store %struct.Memory* %call_42e59a, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e59e	 Bytes: 6
  %loadMem_42e59e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e59e = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e59e)
  store %struct.Memory* %call_42e59e, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e5a4	 Bytes: 3
  %loadMem_42e5a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5a4 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5a4)
  store %struct.Memory* %call_42e5a4, %struct.Memory** %MEMORY

  ; Code: cmpl -0x18(%rbp), %ecx	 RIP: 42e5a7	 Bytes: 3
  %loadMem_42e5a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5a7 = call %struct.Memory* @routine_cmpl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5a7)
  store %struct.Memory* %call_42e5a7, %struct.Memory** %MEMORY

  ; Code: jge .L_42e5c8	 RIP: 42e5aa	 Bytes: 6
  %loadMem_42e5aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5aa = call %struct.Memory* @routine_jge_.L_42e5c8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5aa, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_42e5aa, %struct.Memory** %MEMORY

  %loadBr_42e5aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e5aa = icmp eq i8 %loadBr_42e5aa, 1
  br i1 %cmpBr_42e5aa, label %block_.L_42e5c8, label %block_42e5b0

block_42e5b0:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 42e5b0	 Bytes: 4
  %loadMem_42e5b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5b0 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5b0)
  store %struct.Memory* %call_42e5b0, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42e5b4	 Bytes: 6
  %loadMem_42e5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5b4 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5b4)
  store %struct.Memory* %call_42e5b4, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42e5ba	 Bytes: 3
  %loadMem_42e5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5ba = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5ba)
  store %struct.Memory* %call_42e5ba, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x124(%rbp)	 RIP: 42e5bd	 Bytes: 6
  %loadMem_42e5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5bd = call %struct.Memory* @routine_movl__ecx__MINUS0x124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5bd)
  store %struct.Memory* %call_42e5bd, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e5d1	 RIP: 42e5c3	 Bytes: 5
  %loadMem_42e5c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5c3 = call %struct.Memory* @routine_jmpq_.L_42e5d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5c3, i64 14, i64 5)
  store %struct.Memory* %call_42e5c3, %struct.Memory** %MEMORY

  br label %block_.L_42e5d1

  ; Code: .L_42e5c8:	 RIP: 42e5c8	 Bytes: 0
block_.L_42e5c8:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e5c8	 Bytes: 3
  %loadMem_42e5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5c8 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5c8)
  store %struct.Memory* %call_42e5c8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x124(%rbp)	 RIP: 42e5cb	 Bytes: 6
  %loadMem_42e5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5cb = call %struct.Memory* @routine_movl__eax__MINUS0x124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5cb)
  store %struct.Memory* %call_42e5cb, %struct.Memory** %MEMORY

  ; Code: .L_42e5d1:	 RIP: 42e5d1	 Bytes: 0
  br label %block_.L_42e5d1
block_.L_42e5d1:

  ; Code: movl -0x124(%rbp), %eax	 RIP: 42e5d1	 Bytes: 6
  %loadMem_42e5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5d1 = call %struct.Memory* @routine_movl_MINUS0x124__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5d1)
  store %struct.Memory* %call_42e5d1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x120(%rbp)	 RIP: 42e5d7	 Bytes: 6
  %loadMem_42e5d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5d7 = call %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5d7)
  store %struct.Memory* %call_42e5d7, %struct.Memory** %MEMORY

  ; Code: .L_42e5dd:	 RIP: 42e5dd	 Bytes: 0
  br label %block_.L_42e5dd
block_.L_42e5dd:

  ; Code: movl -0x120(%rbp), %eax	 RIP: 42e5dd	 Bytes: 6
  %loadMem_42e5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5dd = call %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5dd)
  store %struct.Memory* %call_42e5dd, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e5e3	 Bytes: 3
  %loadMem_42e5e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5e3 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5e3)
  store %struct.Memory* %call_42e5e3, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdx	 RIP: 42e5e6	 Bytes: 7
  %loadMem_42e5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5e6 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5e6)
  store %struct.Memory* %call_42e5e6, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdx,%rcx,2), %eax	 RIP: 42e5ed	 Bytes: 4
  %loadMem_42e5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5ed = call %struct.Memory* @routine_movzwl___rdx__rcx_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5ed)
  store %struct.Memory* %call_42e5ed, %struct.Memory** %MEMORY

  ; Code: shll $0xa, %eax	 RIP: 42e5f1	 Bytes: 3
  %loadMem_42e5f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5f1 = call %struct.Memory* @routine_shll__0xa___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5f1)
  store %struct.Memory* %call_42e5f1, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42e5f4	 Bytes: 8
  %loadMem_42e5f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5f4 = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5f4)
  store %struct.Memory* %call_42e5f4, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42e5fc	 Bytes: 3
  %loadMem_42e5fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5fc = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5fc)
  store %struct.Memory* %call_42e5fc, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %esi	 RIP: 42e5ff	 Bytes: 3
  %loadMem_42e5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e5ff = call %struct.Memory* @routine_addl__0x4___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e5ff)
  store %struct.Memory* %call_42e5ff, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 42e602	 Bytes: 3
  %loadMem_42e602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e602 = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e602)
  store %struct.Memory* %call_42e602, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdi,8), %rcx	 RIP: 42e605	 Bytes: 4
  %loadMem_42e605 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e605 = call %struct.Memory* @routine_movq___rcx__rdi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e605)
  store %struct.Memory* %call_42e605, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 42e609	 Bytes: 3
  %loadMem_42e609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e609 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e609)
  store %struct.Memory* %call_42e609, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %esi	 RIP: 42e60c	 Bytes: 3
  %loadMem_42e60c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e60c = call %struct.Memory* @routine_addl__0x4___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e60c)
  store %struct.Memory* %call_42e60c, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %esi	 RIP: 42e60f	 Bytes: 3
  %loadMem_42e60f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e60f = call %struct.Memory* @routine_shll__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e60f)
  store %struct.Memory* %call_42e60f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 42e612	 Bytes: 3
  %loadMem_42e612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e612 = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e612)
  store %struct.Memory* %call_42e612, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdi,4)	 RIP: 42e615	 Bytes: 3
  %loadMem_42e615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e615 = call %struct.Memory* @routine_movl__eax____rcx__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e615)
  store %struct.Memory* %call_42e615, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %eax	 RIP: 42e618	 Bytes: 3
  %loadMem_42e618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e618 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e618)
  store %struct.Memory* %call_42e618, %struct.Memory** %MEMORY

  ; Code: shll $0x5, %eax	 RIP: 42e61b	 Bytes: 3
  %loadMem_42e61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e61b = call %struct.Memory* @routine_shll__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e61b)
  store %struct.Memory* %call_42e61b, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42e61e	 Bytes: 8
  %loadMem_42e61e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e61e = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e61e)
  store %struct.Memory* %call_42e61e, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42e626	 Bytes: 3
  %loadMem_42e626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e626 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e626)
  store %struct.Memory* %call_42e626, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %esi	 RIP: 42e629	 Bytes: 3
  %loadMem_42e629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e629 = call %struct.Memory* @routine_addl__0x4___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e629)
  store %struct.Memory* %call_42e629, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 42e62c	 Bytes: 3
  %loadMem_42e62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e62c = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e62c)
  store %struct.Memory* %call_42e62c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdi,8), %rcx	 RIP: 42e62f	 Bytes: 4
  %loadMem_42e62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e62f = call %struct.Memory* @routine_movq___rcx__rdi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e62f)
  store %struct.Memory* %call_42e62f, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 42e633	 Bytes: 3
  %loadMem_42e633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e633 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e633)
  store %struct.Memory* %call_42e633, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %esi	 RIP: 42e636	 Bytes: 3
  %loadMem_42e636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e636 = call %struct.Memory* @routine_addl__0x4___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e636)
  store %struct.Memory* %call_42e636, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %esi	 RIP: 42e639	 Bytes: 3
  %loadMem_42e639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e639 = call %struct.Memory* @routine_shll__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e639)
  store %struct.Memory* %call_42e639, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42e63c	 Bytes: 3
  %loadMem_42e63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e63c = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e63c)
  store %struct.Memory* %call_42e63c, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 42e63f	 Bytes: 3
  %loadMem_42e63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e63f = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e63f)
  store %struct.Memory* %call_42e63f, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdi,4)	 RIP: 42e642	 Bytes: 3
  %loadMem_42e642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e642 = call %struct.Memory* @routine_movl__eax____rcx__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e642)
  store %struct.Memory* %call_42e642, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e645	 Bytes: 3
  %loadMem_42e645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e645 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e645)
  store %struct.Memory* %call_42e645, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42e648	 Bytes: 3
  %loadMem_42e648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e648 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e648)
  store %struct.Memory* %call_42e648, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 42e64b	 Bytes: 3
  %loadMem_42e64b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e64b = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e64b)
  store %struct.Memory* %call_42e64b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42df52	 RIP: 42e64e	 Bytes: 5
  %loadMem_42e64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e64e = call %struct.Memory* @routine_jmpq_.L_42df52(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e64e, i64 -1788, i64 5)
  store %struct.Memory* %call_42e64e, %struct.Memory** %MEMORY

  br label %block_.L_42df52

  ; Code: .L_42e653:	 RIP: 42e653	 Bytes: 0
block_.L_42e653:

  ; Code: jmpq .L_42e658	 RIP: 42e653	 Bytes: 5
  %loadMem_42e653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e653 = call %struct.Memory* @routine_jmpq_.L_42e658(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e653, i64 5, i64 5)
  store %struct.Memory* %call_42e653, %struct.Memory** %MEMORY

  br label %block_.L_42e658

  ; Code: .L_42e658:	 RIP: 42e658	 Bytes: 0
block_.L_42e658:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e658	 Bytes: 3
  %loadMem_42e658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e658 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e658)
  store %struct.Memory* %call_42e658, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42e65b	 Bytes: 3
  %loadMem_42e65b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e65b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e65b)
  store %struct.Memory* %call_42e65b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 42e65e	 Bytes: 3
  %loadMem_42e65e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e65e = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e65e)
  store %struct.Memory* %call_42e65e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42df33	 RIP: 42e661	 Bytes: 5
  %loadMem_42e661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e661 = call %struct.Memory* @routine_jmpq_.L_42df33(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e661, i64 -1838, i64 5)
  store %struct.Memory* %call_42e661, %struct.Memory** %MEMORY

  br label %block_.L_42df33

  ; Code: .L_42e666:	 RIP: 42e666	 Bytes: 0
block_.L_42e666:

  ; Code: movl $0x0, -0x18(%rbp)	 RIP: 42e666	 Bytes: 7
  %loadMem_42e666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e666 = call %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e666)
  store %struct.Memory* %call_42e666, %struct.Memory** %MEMORY

  ; Code: .L_42e66d:	 RIP: 42e66d	 Bytes: 0
  br label %block_.L_42e66d
block_.L_42e66d:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42e66d	 Bytes: 3
  %loadMem_42e66d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e66d = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e66d)
  store %struct.Memory* %call_42e66d, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42e670	 Bytes: 4
  %loadMem_42e670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e670 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e670)
  store %struct.Memory* %call_42e670, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rcx), %edx	 RIP: 42e674	 Bytes: 6
  %loadMem_42e674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e674 = call %struct.Memory* @routine_movl_0x18f8__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e674)
  store %struct.Memory* %call_42e674, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %edx	 RIP: 42e67a	 Bytes: 3
  %loadMem_42e67a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e67a = call %struct.Memory* @routine_addl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e67a)
  store %struct.Memory* %call_42e67a, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 42e67d	 Bytes: 3
  %loadMem_42e67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e67d = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e67d)
  store %struct.Memory* %call_42e67d, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 42e680	 Bytes: 2
  %loadMem_42e680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e680 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e680)
  store %struct.Memory* %call_42e680, %struct.Memory** %MEMORY

  ; Code: jge .L_42ec7c	 RIP: 42e682	 Bytes: 6
  %loadMem_42e682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e682 = call %struct.Memory* @routine_jge_.L_42ec7c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e682, i8* %BRANCH_TAKEN, i64 1530, i64 6, i64 6)
  store %struct.Memory* %call_42e682, %struct.Memory** %MEMORY

  %loadBr_42e682 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e682 = icmp eq i8 %loadBr_42e682, 1
  br i1 %cmpBr_42e682, label %block_.L_42ec7c, label %block_42e688

block_42e688:
  ; Code: movl $0x0, -0x1c(%rbp)	 RIP: 42e688	 Bytes: 7
  %loadMem_42e688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e688 = call %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e688)
  store %struct.Memory* %call_42e688, %struct.Memory** %MEMORY

  ; Code: .L_42e68f:	 RIP: 42e68f	 Bytes: 0
  br label %block_.L_42e68f
block_.L_42e68f:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e68f	 Bytes: 3
  %loadMem_42e68f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e68f = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e68f)
  store %struct.Memory* %call_42e68f, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42e692	 Bytes: 4
  %loadMem_42e692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e692 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e692)
  store %struct.Memory* %call_42e692, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rcx), %edx	 RIP: 42e696	 Bytes: 6
  %loadMem_42e696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e696 = call %struct.Memory* @routine_movl_0x18fc__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e696)
  store %struct.Memory* %call_42e696, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %edx	 RIP: 42e69c	 Bytes: 3
  %loadMem_42e69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e69c = call %struct.Memory* @routine_addl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e69c)
  store %struct.Memory* %call_42e69c, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 42e69f	 Bytes: 2
  %loadMem_42e69f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e69f = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e69f)
  store %struct.Memory* %call_42e69f, %struct.Memory** %MEMORY

  ; Code: jge .L_42ec69	 RIP: 42e6a1	 Bytes: 6
  %loadMem_42e6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6a1 = call %struct.Memory* @routine_jge_.L_42ec69(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6a1, i8* %BRANCH_TAKEN, i64 1480, i64 6, i64 6)
  store %struct.Memory* %call_42e6a1, %struct.Memory** %MEMORY

  %loadBr_42e6a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e6a1 = icmp eq i8 %loadBr_42e6a1, 1
  br i1 %cmpBr_42e6a1, label %block_.L_42ec69, label %block_42e6a7

block_42e6a7:
  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e6a7	 Bytes: 3
  %loadMem_42e6a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6a7 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6a7)
  store %struct.Memory* %call_42e6a7, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 42e6aa	 Bytes: 3
  %loadMem_42e6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6aa = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6aa)
  store %struct.Memory* %call_42e6aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20(%rbp)	 RIP: 42e6ad	 Bytes: 3
  %loadMem_42e6ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6ad = call %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6ad)
  store %struct.Memory* %call_42e6ad, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 42e6b0	 Bytes: 4
  %loadMem_42e6b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6b0 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6b0)
  store %struct.Memory* %call_42e6b0, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rcx), %eax	 RIP: 42e6b4	 Bytes: 6
  %loadMem_42e6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6b4 = call %struct.Memory* @routine_movl_0x18fc__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6b4)
  store %struct.Memory* %call_42e6b4, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %eax	 RIP: 42e6ba	 Bytes: 3
  %loadMem_42e6ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6ba = call %struct.Memory* @routine_addl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6ba)
  store %struct.Memory* %call_42e6ba, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 42e6bd	 Bytes: 3
  %loadMem_42e6bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6bd = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6bd)
  store %struct.Memory* %call_42e6bd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30(%rbp)	 RIP: 42e6c0	 Bytes: 3
  %loadMem_42e6c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6c0 = call %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6c0)
  store %struct.Memory* %call_42e6c0, %struct.Memory** %MEMORY

  ; Code: movl 0x4b8c50, %eax	 RIP: 42e6c3	 Bytes: 7
  %loadMem_42e6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6c3 = call %struct.Memory* @routine_movl_0x4b8c50___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6c3)
  store %struct.Memory* %call_42e6c3, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42e6ca	 Bytes: 8
  %loadMem_42e6ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6ca = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6ca)
  store %struct.Memory* %call_42e6ca, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 42e6d2	 Bytes: 4
  %loadMem_42e6d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6d2 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6d2)
  store %struct.Memory* %call_42e6d2, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 42e6d6	 Bytes: 4
  %loadMem_42e6d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6d6 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6d6)
  store %struct.Memory* %call_42e6d6, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 42e6da	 Bytes: 4
  %loadMem_42e6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6da = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6da)
  store %struct.Memory* %call_42e6da, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 42e6de	 Bytes: 3
  %loadMem_42e6de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6de = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6de)
  store %struct.Memory* %call_42e6de, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42e6e1	 Bytes: 8
  %loadMem_42e6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6e1 = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6e1)
  store %struct.Memory* %call_42e6e1, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 42e6e9	 Bytes: 3
  %loadMem_42e6e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6e9 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6e9)
  store %struct.Memory* %call_42e6e9, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r8d	 RIP: 42e6ec	 Bytes: 4
  %loadMem_42e6ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6ec = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6ec)
  store %struct.Memory* %call_42e6ec, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %r8d	 RIP: 42e6f0	 Bytes: 4
  %loadMem_42e6f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6f0 = call %struct.Memory* @routine_addl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6f0)
  store %struct.Memory* %call_42e6f0, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %edi	 RIP: 42e6f4	 Bytes: 3
  %loadMem_42e6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6f4 = call %struct.Memory* @routine_cmpl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6f4)
  store %struct.Memory* %call_42e6f4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x128(%rbp)	 RIP: 42e6f7	 Bytes: 6
  %loadMem_42e6f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6f7 = call %struct.Memory* @routine_movl__eax__MINUS0x128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6f7)
  store %struct.Memory* %call_42e6f7, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x12c(%rbp)	 RIP: 42e6fd	 Bytes: 6
  %loadMem_42e6fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e6fd = call %struct.Memory* @routine_movl__esi__MINUS0x12c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e6fd)
  store %struct.Memory* %call_42e6fd, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x138(%rbp)	 RIP: 42e703	 Bytes: 7
  %loadMem_42e703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e703 = call %struct.Memory* @routine_movq__rcx__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e703)
  store %struct.Memory* %call_42e703, %struct.Memory** %MEMORY

  ; Code: jge .L_42e71e	 RIP: 42e70a	 Bytes: 6
  %loadMem_42e70a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e70a = call %struct.Memory* @routine_jge_.L_42e71e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e70a, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_42e70a, %struct.Memory** %MEMORY

  %loadBr_42e70a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e70a = icmp eq i8 %loadBr_42e70a, 1
  br i1 %cmpBr_42e70a, label %block_.L_42e71e, label %block_42e710

block_42e710:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 42e710	 Bytes: 3
  %loadMem_42e710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e710 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e710)
  store %struct.Memory* %call_42e710, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x13c(%rbp)	 RIP: 42e713	 Bytes: 6
  %loadMem_42e713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e713 = call %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e713)
  store %struct.Memory* %call_42e713, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e72a	 RIP: 42e719	 Bytes: 5
  %loadMem_42e719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e719 = call %struct.Memory* @routine_jmpq_.L_42e72a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e719, i64 17, i64 5)
  store %struct.Memory* %call_42e719, %struct.Memory** %MEMORY

  br label %block_.L_42e72a

  ; Code: .L_42e71e:	 RIP: 42e71e	 Bytes: 0
block_.L_42e71e:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e71e	 Bytes: 3
  %loadMem_42e71e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e71e = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e71e)
  store %struct.Memory* %call_42e71e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42e721	 Bytes: 3
  %loadMem_42e721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e721 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e721)
  store %struct.Memory* %call_42e721, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x13c(%rbp)	 RIP: 42e724	 Bytes: 6
  %loadMem_42e724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e724 = call %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e724)
  store %struct.Memory* %call_42e724, %struct.Memory** %MEMORY

  ; Code: .L_42e72a:	 RIP: 42e72a	 Bytes: 0
  br label %block_.L_42e72a
block_.L_42e72a:

  ; Code: movl -0x13c(%rbp), %eax	 RIP: 42e72a	 Bytes: 6
  %loadMem_42e72a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e72a = call %struct.Memory* @routine_movl_MINUS0x13c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e72a)
  store %struct.Memory* %call_42e72a, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e730	 Bytes: 2
  %loadMem_42e730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e730 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e730)
  store %struct.Memory* %call_42e730, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 42e732	 Bytes: 3
  %loadMem_42e732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e732 = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e732)
  store %struct.Memory* %call_42e732, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rsi	 RIP: 42e735	 Bytes: 7
  %loadMem_42e735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e735 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e735)
  store %struct.Memory* %call_42e735, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdx,8), %rdx	 RIP: 42e73c	 Bytes: 4
  %loadMem_42e73c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e73c = call %struct.Memory* @routine_movq___rsi__rdx_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e73c)
  store %struct.Memory* %call_42e73c, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdi	 RIP: 42e740	 Bytes: 4
  %loadMem_42e740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e740 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e740)
  store %struct.Memory* %call_42e740, %struct.Memory** %MEMORY

  ; Code: movl -0x12c(%rbp), %eax	 RIP: 42e744	 Bytes: 6
  %loadMem_42e744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e744 = call %struct.Memory* @routine_movl_MINUS0x12c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e744)
  store %struct.Memory* %call_42e744, %struct.Memory** %MEMORY

  ; Code: addl (%rdx,%rdi,4), %eax	 RIP: 42e74a	 Bytes: 3
  %loadMem_42e74a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e74a = call %struct.Memory* @routine_addl___rdx__rdi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e74a)
  store %struct.Memory* %call_42e74a, %struct.Memory** %MEMORY

  ; Code: movl -0x128(%rbp), %r8d	 RIP: 42e74d	 Bytes: 7
  %loadMem_42e74d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e74d = call %struct.Memory* @routine_movl_MINUS0x128__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e74d)
  store %struct.Memory* %call_42e74d, %struct.Memory** %MEMORY

  ; Code: imull %eax, %r8d	 RIP: 42e754	 Bytes: 4
  %loadMem_42e754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e754 = call %struct.Memory* @routine_imull__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e754)
  store %struct.Memory* %call_42e754, %struct.Memory** %MEMORY

  ; Code: movl 0x4b8c58, %eax	 RIP: 42e758	 Bytes: 7
  %loadMem_42e758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e758 = call %struct.Memory* @routine_movl_0x4b8c58___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e758)
  store %struct.Memory* %call_42e758, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rdx	 RIP: 42e75f	 Bytes: 8
  %loadMem_42e75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e75f = call %struct.Memory* @routine_movq_0x726410___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e75f)
  store %struct.Memory* %call_42e75f, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r9d	 RIP: 42e767	 Bytes: 4
  %loadMem_42e767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e767 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e767)
  store %struct.Memory* %call_42e767, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %r9d	 RIP: 42e76b	 Bytes: 4
  %loadMem_42e76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e76b = call %struct.Memory* @routine_subl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e76b)
  store %struct.Memory* %call_42e76b, %struct.Memory** %MEMORY

  ; Code: cmpl %r9d, %ecx	 RIP: 42e76f	 Bytes: 3
  %loadMem_42e76f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e76f = call %struct.Memory* @routine_cmpl__r9d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e76f)
  store %struct.Memory* %call_42e76f, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x148(%rbp)	 RIP: 42e772	 Bytes: 7
  %loadMem_42e772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e772 = call %struct.Memory* @routine_movq__rdx__MINUS0x148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e772)
  store %struct.Memory* %call_42e772, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x14c(%rbp)	 RIP: 42e779	 Bytes: 7
  %loadMem_42e779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e779 = call %struct.Memory* @routine_movl__r8d__MINUS0x14c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e779)
  store %struct.Memory* %call_42e779, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x150(%rbp)	 RIP: 42e780	 Bytes: 6
  %loadMem_42e780 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e780 = call %struct.Memory* @routine_movl__eax__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e780)
  store %struct.Memory* %call_42e780, %struct.Memory** %MEMORY

  ; Code: jle .L_42e799	 RIP: 42e786	 Bytes: 6
  %loadMem_42e786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e786 = call %struct.Memory* @routine_jle_.L_42e799(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e786, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e786, %struct.Memory** %MEMORY

  %loadBr_42e786 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e786 = icmp eq i8 %loadBr_42e786, 1
  br i1 %cmpBr_42e786, label %block_.L_42e799, label %block_42e78c

block_42e78c:
  ; Code: xorl %eax, %eax	 RIP: 42e78c	 Bytes: 2
  %loadMem_42e78c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e78c = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e78c)
  store %struct.Memory* %call_42e78c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x154(%rbp)	 RIP: 42e78e	 Bytes: 6
  %loadMem_42e78e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e78e = call %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e78e)
  store %struct.Memory* %call_42e78e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e7a5	 RIP: 42e794	 Bytes: 5
  %loadMem_42e794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e794 = call %struct.Memory* @routine_jmpq_.L_42e7a5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e794, i64 17, i64 5)
  store %struct.Memory* %call_42e794, %struct.Memory** %MEMORY

  br label %block_.L_42e7a5

  ; Code: .L_42e799:	 RIP: 42e799	 Bytes: 0
block_.L_42e799:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e799	 Bytes: 3
  %loadMem_42e799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e799 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e799)
  store %struct.Memory* %call_42e799, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 42e79c	 Bytes: 3
  %loadMem_42e79c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e79c = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e79c)
  store %struct.Memory* %call_42e79c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x154(%rbp)	 RIP: 42e79f	 Bytes: 6
  %loadMem_42e79f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e79f = call %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e79f)
  store %struct.Memory* %call_42e79f, %struct.Memory** %MEMORY

  ; Code: .L_42e7a5:	 RIP: 42e7a5	 Bytes: 0
  br label %block_.L_42e7a5
block_.L_42e7a5:

  ; Code: movl -0x154(%rbp), %eax	 RIP: 42e7a5	 Bytes: 6
  %loadMem_42e7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7a5 = call %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7a5)
  store %struct.Memory* %call_42e7a5, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e7ab	 Bytes: 3
  %loadMem_42e7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7ab = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7ab)
  store %struct.Memory* %call_42e7ab, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdx	 RIP: 42e7ae	 Bytes: 7
  %loadMem_42e7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7ae = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7ae)
  store %struct.Memory* %call_42e7ae, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rcx,8), %rcx	 RIP: 42e7b5	 Bytes: 4
  %loadMem_42e7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7b5 = call %struct.Memory* @routine_movq___rdx__rcx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7b5)
  store %struct.Memory* %call_42e7b5, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 42e7b9	 Bytes: 4
  %loadMem_42e7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7b9 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7b9)
  store %struct.Memory* %call_42e7b9, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rsi,4), %eax	 RIP: 42e7bd	 Bytes: 3
  %loadMem_42e7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7bd = call %struct.Memory* @routine_movl___rcx__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7bd)
  store %struct.Memory* %call_42e7bd, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42e7c0	 Bytes: 8
  %loadMem_42e7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7c0 = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7c0)
  store %struct.Memory* %call_42e7c0, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 42e7c8	 Bytes: 3
  %loadMem_42e7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7c8 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7c8)
  store %struct.Memory* %call_42e7c8, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r8d	 RIP: 42e7cb	 Bytes: 4
  %loadMem_42e7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7cb = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7cb)
  store %struct.Memory* %call_42e7cb, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %r8d	 RIP: 42e7cf	 Bytes: 4
  %loadMem_42e7cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7cf = call %struct.Memory* @routine_addl__0x2___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7cf)
  store %struct.Memory* %call_42e7cf, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %edi	 RIP: 42e7d3	 Bytes: 3
  %loadMem_42e7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7d3 = call %struct.Memory* @routine_cmpl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7d3)
  store %struct.Memory* %call_42e7d3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x158(%rbp)	 RIP: 42e7d6	 Bytes: 6
  %loadMem_42e7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7d6 = call %struct.Memory* @routine_movl__eax__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7d6)
  store %struct.Memory* %call_42e7d6, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x160(%rbp)	 RIP: 42e7dc	 Bytes: 7
  %loadMem_42e7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7dc = call %struct.Memory* @routine_movq__rcx__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7dc)
  store %struct.Memory* %call_42e7dc, %struct.Memory** %MEMORY

  ; Code: jge .L_42e7f7	 RIP: 42e7e3	 Bytes: 6
  %loadMem_42e7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7e3 = call %struct.Memory* @routine_jge_.L_42e7f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7e3, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_42e7e3, %struct.Memory** %MEMORY

  %loadBr_42e7e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e7e3 = icmp eq i8 %loadBr_42e7e3, 1
  br i1 %cmpBr_42e7e3, label %block_.L_42e7f7, label %block_42e7e9

block_42e7e9:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 42e7e9	 Bytes: 3
  %loadMem_42e7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7e9 = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7e9)
  store %struct.Memory* %call_42e7e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x164(%rbp)	 RIP: 42e7ec	 Bytes: 6
  %loadMem_42e7ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7ec = call %struct.Memory* @routine_movl__eax__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7ec)
  store %struct.Memory* %call_42e7ec, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e803	 RIP: 42e7f2	 Bytes: 5
  %loadMem_42e7f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7f2 = call %struct.Memory* @routine_jmpq_.L_42e803(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7f2, i64 17, i64 5)
  store %struct.Memory* %call_42e7f2, %struct.Memory** %MEMORY

  br label %block_.L_42e803

  ; Code: .L_42e7f7:	 RIP: 42e7f7	 Bytes: 0
block_.L_42e7f7:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e7f7	 Bytes: 3
  %loadMem_42e7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7f7 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7f7)
  store %struct.Memory* %call_42e7f7, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42e7fa	 Bytes: 3
  %loadMem_42e7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7fa = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7fa)
  store %struct.Memory* %call_42e7fa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x164(%rbp)	 RIP: 42e7fd	 Bytes: 6
  %loadMem_42e7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e7fd = call %struct.Memory* @routine_movl__eax__MINUS0x164__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e7fd)
  store %struct.Memory* %call_42e7fd, %struct.Memory** %MEMORY

  ; Code: .L_42e803:	 RIP: 42e803	 Bytes: 0
  br label %block_.L_42e803
block_.L_42e803:

  ; Code: movl -0x164(%rbp), %eax	 RIP: 42e803	 Bytes: 6
  %loadMem_42e803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e803 = call %struct.Memory* @routine_movl_MINUS0x164__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e803)
  store %struct.Memory* %call_42e803, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e809	 Bytes: 2
  %loadMem_42e809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e809 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e809)
  store %struct.Memory* %call_42e809, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdx	 RIP: 42e80b	 Bytes: 3
  %loadMem_42e80b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e80b = call %struct.Memory* @routine_movslq__eax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e80b)
  store %struct.Memory* %call_42e80b, %struct.Memory** %MEMORY

  ; Code: movq -0x160(%rbp), %rsi	 RIP: 42e80e	 Bytes: 7
  %loadMem_42e80e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e80e = call %struct.Memory* @routine_movq_MINUS0x160__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e80e)
  store %struct.Memory* %call_42e80e, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%rdx,8), %rdx	 RIP: 42e815	 Bytes: 4
  %loadMem_42e815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e815 = call %struct.Memory* @routine_movq___rsi__rdx_8____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e815)
  store %struct.Memory* %call_42e815, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdi	 RIP: 42e819	 Bytes: 4
  %loadMem_42e819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e819 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e819)
  store %struct.Memory* %call_42e819, %struct.Memory** %MEMORY

  ; Code: movl -0x158(%rbp), %eax	 RIP: 42e81d	 Bytes: 6
  %loadMem_42e81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e81d = call %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e81d)
  store %struct.Memory* %call_42e81d, %struct.Memory** %MEMORY

  ; Code: addl (%rdx,%rdi,4), %eax	 RIP: 42e823	 Bytes: 3
  %loadMem_42e823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e823 = call %struct.Memory* @routine_addl___rdx__rdi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e823)
  store %struct.Memory* %call_42e823, %struct.Memory** %MEMORY

  ; Code: movl -0x150(%rbp), %r8d	 RIP: 42e826	 Bytes: 7
  %loadMem_42e826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e826 = call %struct.Memory* @routine_movl_MINUS0x150__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e826)
  store %struct.Memory* %call_42e826, %struct.Memory** %MEMORY

  ; Code: imull %eax, %r8d	 RIP: 42e82d	 Bytes: 4
  %loadMem_42e82d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e82d = call %struct.Memory* @routine_imull__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e82d)
  store %struct.Memory* %call_42e82d, %struct.Memory** %MEMORY

  ; Code: movl -0x14c(%rbp), %eax	 RIP: 42e831	 Bytes: 6
  %loadMem_42e831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e831 = call %struct.Memory* @routine_movl_MINUS0x14c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e831)
  store %struct.Memory* %call_42e831, %struct.Memory** %MEMORY

  ; Code: addl %r8d, %eax	 RIP: 42e837	 Bytes: 3
  %loadMem_42e837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e837 = call %struct.Memory* @routine_addl__r8d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e837)
  store %struct.Memory* %call_42e837, %struct.Memory** %MEMORY

  ; Code: movl 0x4b8c60, %r8d	 RIP: 42e83a	 Bytes: 8
  %loadMem_42e83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e83a = call %struct.Memory* @routine_movl_0x4b8c60___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e83a)
  store %struct.Memory* %call_42e83a, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rdx	 RIP: 42e842	 Bytes: 8
  %loadMem_42e842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e842 = call %struct.Memory* @routine_movq_0x726410___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e842)
  store %struct.Memory* %call_42e842, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r9d	 RIP: 42e84a	 Bytes: 4
  %loadMem_42e84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e84a = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e84a)
  store %struct.Memory* %call_42e84a, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %r9d	 RIP: 42e84e	 Bytes: 4
  %loadMem_42e84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e84e = call %struct.Memory* @routine_subl__0x2___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e84e)
  store %struct.Memory* %call_42e84e, %struct.Memory** %MEMORY

  ; Code: cmpl %r9d, %ecx	 RIP: 42e852	 Bytes: 3
  %loadMem_42e852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e852 = call %struct.Memory* @routine_cmpl__r9d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e852)
  store %struct.Memory* %call_42e852, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x170(%rbp)	 RIP: 42e855	 Bytes: 7
  %loadMem_42e855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e855 = call %struct.Memory* @routine_movq__rdx__MINUS0x170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e855)
  store %struct.Memory* %call_42e855, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x174(%rbp)	 RIP: 42e85c	 Bytes: 6
  %loadMem_42e85c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e85c = call %struct.Memory* @routine_movl__eax__MINUS0x174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e85c)
  store %struct.Memory* %call_42e85c, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x178(%rbp)	 RIP: 42e862	 Bytes: 7
  %loadMem_42e862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e862 = call %struct.Memory* @routine_movl__r8d__MINUS0x178__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e862)
  store %struct.Memory* %call_42e862, %struct.Memory** %MEMORY

  ; Code: jle .L_42e87c	 RIP: 42e869	 Bytes: 6
  %loadMem_42e869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e869 = call %struct.Memory* @routine_jle_.L_42e87c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e869, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e869, %struct.Memory** %MEMORY

  %loadBr_42e869 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e869 = icmp eq i8 %loadBr_42e869, 1
  br i1 %cmpBr_42e869, label %block_.L_42e87c, label %block_42e86f

block_42e86f:
  ; Code: xorl %eax, %eax	 RIP: 42e86f	 Bytes: 2
  %loadMem_42e86f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e86f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e86f)
  store %struct.Memory* %call_42e86f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x17c(%rbp)	 RIP: 42e871	 Bytes: 6
  %loadMem_42e871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e871 = call %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e871)
  store %struct.Memory* %call_42e871, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e888	 RIP: 42e877	 Bytes: 5
  %loadMem_42e877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e877 = call %struct.Memory* @routine_jmpq_.L_42e888(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e877, i64 17, i64 5)
  store %struct.Memory* %call_42e877, %struct.Memory** %MEMORY

  br label %block_.L_42e888

  ; Code: .L_42e87c:	 RIP: 42e87c	 Bytes: 0
block_.L_42e87c:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e87c	 Bytes: 3
  %loadMem_42e87c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e87c = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e87c)
  store %struct.Memory* %call_42e87c, %struct.Memory** %MEMORY

  ; Code: subl $0x2, %eax	 RIP: 42e87f	 Bytes: 3
  %loadMem_42e87f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e87f = call %struct.Memory* @routine_subl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e87f)
  store %struct.Memory* %call_42e87f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x17c(%rbp)	 RIP: 42e882	 Bytes: 6
  %loadMem_42e882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e882 = call %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e882)
  store %struct.Memory* %call_42e882, %struct.Memory** %MEMORY

  ; Code: .L_42e888:	 RIP: 42e888	 Bytes: 0
  br label %block_.L_42e888
block_.L_42e888:

  ; Code: movl -0x17c(%rbp), %eax	 RIP: 42e888	 Bytes: 6
  %loadMem_42e888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e888 = call %struct.Memory* @routine_movl_MINUS0x17c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e888)
  store %struct.Memory* %call_42e888, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 42e88e	 Bytes: 3
  %loadMem_42e88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e88e = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e88e)
  store %struct.Memory* %call_42e88e, %struct.Memory** %MEMORY

  ; Code: movq -0x170(%rbp), %rdx	 RIP: 42e891	 Bytes: 7
  %loadMem_42e891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e891 = call %struct.Memory* @routine_movq_MINUS0x170__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e891)
  store %struct.Memory* %call_42e891, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rcx,8), %rcx	 RIP: 42e898	 Bytes: 4
  %loadMem_42e898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e898 = call %struct.Memory* @routine_movq___rdx__rcx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e898)
  store %struct.Memory* %call_42e898, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 42e89c	 Bytes: 4
  %loadMem_42e89c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e89c = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e89c)
  store %struct.Memory* %call_42e89c, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rsi,4), %eax	 RIP: 42e8a0	 Bytes: 3
  %loadMem_42e8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8a0 = call %struct.Memory* @routine_movl___rcx__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8a0)
  store %struct.Memory* %call_42e8a0, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42e8a3	 Bytes: 8
  %loadMem_42e8a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8a3 = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8a3)
  store %struct.Memory* %call_42e8a3, %struct.Memory** %MEMORY

  ; Code: movl -0x30(%rbp), %edi	 RIP: 42e8ab	 Bytes: 3
  %loadMem_42e8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8ab = call %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8ab)
  store %struct.Memory* %call_42e8ab, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r8d	 RIP: 42e8ae	 Bytes: 4
  %loadMem_42e8ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8ae = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8ae)
  store %struct.Memory* %call_42e8ae, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %r8d	 RIP: 42e8b2	 Bytes: 4
  %loadMem_42e8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8b2 = call %struct.Memory* @routine_addl__0x3___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8b2)
  store %struct.Memory* %call_42e8b2, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %edi	 RIP: 42e8b6	 Bytes: 3
  %loadMem_42e8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8b6 = call %struct.Memory* @routine_cmpl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8b6)
  store %struct.Memory* %call_42e8b6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x180(%rbp)	 RIP: 42e8b9	 Bytes: 6
  %loadMem_42e8b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8b9 = call %struct.Memory* @routine_movl__eax__MINUS0x180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8b9)
  store %struct.Memory* %call_42e8b9, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x188(%rbp)	 RIP: 42e8bf	 Bytes: 7
  %loadMem_42e8bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8bf = call %struct.Memory* @routine_movq__rcx__MINUS0x188__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8bf)
  store %struct.Memory* %call_42e8bf, %struct.Memory** %MEMORY

  ; Code: jge .L_42e8da	 RIP: 42e8c6	 Bytes: 6
  %loadMem_42e8c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8c6 = call %struct.Memory* @routine_jge_.L_42e8da(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8c6, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_42e8c6, %struct.Memory** %MEMORY

  %loadBr_42e8c6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e8c6 = icmp eq i8 %loadBr_42e8c6, 1
  br i1 %cmpBr_42e8c6, label %block_.L_42e8da, label %block_42e8cc

block_42e8cc:
  ; Code: movl -0x30(%rbp), %eax	 RIP: 42e8cc	 Bytes: 3
  %loadMem_42e8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8cc = call %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8cc)
  store %struct.Memory* %call_42e8cc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18c(%rbp)	 RIP: 42e8cf	 Bytes: 6
  %loadMem_42e8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8cf = call %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8cf)
  store %struct.Memory* %call_42e8cf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e8e6	 RIP: 42e8d5	 Bytes: 5
  %loadMem_42e8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8d5 = call %struct.Memory* @routine_jmpq_.L_42e8e6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8d5, i64 17, i64 5)
  store %struct.Memory* %call_42e8d5, %struct.Memory** %MEMORY

  br label %block_.L_42e8e6

  ; Code: .L_42e8da:	 RIP: 42e8da	 Bytes: 0
block_.L_42e8da:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e8da	 Bytes: 3
  %loadMem_42e8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8da = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8da)
  store %struct.Memory* %call_42e8da, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %eax	 RIP: 42e8dd	 Bytes: 3
  %loadMem_42e8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8dd = call %struct.Memory* @routine_addl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8dd)
  store %struct.Memory* %call_42e8dd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18c(%rbp)	 RIP: 42e8e0	 Bytes: 6
  %loadMem_42e8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8e0 = call %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8e0)
  store %struct.Memory* %call_42e8e0, %struct.Memory** %MEMORY

  ; Code: .L_42e8e6:	 RIP: 42e8e6	 Bytes: 0
  br label %block_.L_42e8e6
block_.L_42e8e6:

  ; Code: movl -0x18c(%rbp), %eax	 RIP: 42e8e6	 Bytes: 6
  %loadMem_42e8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8e6 = call %struct.Memory* @routine_movl_MINUS0x18c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8e6)
  store %struct.Memory* %call_42e8e6, %struct.Memory** %MEMORY

  ; Code: movl $0x400, %ecx	 RIP: 42e8ec	 Bytes: 5
  %loadMem_42e8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8ec = call %struct.Memory* @routine_movl__0x400___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8ec)
  store %struct.Memory* %call_42e8ec, %struct.Memory** %MEMORY

  ; Code: movl $0x20, %edx	 RIP: 42e8f1	 Bytes: 5
  %loadMem_42e8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8f1 = call %struct.Memory* @routine_movl__0x20___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8f1)
  store %struct.Memory* %call_42e8f1, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 42e8f6	 Bytes: 3
  %loadMem_42e8f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8f6 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8f6)
  store %struct.Memory* %call_42e8f6, %struct.Memory** %MEMORY

  ; Code: movq -0x188(%rbp), %rdi	 RIP: 42e8f9	 Bytes: 7
  %loadMem_42e8f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e8f9 = call %struct.Memory* @routine_movq_MINUS0x188__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e8f9)
  store %struct.Memory* %call_42e8f9, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%rsi,8), %rsi	 RIP: 42e900	 Bytes: 4
  %loadMem_42e900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e900 = call %struct.Memory* @routine_movq___rdi__rsi_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e900)
  store %struct.Memory* %call_42e900, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %r8	 RIP: 42e904	 Bytes: 4
  %loadMem_42e904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e904 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e904)
  store %struct.Memory* %call_42e904, %struct.Memory** %MEMORY

  ; Code: movl -0x180(%rbp), %eax	 RIP: 42e908	 Bytes: 6
  %loadMem_42e908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e908 = call %struct.Memory* @routine_movl_MINUS0x180__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e908)
  store %struct.Memory* %call_42e908, %struct.Memory** %MEMORY

  ; Code: addl (%rsi,%r8,4), %eax	 RIP: 42e90e	 Bytes: 4
  %loadMem_42e90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e90e = call %struct.Memory* @routine_addl___rsi__r8_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e90e)
  store %struct.Memory* %call_42e90e, %struct.Memory** %MEMORY

  ; Code: movl -0x178(%rbp), %r9d	 RIP: 42e912	 Bytes: 7
  %loadMem_42e912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e912 = call %struct.Memory* @routine_movl_MINUS0x178__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e912)
  store %struct.Memory* %call_42e912, %struct.Memory** %MEMORY

  ; Code: imull %eax, %r9d	 RIP: 42e919	 Bytes: 4
  %loadMem_42e919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e919 = call %struct.Memory* @routine_imull__eax___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e919)
  store %struct.Memory* %call_42e919, %struct.Memory** %MEMORY

  ; Code: movl -0x174(%rbp), %eax	 RIP: 42e91d	 Bytes: 6
  %loadMem_42e91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e91d = call %struct.Memory* @routine_movl_MINUS0x174__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e91d)
  store %struct.Memory* %call_42e91d, %struct.Memory** %MEMORY

  ; Code: addl %r9d, %eax	 RIP: 42e923	 Bytes: 3
  %loadMem_42e923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e923 = call %struct.Memory* @routine_addl__r9d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e923)
  store %struct.Memory* %call_42e923, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x190(%rbp)	 RIP: 42e926	 Bytes: 6
  %loadMem_42e926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e926 = call %struct.Memory* @routine_movl__edx__MINUS0x190__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e926)
  store %struct.Memory* %call_42e926, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42e92c	 Bytes: 1
  %loadMem_42e92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e92c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e92c)
  store %struct.Memory* %call_42e92c, %struct.Memory** %MEMORY

  ; Code: movl -0x190(%rbp), %r9d	 RIP: 42e92d	 Bytes: 7
  %loadMem_42e92d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e92d = call %struct.Memory* @routine_movl_MINUS0x190__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e92d)
  store %struct.Memory* %call_42e92d, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 42e934	 Bytes: 3
  %loadMem_42e934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e934 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e934)
  store %struct.Memory* %call_42e934, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 42e937	 Bytes: 3
  %loadMem_42e937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e937 = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e937)
  store %struct.Memory* %call_42e937, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42e93a	 Bytes: 4
  %loadMem_42e93a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e93a = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e93a)
  store %struct.Memory* %call_42e93a, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42e93e	 Bytes: 3
  %loadMem_42e93e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e93e = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e93e)
  store %struct.Memory* %call_42e93e, %struct.Memory** %MEMORY

  ; Code: subl $0x4, %eax	 RIP: 42e941	 Bytes: 3
  %loadMem_42e941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e941 = call %struct.Memory* @routine_subl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e941)
  store %struct.Memory* %call_42e941, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %eax	 RIP: 42e944	 Bytes: 3
  %loadMem_42e944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e944 = call %struct.Memory* @routine_shll__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e944)
  store %struct.Memory* %call_42e944, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r10d	 RIP: 42e947	 Bytes: 4
  %loadMem_42e947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e947 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e947)
  store %struct.Memory* %call_42e947, %struct.Memory** %MEMORY

  ; Code: subl $0x8, %r10d	 RIP: 42e94b	 Bytes: 4
  %loadMem_42e94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e94b = call %struct.Memory* @routine_subl__0x8___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e94b)
  store %struct.Memory* %call_42e94b, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %r10d	 RIP: 42e94f	 Bytes: 4
  %loadMem_42e94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e94f = call %struct.Memory* @routine_shll__0x1___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e94f)
  store %struct.Memory* %call_42e94f, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 42e953	 Bytes: 8
  %loadMem_42e953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e953 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e953)
  store %struct.Memory* %call_42e953, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rsi), %r11d	 RIP: 42e95b	 Bytes: 7
  %loadMem_42e95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e95b = call %struct.Memory* @routine_movl_0x11bec__rsi____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e95b)
  store %struct.Memory* %call_42e95b, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rsi	 RIP: 42e962	 Bytes: 8
  %loadMem_42e962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e962 = call %struct.Memory* @routine_movq_0x726410___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e962)
  store %struct.Memory* %call_42e962, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %r8	 RIP: 42e96a	 Bytes: 4
  %loadMem_42e96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e96a = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e96a)
  store %struct.Memory* %call_42e96a, %struct.Memory** %MEMORY

  ; Code: movq (%rsi,%r8,8), %rsi	 RIP: 42e96e	 Bytes: 4
  %loadMem_42e96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e96e = call %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e96e)
  store %struct.Memory* %call_42e96e, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %r8	 RIP: 42e972	 Bytes: 4
  %loadMem_42e972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e972 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e972)
  store %struct.Memory* %call_42e972, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%r8,4), %ebx	 RIP: 42e976	 Bytes: 4
  %loadMem_42e976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e976 = call %struct.Memory* @routine_movl___rsi__r8_4____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e976)
  store %struct.Memory* %call_42e976, %struct.Memory** %MEMORY

  ; Code: addl $0x200, %ebx	 RIP: 42e97a	 Bytes: 6
  %loadMem_42e97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e97a = call %struct.Memory* @routine_addl__0x200___ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e97a)
  store %struct.Memory* %call_42e97a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x194(%rbp)	 RIP: 42e980	 Bytes: 6
  %loadMem_42e980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e980 = call %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e980)
  store %struct.Memory* %call_42e980, %struct.Memory** %MEMORY

  ; Code: movl %ebx, %eax	 RIP: 42e986	 Bytes: 2
  %loadMem_42e986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e986 = call %struct.Memory* @routine_movl__ebx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e986)
  store %struct.Memory* %call_42e986, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42e988	 Bytes: 1
  %loadMem_42e988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e988 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e988)
  store %struct.Memory* %call_42e988, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42e989	 Bytes: 2
  %loadMem_42e989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e989 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e989)
  store %struct.Memory* %call_42e989, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %r11d	 RIP: 42e98b	 Bytes: 3
  %loadMem_42e98b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e98b = call %struct.Memory* @routine_cmpl__eax___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e98b)
  store %struct.Memory* %call_42e98b, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x1a0(%rbp)	 RIP: 42e98e	 Bytes: 7
  %loadMem_42e98e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e98e = call %struct.Memory* @routine_movq__rdi__MINUS0x1a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e98e)
  store %struct.Memory* %call_42e98e, %struct.Memory** %MEMORY

  ; Code: movl %r10d, -0x1a4(%rbp)	 RIP: 42e995	 Bytes: 7
  %loadMem_42e995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e995 = call %struct.Memory* @routine_movl__r10d__MINUS0x1a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e995)
  store %struct.Memory* %call_42e995, %struct.Memory** %MEMORY

  ; Code: jge .L_42e9bb	 RIP: 42e99c	 Bytes: 6
  %loadMem_42e99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e99c = call %struct.Memory* @routine_jge_.L_42e9bb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e99c, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42e99c, %struct.Memory** %MEMORY

  %loadBr_42e99c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e99c = icmp eq i8 %loadBr_42e99c, 1
  br i1 %cmpBr_42e99c, label %block_.L_42e9bb, label %block_42e9a2

block_42e9a2:
  ; Code: movq 0x6cb900, %rax	 RIP: 42e9a2	 Bytes: 8
  %loadMem_42e9a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9a2 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9a2)
  store %struct.Memory* %call_42e9a2, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42e9aa	 Bytes: 6
  %loadMem_42e9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9aa = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9aa)
  store %struct.Memory* %call_42e9aa, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1a8(%rbp)	 RIP: 42e9b0	 Bytes: 6
  %loadMem_42e9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9b0 = call %struct.Memory* @routine_movl__ecx__MINUS0x1a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9b0)
  store %struct.Memory* %call_42e9b0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e9f4	 RIP: 42e9b6	 Bytes: 5
  %loadMem_42e9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9b6 = call %struct.Memory* @routine_jmpq_.L_42e9f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9b6, i64 62, i64 5)
  store %struct.Memory* %call_42e9b6, %struct.Memory** %MEMORY

  br label %block_.L_42e9f4

  ; Code: .L_42e9bb:	 RIP: 42e9bb	 Bytes: 0
block_.L_42e9bb:

  ; Code: movl $0x400, %eax	 RIP: 42e9bb	 Bytes: 5
  %loadMem_42e9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9bb = call %struct.Memory* @routine_movl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9bb)
  store %struct.Memory* %call_42e9bb, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42e9c0	 Bytes: 8
  %loadMem_42e9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9c0 = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9c0)
  store %struct.Memory* %call_42e9c0, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 42e9c8	 Bytes: 4
  %loadMem_42e9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9c8 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9c8)
  store %struct.Memory* %call_42e9c8, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 42e9cc	 Bytes: 4
  %loadMem_42e9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9cc = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9cc)
  store %struct.Memory* %call_42e9cc, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 42e9d0	 Bytes: 4
  %loadMem_42e9d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9d0 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9d0)
  store %struct.Memory* %call_42e9d0, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 42e9d4	 Bytes: 3
  %loadMem_42e9d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9d4 = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9d4)
  store %struct.Memory* %call_42e9d4, %struct.Memory** %MEMORY

  ; Code: addl $0x200, %esi	 RIP: 42e9d7	 Bytes: 6
  %loadMem_42e9d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9d7 = call %struct.Memory* @routine_addl__0x200___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9d7)
  store %struct.Memory* %call_42e9d7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1ac(%rbp)	 RIP: 42e9dd	 Bytes: 6
  %loadMem_42e9dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9dd = call %struct.Memory* @routine_movl__eax__MINUS0x1ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9dd)
  store %struct.Memory* %call_42e9dd, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42e9e3	 Bytes: 2
  %loadMem_42e9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9e3 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9e3)
  store %struct.Memory* %call_42e9e3, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42e9e5	 Bytes: 1
  %loadMem_42e9e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9e5 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9e5)
  store %struct.Memory* %call_42e9e5, %struct.Memory** %MEMORY

  ; Code: movl -0x1ac(%rbp), %esi	 RIP: 42e9e6	 Bytes: 6
  %loadMem_42e9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9e6 = call %struct.Memory* @routine_movl_MINUS0x1ac__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9e6)
  store %struct.Memory* %call_42e9e6, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 42e9ec	 Bytes: 2
  %loadMem_42e9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9ec = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9ec)
  store %struct.Memory* %call_42e9ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1a8(%rbp)	 RIP: 42e9ee	 Bytes: 6
  %loadMem_42e9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9ee = call %struct.Memory* @routine_movl__eax__MINUS0x1a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9ee)
  store %struct.Memory* %call_42e9ee, %struct.Memory** %MEMORY

  ; Code: .L_42e9f4:	 RIP: 42e9f4	 Bytes: 0
  br label %block_.L_42e9f4
block_.L_42e9f4:

  ; Code: movl -0x1a8(%rbp), %eax	 RIP: 42e9f4	 Bytes: 6
  %loadMem_42e9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9f4 = call %struct.Memory* @routine_movl_MINUS0x1a8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9f4)
  store %struct.Memory* %call_42e9f4, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42e9fa	 Bytes: 2
  %loadMem_42e9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9fa = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9fa)
  store %struct.Memory* %call_42e9fa, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42e9fc	 Bytes: 2
  %loadMem_42e9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9fc = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9fc)
  store %struct.Memory* %call_42e9fc, %struct.Memory** %MEMORY

  ; Code: jle .L_42ea11	 RIP: 42e9fe	 Bytes: 6
  %loadMem_42e9fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42e9fe = call %struct.Memory* @routine_jle_.L_42ea11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42e9fe, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42e9fe, %struct.Memory** %MEMORY

  %loadBr_42e9fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42e9fe = icmp eq i8 %loadBr_42e9fe, 1
  br i1 %cmpBr_42e9fe, label %block_.L_42ea11, label %block_42ea04

block_42ea04:
  ; Code: xorl %eax, %eax	 RIP: 42ea04	 Bytes: 2
  %loadMem_42ea04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea04 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea04)
  store %struct.Memory* %call_42ea04, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b0(%rbp)	 RIP: 42ea06	 Bytes: 6
  %loadMem_42ea06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea06 = call %struct.Memory* @routine_movl__eax__MINUS0x1b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea06)
  store %struct.Memory* %call_42ea06, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42eac6	 RIP: 42ea0c	 Bytes: 5
  %loadMem_42ea0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea0c = call %struct.Memory* @routine_jmpq_.L_42eac6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea0c, i64 186, i64 5)
  store %struct.Memory* %call_42ea0c, %struct.Memory** %MEMORY

  br label %block_.L_42eac6

  ; Code: .L_42ea11:	 RIP: 42ea11	 Bytes: 0
block_.L_42ea11:

  ; Code: movl $0x400, %eax	 RIP: 42ea11	 Bytes: 5
  %loadMem_42ea11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea11 = call %struct.Memory* @routine_movl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea11)
  store %struct.Memory* %call_42ea11, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 42ea16	 Bytes: 8
  %loadMem_42ea16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea16 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea16)
  store %struct.Memory* %call_42ea16, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rcx), %edx	 RIP: 42ea1e	 Bytes: 6
  %loadMem_42ea1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea1e = call %struct.Memory* @routine_movl_0x11bec__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea1e)
  store %struct.Memory* %call_42ea1e, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42ea24	 Bytes: 8
  %loadMem_42ea24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea24 = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea24)
  store %struct.Memory* %call_42ea24, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rsi	 RIP: 42ea2c	 Bytes: 4
  %loadMem_42ea2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea2c = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea2c)
  store %struct.Memory* %call_42ea2c, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rsi,8), %rcx	 RIP: 42ea30	 Bytes: 4
  %loadMem_42ea30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea30 = call %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea30)
  store %struct.Memory* %call_42ea30, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rsi	 RIP: 42ea34	 Bytes: 4
  %loadMem_42ea34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea34 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea34)
  store %struct.Memory* %call_42ea34, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rsi,4), %edi	 RIP: 42ea38	 Bytes: 3
  %loadMem_42ea38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea38 = call %struct.Memory* @routine_movl___rcx__rsi_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea38)
  store %struct.Memory* %call_42ea38, %struct.Memory** %MEMORY

  ; Code: addl $0x200, %edi	 RIP: 42ea3b	 Bytes: 6
  %loadMem_42ea3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea3b = call %struct.Memory* @routine_addl__0x200___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea3b)
  store %struct.Memory* %call_42ea3b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b4(%rbp)	 RIP: 42ea41	 Bytes: 6
  %loadMem_42ea41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea41 = call %struct.Memory* @routine_movl__eax__MINUS0x1b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea41)
  store %struct.Memory* %call_42ea41, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 42ea47	 Bytes: 2
  %loadMem_42ea47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea47 = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea47)
  store %struct.Memory* %call_42ea47, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1b8(%rbp)	 RIP: 42ea49	 Bytes: 6
  %loadMem_42ea49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea49 = call %struct.Memory* @routine_movl__edx__MINUS0x1b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea49)
  store %struct.Memory* %call_42ea49, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42ea4f	 Bytes: 1
  %loadMem_42ea4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea4f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea4f)
  store %struct.Memory* %call_42ea4f, %struct.Memory** %MEMORY

  ; Code: movl -0x1b4(%rbp), %edi	 RIP: 42ea50	 Bytes: 6
  %loadMem_42ea50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea50 = call %struct.Memory* @routine_movl_MINUS0x1b4__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea50)
  store %struct.Memory* %call_42ea50, %struct.Memory** %MEMORY

  ; Code: idivl %edi	 RIP: 42ea56	 Bytes: 2
  %loadMem_42ea56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea56 = call %struct.Memory* @routine_idivl__edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea56)
  store %struct.Memory* %call_42ea56, %struct.Memory** %MEMORY

  ; Code: movl -0x1b8(%rbp), %r8d	 RIP: 42ea58	 Bytes: 7
  %loadMem_42ea58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea58 = call %struct.Memory* @routine_movl_MINUS0x1b8__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea58)
  store %struct.Memory* %call_42ea58, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %r8d	 RIP: 42ea5f	 Bytes: 3
  %loadMem_42ea5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea5f = call %struct.Memory* @routine_cmpl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea5f)
  store %struct.Memory* %call_42ea5f, %struct.Memory** %MEMORY

  ; Code: jge .L_42ea81	 RIP: 42ea62	 Bytes: 6
  %loadMem_42ea62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea62 = call %struct.Memory* @routine_jge_.L_42ea81(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea62, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42ea62, %struct.Memory** %MEMORY

  %loadBr_42ea62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42ea62 = icmp eq i8 %loadBr_42ea62, 1
  br i1 %cmpBr_42ea62, label %block_.L_42ea81, label %block_42ea68

block_42ea68:
  ; Code: movq 0x6cb900, %rax	 RIP: 42ea68	 Bytes: 8
  %loadMem_42ea68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea68 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea68)
  store %struct.Memory* %call_42ea68, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42ea70	 Bytes: 6
  %loadMem_42ea70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea70 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea70)
  store %struct.Memory* %call_42ea70, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1bc(%rbp)	 RIP: 42ea76	 Bytes: 6
  %loadMem_42ea76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea76 = call %struct.Memory* @routine_movl__ecx__MINUS0x1bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea76)
  store %struct.Memory* %call_42ea76, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42eaba	 RIP: 42ea7c	 Bytes: 5
  %loadMem_42ea7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea7c = call %struct.Memory* @routine_jmpq_.L_42eaba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea7c, i64 62, i64 5)
  store %struct.Memory* %call_42ea7c, %struct.Memory** %MEMORY

  br label %block_.L_42eaba

  ; Code: .L_42ea81:	 RIP: 42ea81	 Bytes: 0
block_.L_42ea81:

  ; Code: movl $0x400, %eax	 RIP: 42ea81	 Bytes: 5
  %loadMem_42ea81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea81 = call %struct.Memory* @routine_movl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea81)
  store %struct.Memory* %call_42ea81, %struct.Memory** %MEMORY

  ; Code: movq 0x726410, %rcx	 RIP: 42ea86	 Bytes: 8
  %loadMem_42ea86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea86 = call %struct.Memory* @routine_movq_0x726410___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea86)
  store %struct.Memory* %call_42ea86, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 42ea8e	 Bytes: 4
  %loadMem_42ea8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea8e = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea8e)
  store %struct.Memory* %call_42ea8e, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 42ea92	 Bytes: 4
  %loadMem_42ea92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea92 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea92)
  store %struct.Memory* %call_42ea92, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 42ea96	 Bytes: 4
  %loadMem_42ea96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea96 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea96)
  store %struct.Memory* %call_42ea96, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 42ea9a	 Bytes: 3
  %loadMem_42ea9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea9a = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea9a)
  store %struct.Memory* %call_42ea9a, %struct.Memory** %MEMORY

  ; Code: addl $0x200, %esi	 RIP: 42ea9d	 Bytes: 6
  %loadMem_42ea9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ea9d = call %struct.Memory* @routine_addl__0x200___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ea9d)
  store %struct.Memory* %call_42ea9d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c0(%rbp)	 RIP: 42eaa3	 Bytes: 6
  %loadMem_42eaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaa3 = call %struct.Memory* @routine_movl__eax__MINUS0x1c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaa3)
  store %struct.Memory* %call_42eaa3, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42eaa9	 Bytes: 2
  %loadMem_42eaa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaa9 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaa9)
  store %struct.Memory* %call_42eaa9, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42eaab	 Bytes: 1
  %loadMem_42eaab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaab = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaab)
  store %struct.Memory* %call_42eaab, %struct.Memory** %MEMORY

  ; Code: movl -0x1c0(%rbp), %esi	 RIP: 42eaac	 Bytes: 6
  %loadMem_42eaac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaac = call %struct.Memory* @routine_movl_MINUS0x1c0__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaac)
  store %struct.Memory* %call_42eaac, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 42eab2	 Bytes: 2
  %loadMem_42eab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eab2 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eab2)
  store %struct.Memory* %call_42eab2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1bc(%rbp)	 RIP: 42eab4	 Bytes: 6
  %loadMem_42eab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eab4 = call %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eab4)
  store %struct.Memory* %call_42eab4, %struct.Memory** %MEMORY

  ; Code: .L_42eaba:	 RIP: 42eaba	 Bytes: 0
  br label %block_.L_42eaba
block_.L_42eaba:

  ; Code: movl -0x1bc(%rbp), %eax	 RIP: 42eaba	 Bytes: 6
  %loadMem_42eaba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaba = call %struct.Memory* @routine_movl_MINUS0x1bc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaba)
  store %struct.Memory* %call_42eaba, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1b0(%rbp)	 RIP: 42eac0	 Bytes: 6
  %loadMem_42eac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eac0 = call %struct.Memory* @routine_movl__eax__MINUS0x1b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eac0)
  store %struct.Memory* %call_42eac0, %struct.Memory** %MEMORY

  ; Code: .L_42eac6:	 RIP: 42eac6	 Bytes: 0
  br label %block_.L_42eac6
block_.L_42eac6:

  ; Code: movl -0x1b0(%rbp), %eax	 RIP: 42eac6	 Bytes: 6
  %loadMem_42eac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eac6 = call %struct.Memory* @routine_movl_MINUS0x1b0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eac6)
  store %struct.Memory* %call_42eac6, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 42eacc	 Bytes: 3
  %loadMem_42eacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eacc = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eacc)
  store %struct.Memory* %call_42eacc, %struct.Memory** %MEMORY

  ; Code: movq -0x1a0(%rbp), %rdi	 RIP: 42eacf	 Bytes: 7
  %loadMem_42eacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eacf = call %struct.Memory* @routine_movq_MINUS0x1a0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eacf)
  store %struct.Memory* %call_42eacf, %struct.Memory** %MEMORY

  ; Code: movl -0x194(%rbp), %esi	 RIP: 42ead6	 Bytes: 6
  %loadMem_42ead6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ead6 = call %struct.Memory* @routine_movl_MINUS0x194__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ead6)
  store %struct.Memory* %call_42ead6, %struct.Memory** %MEMORY

  ; Code: movl -0x1a4(%rbp), %edx	 RIP: 42eadc	 Bytes: 6
  %loadMem_42eadc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eadc = call %struct.Memory* @routine_movl_MINUS0x1a4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eadc)
  store %struct.Memory* %call_42eadc, %struct.Memory** %MEMORY

  ; Code: movzwl %cx, %ecx	 RIP: 42eae2	 Bytes: 3
  %loadMem_42eae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eae2 = call %struct.Memory* @routine_movzwl__cx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eae2)
  store %struct.Memory* %call_42eae2, %struct.Memory** %MEMORY

  ; Code: callq .PutPel_14	 RIP: 42eae5	 Bytes: 5
  %loadMem1_42eae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42eae5 = call %struct.Memory* @routine_callq_.PutPel_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42eae5, i64 456331, i64 5, i64 5)
  store %struct.Memory* %call1_42eae5, %struct.Memory** %MEMORY

  %loadMem2_42eae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42eae5 = load i64, i64* %3
  %call2_42eae5 = call %struct.Memory* @sub_49e170.PutPel_14(%struct.State* %0, i64  %loadPC_42eae5, %struct.Memory* %loadMem2_42eae5)
  store %struct.Memory* %call2_42eae5, %struct.Memory** %MEMORY

  ; Code: movl $0x400, %eax	 RIP: 42eaea	 Bytes: 5
  %loadMem_42eaea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaea = call %struct.Memory* @routine_movl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaea)
  store %struct.Memory* %call_42eaea, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42eaef	 Bytes: 4
  %loadMem_42eaef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaef = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaef)
  store %struct.Memory* %call_42eaef, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %ecx	 RIP: 42eaf3	 Bytes: 3
  %loadMem_42eaf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaf3 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaf3)
  store %struct.Memory* %call_42eaf3, %struct.Memory** %MEMORY

  ; Code: subl $0x4, %ecx	 RIP: 42eaf6	 Bytes: 3
  %loadMem_42eaf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaf6 = call %struct.Memory* @routine_subl__0x4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaf6)
  store %struct.Memory* %call_42eaf6, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %ecx	 RIP: 42eaf9	 Bytes: 3
  %loadMem_42eaf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaf9 = call %struct.Memory* @routine_shll__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaf9)
  store %struct.Memory* %call_42eaf9, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 42eafc	 Bytes: 3
  %loadMem_42eafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eafc = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eafc)
  store %struct.Memory* %call_42eafc, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42eaff	 Bytes: 3
  %loadMem_42eaff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eaff = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eaff)
  store %struct.Memory* %call_42eaff, %struct.Memory** %MEMORY

  ; Code: subl $0x8, %edx	 RIP: 42eb02	 Bytes: 3
  %loadMem_42eb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb02 = call %struct.Memory* @routine_subl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb02)
  store %struct.Memory* %call_42eb02, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 42eb05	 Bytes: 3
  %loadMem_42eb05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb05 = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb05)
  store %struct.Memory* %call_42eb05, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %r8	 RIP: 42eb08	 Bytes: 8
  %loadMem_42eb08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb08 = call %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb08)
  store %struct.Memory* %call_42eb08, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%r8), %esi	 RIP: 42eb10	 Bytes: 7
  %loadMem_42eb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb10 = call %struct.Memory* @routine_movl_0x11bec__r8____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb10)
  store %struct.Memory* %call_42eb10, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %r9d	 RIP: 42eb17	 Bytes: 4
  %loadMem_42eb17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb17 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb17)
  store %struct.Memory* %call_42eb17, %struct.Memory** %MEMORY

  ; Code: addl $0x200, %r9d	 RIP: 42eb1b	 Bytes: 7
  %loadMem_42eb1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb1b = call %struct.Memory* @routine_addl__0x200___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb1b)
  store %struct.Memory* %call_42eb1b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c4(%rbp)	 RIP: 42eb22	 Bytes: 6
  %loadMem_42eb22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb22 = call %struct.Memory* @routine_movl__eax__MINUS0x1c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb22)
  store %struct.Memory* %call_42eb22, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %eax	 RIP: 42eb28	 Bytes: 3
  %loadMem_42eb28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb28 = call %struct.Memory* @routine_movl__r9d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb28)
  store %struct.Memory* %call_42eb28, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1c8(%rbp)	 RIP: 42eb2b	 Bytes: 6
  %loadMem_42eb2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb2b = call %struct.Memory* @routine_movl__edx__MINUS0x1c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb2b)
  store %struct.Memory* %call_42eb2b, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42eb31	 Bytes: 1
  %loadMem_42eb31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb31 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb31)
  store %struct.Memory* %call_42eb31, %struct.Memory** %MEMORY

  ; Code: movl -0x1c4(%rbp), %r9d	 RIP: 42eb32	 Bytes: 7
  %loadMem_42eb32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb32 = call %struct.Memory* @routine_movl_MINUS0x1c4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb32)
  store %struct.Memory* %call_42eb32, %struct.Memory** %MEMORY

  ; Code: idivl %r9d	 RIP: 42eb39	 Bytes: 3
  %loadMem_42eb39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb39 = call %struct.Memory* @routine_idivl__r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb39)
  store %struct.Memory* %call_42eb39, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %esi	 RIP: 42eb3c	 Bytes: 2
  %loadMem_42eb3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb3c = call %struct.Memory* @routine_cmpl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb3c)
  store %struct.Memory* %call_42eb3c, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x1d0(%rbp)	 RIP: 42eb3e	 Bytes: 7
  %loadMem_42eb3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb3e = call %struct.Memory* @routine_movq__rdi__MINUS0x1d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb3e)
  store %struct.Memory* %call_42eb3e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1d4(%rbp)	 RIP: 42eb45	 Bytes: 6
  %loadMem_42eb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb45 = call %struct.Memory* @routine_movl__ecx__MINUS0x1d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb45)
  store %struct.Memory* %call_42eb45, %struct.Memory** %MEMORY

  ; Code: jge .L_42eb6a	 RIP: 42eb4b	 Bytes: 6
  %loadMem_42eb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb4b = call %struct.Memory* @routine_jge_.L_42eb6a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb4b, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42eb4b, %struct.Memory** %MEMORY

  %loadBr_42eb4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42eb4b = icmp eq i8 %loadBr_42eb4b, 1
  br i1 %cmpBr_42eb4b, label %block_.L_42eb6a, label %block_42eb51

block_42eb51:
  ; Code: movq 0x6cb900, %rax	 RIP: 42eb51	 Bytes: 8
  %loadMem_42eb51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb51 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb51)
  store %struct.Memory* %call_42eb51, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42eb59	 Bytes: 6
  %loadMem_42eb59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb59 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb59)
  store %struct.Memory* %call_42eb59, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1d8(%rbp)	 RIP: 42eb5f	 Bytes: 6
  %loadMem_42eb5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb5f = call %struct.Memory* @routine_movl__ecx__MINUS0x1d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb5f)
  store %struct.Memory* %call_42eb5f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42eb8f	 RIP: 42eb65	 Bytes: 5
  %loadMem_42eb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb65 = call %struct.Memory* @routine_jmpq_.L_42eb8f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb65, i64 42, i64 5)
  store %struct.Memory* %call_42eb65, %struct.Memory** %MEMORY

  br label %block_.L_42eb8f

  ; Code: .L_42eb6a:	 RIP: 42eb6a	 Bytes: 0
block_.L_42eb6a:

  ; Code: movl $0x400, %eax	 RIP: 42eb6a	 Bytes: 5
  %loadMem_42eb6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb6a = call %struct.Memory* @routine_movl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb6a)
  store %struct.Memory* %call_42eb6a, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %ecx	 RIP: 42eb6f	 Bytes: 3
  %loadMem_42eb6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb6f = call %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb6f)
  store %struct.Memory* %call_42eb6f, %struct.Memory** %MEMORY

  ; Code: addl $0x200, %ecx	 RIP: 42eb72	 Bytes: 6
  %loadMem_42eb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb72 = call %struct.Memory* @routine_addl__0x200___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb72)
  store %struct.Memory* %call_42eb72, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1dc(%rbp)	 RIP: 42eb78	 Bytes: 6
  %loadMem_42eb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb78 = call %struct.Memory* @routine_movl__eax__MINUS0x1dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb78)
  store %struct.Memory* %call_42eb78, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 42eb7e	 Bytes: 2
  %loadMem_42eb7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb7e = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb7e)
  store %struct.Memory* %call_42eb7e, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42eb80	 Bytes: 1
  %loadMem_42eb80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb80 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb80)
  store %struct.Memory* %call_42eb80, %struct.Memory** %MEMORY

  ; Code: movl -0x1dc(%rbp), %ecx	 RIP: 42eb81	 Bytes: 6
  %loadMem_42eb81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb81 = call %struct.Memory* @routine_movl_MINUS0x1dc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb81)
  store %struct.Memory* %call_42eb81, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42eb87	 Bytes: 2
  %loadMem_42eb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb87 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb87)
  store %struct.Memory* %call_42eb87, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1d8(%rbp)	 RIP: 42eb89	 Bytes: 6
  %loadMem_42eb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb89 = call %struct.Memory* @routine_movl__eax__MINUS0x1d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb89)
  store %struct.Memory* %call_42eb89, %struct.Memory** %MEMORY

  ; Code: .L_42eb8f:	 RIP: 42eb8f	 Bytes: 0
  br label %block_.L_42eb8f
block_.L_42eb8f:

  ; Code: movl -0x1d8(%rbp), %eax	 RIP: 42eb8f	 Bytes: 6
  %loadMem_42eb8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb8f = call %struct.Memory* @routine_movl_MINUS0x1d8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb8f)
  store %struct.Memory* %call_42eb8f, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42eb95	 Bytes: 2
  %loadMem_42eb95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb95 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb95)
  store %struct.Memory* %call_42eb95, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42eb97	 Bytes: 2
  %loadMem_42eb97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb97 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb97)
  store %struct.Memory* %call_42eb97, %struct.Memory** %MEMORY

  ; Code: jle .L_42ebac	 RIP: 42eb99	 Bytes: 6
  %loadMem_42eb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb99 = call %struct.Memory* @routine_jle_.L_42ebac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb99, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42eb99, %struct.Memory** %MEMORY

  %loadBr_42eb99 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42eb99 = icmp eq i8 %loadBr_42eb99, 1
  br i1 %cmpBr_42eb99, label %block_.L_42ebac, label %block_42eb9f

block_42eb9f:
  ; Code: xorl %eax, %eax	 RIP: 42eb9f	 Bytes: 2
  %loadMem_42eb9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eb9f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eb9f)
  store %struct.Memory* %call_42eb9f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e0(%rbp)	 RIP: 42eba1	 Bytes: 6
  %loadMem_42eba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eba1 = call %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eba1)
  store %struct.Memory* %call_42eba1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ec37	 RIP: 42eba7	 Bytes: 5
  %loadMem_42eba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eba7 = call %struct.Memory* @routine_jmpq_.L_42ec37(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eba7, i64 144, i64 5)
  store %struct.Memory* %call_42eba7, %struct.Memory** %MEMORY

  br label %block_.L_42ec37

  ; Code: .L_42ebac:	 RIP: 42ebac	 Bytes: 0
block_.L_42ebac:

  ; Code: movl $0x400, %eax	 RIP: 42ebac	 Bytes: 5
  %loadMem_42ebac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebac = call %struct.Memory* @routine_movl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebac)
  store %struct.Memory* %call_42ebac, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 42ebb1	 Bytes: 8
  %loadMem_42ebb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebb1 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebb1)
  store %struct.Memory* %call_42ebb1, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rcx), %edx	 RIP: 42ebb9	 Bytes: 6
  %loadMem_42ebb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebb9 = call %struct.Memory* @routine_movl_0x11bec__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebb9)
  store %struct.Memory* %call_42ebb9, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %esi	 RIP: 42ebbf	 Bytes: 3
  %loadMem_42ebbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebbf = call %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebbf)
  store %struct.Memory* %call_42ebbf, %struct.Memory** %MEMORY

  ; Code: addl $0x200, %esi	 RIP: 42ebc2	 Bytes: 6
  %loadMem_42ebc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebc2 = call %struct.Memory* @routine_addl__0x200___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebc2)
  store %struct.Memory* %call_42ebc2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e4(%rbp)	 RIP: 42ebc8	 Bytes: 6
  %loadMem_42ebc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebc8 = call %struct.Memory* @routine_movl__eax__MINUS0x1e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebc8)
  store %struct.Memory* %call_42ebc8, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42ebce	 Bytes: 2
  %loadMem_42ebce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebce = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebce)
  store %struct.Memory* %call_42ebce, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x1e8(%rbp)	 RIP: 42ebd0	 Bytes: 6
  %loadMem_42ebd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebd0 = call %struct.Memory* @routine_movl__edx__MINUS0x1e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebd0)
  store %struct.Memory* %call_42ebd0, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42ebd6	 Bytes: 1
  %loadMem_42ebd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebd6 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebd6)
  store %struct.Memory* %call_42ebd6, %struct.Memory** %MEMORY

  ; Code: movl -0x1e4(%rbp), %esi	 RIP: 42ebd7	 Bytes: 6
  %loadMem_42ebd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebd7 = call %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebd7)
  store %struct.Memory* %call_42ebd7, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 42ebdd	 Bytes: 2
  %loadMem_42ebdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebdd = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebdd)
  store %struct.Memory* %call_42ebdd, %struct.Memory** %MEMORY

  ; Code: movl -0x1e8(%rbp), %edi	 RIP: 42ebdf	 Bytes: 6
  %loadMem_42ebdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebdf = call %struct.Memory* @routine_movl_MINUS0x1e8__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebdf)
  store %struct.Memory* %call_42ebdf, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %edi	 RIP: 42ebe5	 Bytes: 2
  %loadMem_42ebe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebe5 = call %struct.Memory* @routine_cmpl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebe5)
  store %struct.Memory* %call_42ebe5, %struct.Memory** %MEMORY

  ; Code: jge .L_42ec06	 RIP: 42ebe7	 Bytes: 6
  %loadMem_42ebe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebe7 = call %struct.Memory* @routine_jge_.L_42ec06(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebe7, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42ebe7, %struct.Memory** %MEMORY

  %loadBr_42ebe7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42ebe7 = icmp eq i8 %loadBr_42ebe7, 1
  br i1 %cmpBr_42ebe7, label %block_.L_42ec06, label %block_42ebed

block_42ebed:
  ; Code: movq 0x6cb900, %rax	 RIP: 42ebed	 Bytes: 8
  %loadMem_42ebed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebed = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebed)
  store %struct.Memory* %call_42ebed, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42ebf5	 Bytes: 6
  %loadMem_42ebf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebf5 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebf5)
  store %struct.Memory* %call_42ebf5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1ec(%rbp)	 RIP: 42ebfb	 Bytes: 6
  %loadMem_42ebfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ebfb = call %struct.Memory* @routine_movl__ecx__MINUS0x1ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ebfb)
  store %struct.Memory* %call_42ebfb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ec2b	 RIP: 42ec01	 Bytes: 5
  %loadMem_42ec01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec01 = call %struct.Memory* @routine_jmpq_.L_42ec2b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec01, i64 42, i64 5)
  store %struct.Memory* %call_42ec01, %struct.Memory** %MEMORY

  br label %block_.L_42ec2b

  ; Code: .L_42ec06:	 RIP: 42ec06	 Bytes: 0
block_.L_42ec06:

  ; Code: movl $0x400, %eax	 RIP: 42ec06	 Bytes: 5
  %loadMem_42ec06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec06 = call %struct.Memory* @routine_movl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec06)
  store %struct.Memory* %call_42ec06, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %ecx	 RIP: 42ec0b	 Bytes: 3
  %loadMem_42ec0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec0b = call %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec0b)
  store %struct.Memory* %call_42ec0b, %struct.Memory** %MEMORY

  ; Code: addl $0x200, %ecx	 RIP: 42ec0e	 Bytes: 6
  %loadMem_42ec0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec0e = call %struct.Memory* @routine_addl__0x200___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec0e)
  store %struct.Memory* %call_42ec0e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1f0(%rbp)	 RIP: 42ec14	 Bytes: 6
  %loadMem_42ec14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec14 = call %struct.Memory* @routine_movl__eax__MINUS0x1f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec14)
  store %struct.Memory* %call_42ec14, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 42ec1a	 Bytes: 2
  %loadMem_42ec1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec1a = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec1a)
  store %struct.Memory* %call_42ec1a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42ec1c	 Bytes: 1
  %loadMem_42ec1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec1c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec1c)
  store %struct.Memory* %call_42ec1c, %struct.Memory** %MEMORY

  ; Code: movl -0x1f0(%rbp), %ecx	 RIP: 42ec1d	 Bytes: 6
  %loadMem_42ec1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec1d = call %struct.Memory* @routine_movl_MINUS0x1f0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec1d)
  store %struct.Memory* %call_42ec1d, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42ec23	 Bytes: 2
  %loadMem_42ec23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec23 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec23)
  store %struct.Memory* %call_42ec23, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1ec(%rbp)	 RIP: 42ec25	 Bytes: 6
  %loadMem_42ec25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec25 = call %struct.Memory* @routine_movl__eax__MINUS0x1ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec25)
  store %struct.Memory* %call_42ec25, %struct.Memory** %MEMORY

  ; Code: .L_42ec2b:	 RIP: 42ec2b	 Bytes: 0
  br label %block_.L_42ec2b
block_.L_42ec2b:

  ; Code: movl -0x1ec(%rbp), %eax	 RIP: 42ec2b	 Bytes: 6
  %loadMem_42ec2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec2b = call %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec2b)
  store %struct.Memory* %call_42ec2b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1e0(%rbp)	 RIP: 42ec31	 Bytes: 6
  %loadMem_42ec31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec31 = call %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec31)
  store %struct.Memory* %call_42ec31, %struct.Memory** %MEMORY

  ; Code: .L_42ec37:	 RIP: 42ec37	 Bytes: 0
  br label %block_.L_42ec37
block_.L_42ec37:

  ; Code: movl -0x1e0(%rbp), %eax	 RIP: 42ec37	 Bytes: 6
  %loadMem_42ec37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec37 = call %struct.Memory* @routine_movl_MINUS0x1e0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec37)
  store %struct.Memory* %call_42ec37, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 42ec3d	 Bytes: 3
  %loadMem_42ec3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec3d = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec3d)
  store %struct.Memory* %call_42ec3d, %struct.Memory** %MEMORY

  ; Code: movq -0x1d0(%rbp), %rdi	 RIP: 42ec40	 Bytes: 7
  %loadMem_42ec40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec40 = call %struct.Memory* @routine_movq_MINUS0x1d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec40)
  store %struct.Memory* %call_42ec40, %struct.Memory** %MEMORY

  ; Code: movl -0x1d4(%rbp), %esi	 RIP: 42ec47	 Bytes: 6
  %loadMem_42ec47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec47 = call %struct.Memory* @routine_movl_MINUS0x1d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec47)
  store %struct.Memory* %call_42ec47, %struct.Memory** %MEMORY

  ; Code: movl -0x1c8(%rbp), %edx	 RIP: 42ec4d	 Bytes: 6
  %loadMem_42ec4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec4d = call %struct.Memory* @routine_movl_MINUS0x1c8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec4d)
  store %struct.Memory* %call_42ec4d, %struct.Memory** %MEMORY

  ; Code: movzwl %cx, %ecx	 RIP: 42ec53	 Bytes: 3
  %loadMem_42ec53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec53 = call %struct.Memory* @routine_movzwl__cx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec53)
  store %struct.Memory* %call_42ec53, %struct.Memory** %MEMORY

  ; Code: callq .PutPel_14	 RIP: 42ec56	 Bytes: 5
  %loadMem1_42ec56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ec56 = call %struct.Memory* @routine_callq_.PutPel_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ec56, i64 455962, i64 5, i64 5)
  store %struct.Memory* %call1_42ec56, %struct.Memory** %MEMORY

  %loadMem2_42ec56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ec56 = load i64, i64* %3
  %call2_42ec56 = call %struct.Memory* @sub_49e170.PutPel_14(%struct.State* %0, i64  %loadPC_42ec56, %struct.Memory* %loadMem2_42ec56)
  store %struct.Memory* %call2_42ec56, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42ec5b	 Bytes: 3
  %loadMem_42ec5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec5b = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec5b)
  store %struct.Memory* %call_42ec5b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42ec5e	 Bytes: 3
  %loadMem_42ec5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec5e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec5e)
  store %struct.Memory* %call_42ec5e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 42ec61	 Bytes: 3
  %loadMem_42ec61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec61 = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec61)
  store %struct.Memory* %call_42ec61, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e68f	 RIP: 42ec64	 Bytes: 5
  %loadMem_42ec64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec64 = call %struct.Memory* @routine_jmpq_.L_42e68f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec64, i64 -1493, i64 5)
  store %struct.Memory* %call_42ec64, %struct.Memory** %MEMORY

  br label %block_.L_42e68f

  ; Code: .L_42ec69:	 RIP: 42ec69	 Bytes: 0
block_.L_42ec69:

  ; Code: jmpq .L_42ec6e	 RIP: 42ec69	 Bytes: 5
  %loadMem_42ec69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec69 = call %struct.Memory* @routine_jmpq_.L_42ec6e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec69, i64 5, i64 5)
  store %struct.Memory* %call_42ec69, %struct.Memory** %MEMORY

  br label %block_.L_42ec6e

  ; Code: .L_42ec6e:	 RIP: 42ec6e	 Bytes: 0
block_.L_42ec6e:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42ec6e	 Bytes: 3
  %loadMem_42ec6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec6e = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec6e)
  store %struct.Memory* %call_42ec6e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42ec71	 Bytes: 3
  %loadMem_42ec71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec71 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec71)
  store %struct.Memory* %call_42ec71, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 42ec74	 Bytes: 3
  %loadMem_42ec74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec74 = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec74)
  store %struct.Memory* %call_42ec74, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42e66d	 RIP: 42ec77	 Bytes: 5
  %loadMem_42ec77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec77 = call %struct.Memory* @routine_jmpq_.L_42e66d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec77, i64 -1546, i64 5)
  store %struct.Memory* %call_42ec77, %struct.Memory** %MEMORY

  br label %block_.L_42e66d

  ; Code: .L_42ec7c:	 RIP: 42ec7c	 Bytes: 0
block_.L_42ec7c:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42ec7c	 Bytes: 4
  %loadMem_42ec7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec7c = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec7c)
  store %struct.Memory* %call_42ec7c, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %ecx	 RIP: 42ec80	 Bytes: 6
  %loadMem_42ec80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec80 = call %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec80)
  store %struct.Memory* %call_42ec80, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %ecx	 RIP: 42ec86	 Bytes: 3
  %loadMem_42ec86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec86 = call %struct.Memory* @routine_addl__0x8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec86)
  store %struct.Memory* %call_42ec86, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42ec89	 Bytes: 3
  %loadMem_42ec89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec89 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec89)
  store %struct.Memory* %call_42ec89, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %ecx	 RIP: 42ec8c	 Bytes: 3
  %loadMem_42ec8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec8c = call %struct.Memory* @routine_shll__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec8c)
  store %struct.Memory* %call_42ec8c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x24(%rbp)	 RIP: 42ec8f	 Bytes: 3
  %loadMem_42ec8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec8f = call %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec8f)
  store %struct.Memory* %call_42ec8f, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42ec92	 Bytes: 4
  %loadMem_42ec92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec92 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec92)
  store %struct.Memory* %call_42ec92, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rax), %ecx	 RIP: 42ec96	 Bytes: 6
  %loadMem_42ec96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec96 = call %struct.Memory* @routine_movl_0x18fc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec96)
  store %struct.Memory* %call_42ec96, %struct.Memory** %MEMORY

  ; Code: addl $0x8, %ecx	 RIP: 42ec9c	 Bytes: 3
  %loadMem_42ec9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec9c = call %struct.Memory* @routine_addl__0x8___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec9c)
  store %struct.Memory* %call_42ec9c, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42ec9f	 Bytes: 3
  %loadMem_42ec9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ec9f = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ec9f)
  store %struct.Memory* %call_42ec9f, %struct.Memory** %MEMORY

  ; Code: shll $0x2, %ecx	 RIP: 42eca2	 Bytes: 3
  %loadMem_42eca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eca2 = call %struct.Memory* @routine_shll__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eca2)
  store %struct.Memory* %call_42eca2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x28(%rbp)	 RIP: 42eca5	 Bytes: 3
  %loadMem_42eca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eca5 = call %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eca5)
  store %struct.Memory* %call_42eca5, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x1c(%rbp)	 RIP: 42eca8	 Bytes: 7
  %loadMem_42eca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eca8 = call %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eca8)
  store %struct.Memory* %call_42eca8, %struct.Memory** %MEMORY

  ; Code: .L_42ecaf:	 RIP: 42ecaf	 Bytes: 0
  br label %block_.L_42ecaf
block_.L_42ecaf:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42ecaf	 Bytes: 3
  %loadMem_42ecaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecaf = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecaf)
  store %struct.Memory* %call_42ecaf, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %ecx	 RIP: 42ecb2	 Bytes: 3
  %loadMem_42ecb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecb2 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecb2)
  store %struct.Memory* %call_42ecb2, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %ecx	 RIP: 42ecb5	 Bytes: 3
  %loadMem_42ecb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecb5 = call %struct.Memory* @routine_addl__0x4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecb5)
  store %struct.Memory* %call_42ecb5, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 42ecb8	 Bytes: 2
  %loadMem_42ecb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecb8 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecb8)
  store %struct.Memory* %call_42ecb8, %struct.Memory** %MEMORY

  ; Code: jge .L_42f0e7	 RIP: 42ecba	 Bytes: 6
  %loadMem_42ecba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecba = call %struct.Memory* @routine_jge_.L_42f0e7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecba, i8* %BRANCH_TAKEN, i64 1069, i64 6, i64 6)
  store %struct.Memory* %call_42ecba, %struct.Memory** %MEMORY

  %loadBr_42ecba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42ecba = icmp eq i8 %loadBr_42ecba, 1
  br i1 %cmpBr_42ecba, label %block_.L_42f0e7, label %block_42ecc0

block_42ecc0:
  ; Code: movl $0x0, -0x18(%rbp)	 RIP: 42ecc0	 Bytes: 7
  %loadMem_42ecc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecc0 = call %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecc0)
  store %struct.Memory* %call_42ecc0, %struct.Memory** %MEMORY

  ; Code: .L_42ecc7:	 RIP: 42ecc7	 Bytes: 0
  br label %block_.L_42ecc7
block_.L_42ecc7:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42ecc7	 Bytes: 3
  %loadMem_42ecc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecc7 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecc7)
  store %struct.Memory* %call_42ecc7, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 42ecca	 Bytes: 3
  %loadMem_42ecca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecca = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecca)
  store %struct.Memory* %call_42ecca, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %ecx	 RIP: 42eccd	 Bytes: 3
  %loadMem_42eccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eccd = call %struct.Memory* @routine_addl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eccd)
  store %struct.Memory* %call_42eccd, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 42ecd0	 Bytes: 2
  %loadMem_42ecd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecd0 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecd0)
  store %struct.Memory* %call_42ecd0, %struct.Memory** %MEMORY

  ; Code: jge .L_42f0d4	 RIP: 42ecd2	 Bytes: 6
  %loadMem_42ecd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecd2 = call %struct.Memory* @routine_jge_.L_42f0d4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecd2, i8* %BRANCH_TAKEN, i64 1026, i64 6, i64 6)
  store %struct.Memory* %call_42ecd2, %struct.Memory** %MEMORY

  %loadBr_42ecd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42ecd2 = icmp eq i8 %loadBr_42ecd2, 1
  br i1 %cmpBr_42ecd2, label %block_.L_42f0d4, label %block_42ecd8

block_42ecd8:
  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42ecd8	 Bytes: 4
  %loadMem_42ecd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecd8 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecd8)
  store %struct.Memory* %call_42ecd8, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42ecdc	 Bytes: 3
  %loadMem_42ecdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecdc = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecdc)
  store %struct.Memory* %call_42ecdc, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42ecdf	 Bytes: 3
  %loadMem_42ecdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecdf = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecdf)
  store %struct.Memory* %call_42ecdf, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42ece2	 Bytes: 3
  %loadMem_42ece2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ece2 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ece2)
  store %struct.Memory* %call_42ece2, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42ece5	 Bytes: 3
  %loadMem_42ece5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ece5 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ece5)
  store %struct.Memory* %call_42ece5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 42ece8	 Bytes: 3
  %loadMem_42ece8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ece8 = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ece8)
  store %struct.Memory* %call_42ece8, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 42eceb	 Bytes: 8
  %loadMem_42eceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eceb = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eceb)
  store %struct.Memory* %call_42eceb, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rdx), %esi	 RIP: 42ecf3	 Bytes: 6
  %loadMem_42ecf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecf3 = call %struct.Memory* @routine_movl_0x11bec__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecf3)
  store %struct.Memory* %call_42ecf3, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdx	 RIP: 42ecf9	 Bytes: 4
  %loadMem_42ecf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecf9 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecf9)
  store %struct.Memory* %call_42ecf9, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r8d	 RIP: 42ecfd	 Bytes: 4
  %loadMem_42ecfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ecfd = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ecfd)
  store %struct.Memory* %call_42ecfd, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %r8d	 RIP: 42ed01	 Bytes: 4
  %loadMem_42ed01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed01 = call %struct.Memory* @routine_subl__0x10___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed01)
  store %struct.Memory* %call_42ed01, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r9d	 RIP: 42ed05	 Bytes: 4
  %loadMem_42ed05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed05 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed05)
  store %struct.Memory* %call_42ed05, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %r9d	 RIP: 42ed09	 Bytes: 4
  %loadMem_42ed09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed09 = call %struct.Memory* @routine_subl__0x10___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed09)
  store %struct.Memory* %call_42ed09, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 42ed0d	 Bytes: 4
  %loadMem_42ed0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed0d = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed0d)
  store %struct.Memory* %call_42ed0d, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r11d	 RIP: 42ed11	 Bytes: 4
  %loadMem_42ed11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed11 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed11)
  store %struct.Memory* %call_42ed11, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x1f8(%rbp)	 RIP: 42ed15	 Bytes: 7
  %loadMem_42ed15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed15 = call %struct.Memory* @routine_movq__rdi__MINUS0x1f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed15)
  store %struct.Memory* %call_42ed15, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 42ed1c	 Bytes: 3
  %loadMem_42ed1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed1c = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed1c)
  store %struct.Memory* %call_42ed1c, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x1fc(%rbp)	 RIP: 42ed1f	 Bytes: 6
  %loadMem_42ed1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed1f = call %struct.Memory* @routine_movl__esi__MINUS0x1fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed1f)
  store %struct.Memory* %call_42ed1f, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %esi	 RIP: 42ed25	 Bytes: 3
  %loadMem_42ed25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed25 = call %struct.Memory* @routine_movl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed25)
  store %struct.Memory* %call_42ed25, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %edx	 RIP: 42ed28	 Bytes: 3
  %loadMem_42ed28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed28 = call %struct.Memory* @routine_movl__r9d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed28)
  store %struct.Memory* %call_42ed28, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x200(%rbp)	 RIP: 42ed2b	 Bytes: 6
  %loadMem_42ed2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed2b = call %struct.Memory* @routine_movl__ecx__MINUS0x200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed2b)
  store %struct.Memory* %call_42ed2b, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %ecx	 RIP: 42ed31	 Bytes: 3
  %loadMem_42ed31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed31 = call %struct.Memory* @routine_movl__r10d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed31)
  store %struct.Memory* %call_42ed31, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r8d	 RIP: 42ed34	 Bytes: 3
  %loadMem_42ed34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed34 = call %struct.Memory* @routine_movl__r11d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed34)
  store %struct.Memory* %call_42ed34, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x204(%rbp)	 RIP: 42ed37	 Bytes: 6
  %loadMem_42ed37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed37 = call %struct.Memory* @routine_movl__eax__MINUS0x204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed37)
  store %struct.Memory* %call_42ed37, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42ed3d	 Bytes: 5
  %loadMem1_42ed3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ed3d = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ed3d, i64 457683, i64 5, i64 5)
  store %struct.Memory* %call1_42ed3d, %struct.Memory** %MEMORY

  %loadMem2_42ed3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ed3d = load i64, i64* %3
  %call2_42ed3d = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42ed3d, %struct.Memory* %loadMem2_42ed3d)
  store %struct.Memory* %call2_42ed3d, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42ed42	 Bytes: 3
  %loadMem_42ed42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed42 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed42)
  store %struct.Memory* %call_42ed42, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42ed45	 Bytes: 4
  %loadMem_42ed45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed45 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed45)
  store %struct.Memory* %call_42ed45, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 42ed49	 Bytes: 3
  %loadMem_42ed49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed49 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed49)
  store %struct.Memory* %call_42ed49, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %edx	 RIP: 42ed4c	 Bytes: 3
  %loadMem_42ed4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed4c = call %struct.Memory* @routine_subl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed4c)
  store %struct.Memory* %call_42ed4c, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 42ed4f	 Bytes: 3
  %loadMem_42ed4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed4f = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed4f)
  store %struct.Memory* %call_42ed4f, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42ed52	 Bytes: 3
  %loadMem_42ed52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed52 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed52)
  store %struct.Memory* %call_42ed52, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r8d	 RIP: 42ed55	 Bytes: 4
  %loadMem_42ed55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed55 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed55)
  store %struct.Memory* %call_42ed55, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %r8d	 RIP: 42ed59	 Bytes: 4
  %loadMem_42ed59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed59 = call %struct.Memory* @routine_addl__0x2___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed59)
  store %struct.Memory* %call_42ed59, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %esi	 RIP: 42ed5d	 Bytes: 3
  %loadMem_42ed5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed5d = call %struct.Memory* @routine_cmpl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed5d)
  store %struct.Memory* %call_42ed5d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x208(%rbp)	 RIP: 42ed60	 Bytes: 6
  %loadMem_42ed60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed60 = call %struct.Memory* @routine_movl__ecx__MINUS0x208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed60)
  store %struct.Memory* %call_42ed60, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x210(%rbp)	 RIP: 42ed66	 Bytes: 7
  %loadMem_42ed66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed66 = call %struct.Memory* @routine_movq__rdi__MINUS0x210__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed66)
  store %struct.Memory* %call_42ed66, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x214(%rbp)	 RIP: 42ed6d	 Bytes: 6
  %loadMem_42ed6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed6d = call %struct.Memory* @routine_movl__edx__MINUS0x214__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed6d)
  store %struct.Memory* %call_42ed6d, %struct.Memory** %MEMORY

  ; Code: jge .L_42ed8a	 RIP: 42ed73	 Bytes: 6
  %loadMem_42ed73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed73 = call %struct.Memory* @routine_jge_.L_42ed8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed73, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42ed73, %struct.Memory** %MEMORY

  %loadBr_42ed73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42ed73 = icmp eq i8 %loadBr_42ed73, 1
  br i1 %cmpBr_42ed73, label %block_.L_42ed8a, label %block_42ed79

block_42ed79:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42ed79	 Bytes: 3
  %loadMem_42ed79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed79 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed79)
  store %struct.Memory* %call_42ed79, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42ed7c	 Bytes: 3
  %loadMem_42ed7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed7c = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed7c)
  store %struct.Memory* %call_42ed7c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x218(%rbp)	 RIP: 42ed7f	 Bytes: 6
  %loadMem_42ed7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed7f = call %struct.Memory* @routine_movl__eax__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed7f)
  store %struct.Memory* %call_42ed7f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ed96	 RIP: 42ed85	 Bytes: 5
  %loadMem_42ed85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed85 = call %struct.Memory* @routine_jmpq_.L_42ed96(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed85, i64 17, i64 5)
  store %struct.Memory* %call_42ed85, %struct.Memory** %MEMORY

  br label %block_.L_42ed96

  ; Code: .L_42ed8a:	 RIP: 42ed8a	 Bytes: 0
block_.L_42ed8a:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42ed8a	 Bytes: 3
  %loadMem_42ed8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed8a = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed8a)
  store %struct.Memory* %call_42ed8a, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42ed8d	 Bytes: 3
  %loadMem_42ed8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed8d = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed8d)
  store %struct.Memory* %call_42ed8d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x218(%rbp)	 RIP: 42ed90	 Bytes: 6
  %loadMem_42ed90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed90 = call %struct.Memory* @routine_movl__eax__MINUS0x218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed90)
  store %struct.Memory* %call_42ed90, %struct.Memory** %MEMORY

  ; Code: .L_42ed96:	 RIP: 42ed96	 Bytes: 0
  br label %block_.L_42ed96
block_.L_42ed96:

  ; Code: movl -0x218(%rbp), %eax	 RIP: 42ed96	 Bytes: 6
  %loadMem_42ed96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed96 = call %struct.Memory* @routine_movl_MINUS0x218__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed96)
  store %struct.Memory* %call_42ed96, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42ed9c	 Bytes: 3
  %loadMem_42ed9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed9c = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed9c)
  store %struct.Memory* %call_42ed9c, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42ed9f	 Bytes: 3
  %loadMem_42ed9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ed9f = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ed9f)
  store %struct.Memory* %call_42ed9f, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42eda2	 Bytes: 4
  %loadMem_42eda2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eda2 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eda2)
  store %struct.Memory* %call_42eda2, %struct.Memory** %MEMORY

  ; Code: movq -0x210(%rbp), %rdi	 RIP: 42eda6	 Bytes: 7
  %loadMem_42eda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eda6 = call %struct.Memory* @routine_movq_MINUS0x210__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eda6)
  store %struct.Memory* %call_42eda6, %struct.Memory** %MEMORY

  ; Code: movl -0x214(%rbp), %esi	 RIP: 42edad	 Bytes: 6
  %loadMem_42edad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edad = call %struct.Memory* @routine_movl_MINUS0x214__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edad)
  store %struct.Memory* %call_42edad, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42edb3	 Bytes: 2
  %loadMem_42edb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edb3 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edb3)
  store %struct.Memory* %call_42edb3, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42edb5	 Bytes: 5
  %loadMem1_42edb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42edb5 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42edb5, i64 457563, i64 5, i64 5)
  store %struct.Memory* %call1_42edb5, %struct.Memory** %MEMORY

  %loadMem2_42edb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42edb5 = load i64, i64* %3
  %call2_42edb5 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42edb5, %struct.Memory* %loadMem2_42edb5)
  store %struct.Memory* %call2_42edb5, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42edba	 Bytes: 5
  %loadMem_42edba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edba = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edba)
  store %struct.Memory* %call_42edba, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42edbf	 Bytes: 3
  %loadMem_42edbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edbf = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edbf)
  store %struct.Memory* %call_42edbf, %struct.Memory** %MEMORY

  ; Code: movl -0x208(%rbp), %esi	 RIP: 42edc2	 Bytes: 6
  %loadMem_42edc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edc2 = call %struct.Memory* @routine_movl_MINUS0x208__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edc2)
  store %struct.Memory* %call_42edc2, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42edc8	 Bytes: 2
  %loadMem_42edc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edc8 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edc8)
  store %struct.Memory* %call_42edc8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42edca	 Bytes: 3
  %loadMem_42edca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edca = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edca)
  store %struct.Memory* %call_42edca, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42edcd	 Bytes: 2
  %loadMem_42edcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edcd = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edcd)
  store %struct.Memory* %call_42edcd, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42edcf	 Bytes: 1
  %loadMem_42edcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edcf = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edcf)
  store %struct.Memory* %call_42edcf, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42edd0	 Bytes: 2
  %loadMem_42edd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edd0 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edd0)
  store %struct.Memory* %call_42edd0, %struct.Memory** %MEMORY

  ; Code: movl -0x1fc(%rbp), %ecx	 RIP: 42edd2	 Bytes: 6
  %loadMem_42edd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edd2 = call %struct.Memory* @routine_movl_MINUS0x1fc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edd2)
  store %struct.Memory* %call_42edd2, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42edd8	 Bytes: 2
  %loadMem_42edd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edd8 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edd8)
  store %struct.Memory* %call_42edd8, %struct.Memory** %MEMORY

  ; Code: jge .L_42edf9	 RIP: 42edda	 Bytes: 6
  %loadMem_42edda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edda = call %struct.Memory* @routine_jge_.L_42edf9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edda, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42edda, %struct.Memory** %MEMORY

  %loadBr_42edda = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42edda = icmp eq i8 %loadBr_42edda, 1
  br i1 %cmpBr_42edda, label %block_.L_42edf9, label %block_42ede0

block_42ede0:
  ; Code: movq 0x6cb900, %rax	 RIP: 42ede0	 Bytes: 8
  %loadMem_42ede0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ede0 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ede0)
  store %struct.Memory* %call_42ede0, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42ede8	 Bytes: 6
  %loadMem_42ede8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ede8 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ede8)
  store %struct.Memory* %call_42ede8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x21c(%rbp)	 RIP: 42edee	 Bytes: 6
  %loadMem_42edee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edee = call %struct.Memory* @routine_movl__ecx__MINUS0x21c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edee)
  store %struct.Memory* %call_42edee, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42eebb	 RIP: 42edf4	 Bytes: 5
  %loadMem_42edf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edf4 = call %struct.Memory* @routine_jmpq_.L_42eebb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edf4, i64 199, i64 5)
  store %struct.Memory* %call_42edf4, %struct.Memory** %MEMORY

  br label %block_.L_42eebb

  ; Code: .L_42edf9:	 RIP: 42edf9	 Bytes: 0
block_.L_42edf9:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42edf9	 Bytes: 4
  %loadMem_42edf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edf9 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edf9)
  store %struct.Memory* %call_42edf9, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42edfd	 Bytes: 3
  %loadMem_42edfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42edfd = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42edfd)
  store %struct.Memory* %call_42edfd, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42ee00	 Bytes: 3
  %loadMem_42ee00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee00 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee00)
  store %struct.Memory* %call_42ee00, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42ee03	 Bytes: 3
  %loadMem_42ee03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee03 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee03)
  store %struct.Memory* %call_42ee03, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42ee06	 Bytes: 3
  %loadMem_42ee06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee06 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee06)
  store %struct.Memory* %call_42ee06, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42ee09	 Bytes: 3
  %loadMem_42ee09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee09 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee09)
  store %struct.Memory* %call_42ee09, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42ee0c	 Bytes: 4
  %loadMem_42ee0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee0c = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee0c)
  store %struct.Memory* %call_42ee0c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42ee10	 Bytes: 2
  %loadMem_42ee10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee10 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee10)
  store %struct.Memory* %call_42ee10, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x220(%rbp)	 RIP: 42ee12	 Bytes: 6
  %loadMem_42ee12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee12 = call %struct.Memory* @routine_movl__edx__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee12)
  store %struct.Memory* %call_42ee12, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42ee18	 Bytes: 2
  %loadMem_42ee18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee18 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee18)
  store %struct.Memory* %call_42ee18, %struct.Memory** %MEMORY

  ; Code: movl -0x220(%rbp), %ecx	 RIP: 42ee1a	 Bytes: 6
  %loadMem_42ee1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee1a = call %struct.Memory* @routine_movl_MINUS0x220__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee1a)
  store %struct.Memory* %call_42ee1a, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42ee20	 Bytes: 5
  %loadMem1_42ee20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ee20 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ee20, i64 457456, i64 5, i64 5)
  store %struct.Memory* %call1_42ee20, %struct.Memory** %MEMORY

  %loadMem2_42ee20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ee20 = load i64, i64* %3
  %call2_42ee20 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42ee20, %struct.Memory* %loadMem2_42ee20)
  store %struct.Memory* %call2_42ee20, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42ee25	 Bytes: 3
  %loadMem_42ee25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee25 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee25)
  store %struct.Memory* %call_42ee25, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42ee28	 Bytes: 4
  %loadMem_42ee28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee28 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee28)
  store %struct.Memory* %call_42ee28, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 42ee2c	 Bytes: 3
  %loadMem_42ee2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee2c = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee2c)
  store %struct.Memory* %call_42ee2c, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %edx	 RIP: 42ee2f	 Bytes: 3
  %loadMem_42ee2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee2f = call %struct.Memory* @routine_subl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee2f)
  store %struct.Memory* %call_42ee2f, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 42ee32	 Bytes: 3
  %loadMem_42ee32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee32 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee32)
  store %struct.Memory* %call_42ee32, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42ee35	 Bytes: 3
  %loadMem_42ee35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee35 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee35)
  store %struct.Memory* %call_42ee35, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r8d	 RIP: 42ee38	 Bytes: 4
  %loadMem_42ee38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee38 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee38)
  store %struct.Memory* %call_42ee38, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %r8d	 RIP: 42ee3c	 Bytes: 4
  %loadMem_42ee3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee3c = call %struct.Memory* @routine_addl__0x2___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee3c)
  store %struct.Memory* %call_42ee3c, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %esi	 RIP: 42ee40	 Bytes: 3
  %loadMem_42ee40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee40 = call %struct.Memory* @routine_cmpl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee40)
  store %struct.Memory* %call_42ee40, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x224(%rbp)	 RIP: 42ee43	 Bytes: 6
  %loadMem_42ee43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee43 = call %struct.Memory* @routine_movl__ecx__MINUS0x224__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee43)
  store %struct.Memory* %call_42ee43, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x230(%rbp)	 RIP: 42ee49	 Bytes: 7
  %loadMem_42ee49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee49 = call %struct.Memory* @routine_movq__rdi__MINUS0x230__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee49)
  store %struct.Memory* %call_42ee49, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x234(%rbp)	 RIP: 42ee50	 Bytes: 6
  %loadMem_42ee50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee50 = call %struct.Memory* @routine_movl__edx__MINUS0x234__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee50)
  store %struct.Memory* %call_42ee50, %struct.Memory** %MEMORY

  ; Code: jge .L_42ee6d	 RIP: 42ee56	 Bytes: 6
  %loadMem_42ee56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee56 = call %struct.Memory* @routine_jge_.L_42ee6d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee56, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42ee56, %struct.Memory** %MEMORY

  %loadBr_42ee56 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42ee56 = icmp eq i8 %loadBr_42ee56, 1
  br i1 %cmpBr_42ee56, label %block_.L_42ee6d, label %block_42ee5c

block_42ee5c:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42ee5c	 Bytes: 3
  %loadMem_42ee5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee5c = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee5c)
  store %struct.Memory* %call_42ee5c, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42ee5f	 Bytes: 3
  %loadMem_42ee5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee5f = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee5f)
  store %struct.Memory* %call_42ee5f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x238(%rbp)	 RIP: 42ee62	 Bytes: 6
  %loadMem_42ee62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee62 = call %struct.Memory* @routine_movl__eax__MINUS0x238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee62)
  store %struct.Memory* %call_42ee62, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ee79	 RIP: 42ee68	 Bytes: 5
  %loadMem_42ee68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee68 = call %struct.Memory* @routine_jmpq_.L_42ee79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee68, i64 17, i64 5)
  store %struct.Memory* %call_42ee68, %struct.Memory** %MEMORY

  br label %block_.L_42ee79

  ; Code: .L_42ee6d:	 RIP: 42ee6d	 Bytes: 0
block_.L_42ee6d:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42ee6d	 Bytes: 3
  %loadMem_42ee6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee6d = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee6d)
  store %struct.Memory* %call_42ee6d, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42ee70	 Bytes: 3
  %loadMem_42ee70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee70 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee70)
  store %struct.Memory* %call_42ee70, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x238(%rbp)	 RIP: 42ee73	 Bytes: 6
  %loadMem_42ee73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee73 = call %struct.Memory* @routine_movl__eax__MINUS0x238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee73)
  store %struct.Memory* %call_42ee73, %struct.Memory** %MEMORY

  ; Code: .L_42ee79:	 RIP: 42ee79	 Bytes: 0
  br label %block_.L_42ee79
block_.L_42ee79:

  ; Code: movl -0x238(%rbp), %eax	 RIP: 42ee79	 Bytes: 6
  %loadMem_42ee79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee79 = call %struct.Memory* @routine_movl_MINUS0x238__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee79)
  store %struct.Memory* %call_42ee79, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42ee7f	 Bytes: 3
  %loadMem_42ee7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee7f = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee7f)
  store %struct.Memory* %call_42ee7f, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42ee82	 Bytes: 3
  %loadMem_42ee82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee82 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee82)
  store %struct.Memory* %call_42ee82, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42ee85	 Bytes: 4
  %loadMem_42ee85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee85 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee85)
  store %struct.Memory* %call_42ee85, %struct.Memory** %MEMORY

  ; Code: movq -0x230(%rbp), %rdi	 RIP: 42ee89	 Bytes: 7
  %loadMem_42ee89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee89 = call %struct.Memory* @routine_movq_MINUS0x230__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee89)
  store %struct.Memory* %call_42ee89, %struct.Memory** %MEMORY

  ; Code: movl -0x234(%rbp), %esi	 RIP: 42ee90	 Bytes: 6
  %loadMem_42ee90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee90 = call %struct.Memory* @routine_movl_MINUS0x234__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee90)
  store %struct.Memory* %call_42ee90, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42ee96	 Bytes: 2
  %loadMem_42ee96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee96 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee96)
  store %struct.Memory* %call_42ee96, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42ee98	 Bytes: 5
  %loadMem1_42ee98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ee98 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ee98, i64 457336, i64 5, i64 5)
  store %struct.Memory* %call1_42ee98, %struct.Memory** %MEMORY

  %loadMem2_42ee98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ee98 = load i64, i64* %3
  %call2_42ee98 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42ee98, %struct.Memory* %loadMem2_42ee98)
  store %struct.Memory* %call2_42ee98, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42ee9d	 Bytes: 5
  %loadMem_42ee9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ee9d = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ee9d)
  store %struct.Memory* %call_42ee9d, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42eea2	 Bytes: 3
  %loadMem_42eea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eea2 = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eea2)
  store %struct.Memory* %call_42eea2, %struct.Memory** %MEMORY

  ; Code: movl -0x224(%rbp), %esi	 RIP: 42eea5	 Bytes: 6
  %loadMem_42eea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eea5 = call %struct.Memory* @routine_movl_MINUS0x224__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eea5)
  store %struct.Memory* %call_42eea5, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42eeab	 Bytes: 2
  %loadMem_42eeab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eeab = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eeab)
  store %struct.Memory* %call_42eeab, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42eead	 Bytes: 3
  %loadMem_42eead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eead = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eead)
  store %struct.Memory* %call_42eead, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42eeb0	 Bytes: 2
  %loadMem_42eeb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eeb0 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eeb0)
  store %struct.Memory* %call_42eeb0, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42eeb2	 Bytes: 1
  %loadMem_42eeb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eeb2 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eeb2)
  store %struct.Memory* %call_42eeb2, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42eeb3	 Bytes: 2
  %loadMem_42eeb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eeb3 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eeb3)
  store %struct.Memory* %call_42eeb3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x21c(%rbp)	 RIP: 42eeb5	 Bytes: 6
  %loadMem_42eeb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eeb5 = call %struct.Memory* @routine_movl__eax__MINUS0x21c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eeb5)
  store %struct.Memory* %call_42eeb5, %struct.Memory** %MEMORY

  ; Code: .L_42eebb:	 RIP: 42eebb	 Bytes: 0
  br label %block_.L_42eebb
block_.L_42eebb:

  ; Code: movl -0x21c(%rbp), %eax	 RIP: 42eebb	 Bytes: 6
  %loadMem_42eebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eebb = call %struct.Memory* @routine_movl_MINUS0x21c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eebb)
  store %struct.Memory* %call_42eebb, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42eec1	 Bytes: 2
  %loadMem_42eec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eec1 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eec1)
  store %struct.Memory* %call_42eec1, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42eec3	 Bytes: 2
  %loadMem_42eec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eec3 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eec3)
  store %struct.Memory* %call_42eec3, %struct.Memory** %MEMORY

  ; Code: jle .L_42eed8	 RIP: 42eec5	 Bytes: 6
  %loadMem_42eec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eec5 = call %struct.Memory* @routine_jle_.L_42eed8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eec5, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42eec5, %struct.Memory** %MEMORY

  %loadBr_42eec5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42eec5 = icmp eq i8 %loadBr_42eec5, 1
  br i1 %cmpBr_42eec5, label %block_.L_42eed8, label %block_42eecb

block_42eecb:
  ; Code: xorl %eax, %eax	 RIP: 42eecb	 Bytes: 2
  %loadMem_42eecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eecb = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eecb)
  store %struct.Memory* %call_42eecb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x23c(%rbp)	 RIP: 42eecd	 Bytes: 6
  %loadMem_42eecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eecd = call %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eecd)
  store %struct.Memory* %call_42eecd, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f0a2	 RIP: 42eed3	 Bytes: 5
  %loadMem_42eed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eed3 = call %struct.Memory* @routine_jmpq_.L_42f0a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eed3, i64 463, i64 5)
  store %struct.Memory* %call_42eed3, %struct.Memory** %MEMORY

  br label %block_.L_42f0a2

  ; Code: .L_42eed8:	 RIP: 42eed8	 Bytes: 0
block_.L_42eed8:

  ; Code: movq 0x6cb900, %rax	 RIP: 42eed8	 Bytes: 8
  %loadMem_42eed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eed8 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eed8)
  store %struct.Memory* %call_42eed8, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42eee0	 Bytes: 6
  %loadMem_42eee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eee0 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eee0)
  store %struct.Memory* %call_42eee0, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42eee6	 Bytes: 4
  %loadMem_42eee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eee6 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eee6)
  store %struct.Memory* %call_42eee6, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 42eeea	 Bytes: 3
  %loadMem_42eeea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eeea = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eeea)
  store %struct.Memory* %call_42eeea, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %edx	 RIP: 42eeed	 Bytes: 3
  %loadMem_42eeed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eeed = call %struct.Memory* @routine_subl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eeed)
  store %struct.Memory* %call_42eeed, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 42eef0	 Bytes: 3
  %loadMem_42eef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eef0 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eef0)
  store %struct.Memory* %call_42eef0, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %esi	 RIP: 42eef3	 Bytes: 3
  %loadMem_42eef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eef3 = call %struct.Memory* @routine_subl__0x10___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eef3)
  store %struct.Memory* %call_42eef3, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r8d	 RIP: 42eef6	 Bytes: 4
  %loadMem_42eef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eef6 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eef6)
  store %struct.Memory* %call_42eef6, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r9d	 RIP: 42eefa	 Bytes: 4
  %loadMem_42eefa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eefa = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eefa)
  store %struct.Memory* %call_42eefa, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x240(%rbp)	 RIP: 42eefe	 Bytes: 6
  %loadMem_42eefe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eefe = call %struct.Memory* @routine_movl__esi__MINUS0x240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eefe)
  store %struct.Memory* %call_42eefe, %struct.Memory** %MEMORY

  ; Code: movl %edx, %esi	 RIP: 42ef04	 Bytes: 2
  %loadMem_42ef04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef04 = call %struct.Memory* @routine_movl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef04)
  store %struct.Memory* %call_42ef04, %struct.Memory** %MEMORY

  ; Code: movl -0x240(%rbp), %edx	 RIP: 42ef06	 Bytes: 6
  %loadMem_42ef06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef06 = call %struct.Memory* @routine_movl_MINUS0x240__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef06)
  store %struct.Memory* %call_42ef06, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x244(%rbp)	 RIP: 42ef0c	 Bytes: 6
  %loadMem_42ef0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef0c = call %struct.Memory* @routine_movl__ecx__MINUS0x244__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef0c)
  store %struct.Memory* %call_42ef0c, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 42ef12	 Bytes: 3
  %loadMem_42ef12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef12 = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef12)
  store %struct.Memory* %call_42ef12, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %r8d	 RIP: 42ef15	 Bytes: 3
  %loadMem_42ef15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef15 = call %struct.Memory* @routine_movl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef15)
  store %struct.Memory* %call_42ef15, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42ef18	 Bytes: 5
  %loadMem1_42ef18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ef18 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ef18, i64 457208, i64 5, i64 5)
  store %struct.Memory* %call1_42ef18, %struct.Memory** %MEMORY

  %loadMem2_42ef18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ef18 = load i64, i64* %3
  %call2_42ef18 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42ef18, %struct.Memory* %loadMem2_42ef18)
  store %struct.Memory* %call2_42ef18, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42ef1d	 Bytes: 3
  %loadMem_42ef1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef1d = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef1d)
  store %struct.Memory* %call_42ef1d, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42ef20	 Bytes: 4
  %loadMem_42ef20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef20 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef20)
  store %struct.Memory* %call_42ef20, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 42ef24	 Bytes: 3
  %loadMem_42ef24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef24 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef24)
  store %struct.Memory* %call_42ef24, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %edx	 RIP: 42ef27	 Bytes: 3
  %loadMem_42ef27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef27 = call %struct.Memory* @routine_subl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef27)
  store %struct.Memory* %call_42ef27, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 42ef2a	 Bytes: 3
  %loadMem_42ef2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef2a = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef2a)
  store %struct.Memory* %call_42ef2a, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42ef2d	 Bytes: 3
  %loadMem_42ef2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef2d = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef2d)
  store %struct.Memory* %call_42ef2d, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r8d	 RIP: 42ef30	 Bytes: 4
  %loadMem_42ef30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef30 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef30)
  store %struct.Memory* %call_42ef30, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %r8d	 RIP: 42ef34	 Bytes: 4
  %loadMem_42ef34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef34 = call %struct.Memory* @routine_addl__0x2___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef34)
  store %struct.Memory* %call_42ef34, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %esi	 RIP: 42ef38	 Bytes: 3
  %loadMem_42ef38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef38 = call %struct.Memory* @routine_cmpl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef38)
  store %struct.Memory* %call_42ef38, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x248(%rbp)	 RIP: 42ef3b	 Bytes: 6
  %loadMem_42ef3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef3b = call %struct.Memory* @routine_movl__ecx__MINUS0x248__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef3b)
  store %struct.Memory* %call_42ef3b, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x250(%rbp)	 RIP: 42ef41	 Bytes: 7
  %loadMem_42ef41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef41 = call %struct.Memory* @routine_movq__rdi__MINUS0x250__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef41)
  store %struct.Memory* %call_42ef41, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x254(%rbp)	 RIP: 42ef48	 Bytes: 6
  %loadMem_42ef48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef48 = call %struct.Memory* @routine_movl__edx__MINUS0x254__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef48)
  store %struct.Memory* %call_42ef48, %struct.Memory** %MEMORY

  ; Code: jge .L_42ef65	 RIP: 42ef4e	 Bytes: 6
  %loadMem_42ef4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef4e = call %struct.Memory* @routine_jge_.L_42ef65(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef4e, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42ef4e, %struct.Memory** %MEMORY

  %loadBr_42ef4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42ef4e = icmp eq i8 %loadBr_42ef4e, 1
  br i1 %cmpBr_42ef4e, label %block_.L_42ef65, label %block_42ef54

block_42ef54:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42ef54	 Bytes: 3
  %loadMem_42ef54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef54 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef54)
  store %struct.Memory* %call_42ef54, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42ef57	 Bytes: 3
  %loadMem_42ef57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef57 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef57)
  store %struct.Memory* %call_42ef57, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x258(%rbp)	 RIP: 42ef5a	 Bytes: 6
  %loadMem_42ef5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef5a = call %struct.Memory* @routine_movl__eax__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef5a)
  store %struct.Memory* %call_42ef5a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ef71	 RIP: 42ef60	 Bytes: 5
  %loadMem_42ef60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef60 = call %struct.Memory* @routine_jmpq_.L_42ef71(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef60, i64 17, i64 5)
  store %struct.Memory* %call_42ef60, %struct.Memory** %MEMORY

  br label %block_.L_42ef71

  ; Code: .L_42ef65:	 RIP: 42ef65	 Bytes: 0
block_.L_42ef65:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42ef65	 Bytes: 3
  %loadMem_42ef65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef65 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef65)
  store %struct.Memory* %call_42ef65, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42ef68	 Bytes: 3
  %loadMem_42ef68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef68 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef68)
  store %struct.Memory* %call_42ef68, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x258(%rbp)	 RIP: 42ef6b	 Bytes: 6
  %loadMem_42ef6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef6b = call %struct.Memory* @routine_movl__eax__MINUS0x258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef6b)
  store %struct.Memory* %call_42ef6b, %struct.Memory** %MEMORY

  ; Code: .L_42ef71:	 RIP: 42ef71	 Bytes: 0
  br label %block_.L_42ef71
block_.L_42ef71:

  ; Code: movl -0x258(%rbp), %eax	 RIP: 42ef71	 Bytes: 6
  %loadMem_42ef71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef71 = call %struct.Memory* @routine_movl_MINUS0x258__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef71)
  store %struct.Memory* %call_42ef71, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42ef77	 Bytes: 3
  %loadMem_42ef77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef77 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef77)
  store %struct.Memory* %call_42ef77, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42ef7a	 Bytes: 3
  %loadMem_42ef7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef7a = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef7a)
  store %struct.Memory* %call_42ef7a, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42ef7d	 Bytes: 4
  %loadMem_42ef7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef7d = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef7d)
  store %struct.Memory* %call_42ef7d, %struct.Memory** %MEMORY

  ; Code: movq -0x250(%rbp), %rdi	 RIP: 42ef81	 Bytes: 7
  %loadMem_42ef81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef81 = call %struct.Memory* @routine_movq_MINUS0x250__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef81)
  store %struct.Memory* %call_42ef81, %struct.Memory** %MEMORY

  ; Code: movl -0x254(%rbp), %esi	 RIP: 42ef88	 Bytes: 6
  %loadMem_42ef88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef88 = call %struct.Memory* @routine_movl_MINUS0x254__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef88)
  store %struct.Memory* %call_42ef88, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42ef8e	 Bytes: 2
  %loadMem_42ef8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef8e = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef8e)
  store %struct.Memory* %call_42ef8e, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42ef90	 Bytes: 5
  %loadMem1_42ef90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ef90 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ef90, i64 457088, i64 5, i64 5)
  store %struct.Memory* %call1_42ef90, %struct.Memory** %MEMORY

  %loadMem2_42ef90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ef90 = load i64, i64* %3
  %call2_42ef90 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42ef90, %struct.Memory* %loadMem2_42ef90)
  store %struct.Memory* %call2_42ef90, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42ef95	 Bytes: 5
  %loadMem_42ef95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef95 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef95)
  store %struct.Memory* %call_42ef95, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42ef9a	 Bytes: 3
  %loadMem_42ef9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef9a = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef9a)
  store %struct.Memory* %call_42ef9a, %struct.Memory** %MEMORY

  ; Code: movl -0x248(%rbp), %esi	 RIP: 42ef9d	 Bytes: 6
  %loadMem_42ef9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ef9d = call %struct.Memory* @routine_movl_MINUS0x248__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ef9d)
  store %struct.Memory* %call_42ef9d, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42efa3	 Bytes: 2
  %loadMem_42efa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efa3 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efa3)
  store %struct.Memory* %call_42efa3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42efa5	 Bytes: 3
  %loadMem_42efa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efa5 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efa5)
  store %struct.Memory* %call_42efa5, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42efa8	 Bytes: 2
  %loadMem_42efa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efa8 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efa8)
  store %struct.Memory* %call_42efa8, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42efaa	 Bytes: 1
  %loadMem_42efaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efaa = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efaa)
  store %struct.Memory* %call_42efaa, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42efab	 Bytes: 2
  %loadMem_42efab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efab = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efab)
  store %struct.Memory* %call_42efab, %struct.Memory** %MEMORY

  ; Code: movl -0x244(%rbp), %ecx	 RIP: 42efad	 Bytes: 6
  %loadMem_42efad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efad = call %struct.Memory* @routine_movl_MINUS0x244__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efad)
  store %struct.Memory* %call_42efad, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42efb3	 Bytes: 2
  %loadMem_42efb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efb3 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efb3)
  store %struct.Memory* %call_42efb3, %struct.Memory** %MEMORY

  ; Code: jge .L_42efd4	 RIP: 42efb5	 Bytes: 6
  %loadMem_42efb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efb5 = call %struct.Memory* @routine_jge_.L_42efd4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efb5, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42efb5, %struct.Memory** %MEMORY

  %loadBr_42efb5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42efb5 = icmp eq i8 %loadBr_42efb5, 1
  br i1 %cmpBr_42efb5, label %block_.L_42efd4, label %block_42efbb

block_42efbb:
  ; Code: movq 0x6cb900, %rax	 RIP: 42efbb	 Bytes: 8
  %loadMem_42efbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efbb = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efbb)
  store %struct.Memory* %call_42efbb, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42efc3	 Bytes: 6
  %loadMem_42efc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efc3 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efc3)
  store %struct.Memory* %call_42efc3, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x25c(%rbp)	 RIP: 42efc9	 Bytes: 6
  %loadMem_42efc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efc9 = call %struct.Memory* @routine_movl__ecx__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efc9)
  store %struct.Memory* %call_42efc9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f096	 RIP: 42efcf	 Bytes: 5
  %loadMem_42efcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efcf = call %struct.Memory* @routine_jmpq_.L_42f096(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efcf, i64 199, i64 5)
  store %struct.Memory* %call_42efcf, %struct.Memory** %MEMORY

  br label %block_.L_42f096

  ; Code: .L_42efd4:	 RIP: 42efd4	 Bytes: 0
block_.L_42efd4:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42efd4	 Bytes: 4
  %loadMem_42efd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efd4 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efd4)
  store %struct.Memory* %call_42efd4, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42efd8	 Bytes: 3
  %loadMem_42efd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efd8 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efd8)
  store %struct.Memory* %call_42efd8, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42efdb	 Bytes: 3
  %loadMem_42efdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efdb = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efdb)
  store %struct.Memory* %call_42efdb, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42efde	 Bytes: 3
  %loadMem_42efde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efde = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efde)
  store %struct.Memory* %call_42efde, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42efe1	 Bytes: 3
  %loadMem_42efe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efe1 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efe1)
  store %struct.Memory* %call_42efe1, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42efe4	 Bytes: 3
  %loadMem_42efe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efe4 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efe4)
  store %struct.Memory* %call_42efe4, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42efe7	 Bytes: 4
  %loadMem_42efe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efe7 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efe7)
  store %struct.Memory* %call_42efe7, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42efeb	 Bytes: 2
  %loadMem_42efeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efeb = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efeb)
  store %struct.Memory* %call_42efeb, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x260(%rbp)	 RIP: 42efed	 Bytes: 6
  %loadMem_42efed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42efed = call %struct.Memory* @routine_movl__edx__MINUS0x260__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42efed)
  store %struct.Memory* %call_42efed, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42eff3	 Bytes: 2
  %loadMem_42eff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eff3 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eff3)
  store %struct.Memory* %call_42eff3, %struct.Memory** %MEMORY

  ; Code: movl -0x260(%rbp), %ecx	 RIP: 42eff5	 Bytes: 6
  %loadMem_42eff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42eff5 = call %struct.Memory* @routine_movl_MINUS0x260__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42eff5)
  store %struct.Memory* %call_42eff5, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42effb	 Bytes: 5
  %loadMem1_42effb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42effb = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42effb, i64 456981, i64 5, i64 5)
  store %struct.Memory* %call1_42effb, %struct.Memory** %MEMORY

  %loadMem2_42effb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42effb = load i64, i64* %3
  %call2_42effb = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42effb, %struct.Memory* %loadMem2_42effb)
  store %struct.Memory* %call2_42effb, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f000	 Bytes: 3
  %loadMem_42f000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f000 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f000)
  store %struct.Memory* %call_42f000, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f003	 Bytes: 4
  %loadMem_42f003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f003 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f003)
  store %struct.Memory* %call_42f003, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 42f007	 Bytes: 3
  %loadMem_42f007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f007 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f007)
  store %struct.Memory* %call_42f007, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %edx	 RIP: 42f00a	 Bytes: 3
  %loadMem_42f00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f00a = call %struct.Memory* @routine_subl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f00a)
  store %struct.Memory* %call_42f00a, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 42f00d	 Bytes: 3
  %loadMem_42f00d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f00d = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f00d)
  store %struct.Memory* %call_42f00d, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f010	 Bytes: 3
  %loadMem_42f010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f010 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f010)
  store %struct.Memory* %call_42f010, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r8d	 RIP: 42f013	 Bytes: 4
  %loadMem_42f013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f013 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f013)
  store %struct.Memory* %call_42f013, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %r8d	 RIP: 42f017	 Bytes: 4
  %loadMem_42f017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f017 = call %struct.Memory* @routine_addl__0x2___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f017)
  store %struct.Memory* %call_42f017, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %esi	 RIP: 42f01b	 Bytes: 3
  %loadMem_42f01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f01b = call %struct.Memory* @routine_cmpl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f01b)
  store %struct.Memory* %call_42f01b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x264(%rbp)	 RIP: 42f01e	 Bytes: 6
  %loadMem_42f01e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f01e = call %struct.Memory* @routine_movl__ecx__MINUS0x264__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f01e)
  store %struct.Memory* %call_42f01e, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x270(%rbp)	 RIP: 42f024	 Bytes: 7
  %loadMem_42f024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f024 = call %struct.Memory* @routine_movq__rdi__MINUS0x270__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f024)
  store %struct.Memory* %call_42f024, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x274(%rbp)	 RIP: 42f02b	 Bytes: 6
  %loadMem_42f02b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f02b = call %struct.Memory* @routine_movl__edx__MINUS0x274__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f02b)
  store %struct.Memory* %call_42f02b, %struct.Memory** %MEMORY

  ; Code: jge .L_42f048	 RIP: 42f031	 Bytes: 6
  %loadMem_42f031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f031 = call %struct.Memory* @routine_jge_.L_42f048(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f031, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f031, %struct.Memory** %MEMORY

  %loadBr_42f031 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f031 = icmp eq i8 %loadBr_42f031, 1
  br i1 %cmpBr_42f031, label %block_.L_42f048, label %block_42f037

block_42f037:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42f037	 Bytes: 3
  %loadMem_42f037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f037 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f037)
  store %struct.Memory* %call_42f037, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f03a	 Bytes: 3
  %loadMem_42f03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f03a = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f03a)
  store %struct.Memory* %call_42f03a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x278(%rbp)	 RIP: 42f03d	 Bytes: 6
  %loadMem_42f03d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f03d = call %struct.Memory* @routine_movl__eax__MINUS0x278__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f03d)
  store %struct.Memory* %call_42f03d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f054	 RIP: 42f043	 Bytes: 5
  %loadMem_42f043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f043 = call %struct.Memory* @routine_jmpq_.L_42f054(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f043, i64 17, i64 5)
  store %struct.Memory* %call_42f043, %struct.Memory** %MEMORY

  br label %block_.L_42f054

  ; Code: .L_42f048:	 RIP: 42f048	 Bytes: 0
block_.L_42f048:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42f048	 Bytes: 3
  %loadMem_42f048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f048 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f048)
  store %struct.Memory* %call_42f048, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f04b	 Bytes: 3
  %loadMem_42f04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f04b = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f04b)
  store %struct.Memory* %call_42f04b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x278(%rbp)	 RIP: 42f04e	 Bytes: 6
  %loadMem_42f04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f04e = call %struct.Memory* @routine_movl__eax__MINUS0x278__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f04e)
  store %struct.Memory* %call_42f04e, %struct.Memory** %MEMORY

  ; Code: .L_42f054:	 RIP: 42f054	 Bytes: 0
  br label %block_.L_42f054
block_.L_42f054:

  ; Code: movl -0x278(%rbp), %eax	 RIP: 42f054	 Bytes: 6
  %loadMem_42f054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f054 = call %struct.Memory* @routine_movl_MINUS0x278__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f054)
  store %struct.Memory* %call_42f054, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f05a	 Bytes: 3
  %loadMem_42f05a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f05a = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f05a)
  store %struct.Memory* %call_42f05a, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42f05d	 Bytes: 3
  %loadMem_42f05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f05d = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f05d)
  store %struct.Memory* %call_42f05d, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f060	 Bytes: 4
  %loadMem_42f060 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f060 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f060)
  store %struct.Memory* %call_42f060, %struct.Memory** %MEMORY

  ; Code: movq -0x270(%rbp), %rdi	 RIP: 42f064	 Bytes: 7
  %loadMem_42f064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f064 = call %struct.Memory* @routine_movq_MINUS0x270__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f064)
  store %struct.Memory* %call_42f064, %struct.Memory** %MEMORY

  ; Code: movl -0x274(%rbp), %esi	 RIP: 42f06b	 Bytes: 6
  %loadMem_42f06b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f06b = call %struct.Memory* @routine_movl_MINUS0x274__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f06b)
  store %struct.Memory* %call_42f06b, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42f071	 Bytes: 2
  %loadMem_42f071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f071 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f071)
  store %struct.Memory* %call_42f071, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f073	 Bytes: 5
  %loadMem1_42f073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f073 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f073, i64 456861, i64 5, i64 5)
  store %struct.Memory* %call1_42f073, %struct.Memory** %MEMORY

  %loadMem2_42f073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f073 = load i64, i64* %3
  %call2_42f073 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f073, %struct.Memory* %loadMem2_42f073)
  store %struct.Memory* %call2_42f073, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42f078	 Bytes: 5
  %loadMem_42f078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f078 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f078)
  store %struct.Memory* %call_42f078, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42f07d	 Bytes: 3
  %loadMem_42f07d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f07d = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f07d)
  store %struct.Memory* %call_42f07d, %struct.Memory** %MEMORY

  ; Code: movl -0x264(%rbp), %esi	 RIP: 42f080	 Bytes: 6
  %loadMem_42f080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f080 = call %struct.Memory* @routine_movl_MINUS0x264__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f080)
  store %struct.Memory* %call_42f080, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42f086	 Bytes: 2
  %loadMem_42f086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f086 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f086)
  store %struct.Memory* %call_42f086, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42f088	 Bytes: 3
  %loadMem_42f088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f088 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f088)
  store %struct.Memory* %call_42f088, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42f08b	 Bytes: 2
  %loadMem_42f08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f08b = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f08b)
  store %struct.Memory* %call_42f08b, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f08d	 Bytes: 1
  %loadMem_42f08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f08d = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f08d)
  store %struct.Memory* %call_42f08d, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f08e	 Bytes: 2
  %loadMem_42f08e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f08e = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f08e)
  store %struct.Memory* %call_42f08e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x25c(%rbp)	 RIP: 42f090	 Bytes: 6
  %loadMem_42f090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f090 = call %struct.Memory* @routine_movl__eax__MINUS0x25c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f090)
  store %struct.Memory* %call_42f090, %struct.Memory** %MEMORY

  ; Code: .L_42f096:	 RIP: 42f096	 Bytes: 0
  br label %block_.L_42f096
block_.L_42f096:

  ; Code: movl -0x25c(%rbp), %eax	 RIP: 42f096	 Bytes: 6
  %loadMem_42f096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f096 = call %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f096)
  store %struct.Memory* %call_42f096, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x23c(%rbp)	 RIP: 42f09c	 Bytes: 6
  %loadMem_42f09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f09c = call %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f09c)
  store %struct.Memory* %call_42f09c, %struct.Memory** %MEMORY

  ; Code: .L_42f0a2:	 RIP: 42f0a2	 Bytes: 0
  br label %block_.L_42f0a2
block_.L_42f0a2:

  ; Code: movl -0x23c(%rbp), %eax	 RIP: 42f0a2	 Bytes: 6
  %loadMem_42f0a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0a2 = call %struct.Memory* @routine_movl_MINUS0x23c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0a2)
  store %struct.Memory* %call_42f0a2, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 42f0a8	 Bytes: 3
  %loadMem_42f0a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0a8 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0a8)
  store %struct.Memory* %call_42f0a8, %struct.Memory** %MEMORY

  ; Code: movq -0x1f8(%rbp), %rdi	 RIP: 42f0ab	 Bytes: 7
  %loadMem_42f0ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0ab = call %struct.Memory* @routine_movq_MINUS0x1f8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0ab)
  store %struct.Memory* %call_42f0ab, %struct.Memory** %MEMORY

  ; Code: movl -0x204(%rbp), %esi	 RIP: 42f0b2	 Bytes: 6
  %loadMem_42f0b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0b2 = call %struct.Memory* @routine_movl_MINUS0x204__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0b2)
  store %struct.Memory* %call_42f0b2, %struct.Memory** %MEMORY

  ; Code: movl -0x200(%rbp), %edx	 RIP: 42f0b8	 Bytes: 6
  %loadMem_42f0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0b8 = call %struct.Memory* @routine_movl_MINUS0x200__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0b8)
  store %struct.Memory* %call_42f0b8, %struct.Memory** %MEMORY

  ; Code: movzwl %cx, %ecx	 RIP: 42f0be	 Bytes: 3
  %loadMem_42f0be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0be = call %struct.Memory* @routine_movzwl__cx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0be)
  store %struct.Memory* %call_42f0be, %struct.Memory** %MEMORY

  ; Code: callq .PutPel_14	 RIP: 42f0c1	 Bytes: 5
  %loadMem1_42f0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f0c1 = call %struct.Memory* @routine_callq_.PutPel_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f0c1, i64 454831, i64 5, i64 5)
  store %struct.Memory* %call1_42f0c1, %struct.Memory** %MEMORY

  %loadMem2_42f0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f0c1 = load i64, i64* %3
  %call2_42f0c1 = call %struct.Memory* @sub_49e170.PutPel_14(%struct.State* %0, i64  %loadPC_42f0c1, %struct.Memory* %loadMem2_42f0c1)
  store %struct.Memory* %call2_42f0c1, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42f0c6	 Bytes: 3
  %loadMem_42f0c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0c6 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0c6)
  store %struct.Memory* %call_42f0c6, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f0c9	 Bytes: 3
  %loadMem_42f0c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0c9 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0c9)
  store %struct.Memory* %call_42f0c9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 42f0cc	 Bytes: 3
  %loadMem_42f0cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0cc = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0cc)
  store %struct.Memory* %call_42f0cc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ecc7	 RIP: 42f0cf	 Bytes: 5
  %loadMem_42f0cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0cf = call %struct.Memory* @routine_jmpq_.L_42ecc7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0cf, i64 -1032, i64 5)
  store %struct.Memory* %call_42f0cf, %struct.Memory** %MEMORY

  br label %block_.L_42ecc7

  ; Code: .L_42f0d4:	 RIP: 42f0d4	 Bytes: 0
block_.L_42f0d4:

  ; Code: jmpq .L_42f0d9	 RIP: 42f0d4	 Bytes: 5
  %loadMem_42f0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0d4 = call %struct.Memory* @routine_jmpq_.L_42f0d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0d4, i64 5, i64 5)
  store %struct.Memory* %call_42f0d4, %struct.Memory** %MEMORY

  br label %block_.L_42f0d9

  ; Code: .L_42f0d9:	 RIP: 42f0d9	 Bytes: 0
block_.L_42f0d9:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f0d9	 Bytes: 3
  %loadMem_42f0d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0d9 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0d9)
  store %struct.Memory* %call_42f0d9, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f0dc	 Bytes: 3
  %loadMem_42f0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0dc = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0dc)
  store %struct.Memory* %call_42f0dc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 42f0df	 Bytes: 3
  %loadMem_42f0df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0df = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0df)
  store %struct.Memory* %call_42f0df, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ecaf	 RIP: 42f0e2	 Bytes: 5
  %loadMem_42f0e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0e2 = call %struct.Memory* @routine_jmpq_.L_42ecaf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0e2, i64 -1075, i64 5)
  store %struct.Memory* %call_42f0e2, %struct.Memory** %MEMORY

  br label %block_.L_42ecaf

  ; Code: .L_42f0e7:	 RIP: 42f0e7	 Bytes: 0
block_.L_42f0e7:

  ; Code: movl $0x0, -0x18(%rbp)	 RIP: 42f0e7	 Bytes: 7
  %loadMem_42f0e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0e7 = call %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0e7)
  store %struct.Memory* %call_42f0e7, %struct.Memory** %MEMORY

  ; Code: .L_42f0ee:	 RIP: 42f0ee	 Bytes: 0
  br label %block_.L_42f0ee
block_.L_42f0ee:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42f0ee	 Bytes: 3
  %loadMem_42f0ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0ee = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0ee)
  store %struct.Memory* %call_42f0ee, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 42f0f1	 Bytes: 3
  %loadMem_42f0f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0f1 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0f1)
  store %struct.Memory* %call_42f0f1, %struct.Memory** %MEMORY

  ; Code: addl $0x4, %ecx	 RIP: 42f0f4	 Bytes: 3
  %loadMem_42f0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0f4 = call %struct.Memory* @routine_addl__0x4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0f4)
  store %struct.Memory* %call_42f0f4, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 42f0f7	 Bytes: 2
  %loadMem_42f0f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0f7 = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0f7)
  store %struct.Memory* %call_42f0f7, %struct.Memory** %MEMORY

  ; Code: jge .L_42ff97	 RIP: 42f0f9	 Bytes: 6
  %loadMem_42f0f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0f9 = call %struct.Memory* @routine_jge_.L_42ff97(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0f9, i8* %BRANCH_TAKEN, i64 3742, i64 6, i64 6)
  store %struct.Memory* %call_42f0f9, %struct.Memory** %MEMORY

  %loadBr_42f0f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f0f9 = icmp eq i8 %loadBr_42f0f9, 1
  br i1 %cmpBr_42f0f9, label %block_.L_42ff97, label %block_42f0ff

block_42f0ff:
  ; Code: movl $0x0, -0x1c(%rbp)	 RIP: 42f0ff	 Bytes: 7
  %loadMem_42f0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f0ff = call %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f0ff)
  store %struct.Memory* %call_42f0ff, %struct.Memory** %MEMORY

  ; Code: .L_42f106:	 RIP: 42f106	 Bytes: 0
  br label %block_.L_42f106
block_.L_42f106:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f106	 Bytes: 3
  %loadMem_42f106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f106 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f106)
  store %struct.Memory* %call_42f106, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %ecx	 RIP: 42f109	 Bytes: 3
  %loadMem_42f109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f109 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f109)
  store %struct.Memory* %call_42f109, %struct.Memory** %MEMORY

  ; Code: addl $0x3, %ecx	 RIP: 42f10c	 Bytes: 3
  %loadMem_42f10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f10c = call %struct.Memory* @routine_addl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f10c)
  store %struct.Memory* %call_42f10c, %struct.Memory** %MEMORY

  ; Code: cmpl %ecx, %eax	 RIP: 42f10f	 Bytes: 2
  %loadMem_42f10f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f10f = call %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f10f)
  store %struct.Memory* %call_42f10f, %struct.Memory** %MEMORY

  ; Code: jge .L_42ff84	 RIP: 42f111	 Bytes: 6
  %loadMem_42f111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f111 = call %struct.Memory* @routine_jge_.L_42ff84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f111, i8* %BRANCH_TAKEN, i64 3699, i64 6, i64 6)
  store %struct.Memory* %call_42f111, %struct.Memory** %MEMORY

  %loadBr_42f111 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f111 = icmp eq i8 %loadBr_42f111, 1
  br i1 %cmpBr_42f111, label %block_.L_42ff84, label %block_42f117

block_42f117:
  ; Code: movl $0x2, %eax	 RIP: 42f117	 Bytes: 5
  %loadMem_42f117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f117 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f117)
  store %struct.Memory* %call_42f117, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f11c	 Bytes: 3
  %loadMem_42f11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f11c = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f11c)
  store %struct.Memory* %call_42f11c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x27c(%rbp)	 RIP: 42f11f	 Bytes: 6
  %loadMem_42f11f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f11f = call %struct.Memory* @routine_movl__eax__MINUS0x27c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f11f)
  store %struct.Memory* %call_42f11f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 42f125	 Bytes: 2
  %loadMem_42f125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f125 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f125)
  store %struct.Memory* %call_42f125, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f127	 Bytes: 1
  %loadMem_42f127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f127 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f127)
  store %struct.Memory* %call_42f127, %struct.Memory** %MEMORY

  ; Code: movl -0x27c(%rbp), %ecx	 RIP: 42f128	 Bytes: 6
  %loadMem_42f128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f128 = call %struct.Memory* @routine_movl_MINUS0x27c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f128)
  store %struct.Memory* %call_42f128, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f12e	 Bytes: 2
  %loadMem_42f12e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f12e = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f12e)
  store %struct.Memory* %call_42f12e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 42f130	 Bytes: 3
  %loadMem_42f130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f130 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f130)
  store %struct.Memory* %call_42f130, %struct.Memory** %MEMORY

  ; Code: jne .L_42f528	 RIP: 42f133	 Bytes: 6
  %loadMem_42f133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f133 = call %struct.Memory* @routine_jne_.L_42f528(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f133, i8* %BRANCH_TAKEN, i64 1013, i64 6, i64 6)
  store %struct.Memory* %call_42f133, %struct.Memory** %MEMORY

  %loadBr_42f133 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f133 = icmp eq i8 %loadBr_42f133, 1
  br i1 %cmpBr_42f133, label %block_.L_42f528, label %block_42f139

block_42f139:
  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f139	 Bytes: 4
  %loadMem_42f139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f139 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f139)
  store %struct.Memory* %call_42f139, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f13d	 Bytes: 3
  %loadMem_42f13d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f13d = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f13d)
  store %struct.Memory* %call_42f13d, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f140	 Bytes: 3
  %loadMem_42f140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f140 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f140)
  store %struct.Memory* %call_42f140, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42f143	 Bytes: 3
  %loadMem_42f143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f143 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f143)
  store %struct.Memory* %call_42f143, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f146	 Bytes: 3
  %loadMem_42f146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f146 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f146)
  store %struct.Memory* %call_42f146, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f149	 Bytes: 3
  %loadMem_42f149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f149 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f149)
  store %struct.Memory* %call_42f149, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 42f14c	 Bytes: 8
  %loadMem_42f14c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f14c = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f14c)
  store %struct.Memory* %call_42f14c, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rdx), %esi	 RIP: 42f154	 Bytes: 6
  %loadMem_42f154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f154 = call %struct.Memory* @routine_movl_0x11bec__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f154)
  store %struct.Memory* %call_42f154, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdx	 RIP: 42f15a	 Bytes: 4
  %loadMem_42f15a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f15a = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f15a)
  store %struct.Memory* %call_42f15a, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r8d	 RIP: 42f15e	 Bytes: 4
  %loadMem_42f15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f15e = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f15e)
  store %struct.Memory* %call_42f15e, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %r8d	 RIP: 42f162	 Bytes: 4
  %loadMem_42f162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f162 = call %struct.Memory* @routine_subl__0x10___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f162)
  store %struct.Memory* %call_42f162, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r9d	 RIP: 42f166	 Bytes: 4
  %loadMem_42f166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f166 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f166)
  store %struct.Memory* %call_42f166, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %r9d	 RIP: 42f16a	 Bytes: 4
  %loadMem_42f16a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f16a = call %struct.Memory* @routine_subl__0x10___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f16a)
  store %struct.Memory* %call_42f16a, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 42f16e	 Bytes: 4
  %loadMem_42f16e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f16e = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f16e)
  store %struct.Memory* %call_42f16e, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r11d	 RIP: 42f172	 Bytes: 4
  %loadMem_42f172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f172 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f172)
  store %struct.Memory* %call_42f172, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x288(%rbp)	 RIP: 42f176	 Bytes: 7
  %loadMem_42f176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f176 = call %struct.Memory* @routine_movq__rdi__MINUS0x288__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f176)
  store %struct.Memory* %call_42f176, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 42f17d	 Bytes: 3
  %loadMem_42f17d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f17d = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f17d)
  store %struct.Memory* %call_42f17d, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x28c(%rbp)	 RIP: 42f180	 Bytes: 6
  %loadMem_42f180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f180 = call %struct.Memory* @routine_movl__esi__MINUS0x28c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f180)
  store %struct.Memory* %call_42f180, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %esi	 RIP: 42f186	 Bytes: 3
  %loadMem_42f186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f186 = call %struct.Memory* @routine_movl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f186)
  store %struct.Memory* %call_42f186, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %edx	 RIP: 42f189	 Bytes: 3
  %loadMem_42f189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f189 = call %struct.Memory* @routine_movl__r9d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f189)
  store %struct.Memory* %call_42f189, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x290(%rbp)	 RIP: 42f18c	 Bytes: 6
  %loadMem_42f18c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f18c = call %struct.Memory* @routine_movl__ecx__MINUS0x290__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f18c)
  store %struct.Memory* %call_42f18c, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %ecx	 RIP: 42f192	 Bytes: 3
  %loadMem_42f192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f192 = call %struct.Memory* @routine_movl__r10d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f192)
  store %struct.Memory* %call_42f192, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r8d	 RIP: 42f195	 Bytes: 3
  %loadMem_42f195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f195 = call %struct.Memory* @routine_movl__r11d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f195)
  store %struct.Memory* %call_42f195, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x294(%rbp)	 RIP: 42f198	 Bytes: 6
  %loadMem_42f198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f198 = call %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f198)
  store %struct.Memory* %call_42f198, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f19e	 Bytes: 5
  %loadMem1_42f19e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f19e = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f19e, i64 456562, i64 5, i64 5)
  store %struct.Memory* %call1_42f19e, %struct.Memory** %MEMORY

  %loadMem2_42f19e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f19e = load i64, i64* %3
  %call2_42f19e = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f19e, %struct.Memory* %loadMem2_42f19e)
  store %struct.Memory* %call2_42f19e, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f1a3	 Bytes: 3
  %loadMem_42f1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1a3 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1a3)
  store %struct.Memory* %call_42f1a3, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f1a6	 Bytes: 4
  %loadMem_42f1a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1a6 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1a6)
  store %struct.Memory* %call_42f1a6, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42f1aa	 Bytes: 3
  %loadMem_42f1aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1aa = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1aa)
  store %struct.Memory* %call_42f1aa, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42f1ad	 Bytes: 3
  %loadMem_42f1ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1ad = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1ad)
  store %struct.Memory* %call_42f1ad, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42f1b0	 Bytes: 3
  %loadMem_42f1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1b0 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1b0)
  store %struct.Memory* %call_42f1b0, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f1b3	 Bytes: 3
  %loadMem_42f1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1b3 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1b3)
  store %struct.Memory* %call_42f1b3, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42f1b6	 Bytes: 2
  %loadMem_42f1b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1b6 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1b6)
  store %struct.Memory* %call_42f1b6, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x298(%rbp)	 RIP: 42f1b8	 Bytes: 6
  %loadMem_42f1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1b8 = call %struct.Memory* @routine_movl__ecx__MINUS0x298__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1b8)
  store %struct.Memory* %call_42f1b8, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x2a0(%rbp)	 RIP: 42f1be	 Bytes: 7
  %loadMem_42f1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1be = call %struct.Memory* @routine_movq__rdi__MINUS0x2a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1be)
  store %struct.Memory* %call_42f1be, %struct.Memory** %MEMORY

  ; Code: jge .L_42f1dc	 RIP: 42f1c5	 Bytes: 6
  %loadMem_42f1c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1c5 = call %struct.Memory* @routine_jge_.L_42f1dc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1c5, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f1c5, %struct.Memory** %MEMORY

  %loadBr_42f1c5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f1c5 = icmp eq i8 %loadBr_42f1c5, 1
  br i1 %cmpBr_42f1c5, label %block_.L_42f1dc, label %block_42f1cb

block_42f1cb:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42f1cb	 Bytes: 3
  %loadMem_42f1cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1cb = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1cb)
  store %struct.Memory* %call_42f1cb, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f1ce	 Bytes: 3
  %loadMem_42f1ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1ce = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1ce)
  store %struct.Memory* %call_42f1ce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a4(%rbp)	 RIP: 42f1d1	 Bytes: 6
  %loadMem_42f1d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1d1 = call %struct.Memory* @routine_movl__eax__MINUS0x2a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1d1)
  store %struct.Memory* %call_42f1d1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f1e8	 RIP: 42f1d7	 Bytes: 5
  %loadMem_42f1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1d7 = call %struct.Memory* @routine_jmpq_.L_42f1e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1d7, i64 17, i64 5)
  store %struct.Memory* %call_42f1d7, %struct.Memory** %MEMORY

  br label %block_.L_42f1e8

  ; Code: .L_42f1dc:	 RIP: 42f1dc	 Bytes: 0
block_.L_42f1dc:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f1dc	 Bytes: 3
  %loadMem_42f1dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1dc = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1dc)
  store %struct.Memory* %call_42f1dc, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f1df	 Bytes: 3
  %loadMem_42f1df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1df = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1df)
  store %struct.Memory* %call_42f1df, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2a4(%rbp)	 RIP: 42f1e2	 Bytes: 6
  %loadMem_42f1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1e2 = call %struct.Memory* @routine_movl__eax__MINUS0x2a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1e2)
  store %struct.Memory* %call_42f1e2, %struct.Memory** %MEMORY

  ; Code: .L_42f1e8:	 RIP: 42f1e8	 Bytes: 0
  br label %block_.L_42f1e8
block_.L_42f1e8:

  ; Code: movl -0x2a4(%rbp), %eax	 RIP: 42f1e8	 Bytes: 6
  %loadMem_42f1e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1e8 = call %struct.Memory* @routine_movl_MINUS0x2a4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1e8)
  store %struct.Memory* %call_42f1e8, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f1ee	 Bytes: 3
  %loadMem_42f1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1ee = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1ee)
  store %struct.Memory* %call_42f1ee, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f1f1	 Bytes: 3
  %loadMem_42f1f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1f1 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1f1)
  store %struct.Memory* %call_42f1f1, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f1f4	 Bytes: 3
  %loadMem_42f1f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1f4 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1f4)
  store %struct.Memory* %call_42f1f4, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f1f7	 Bytes: 3
  %loadMem_42f1f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1f7 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1f7)
  store %struct.Memory* %call_42f1f7, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f1fa	 Bytes: 4
  %loadMem_42f1fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1fa = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1fa)
  store %struct.Memory* %call_42f1fa, %struct.Memory** %MEMORY

  ; Code: movq -0x2a0(%rbp), %rdi	 RIP: 42f1fe	 Bytes: 7
  %loadMem_42f1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f1fe = call %struct.Memory* @routine_movq_MINUS0x2a0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f1fe)
  store %struct.Memory* %call_42f1fe, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f205	 Bytes: 2
  %loadMem_42f205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f205 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f205)
  store %struct.Memory* %call_42f205, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2a8(%rbp)	 RIP: 42f207	 Bytes: 6
  %loadMem_42f207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f207 = call %struct.Memory* @routine_movl__edx__MINUS0x2a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f207)
  store %struct.Memory* %call_42f207, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f20d	 Bytes: 2
  %loadMem_42f20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f20d = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f20d)
  store %struct.Memory* %call_42f20d, %struct.Memory** %MEMORY

  ; Code: movl -0x2a8(%rbp), %ecx	 RIP: 42f20f	 Bytes: 6
  %loadMem_42f20f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f20f = call %struct.Memory* @routine_movl_MINUS0x2a8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f20f)
  store %struct.Memory* %call_42f20f, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f215	 Bytes: 5
  %loadMem1_42f215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f215 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f215, i64 456443, i64 5, i64 5)
  store %struct.Memory* %call1_42f215, %struct.Memory** %MEMORY

  %loadMem2_42f215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f215 = load i64, i64* %3
  %call2_42f215 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f215, %struct.Memory* %loadMem2_42f215)
  store %struct.Memory* %call2_42f215, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42f21a	 Bytes: 5
  %loadMem_42f21a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f21a = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f21a)
  store %struct.Memory* %call_42f21a, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42f21f	 Bytes: 3
  %loadMem_42f21f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f21f = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f21f)
  store %struct.Memory* %call_42f21f, %struct.Memory** %MEMORY

  ; Code: movl -0x298(%rbp), %esi	 RIP: 42f222	 Bytes: 6
  %loadMem_42f222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f222 = call %struct.Memory* @routine_movl_MINUS0x298__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f222)
  store %struct.Memory* %call_42f222, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42f228	 Bytes: 2
  %loadMem_42f228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f228 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f228)
  store %struct.Memory* %call_42f228, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42f22a	 Bytes: 3
  %loadMem_42f22a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f22a = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f22a)
  store %struct.Memory* %call_42f22a, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42f22d	 Bytes: 2
  %loadMem_42f22d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f22d = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f22d)
  store %struct.Memory* %call_42f22d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f22f	 Bytes: 1
  %loadMem_42f22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f22f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f22f)
  store %struct.Memory* %call_42f22f, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f230	 Bytes: 2
  %loadMem_42f230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f230 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f230)
  store %struct.Memory* %call_42f230, %struct.Memory** %MEMORY

  ; Code: movl -0x28c(%rbp), %ecx	 RIP: 42f232	 Bytes: 6
  %loadMem_42f232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f232 = call %struct.Memory* @routine_movl_MINUS0x28c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f232)
  store %struct.Memory* %call_42f232, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42f238	 Bytes: 2
  %loadMem_42f238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f238 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f238)
  store %struct.Memory* %call_42f238, %struct.Memory** %MEMORY

  ; Code: jge .L_42f259	 RIP: 42f23a	 Bytes: 6
  %loadMem_42f23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f23a = call %struct.Memory* @routine_jge_.L_42f259(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f23a, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42f23a, %struct.Memory** %MEMORY

  %loadBr_42f23a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f23a = icmp eq i8 %loadBr_42f23a, 1
  br i1 %cmpBr_42f23a, label %block_.L_42f259, label %block_42f240

block_42f240:
  ; Code: movq 0x6cb900, %rax	 RIP: 42f240	 Bytes: 8
  %loadMem_42f240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f240 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f240)
  store %struct.Memory* %call_42f240, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42f248	 Bytes: 6
  %loadMem_42f248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f248 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f248)
  store %struct.Memory* %call_42f248, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2ac(%rbp)	 RIP: 42f24e	 Bytes: 6
  %loadMem_42f24e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f24e = call %struct.Memory* @routine_movl__ecx__MINUS0x2ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f24e)
  store %struct.Memory* %call_42f24e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f31a	 RIP: 42f254	 Bytes: 5
  %loadMem_42f254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f254 = call %struct.Memory* @routine_jmpq_.L_42f31a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f254, i64 198, i64 5)
  store %struct.Memory* %call_42f254, %struct.Memory** %MEMORY

  br label %block_.L_42f31a

  ; Code: .L_42f259:	 RIP: 42f259	 Bytes: 0
block_.L_42f259:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f259	 Bytes: 4
  %loadMem_42f259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f259 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f259)
  store %struct.Memory* %call_42f259, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f25d	 Bytes: 3
  %loadMem_42f25d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f25d = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f25d)
  store %struct.Memory* %call_42f25d, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f260	 Bytes: 3
  %loadMem_42f260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f260 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f260)
  store %struct.Memory* %call_42f260, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f263	 Bytes: 3
  %loadMem_42f263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f263 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f263)
  store %struct.Memory* %call_42f263, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f266	 Bytes: 3
  %loadMem_42f266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f266 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f266)
  store %struct.Memory* %call_42f266, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f269	 Bytes: 3
  %loadMem_42f269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f269 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f269)
  store %struct.Memory* %call_42f269, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f26c	 Bytes: 4
  %loadMem_42f26c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f26c = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f26c)
  store %struct.Memory* %call_42f26c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f270	 Bytes: 2
  %loadMem_42f270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f270 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f270)
  store %struct.Memory* %call_42f270, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2b0(%rbp)	 RIP: 42f272	 Bytes: 6
  %loadMem_42f272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f272 = call %struct.Memory* @routine_movl__edx__MINUS0x2b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f272)
  store %struct.Memory* %call_42f272, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f278	 Bytes: 2
  %loadMem_42f278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f278 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f278)
  store %struct.Memory* %call_42f278, %struct.Memory** %MEMORY

  ; Code: movl -0x2b0(%rbp), %ecx	 RIP: 42f27a	 Bytes: 6
  %loadMem_42f27a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f27a = call %struct.Memory* @routine_movl_MINUS0x2b0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f27a)
  store %struct.Memory* %call_42f27a, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f280	 Bytes: 5
  %loadMem1_42f280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f280 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f280, i64 456336, i64 5, i64 5)
  store %struct.Memory* %call1_42f280, %struct.Memory** %MEMORY

  %loadMem2_42f280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f280 = load i64, i64* %3
  %call2_42f280 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f280, %struct.Memory* %loadMem2_42f280)
  store %struct.Memory* %call2_42f280, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f285	 Bytes: 3
  %loadMem_42f285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f285 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f285)
  store %struct.Memory* %call_42f285, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f288	 Bytes: 4
  %loadMem_42f288 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f288 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f288)
  store %struct.Memory* %call_42f288, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42f28c	 Bytes: 3
  %loadMem_42f28c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f28c = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f28c)
  store %struct.Memory* %call_42f28c, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42f28f	 Bytes: 3
  %loadMem_42f28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f28f = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f28f)
  store %struct.Memory* %call_42f28f, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42f292	 Bytes: 3
  %loadMem_42f292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f292 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f292)
  store %struct.Memory* %call_42f292, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f295	 Bytes: 3
  %loadMem_42f295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f295 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f295)
  store %struct.Memory* %call_42f295, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42f298	 Bytes: 2
  %loadMem_42f298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f298 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f298)
  store %struct.Memory* %call_42f298, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2b4(%rbp)	 RIP: 42f29a	 Bytes: 6
  %loadMem_42f29a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f29a = call %struct.Memory* @routine_movl__ecx__MINUS0x2b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f29a)
  store %struct.Memory* %call_42f29a, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x2c0(%rbp)	 RIP: 42f2a0	 Bytes: 7
  %loadMem_42f2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2a0 = call %struct.Memory* @routine_movq__rdi__MINUS0x2c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2a0)
  store %struct.Memory* %call_42f2a0, %struct.Memory** %MEMORY

  ; Code: jge .L_42f2be	 RIP: 42f2a7	 Bytes: 6
  %loadMem_42f2a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2a7 = call %struct.Memory* @routine_jge_.L_42f2be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2a7, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f2a7, %struct.Memory** %MEMORY

  %loadBr_42f2a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f2a7 = icmp eq i8 %loadBr_42f2a7, 1
  br i1 %cmpBr_42f2a7, label %block_.L_42f2be, label %block_42f2ad

block_42f2ad:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42f2ad	 Bytes: 3
  %loadMem_42f2ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2ad = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2ad)
  store %struct.Memory* %call_42f2ad, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f2b0	 Bytes: 3
  %loadMem_42f2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2b0 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2b0)
  store %struct.Memory* %call_42f2b0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c4(%rbp)	 RIP: 42f2b3	 Bytes: 6
  %loadMem_42f2b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2b3 = call %struct.Memory* @routine_movl__eax__MINUS0x2c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2b3)
  store %struct.Memory* %call_42f2b3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f2ca	 RIP: 42f2b9	 Bytes: 5
  %loadMem_42f2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2b9 = call %struct.Memory* @routine_jmpq_.L_42f2ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2b9, i64 17, i64 5)
  store %struct.Memory* %call_42f2b9, %struct.Memory** %MEMORY

  br label %block_.L_42f2ca

  ; Code: .L_42f2be:	 RIP: 42f2be	 Bytes: 0
block_.L_42f2be:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f2be	 Bytes: 3
  %loadMem_42f2be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2be = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2be)
  store %struct.Memory* %call_42f2be, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f2c1	 Bytes: 3
  %loadMem_42f2c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2c1 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2c1)
  store %struct.Memory* %call_42f2c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c4(%rbp)	 RIP: 42f2c4	 Bytes: 6
  %loadMem_42f2c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2c4 = call %struct.Memory* @routine_movl__eax__MINUS0x2c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2c4)
  store %struct.Memory* %call_42f2c4, %struct.Memory** %MEMORY

  ; Code: .L_42f2ca:	 RIP: 42f2ca	 Bytes: 0
  br label %block_.L_42f2ca
block_.L_42f2ca:

  ; Code: movl -0x2c4(%rbp), %eax	 RIP: 42f2ca	 Bytes: 6
  %loadMem_42f2ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2ca = call %struct.Memory* @routine_movl_MINUS0x2c4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2ca)
  store %struct.Memory* %call_42f2ca, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f2d0	 Bytes: 3
  %loadMem_42f2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2d0 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2d0)
  store %struct.Memory* %call_42f2d0, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f2d3	 Bytes: 3
  %loadMem_42f2d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2d3 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2d3)
  store %struct.Memory* %call_42f2d3, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f2d6	 Bytes: 3
  %loadMem_42f2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2d6 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2d6)
  store %struct.Memory* %call_42f2d6, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f2d9	 Bytes: 3
  %loadMem_42f2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2d9 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2d9)
  store %struct.Memory* %call_42f2d9, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f2dc	 Bytes: 4
  %loadMem_42f2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2dc = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2dc)
  store %struct.Memory* %call_42f2dc, %struct.Memory** %MEMORY

  ; Code: movq -0x2c0(%rbp), %rdi	 RIP: 42f2e0	 Bytes: 7
  %loadMem_42f2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2e0 = call %struct.Memory* @routine_movq_MINUS0x2c0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2e0)
  store %struct.Memory* %call_42f2e0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f2e7	 Bytes: 2
  %loadMem_42f2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2e7 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2e7)
  store %struct.Memory* %call_42f2e7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2c8(%rbp)	 RIP: 42f2e9	 Bytes: 6
  %loadMem_42f2e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2e9 = call %struct.Memory* @routine_movl__edx__MINUS0x2c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2e9)
  store %struct.Memory* %call_42f2e9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f2ef	 Bytes: 2
  %loadMem_42f2ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2ef = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2ef)
  store %struct.Memory* %call_42f2ef, %struct.Memory** %MEMORY

  ; Code: movl -0x2c8(%rbp), %ecx	 RIP: 42f2f1	 Bytes: 6
  %loadMem_42f2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2f1 = call %struct.Memory* @routine_movl_MINUS0x2c8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2f1)
  store %struct.Memory* %call_42f2f1, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f2f7	 Bytes: 5
  %loadMem1_42f2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f2f7 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f2f7, i64 456217, i64 5, i64 5)
  store %struct.Memory* %call1_42f2f7, %struct.Memory** %MEMORY

  %loadMem2_42f2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f2f7 = load i64, i64* %3
  %call2_42f2f7 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f2f7, %struct.Memory* %loadMem2_42f2f7)
  store %struct.Memory* %call2_42f2f7, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42f2fc	 Bytes: 5
  %loadMem_42f2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f2fc = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f2fc)
  store %struct.Memory* %call_42f2fc, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42f301	 Bytes: 3
  %loadMem_42f301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f301 = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f301)
  store %struct.Memory* %call_42f301, %struct.Memory** %MEMORY

  ; Code: movl -0x2b4(%rbp), %esi	 RIP: 42f304	 Bytes: 6
  %loadMem_42f304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f304 = call %struct.Memory* @routine_movl_MINUS0x2b4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f304)
  store %struct.Memory* %call_42f304, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42f30a	 Bytes: 2
  %loadMem_42f30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f30a = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f30a)
  store %struct.Memory* %call_42f30a, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42f30c	 Bytes: 3
  %loadMem_42f30c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f30c = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f30c)
  store %struct.Memory* %call_42f30c, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42f30f	 Bytes: 2
  %loadMem_42f30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f30f = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f30f)
  store %struct.Memory* %call_42f30f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f311	 Bytes: 1
  %loadMem_42f311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f311 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f311)
  store %struct.Memory* %call_42f311, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f312	 Bytes: 2
  %loadMem_42f312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f312 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f312)
  store %struct.Memory* %call_42f312, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ac(%rbp)	 RIP: 42f314	 Bytes: 6
  %loadMem_42f314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f314 = call %struct.Memory* @routine_movl__eax__MINUS0x2ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f314)
  store %struct.Memory* %call_42f314, %struct.Memory** %MEMORY

  ; Code: .L_42f31a:	 RIP: 42f31a	 Bytes: 0
  br label %block_.L_42f31a
block_.L_42f31a:

  ; Code: movl -0x2ac(%rbp), %eax	 RIP: 42f31a	 Bytes: 6
  %loadMem_42f31a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f31a = call %struct.Memory* @routine_movl_MINUS0x2ac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f31a)
  store %struct.Memory* %call_42f31a, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42f320	 Bytes: 2
  %loadMem_42f320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f320 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f320)
  store %struct.Memory* %call_42f320, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42f322	 Bytes: 2
  %loadMem_42f322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f322 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f322)
  store %struct.Memory* %call_42f322, %struct.Memory** %MEMORY

  ; Code: jle .L_42f337	 RIP: 42f324	 Bytes: 6
  %loadMem_42f324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f324 = call %struct.Memory* @routine_jle_.L_42f337(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f324, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42f324, %struct.Memory** %MEMORY

  %loadBr_42f324 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f324 = icmp eq i8 %loadBr_42f324, 1
  br i1 %cmpBr_42f324, label %block_.L_42f337, label %block_42f32a

block_42f32a:
  ; Code: xorl %eax, %eax	 RIP: 42f32a	 Bytes: 2
  %loadMem_42f32a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f32a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f32a)
  store %struct.Memory* %call_42f32a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2cc(%rbp)	 RIP: 42f32c	 Bytes: 6
  %loadMem_42f32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f32c = call %struct.Memory* @routine_movl__eax__MINUS0x2cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f32c)
  store %struct.Memory* %call_42f32c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f4ff	 RIP: 42f332	 Bytes: 5
  %loadMem_42f332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f332 = call %struct.Memory* @routine_jmpq_.L_42f4ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f332, i64 461, i64 5)
  store %struct.Memory* %call_42f332, %struct.Memory** %MEMORY

  br label %block_.L_42f4ff

  ; Code: .L_42f337:	 RIP: 42f337	 Bytes: 0
block_.L_42f337:

  ; Code: movq 0x6cb900, %rax	 RIP: 42f337	 Bytes: 8
  %loadMem_42f337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f337 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f337)
  store %struct.Memory* %call_42f337, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42f33f	 Bytes: 6
  %loadMem_42f33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f33f = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f33f)
  store %struct.Memory* %call_42f33f, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f345	 Bytes: 4
  %loadMem_42f345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f345 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f345)
  store %struct.Memory* %call_42f345, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 42f349	 Bytes: 3
  %loadMem_42f349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f349 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f349)
  store %struct.Memory* %call_42f349, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %edx	 RIP: 42f34c	 Bytes: 3
  %loadMem_42f34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f34c = call %struct.Memory* @routine_subl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f34c)
  store %struct.Memory* %call_42f34c, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 42f34f	 Bytes: 3
  %loadMem_42f34f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f34f = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f34f)
  store %struct.Memory* %call_42f34f, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %esi	 RIP: 42f352	 Bytes: 3
  %loadMem_42f352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f352 = call %struct.Memory* @routine_subl__0x10___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f352)
  store %struct.Memory* %call_42f352, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r8d	 RIP: 42f355	 Bytes: 4
  %loadMem_42f355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f355 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f355)
  store %struct.Memory* %call_42f355, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r9d	 RIP: 42f359	 Bytes: 4
  %loadMem_42f359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f359 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f359)
  store %struct.Memory* %call_42f359, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x2d0(%rbp)	 RIP: 42f35d	 Bytes: 6
  %loadMem_42f35d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f35d = call %struct.Memory* @routine_movl__esi__MINUS0x2d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f35d)
  store %struct.Memory* %call_42f35d, %struct.Memory** %MEMORY

  ; Code: movl %edx, %esi	 RIP: 42f363	 Bytes: 2
  %loadMem_42f363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f363 = call %struct.Memory* @routine_movl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f363)
  store %struct.Memory* %call_42f363, %struct.Memory** %MEMORY

  ; Code: movl -0x2d0(%rbp), %edx	 RIP: 42f365	 Bytes: 6
  %loadMem_42f365 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f365 = call %struct.Memory* @routine_movl_MINUS0x2d0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f365)
  store %struct.Memory* %call_42f365, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2d4(%rbp)	 RIP: 42f36b	 Bytes: 6
  %loadMem_42f36b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f36b = call %struct.Memory* @routine_movl__ecx__MINUS0x2d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f36b)
  store %struct.Memory* %call_42f36b, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 42f371	 Bytes: 3
  %loadMem_42f371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f371 = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f371)
  store %struct.Memory* %call_42f371, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %r8d	 RIP: 42f374	 Bytes: 3
  %loadMem_42f374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f374 = call %struct.Memory* @routine_movl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f374)
  store %struct.Memory* %call_42f374, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f377	 Bytes: 5
  %loadMem1_42f377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f377 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f377, i64 456089, i64 5, i64 5)
  store %struct.Memory* %call1_42f377, %struct.Memory** %MEMORY

  %loadMem2_42f377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f377 = load i64, i64* %3
  %call2_42f377 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f377, %struct.Memory* %loadMem2_42f377)
  store %struct.Memory* %call2_42f377, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f37c	 Bytes: 3
  %loadMem_42f37c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f37c = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f37c)
  store %struct.Memory* %call_42f37c, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f37f	 Bytes: 4
  %loadMem_42f37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f37f = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f37f)
  store %struct.Memory* %call_42f37f, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42f383	 Bytes: 3
  %loadMem_42f383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f383 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f383)
  store %struct.Memory* %call_42f383, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42f386	 Bytes: 3
  %loadMem_42f386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f386 = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f386)
  store %struct.Memory* %call_42f386, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42f389	 Bytes: 3
  %loadMem_42f389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f389 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f389)
  store %struct.Memory* %call_42f389, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f38c	 Bytes: 3
  %loadMem_42f38c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f38c = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f38c)
  store %struct.Memory* %call_42f38c, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42f38f	 Bytes: 2
  %loadMem_42f38f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f38f = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f38f)
  store %struct.Memory* %call_42f38f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2d8(%rbp)	 RIP: 42f391	 Bytes: 6
  %loadMem_42f391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f391 = call %struct.Memory* @routine_movl__ecx__MINUS0x2d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f391)
  store %struct.Memory* %call_42f391, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x2e0(%rbp)	 RIP: 42f397	 Bytes: 7
  %loadMem_42f397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f397 = call %struct.Memory* @routine_movq__rdi__MINUS0x2e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f397)
  store %struct.Memory* %call_42f397, %struct.Memory** %MEMORY

  ; Code: jge .L_42f3b5	 RIP: 42f39e	 Bytes: 6
  %loadMem_42f39e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f39e = call %struct.Memory* @routine_jge_.L_42f3b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f39e, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f39e, %struct.Memory** %MEMORY

  %loadBr_42f39e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f39e = icmp eq i8 %loadBr_42f39e, 1
  br i1 %cmpBr_42f39e, label %block_.L_42f3b5, label %block_42f3a4

block_42f3a4:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42f3a4	 Bytes: 3
  %loadMem_42f3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3a4 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3a4)
  store %struct.Memory* %call_42f3a4, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f3a7	 Bytes: 3
  %loadMem_42f3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3a7 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3a7)
  store %struct.Memory* %call_42f3a7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e4(%rbp)	 RIP: 42f3aa	 Bytes: 6
  %loadMem_42f3aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3aa = call %struct.Memory* @routine_movl__eax__MINUS0x2e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3aa)
  store %struct.Memory* %call_42f3aa, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f3c1	 RIP: 42f3b0	 Bytes: 5
  %loadMem_42f3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3b0 = call %struct.Memory* @routine_jmpq_.L_42f3c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3b0, i64 17, i64 5)
  store %struct.Memory* %call_42f3b0, %struct.Memory** %MEMORY

  br label %block_.L_42f3c1

  ; Code: .L_42f3b5:	 RIP: 42f3b5	 Bytes: 0
block_.L_42f3b5:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f3b5	 Bytes: 3
  %loadMem_42f3b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3b5 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3b5)
  store %struct.Memory* %call_42f3b5, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f3b8	 Bytes: 3
  %loadMem_42f3b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3b8 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3b8)
  store %struct.Memory* %call_42f3b8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2e4(%rbp)	 RIP: 42f3bb	 Bytes: 6
  %loadMem_42f3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3bb = call %struct.Memory* @routine_movl__eax__MINUS0x2e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3bb)
  store %struct.Memory* %call_42f3bb, %struct.Memory** %MEMORY

  ; Code: .L_42f3c1:	 RIP: 42f3c1	 Bytes: 0
  br label %block_.L_42f3c1
block_.L_42f3c1:

  ; Code: movl -0x2e4(%rbp), %eax	 RIP: 42f3c1	 Bytes: 6
  %loadMem_42f3c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3c1 = call %struct.Memory* @routine_movl_MINUS0x2e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3c1)
  store %struct.Memory* %call_42f3c1, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f3c7	 Bytes: 3
  %loadMem_42f3c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3c7 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3c7)
  store %struct.Memory* %call_42f3c7, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f3ca	 Bytes: 3
  %loadMem_42f3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3ca = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3ca)
  store %struct.Memory* %call_42f3ca, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f3cd	 Bytes: 3
  %loadMem_42f3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3cd = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3cd)
  store %struct.Memory* %call_42f3cd, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f3d0	 Bytes: 3
  %loadMem_42f3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3d0 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3d0)
  store %struct.Memory* %call_42f3d0, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f3d3	 Bytes: 4
  %loadMem_42f3d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3d3 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3d3)
  store %struct.Memory* %call_42f3d3, %struct.Memory** %MEMORY

  ; Code: movq -0x2e0(%rbp), %rdi	 RIP: 42f3d7	 Bytes: 7
  %loadMem_42f3d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3d7 = call %struct.Memory* @routine_movq_MINUS0x2e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3d7)
  store %struct.Memory* %call_42f3d7, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f3de	 Bytes: 2
  %loadMem_42f3de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3de = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3de)
  store %struct.Memory* %call_42f3de, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2e8(%rbp)	 RIP: 42f3e0	 Bytes: 6
  %loadMem_42f3e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3e0 = call %struct.Memory* @routine_movl__edx__MINUS0x2e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3e0)
  store %struct.Memory* %call_42f3e0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f3e6	 Bytes: 2
  %loadMem_42f3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3e6 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3e6)
  store %struct.Memory* %call_42f3e6, %struct.Memory** %MEMORY

  ; Code: movl -0x2e8(%rbp), %ecx	 RIP: 42f3e8	 Bytes: 6
  %loadMem_42f3e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3e8 = call %struct.Memory* @routine_movl_MINUS0x2e8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3e8)
  store %struct.Memory* %call_42f3e8, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f3ee	 Bytes: 5
  %loadMem1_42f3ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f3ee = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f3ee, i64 455970, i64 5, i64 5)
  store %struct.Memory* %call1_42f3ee, %struct.Memory** %MEMORY

  %loadMem2_42f3ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f3ee = load i64, i64* %3
  %call2_42f3ee = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f3ee, %struct.Memory* %loadMem2_42f3ee)
  store %struct.Memory* %call2_42f3ee, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42f3f3	 Bytes: 5
  %loadMem_42f3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3f3 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3f3)
  store %struct.Memory* %call_42f3f3, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42f3f8	 Bytes: 3
  %loadMem_42f3f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3f8 = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3f8)
  store %struct.Memory* %call_42f3f8, %struct.Memory** %MEMORY

  ; Code: movl -0x2d8(%rbp), %esi	 RIP: 42f3fb	 Bytes: 6
  %loadMem_42f3fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f3fb = call %struct.Memory* @routine_movl_MINUS0x2d8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f3fb)
  store %struct.Memory* %call_42f3fb, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42f401	 Bytes: 2
  %loadMem_42f401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f401 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f401)
  store %struct.Memory* %call_42f401, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42f403	 Bytes: 3
  %loadMem_42f403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f403 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f403)
  store %struct.Memory* %call_42f403, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42f406	 Bytes: 2
  %loadMem_42f406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f406 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f406)
  store %struct.Memory* %call_42f406, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f408	 Bytes: 1
  %loadMem_42f408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f408 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f408)
  store %struct.Memory* %call_42f408, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f409	 Bytes: 2
  %loadMem_42f409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f409 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f409)
  store %struct.Memory* %call_42f409, %struct.Memory** %MEMORY

  ; Code: movl -0x2d4(%rbp), %ecx	 RIP: 42f40b	 Bytes: 6
  %loadMem_42f40b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f40b = call %struct.Memory* @routine_movl_MINUS0x2d4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f40b)
  store %struct.Memory* %call_42f40b, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42f411	 Bytes: 2
  %loadMem_42f411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f411 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f411)
  store %struct.Memory* %call_42f411, %struct.Memory** %MEMORY

  ; Code: jge .L_42f432	 RIP: 42f413	 Bytes: 6
  %loadMem_42f413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f413 = call %struct.Memory* @routine_jge_.L_42f432(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f413, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42f413, %struct.Memory** %MEMORY

  %loadBr_42f413 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f413 = icmp eq i8 %loadBr_42f413, 1
  br i1 %cmpBr_42f413, label %block_.L_42f432, label %block_42f419

block_42f419:
  ; Code: movq 0x6cb900, %rax	 RIP: 42f419	 Bytes: 8
  %loadMem_42f419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f419 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f419)
  store %struct.Memory* %call_42f419, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42f421	 Bytes: 6
  %loadMem_42f421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f421 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f421)
  store %struct.Memory* %call_42f421, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2ec(%rbp)	 RIP: 42f427	 Bytes: 6
  %loadMem_42f427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f427 = call %struct.Memory* @routine_movl__ecx__MINUS0x2ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f427)
  store %struct.Memory* %call_42f427, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f4f3	 RIP: 42f42d	 Bytes: 5
  %loadMem_42f42d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f42d = call %struct.Memory* @routine_jmpq_.L_42f4f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f42d, i64 198, i64 5)
  store %struct.Memory* %call_42f42d, %struct.Memory** %MEMORY

  br label %block_.L_42f4f3

  ; Code: .L_42f432:	 RIP: 42f432	 Bytes: 0
block_.L_42f432:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f432	 Bytes: 4
  %loadMem_42f432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f432 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f432)
  store %struct.Memory* %call_42f432, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f436	 Bytes: 3
  %loadMem_42f436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f436 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f436)
  store %struct.Memory* %call_42f436, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f439	 Bytes: 3
  %loadMem_42f439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f439 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f439)
  store %struct.Memory* %call_42f439, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f43c	 Bytes: 3
  %loadMem_42f43c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f43c = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f43c)
  store %struct.Memory* %call_42f43c, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f43f	 Bytes: 3
  %loadMem_42f43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f43f = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f43f)
  store %struct.Memory* %call_42f43f, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f442	 Bytes: 3
  %loadMem_42f442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f442 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f442)
  store %struct.Memory* %call_42f442, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f445	 Bytes: 4
  %loadMem_42f445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f445 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f445)
  store %struct.Memory* %call_42f445, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f449	 Bytes: 2
  %loadMem_42f449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f449 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f449)
  store %struct.Memory* %call_42f449, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2f0(%rbp)	 RIP: 42f44b	 Bytes: 6
  %loadMem_42f44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f44b = call %struct.Memory* @routine_movl__edx__MINUS0x2f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f44b)
  store %struct.Memory* %call_42f44b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f451	 Bytes: 2
  %loadMem_42f451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f451 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f451)
  store %struct.Memory* %call_42f451, %struct.Memory** %MEMORY

  ; Code: movl -0x2f0(%rbp), %ecx	 RIP: 42f453	 Bytes: 6
  %loadMem_42f453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f453 = call %struct.Memory* @routine_movl_MINUS0x2f0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f453)
  store %struct.Memory* %call_42f453, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f459	 Bytes: 5
  %loadMem1_42f459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f459 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f459, i64 455863, i64 5, i64 5)
  store %struct.Memory* %call1_42f459, %struct.Memory** %MEMORY

  %loadMem2_42f459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f459 = load i64, i64* %3
  %call2_42f459 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f459, %struct.Memory* %loadMem2_42f459)
  store %struct.Memory* %call2_42f459, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f45e	 Bytes: 3
  %loadMem_42f45e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f45e = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f45e)
  store %struct.Memory* %call_42f45e, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f461	 Bytes: 4
  %loadMem_42f461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f461 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f461)
  store %struct.Memory* %call_42f461, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42f465	 Bytes: 3
  %loadMem_42f465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f465 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f465)
  store %struct.Memory* %call_42f465, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42f468	 Bytes: 3
  %loadMem_42f468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f468 = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f468)
  store %struct.Memory* %call_42f468, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42f46b	 Bytes: 3
  %loadMem_42f46b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f46b = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f46b)
  store %struct.Memory* %call_42f46b, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f46e	 Bytes: 3
  %loadMem_42f46e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f46e = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f46e)
  store %struct.Memory* %call_42f46e, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42f471	 Bytes: 2
  %loadMem_42f471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f471 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f471)
  store %struct.Memory* %call_42f471, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x2f4(%rbp)	 RIP: 42f473	 Bytes: 6
  %loadMem_42f473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f473 = call %struct.Memory* @routine_movl__ecx__MINUS0x2f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f473)
  store %struct.Memory* %call_42f473, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x300(%rbp)	 RIP: 42f479	 Bytes: 7
  %loadMem_42f479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f479 = call %struct.Memory* @routine_movq__rdi__MINUS0x300__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f479)
  store %struct.Memory* %call_42f479, %struct.Memory** %MEMORY

  ; Code: jge .L_42f497	 RIP: 42f480	 Bytes: 6
  %loadMem_42f480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f480 = call %struct.Memory* @routine_jge_.L_42f497(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f480, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f480, %struct.Memory** %MEMORY

  %loadBr_42f480 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f480 = icmp eq i8 %loadBr_42f480, 1
  br i1 %cmpBr_42f480, label %block_.L_42f497, label %block_42f486

block_42f486:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42f486	 Bytes: 3
  %loadMem_42f486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f486 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f486)
  store %struct.Memory* %call_42f486, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f489	 Bytes: 3
  %loadMem_42f489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f489 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f489)
  store %struct.Memory* %call_42f489, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x304(%rbp)	 RIP: 42f48c	 Bytes: 6
  %loadMem_42f48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f48c = call %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f48c)
  store %struct.Memory* %call_42f48c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f4a3	 RIP: 42f492	 Bytes: 5
  %loadMem_42f492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f492 = call %struct.Memory* @routine_jmpq_.L_42f4a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f492, i64 17, i64 5)
  store %struct.Memory* %call_42f492, %struct.Memory** %MEMORY

  br label %block_.L_42f4a3

  ; Code: .L_42f497:	 RIP: 42f497	 Bytes: 0
block_.L_42f497:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f497	 Bytes: 3
  %loadMem_42f497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f497 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f497)
  store %struct.Memory* %call_42f497, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f49a	 Bytes: 3
  %loadMem_42f49a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f49a = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f49a)
  store %struct.Memory* %call_42f49a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x304(%rbp)	 RIP: 42f49d	 Bytes: 6
  %loadMem_42f49d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f49d = call %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f49d)
  store %struct.Memory* %call_42f49d, %struct.Memory** %MEMORY

  ; Code: .L_42f4a3:	 RIP: 42f4a3	 Bytes: 0
  br label %block_.L_42f4a3
block_.L_42f4a3:

  ; Code: movl -0x304(%rbp), %eax	 RIP: 42f4a3	 Bytes: 6
  %loadMem_42f4a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4a3 = call %struct.Memory* @routine_movl_MINUS0x304__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4a3)
  store %struct.Memory* %call_42f4a3, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f4a9	 Bytes: 3
  %loadMem_42f4a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4a9 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4a9)
  store %struct.Memory* %call_42f4a9, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f4ac	 Bytes: 3
  %loadMem_42f4ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4ac = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4ac)
  store %struct.Memory* %call_42f4ac, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f4af	 Bytes: 3
  %loadMem_42f4af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4af = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4af)
  store %struct.Memory* %call_42f4af, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f4b2	 Bytes: 3
  %loadMem_42f4b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4b2 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4b2)
  store %struct.Memory* %call_42f4b2, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f4b5	 Bytes: 4
  %loadMem_42f4b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4b5 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4b5)
  store %struct.Memory* %call_42f4b5, %struct.Memory** %MEMORY

  ; Code: movq -0x300(%rbp), %rdi	 RIP: 42f4b9	 Bytes: 7
  %loadMem_42f4b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4b9 = call %struct.Memory* @routine_movq_MINUS0x300__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4b9)
  store %struct.Memory* %call_42f4b9, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f4c0	 Bytes: 2
  %loadMem_42f4c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4c0 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4c0)
  store %struct.Memory* %call_42f4c0, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x308(%rbp)	 RIP: 42f4c2	 Bytes: 6
  %loadMem_42f4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4c2 = call %struct.Memory* @routine_movl__edx__MINUS0x308__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4c2)
  store %struct.Memory* %call_42f4c2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f4c8	 Bytes: 2
  %loadMem_42f4c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4c8 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4c8)
  store %struct.Memory* %call_42f4c8, %struct.Memory** %MEMORY

  ; Code: movl -0x308(%rbp), %ecx	 RIP: 42f4ca	 Bytes: 6
  %loadMem_42f4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4ca = call %struct.Memory* @routine_movl_MINUS0x308__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4ca)
  store %struct.Memory* %call_42f4ca, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f4d0	 Bytes: 5
  %loadMem1_42f4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f4d0 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f4d0, i64 455744, i64 5, i64 5)
  store %struct.Memory* %call1_42f4d0, %struct.Memory** %MEMORY

  %loadMem2_42f4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f4d0 = load i64, i64* %3
  %call2_42f4d0 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f4d0, %struct.Memory* %loadMem2_42f4d0)
  store %struct.Memory* %call2_42f4d0, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42f4d5	 Bytes: 5
  %loadMem_42f4d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4d5 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4d5)
  store %struct.Memory* %call_42f4d5, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42f4da	 Bytes: 3
  %loadMem_42f4da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4da = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4da)
  store %struct.Memory* %call_42f4da, %struct.Memory** %MEMORY

  ; Code: movl -0x2f4(%rbp), %esi	 RIP: 42f4dd	 Bytes: 6
  %loadMem_42f4dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4dd = call %struct.Memory* @routine_movl_MINUS0x2f4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4dd)
  store %struct.Memory* %call_42f4dd, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42f4e3	 Bytes: 2
  %loadMem_42f4e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4e3 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4e3)
  store %struct.Memory* %call_42f4e3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42f4e5	 Bytes: 3
  %loadMem_42f4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4e5 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4e5)
  store %struct.Memory* %call_42f4e5, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42f4e8	 Bytes: 2
  %loadMem_42f4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4e8 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4e8)
  store %struct.Memory* %call_42f4e8, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f4ea	 Bytes: 1
  %loadMem_42f4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4ea = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4ea)
  store %struct.Memory* %call_42f4ea, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f4eb	 Bytes: 2
  %loadMem_42f4eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4eb = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4eb)
  store %struct.Memory* %call_42f4eb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2ec(%rbp)	 RIP: 42f4ed	 Bytes: 6
  %loadMem_42f4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4ed = call %struct.Memory* @routine_movl__eax__MINUS0x2ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4ed)
  store %struct.Memory* %call_42f4ed, %struct.Memory** %MEMORY

  ; Code: .L_42f4f3:	 RIP: 42f4f3	 Bytes: 0
  br label %block_.L_42f4f3
block_.L_42f4f3:

  ; Code: movl -0x2ec(%rbp), %eax	 RIP: 42f4f3	 Bytes: 6
  %loadMem_42f4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4f3 = call %struct.Memory* @routine_movl_MINUS0x2ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4f3)
  store %struct.Memory* %call_42f4f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2cc(%rbp)	 RIP: 42f4f9	 Bytes: 6
  %loadMem_42f4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4f9 = call %struct.Memory* @routine_movl__eax__MINUS0x2cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4f9)
  store %struct.Memory* %call_42f4f9, %struct.Memory** %MEMORY

  ; Code: .L_42f4ff:	 RIP: 42f4ff	 Bytes: 0
  br label %block_.L_42f4ff
block_.L_42f4ff:

  ; Code: movl -0x2cc(%rbp), %eax	 RIP: 42f4ff	 Bytes: 6
  %loadMem_42f4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f4ff = call %struct.Memory* @routine_movl_MINUS0x2cc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f4ff)
  store %struct.Memory* %call_42f4ff, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 42f505	 Bytes: 3
  %loadMem_42f505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f505 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f505)
  store %struct.Memory* %call_42f505, %struct.Memory** %MEMORY

  ; Code: movq -0x288(%rbp), %rdi	 RIP: 42f508	 Bytes: 7
  %loadMem_42f508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f508 = call %struct.Memory* @routine_movq_MINUS0x288__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f508)
  store %struct.Memory* %call_42f508, %struct.Memory** %MEMORY

  ; Code: movl -0x294(%rbp), %esi	 RIP: 42f50f	 Bytes: 6
  %loadMem_42f50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f50f = call %struct.Memory* @routine_movl_MINUS0x294__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f50f)
  store %struct.Memory* %call_42f50f, %struct.Memory** %MEMORY

  ; Code: movl -0x290(%rbp), %edx	 RIP: 42f515	 Bytes: 6
  %loadMem_42f515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f515 = call %struct.Memory* @routine_movl_MINUS0x290__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f515)
  store %struct.Memory* %call_42f515, %struct.Memory** %MEMORY

  ; Code: movzwl %cx, %ecx	 RIP: 42f51b	 Bytes: 3
  %loadMem_42f51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f51b = call %struct.Memory* @routine_movzwl__cx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f51b)
  store %struct.Memory* %call_42f51b, %struct.Memory** %MEMORY

  ; Code: callq .PutPel_14	 RIP: 42f51e	 Bytes: 5
  %loadMem1_42f51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f51e = call %struct.Memory* @routine_callq_.PutPel_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f51e, i64 453714, i64 5, i64 5)
  store %struct.Memory* %call1_42f51e, %struct.Memory** %MEMORY

  %loadMem2_42f51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f51e = load i64, i64* %3
  %call2_42f51e = call %struct.Memory* @sub_49e170.PutPel_14(%struct.State* %0, i64  %loadPC_42f51e, %struct.Memory* %loadMem2_42f51e)
  store %struct.Memory* %call2_42f51e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ff71	 RIP: 42f523	 Bytes: 5
  %loadMem_42f523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f523 = call %struct.Memory* @routine_jmpq_.L_42ff71(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f523, i64 2638, i64 5)
  store %struct.Memory* %call_42f523, %struct.Memory** %MEMORY

  br label %block_.L_42ff71

  ; Code: .L_42f528:	 RIP: 42f528	 Bytes: 0
block_.L_42f528:

  ; Code: movl $0x4, %eax	 RIP: 42f528	 Bytes: 5
  %loadMem_42f528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f528 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f528)
  store %struct.Memory* %call_42f528, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %ecx	 RIP: 42f52d	 Bytes: 3
  %loadMem_42f52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f52d = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f52d)
  store %struct.Memory* %call_42f52d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x30c(%rbp)	 RIP: 42f530	 Bytes: 6
  %loadMem_42f530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f530 = call %struct.Memory* @routine_movl__eax__MINUS0x30c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f530)
  store %struct.Memory* %call_42f530, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 42f536	 Bytes: 2
  %loadMem_42f536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f536 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f536)
  store %struct.Memory* %call_42f536, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f538	 Bytes: 1
  %loadMem_42f538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f538 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f538)
  store %struct.Memory* %call_42f538, %struct.Memory** %MEMORY

  ; Code: movl -0x30c(%rbp), %ecx	 RIP: 42f539	 Bytes: 6
  %loadMem_42f539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f539 = call %struct.Memory* @routine_movl_MINUS0x30c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f539)
  store %struct.Memory* %call_42f539, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f53f	 Bytes: 2
  %loadMem_42f53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f53f = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f53f)
  store %struct.Memory* %call_42f53f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 42f541	 Bytes: 3
  %loadMem_42f541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f541 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f541)
  store %struct.Memory* %call_42f541, %struct.Memory** %MEMORY

  ; Code: jne .L_42f56c	 RIP: 42f544	 Bytes: 6
  %loadMem_42f544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f544 = call %struct.Memory* @routine_jne_.L_42f56c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f544, i8* %BRANCH_TAKEN, i64 40, i64 6, i64 6)
  store %struct.Memory* %call_42f544, %struct.Memory** %MEMORY

  %loadBr_42f544 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f544 = icmp eq i8 %loadBr_42f544, 1
  br i1 %cmpBr_42f544, label %block_.L_42f56c, label %block_42f54a

block_42f54a:
  ; Code: movl $0x4, %eax	 RIP: 42f54a	 Bytes: 5
  %loadMem_42f54a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f54a = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f54a)
  store %struct.Memory* %call_42f54a, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f54f	 Bytes: 3
  %loadMem_42f54f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f54f = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f54f)
  store %struct.Memory* %call_42f54f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x310(%rbp)	 RIP: 42f552	 Bytes: 6
  %loadMem_42f552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f552 = call %struct.Memory* @routine_movl__eax__MINUS0x310__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f552)
  store %struct.Memory* %call_42f552, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 42f558	 Bytes: 2
  %loadMem_42f558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f558 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f558)
  store %struct.Memory* %call_42f558, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f55a	 Bytes: 1
  %loadMem_42f55a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f55a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f55a)
  store %struct.Memory* %call_42f55a, %struct.Memory** %MEMORY

  ; Code: movl -0x310(%rbp), %ecx	 RIP: 42f55b	 Bytes: 6
  %loadMem_42f55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f55b = call %struct.Memory* @routine_movl_MINUS0x310__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f55b)
  store %struct.Memory* %call_42f55b, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f561	 Bytes: 2
  %loadMem_42f561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f561 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f561)
  store %struct.Memory* %call_42f561, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %edx	 RIP: 42f563	 Bytes: 3
  %loadMem_42f563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f563 = call %struct.Memory* @routine_cmpl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f563)
  store %struct.Memory* %call_42f563, %struct.Memory** %MEMORY

  ; Code: je .L_42f5b0	 RIP: 42f566	 Bytes: 6
  %loadMem_42f566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f566 = call %struct.Memory* @routine_je_.L_42f5b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f566, i8* %BRANCH_TAKEN, i64 74, i64 6, i64 6)
  store %struct.Memory* %call_42f566, %struct.Memory** %MEMORY

  %loadBr_42f566 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f566 = icmp eq i8 %loadBr_42f566, 1
  br i1 %cmpBr_42f566, label %block_.L_42f5b0, label %block_.L_42f56c

  ; Code: .L_42f56c:	 RIP: 42f56c	 Bytes: 0
block_.L_42f56c:

  ; Code: movl $0x4, %eax	 RIP: 42f56c	 Bytes: 5
  %loadMem_42f56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f56c = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f56c)
  store %struct.Memory* %call_42f56c, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %ecx	 RIP: 42f571	 Bytes: 3
  %loadMem_42f571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f571 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f571)
  store %struct.Memory* %call_42f571, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x314(%rbp)	 RIP: 42f574	 Bytes: 6
  %loadMem_42f574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f574 = call %struct.Memory* @routine_movl__eax__MINUS0x314__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f574)
  store %struct.Memory* %call_42f574, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 42f57a	 Bytes: 2
  %loadMem_42f57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f57a = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f57a)
  store %struct.Memory* %call_42f57a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f57c	 Bytes: 1
  %loadMem_42f57c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f57c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f57c)
  store %struct.Memory* %call_42f57c, %struct.Memory** %MEMORY

  ; Code: movl -0x314(%rbp), %ecx	 RIP: 42f57d	 Bytes: 6
  %loadMem_42f57d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f57d = call %struct.Memory* @routine_movl_MINUS0x314__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f57d)
  store %struct.Memory* %call_42f57d, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f583	 Bytes: 2
  %loadMem_42f583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f583 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f583)
  store %struct.Memory* %call_42f583, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %edx	 RIP: 42f585	 Bytes: 3
  %loadMem_42f585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f585 = call %struct.Memory* @routine_cmpl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f585)
  store %struct.Memory* %call_42f585, %struct.Memory** %MEMORY

  ; Code: jne .L_42faad	 RIP: 42f588	 Bytes: 6
  %loadMem_42f588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f588 = call %struct.Memory* @routine_jne_.L_42faad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f588, i8* %BRANCH_TAKEN, i64 1317, i64 6, i64 6)
  store %struct.Memory* %call_42f588, %struct.Memory** %MEMORY

  %loadBr_42f588 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f588 = icmp eq i8 %loadBr_42f588, 1
  br i1 %cmpBr_42f588, label %block_.L_42faad, label %block_42f58e

block_42f58e:
  ; Code: movl $0x4, %eax	 RIP: 42f58e	 Bytes: 5
  %loadMem_42f58e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f58e = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f58e)
  store %struct.Memory* %call_42f58e, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f593	 Bytes: 3
  %loadMem_42f593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f593 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f593)
  store %struct.Memory* %call_42f593, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x318(%rbp)	 RIP: 42f596	 Bytes: 6
  %loadMem_42f596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f596 = call %struct.Memory* @routine_movl__eax__MINUS0x318__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f596)
  store %struct.Memory* %call_42f596, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 42f59c	 Bytes: 2
  %loadMem_42f59c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f59c = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f59c)
  store %struct.Memory* %call_42f59c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f59e	 Bytes: 1
  %loadMem_42f59e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f59e = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f59e)
  store %struct.Memory* %call_42f59e, %struct.Memory** %MEMORY

  ; Code: movl -0x318(%rbp), %ecx	 RIP: 42f59f	 Bytes: 6
  %loadMem_42f59f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f59f = call %struct.Memory* @routine_movl_MINUS0x318__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f59f)
  store %struct.Memory* %call_42f59f, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f5a5	 Bytes: 2
  %loadMem_42f5a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5a5 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5a5)
  store %struct.Memory* %call_42f5a5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %edx	 RIP: 42f5a7	 Bytes: 3
  %loadMem_42f5a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5a7 = call %struct.Memory* @routine_cmpl__0x3___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5a7)
  store %struct.Memory* %call_42f5a7, %struct.Memory** %MEMORY

  ; Code: jne .L_42faad	 RIP: 42f5aa	 Bytes: 6
  %loadMem_42f5aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5aa = call %struct.Memory* @routine_jne_.L_42faad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5aa, i8* %BRANCH_TAKEN, i64 1283, i64 6, i64 6)
  store %struct.Memory* %call_42f5aa, %struct.Memory** %MEMORY

  %loadBr_42f5aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f5aa = icmp eq i8 %loadBr_42f5aa, 1
  br i1 %cmpBr_42f5aa, label %block_.L_42faad, label %block_.L_42f5b0

  ; Code: .L_42f5b0:	 RIP: 42f5b0	 Bytes: 0
block_.L_42f5b0:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f5b0	 Bytes: 4
  %loadMem_42f5b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5b0 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5b0)
  store %struct.Memory* %call_42f5b0, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f5b4	 Bytes: 3
  %loadMem_42f5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5b4 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5b4)
  store %struct.Memory* %call_42f5b4, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f5b7	 Bytes: 3
  %loadMem_42f5b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5b7 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5b7)
  store %struct.Memory* %call_42f5b7, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42f5ba	 Bytes: 3
  %loadMem_42f5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5ba = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5ba)
  store %struct.Memory* %call_42f5ba, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f5bd	 Bytes: 3
  %loadMem_42f5bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5bd = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5bd)
  store %struct.Memory* %call_42f5bd, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f5c0	 Bytes: 3
  %loadMem_42f5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5c0 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5c0)
  store %struct.Memory* %call_42f5c0, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 42f5c3	 Bytes: 8
  %loadMem_42f5c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5c3 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5c3)
  store %struct.Memory* %call_42f5c3, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rdx), %esi	 RIP: 42f5cb	 Bytes: 6
  %loadMem_42f5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5cb = call %struct.Memory* @routine_movl_0x11bec__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5cb)
  store %struct.Memory* %call_42f5cb, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdx	 RIP: 42f5d1	 Bytes: 4
  %loadMem_42f5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5d1 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5d1)
  store %struct.Memory* %call_42f5d1, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r8d	 RIP: 42f5d5	 Bytes: 4
  %loadMem_42f5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5d5 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5d5)
  store %struct.Memory* %call_42f5d5, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %r8d	 RIP: 42f5d9	 Bytes: 4
  %loadMem_42f5d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5d9 = call %struct.Memory* @routine_subl__0x10___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5d9)
  store %struct.Memory* %call_42f5d9, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %r9d	 RIP: 42f5dd	 Bytes: 4
  %loadMem_42f5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5dd = call %struct.Memory* @routine_movl_MINUS0x24__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5dd)
  store %struct.Memory* %call_42f5dd, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %r9d	 RIP: 42f5e1	 Bytes: 4
  %loadMem_42f5e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5e1 = call %struct.Memory* @routine_addl__0x2___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5e1)
  store %struct.Memory* %call_42f5e1, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r10d	 RIP: 42f5e5	 Bytes: 4
  %loadMem_42f5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5e5 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5e5)
  store %struct.Memory* %call_42f5e5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %r10d	 RIP: 42f5e9	 Bytes: 4
  %loadMem_42f5e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5e9 = call %struct.Memory* @routine_addl__0x1___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5e9)
  store %struct.Memory* %call_42f5e9, %struct.Memory** %MEMORY

  ; Code: cmpl %r10d, %r9d	 RIP: 42f5ed	 Bytes: 3
  %loadMem_42f5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5ed = call %struct.Memory* @routine_cmpl__r10d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5ed)
  store %struct.Memory* %call_42f5ed, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x320(%rbp)	 RIP: 42f5f0	 Bytes: 7
  %loadMem_42f5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5f0 = call %struct.Memory* @routine_movq__rdi__MINUS0x320__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5f0)
  store %struct.Memory* %call_42f5f0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x324(%rbp)	 RIP: 42f5f7	 Bytes: 6
  %loadMem_42f5f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5f7 = call %struct.Memory* @routine_movl__eax__MINUS0x324__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5f7)
  store %struct.Memory* %call_42f5f7, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x328(%rbp)	 RIP: 42f5fd	 Bytes: 6
  %loadMem_42f5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f5fd = call %struct.Memory* @routine_movl__ecx__MINUS0x328__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f5fd)
  store %struct.Memory* %call_42f5fd, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x32c(%rbp)	 RIP: 42f603	 Bytes: 6
  %loadMem_42f603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f603 = call %struct.Memory* @routine_movl__esi__MINUS0x32c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f603)
  store %struct.Memory* %call_42f603, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x338(%rbp)	 RIP: 42f609	 Bytes: 7
  %loadMem_42f609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f609 = call %struct.Memory* @routine_movq__rdx__MINUS0x338__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f609)
  store %struct.Memory* %call_42f609, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x33c(%rbp)	 RIP: 42f610	 Bytes: 7
  %loadMem_42f610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f610 = call %struct.Memory* @routine_movl__r8d__MINUS0x33c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f610)
  store %struct.Memory* %call_42f610, %struct.Memory** %MEMORY

  ; Code: jge .L_42f62e	 RIP: 42f617	 Bytes: 6
  %loadMem_42f617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f617 = call %struct.Memory* @routine_jge_.L_42f62e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f617, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f617, %struct.Memory** %MEMORY

  %loadBr_42f617 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f617 = icmp eq i8 %loadBr_42f617, 1
  br i1 %cmpBr_42f617, label %block_.L_42f62e, label %block_42f61d

block_42f61d:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42f61d	 Bytes: 3
  %loadMem_42f61d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f61d = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f61d)
  store %struct.Memory* %call_42f61d, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f620	 Bytes: 3
  %loadMem_42f620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f620 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f620)
  store %struct.Memory* %call_42f620, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x340(%rbp)	 RIP: 42f623	 Bytes: 6
  %loadMem_42f623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f623 = call %struct.Memory* @routine_movl__eax__MINUS0x340__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f623)
  store %struct.Memory* %call_42f623, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f63a	 RIP: 42f629	 Bytes: 5
  %loadMem_42f629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f629 = call %struct.Memory* @routine_jmpq_.L_42f63a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f629, i64 17, i64 5)
  store %struct.Memory* %call_42f629, %struct.Memory** %MEMORY

  br label %block_.L_42f63a

  ; Code: .L_42f62e:	 RIP: 42f62e	 Bytes: 0
block_.L_42f62e:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42f62e	 Bytes: 3
  %loadMem_42f62e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f62e = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f62e)
  store %struct.Memory* %call_42f62e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42f631	 Bytes: 3
  %loadMem_42f631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f631 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f631)
  store %struct.Memory* %call_42f631, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x340(%rbp)	 RIP: 42f634	 Bytes: 6
  %loadMem_42f634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f634 = call %struct.Memory* @routine_movl__eax__MINUS0x340__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f634)
  store %struct.Memory* %call_42f634, %struct.Memory** %MEMORY

  ; Code: .L_42f63a:	 RIP: 42f63a	 Bytes: 0
  br label %block_.L_42f63a
block_.L_42f63a:

  ; Code: movl -0x340(%rbp), %eax	 RIP: 42f63a	 Bytes: 6
  %loadMem_42f63a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f63a = call %struct.Memory* @routine_movl_MINUS0x340__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f63a)
  store %struct.Memory* %call_42f63a, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f640	 Bytes: 3
  %loadMem_42f640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f640 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f640)
  store %struct.Memory* %call_42f640, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42f643	 Bytes: 3
  %loadMem_42f643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f643 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f643)
  store %struct.Memory* %call_42f643, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f646	 Bytes: 4
  %loadMem_42f646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f646 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f646)
  store %struct.Memory* %call_42f646, %struct.Memory** %MEMORY

  ; Code: movq -0x338(%rbp), %rdi	 RIP: 42f64a	 Bytes: 7
  %loadMem_42f64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f64a = call %struct.Memory* @routine_movq_MINUS0x338__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f64a)
  store %struct.Memory* %call_42f64a, %struct.Memory** %MEMORY

  ; Code: movl -0x33c(%rbp), %esi	 RIP: 42f651	 Bytes: 6
  %loadMem_42f651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f651 = call %struct.Memory* @routine_movl_MINUS0x33c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f651)
  store %struct.Memory* %call_42f651, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42f657	 Bytes: 2
  %loadMem_42f657 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f657 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f657)
  store %struct.Memory* %call_42f657, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f659	 Bytes: 5
  %loadMem1_42f659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f659 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f659, i64 455351, i64 5, i64 5)
  store %struct.Memory* %call1_42f659, %struct.Memory** %MEMORY

  %loadMem2_42f659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f659 = load i64, i64* %3
  %call2_42f659 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f659, %struct.Memory* %loadMem2_42f659)
  store %struct.Memory* %call2_42f659, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f65e	 Bytes: 3
  %loadMem_42f65e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f65e = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f65e)
  store %struct.Memory* %call_42f65e, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f661	 Bytes: 4
  %loadMem_42f661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f661 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f661)
  store %struct.Memory* %call_42f661, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42f665	 Bytes: 3
  %loadMem_42f665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f665 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f665)
  store %struct.Memory* %call_42f665, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42f668	 Bytes: 3
  %loadMem_42f668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f668 = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f668)
  store %struct.Memory* %call_42f668, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42f66b	 Bytes: 3
  %loadMem_42f66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f66b = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f66b)
  store %struct.Memory* %call_42f66b, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f66e	 Bytes: 3
  %loadMem_42f66e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f66e = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f66e)
  store %struct.Memory* %call_42f66e, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42f671	 Bytes: 2
  %loadMem_42f671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f671 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f671)
  store %struct.Memory* %call_42f671, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x344(%rbp)	 RIP: 42f673	 Bytes: 6
  %loadMem_42f673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f673 = call %struct.Memory* @routine_movl__ecx__MINUS0x344__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f673)
  store %struct.Memory* %call_42f673, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x350(%rbp)	 RIP: 42f679	 Bytes: 7
  %loadMem_42f679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f679 = call %struct.Memory* @routine_movq__rdi__MINUS0x350__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f679)
  store %struct.Memory* %call_42f679, %struct.Memory** %MEMORY

  ; Code: jge .L_42f697	 RIP: 42f680	 Bytes: 6
  %loadMem_42f680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f680 = call %struct.Memory* @routine_jge_.L_42f697(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f680, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f680, %struct.Memory** %MEMORY

  %loadBr_42f680 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f680 = icmp eq i8 %loadBr_42f680, 1
  br i1 %cmpBr_42f680, label %block_.L_42f697, label %block_42f686

block_42f686:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42f686	 Bytes: 3
  %loadMem_42f686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f686 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f686)
  store %struct.Memory* %call_42f686, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f689	 Bytes: 3
  %loadMem_42f689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f689 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f689)
  store %struct.Memory* %call_42f689, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x354(%rbp)	 RIP: 42f68c	 Bytes: 6
  %loadMem_42f68c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f68c = call %struct.Memory* @routine_movl__eax__MINUS0x354__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f68c)
  store %struct.Memory* %call_42f68c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f6a3	 RIP: 42f692	 Bytes: 5
  %loadMem_42f692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f692 = call %struct.Memory* @routine_jmpq_.L_42f6a3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f692, i64 17, i64 5)
  store %struct.Memory* %call_42f692, %struct.Memory** %MEMORY

  br label %block_.L_42f6a3

  ; Code: .L_42f697:	 RIP: 42f697	 Bytes: 0
block_.L_42f697:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f697	 Bytes: 3
  %loadMem_42f697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f697 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f697)
  store %struct.Memory* %call_42f697, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f69a	 Bytes: 3
  %loadMem_42f69a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f69a = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f69a)
  store %struct.Memory* %call_42f69a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x354(%rbp)	 RIP: 42f69d	 Bytes: 6
  %loadMem_42f69d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f69d = call %struct.Memory* @routine_movl__eax__MINUS0x354__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f69d)
  store %struct.Memory* %call_42f69d, %struct.Memory** %MEMORY

  ; Code: .L_42f6a3:	 RIP: 42f6a3	 Bytes: 0
  br label %block_.L_42f6a3
block_.L_42f6a3:

  ; Code: movl -0x354(%rbp), %eax	 RIP: 42f6a3	 Bytes: 6
  %loadMem_42f6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6a3 = call %struct.Memory* @routine_movl_MINUS0x354__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6a3)
  store %struct.Memory* %call_42f6a3, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f6a9	 Bytes: 3
  %loadMem_42f6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6a9 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6a9)
  store %struct.Memory* %call_42f6a9, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f6ac	 Bytes: 3
  %loadMem_42f6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6ac = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6ac)
  store %struct.Memory* %call_42f6ac, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f6af	 Bytes: 3
  %loadMem_42f6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6af = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6af)
  store %struct.Memory* %call_42f6af, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42f6b2	 Bytes: 3
  %loadMem_42f6b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6b2 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6b2)
  store %struct.Memory* %call_42f6b2, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f6b5	 Bytes: 3
  %loadMem_42f6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6b5 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6b5)
  store %struct.Memory* %call_42f6b5, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f6b8	 Bytes: 4
  %loadMem_42f6b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6b8 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6b8)
  store %struct.Memory* %call_42f6b8, %struct.Memory** %MEMORY

  ; Code: movq -0x350(%rbp), %rdi	 RIP: 42f6bc	 Bytes: 7
  %loadMem_42f6bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6bc = call %struct.Memory* @routine_movq_MINUS0x350__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6bc)
  store %struct.Memory* %call_42f6bc, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f6c3	 Bytes: 2
  %loadMem_42f6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6c3 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6c3)
  store %struct.Memory* %call_42f6c3, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x358(%rbp)	 RIP: 42f6c5	 Bytes: 6
  %loadMem_42f6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6c5 = call %struct.Memory* @routine_movl__edx__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6c5)
  store %struct.Memory* %call_42f6c5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f6cb	 Bytes: 2
  %loadMem_42f6cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6cb = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6cb)
  store %struct.Memory* %call_42f6cb, %struct.Memory** %MEMORY

  ; Code: movl -0x358(%rbp), %ecx	 RIP: 42f6cd	 Bytes: 6
  %loadMem_42f6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6cd = call %struct.Memory* @routine_movl_MINUS0x358__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6cd)
  store %struct.Memory* %call_42f6cd, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f6d3	 Bytes: 5
  %loadMem1_42f6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f6d3 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f6d3, i64 455229, i64 5, i64 5)
  store %struct.Memory* %call1_42f6d3, %struct.Memory** %MEMORY

  %loadMem2_42f6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f6d3 = load i64, i64* %3
  %call2_42f6d3 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f6d3, %struct.Memory* %loadMem2_42f6d3)
  store %struct.Memory* %call2_42f6d3, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42f6d8	 Bytes: 5
  %loadMem_42f6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6d8 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6d8)
  store %struct.Memory* %call_42f6d8, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42f6dd	 Bytes: 3
  %loadMem_42f6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6dd = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6dd)
  store %struct.Memory* %call_42f6dd, %struct.Memory** %MEMORY

  ; Code: movl -0x344(%rbp), %esi	 RIP: 42f6e0	 Bytes: 6
  %loadMem_42f6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6e0 = call %struct.Memory* @routine_movl_MINUS0x344__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6e0)
  store %struct.Memory* %call_42f6e0, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42f6e6	 Bytes: 2
  %loadMem_42f6e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6e6 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6e6)
  store %struct.Memory* %call_42f6e6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42f6e8	 Bytes: 3
  %loadMem_42f6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6e8 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6e8)
  store %struct.Memory* %call_42f6e8, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42f6eb	 Bytes: 2
  %loadMem_42f6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6eb = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6eb)
  store %struct.Memory* %call_42f6eb, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f6ed	 Bytes: 1
  %loadMem_42f6ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6ed = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6ed)
  store %struct.Memory* %call_42f6ed, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f6ee	 Bytes: 2
  %loadMem_42f6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6ee = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6ee)
  store %struct.Memory* %call_42f6ee, %struct.Memory** %MEMORY

  ; Code: movl -0x32c(%rbp), %ecx	 RIP: 42f6f0	 Bytes: 6
  %loadMem_42f6f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6f0 = call %struct.Memory* @routine_movl_MINUS0x32c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6f0)
  store %struct.Memory* %call_42f6f0, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42f6f6	 Bytes: 2
  %loadMem_42f6f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6f6 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6f6)
  store %struct.Memory* %call_42f6f6, %struct.Memory** %MEMORY

  ; Code: jge .L_42f717	 RIP: 42f6f8	 Bytes: 6
  %loadMem_42f6f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6f8 = call %struct.Memory* @routine_jge_.L_42f717(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6f8, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42f6f8, %struct.Memory** %MEMORY

  %loadBr_42f6f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f6f8 = icmp eq i8 %loadBr_42f6f8, 1
  br i1 %cmpBr_42f6f8, label %block_.L_42f717, label %block_42f6fe

block_42f6fe:
  ; Code: movq 0x6cb900, %rax	 RIP: 42f6fe	 Bytes: 8
  %loadMem_42f6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f6fe = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f6fe)
  store %struct.Memory* %call_42f6fe, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42f706	 Bytes: 6
  %loadMem_42f706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f706 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f706)
  store %struct.Memory* %call_42f706, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x35c(%rbp)	 RIP: 42f70c	 Bytes: 6
  %loadMem_42f70c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f70c = call %struct.Memory* @routine_movl__ecx__MINUS0x35c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f70c)
  store %struct.Memory* %call_42f70c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f81b	 RIP: 42f712	 Bytes: 5
  %loadMem_42f712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f712 = call %struct.Memory* @routine_jmpq_.L_42f81b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f712, i64 265, i64 5)
  store %struct.Memory* %call_42f712, %struct.Memory** %MEMORY

  br label %block_.L_42f81b

  ; Code: .L_42f717:	 RIP: 42f717	 Bytes: 0
block_.L_42f717:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f717	 Bytes: 4
  %loadMem_42f717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f717 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f717)
  store %struct.Memory* %call_42f717, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f71b	 Bytes: 3
  %loadMem_42f71b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f71b = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f71b)
  store %struct.Memory* %call_42f71b, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f71e	 Bytes: 3
  %loadMem_42f71e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f71e = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f71e)
  store %struct.Memory* %call_42f71e, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 42f721	 Bytes: 3
  %loadMem_42f721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f721 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f721)
  store %struct.Memory* %call_42f721, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 42f724	 Bytes: 3
  %loadMem_42f724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f724 = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f724)
  store %struct.Memory* %call_42f724, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42f727	 Bytes: 3
  %loadMem_42f727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f727 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f727)
  store %struct.Memory* %call_42f727, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 42f72a	 Bytes: 3
  %loadMem_42f72a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f72a = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f72a)
  store %struct.Memory* %call_42f72a, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42f72d	 Bytes: 2
  %loadMem_42f72d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f72d = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f72d)
  store %struct.Memory* %call_42f72d, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x368(%rbp)	 RIP: 42f72f	 Bytes: 7
  %loadMem_42f72f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f72f = call %struct.Memory* @routine_movq__rdi__MINUS0x368__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f72f)
  store %struct.Memory* %call_42f72f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x36c(%rbp)	 RIP: 42f736	 Bytes: 6
  %loadMem_42f736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f736 = call %struct.Memory* @routine_movl__eax__MINUS0x36c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f736)
  store %struct.Memory* %call_42f736, %struct.Memory** %MEMORY

  ; Code: jge .L_42f753	 RIP: 42f73c	 Bytes: 6
  %loadMem_42f73c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f73c = call %struct.Memory* @routine_jge_.L_42f753(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f73c, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f73c, %struct.Memory** %MEMORY

  %loadBr_42f73c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f73c = icmp eq i8 %loadBr_42f73c, 1
  br i1 %cmpBr_42f73c, label %block_.L_42f753, label %block_42f742

block_42f742:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42f742	 Bytes: 3
  %loadMem_42f742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f742 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f742)
  store %struct.Memory* %call_42f742, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f745	 Bytes: 3
  %loadMem_42f745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f745 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f745)
  store %struct.Memory* %call_42f745, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x370(%rbp)	 RIP: 42f748	 Bytes: 6
  %loadMem_42f748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f748 = call %struct.Memory* @routine_movl__eax__MINUS0x370__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f748)
  store %struct.Memory* %call_42f748, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f75f	 RIP: 42f74e	 Bytes: 5
  %loadMem_42f74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f74e = call %struct.Memory* @routine_jmpq_.L_42f75f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f74e, i64 17, i64 5)
  store %struct.Memory* %call_42f74e, %struct.Memory** %MEMORY

  br label %block_.L_42f75f

  ; Code: .L_42f753:	 RIP: 42f753	 Bytes: 0
block_.L_42f753:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42f753	 Bytes: 3
  %loadMem_42f753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f753 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f753)
  store %struct.Memory* %call_42f753, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42f756	 Bytes: 3
  %loadMem_42f756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f756 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f756)
  store %struct.Memory* %call_42f756, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x370(%rbp)	 RIP: 42f759	 Bytes: 6
  %loadMem_42f759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f759 = call %struct.Memory* @routine_movl__eax__MINUS0x370__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f759)
  store %struct.Memory* %call_42f759, %struct.Memory** %MEMORY

  ; Code: .L_42f75f:	 RIP: 42f75f	 Bytes: 0
  br label %block_.L_42f75f
block_.L_42f75f:

  ; Code: movl -0x370(%rbp), %eax	 RIP: 42f75f	 Bytes: 6
  %loadMem_42f75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f75f = call %struct.Memory* @routine_movl_MINUS0x370__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f75f)
  store %struct.Memory* %call_42f75f, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f765	 Bytes: 3
  %loadMem_42f765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f765 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f765)
  store %struct.Memory* %call_42f765, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42f768	 Bytes: 3
  %loadMem_42f768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f768 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f768)
  store %struct.Memory* %call_42f768, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f76b	 Bytes: 4
  %loadMem_42f76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f76b = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f76b)
  store %struct.Memory* %call_42f76b, %struct.Memory** %MEMORY

  ; Code: movq -0x368(%rbp), %rdi	 RIP: 42f76f	 Bytes: 7
  %loadMem_42f76f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f76f = call %struct.Memory* @routine_movq_MINUS0x368__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f76f)
  store %struct.Memory* %call_42f76f, %struct.Memory** %MEMORY

  ; Code: movl -0x36c(%rbp), %esi	 RIP: 42f776	 Bytes: 6
  %loadMem_42f776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f776 = call %struct.Memory* @routine_movl_MINUS0x36c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f776)
  store %struct.Memory* %call_42f776, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42f77c	 Bytes: 2
  %loadMem_42f77c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f77c = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f77c)
  store %struct.Memory* %call_42f77c, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f77e	 Bytes: 5
  %loadMem1_42f77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f77e = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f77e, i64 455058, i64 5, i64 5)
  store %struct.Memory* %call1_42f77e, %struct.Memory** %MEMORY

  %loadMem2_42f77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f77e = load i64, i64* %3
  %call2_42f77e = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f77e, %struct.Memory* %loadMem2_42f77e)
  store %struct.Memory* %call2_42f77e, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f783	 Bytes: 3
  %loadMem_42f783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f783 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f783)
  store %struct.Memory* %call_42f783, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f786	 Bytes: 4
  %loadMem_42f786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f786 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f786)
  store %struct.Memory* %call_42f786, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42f78a	 Bytes: 3
  %loadMem_42f78a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f78a = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f78a)
  store %struct.Memory* %call_42f78a, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42f78d	 Bytes: 3
  %loadMem_42f78d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f78d = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f78d)
  store %struct.Memory* %call_42f78d, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42f790	 Bytes: 3
  %loadMem_42f790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f790 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f790)
  store %struct.Memory* %call_42f790, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f793	 Bytes: 3
  %loadMem_42f793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f793 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f793)
  store %struct.Memory* %call_42f793, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42f796	 Bytes: 2
  %loadMem_42f796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f796 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f796)
  store %struct.Memory* %call_42f796, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x374(%rbp)	 RIP: 42f798	 Bytes: 6
  %loadMem_42f798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f798 = call %struct.Memory* @routine_movl__ecx__MINUS0x374__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f798)
  store %struct.Memory* %call_42f798, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x380(%rbp)	 RIP: 42f79e	 Bytes: 7
  %loadMem_42f79e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f79e = call %struct.Memory* @routine_movq__rdi__MINUS0x380__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f79e)
  store %struct.Memory* %call_42f79e, %struct.Memory** %MEMORY

  ; Code: jge .L_42f7bc	 RIP: 42f7a5	 Bytes: 6
  %loadMem_42f7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7a5 = call %struct.Memory* @routine_jge_.L_42f7bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7a5, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f7a5, %struct.Memory** %MEMORY

  %loadBr_42f7a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f7a5 = icmp eq i8 %loadBr_42f7a5, 1
  br i1 %cmpBr_42f7a5, label %block_.L_42f7bc, label %block_42f7ab

block_42f7ab:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42f7ab	 Bytes: 3
  %loadMem_42f7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7ab = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7ab)
  store %struct.Memory* %call_42f7ab, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f7ae	 Bytes: 3
  %loadMem_42f7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7ae = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7ae)
  store %struct.Memory* %call_42f7ae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x384(%rbp)	 RIP: 42f7b1	 Bytes: 6
  %loadMem_42f7b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7b1 = call %struct.Memory* @routine_movl__eax__MINUS0x384__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7b1)
  store %struct.Memory* %call_42f7b1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f7c8	 RIP: 42f7b7	 Bytes: 5
  %loadMem_42f7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7b7 = call %struct.Memory* @routine_jmpq_.L_42f7c8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7b7, i64 17, i64 5)
  store %struct.Memory* %call_42f7b7, %struct.Memory** %MEMORY

  br label %block_.L_42f7c8

  ; Code: .L_42f7bc:	 RIP: 42f7bc	 Bytes: 0
block_.L_42f7bc:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f7bc	 Bytes: 3
  %loadMem_42f7bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7bc = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7bc)
  store %struct.Memory* %call_42f7bc, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f7bf	 Bytes: 3
  %loadMem_42f7bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7bf = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7bf)
  store %struct.Memory* %call_42f7bf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x384(%rbp)	 RIP: 42f7c2	 Bytes: 6
  %loadMem_42f7c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7c2 = call %struct.Memory* @routine_movl__eax__MINUS0x384__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7c2)
  store %struct.Memory* %call_42f7c2, %struct.Memory** %MEMORY

  ; Code: .L_42f7c8:	 RIP: 42f7c8	 Bytes: 0
  br label %block_.L_42f7c8
block_.L_42f7c8:

  ; Code: movl -0x384(%rbp), %eax	 RIP: 42f7c8	 Bytes: 6
  %loadMem_42f7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7c8 = call %struct.Memory* @routine_movl_MINUS0x384__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7c8)
  store %struct.Memory* %call_42f7c8, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f7ce	 Bytes: 3
  %loadMem_42f7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7ce = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7ce)
  store %struct.Memory* %call_42f7ce, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f7d1	 Bytes: 3
  %loadMem_42f7d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7d1 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7d1)
  store %struct.Memory* %call_42f7d1, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f7d4	 Bytes: 3
  %loadMem_42f7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7d4 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7d4)
  store %struct.Memory* %call_42f7d4, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42f7d7	 Bytes: 3
  %loadMem_42f7d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7d7 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7d7)
  store %struct.Memory* %call_42f7d7, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f7da	 Bytes: 3
  %loadMem_42f7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7da = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7da)
  store %struct.Memory* %call_42f7da, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f7dd	 Bytes: 4
  %loadMem_42f7dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7dd = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7dd)
  store %struct.Memory* %call_42f7dd, %struct.Memory** %MEMORY

  ; Code: movq -0x380(%rbp), %rdi	 RIP: 42f7e1	 Bytes: 7
  %loadMem_42f7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7e1 = call %struct.Memory* @routine_movq_MINUS0x380__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7e1)
  store %struct.Memory* %call_42f7e1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f7e8	 Bytes: 2
  %loadMem_42f7e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7e8 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7e8)
  store %struct.Memory* %call_42f7e8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x388(%rbp)	 RIP: 42f7ea	 Bytes: 6
  %loadMem_42f7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7ea = call %struct.Memory* @routine_movl__edx__MINUS0x388__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7ea)
  store %struct.Memory* %call_42f7ea, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f7f0	 Bytes: 2
  %loadMem_42f7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7f0 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7f0)
  store %struct.Memory* %call_42f7f0, %struct.Memory** %MEMORY

  ; Code: movl -0x388(%rbp), %ecx	 RIP: 42f7f2	 Bytes: 6
  %loadMem_42f7f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7f2 = call %struct.Memory* @routine_movl_MINUS0x388__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7f2)
  store %struct.Memory* %call_42f7f2, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f7f8	 Bytes: 5
  %loadMem1_42f7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f7f8 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f7f8, i64 454936, i64 5, i64 5)
  store %struct.Memory* %call1_42f7f8, %struct.Memory** %MEMORY

  %loadMem2_42f7f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f7f8 = load i64, i64* %3
  %call2_42f7f8 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f7f8, %struct.Memory* %loadMem2_42f7f8)
  store %struct.Memory* %call2_42f7f8, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42f7fd	 Bytes: 5
  %loadMem_42f7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f7fd = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f7fd)
  store %struct.Memory* %call_42f7fd, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42f802	 Bytes: 3
  %loadMem_42f802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f802 = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f802)
  store %struct.Memory* %call_42f802, %struct.Memory** %MEMORY

  ; Code: movl -0x374(%rbp), %esi	 RIP: 42f805	 Bytes: 6
  %loadMem_42f805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f805 = call %struct.Memory* @routine_movl_MINUS0x374__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f805)
  store %struct.Memory* %call_42f805, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42f80b	 Bytes: 2
  %loadMem_42f80b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f80b = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f80b)
  store %struct.Memory* %call_42f80b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42f80d	 Bytes: 3
  %loadMem_42f80d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f80d = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f80d)
  store %struct.Memory* %call_42f80d, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42f810	 Bytes: 2
  %loadMem_42f810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f810 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f810)
  store %struct.Memory* %call_42f810, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f812	 Bytes: 1
  %loadMem_42f812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f812 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f812)
  store %struct.Memory* %call_42f812, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f813	 Bytes: 2
  %loadMem_42f813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f813 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f813)
  store %struct.Memory* %call_42f813, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x35c(%rbp)	 RIP: 42f815	 Bytes: 6
  %loadMem_42f815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f815 = call %struct.Memory* @routine_movl__eax__MINUS0x35c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f815)
  store %struct.Memory* %call_42f815, %struct.Memory** %MEMORY

  ; Code: .L_42f81b:	 RIP: 42f81b	 Bytes: 0
  br label %block_.L_42f81b
block_.L_42f81b:

  ; Code: movl -0x35c(%rbp), %eax	 RIP: 42f81b	 Bytes: 6
  %loadMem_42f81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f81b = call %struct.Memory* @routine_movl_MINUS0x35c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f81b)
  store %struct.Memory* %call_42f81b, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42f821	 Bytes: 2
  %loadMem_42f821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f821 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f821)
  store %struct.Memory* %call_42f821, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42f823	 Bytes: 2
  %loadMem_42f823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f823 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f823)
  store %struct.Memory* %call_42f823, %struct.Memory** %MEMORY

  ; Code: jle .L_42f838	 RIP: 42f825	 Bytes: 6
  %loadMem_42f825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f825 = call %struct.Memory* @routine_jle_.L_42f838(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f825, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42f825, %struct.Memory** %MEMORY

  %loadBr_42f825 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f825 = icmp eq i8 %loadBr_42f825, 1
  br i1 %cmpBr_42f825, label %block_.L_42f838, label %block_42f82b

block_42f82b:
  ; Code: xorl %eax, %eax	 RIP: 42f82b	 Bytes: 2
  %loadMem_42f82b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f82b = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f82b)
  store %struct.Memory* %call_42f82b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38c(%rbp)	 RIP: 42f82d	 Bytes: 6
  %loadMem_42f82d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f82d = call %struct.Memory* @routine_movl__eax__MINUS0x38c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f82d)
  store %struct.Memory* %call_42f82d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fa84	 RIP: 42f833	 Bytes: 5
  %loadMem_42f833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f833 = call %struct.Memory* @routine_jmpq_.L_42fa84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f833, i64 593, i64 5)
  store %struct.Memory* %call_42f833, %struct.Memory** %MEMORY

  br label %block_.L_42fa84

  ; Code: .L_42f838:	 RIP: 42f838	 Bytes: 0
block_.L_42f838:

  ; Code: movq 0x6cb900, %rax	 RIP: 42f838	 Bytes: 8
  %loadMem_42f838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f838 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f838)
  store %struct.Memory* %call_42f838, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42f840	 Bytes: 6
  %loadMem_42f840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f840 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f840)
  store %struct.Memory* %call_42f840, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f846	 Bytes: 4
  %loadMem_42f846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f846 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f846)
  store %struct.Memory* %call_42f846, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 42f84a	 Bytes: 3
  %loadMem_42f84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f84a = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f84a)
  store %struct.Memory* %call_42f84a, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %edx	 RIP: 42f84d	 Bytes: 3
  %loadMem_42f84d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f84d = call %struct.Memory* @routine_subl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f84d)
  store %struct.Memory* %call_42f84d, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %esi	 RIP: 42f850	 Bytes: 3
  %loadMem_42f850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f850 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f850)
  store %struct.Memory* %call_42f850, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f853	 Bytes: 3
  %loadMem_42f853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f853 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f853)
  store %struct.Memory* %call_42f853, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r8d	 RIP: 42f856	 Bytes: 4
  %loadMem_42f856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f856 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f856)
  store %struct.Memory* %call_42f856, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %r8d	 RIP: 42f85a	 Bytes: 4
  %loadMem_42f85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f85a = call %struct.Memory* @routine_addl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f85a)
  store %struct.Memory* %call_42f85a, %struct.Memory** %MEMORY

  ; Code: cmpl %r8d, %esi	 RIP: 42f85e	 Bytes: 3
  %loadMem_42f85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f85e = call %struct.Memory* @routine_cmpl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f85e)
  store %struct.Memory* %call_42f85e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x390(%rbp)	 RIP: 42f861	 Bytes: 6
  %loadMem_42f861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f861 = call %struct.Memory* @routine_movl__ecx__MINUS0x390__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f861)
  store %struct.Memory* %call_42f861, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x398(%rbp)	 RIP: 42f867	 Bytes: 7
  %loadMem_42f867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f867 = call %struct.Memory* @routine_movq__rdi__MINUS0x398__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f867)
  store %struct.Memory* %call_42f867, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x39c(%rbp)	 RIP: 42f86e	 Bytes: 6
  %loadMem_42f86e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f86e = call %struct.Memory* @routine_movl__edx__MINUS0x39c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f86e)
  store %struct.Memory* %call_42f86e, %struct.Memory** %MEMORY

  ; Code: jge .L_42f88b	 RIP: 42f874	 Bytes: 6
  %loadMem_42f874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f874 = call %struct.Memory* @routine_jge_.L_42f88b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f874, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f874, %struct.Memory** %MEMORY

  %loadBr_42f874 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f874 = icmp eq i8 %loadBr_42f874, 1
  br i1 %cmpBr_42f874, label %block_.L_42f88b, label %block_42f87a

block_42f87a:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42f87a	 Bytes: 3
  %loadMem_42f87a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f87a = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f87a)
  store %struct.Memory* %call_42f87a, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f87d	 Bytes: 3
  %loadMem_42f87d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f87d = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f87d)
  store %struct.Memory* %call_42f87d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3a0(%rbp)	 RIP: 42f880	 Bytes: 6
  %loadMem_42f880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f880 = call %struct.Memory* @routine_movl__eax__MINUS0x3a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f880)
  store %struct.Memory* %call_42f880, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f897	 RIP: 42f886	 Bytes: 5
  %loadMem_42f886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f886 = call %struct.Memory* @routine_jmpq_.L_42f897(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f886, i64 17, i64 5)
  store %struct.Memory* %call_42f886, %struct.Memory** %MEMORY

  br label %block_.L_42f897

  ; Code: .L_42f88b:	 RIP: 42f88b	 Bytes: 0
block_.L_42f88b:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42f88b	 Bytes: 3
  %loadMem_42f88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f88b = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f88b)
  store %struct.Memory* %call_42f88b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42f88e	 Bytes: 3
  %loadMem_42f88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f88e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f88e)
  store %struct.Memory* %call_42f88e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3a0(%rbp)	 RIP: 42f891	 Bytes: 6
  %loadMem_42f891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f891 = call %struct.Memory* @routine_movl__eax__MINUS0x3a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f891)
  store %struct.Memory* %call_42f891, %struct.Memory** %MEMORY

  ; Code: .L_42f897:	 RIP: 42f897	 Bytes: 0
  br label %block_.L_42f897
block_.L_42f897:

  ; Code: movl -0x3a0(%rbp), %eax	 RIP: 42f897	 Bytes: 6
  %loadMem_42f897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f897 = call %struct.Memory* @routine_movl_MINUS0x3a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f897)
  store %struct.Memory* %call_42f897, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f89d	 Bytes: 3
  %loadMem_42f89d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f89d = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f89d)
  store %struct.Memory* %call_42f89d, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42f8a0	 Bytes: 3
  %loadMem_42f8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8a0 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8a0)
  store %struct.Memory* %call_42f8a0, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f8a3	 Bytes: 4
  %loadMem_42f8a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8a3 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8a3)
  store %struct.Memory* %call_42f8a3, %struct.Memory** %MEMORY

  ; Code: movq -0x398(%rbp), %rdi	 RIP: 42f8a7	 Bytes: 7
  %loadMem_42f8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8a7 = call %struct.Memory* @routine_movq_MINUS0x398__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8a7)
  store %struct.Memory* %call_42f8a7, %struct.Memory** %MEMORY

  ; Code: movl -0x39c(%rbp), %esi	 RIP: 42f8ae	 Bytes: 6
  %loadMem_42f8ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8ae = call %struct.Memory* @routine_movl_MINUS0x39c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8ae)
  store %struct.Memory* %call_42f8ae, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42f8b4	 Bytes: 2
  %loadMem_42f8b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8b4 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8b4)
  store %struct.Memory* %call_42f8b4, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f8b6	 Bytes: 5
  %loadMem1_42f8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f8b6 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f8b6, i64 454746, i64 5, i64 5)
  store %struct.Memory* %call1_42f8b6, %struct.Memory** %MEMORY

  %loadMem2_42f8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f8b6 = load i64, i64* %3
  %call2_42f8b6 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f8b6, %struct.Memory* %loadMem2_42f8b6)
  store %struct.Memory* %call2_42f8b6, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f8bb	 Bytes: 3
  %loadMem_42f8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8bb = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8bb)
  store %struct.Memory* %call_42f8bb, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f8be	 Bytes: 4
  %loadMem_42f8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8be = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8be)
  store %struct.Memory* %call_42f8be, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42f8c2	 Bytes: 3
  %loadMem_42f8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8c2 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8c2)
  store %struct.Memory* %call_42f8c2, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42f8c5	 Bytes: 3
  %loadMem_42f8c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8c5 = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8c5)
  store %struct.Memory* %call_42f8c5, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42f8c8	 Bytes: 3
  %loadMem_42f8c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8c8 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8c8)
  store %struct.Memory* %call_42f8c8, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f8cb	 Bytes: 3
  %loadMem_42f8cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8cb = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8cb)
  store %struct.Memory* %call_42f8cb, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42f8ce	 Bytes: 2
  %loadMem_42f8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8ce = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8ce)
  store %struct.Memory* %call_42f8ce, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x3a4(%rbp)	 RIP: 42f8d0	 Bytes: 6
  %loadMem_42f8d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8d0 = call %struct.Memory* @routine_movl__ecx__MINUS0x3a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8d0)
  store %struct.Memory* %call_42f8d0, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x3b0(%rbp)	 RIP: 42f8d6	 Bytes: 7
  %loadMem_42f8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8d6 = call %struct.Memory* @routine_movq__rdi__MINUS0x3b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8d6)
  store %struct.Memory* %call_42f8d6, %struct.Memory** %MEMORY

  ; Code: jge .L_42f8f4	 RIP: 42f8dd	 Bytes: 6
  %loadMem_42f8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8dd = call %struct.Memory* @routine_jge_.L_42f8f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8dd, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f8dd, %struct.Memory** %MEMORY

  %loadBr_42f8dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f8dd = icmp eq i8 %loadBr_42f8dd, 1
  br i1 %cmpBr_42f8dd, label %block_.L_42f8f4, label %block_42f8e3

block_42f8e3:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42f8e3	 Bytes: 3
  %loadMem_42f8e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8e3 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8e3)
  store %struct.Memory* %call_42f8e3, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f8e6	 Bytes: 3
  %loadMem_42f8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8e6 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8e6)
  store %struct.Memory* %call_42f8e6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3b4(%rbp)	 RIP: 42f8e9	 Bytes: 6
  %loadMem_42f8e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8e9 = call %struct.Memory* @routine_movl__eax__MINUS0x3b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8e9)
  store %struct.Memory* %call_42f8e9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f900	 RIP: 42f8ef	 Bytes: 5
  %loadMem_42f8ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8ef = call %struct.Memory* @routine_jmpq_.L_42f900(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8ef, i64 17, i64 5)
  store %struct.Memory* %call_42f8ef, %struct.Memory** %MEMORY

  br label %block_.L_42f900

  ; Code: .L_42f8f4:	 RIP: 42f8f4	 Bytes: 0
block_.L_42f8f4:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f8f4	 Bytes: 3
  %loadMem_42f8f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8f4 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8f4)
  store %struct.Memory* %call_42f8f4, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f8f7	 Bytes: 3
  %loadMem_42f8f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8f7 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8f7)
  store %struct.Memory* %call_42f8f7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3b4(%rbp)	 RIP: 42f8fa	 Bytes: 6
  %loadMem_42f8fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f8fa = call %struct.Memory* @routine_movl__eax__MINUS0x3b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f8fa)
  store %struct.Memory* %call_42f8fa, %struct.Memory** %MEMORY

  ; Code: .L_42f900:	 RIP: 42f900	 Bytes: 0
  br label %block_.L_42f900
block_.L_42f900:

  ; Code: movl -0x3b4(%rbp), %eax	 RIP: 42f900	 Bytes: 6
  %loadMem_42f900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f900 = call %struct.Memory* @routine_movl_MINUS0x3b4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f900)
  store %struct.Memory* %call_42f900, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f906	 Bytes: 3
  %loadMem_42f906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f906 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f906)
  store %struct.Memory* %call_42f906, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42f909	 Bytes: 3
  %loadMem_42f909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f909 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f909)
  store %struct.Memory* %call_42f909, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42f90c	 Bytes: 3
  %loadMem_42f90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f90c = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f90c)
  store %struct.Memory* %call_42f90c, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42f90f	 Bytes: 3
  %loadMem_42f90f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f90f = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f90f)
  store %struct.Memory* %call_42f90f, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42f912	 Bytes: 3
  %loadMem_42f912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f912 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f912)
  store %struct.Memory* %call_42f912, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f915	 Bytes: 4
  %loadMem_42f915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f915 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f915)
  store %struct.Memory* %call_42f915, %struct.Memory** %MEMORY

  ; Code: movq -0x3b0(%rbp), %rdi	 RIP: 42f919	 Bytes: 7
  %loadMem_42f919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f919 = call %struct.Memory* @routine_movq_MINUS0x3b0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f919)
  store %struct.Memory* %call_42f919, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42f920	 Bytes: 2
  %loadMem_42f920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f920 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f920)
  store %struct.Memory* %call_42f920, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x3b8(%rbp)	 RIP: 42f922	 Bytes: 6
  %loadMem_42f922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f922 = call %struct.Memory* @routine_movl__edx__MINUS0x3b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f922)
  store %struct.Memory* %call_42f922, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42f928	 Bytes: 2
  %loadMem_42f928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f928 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f928)
  store %struct.Memory* %call_42f928, %struct.Memory** %MEMORY

  ; Code: movl -0x3b8(%rbp), %ecx	 RIP: 42f92a	 Bytes: 6
  %loadMem_42f92a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f92a = call %struct.Memory* @routine_movl_MINUS0x3b8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f92a)
  store %struct.Memory* %call_42f92a, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f930	 Bytes: 5
  %loadMem1_42f930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f930 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f930, i64 454624, i64 5, i64 5)
  store %struct.Memory* %call1_42f930, %struct.Memory** %MEMORY

  %loadMem2_42f930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f930 = load i64, i64* %3
  %call2_42f930 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f930, %struct.Memory* %loadMem2_42f930)
  store %struct.Memory* %call2_42f930, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42f935	 Bytes: 5
  %loadMem_42f935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f935 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f935)
  store %struct.Memory* %call_42f935, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42f93a	 Bytes: 3
  %loadMem_42f93a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f93a = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f93a)
  store %struct.Memory* %call_42f93a, %struct.Memory** %MEMORY

  ; Code: movl -0x3a4(%rbp), %esi	 RIP: 42f93d	 Bytes: 6
  %loadMem_42f93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f93d = call %struct.Memory* @routine_movl_MINUS0x3a4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f93d)
  store %struct.Memory* %call_42f93d, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42f943	 Bytes: 2
  %loadMem_42f943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f943 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f943)
  store %struct.Memory* %call_42f943, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42f945	 Bytes: 3
  %loadMem_42f945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f945 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f945)
  store %struct.Memory* %call_42f945, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42f948	 Bytes: 2
  %loadMem_42f948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f948 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f948)
  store %struct.Memory* %call_42f948, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42f94a	 Bytes: 1
  %loadMem_42f94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f94a = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f94a)
  store %struct.Memory* %call_42f94a, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42f94b	 Bytes: 2
  %loadMem_42f94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f94b = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f94b)
  store %struct.Memory* %call_42f94b, %struct.Memory** %MEMORY

  ; Code: movl -0x390(%rbp), %ecx	 RIP: 42f94d	 Bytes: 6
  %loadMem_42f94d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f94d = call %struct.Memory* @routine_movl_MINUS0x390__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f94d)
  store %struct.Memory* %call_42f94d, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42f953	 Bytes: 2
  %loadMem_42f953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f953 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f953)
  store %struct.Memory* %call_42f953, %struct.Memory** %MEMORY

  ; Code: jge .L_42f974	 RIP: 42f955	 Bytes: 6
  %loadMem_42f955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f955 = call %struct.Memory* @routine_jge_.L_42f974(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f955, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42f955, %struct.Memory** %MEMORY

  %loadBr_42f955 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f955 = icmp eq i8 %loadBr_42f955, 1
  br i1 %cmpBr_42f955, label %block_.L_42f974, label %block_42f95b

block_42f95b:
  ; Code: movq 0x6cb900, %rax	 RIP: 42f95b	 Bytes: 8
  %loadMem_42f95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f95b = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f95b)
  store %struct.Memory* %call_42f95b, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42f963	 Bytes: 6
  %loadMem_42f963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f963 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f963)
  store %struct.Memory* %call_42f963, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x3bc(%rbp)	 RIP: 42f969	 Bytes: 6
  %loadMem_42f969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f969 = call %struct.Memory* @routine_movl__ecx__MINUS0x3bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f969)
  store %struct.Memory* %call_42f969, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fa78	 RIP: 42f96f	 Bytes: 5
  %loadMem_42f96f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f96f = call %struct.Memory* @routine_jmpq_.L_42fa78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f96f, i64 265, i64 5)
  store %struct.Memory* %call_42f96f, %struct.Memory** %MEMORY

  br label %block_.L_42fa78

  ; Code: .L_42f974:	 RIP: 42f974	 Bytes: 0
block_.L_42f974:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f974	 Bytes: 4
  %loadMem_42f974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f974 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f974)
  store %struct.Memory* %call_42f974, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42f978	 Bytes: 3
  %loadMem_42f978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f978 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f978)
  store %struct.Memory* %call_42f978, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f97b	 Bytes: 3
  %loadMem_42f97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f97b = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f97b)
  store %struct.Memory* %call_42f97b, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 42f97e	 Bytes: 3
  %loadMem_42f97e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f97e = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f97e)
  store %struct.Memory* %call_42f97e, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 42f981	 Bytes: 3
  %loadMem_42f981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f981 = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f981)
  store %struct.Memory* %call_42f981, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42f984	 Bytes: 3
  %loadMem_42f984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f984 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f984)
  store %struct.Memory* %call_42f984, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 42f987	 Bytes: 3
  %loadMem_42f987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f987 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f987)
  store %struct.Memory* %call_42f987, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42f98a	 Bytes: 2
  %loadMem_42f98a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f98a = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f98a)
  store %struct.Memory* %call_42f98a, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x3c8(%rbp)	 RIP: 42f98c	 Bytes: 7
  %loadMem_42f98c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f98c = call %struct.Memory* @routine_movq__rdi__MINUS0x3c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f98c)
  store %struct.Memory* %call_42f98c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3cc(%rbp)	 RIP: 42f993	 Bytes: 6
  %loadMem_42f993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f993 = call %struct.Memory* @routine_movl__eax__MINUS0x3cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f993)
  store %struct.Memory* %call_42f993, %struct.Memory** %MEMORY

  ; Code: jge .L_42f9b0	 RIP: 42f999	 Bytes: 6
  %loadMem_42f999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f999 = call %struct.Memory* @routine_jge_.L_42f9b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f999, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42f999, %struct.Memory** %MEMORY

  %loadBr_42f999 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42f999 = icmp eq i8 %loadBr_42f999, 1
  br i1 %cmpBr_42f999, label %block_.L_42f9b0, label %block_42f99f

block_42f99f:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42f99f	 Bytes: 3
  %loadMem_42f99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f99f = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f99f)
  store %struct.Memory* %call_42f99f, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42f9a2	 Bytes: 3
  %loadMem_42f9a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9a2 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9a2)
  store %struct.Memory* %call_42f9a2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3d0(%rbp)	 RIP: 42f9a5	 Bytes: 6
  %loadMem_42f9a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9a5 = call %struct.Memory* @routine_movl__eax__MINUS0x3d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9a5)
  store %struct.Memory* %call_42f9a5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f9bc	 RIP: 42f9ab	 Bytes: 5
  %loadMem_42f9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9ab = call %struct.Memory* @routine_jmpq_.L_42f9bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9ab, i64 17, i64 5)
  store %struct.Memory* %call_42f9ab, %struct.Memory** %MEMORY

  br label %block_.L_42f9bc

  ; Code: .L_42f9b0:	 RIP: 42f9b0	 Bytes: 0
block_.L_42f9b0:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42f9b0	 Bytes: 3
  %loadMem_42f9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9b0 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9b0)
  store %struct.Memory* %call_42f9b0, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42f9b3	 Bytes: 3
  %loadMem_42f9b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9b3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9b3)
  store %struct.Memory* %call_42f9b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3d0(%rbp)	 RIP: 42f9b6	 Bytes: 6
  %loadMem_42f9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9b6 = call %struct.Memory* @routine_movl__eax__MINUS0x3d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9b6)
  store %struct.Memory* %call_42f9b6, %struct.Memory** %MEMORY

  ; Code: .L_42f9bc:	 RIP: 42f9bc	 Bytes: 0
  br label %block_.L_42f9bc
block_.L_42f9bc:

  ; Code: movl -0x3d0(%rbp), %eax	 RIP: 42f9bc	 Bytes: 6
  %loadMem_42f9bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9bc = call %struct.Memory* @routine_movl_MINUS0x3d0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9bc)
  store %struct.Memory* %call_42f9bc, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42f9c2	 Bytes: 3
  %loadMem_42f9c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9c2 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9c2)
  store %struct.Memory* %call_42f9c2, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42f9c5	 Bytes: 3
  %loadMem_42f9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9c5 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9c5)
  store %struct.Memory* %call_42f9c5, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42f9c8	 Bytes: 4
  %loadMem_42f9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9c8 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9c8)
  store %struct.Memory* %call_42f9c8, %struct.Memory** %MEMORY

  ; Code: movq -0x3c8(%rbp), %rdi	 RIP: 42f9cc	 Bytes: 7
  %loadMem_42f9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9cc = call %struct.Memory* @routine_movq_MINUS0x3c8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9cc)
  store %struct.Memory* %call_42f9cc, %struct.Memory** %MEMORY

  ; Code: movl -0x3cc(%rbp), %esi	 RIP: 42f9d3	 Bytes: 6
  %loadMem_42f9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9d3 = call %struct.Memory* @routine_movl_MINUS0x3cc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9d3)
  store %struct.Memory* %call_42f9d3, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42f9d9	 Bytes: 2
  %loadMem_42f9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9d9 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9d9)
  store %struct.Memory* %call_42f9d9, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42f9db	 Bytes: 5
  %loadMem1_42f9db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42f9db = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42f9db, i64 454453, i64 5, i64 5)
  store %struct.Memory* %call1_42f9db, %struct.Memory** %MEMORY

  %loadMem2_42f9db = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42f9db = load i64, i64* %3
  %call2_42f9db = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42f9db, %struct.Memory* %loadMem2_42f9db)
  store %struct.Memory* %call2_42f9db, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42f9e0	 Bytes: 3
  %loadMem_42f9e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9e0 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9e0)
  store %struct.Memory* %call_42f9e0, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42f9e3	 Bytes: 4
  %loadMem_42f9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9e3 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9e3)
  store %struct.Memory* %call_42f9e3, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42f9e7	 Bytes: 3
  %loadMem_42f9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9e7 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9e7)
  store %struct.Memory* %call_42f9e7, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42f9ea	 Bytes: 3
  %loadMem_42f9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9ea = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9ea)
  store %struct.Memory* %call_42f9ea, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42f9ed	 Bytes: 3
  %loadMem_42f9ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9ed = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9ed)
  store %struct.Memory* %call_42f9ed, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42f9f0	 Bytes: 3
  %loadMem_42f9f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9f0 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9f0)
  store %struct.Memory* %call_42f9f0, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42f9f3	 Bytes: 2
  %loadMem_42f9f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9f3 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9f3)
  store %struct.Memory* %call_42f9f3, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x3d4(%rbp)	 RIP: 42f9f5	 Bytes: 6
  %loadMem_42f9f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9f5 = call %struct.Memory* @routine_movl__ecx__MINUS0x3d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9f5)
  store %struct.Memory* %call_42f9f5, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x3e0(%rbp)	 RIP: 42f9fb	 Bytes: 7
  %loadMem_42f9fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42f9fb = call %struct.Memory* @routine_movq__rdi__MINUS0x3e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42f9fb)
  store %struct.Memory* %call_42f9fb, %struct.Memory** %MEMORY

  ; Code: jge .L_42fa19	 RIP: 42fa02	 Bytes: 6
  %loadMem_42fa02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa02 = call %struct.Memory* @routine_jge_.L_42fa19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa02, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fa02, %struct.Memory** %MEMORY

  %loadBr_42fa02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fa02 = icmp eq i8 %loadBr_42fa02, 1
  br i1 %cmpBr_42fa02, label %block_.L_42fa19, label %block_42fa08

block_42fa08:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42fa08	 Bytes: 3
  %loadMem_42fa08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa08 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa08)
  store %struct.Memory* %call_42fa08, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fa0b	 Bytes: 3
  %loadMem_42fa0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa0b = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa0b)
  store %struct.Memory* %call_42fa0b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3e4(%rbp)	 RIP: 42fa0e	 Bytes: 6
  %loadMem_42fa0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa0e = call %struct.Memory* @routine_movl__eax__MINUS0x3e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa0e)
  store %struct.Memory* %call_42fa0e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fa25	 RIP: 42fa14	 Bytes: 5
  %loadMem_42fa14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa14 = call %struct.Memory* @routine_jmpq_.L_42fa25(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa14, i64 17, i64 5)
  store %struct.Memory* %call_42fa14, %struct.Memory** %MEMORY

  br label %block_.L_42fa25

  ; Code: .L_42fa19:	 RIP: 42fa19	 Bytes: 0
block_.L_42fa19:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42fa19	 Bytes: 3
  %loadMem_42fa19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa19 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa19)
  store %struct.Memory* %call_42fa19, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fa1c	 Bytes: 3
  %loadMem_42fa1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa1c = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa1c)
  store %struct.Memory* %call_42fa1c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3e4(%rbp)	 RIP: 42fa1f	 Bytes: 6
  %loadMem_42fa1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa1f = call %struct.Memory* @routine_movl__eax__MINUS0x3e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa1f)
  store %struct.Memory* %call_42fa1f, %struct.Memory** %MEMORY

  ; Code: .L_42fa25:	 RIP: 42fa25	 Bytes: 0
  br label %block_.L_42fa25
block_.L_42fa25:

  ; Code: movl -0x3e4(%rbp), %eax	 RIP: 42fa25	 Bytes: 6
  %loadMem_42fa25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa25 = call %struct.Memory* @routine_movl_MINUS0x3e4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa25)
  store %struct.Memory* %call_42fa25, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fa2b	 Bytes: 3
  %loadMem_42fa2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa2b = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa2b)
  store %struct.Memory* %call_42fa2b, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42fa2e	 Bytes: 3
  %loadMem_42fa2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa2e = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa2e)
  store %struct.Memory* %call_42fa2e, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42fa31	 Bytes: 3
  %loadMem_42fa31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa31 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa31)
  store %struct.Memory* %call_42fa31, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42fa34	 Bytes: 3
  %loadMem_42fa34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa34 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa34)
  store %struct.Memory* %call_42fa34, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42fa37	 Bytes: 3
  %loadMem_42fa37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa37 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa37)
  store %struct.Memory* %call_42fa37, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42fa3a	 Bytes: 4
  %loadMem_42fa3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa3a = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa3a)
  store %struct.Memory* %call_42fa3a, %struct.Memory** %MEMORY

  ; Code: movq -0x3e0(%rbp), %rdi	 RIP: 42fa3e	 Bytes: 7
  %loadMem_42fa3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa3e = call %struct.Memory* @routine_movq_MINUS0x3e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa3e)
  store %struct.Memory* %call_42fa3e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42fa45	 Bytes: 2
  %loadMem_42fa45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa45 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa45)
  store %struct.Memory* %call_42fa45, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x3e8(%rbp)	 RIP: 42fa47	 Bytes: 6
  %loadMem_42fa47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa47 = call %struct.Memory* @routine_movl__edx__MINUS0x3e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa47)
  store %struct.Memory* %call_42fa47, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42fa4d	 Bytes: 2
  %loadMem_42fa4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa4d = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa4d)
  store %struct.Memory* %call_42fa4d, %struct.Memory** %MEMORY

  ; Code: movl -0x3e8(%rbp), %ecx	 RIP: 42fa4f	 Bytes: 6
  %loadMem_42fa4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa4f = call %struct.Memory* @routine_movl_MINUS0x3e8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa4f)
  store %struct.Memory* %call_42fa4f, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42fa55	 Bytes: 5
  %loadMem1_42fa55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42fa55 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42fa55, i64 454331, i64 5, i64 5)
  store %struct.Memory* %call1_42fa55, %struct.Memory** %MEMORY

  %loadMem2_42fa55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42fa55 = load i64, i64* %3
  %call2_42fa55 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42fa55, %struct.Memory* %loadMem2_42fa55)
  store %struct.Memory* %call2_42fa55, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42fa5a	 Bytes: 5
  %loadMem_42fa5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa5a = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa5a)
  store %struct.Memory* %call_42fa5a, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42fa5f	 Bytes: 3
  %loadMem_42fa5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa5f = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa5f)
  store %struct.Memory* %call_42fa5f, %struct.Memory** %MEMORY

  ; Code: movl -0x3d4(%rbp), %esi	 RIP: 42fa62	 Bytes: 6
  %loadMem_42fa62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa62 = call %struct.Memory* @routine_movl_MINUS0x3d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa62)
  store %struct.Memory* %call_42fa62, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42fa68	 Bytes: 2
  %loadMem_42fa68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa68 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa68)
  store %struct.Memory* %call_42fa68, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42fa6a	 Bytes: 3
  %loadMem_42fa6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa6a = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa6a)
  store %struct.Memory* %call_42fa6a, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42fa6d	 Bytes: 2
  %loadMem_42fa6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa6d = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa6d)
  store %struct.Memory* %call_42fa6d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42fa6f	 Bytes: 1
  %loadMem_42fa6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa6f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa6f)
  store %struct.Memory* %call_42fa6f, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42fa70	 Bytes: 2
  %loadMem_42fa70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa70 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa70)
  store %struct.Memory* %call_42fa70, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3bc(%rbp)	 RIP: 42fa72	 Bytes: 6
  %loadMem_42fa72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa72 = call %struct.Memory* @routine_movl__eax__MINUS0x3bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa72)
  store %struct.Memory* %call_42fa72, %struct.Memory** %MEMORY

  ; Code: .L_42fa78:	 RIP: 42fa78	 Bytes: 0
  br label %block_.L_42fa78
block_.L_42fa78:

  ; Code: movl -0x3bc(%rbp), %eax	 RIP: 42fa78	 Bytes: 6
  %loadMem_42fa78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa78 = call %struct.Memory* @routine_movl_MINUS0x3bc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa78)
  store %struct.Memory* %call_42fa78, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x38c(%rbp)	 RIP: 42fa7e	 Bytes: 6
  %loadMem_42fa7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa7e = call %struct.Memory* @routine_movl__eax__MINUS0x38c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa7e)
  store %struct.Memory* %call_42fa7e, %struct.Memory** %MEMORY

  ; Code: .L_42fa84:	 RIP: 42fa84	 Bytes: 0
  br label %block_.L_42fa84
block_.L_42fa84:

  ; Code: movl -0x38c(%rbp), %eax	 RIP: 42fa84	 Bytes: 6
  %loadMem_42fa84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa84 = call %struct.Memory* @routine_movl_MINUS0x38c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa84)
  store %struct.Memory* %call_42fa84, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 42fa8a	 Bytes: 3
  %loadMem_42fa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa8a = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa8a)
  store %struct.Memory* %call_42fa8a, %struct.Memory** %MEMORY

  ; Code: movq -0x320(%rbp), %rdi	 RIP: 42fa8d	 Bytes: 7
  %loadMem_42fa8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa8d = call %struct.Memory* @routine_movq_MINUS0x320__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa8d)
  store %struct.Memory* %call_42fa8d, %struct.Memory** %MEMORY

  ; Code: movl -0x324(%rbp), %esi	 RIP: 42fa94	 Bytes: 6
  %loadMem_42fa94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa94 = call %struct.Memory* @routine_movl_MINUS0x324__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa94)
  store %struct.Memory* %call_42fa94, %struct.Memory** %MEMORY

  ; Code: movl -0x328(%rbp), %edx	 RIP: 42fa9a	 Bytes: 6
  %loadMem_42fa9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fa9a = call %struct.Memory* @routine_movl_MINUS0x328__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fa9a)
  store %struct.Memory* %call_42fa9a, %struct.Memory** %MEMORY

  ; Code: movzwl %cx, %ecx	 RIP: 42faa0	 Bytes: 3
  %loadMem_42faa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42faa0 = call %struct.Memory* @routine_movzwl__cx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42faa0)
  store %struct.Memory* %call_42faa0, %struct.Memory** %MEMORY

  ; Code: callq .PutPel_14	 RIP: 42faa3	 Bytes: 5
  %loadMem1_42faa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42faa3 = call %struct.Memory* @routine_callq_.PutPel_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42faa3, i64 452301, i64 5, i64 5)
  store %struct.Memory* %call1_42faa3, %struct.Memory** %MEMORY

  %loadMem2_42faa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42faa3 = load i64, i64* %3
  %call2_42faa3 = call %struct.Memory* @sub_49e170.PutPel_14(%struct.State* %0, i64  %loadPC_42faa3, %struct.Memory* %loadMem2_42faa3)
  store %struct.Memory* %call2_42faa3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ff6c	 RIP: 42faa8	 Bytes: 5
  %loadMem_42faa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42faa8 = call %struct.Memory* @routine_jmpq_.L_42ff6c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42faa8, i64 1220, i64 5)
  store %struct.Memory* %call_42faa8, %struct.Memory** %MEMORY

  br label %block_.L_42ff6c

  ; Code: .L_42faad:	 RIP: 42faad	 Bytes: 0
block_.L_42faad:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42faad	 Bytes: 4
  %loadMem_42faad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42faad = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42faad)
  store %struct.Memory* %call_42faad, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42fab1	 Bytes: 3
  %loadMem_42fab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fab1 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fab1)
  store %struct.Memory* %call_42fab1, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fab4	 Bytes: 3
  %loadMem_42fab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fab4 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fab4)
  store %struct.Memory* %call_42fab4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42fab7	 Bytes: 3
  %loadMem_42fab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fab7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fab7)
  store %struct.Memory* %call_42fab7, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42faba	 Bytes: 3
  %loadMem_42faba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42faba = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42faba)
  store %struct.Memory* %call_42faba, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42fabd	 Bytes: 3
  %loadMem_42fabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fabd = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fabd)
  store %struct.Memory* %call_42fabd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 42fac0	 Bytes: 8
  %loadMem_42fac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fac0 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fac0)
  store %struct.Memory* %call_42fac0, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rdx), %esi	 RIP: 42fac8	 Bytes: 6
  %loadMem_42fac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fac8 = call %struct.Memory* @routine_movl_0x11bec__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fac8)
  store %struct.Memory* %call_42fac8, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdx	 RIP: 42face	 Bytes: 4
  %loadMem_42face = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42face = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42face)
  store %struct.Memory* %call_42face, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %r8d	 RIP: 42fad2	 Bytes: 4
  %loadMem_42fad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fad2 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fad2)
  store %struct.Memory* %call_42fad2, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %r8d	 RIP: 42fad6	 Bytes: 4
  %loadMem_42fad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fad6 = call %struct.Memory* @routine_subl__0x10___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fad6)
  store %struct.Memory* %call_42fad6, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %r9d	 RIP: 42fada	 Bytes: 4
  %loadMem_42fada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fada = call %struct.Memory* @routine_movl_MINUS0x18__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fada)
  store %struct.Memory* %call_42fada, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %r9d	 RIP: 42fade	 Bytes: 4
  %loadMem_42fade = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fade = call %struct.Memory* @routine_subl__0x10___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fade)
  store %struct.Memory* %call_42fade, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %r9d	 RIP: 42fae2	 Bytes: 4
  %loadMem_42fae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fae2 = call %struct.Memory* @routine_subl__0x1___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fae2)
  store %struct.Memory* %call_42fae2, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r10d	 RIP: 42fae6	 Bytes: 4
  %loadMem_42fae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fae6 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fae6)
  store %struct.Memory* %call_42fae6, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r11d	 RIP: 42faea	 Bytes: 4
  %loadMem_42faea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42faea = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42faea)
  store %struct.Memory* %call_42faea, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x3f0(%rbp)	 RIP: 42faee	 Bytes: 7
  %loadMem_42faee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42faee = call %struct.Memory* @routine_movq__rdi__MINUS0x3f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42faee)
  store %struct.Memory* %call_42faee, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 42faf5	 Bytes: 3
  %loadMem_42faf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42faf5 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42faf5)
  store %struct.Memory* %call_42faf5, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x3f4(%rbp)	 RIP: 42faf8	 Bytes: 6
  %loadMem_42faf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42faf8 = call %struct.Memory* @routine_movl__esi__MINUS0x3f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42faf8)
  store %struct.Memory* %call_42faf8, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %esi	 RIP: 42fafe	 Bytes: 3
  %loadMem_42fafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fafe = call %struct.Memory* @routine_movl__r8d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fafe)
  store %struct.Memory* %call_42fafe, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %edx	 RIP: 42fb01	 Bytes: 3
  %loadMem_42fb01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb01 = call %struct.Memory* @routine_movl__r9d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb01)
  store %struct.Memory* %call_42fb01, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x3f8(%rbp)	 RIP: 42fb04	 Bytes: 6
  %loadMem_42fb04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb04 = call %struct.Memory* @routine_movl__ecx__MINUS0x3f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb04)
  store %struct.Memory* %call_42fb04, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %ecx	 RIP: 42fb0a	 Bytes: 3
  %loadMem_42fb0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb0a = call %struct.Memory* @routine_movl__r10d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb0a)
  store %struct.Memory* %call_42fb0a, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r8d	 RIP: 42fb0d	 Bytes: 3
  %loadMem_42fb0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb0d = call %struct.Memory* @routine_movl__r11d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb0d)
  store %struct.Memory* %call_42fb0d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x3fc(%rbp)	 RIP: 42fb10	 Bytes: 6
  %loadMem_42fb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb10 = call %struct.Memory* @routine_movl__eax__MINUS0x3fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb10)
  store %struct.Memory* %call_42fb10, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42fb16	 Bytes: 5
  %loadMem1_42fb16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42fb16 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42fb16, i64 454138, i64 5, i64 5)
  store %struct.Memory* %call1_42fb16, %struct.Memory** %MEMORY

  %loadMem2_42fb16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42fb16 = load i64, i64* %3
  %call2_42fb16 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42fb16, %struct.Memory* %loadMem2_42fb16)
  store %struct.Memory* %call2_42fb16, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42fb1b	 Bytes: 3
  %loadMem_42fb1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb1b = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb1b)
  store %struct.Memory* %call_42fb1b, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42fb1e	 Bytes: 4
  %loadMem_42fb1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb1e = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb1e)
  store %struct.Memory* %call_42fb1e, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42fb22	 Bytes: 3
  %loadMem_42fb22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb22 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb22)
  store %struct.Memory* %call_42fb22, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42fb25	 Bytes: 3
  %loadMem_42fb25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb25 = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb25)
  store %struct.Memory* %call_42fb25, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42fb28	 Bytes: 3
  %loadMem_42fb28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb28 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb28)
  store %struct.Memory* %call_42fb28, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42fb2b	 Bytes: 3
  %loadMem_42fb2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb2b = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb2b)
  store %struct.Memory* %call_42fb2b, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42fb2e	 Bytes: 2
  %loadMem_42fb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb2e = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb2e)
  store %struct.Memory* %call_42fb2e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x400(%rbp)	 RIP: 42fb30	 Bytes: 6
  %loadMem_42fb30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb30 = call %struct.Memory* @routine_movl__ecx__MINUS0x400__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb30)
  store %struct.Memory* %call_42fb30, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x408(%rbp)	 RIP: 42fb36	 Bytes: 7
  %loadMem_42fb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb36 = call %struct.Memory* @routine_movq__rdi__MINUS0x408__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb36)
  store %struct.Memory* %call_42fb36, %struct.Memory** %MEMORY

  ; Code: jge .L_42fb54	 RIP: 42fb3d	 Bytes: 6
  %loadMem_42fb3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb3d = call %struct.Memory* @routine_jge_.L_42fb54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb3d, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fb3d, %struct.Memory** %MEMORY

  %loadBr_42fb3d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fb3d = icmp eq i8 %loadBr_42fb3d, 1
  br i1 %cmpBr_42fb3d, label %block_.L_42fb54, label %block_42fb43

block_42fb43:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42fb43	 Bytes: 3
  %loadMem_42fb43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb43 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb43)
  store %struct.Memory* %call_42fb43, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fb46	 Bytes: 3
  %loadMem_42fb46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb46 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb46)
  store %struct.Memory* %call_42fb46, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40c(%rbp)	 RIP: 42fb49	 Bytes: 6
  %loadMem_42fb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb49 = call %struct.Memory* @routine_movl__eax__MINUS0x40c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb49)
  store %struct.Memory* %call_42fb49, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fb60	 RIP: 42fb4f	 Bytes: 5
  %loadMem_42fb4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb4f = call %struct.Memory* @routine_jmpq_.L_42fb60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb4f, i64 17, i64 5)
  store %struct.Memory* %call_42fb4f, %struct.Memory** %MEMORY

  br label %block_.L_42fb60

  ; Code: .L_42fb54:	 RIP: 42fb54	 Bytes: 0
block_.L_42fb54:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42fb54	 Bytes: 3
  %loadMem_42fb54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb54 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb54)
  store %struct.Memory* %call_42fb54, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fb57	 Bytes: 3
  %loadMem_42fb57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb57 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb57)
  store %struct.Memory* %call_42fb57, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x40c(%rbp)	 RIP: 42fb5a	 Bytes: 6
  %loadMem_42fb5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb5a = call %struct.Memory* @routine_movl__eax__MINUS0x40c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb5a)
  store %struct.Memory* %call_42fb5a, %struct.Memory** %MEMORY

  ; Code: .L_42fb60:	 RIP: 42fb60	 Bytes: 0
  br label %block_.L_42fb60
block_.L_42fb60:

  ; Code: movl -0x40c(%rbp), %eax	 RIP: 42fb60	 Bytes: 6
  %loadMem_42fb60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb60 = call %struct.Memory* @routine_movl_MINUS0x40c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb60)
  store %struct.Memory* %call_42fb60, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fb66	 Bytes: 3
  %loadMem_42fb66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb66 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb66)
  store %struct.Memory* %call_42fb66, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 42fb69	 Bytes: 3
  %loadMem_42fb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb69 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb69)
  store %struct.Memory* %call_42fb69, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 42fb6c	 Bytes: 3
  %loadMem_42fb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb6c = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb6c)
  store %struct.Memory* %call_42fb6c, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42fb6f	 Bytes: 3
  %loadMem_42fb6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb6f = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb6f)
  store %struct.Memory* %call_42fb6f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 42fb72	 Bytes: 3
  %loadMem_42fb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb72 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb72)
  store %struct.Memory* %call_42fb72, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42fb75	 Bytes: 2
  %loadMem_42fb75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb75 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb75)
  store %struct.Memory* %call_42fb75, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x410(%rbp)	 RIP: 42fb77	 Bytes: 6
  %loadMem_42fb77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb77 = call %struct.Memory* @routine_movl__eax__MINUS0x410__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb77)
  store %struct.Memory* %call_42fb77, %struct.Memory** %MEMORY

  ; Code: jge .L_42fb94	 RIP: 42fb7d	 Bytes: 6
  %loadMem_42fb7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb7d = call %struct.Memory* @routine_jge_.L_42fb94(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb7d, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fb7d, %struct.Memory** %MEMORY

  %loadBr_42fb7d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fb7d = icmp eq i8 %loadBr_42fb7d, 1
  br i1 %cmpBr_42fb7d, label %block_.L_42fb94, label %block_42fb83

block_42fb83:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42fb83	 Bytes: 3
  %loadMem_42fb83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb83 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb83)
  store %struct.Memory* %call_42fb83, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fb86	 Bytes: 3
  %loadMem_42fb86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb86 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb86)
  store %struct.Memory* %call_42fb86, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x414(%rbp)	 RIP: 42fb89	 Bytes: 6
  %loadMem_42fb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb89 = call %struct.Memory* @routine_movl__eax__MINUS0x414__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb89)
  store %struct.Memory* %call_42fb89, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fba0	 RIP: 42fb8f	 Bytes: 5
  %loadMem_42fb8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb8f = call %struct.Memory* @routine_jmpq_.L_42fba0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb8f, i64 17, i64 5)
  store %struct.Memory* %call_42fb8f, %struct.Memory** %MEMORY

  br label %block_.L_42fba0

  ; Code: .L_42fb94:	 RIP: 42fb94	 Bytes: 0
block_.L_42fb94:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42fb94	 Bytes: 3
  %loadMem_42fb94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb94 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb94)
  store %struct.Memory* %call_42fb94, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42fb97	 Bytes: 3
  %loadMem_42fb97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb97 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb97)
  store %struct.Memory* %call_42fb97, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x414(%rbp)	 RIP: 42fb9a	 Bytes: 6
  %loadMem_42fb9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fb9a = call %struct.Memory* @routine_movl__eax__MINUS0x414__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fb9a)
  store %struct.Memory* %call_42fb9a, %struct.Memory** %MEMORY

  ; Code: .L_42fba0:	 RIP: 42fba0	 Bytes: 0
  br label %block_.L_42fba0
block_.L_42fba0:

  ; Code: movl -0x414(%rbp), %eax	 RIP: 42fba0	 Bytes: 6
  %loadMem_42fba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fba0 = call %struct.Memory* @routine_movl_MINUS0x414__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fba0)
  store %struct.Memory* %call_42fba0, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fba6	 Bytes: 3
  %loadMem_42fba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fba6 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fba6)
  store %struct.Memory* %call_42fba6, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42fba9	 Bytes: 3
  %loadMem_42fba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fba9 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fba9)
  store %struct.Memory* %call_42fba9, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42fbac	 Bytes: 4
  %loadMem_42fbac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbac = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbac)
  store %struct.Memory* %call_42fbac, %struct.Memory** %MEMORY

  ; Code: movq -0x408(%rbp), %rdi	 RIP: 42fbb0	 Bytes: 7
  %loadMem_42fbb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbb0 = call %struct.Memory* @routine_movq_MINUS0x408__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbb0)
  store %struct.Memory* %call_42fbb0, %struct.Memory** %MEMORY

  ; Code: movl -0x410(%rbp), %esi	 RIP: 42fbb7	 Bytes: 6
  %loadMem_42fbb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbb7 = call %struct.Memory* @routine_movl_MINUS0x410__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbb7)
  store %struct.Memory* %call_42fbb7, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42fbbd	 Bytes: 2
  %loadMem_42fbbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbbd = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbbd)
  store %struct.Memory* %call_42fbbd, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42fbbf	 Bytes: 5
  %loadMem1_42fbbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42fbbf = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42fbbf, i64 453969, i64 5, i64 5)
  store %struct.Memory* %call1_42fbbf, %struct.Memory** %MEMORY

  %loadMem2_42fbbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42fbbf = load i64, i64* %3
  %call2_42fbbf = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42fbbf, %struct.Memory* %loadMem2_42fbbf)
  store %struct.Memory* %call2_42fbbf, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42fbc4	 Bytes: 5
  %loadMem_42fbc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbc4 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbc4)
  store %struct.Memory* %call_42fbc4, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42fbc9	 Bytes: 3
  %loadMem_42fbc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbc9 = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbc9)
  store %struct.Memory* %call_42fbc9, %struct.Memory** %MEMORY

  ; Code: movl -0x400(%rbp), %esi	 RIP: 42fbcc	 Bytes: 6
  %loadMem_42fbcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbcc = call %struct.Memory* @routine_movl_MINUS0x400__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbcc)
  store %struct.Memory* %call_42fbcc, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42fbd2	 Bytes: 2
  %loadMem_42fbd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbd2 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbd2)
  store %struct.Memory* %call_42fbd2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42fbd4	 Bytes: 3
  %loadMem_42fbd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbd4 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbd4)
  store %struct.Memory* %call_42fbd4, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42fbd7	 Bytes: 2
  %loadMem_42fbd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbd7 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbd7)
  store %struct.Memory* %call_42fbd7, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42fbd9	 Bytes: 1
  %loadMem_42fbd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbd9 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbd9)
  store %struct.Memory* %call_42fbd9, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42fbda	 Bytes: 2
  %loadMem_42fbda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbda = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbda)
  store %struct.Memory* %call_42fbda, %struct.Memory** %MEMORY

  ; Code: movl -0x3f4(%rbp), %ecx	 RIP: 42fbdc	 Bytes: 6
  %loadMem_42fbdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbdc = call %struct.Memory* @routine_movl_MINUS0x3f4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbdc)
  store %struct.Memory* %call_42fbdc, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42fbe2	 Bytes: 2
  %loadMem_42fbe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbe2 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbe2)
  store %struct.Memory* %call_42fbe2, %struct.Memory** %MEMORY

  ; Code: jge .L_42fc03	 RIP: 42fbe4	 Bytes: 6
  %loadMem_42fbe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbe4 = call %struct.Memory* @routine_jge_.L_42fc03(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbe4, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42fbe4, %struct.Memory** %MEMORY

  %loadBr_42fbe4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fbe4 = icmp eq i8 %loadBr_42fbe4, 1
  br i1 %cmpBr_42fbe4, label %block_.L_42fc03, label %block_42fbea

block_42fbea:
  ; Code: movq 0x6cb900, %rax	 RIP: 42fbea	 Bytes: 8
  %loadMem_42fbea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbea = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbea)
  store %struct.Memory* %call_42fbea, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42fbf2	 Bytes: 6
  %loadMem_42fbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbf2 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbf2)
  store %struct.Memory* %call_42fbf2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x418(%rbp)	 RIP: 42fbf8	 Bytes: 6
  %loadMem_42fbf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbf8 = call %struct.Memory* @routine_movl__ecx__MINUS0x418__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbf8)
  store %struct.Memory* %call_42fbf8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fcf9	 RIP: 42fbfe	 Bytes: 5
  %loadMem_42fbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fbfe = call %struct.Memory* @routine_jmpq_.L_42fcf9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fbfe, i64 251, i64 5)
  store %struct.Memory* %call_42fbfe, %struct.Memory** %MEMORY

  br label %block_.L_42fcf9

  ; Code: .L_42fc03:	 RIP: 42fc03	 Bytes: 0
block_.L_42fc03:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42fc03	 Bytes: 4
  %loadMem_42fc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc03 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc03)
  store %struct.Memory* %call_42fc03, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42fc07	 Bytes: 3
  %loadMem_42fc07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc07 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc07)
  store %struct.Memory* %call_42fc07, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fc0a	 Bytes: 3
  %loadMem_42fc0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc0a = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc0a)
  store %struct.Memory* %call_42fc0a, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42fc0d	 Bytes: 3
  %loadMem_42fc0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc0d = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc0d)
  store %struct.Memory* %call_42fc0d, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42fc10	 Bytes: 3
  %loadMem_42fc10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc10 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc10)
  store %struct.Memory* %call_42fc10, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42fc13	 Bytes: 3
  %loadMem_42fc13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc13 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc13)
  store %struct.Memory* %call_42fc13, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42fc16	 Bytes: 3
  %loadMem_42fc16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc16 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc16)
  store %struct.Memory* %call_42fc16, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42fc19	 Bytes: 4
  %loadMem_42fc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc19 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc19)
  store %struct.Memory* %call_42fc19, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42fc1d	 Bytes: 2
  %loadMem_42fc1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc1d = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc1d)
  store %struct.Memory* %call_42fc1d, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x41c(%rbp)	 RIP: 42fc1f	 Bytes: 6
  %loadMem_42fc1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc1f = call %struct.Memory* @routine_movl__edx__MINUS0x41c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc1f)
  store %struct.Memory* %call_42fc1f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42fc25	 Bytes: 2
  %loadMem_42fc25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc25 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc25)
  store %struct.Memory* %call_42fc25, %struct.Memory** %MEMORY

  ; Code: movl -0x41c(%rbp), %ecx	 RIP: 42fc27	 Bytes: 6
  %loadMem_42fc27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc27 = call %struct.Memory* @routine_movl_MINUS0x41c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc27)
  store %struct.Memory* %call_42fc27, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42fc2d	 Bytes: 5
  %loadMem1_42fc2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42fc2d = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42fc2d, i64 453859, i64 5, i64 5)
  store %struct.Memory* %call1_42fc2d, %struct.Memory** %MEMORY

  %loadMem2_42fc2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42fc2d = load i64, i64* %3
  %call2_42fc2d = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42fc2d, %struct.Memory* %loadMem2_42fc2d)
  store %struct.Memory* %call2_42fc2d, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42fc32	 Bytes: 3
  %loadMem_42fc32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc32 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc32)
  store %struct.Memory* %call_42fc32, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42fc35	 Bytes: 4
  %loadMem_42fc35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc35 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc35)
  store %struct.Memory* %call_42fc35, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42fc39	 Bytes: 3
  %loadMem_42fc39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc39 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc39)
  store %struct.Memory* %call_42fc39, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42fc3c	 Bytes: 3
  %loadMem_42fc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc3c = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc3c)
  store %struct.Memory* %call_42fc3c, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42fc3f	 Bytes: 3
  %loadMem_42fc3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc3f = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc3f)
  store %struct.Memory* %call_42fc3f, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42fc42	 Bytes: 3
  %loadMem_42fc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc42 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc42)
  store %struct.Memory* %call_42fc42, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42fc45	 Bytes: 2
  %loadMem_42fc45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc45 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc45)
  store %struct.Memory* %call_42fc45, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x420(%rbp)	 RIP: 42fc47	 Bytes: 6
  %loadMem_42fc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc47 = call %struct.Memory* @routine_movl__ecx__MINUS0x420__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc47)
  store %struct.Memory* %call_42fc47, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x428(%rbp)	 RIP: 42fc4d	 Bytes: 7
  %loadMem_42fc4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc4d = call %struct.Memory* @routine_movq__rdi__MINUS0x428__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc4d)
  store %struct.Memory* %call_42fc4d, %struct.Memory** %MEMORY

  ; Code: jge .L_42fc6b	 RIP: 42fc54	 Bytes: 6
  %loadMem_42fc54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc54 = call %struct.Memory* @routine_jge_.L_42fc6b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc54, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fc54, %struct.Memory** %MEMORY

  %loadBr_42fc54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fc54 = icmp eq i8 %loadBr_42fc54, 1
  br i1 %cmpBr_42fc54, label %block_.L_42fc6b, label %block_42fc5a

block_42fc5a:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42fc5a	 Bytes: 3
  %loadMem_42fc5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc5a = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc5a)
  store %struct.Memory* %call_42fc5a, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fc5d	 Bytes: 3
  %loadMem_42fc5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc5d = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc5d)
  store %struct.Memory* %call_42fc5d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x42c(%rbp)	 RIP: 42fc60	 Bytes: 6
  %loadMem_42fc60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc60 = call %struct.Memory* @routine_movl__eax__MINUS0x42c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc60)
  store %struct.Memory* %call_42fc60, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fc77	 RIP: 42fc66	 Bytes: 5
  %loadMem_42fc66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc66 = call %struct.Memory* @routine_jmpq_.L_42fc77(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc66, i64 17, i64 5)
  store %struct.Memory* %call_42fc66, %struct.Memory** %MEMORY

  br label %block_.L_42fc77

  ; Code: .L_42fc6b:	 RIP: 42fc6b	 Bytes: 0
block_.L_42fc6b:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42fc6b	 Bytes: 3
  %loadMem_42fc6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc6b = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc6b)
  store %struct.Memory* %call_42fc6b, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fc6e	 Bytes: 3
  %loadMem_42fc6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc6e = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc6e)
  store %struct.Memory* %call_42fc6e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x42c(%rbp)	 RIP: 42fc71	 Bytes: 6
  %loadMem_42fc71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc71 = call %struct.Memory* @routine_movl__eax__MINUS0x42c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc71)
  store %struct.Memory* %call_42fc71, %struct.Memory** %MEMORY

  ; Code: .L_42fc77:	 RIP: 42fc77	 Bytes: 0
  br label %block_.L_42fc77
block_.L_42fc77:

  ; Code: movl -0x42c(%rbp), %eax	 RIP: 42fc77	 Bytes: 6
  %loadMem_42fc77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc77 = call %struct.Memory* @routine_movl_MINUS0x42c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc77)
  store %struct.Memory* %call_42fc77, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fc7d	 Bytes: 3
  %loadMem_42fc7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc7d = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc7d)
  store %struct.Memory* %call_42fc7d, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 42fc80	 Bytes: 3
  %loadMem_42fc80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc80 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc80)
  store %struct.Memory* %call_42fc80, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 42fc83	 Bytes: 3
  %loadMem_42fc83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc83 = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc83)
  store %struct.Memory* %call_42fc83, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42fc86	 Bytes: 3
  %loadMem_42fc86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc86 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc86)
  store %struct.Memory* %call_42fc86, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 42fc89	 Bytes: 3
  %loadMem_42fc89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc89 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc89)
  store %struct.Memory* %call_42fc89, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42fc8c	 Bytes: 2
  %loadMem_42fc8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc8c = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc8c)
  store %struct.Memory* %call_42fc8c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x430(%rbp)	 RIP: 42fc8e	 Bytes: 6
  %loadMem_42fc8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc8e = call %struct.Memory* @routine_movl__eax__MINUS0x430__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc8e)
  store %struct.Memory* %call_42fc8e, %struct.Memory** %MEMORY

  ; Code: jge .L_42fcab	 RIP: 42fc94	 Bytes: 6
  %loadMem_42fc94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc94 = call %struct.Memory* @routine_jge_.L_42fcab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc94, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fc94, %struct.Memory** %MEMORY

  %loadBr_42fc94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fc94 = icmp eq i8 %loadBr_42fc94, 1
  br i1 %cmpBr_42fc94, label %block_.L_42fcab, label %block_42fc9a

block_42fc9a:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42fc9a	 Bytes: 3
  %loadMem_42fc9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc9a = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc9a)
  store %struct.Memory* %call_42fc9a, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fc9d	 Bytes: 3
  %loadMem_42fc9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fc9d = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fc9d)
  store %struct.Memory* %call_42fc9d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x434(%rbp)	 RIP: 42fca0	 Bytes: 6
  %loadMem_42fca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fca0 = call %struct.Memory* @routine_movl__eax__MINUS0x434__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fca0)
  store %struct.Memory* %call_42fca0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fcb7	 RIP: 42fca6	 Bytes: 5
  %loadMem_42fca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fca6 = call %struct.Memory* @routine_jmpq_.L_42fcb7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fca6, i64 17, i64 5)
  store %struct.Memory* %call_42fca6, %struct.Memory** %MEMORY

  br label %block_.L_42fcb7

  ; Code: .L_42fcab:	 RIP: 42fcab	 Bytes: 0
block_.L_42fcab:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42fcab	 Bytes: 3
  %loadMem_42fcab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcab = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcab)
  store %struct.Memory* %call_42fcab, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42fcae	 Bytes: 3
  %loadMem_42fcae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcae = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcae)
  store %struct.Memory* %call_42fcae, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x434(%rbp)	 RIP: 42fcb1	 Bytes: 6
  %loadMem_42fcb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcb1 = call %struct.Memory* @routine_movl__eax__MINUS0x434__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcb1)
  store %struct.Memory* %call_42fcb1, %struct.Memory** %MEMORY

  ; Code: .L_42fcb7:	 RIP: 42fcb7	 Bytes: 0
  br label %block_.L_42fcb7
block_.L_42fcb7:

  ; Code: movl -0x434(%rbp), %eax	 RIP: 42fcb7	 Bytes: 6
  %loadMem_42fcb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcb7 = call %struct.Memory* @routine_movl_MINUS0x434__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcb7)
  store %struct.Memory* %call_42fcb7, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fcbd	 Bytes: 3
  %loadMem_42fcbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcbd = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcbd)
  store %struct.Memory* %call_42fcbd, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42fcc0	 Bytes: 3
  %loadMem_42fcc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcc0 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcc0)
  store %struct.Memory* %call_42fcc0, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42fcc3	 Bytes: 4
  %loadMem_42fcc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcc3 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcc3)
  store %struct.Memory* %call_42fcc3, %struct.Memory** %MEMORY

  ; Code: movq -0x428(%rbp), %rdi	 RIP: 42fcc7	 Bytes: 7
  %loadMem_42fcc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcc7 = call %struct.Memory* @routine_movq_MINUS0x428__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcc7)
  store %struct.Memory* %call_42fcc7, %struct.Memory** %MEMORY

  ; Code: movl -0x430(%rbp), %esi	 RIP: 42fcce	 Bytes: 6
  %loadMem_42fcce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcce = call %struct.Memory* @routine_movl_MINUS0x430__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcce)
  store %struct.Memory* %call_42fcce, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42fcd4	 Bytes: 2
  %loadMem_42fcd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcd4 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcd4)
  store %struct.Memory* %call_42fcd4, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42fcd6	 Bytes: 5
  %loadMem1_42fcd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42fcd6 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42fcd6, i64 453690, i64 5, i64 5)
  store %struct.Memory* %call1_42fcd6, %struct.Memory** %MEMORY

  %loadMem2_42fcd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42fcd6 = load i64, i64* %3
  %call2_42fcd6 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42fcd6, %struct.Memory* %loadMem2_42fcd6)
  store %struct.Memory* %call2_42fcd6, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42fcdb	 Bytes: 5
  %loadMem_42fcdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcdb = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcdb)
  store %struct.Memory* %call_42fcdb, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42fce0	 Bytes: 3
  %loadMem_42fce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fce0 = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fce0)
  store %struct.Memory* %call_42fce0, %struct.Memory** %MEMORY

  ; Code: movl -0x420(%rbp), %esi	 RIP: 42fce3	 Bytes: 6
  %loadMem_42fce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fce3 = call %struct.Memory* @routine_movl_MINUS0x420__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fce3)
  store %struct.Memory* %call_42fce3, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42fce9	 Bytes: 2
  %loadMem_42fce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fce9 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fce9)
  store %struct.Memory* %call_42fce9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42fceb	 Bytes: 3
  %loadMem_42fceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fceb = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fceb)
  store %struct.Memory* %call_42fceb, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42fcee	 Bytes: 2
  %loadMem_42fcee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcee = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcee)
  store %struct.Memory* %call_42fcee, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42fcf0	 Bytes: 1
  %loadMem_42fcf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcf0 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcf0)
  store %struct.Memory* %call_42fcf0, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42fcf1	 Bytes: 2
  %loadMem_42fcf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcf1 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcf1)
  store %struct.Memory* %call_42fcf1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x418(%rbp)	 RIP: 42fcf3	 Bytes: 6
  %loadMem_42fcf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcf3 = call %struct.Memory* @routine_movl__eax__MINUS0x418__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcf3)
  store %struct.Memory* %call_42fcf3, %struct.Memory** %MEMORY

  ; Code: .L_42fcf9:	 RIP: 42fcf9	 Bytes: 0
  br label %block_.L_42fcf9
block_.L_42fcf9:

  ; Code: movl -0x418(%rbp), %eax	 RIP: 42fcf9	 Bytes: 6
  %loadMem_42fcf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcf9 = call %struct.Memory* @routine_movl_MINUS0x418__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcf9)
  store %struct.Memory* %call_42fcf9, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 42fcff	 Bytes: 2
  %loadMem_42fcff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fcff = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fcff)
  store %struct.Memory* %call_42fcff, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42fd01	 Bytes: 2
  %loadMem_42fd01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd01 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd01)
  store %struct.Memory* %call_42fd01, %struct.Memory** %MEMORY

  ; Code: jle .L_42fd16	 RIP: 42fd03	 Bytes: 6
  %loadMem_42fd03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd03 = call %struct.Memory* @routine_jle_.L_42fd16(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd03, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_42fd03, %struct.Memory** %MEMORY

  %loadBr_42fd03 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fd03 = icmp eq i8 %loadBr_42fd03, 1
  br i1 %cmpBr_42fd03, label %block_.L_42fd16, label %block_42fd09

block_42fd09:
  ; Code: xorl %eax, %eax	 RIP: 42fd09	 Bytes: 2
  %loadMem_42fd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd09 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd09)
  store %struct.Memory* %call_42fd09, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x438(%rbp)	 RIP: 42fd0b	 Bytes: 6
  %loadMem_42fd0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd0b = call %struct.Memory* @routine_movl__eax__MINUS0x438__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd0b)
  store %struct.Memory* %call_42fd0b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ff48	 RIP: 42fd11	 Bytes: 5
  %loadMem_42fd11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd11 = call %struct.Memory* @routine_jmpq_.L_42ff48(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd11, i64 567, i64 5)
  store %struct.Memory* %call_42fd11, %struct.Memory** %MEMORY

  br label %block_.L_42ff48

  ; Code: .L_42fd16:	 RIP: 42fd16	 Bytes: 0
block_.L_42fd16:

  ; Code: movq 0x6cb900, %rax	 RIP: 42fd16	 Bytes: 8
  %loadMem_42fd16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd16 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd16)
  store %struct.Memory* %call_42fd16, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42fd1e	 Bytes: 6
  %loadMem_42fd1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd1e = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd1e)
  store %struct.Memory* %call_42fd1e, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42fd24	 Bytes: 4
  %loadMem_42fd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd24 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd24)
  store %struct.Memory* %call_42fd24, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 42fd28	 Bytes: 3
  %loadMem_42fd28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd28 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd28)
  store %struct.Memory* %call_42fd28, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %edx	 RIP: 42fd2b	 Bytes: 3
  %loadMem_42fd2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd2b = call %struct.Memory* @routine_subl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd2b)
  store %struct.Memory* %call_42fd2b, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %esi	 RIP: 42fd2e	 Bytes: 3
  %loadMem_42fd2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd2e = call %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd2e)
  store %struct.Memory* %call_42fd2e, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %esi	 RIP: 42fd31	 Bytes: 3
  %loadMem_42fd31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd31 = call %struct.Memory* @routine_subl__0x10___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd31)
  store %struct.Memory* %call_42fd31, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %esi	 RIP: 42fd34	 Bytes: 3
  %loadMem_42fd34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd34 = call %struct.Memory* @routine_subl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd34)
  store %struct.Memory* %call_42fd34, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r8d	 RIP: 42fd37	 Bytes: 4
  %loadMem_42fd37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd37 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd37)
  store %struct.Memory* %call_42fd37, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r9d	 RIP: 42fd3b	 Bytes: 4
  %loadMem_42fd3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd3b = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd3b)
  store %struct.Memory* %call_42fd3b, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x43c(%rbp)	 RIP: 42fd3f	 Bytes: 6
  %loadMem_42fd3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd3f = call %struct.Memory* @routine_movl__esi__MINUS0x43c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd3f)
  store %struct.Memory* %call_42fd3f, %struct.Memory** %MEMORY

  ; Code: movl %edx, %esi	 RIP: 42fd45	 Bytes: 2
  %loadMem_42fd45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd45 = call %struct.Memory* @routine_movl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd45)
  store %struct.Memory* %call_42fd45, %struct.Memory** %MEMORY

  ; Code: movl -0x43c(%rbp), %edx	 RIP: 42fd47	 Bytes: 6
  %loadMem_42fd47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd47 = call %struct.Memory* @routine_movl_MINUS0x43c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd47)
  store %struct.Memory* %call_42fd47, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x440(%rbp)	 RIP: 42fd4d	 Bytes: 6
  %loadMem_42fd4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd4d = call %struct.Memory* @routine_movl__ecx__MINUS0x440__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd4d)
  store %struct.Memory* %call_42fd4d, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 42fd53	 Bytes: 3
  %loadMem_42fd53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd53 = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd53)
  store %struct.Memory* %call_42fd53, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %r8d	 RIP: 42fd56	 Bytes: 3
  %loadMem_42fd56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd56 = call %struct.Memory* @routine_movl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd56)
  store %struct.Memory* %call_42fd56, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42fd59	 Bytes: 5
  %loadMem1_42fd59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42fd59 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42fd59, i64 453559, i64 5, i64 5)
  store %struct.Memory* %call1_42fd59, %struct.Memory** %MEMORY

  %loadMem2_42fd59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42fd59 = load i64, i64* %3
  %call2_42fd59 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42fd59, %struct.Memory* %loadMem2_42fd59)
  store %struct.Memory* %call2_42fd59, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42fd5e	 Bytes: 3
  %loadMem_42fd5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd5e = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd5e)
  store %struct.Memory* %call_42fd5e, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42fd61	 Bytes: 4
  %loadMem_42fd61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd61 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd61)
  store %struct.Memory* %call_42fd61, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42fd65	 Bytes: 3
  %loadMem_42fd65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd65 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd65)
  store %struct.Memory* %call_42fd65, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42fd68	 Bytes: 3
  %loadMem_42fd68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd68 = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd68)
  store %struct.Memory* %call_42fd68, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42fd6b	 Bytes: 3
  %loadMem_42fd6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd6b = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd6b)
  store %struct.Memory* %call_42fd6b, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42fd6e	 Bytes: 3
  %loadMem_42fd6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd6e = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd6e)
  store %struct.Memory* %call_42fd6e, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42fd71	 Bytes: 2
  %loadMem_42fd71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd71 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd71)
  store %struct.Memory* %call_42fd71, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x444(%rbp)	 RIP: 42fd73	 Bytes: 6
  %loadMem_42fd73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd73 = call %struct.Memory* @routine_movl__ecx__MINUS0x444__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd73)
  store %struct.Memory* %call_42fd73, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x450(%rbp)	 RIP: 42fd79	 Bytes: 7
  %loadMem_42fd79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd79 = call %struct.Memory* @routine_movq__rdi__MINUS0x450__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd79)
  store %struct.Memory* %call_42fd79, %struct.Memory** %MEMORY

  ; Code: jge .L_42fd97	 RIP: 42fd80	 Bytes: 6
  %loadMem_42fd80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd80 = call %struct.Memory* @routine_jge_.L_42fd97(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd80, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fd80, %struct.Memory** %MEMORY

  %loadBr_42fd80 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fd80 = icmp eq i8 %loadBr_42fd80, 1
  br i1 %cmpBr_42fd80, label %block_.L_42fd97, label %block_42fd86

block_42fd86:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42fd86	 Bytes: 3
  %loadMem_42fd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd86 = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd86)
  store %struct.Memory* %call_42fd86, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fd89	 Bytes: 3
  %loadMem_42fd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd89 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd89)
  store %struct.Memory* %call_42fd89, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x454(%rbp)	 RIP: 42fd8c	 Bytes: 6
  %loadMem_42fd8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd8c = call %struct.Memory* @routine_movl__eax__MINUS0x454__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd8c)
  store %struct.Memory* %call_42fd8c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fda3	 RIP: 42fd92	 Bytes: 5
  %loadMem_42fd92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd92 = call %struct.Memory* @routine_jmpq_.L_42fda3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd92, i64 17, i64 5)
  store %struct.Memory* %call_42fd92, %struct.Memory** %MEMORY

  br label %block_.L_42fda3

  ; Code: .L_42fd97:	 RIP: 42fd97	 Bytes: 0
block_.L_42fd97:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42fd97	 Bytes: 3
  %loadMem_42fd97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd97 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd97)
  store %struct.Memory* %call_42fd97, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fd9a	 Bytes: 3
  %loadMem_42fd9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd9a = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd9a)
  store %struct.Memory* %call_42fd9a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x454(%rbp)	 RIP: 42fd9d	 Bytes: 6
  %loadMem_42fd9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fd9d = call %struct.Memory* @routine_movl__eax__MINUS0x454__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fd9d)
  store %struct.Memory* %call_42fd9d, %struct.Memory** %MEMORY

  ; Code: .L_42fda3:	 RIP: 42fda3	 Bytes: 0
  br label %block_.L_42fda3
block_.L_42fda3:

  ; Code: movl -0x454(%rbp), %eax	 RIP: 42fda3	 Bytes: 6
  %loadMem_42fda3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fda3 = call %struct.Memory* @routine_movl_MINUS0x454__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fda3)
  store %struct.Memory* %call_42fda3, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fda9	 Bytes: 3
  %loadMem_42fda9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fda9 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fda9)
  store %struct.Memory* %call_42fda9, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 42fdac	 Bytes: 3
  %loadMem_42fdac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdac = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdac)
  store %struct.Memory* %call_42fdac, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 42fdaf	 Bytes: 3
  %loadMem_42fdaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdaf = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdaf)
  store %struct.Memory* %call_42fdaf, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42fdb2	 Bytes: 3
  %loadMem_42fdb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdb2 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdb2)
  store %struct.Memory* %call_42fdb2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 42fdb5	 Bytes: 3
  %loadMem_42fdb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdb5 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdb5)
  store %struct.Memory* %call_42fdb5, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42fdb8	 Bytes: 2
  %loadMem_42fdb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdb8 = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdb8)
  store %struct.Memory* %call_42fdb8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x458(%rbp)	 RIP: 42fdba	 Bytes: 6
  %loadMem_42fdba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdba = call %struct.Memory* @routine_movl__eax__MINUS0x458__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdba)
  store %struct.Memory* %call_42fdba, %struct.Memory** %MEMORY

  ; Code: jge .L_42fdd7	 RIP: 42fdc0	 Bytes: 6
  %loadMem_42fdc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdc0 = call %struct.Memory* @routine_jge_.L_42fdd7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdc0, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fdc0, %struct.Memory** %MEMORY

  %loadBr_42fdc0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fdc0 = icmp eq i8 %loadBr_42fdc0, 1
  br i1 %cmpBr_42fdc0, label %block_.L_42fdd7, label %block_42fdc6

block_42fdc6:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42fdc6	 Bytes: 3
  %loadMem_42fdc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdc6 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdc6)
  store %struct.Memory* %call_42fdc6, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fdc9	 Bytes: 3
  %loadMem_42fdc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdc9 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdc9)
  store %struct.Memory* %call_42fdc9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x45c(%rbp)	 RIP: 42fdcc	 Bytes: 6
  %loadMem_42fdcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdcc = call %struct.Memory* @routine_movl__eax__MINUS0x45c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdcc)
  store %struct.Memory* %call_42fdcc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fde3	 RIP: 42fdd2	 Bytes: 5
  %loadMem_42fdd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdd2 = call %struct.Memory* @routine_jmpq_.L_42fde3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdd2, i64 17, i64 5)
  store %struct.Memory* %call_42fdd2, %struct.Memory** %MEMORY

  br label %block_.L_42fde3

  ; Code: .L_42fdd7:	 RIP: 42fdd7	 Bytes: 0
block_.L_42fdd7:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42fdd7	 Bytes: 3
  %loadMem_42fdd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdd7 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdd7)
  store %struct.Memory* %call_42fdd7, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42fdda	 Bytes: 3
  %loadMem_42fdda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdda = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdda)
  store %struct.Memory* %call_42fdda, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x45c(%rbp)	 RIP: 42fddd	 Bytes: 6
  %loadMem_42fddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fddd = call %struct.Memory* @routine_movl__eax__MINUS0x45c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fddd)
  store %struct.Memory* %call_42fddd, %struct.Memory** %MEMORY

  ; Code: .L_42fde3:	 RIP: 42fde3	 Bytes: 0
  br label %block_.L_42fde3
block_.L_42fde3:

  ; Code: movl -0x45c(%rbp), %eax	 RIP: 42fde3	 Bytes: 6
  %loadMem_42fde3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fde3 = call %struct.Memory* @routine_movl_MINUS0x45c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fde3)
  store %struct.Memory* %call_42fde3, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fde9	 Bytes: 3
  %loadMem_42fde9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fde9 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fde9)
  store %struct.Memory* %call_42fde9, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42fdec	 Bytes: 3
  %loadMem_42fdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdec = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdec)
  store %struct.Memory* %call_42fdec, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42fdef	 Bytes: 4
  %loadMem_42fdef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdef = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdef)
  store %struct.Memory* %call_42fdef, %struct.Memory** %MEMORY

  ; Code: movq -0x450(%rbp), %rdi	 RIP: 42fdf3	 Bytes: 7
  %loadMem_42fdf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdf3 = call %struct.Memory* @routine_movq_MINUS0x450__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdf3)
  store %struct.Memory* %call_42fdf3, %struct.Memory** %MEMORY

  ; Code: movl -0x458(%rbp), %esi	 RIP: 42fdfa	 Bytes: 6
  %loadMem_42fdfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fdfa = call %struct.Memory* @routine_movl_MINUS0x458__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fdfa)
  store %struct.Memory* %call_42fdfa, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42fe00	 Bytes: 2
  %loadMem_42fe00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe00 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe00)
  store %struct.Memory* %call_42fe00, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42fe02	 Bytes: 5
  %loadMem1_42fe02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42fe02 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42fe02, i64 453390, i64 5, i64 5)
  store %struct.Memory* %call1_42fe02, %struct.Memory** %MEMORY

  %loadMem2_42fe02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42fe02 = load i64, i64* %3
  %call2_42fe02 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42fe02, %struct.Memory* %loadMem2_42fe02)
  store %struct.Memory* %call2_42fe02, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42fe07	 Bytes: 5
  %loadMem_42fe07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe07 = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe07)
  store %struct.Memory* %call_42fe07, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42fe0c	 Bytes: 3
  %loadMem_42fe0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe0c = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe0c)
  store %struct.Memory* %call_42fe0c, %struct.Memory** %MEMORY

  ; Code: movl -0x444(%rbp), %esi	 RIP: 42fe0f	 Bytes: 6
  %loadMem_42fe0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe0f = call %struct.Memory* @routine_movl_MINUS0x444__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe0f)
  store %struct.Memory* %call_42fe0f, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42fe15	 Bytes: 2
  %loadMem_42fe15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe15 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe15)
  store %struct.Memory* %call_42fe15, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42fe17	 Bytes: 3
  %loadMem_42fe17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe17 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe17)
  store %struct.Memory* %call_42fe17, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42fe1a	 Bytes: 2
  %loadMem_42fe1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe1a = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe1a)
  store %struct.Memory* %call_42fe1a, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42fe1c	 Bytes: 1
  %loadMem_42fe1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe1c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe1c)
  store %struct.Memory* %call_42fe1c, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42fe1d	 Bytes: 2
  %loadMem_42fe1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe1d = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe1d)
  store %struct.Memory* %call_42fe1d, %struct.Memory** %MEMORY

  ; Code: movl -0x440(%rbp), %ecx	 RIP: 42fe1f	 Bytes: 6
  %loadMem_42fe1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe1f = call %struct.Memory* @routine_movl_MINUS0x440__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe1f)
  store %struct.Memory* %call_42fe1f, %struct.Memory** %MEMORY

  ; Code: cmpl %eax, %ecx	 RIP: 42fe25	 Bytes: 2
  %loadMem_42fe25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe25 = call %struct.Memory* @routine_cmpl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe25)
  store %struct.Memory* %call_42fe25, %struct.Memory** %MEMORY

  ; Code: jge .L_42fe46	 RIP: 42fe27	 Bytes: 6
  %loadMem_42fe27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe27 = call %struct.Memory* @routine_jge_.L_42fe46(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe27, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_42fe27, %struct.Memory** %MEMORY

  %loadBr_42fe27 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fe27 = icmp eq i8 %loadBr_42fe27, 1
  br i1 %cmpBr_42fe27, label %block_.L_42fe46, label %block_42fe2d

block_42fe2d:
  ; Code: movq 0x6cb900, %rax	 RIP: 42fe2d	 Bytes: 8
  %loadMem_42fe2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe2d = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe2d)
  store %struct.Memory* %call_42fe2d, %struct.Memory** %MEMORY

  ; Code: movl 0x11bec(%rax), %ecx	 RIP: 42fe35	 Bytes: 6
  %loadMem_42fe35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe35 = call %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe35)
  store %struct.Memory* %call_42fe35, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x460(%rbp)	 RIP: 42fe3b	 Bytes: 6
  %loadMem_42fe3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe3b = call %struct.Memory* @routine_movl__ecx__MINUS0x460__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe3b)
  store %struct.Memory* %call_42fe3b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42ff3c	 RIP: 42fe41	 Bytes: 5
  %loadMem_42fe41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe41 = call %struct.Memory* @routine_jmpq_.L_42ff3c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe41, i64 251, i64 5)
  store %struct.Memory* %call_42fe41, %struct.Memory** %MEMORY

  br label %block_.L_42ff3c

  ; Code: .L_42fe46:	 RIP: 42fe46	 Bytes: 0
block_.L_42fe46:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42fe46	 Bytes: 4
  %loadMem_42fe46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe46 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe46)
  store %struct.Memory* %call_42fe46, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42fe4a	 Bytes: 3
  %loadMem_42fe4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe4a = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe4a)
  store %struct.Memory* %call_42fe4a, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fe4d	 Bytes: 3
  %loadMem_42fe4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe4d = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe4d)
  store %struct.Memory* %call_42fe4d, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %ecx	 RIP: 42fe50	 Bytes: 3
  %loadMem_42fe50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe50 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe50)
  store %struct.Memory* %call_42fe50, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %ecx	 RIP: 42fe53	 Bytes: 3
  %loadMem_42fe53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe53 = call %struct.Memory* @routine_subl__0x10___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe53)
  store %struct.Memory* %call_42fe53, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 42fe56	 Bytes: 3
  %loadMem_42fe56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe56 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe56)
  store %struct.Memory* %call_42fe56, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %edx	 RIP: 42fe59	 Bytes: 3
  %loadMem_42fe59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe59 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe59)
  store %struct.Memory* %call_42fe59, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42fe5c	 Bytes: 4
  %loadMem_42fe5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe5c = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe5c)
  store %struct.Memory* %call_42fe5c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42fe60	 Bytes: 2
  %loadMem_42fe60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe60 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe60)
  store %struct.Memory* %call_42fe60, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x464(%rbp)	 RIP: 42fe62	 Bytes: 6
  %loadMem_42fe62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe62 = call %struct.Memory* @routine_movl__edx__MINUS0x464__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe62)
  store %struct.Memory* %call_42fe62, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 42fe68	 Bytes: 2
  %loadMem_42fe68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe68 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe68)
  store %struct.Memory* %call_42fe68, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 42fe6a	 Bytes: 6
  %loadMem_42fe6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe6a = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe6a)
  store %struct.Memory* %call_42fe6a, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42fe70	 Bytes: 5
  %loadMem1_42fe70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42fe70 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42fe70, i64 453280, i64 5, i64 5)
  store %struct.Memory* %call1_42fe70, %struct.Memory** %MEMORY

  %loadMem2_42fe70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42fe70 = load i64, i64* %3
  %call2_42fe70 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42fe70, %struct.Memory* %loadMem2_42fe70)
  store %struct.Memory* %call2_42fe70, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %ecx	 RIP: 42fe75	 Bytes: 3
  %loadMem_42fe75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe75 = call %struct.Memory* @routine_movzwl__ax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe75)
  store %struct.Memory* %call_42fe75, %struct.Memory** %MEMORY

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42fe78	 Bytes: 4
  %loadMem_42fe78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe78 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe78)
  store %struct.Memory* %call_42fe78, %struct.Memory** %MEMORY

  ; Code: movl -0x28(%rbp), %edx	 RIP: 42fe7c	 Bytes: 3
  %loadMem_42fe7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe7c = call %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe7c)
  store %struct.Memory* %call_42fe7c, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %edx	 RIP: 42fe7f	 Bytes: 3
  %loadMem_42fe7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe7f = call %struct.Memory* @routine_addl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe7f)
  store %struct.Memory* %call_42fe7f, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 42fe82	 Bytes: 3
  %loadMem_42fe82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe82 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe82)
  store %struct.Memory* %call_42fe82, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %esi	 RIP: 42fe85	 Bytes: 3
  %loadMem_42fe85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe85 = call %struct.Memory* @routine_addl__0x2___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe85)
  store %struct.Memory* %call_42fe85, %struct.Memory** %MEMORY

  ; Code: cmpl %esi, %edx	 RIP: 42fe88	 Bytes: 2
  %loadMem_42fe88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe88 = call %struct.Memory* @routine_cmpl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe88)
  store %struct.Memory* %call_42fe88, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x468(%rbp)	 RIP: 42fe8a	 Bytes: 6
  %loadMem_42fe8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe8a = call %struct.Memory* @routine_movl__ecx__MINUS0x468__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe8a)
  store %struct.Memory* %call_42fe8a, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x470(%rbp)	 RIP: 42fe90	 Bytes: 7
  %loadMem_42fe90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe90 = call %struct.Memory* @routine_movq__rdi__MINUS0x470__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe90)
  store %struct.Memory* %call_42fe90, %struct.Memory** %MEMORY

  ; Code: jge .L_42feae	 RIP: 42fe97	 Bytes: 6
  %loadMem_42fe97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe97 = call %struct.Memory* @routine_jge_.L_42feae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe97, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fe97, %struct.Memory** %MEMORY

  %loadBr_42fe97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fe97 = icmp eq i8 %loadBr_42fe97, 1
  br i1 %cmpBr_42fe97, label %block_.L_42feae, label %block_42fe9d

block_42fe9d:
  ; Code: movl -0x28(%rbp), %eax	 RIP: 42fe9d	 Bytes: 3
  %loadMem_42fe9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fe9d = call %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fe9d)
  store %struct.Memory* %call_42fe9d, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fea0	 Bytes: 3
  %loadMem_42fea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fea0 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fea0)
  store %struct.Memory* %call_42fea0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x474(%rbp)	 RIP: 42fea3	 Bytes: 6
  %loadMem_42fea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fea3 = call %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fea3)
  store %struct.Memory* %call_42fea3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42feba	 RIP: 42fea9	 Bytes: 5
  %loadMem_42fea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fea9 = call %struct.Memory* @routine_jmpq_.L_42feba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fea9, i64 17, i64 5)
  store %struct.Memory* %call_42fea9, %struct.Memory** %MEMORY

  br label %block_.L_42feba

  ; Code: .L_42feae:	 RIP: 42feae	 Bytes: 0
block_.L_42feae:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42feae	 Bytes: 3
  %loadMem_42feae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42feae = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42feae)
  store %struct.Memory* %call_42feae, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42feb1	 Bytes: 3
  %loadMem_42feb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42feb1 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42feb1)
  store %struct.Memory* %call_42feb1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x474(%rbp)	 RIP: 42feb4	 Bytes: 6
  %loadMem_42feb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42feb4 = call %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42feb4)
  store %struct.Memory* %call_42feb4, %struct.Memory** %MEMORY

  ; Code: .L_42feba:	 RIP: 42feba	 Bytes: 0
  br label %block_.L_42feba
block_.L_42feba:

  ; Code: movl -0x474(%rbp), %eax	 RIP: 42feba	 Bytes: 6
  %loadMem_42feba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42feba = call %struct.Memory* @routine_movl_MINUS0x474__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42feba)
  store %struct.Memory* %call_42feba, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42fec0	 Bytes: 3
  %loadMem_42fec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fec0 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fec0)
  store %struct.Memory* %call_42fec0, %struct.Memory** %MEMORY

  ; Code: movl -0x24(%rbp), %ecx	 RIP: 42fec3	 Bytes: 3
  %loadMem_42fec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fec3 = call %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fec3)
  store %struct.Memory* %call_42fec3, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %ecx	 RIP: 42fec6	 Bytes: 3
  %loadMem_42fec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fec6 = call %struct.Memory* @routine_addl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fec6)
  store %struct.Memory* %call_42fec6, %struct.Memory** %MEMORY

  ; Code: movl -0x18(%rbp), %edx	 RIP: 42fec9	 Bytes: 3
  %loadMem_42fec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fec9 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fec9)
  store %struct.Memory* %call_42fec9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 42fecc	 Bytes: 3
  %loadMem_42fecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fecc = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fecc)
  store %struct.Memory* %call_42fecc, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %ecx	 RIP: 42fecf	 Bytes: 2
  %loadMem_42fecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fecf = call %struct.Memory* @routine_cmpl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fecf)
  store %struct.Memory* %call_42fecf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x478(%rbp)	 RIP: 42fed1	 Bytes: 6
  %loadMem_42fed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fed1 = call %struct.Memory* @routine_movl__eax__MINUS0x478__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fed1)
  store %struct.Memory* %call_42fed1, %struct.Memory** %MEMORY

  ; Code: jge .L_42feee	 RIP: 42fed7	 Bytes: 6
  %loadMem_42fed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fed7 = call %struct.Memory* @routine_jge_.L_42feee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fed7, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_42fed7, %struct.Memory** %MEMORY

  %loadBr_42fed7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42fed7 = icmp eq i8 %loadBr_42fed7, 1
  br i1 %cmpBr_42fed7, label %block_.L_42feee, label %block_42fedd

block_42fedd:
  ; Code: movl -0x24(%rbp), %eax	 RIP: 42fedd	 Bytes: 3
  %loadMem_42fedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fedd = call %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fedd)
  store %struct.Memory* %call_42fedd, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42fee0	 Bytes: 3
  %loadMem_42fee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fee0 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fee0)
  store %struct.Memory* %call_42fee0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x47c(%rbp)	 RIP: 42fee3	 Bytes: 6
  %loadMem_42fee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fee3 = call %struct.Memory* @routine_movl__eax__MINUS0x47c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fee3)
  store %struct.Memory* %call_42fee3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42fefa	 RIP: 42fee9	 Bytes: 5
  %loadMem_42fee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fee9 = call %struct.Memory* @routine_jmpq_.L_42fefa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fee9, i64 17, i64 5)
  store %struct.Memory* %call_42fee9, %struct.Memory** %MEMORY

  br label %block_.L_42fefa

  ; Code: .L_42feee:	 RIP: 42feee	 Bytes: 0
block_.L_42feee:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42feee	 Bytes: 3
  %loadMem_42feee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42feee = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42feee)
  store %struct.Memory* %call_42feee, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42fef1	 Bytes: 3
  %loadMem_42fef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fef1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fef1)
  store %struct.Memory* %call_42fef1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x47c(%rbp)	 RIP: 42fef4	 Bytes: 6
  %loadMem_42fef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fef4 = call %struct.Memory* @routine_movl__eax__MINUS0x47c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fef4)
  store %struct.Memory* %call_42fef4, %struct.Memory** %MEMORY

  ; Code: .L_42fefa:	 RIP: 42fefa	 Bytes: 0
  br label %block_.L_42fefa
block_.L_42fefa:

  ; Code: movl -0x47c(%rbp), %eax	 RIP: 42fefa	 Bytes: 6
  %loadMem_42fefa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42fefa = call %struct.Memory* @routine_movl_MINUS0x47c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42fefa)
  store %struct.Memory* %call_42fefa, %struct.Memory** %MEMORY

  ; Code: subl $0x10, %eax	 RIP: 42ff00	 Bytes: 3
  %loadMem_42ff00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff00 = call %struct.Memory* @routine_subl__0x10___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff00)
  store %struct.Memory* %call_42ff00, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %ecx	 RIP: 42ff03	 Bytes: 3
  %loadMem_42ff03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff03 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff03)
  store %struct.Memory* %call_42ff03, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 42ff06	 Bytes: 4
  %loadMem_42ff06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff06 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff06)
  store %struct.Memory* %call_42ff06, %struct.Memory** %MEMORY

  ; Code: movq -0x470(%rbp), %rdi	 RIP: 42ff0a	 Bytes: 7
  %loadMem_42ff0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff0a = call %struct.Memory* @routine_movq_MINUS0x470__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff0a)
  store %struct.Memory* %call_42ff0a, %struct.Memory** %MEMORY

  ; Code: movl -0x478(%rbp), %esi	 RIP: 42ff11	 Bytes: 6
  %loadMem_42ff11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff11 = call %struct.Memory* @routine_movl_MINUS0x478__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff11)
  store %struct.Memory* %call_42ff11, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 42ff17	 Bytes: 2
  %loadMem_42ff17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff17 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff17)
  store %struct.Memory* %call_42ff17, %struct.Memory** %MEMORY

  ; Code: callq .FastPelY_14	 RIP: 42ff19	 Bytes: 5
  %loadMem1_42ff19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ff19 = call %struct.Memory* @routine_callq_.FastPelY_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ff19, i64 453111, i64 5, i64 5)
  store %struct.Memory* %call1_42ff19, %struct.Memory** %MEMORY

  %loadMem2_42ff19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ff19 = load i64, i64* %3
  %call2_42ff19 = call %struct.Memory* @sub_49e910.FastPelY_14(%struct.State* %0, i64  %loadPC_42ff19, %struct.Memory* %loadMem2_42ff19)
  store %struct.Memory* %call2_42ff19, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %ecx	 RIP: 42ff1e	 Bytes: 5
  %loadMem_42ff1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff1e = call %struct.Memory* @routine_movl__0x2___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff1e)
  store %struct.Memory* %call_42ff1e, %struct.Memory** %MEMORY

  ; Code: movzwl %ax, %edx	 RIP: 42ff23	 Bytes: 3
  %loadMem_42ff23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff23 = call %struct.Memory* @routine_movzwl__ax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff23)
  store %struct.Memory* %call_42ff23, %struct.Memory** %MEMORY

  ; Code: movl -0x468(%rbp), %esi	 RIP: 42ff26	 Bytes: 6
  %loadMem_42ff26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff26 = call %struct.Memory* @routine_movl_MINUS0x468__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff26)
  store %struct.Memory* %call_42ff26, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 42ff2c	 Bytes: 2
  %loadMem_42ff2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff2c = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff2c)
  store %struct.Memory* %call_42ff2c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 42ff2e	 Bytes: 3
  %loadMem_42ff2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff2e = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff2e)
  store %struct.Memory* %call_42ff2e, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 42ff31	 Bytes: 2
  %loadMem_42ff31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff31 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff31)
  store %struct.Memory* %call_42ff31, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 42ff33	 Bytes: 1
  %loadMem_42ff33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff33 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff33)
  store %struct.Memory* %call_42ff33, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 42ff34	 Bytes: 2
  %loadMem_42ff34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff34 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff34)
  store %struct.Memory* %call_42ff34, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x460(%rbp)	 RIP: 42ff36	 Bytes: 6
  %loadMem_42ff36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff36 = call %struct.Memory* @routine_movl__eax__MINUS0x460__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff36)
  store %struct.Memory* %call_42ff36, %struct.Memory** %MEMORY

  ; Code: .L_42ff3c:	 RIP: 42ff3c	 Bytes: 0
  br label %block_.L_42ff3c
block_.L_42ff3c:

  ; Code: movl -0x460(%rbp), %eax	 RIP: 42ff3c	 Bytes: 6
  %loadMem_42ff3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff3c = call %struct.Memory* @routine_movl_MINUS0x460__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff3c)
  store %struct.Memory* %call_42ff3c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x438(%rbp)	 RIP: 42ff42	 Bytes: 6
  %loadMem_42ff42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff42 = call %struct.Memory* @routine_movl__eax__MINUS0x438__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff42)
  store %struct.Memory* %call_42ff42, %struct.Memory** %MEMORY

  ; Code: .L_42ff48:	 RIP: 42ff48	 Bytes: 0
  br label %block_.L_42ff48
block_.L_42ff48:

  ; Code: movl -0x438(%rbp), %eax	 RIP: 42ff48	 Bytes: 6
  %loadMem_42ff48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff48 = call %struct.Memory* @routine_movl_MINUS0x438__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff48)
  store %struct.Memory* %call_42ff48, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 42ff4e	 Bytes: 3
  %loadMem_42ff4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff4e = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff4e)
  store %struct.Memory* %call_42ff4e, %struct.Memory** %MEMORY

  ; Code: movq -0x3f0(%rbp), %rdi	 RIP: 42ff51	 Bytes: 7
  %loadMem_42ff51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff51 = call %struct.Memory* @routine_movq_MINUS0x3f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff51)
  store %struct.Memory* %call_42ff51, %struct.Memory** %MEMORY

  ; Code: movl -0x3fc(%rbp), %esi	 RIP: 42ff58	 Bytes: 6
  %loadMem_42ff58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff58 = call %struct.Memory* @routine_movl_MINUS0x3fc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff58)
  store %struct.Memory* %call_42ff58, %struct.Memory** %MEMORY

  ; Code: movl -0x3f8(%rbp), %edx	 RIP: 42ff5e	 Bytes: 6
  %loadMem_42ff5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff5e = call %struct.Memory* @routine_movl_MINUS0x3f8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff5e)
  store %struct.Memory* %call_42ff5e, %struct.Memory** %MEMORY

  ; Code: movzwl %cx, %ecx	 RIP: 42ff64	 Bytes: 3
  %loadMem_42ff64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff64 = call %struct.Memory* @routine_movzwl__cx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff64)
  store %struct.Memory* %call_42ff64, %struct.Memory** %MEMORY

  ; Code: callq .PutPel_14	 RIP: 42ff67	 Bytes: 5
  %loadMem1_42ff67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ff67 = call %struct.Memory* @routine_callq_.PutPel_14(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ff67, i64 451081, i64 5, i64 5)
  store %struct.Memory* %call1_42ff67, %struct.Memory** %MEMORY

  %loadMem2_42ff67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ff67 = load i64, i64* %3
  %call2_42ff67 = call %struct.Memory* @sub_49e170.PutPel_14(%struct.State* %0, i64  %loadPC_42ff67, %struct.Memory* %loadMem2_42ff67)
  store %struct.Memory* %call2_42ff67, %struct.Memory** %MEMORY

  ; Code: .L_42ff6c:	 RIP: 42ff6c	 Bytes: 0
  br label %block_.L_42ff6c
block_.L_42ff6c:

  ; Code: jmpq .L_42ff71	 RIP: 42ff6c	 Bytes: 5
  %loadMem_42ff6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff6c = call %struct.Memory* @routine_jmpq_.L_42ff71(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff6c, i64 5, i64 5)
  store %struct.Memory* %call_42ff6c, %struct.Memory** %MEMORY

  br label %block_.L_42ff71

  ; Code: .L_42ff71:	 RIP: 42ff71	 Bytes: 0
block_.L_42ff71:

  ; Code: jmpq .L_42ff76	 RIP: 42ff71	 Bytes: 5
  %loadMem_42ff71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff71 = call %struct.Memory* @routine_jmpq_.L_42ff76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff71, i64 5, i64 5)
  store %struct.Memory* %call_42ff71, %struct.Memory** %MEMORY

  br label %block_.L_42ff76

  ; Code: .L_42ff76:	 RIP: 42ff76	 Bytes: 0
block_.L_42ff76:

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 42ff76	 Bytes: 3
  %loadMem_42ff76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff76 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff76)
  store %struct.Memory* %call_42ff76, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 42ff79	 Bytes: 3
  %loadMem_42ff79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff79 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff79)
  store %struct.Memory* %call_42ff79, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 42ff7c	 Bytes: 3
  %loadMem_42ff7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff7c = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff7c)
  store %struct.Memory* %call_42ff7c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f106	 RIP: 42ff7f	 Bytes: 5
  %loadMem_42ff7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff7f = call %struct.Memory* @routine_jmpq_.L_42f106(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff7f, i64 -3705, i64 5)
  store %struct.Memory* %call_42ff7f, %struct.Memory** %MEMORY

  br label %block_.L_42f106

  ; Code: .L_42ff84:	 RIP: 42ff84	 Bytes: 0
block_.L_42ff84:

  ; Code: jmpq .L_42ff89	 RIP: 42ff84	 Bytes: 5
  %loadMem_42ff84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff84 = call %struct.Memory* @routine_jmpq_.L_42ff89(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff84, i64 5, i64 5)
  store %struct.Memory* %call_42ff84, %struct.Memory** %MEMORY

  br label %block_.L_42ff89

  ; Code: .L_42ff89:	 RIP: 42ff89	 Bytes: 0
block_.L_42ff89:

  ; Code: movl -0x18(%rbp), %eax	 RIP: 42ff89	 Bytes: 3
  %loadMem_42ff89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff89 = call %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff89)
  store %struct.Memory* %call_42ff89, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 42ff8c	 Bytes: 3
  %loadMem_42ff8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff8c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff8c)
  store %struct.Memory* %call_42ff8c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x18(%rbp)	 RIP: 42ff8f	 Bytes: 3
  %loadMem_42ff8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff8f = call %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff8f)
  store %struct.Memory* %call_42ff8f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42f0ee	 RIP: 42ff92	 Bytes: 5
  %loadMem_42ff92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff92 = call %struct.Memory* @routine_jmpq_.L_42f0ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff92, i64 -3748, i64 5)
  store %struct.Memory* %call_42ff92, %struct.Memory** %MEMORY

  br label %block_.L_42f0ee

  ; Code: .L_42ff97:	 RIP: 42ff97	 Bytes: 0
block_.L_42ff97:

  ; Code: movq -0x38(%rbp), %rdi	 RIP: 42ff97	 Bytes: 4
  %loadMem_42ff97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff97 = call %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff97)
  store %struct.Memory* %call_42ff97, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rsi	 RIP: 42ff9b	 Bytes: 4
  %loadMem_42ff9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff9b = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff9b)
  store %struct.Memory* %call_42ff9b, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42ff9f	 Bytes: 4
  %loadMem_42ff9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ff9f = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ff9f)
  store %struct.Memory* %call_42ff9f, %struct.Memory** %MEMORY

  ; Code: movl 0x18f8(%rax), %edx	 RIP: 42ffa3	 Bytes: 6
  %loadMem_42ffa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ffa3 = call %struct.Memory* @routine_movl_0x18f8__rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ffa3)
  store %struct.Memory* %call_42ffa3, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 42ffa9	 Bytes: 4
  %loadMem_42ffa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ffa9 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ffa9)
  store %struct.Memory* %call_42ffa9, %struct.Memory** %MEMORY

  ; Code: movl 0x18fc(%rax), %ecx	 RIP: 42ffad	 Bytes: 6
  %loadMem_42ffad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ffad = call %struct.Memory* @routine_movl_0x18fc__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ffad)
  store %struct.Memory* %call_42ffad, %struct.Memory** %MEMORY

  ; Code: callq .GenerateFullPelRepresentation	 RIP: 42ffb3	 Bytes: 5
  %loadMem1_42ffb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42ffb3 = call %struct.Memory* @routine_callq_.GenerateFullPelRepresentation(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42ffb3, i64 29, i64 5, i64 5)
  store %struct.Memory* %call1_42ffb3, %struct.Memory** %MEMORY

  %loadMem2_42ffb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42ffb3 = load i64, i64* %3
  %call2_42ffb3 = call %struct.Memory* @sub_42ffd0.GenerateFullPelRepresentation(%struct.State* %0, i64  %loadPC_42ffb3, %struct.Memory* %loadMem2_42ffb3)
  store %struct.Memory* %call2_42ffb3, %struct.Memory** %MEMORY

  ; Code: .L_42ffb8:	 RIP: 42ffb8	 Bytes: 0
  br label %block_.L_42ffb8
block_.L_42ffb8:

  ; Code: addq $0x478, %rsp	 RIP: 42ffb8	 Bytes: 7
  %loadMem_42ffb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ffb8 = call %struct.Memory* @routine_addq__0x478___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ffb8)
  store %struct.Memory* %call_42ffb8, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 42ffbf	 Bytes: 1
  %loadMem_42ffbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ffbf = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ffbf)
  store %struct.Memory* %call_42ffbf, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 42ffc0	 Bytes: 1
  %loadMem_42ffc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ffc0 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ffc0)
  store %struct.Memory* %call_42ffc0, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 42ffc1	 Bytes: 1
  %loadMem_42ffc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42ffc1 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42ffc1)
  store %struct.Memory* %call_42ffc1, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_42ffc1
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x478___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 1144)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rdi__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x1918__rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rdi__MINUS0x48__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_0x18f8__rdi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 6392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x18fc__rdi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 6396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %6, %3
  %8 = icmp ult i64 %6, %3
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %3
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %6, 63
  %31 = lshr i64 %3, 63
  %32 = xor i64 %30, %31
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0__0x1930__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 6448
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_42ddad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpq__0x0__0x1920__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6432
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_42ddb2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_42ffb8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_0x18f8__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 6392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6
  %8 = shl i64 %3, 32
  %9 = ashr exact i64 %8, 32
  %10 = sext i32 %7 to i64
  %11 = mul  i64 %10, %9
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull_0x18fc__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 6396
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x1___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.malloc_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__ecx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0x1920__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 6432
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %2, %6
  %8 = icmp ugt i64 %6, %2
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %2
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %2, 63
  %31 = lshr i64 %6, 63
  %32 = xor i64 %31, %30
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq_0x1920__rax____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 6432
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jne_.L_42de05(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x4c03bd___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4c03bd_type* @G__0x4c03bd to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_callq_.no_mem_exit(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x1930___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 6448)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x18fc__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 6396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x8___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 8)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x18f8__rcx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 6392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x8___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 8)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_shll__0x2___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__esi__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.get_mem2Dpel(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb8f8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0x504__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 1284
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_42de7e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x508__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1288
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_cmpl__0x0__0x3c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 60
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_42df0e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_movq__rax__0x1928__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 6440
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_cmpq_0x1928__rax____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 6440
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jne_.L_42ded1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4c03e0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4c03e0_type* @G__0x4c03e0 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_addq__0x1938___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 6456)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_movl__esi__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_0x1930__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6448
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x1920__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6432
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0xfffffffc__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addl__0x4___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 4)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_42e666(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0xfffffffc__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x18f8__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 6392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jge_.L_42e653(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x18fc__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 6396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x1c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 28
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42df95(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x64__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42df9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_42dfb2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42dfe9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jge_.L_42dfdd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x6c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42dfe3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_0x4b8c50___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x4b8c50_type* @G_0x4b8c50 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x18f8__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 6392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl_MINUS0x18__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e034(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e03a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x7c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42e051(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e091(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_cmpl_MINUS0x18__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42e07f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e088(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x80__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq__eax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x78__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = zext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl___rdx__rcx_2____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rsi_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x18f8__rsi____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 6392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__0x1___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_cmpl__r8d___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e0ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x94__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e0fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42e117(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e162(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42e14a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x9c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e156(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x9c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x90__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x88__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = shl i64 %3, 32
  %7 = ashr exact i64 %6, 32
  %8 = shl i64 %4, 32
  %9 = ashr exact i64 %8, 32
  %10 = mul  i64 %9, %7
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, 4294967295
  store i64 %12, i64* %2, align 8
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = icmp ne i64 %14, %10
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %11, 255
  %19 = tail call i32 @llvm.ctpop.i32(i32 %18) #22
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %25, align 1
  %26 = lshr i32 %11, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %16, i8* %29, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_0x4b8c58___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x4b8c58_type* @G_0x4b8c58 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rdi_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x18f8__rdi____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 6392
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl__0x1___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl__0x1___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_cmpl__r9d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0xa4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0xb0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e1e2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0xb4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e1ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42e20b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e256(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_subl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_42e23e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e24a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0xb0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_addl__0x2___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 2)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0xc8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e2b9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0xcc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e2c5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xcc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42e2e2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e32d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_addl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_42e315(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e321(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xd4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xd0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0xc8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xc0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xa0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x4b8c60___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x4b8c60_type* @G_0x4b8c60 to i64))
  ret %struct.Memory* %11
}
















define %struct.Memory* @routine_subl__0x2___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 2)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_movl__esi__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0xe8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e3b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0xec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e3c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_subl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42e3e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e42c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_subl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_42e414(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0xf4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e420(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0xf4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xf0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0xe8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_addl__0x3___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 3)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x100__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e48f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x104__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e49b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x104__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x104__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42e4b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x108__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e503(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_addl__0x3___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 3)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_42e4eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x10c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e4f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x10c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x10c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x108__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x100__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xdc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0xd8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__esi__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}














define %struct.Memory* @routine_cmpl_MINUS0x18__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e574(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x11c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e57d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x11c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42e59a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e5dd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jge_.L_42e5c8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx__MINUS0x124__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e5d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax__MINUS0x124__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x124__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 292
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x118__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_shll__0xa___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 10)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x726410___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x726410_type* @G_0x726410 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x4___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq__esi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_shll__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax____rcx__rdi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x5___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 5)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_addl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42df52(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42e658(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42df33(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_shll__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_42ec7c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_jge_.L_42ec69(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_shll__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x18fc__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 6396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 8)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}




define %struct.Memory* @routine_movl_MINUS0x30__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movl__eax__MINUS0x128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0x12c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e71e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x30__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e72a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x13c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__eax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x138__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi__rdx_8____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x12c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl___rdx__rdi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl_MINUS0x128__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 296
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_imull__eax___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl_0x4b8c58___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x4b8c58_type* @G_0x4b8c58 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x726410___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x726410_type* @G_0x726410 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_cmpl__r9d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdx__MINUS0x148__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r8d__MINUS0x14c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_42e799(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x154__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e7a5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x154__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x148__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdx__rcx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rcx__rsi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}












define %struct.Memory* @routine_movl__eax__MINUS0x158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e7f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x164__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e803(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x164__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq_MINUS0x160__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x158__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x150__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 336
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x14c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__r8d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_0x4b8c60___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0x4b8c60_type* @G_0x4b8c60 to i64))
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq__rdx__MINUS0x170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d__MINUS0x178__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_42e87c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x17c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e888(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x17c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x170__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl__eax__MINUS0x180__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x188__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42e8da(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x18c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e8e6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x18c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x400___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 1024)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x20___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 32)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq__eax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x188__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdi__rsi_8____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x180__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl___rsi__r8_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl_MINUS0x178__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 376
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_imull__eax___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl_MINUS0x174__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__r9d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x190__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 400
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_MINUS0x190__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 400
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R9D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_subl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x18__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl__0x8___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i32, i32* %R10D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 8)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_shll__0x1___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i32, i32* %R10D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x11bec__rsi____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72684
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_0x726410___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x726410_type* @G_0x726410 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rsi__r8_8____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl___rsi__r8_4____ebx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_addl__0x200___ebx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %9, i64 512)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x194__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ebx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EBX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_idivl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__eax___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x1a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d__MINUS0x1a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42e9bb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x11bec__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42e9f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x400___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 1024)
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_addl__0x200___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 512)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x1ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1ac__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x1a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1a8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42ea11(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42eac6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x11bec__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl___rcx__rsi_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_addl__0x200___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 512)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x1b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x1b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 440
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x1b4__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x1b8__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 440
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__eax___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42ea81(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x1bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42eaba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_movl__eax__MINUS0x1c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x1c0__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x1bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1bc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1b0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x1a0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x194__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1a4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 65535
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl__cx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.PutPel_14(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_shll__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_subl__0x8___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 8)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x6cb900___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x11bec__r8____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__0x200___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 512)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__eax__MINUS0x1c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 452
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r9d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x1c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x1c4__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 452
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_cmpl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x1d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42eb6a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x1d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42eb8f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x200___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 512)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x1dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 476
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1dc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 476
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x1d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1d8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42ebac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x1e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42ec37(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x1e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0x1e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x1e4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 484
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1e8__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42ec06(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x1ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42ec2b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl__eax__MINUS0x1f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x1f0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x1ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x1ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 492
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1e0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x1d0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1d4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 468
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1c8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jmpq_.L_42e68f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42ec6e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_42e66d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_addl__0x8___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 8)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_movl__ecx__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42f0e7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x3___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 3)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_42f0d4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_subl__0x10___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 16)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x10___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 16)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x11bec__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 72684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_subl__0x10___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 16)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_subl__0x10___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 16)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl_MINUS0x50__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x4c__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdi__MINUS0x1f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__esi__MINUS0x1fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r9d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x200__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r10d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r11d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x204__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.FastPelY_14(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movzwl__ax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x10___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 16)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x2___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 2)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__r8d___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x208__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x210__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x214__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 532
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42ed8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x218__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42ed96(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x218__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x210__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x214__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 532
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x2___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movzwl__ax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x208__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__edx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movl_MINUS0x1fc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 508
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_42edf9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x21c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 540
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42eebb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movl_MINUS0x50__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x220__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__ecx__MINUS0x224__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x230__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x234__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 564
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42ee6d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x238__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42ee79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x238__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 568
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x230__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x234__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x224__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 548
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x21c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 540
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x21c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 540
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42eed8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x23c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f0a2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_subl__0x10___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 16)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x50__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x4c__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x240__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 576
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x244__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r9d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






















define %struct.Memory* @routine_movl__ecx__MINUS0x248__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x250__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 592
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x254__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 596
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42ef65(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x258__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42ef71(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x258__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 600
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x250__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 592
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x254__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 596
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x248__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 584
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x244__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 580
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_42efd4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x25c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f096(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl__edx__MINUS0x260__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x260__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 608
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__ecx__MINUS0x264__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x270__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x274__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42f048(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x278__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f054(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x278__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 632
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x270__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 624
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x274__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 628
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x264__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 612
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x25c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x25c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 604
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x23c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 572
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x1f8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x204__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 516
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x200__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jmpq_.L_42ecc7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42f0d9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_42ecaf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jge_.L_42ff97(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jge_.L_42ff84(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax__MINUS0x27c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 636
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x27c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 636
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_42f528(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
































define %struct.Memory* @routine_movq__rdi__MINUS0x288__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__esi__MINUS0x28c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 652
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__ecx__MINUS0x290__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x294__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl_MINUS0x28__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_cmpl__esi___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ESI = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x298__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x2a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42f1dc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x2a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f1e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x2a4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 676
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_MINUS0x2a0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x2a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2a8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 680
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x298__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x28c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 652
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_42f259(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x2ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f31a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl__edx__MINUS0x2b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2b0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl__ecx__MINUS0x2b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x2c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42f2be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x2c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f2ca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x2c4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_MINUS0x2c0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x2c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2c8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x2b4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x2ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2ac__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 684
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42f337(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f4ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl__esi__MINUS0x2d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 720
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2d0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 720
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x2d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 724
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






















define %struct.Memory* @routine_movl__ecx__MINUS0x2d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x2e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42f3b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x2e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 740
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f3c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x2e4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_MINUS0x2e0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x2e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 744
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2e8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 744
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x2d8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x2d4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 724
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_42f432(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x2ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 748
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f4f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movl__edx__MINUS0x2f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2f0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 752
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl__ecx__MINUS0x2f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 756
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x300__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42f497(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f4a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x304__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_MINUS0x300__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x308__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 776
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x308__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 776
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x2f4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 756
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x2ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 748
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 748
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x2cc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x288__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 648
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x294__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 660
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x290__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 656
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jmpq_.L_42ff71(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax__MINUS0x30c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 780
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x30c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 780
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_42f56c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x310__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x310__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_42f5b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x314__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 788
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x314__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 788
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_42faad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x318__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 792
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x318__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 792
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x3___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


























define %struct.Memory* @routine_movl_MINUS0x24__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 36
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addl__0x2___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 2)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_addl__0x1___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i32, i32* %R10D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_cmpl__r10d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x320__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x324__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x328__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 808
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0x32c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 812
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdx__MINUS0x338__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 824
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r8d__MINUS0x33c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 828
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42f62e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x340__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 832
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f63a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x340__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 832
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x338__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 824
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x33c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 828
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movl__ecx__MINUS0x344__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 836
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x350__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42f697(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x354__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 852
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f6a3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x354__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 852
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movq_MINUS0x350__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x358__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 856
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x358__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 856
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x344__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 836
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x32c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 812
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_42f717(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x35c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 860
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f81b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movq__rdi__MINUS0x368__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 872
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x36c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 876
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42f753(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x370__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 880
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f75f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x370__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 880
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x368__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 872
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x36c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 876
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movl__ecx__MINUS0x374__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 884
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x380__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 896
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42f7bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x384__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 900
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f7c8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x384__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 900
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movq_MINUS0x380__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 896
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x388__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 904
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x388__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 904
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x374__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 884
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x35c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 860
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x35c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 860
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42f838(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x38c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 908
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fa84(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






















define %struct.Memory* @routine_movl__ecx__MINUS0x390__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 912
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x398__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 920
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x39c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 924
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42f88b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x3a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 928
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f897(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x3a0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 928
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x398__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 920
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x39c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 924
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movl__ecx__MINUS0x3a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x3b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 944
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42f8f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x3b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 948
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f900(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x3b4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 948
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movq_MINUS0x3b0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 944
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x3b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 952
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x3b8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 952
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x3a4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 932
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x390__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 912
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_42f974(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x3bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 956
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fa78(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_movq__rdi__MINUS0x3c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 968
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x3cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 972
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42f9b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x3d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 976
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42f9bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x3d0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 976
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x3c8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 968
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x3cc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 972
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




















define %struct.Memory* @routine_movl__ecx__MINUS0x3d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 980
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x3e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 992
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42fa19(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x3e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 996
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fa25(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x3e4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 996
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movq_MINUS0x3e0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 992
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x3e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1000
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x3e8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1000
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x3d4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 980
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x3bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 956
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x3bc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 956
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x38c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 908
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x320__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x324__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x328__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 808
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jmpq_.L_42ff6c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


































define %struct.Memory* @routine_movq__rdi__MINUS0x3f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1008
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__esi__MINUS0x3f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1012
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__ecx__MINUS0x3f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1016
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x3fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1020
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


















define %struct.Memory* @routine_movl__ecx__MINUS0x400__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1024
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x408__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1032
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42fb54(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x40c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1036
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fb60(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x40c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1036
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x410__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1040
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42fb94(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x414__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1044
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fba0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x414__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1044
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x408__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1032
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x410__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1040
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x400__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1024
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x3f4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1012
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_42fc03(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x418__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fcf9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl__edx__MINUS0x41c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1052
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x41c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1052
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl__ecx__MINUS0x420__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x428__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1064
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42fc6b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x42c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1068
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fc77(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x42c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1068
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x430__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1072
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42fcab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x434__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1076
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fcb7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x434__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1076
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x428__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1064
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x430__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1072
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x420__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x418__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x418__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1048
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jle_.L_42fd16(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x438__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1080
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42ff48(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






















define %struct.Memory* @routine_movl__esi__MINUS0x43c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1084
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x43c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1084
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x440__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1088
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






















define %struct.Memory* @routine_movl__ecx__MINUS0x444__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1092
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x450__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1104
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42fd97(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x454__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fda3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x454__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x458__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42fdd7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x45c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fde3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x45c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x450__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x458__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x444__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1092
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_MINUS0x440__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1088
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_42fe46(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__ecx__MINUS0x460__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1120
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42ff3c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl__edx__MINUS0x464__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1124
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_movl__ecx__MINUS0x468__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdi__MINUS0x470__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1136
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jge_.L_42feae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42feba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x474__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movl__eax__MINUS0x478__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_42feee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x47c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42fefa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl_MINUS0x47c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x470__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x478__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl_MINUS0x468__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl__eax__MINUS0x460__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x460__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x438__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1080
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x3f0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1008
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x3fc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1020
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x3f8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1016
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jmpq_.L_42ff76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_42f106(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42ff89(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_42f0ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq_MINUS0x40__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x18f8__rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 6392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_callq_.GenerateFullPelRepresentation(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__0x478___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 1144)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

