; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x27546c__rip__type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6d4690_type = type <{ [8 x i8] }>
%G_0x6d4740_type = type <{ [8 x i8] }>
%G_0x6f9728_type = type <{ [8 x i8] }>
%G_0x70f6d0_type = type <{ [4 x i8] }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
%G_0x70fcf8_type = type <{ [8 x i8] }>
%G_0x710790_type = type <{ [4 x i8] }>
%G_0x7107a0_type = type <{ [4 x i8] }>
%G_0x722b20_type = type <{ [8 x i8] }>
%G_0x722b28_type = type <{ [8 x i8] }>
%G_0x7242a0_type = type <{ [4 x i8] }>
%G_0x7247b0_type = type <{ [4 x i8] }>
%G_0x7247b4_type = type <{ [4 x i8] }>
%G_0x748__rip__type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x27546c__rip_ = global %G_0x27546c__rip__type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6d4690 = global %G_0x6d4690_type zeroinitializer
@G_0x6d4740 = global %G_0x6d4740_type zeroinitializer
@G_0x6f9728 = global %G_0x6f9728_type zeroinitializer
@G_0x70f6d0 = global %G_0x70f6d0_type zeroinitializer
@G_0x70fcf0 = global %G_0x70fcf0_type zeroinitializer
@G_0x70fcf8 = global %G_0x70fcf8_type zeroinitializer
@G_0x710790 = global %G_0x710790_type zeroinitializer
@G_0x7107a0 = global %G_0x7107a0_type zeroinitializer
@G_0x722b20 = global %G_0x722b20_type zeroinitializer
@G_0x722b28 = global %G_0x722b28_type zeroinitializer
@G_0x7242a0 = global %G_0x7242a0_type zeroinitializer
@G_0x7247b0 = global %G_0x7247b0_type zeroinitializer
@G_0x7247b4 = global %G_0x7247b4_type zeroinitializer
@G_0x748__rip_ = global %G_0x748__rip__type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

; Function Attrs: alwaysinline
define %struct.Memory* @test_wp_B_slice(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_4b05b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_4b05b0, %struct.Memory** %MEMORY
  %loadMem_4b05b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i812 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i813 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i812
  %27 = load i64, i64* %PC.i811
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i811
  store i64 %26, i64* %RBP.i813, align 8
  store %struct.Memory* %loadMem_4b05b1, %struct.Memory** %MEMORY
  %loadMem_4b05b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1708 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1709 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1709
  %36 = load i64, i64* %PC.i1708
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1708
  %38 = sub i64 %35, 35472
  store i64 %38, i64* %RSP.i1709, align 8
  %39 = icmp ult i64 %35, 35472
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 35472, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_4b05b4, %struct.Memory** %MEMORY
  %loadMem_4b05bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1713 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %71 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %70, i64 0, i64 0
  %YMM0.i1714 = bitcast %union.VectorReg* %71 to %"class.std::bitset"*
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %73 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %72, i64 0, i64 0
  %XMM0.i1715 = bitcast %union.VectorReg* %73 to %union.vec128_t*
  %74 = bitcast %"class.std::bitset"* %YMM0.i1714 to i8*
  %75 = bitcast %"class.std::bitset"* %YMM0.i1714 to i8*
  %76 = bitcast %union.vec128_t* %XMM0.i1715 to i8*
  %77 = load i64, i64* %PC.i1713
  %78 = add i64 %77, 3
  store i64 %78, i64* %PC.i1713
  %79 = bitcast i8* %75 to i64*
  %80 = load i64, i64* %79, align 1
  %81 = getelementptr inbounds i8, i8* %75, i64 8
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 1
  %84 = bitcast i8* %76 to i64*
  %85 = load i64, i64* %84, align 1
  %86 = getelementptr inbounds i8, i8* %76, i64 8
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 1
  %89 = xor i64 %85, %80
  %90 = xor i64 %88, %83
  %91 = trunc i64 %89 to i32
  %92 = lshr i64 %89, 32
  %93 = trunc i64 %92 to i32
  %94 = bitcast i8* %74 to i32*
  store i32 %91, i32* %94, align 1
  %95 = getelementptr inbounds i8, i8* %74, i64 4
  %96 = bitcast i8* %95 to i32*
  store i32 %93, i32* %96, align 1
  %97 = trunc i64 %90 to i32
  %98 = getelementptr inbounds i8, i8* %74, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 %97, i32* %99, align 1
  %100 = lshr i64 %90, 32
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds i8, i8* %74, i64 12
  %103 = bitcast i8* %102 to i32*
  store i32 %101, i32* %103, align 1
  store %struct.Memory* %loadMem_4b05bb, %struct.Memory** %MEMORY
  %loadMem_4b05be = load %struct.Memory*, %struct.Memory** %MEMORY
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %105 = getelementptr inbounds %struct.GPR, %struct.GPR* %104, i32 0, i32 33
  %106 = getelementptr inbounds %struct.Reg, %struct.Reg* %105, i32 0, i32 0
  %PC.i1722 = bitcast %union.anon* %106 to i64*
  %107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %108 = getelementptr inbounds %struct.GPR, %struct.GPR* %107, i32 0, i32 11
  %109 = getelementptr inbounds %struct.Reg, %struct.Reg* %108, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %109 to i32*
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %111 = getelementptr inbounds %struct.GPR, %struct.GPR* %110, i32 0, i32 15
  %112 = getelementptr inbounds %struct.Reg, %struct.Reg* %111, i32 0, i32 0
  %RBP.i1723 = bitcast %union.anon* %112 to i64*
  %113 = load i64, i64* %RBP.i1723
  %114 = sub i64 %113, 4
  %115 = load i32, i32* %EDI.i
  %116 = zext i32 %115 to i64
  %117 = load i64, i64* %PC.i1722
  %118 = add i64 %117, 3
  store i64 %118, i64* %PC.i1722
  %119 = inttoptr i64 %114 to i32*
  store i32 %115, i32* %119
  store %struct.Memory* %loadMem_4b05be, %struct.Memory** %MEMORY
  %loadMem_4b05c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 33
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %PC.i2295 = bitcast %union.anon* %122 to i64*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 15
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %RBP.i2296 = bitcast %union.anon* %125 to i64*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %127 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %126, i64 0, i64 0
  %XMM0.i2297 = bitcast %union.VectorReg* %127 to %union.vec128_t*
  %128 = load i64, i64* %RBP.i2296
  %129 = sub i64 %128, 32
  %130 = bitcast %union.vec128_t* %XMM0.i2297 to i8*
  %131 = load i64, i64* %PC.i2295
  %132 = add i64 %131, 5
  store i64 %132, i64* %PC.i2295
  %133 = bitcast i8* %130 to double*
  %134 = load double, double* %133, align 1
  %135 = inttoptr i64 %129 to double*
  store double %134, double* %135
  store %struct.Memory* %loadMem_4b05c1, %struct.Memory** %MEMORY
  %loadMem_4b05c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %137 = getelementptr inbounds %struct.GPR, %struct.GPR* %136, i32 0, i32 33
  %138 = getelementptr inbounds %struct.Reg, %struct.Reg* %137, i32 0, i32 0
  %PC.i2336 = bitcast %union.anon* %138 to i64*
  %139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %140 = getelementptr inbounds %struct.GPR, %struct.GPR* %139, i32 0, i32 1
  %141 = getelementptr inbounds %struct.Reg, %struct.Reg* %140, i32 0, i32 0
  %RAX.i2337 = bitcast %union.anon* %141 to i64*
  %142 = load i64, i64* %PC.i2336
  %143 = add i64 %142, 8
  store i64 %143, i64* %PC.i2336
  %144 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %144, i64* %RAX.i2337, align 8
  store %struct.Memory* %loadMem_4b05c6, %struct.Memory** %MEMORY
  %loadMem_4b05ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 33
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %PC.i2334 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 1
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RAX.i2335 = bitcast %union.anon* %150 to i64*
  %151 = load i64, i64* %RAX.i2335
  %152 = add i64 %151, 72400
  %153 = load i64, i64* %PC.i2334
  %154 = add i64 %153, 7
  store i64 %154, i64* %PC.i2334
  %155 = inttoptr i64 %152 to i32*
  %156 = load i32, i32* %155
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %157, align 1
  %158 = and i32 %156, 255
  %159 = call i32 @llvm.ctpop.i32(i32 %158)
  %160 = trunc i32 %159 to i8
  %161 = and i8 %160, 1
  %162 = xor i8 %161, 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %162, i8* %163, align 1
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %164, align 1
  %165 = icmp eq i32 %156, 0
  %166 = zext i1 %165 to i8
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %166, i8* %167, align 1
  %168 = lshr i32 %156, 31
  %169 = trunc i32 %168 to i8
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %169, i8* %170, align 1
  %171 = lshr i32 %156, 31
  %172 = xor i32 %168, %171
  %173 = add i32 %172, %171
  %174 = icmp eq i32 %173, 2
  %175 = zext i1 %174 to i8
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %175, i8* %176, align 1
  store %struct.Memory* %loadMem_4b05ce, %struct.Memory** %MEMORY
  %loadMem_4b05d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 33
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %PC.i2333 = bitcast %union.anon* %179 to i64*
  %180 = load i64, i64* %PC.i2333
  %181 = add i64 %180, 111
  %182 = load i64, i64* %PC.i2333
  %183 = add i64 %182, 6
  %184 = load i64, i64* %PC.i2333
  %185 = add i64 %184, 6
  store i64 %185, i64* %PC.i2333
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %187 = load i8, i8* %186, align 1
  store i8 %187, i8* %BRANCH_TAKEN, align 1
  %188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %189 = icmp ne i8 %187, 0
  %190 = select i1 %189, i64 %181, i64 %183
  store i64 %190, i64* %188, align 8
  store %struct.Memory* %loadMem_4b05d5, %struct.Memory** %MEMORY
  %loadBr_4b05d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b05d5 = icmp eq i8 %loadBr_4b05d5, 1
  br i1 %cmpBr_4b05d5, label %block_.L_4b0644, label %block_4b05db

block_4b05db:                                     ; preds = %entry
  %loadMem_4b05db = load %struct.Memory*, %struct.Memory** %MEMORY
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %192 = getelementptr inbounds %struct.GPR, %struct.GPR* %191, i32 0, i32 33
  %193 = getelementptr inbounds %struct.Reg, %struct.Reg* %192, i32 0, i32 0
  %PC.i2331 = bitcast %union.anon* %193 to i64*
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %195 = getelementptr inbounds %struct.GPR, %struct.GPR* %194, i32 0, i32 1
  %196 = getelementptr inbounds %struct.Reg, %struct.Reg* %195, i32 0, i32 0
  %RAX.i2332 = bitcast %union.anon* %196 to i64*
  %197 = load i64, i64* %PC.i2331
  %198 = add i64 %197, 8
  store i64 %198, i64* %PC.i2331
  %199 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %199, i64* %RAX.i2332, align 8
  store %struct.Memory* %loadMem_4b05db, %struct.Memory** %MEMORY
  %loadMem_4b05e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %201 = getelementptr inbounds %struct.GPR, %struct.GPR* %200, i32 0, i32 33
  %202 = getelementptr inbounds %struct.Reg, %struct.Reg* %201, i32 0, i32 0
  %PC.i2329 = bitcast %union.anon* %202 to i64*
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %204 = getelementptr inbounds %struct.GPR, %struct.GPR* %203, i32 0, i32 1
  %205 = getelementptr inbounds %struct.Reg, %struct.Reg* %204, i32 0, i32 0
  %RAX.i2330 = bitcast %union.anon* %205 to i64*
  %206 = load i64, i64* %RAX.i2330
  %207 = add i64 %206, 14168
  %208 = load i64, i64* %PC.i2329
  %209 = add i64 %208, 7
  store i64 %209, i64* %PC.i2329
  %210 = inttoptr i64 %207 to i64*
  %211 = load i64, i64* %210
  store i64 %211, i64* %RAX.i2330, align 8
  store %struct.Memory* %loadMem_4b05e3, %struct.Memory** %MEMORY
  %loadMem_4b05ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 33
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %PC.i2327 = bitcast %union.anon* %214 to i64*
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %216 = getelementptr inbounds %struct.GPR, %struct.GPR* %215, i32 0, i32 5
  %217 = getelementptr inbounds %struct.Reg, %struct.Reg* %216, i32 0, i32 0
  %RCX.i2328 = bitcast %union.anon* %217 to i64*
  %218 = load i64, i64* %PC.i2327
  %219 = add i64 %218, 8
  store i64 %219, i64* %PC.i2327
  %220 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %220, i64* %RCX.i2328, align 8
  store %struct.Memory* %loadMem_4b05ea, %struct.Memory** %MEMORY
  %loadMem_4b05f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 33
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %PC.i2325 = bitcast %union.anon* %223 to i64*
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %225 = getelementptr inbounds %struct.GPR, %struct.GPR* %224, i32 0, i32 5
  %226 = getelementptr inbounds %struct.Reg, %struct.Reg* %225, i32 0, i32 0
  %RCX.i2326 = bitcast %union.anon* %226 to i64*
  %227 = load i64, i64* %RCX.i2326
  %228 = add i64 %227, 12
  %229 = load i64, i64* %PC.i2325
  %230 = add i64 %229, 4
  store i64 %230, i64* %PC.i2325
  %231 = inttoptr i64 %228 to i32*
  %232 = load i32, i32* %231
  %233 = sext i32 %232 to i64
  store i64 %233, i64* %RCX.i2326, align 8
  store %struct.Memory* %loadMem_4b05f2, %struct.Memory** %MEMORY
  %loadMem_4b05f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 33
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %PC.i2323 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 5
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RCX.i2324 = bitcast %union.anon* %239 to i64*
  %240 = load i64, i64* %RCX.i2324
  %241 = load i64, i64* %PC.i2323
  %242 = add i64 %241, 7
  store i64 %242, i64* %PC.i2323
  %243 = sext i64 %240 to i128
  %244 = and i128 %243, -18446744073709551616
  %245 = zext i64 %240 to i128
  %246 = or i128 %244, %245
  %247 = mul i128 632, %246
  %248 = trunc i128 %247 to i64
  store i64 %248, i64* %RCX.i2324, align 8
  %249 = sext i64 %248 to i128
  %250 = icmp ne i128 %249, %247
  %251 = zext i1 %250 to i8
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %251, i8* %252, align 1
  %253 = trunc i128 %247 to i32
  %254 = and i32 %253, 255
  %255 = call i32 @llvm.ctpop.i32(i32 %254)
  %256 = trunc i32 %255 to i8
  %257 = and i8 %256, 1
  %258 = xor i8 %257, 1
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %258, i8* %259, align 1
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %260, align 1
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %261, align 1
  %262 = lshr i64 %248, 63
  %263 = trunc i64 %262 to i8
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %263, i8* %264, align 1
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %251, i8* %265, align 1
  store %struct.Memory* %loadMem_4b05f6, %struct.Memory** %MEMORY
  %loadMem_4b05fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 33
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %PC.i2320 = bitcast %union.anon* %268 to i64*
  %269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %270 = getelementptr inbounds %struct.GPR, %struct.GPR* %269, i32 0, i32 1
  %271 = getelementptr inbounds %struct.Reg, %struct.Reg* %270, i32 0, i32 0
  %RAX.i2321 = bitcast %union.anon* %271 to i64*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %273 = getelementptr inbounds %struct.GPR, %struct.GPR* %272, i32 0, i32 5
  %274 = getelementptr inbounds %struct.Reg, %struct.Reg* %273, i32 0, i32 0
  %RCX.i2322 = bitcast %union.anon* %274 to i64*
  %275 = load i64, i64* %RAX.i2321
  %276 = load i64, i64* %RCX.i2322
  %277 = load i64, i64* %PC.i2320
  %278 = add i64 %277, 3
  store i64 %278, i64* %PC.i2320
  %279 = add i64 %276, %275
  store i64 %279, i64* %RAX.i2321, align 8
  %280 = icmp ult i64 %279, %275
  %281 = icmp ult i64 %279, %276
  %282 = or i1 %280, %281
  %283 = zext i1 %282 to i8
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %283, i8* %284, align 1
  %285 = trunc i64 %279 to i32
  %286 = and i32 %285, 255
  %287 = call i32 @llvm.ctpop.i32(i32 %286)
  %288 = trunc i32 %287 to i8
  %289 = and i8 %288, 1
  %290 = xor i8 %289, 1
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %290, i8* %291, align 1
  %292 = xor i64 %276, %275
  %293 = xor i64 %292, %279
  %294 = lshr i64 %293, 4
  %295 = trunc i64 %294 to i8
  %296 = and i8 %295, 1
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %296, i8* %297, align 1
  %298 = icmp eq i64 %279, 0
  %299 = zext i1 %298 to i8
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %299, i8* %300, align 1
  %301 = lshr i64 %279, 63
  %302 = trunc i64 %301 to i8
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %302, i8* %303, align 1
  %304 = lshr i64 %275, 63
  %305 = lshr i64 %276, 63
  %306 = xor i64 %301, %304
  %307 = xor i64 %301, %305
  %308 = add i64 %306, %307
  %309 = icmp eq i64 %308, 2
  %310 = zext i1 %309 to i8
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %310, i8* %311, align 1
  store %struct.Memory* %loadMem_4b05fd, %struct.Memory** %MEMORY
  %loadMem_4b0600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %313 = getelementptr inbounds %struct.GPR, %struct.GPR* %312, i32 0, i32 33
  %314 = getelementptr inbounds %struct.Reg, %struct.Reg* %313, i32 0, i32 0
  %PC.i2318 = bitcast %union.anon* %314 to i64*
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %316 = getelementptr inbounds %struct.GPR, %struct.GPR* %315, i32 0, i32 1
  %317 = getelementptr inbounds %struct.Reg, %struct.Reg* %316, i32 0, i32 0
  %RAX.i2319 = bitcast %union.anon* %317 to i64*
  %318 = load i64, i64* %RAX.i2319
  %319 = add i64 %318, 532
  %320 = load i64, i64* %PC.i2318
  %321 = add i64 %320, 7
  store i64 %321, i64* %PC.i2318
  %322 = inttoptr i64 %319 to i32*
  %323 = load i32, i32* %322
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %324, align 1
  %325 = and i32 %323, 255
  %326 = call i32 @llvm.ctpop.i32(i32 %325)
  %327 = trunc i32 %326 to i8
  %328 = and i8 %327, 1
  %329 = xor i8 %328, 1
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %329, i8* %330, align 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %331, align 1
  %332 = icmp eq i32 %323, 0
  %333 = zext i1 %332 to i8
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %333, i8* %334, align 1
  %335 = lshr i32 %323, 31
  %336 = trunc i32 %335 to i8
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %336, i8* %337, align 1
  %338 = lshr i32 %323, 31
  %339 = xor i32 %335, %338
  %340 = add i32 %339, %338
  %341 = icmp eq i32 %340, 2
  %342 = zext i1 %341 to i8
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %342, i8* %343, align 1
  store %struct.Memory* %loadMem_4b0600, %struct.Memory** %MEMORY
  %loadMem_4b0607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %345 = getelementptr inbounds %struct.GPR, %struct.GPR* %344, i32 0, i32 33
  %346 = getelementptr inbounds %struct.Reg, %struct.Reg* %345, i32 0, i32 0
  %PC.i2317 = bitcast %union.anon* %346 to i64*
  %347 = load i64, i64* %PC.i2317
  %348 = add i64 %347, 61
  %349 = load i64, i64* %PC.i2317
  %350 = add i64 %349, 6
  %351 = load i64, i64* %PC.i2317
  %352 = add i64 %351, 6
  store i64 %352, i64* %PC.i2317
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %354 = load i8, i8* %353, align 1
  store i8 %354, i8* %BRANCH_TAKEN, align 1
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %356 = icmp ne i8 %354, 0
  %357 = select i1 %356, i64 %348, i64 %350
  store i64 %357, i64* %355, align 8
  store %struct.Memory* %loadMem_4b0607, %struct.Memory** %MEMORY
  %loadBr_4b0607 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0607 = icmp eq i8 %loadBr_4b0607, 1
  br i1 %cmpBr_4b0607, label %block_.L_4b0644, label %block_4b060d

block_4b060d:                                     ; preds = %block_4b05db
  %loadMem_4b060d = load %struct.Memory*, %struct.Memory** %MEMORY
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %359 = getelementptr inbounds %struct.GPR, %struct.GPR* %358, i32 0, i32 33
  %360 = getelementptr inbounds %struct.Reg, %struct.Reg* %359, i32 0, i32 0
  %PC.i2315 = bitcast %union.anon* %360 to i64*
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %362 = getelementptr inbounds %struct.GPR, %struct.GPR* %361, i32 0, i32 1
  %363 = getelementptr inbounds %struct.Reg, %struct.Reg* %362, i32 0, i32 0
  %RAX.i2316 = bitcast %union.anon* %363 to i64*
  %364 = load i64, i64* %PC.i2315
  %365 = add i64 %364, 5
  store i64 %365, i64* %PC.i2315
  store i64 2, i64* %RAX.i2316, align 8
  store %struct.Memory* %loadMem_4b060d, %struct.Memory** %MEMORY
  %loadMem_4b0612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %367 = getelementptr inbounds %struct.GPR, %struct.GPR* %366, i32 0, i32 33
  %368 = getelementptr inbounds %struct.Reg, %struct.Reg* %367, i32 0, i32 0
  %PC.i2313 = bitcast %union.anon* %368 to i64*
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %370 = getelementptr inbounds %struct.GPR, %struct.GPR* %369, i32 0, i32 5
  %371 = getelementptr inbounds %struct.Reg, %struct.Reg* %370, i32 0, i32 0
  %RCX.i2314 = bitcast %union.anon* %371 to i64*
  %372 = load i64, i64* %PC.i2313
  %373 = add i64 %372, 5
  store i64 %373, i64* %PC.i2313
  store i64 4, i64* %RCX.i2314, align 8
  store %struct.Memory* %loadMem_4b0612, %struct.Memory** %MEMORY
  %loadMem_4b0617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %375 = getelementptr inbounds %struct.GPR, %struct.GPR* %374, i32 0, i32 33
  %376 = getelementptr inbounds %struct.Reg, %struct.Reg* %375, i32 0, i32 0
  %PC.i2311 = bitcast %union.anon* %376 to i64*
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %378 = getelementptr inbounds %struct.GPR, %struct.GPR* %377, i32 0, i32 7
  %379 = getelementptr inbounds %struct.Reg, %struct.Reg* %378, i32 0, i32 0
  %RDX.i2312 = bitcast %union.anon* %379 to i64*
  %380 = load i64, i64* %PC.i2311
  %381 = add i64 %380, 8
  store i64 %381, i64* %PC.i2311
  %382 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %382, i64* %RDX.i2312, align 8
  store %struct.Memory* %loadMem_4b0617, %struct.Memory** %MEMORY
  %loadMem_4b061f = load %struct.Memory*, %struct.Memory** %MEMORY
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 33
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %PC.i2308 = bitcast %union.anon* %385 to i64*
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %387 = getelementptr inbounds %struct.GPR, %struct.GPR* %386, i32 0, i32 7
  %388 = getelementptr inbounds %struct.Reg, %struct.Reg* %387, i32 0, i32 0
  %RDX.i2309 = bitcast %union.anon* %388 to i64*
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %390 = getelementptr inbounds %struct.GPR, %struct.GPR* %389, i32 0, i32 9
  %391 = getelementptr inbounds %struct.Reg, %struct.Reg* %390, i32 0, i32 0
  %RSI.i2310 = bitcast %union.anon* %391 to i64*
  %392 = load i64, i64* %RDX.i2309
  %393 = add i64 %392, 12
  %394 = load i64, i64* %PC.i2308
  %395 = add i64 %394, 3
  store i64 %395, i64* %PC.i2308
  %396 = inttoptr i64 %393 to i32*
  %397 = load i32, i32* %396
  %398 = zext i32 %397 to i64
  store i64 %398, i64* %RSI.i2310, align 8
  store %struct.Memory* %loadMem_4b061f, %struct.Memory** %MEMORY
  %loadMem_4b0622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 33
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %PC.i2305 = bitcast %union.anon* %401 to i64*
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 1
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %EAX.i2306 = bitcast %union.anon* %404 to i32*
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 15
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %RBP.i2307 = bitcast %union.anon* %407 to i64*
  %408 = load i64, i64* %RBP.i2307
  %409 = sub i64 %408, 35420
  %410 = load i32, i32* %EAX.i2306
  %411 = zext i32 %410 to i64
  %412 = load i64, i64* %PC.i2305
  %413 = add i64 %412, 6
  store i64 %413, i64* %PC.i2305
  %414 = inttoptr i64 %409 to i32*
  store i32 %410, i32* %414
  store %struct.Memory* %loadMem_4b0622, %struct.Memory** %MEMORY
  %loadMem_4b0628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 33
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %PC.i2302 = bitcast %union.anon* %417 to i64*
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 9
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %ESI.i2303 = bitcast %union.anon* %420 to i32*
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 1
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %RAX.i2304 = bitcast %union.anon* %423 to i64*
  %424 = load i32, i32* %ESI.i2303
  %425 = zext i32 %424 to i64
  %426 = load i64, i64* %PC.i2302
  %427 = add i64 %426, 2
  store i64 %427, i64* %PC.i2302
  %428 = and i64 %425, 4294967295
  store i64 %428, i64* %RAX.i2304, align 8
  store %struct.Memory* %loadMem_4b0628, %struct.Memory** %MEMORY
  %loadMem_4b062a = load %struct.Memory*, %struct.Memory** %MEMORY
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 33
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %PC.i2301 = bitcast %union.anon* %431 to i64*
  %432 = load i64, i64* %PC.i2301
  %433 = add i64 %432, 1
  store i64 %433, i64* %PC.i2301
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %436 = bitcast %union.anon* %435 to i32*
  %437 = load i32, i32* %436, align 8
  %438 = sext i32 %437 to i64
  %439 = lshr i64 %438, 32
  store i64 %439, i64* %434, align 8
  store %struct.Memory* %loadMem_4b062a, %struct.Memory** %MEMORY
  %loadMem_4b062b = load %struct.Memory*, %struct.Memory** %MEMORY
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %441 = getelementptr inbounds %struct.GPR, %struct.GPR* %440, i32 0, i32 33
  %442 = getelementptr inbounds %struct.Reg, %struct.Reg* %441, i32 0, i32 0
  %PC.i2298 = bitcast %union.anon* %442 to i64*
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %444 = getelementptr inbounds %struct.GPR, %struct.GPR* %443, i32 0, i32 9
  %445 = getelementptr inbounds %struct.Reg, %struct.Reg* %444, i32 0, i32 0
  %RSI.i2299 = bitcast %union.anon* %445 to i64*
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %447 = getelementptr inbounds %struct.GPR, %struct.GPR* %446, i32 0, i32 15
  %448 = getelementptr inbounds %struct.Reg, %struct.Reg* %447, i32 0, i32 0
  %RBP.i2300 = bitcast %union.anon* %448 to i64*
  %449 = load i64, i64* %RBP.i2300
  %450 = sub i64 %449, 35420
  %451 = load i64, i64* %PC.i2298
  %452 = add i64 %451, 6
  store i64 %452, i64* %PC.i2298
  %453 = inttoptr i64 %450 to i32*
  %454 = load i32, i32* %453
  %455 = zext i32 %454 to i64
  store i64 %455, i64* %RSI.i2299, align 8
  store %struct.Memory* %loadMem_4b062b, %struct.Memory** %MEMORY
  %loadMem_4b0631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 33
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %PC.i2293 = bitcast %union.anon* %458 to i64*
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 9
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %ESI.i2294 = bitcast %union.anon* %461 to i32*
  %462 = load i32, i32* %ESI.i2294
  %463 = zext i32 %462 to i64
  %464 = load i64, i64* %PC.i2293
  %465 = add i64 %464, 2
  store i64 %465, i64* %PC.i2293
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %467 = bitcast %union.anon* %466 to i32*
  %468 = load i32, i32* %467, align 8
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %471 = bitcast %union.anon* %470 to i32*
  %472 = load i32, i32* %471, align 8
  %473 = zext i32 %472 to i64
  %474 = shl i64 %463, 32
  %475 = ashr exact i64 %474, 32
  %476 = shl i64 %473, 32
  %477 = or i64 %476, %469
  %478 = sdiv i64 %477, %475
  %479 = shl i64 %478, 32
  %480 = ashr exact i64 %479, 32
  %481 = icmp eq i64 %478, %480
  br i1 %481, label %486, label %482

; <label>:482:                                    ; preds = %block_4b060d
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %484 = load i64, i64* %483, align 8
  %485 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %484, %struct.Memory* %loadMem_4b0631)
  br label %routine_idivl__esi.exit

; <label>:486:                                    ; preds = %block_4b060d
  %487 = srem i64 %477, %475
  %488 = getelementptr inbounds %union.anon, %union.anon* %466, i64 0, i32 0
  %489 = and i64 %478, 4294967295
  store i64 %489, i64* %488, align 8
  %490 = getelementptr inbounds %union.anon, %union.anon* %470, i64 0, i32 0
  %491 = and i64 %487, 4294967295
  store i64 %491, i64* %490, align 8
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %492, align 1
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %493, align 1
  %494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %494, align 1
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %495, align 1
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %496, align 1
  %497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %497, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %482, %486
  %498 = phi %struct.Memory* [ %485, %482 ], [ %loadMem_4b0631, %486 ]
  store %struct.Memory* %498, %struct.Memory** %MEMORY
  %loadMem_4b0633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 33
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %PC.i2291 = bitcast %union.anon* %501 to i64*
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %503 = getelementptr inbounds %struct.GPR, %struct.GPR* %502, i32 0, i32 7
  %504 = getelementptr inbounds %struct.Reg, %struct.Reg* %503, i32 0, i32 0
  %EDX.i2292 = bitcast %union.anon* %504 to i32*
  %505 = load i32, i32* %EDX.i2292
  %506 = zext i32 %505 to i64
  %507 = load i64, i64* %PC.i2291
  %508 = add i64 %507, 3
  store i64 %508, i64* %PC.i2291
  %509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %509, align 1
  %510 = and i32 %505, 255
  %511 = call i32 @llvm.ctpop.i32(i32 %510)
  %512 = trunc i32 %511 to i8
  %513 = and i8 %512, 1
  %514 = xor i8 %513, 1
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %514, i8* %515, align 1
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %516, align 1
  %517 = icmp eq i32 %505, 0
  %518 = zext i1 %517 to i8
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %518, i8* %519, align 1
  %520 = lshr i32 %505, 31
  %521 = trunc i32 %520 to i8
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %521, i8* %522, align 1
  %523 = lshr i32 %505, 31
  %524 = xor i32 %520, %523
  %525 = add i32 %524, %523
  %526 = icmp eq i32 %525, 2
  %527 = zext i1 %526 to i8
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %527, i8* %528, align 1
  store %struct.Memory* %loadMem_4b0633, %struct.Memory** %MEMORY
  %loadMem_4b0636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i2288 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 5
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %ECX.i2289 = bitcast %union.anon* %534 to i32*
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %536 = getelementptr inbounds %struct.GPR, %struct.GPR* %535, i32 0, i32 9
  %537 = getelementptr inbounds %struct.Reg, %struct.Reg* %536, i32 0, i32 0
  %RSI.i2290 = bitcast %union.anon* %537 to i64*
  %538 = load i32, i32* %ECX.i2289
  %539 = zext i32 %538 to i64
  %540 = load i64, i64* %PC.i2288
  %541 = add i64 %540, 3
  store i64 %541, i64* %PC.i2288
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %543 = load i8, i8* %542, align 1
  %544 = icmp eq i8 %543, 0
  %545 = load i64, i64* %RSI.i2290, align 8
  %546 = select i1 %544, i64 %539, i64 %545
  %547 = and i64 %546, 4294967295
  store i64 %547, i64* %RSI.i2290, align 8
  store %struct.Memory* %loadMem_4b0636, %struct.Memory** %MEMORY
  %loadMem_4b0639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %549 = getelementptr inbounds %struct.GPR, %struct.GPR* %548, i32 0, i32 33
  %550 = getelementptr inbounds %struct.Reg, %struct.Reg* %549, i32 0, i32 0
  %PC.i2285 = bitcast %union.anon* %550 to i64*
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %552 = getelementptr inbounds %struct.GPR, %struct.GPR* %551, i32 0, i32 9
  %553 = getelementptr inbounds %struct.Reg, %struct.Reg* %552, i32 0, i32 0
  %ESI.i2286 = bitcast %union.anon* %553 to i32*
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %555 = getelementptr inbounds %struct.GPR, %struct.GPR* %554, i32 0, i32 15
  %556 = getelementptr inbounds %struct.Reg, %struct.Reg* %555, i32 0, i32 0
  %RBP.i2287 = bitcast %union.anon* %556 to i64*
  %557 = load i64, i64* %RBP.i2287
  %558 = sub i64 %557, 35424
  %559 = load i32, i32* %ESI.i2286
  %560 = zext i32 %559 to i64
  %561 = load i64, i64* %PC.i2285
  %562 = add i64 %561, 6
  store i64 %562, i64* %PC.i2285
  %563 = inttoptr i64 %558 to i32*
  store i32 %559, i32* %563
  store %struct.Memory* %loadMem_4b0639, %struct.Memory** %MEMORY
  %loadMem_4b063f = load %struct.Memory*, %struct.Memory** %MEMORY
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %565 = getelementptr inbounds %struct.GPR, %struct.GPR* %564, i32 0, i32 33
  %566 = getelementptr inbounds %struct.Reg, %struct.Reg* %565, i32 0, i32 0
  %PC.i2284 = bitcast %union.anon* %566 to i64*
  %567 = load i64, i64* %PC.i2284
  %568 = add i64 %567, 18
  %569 = load i64, i64* %PC.i2284
  %570 = add i64 %569, 5
  store i64 %570, i64* %PC.i2284
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %568, i64* %571, align 8
  store %struct.Memory* %loadMem_4b063f, %struct.Memory** %MEMORY
  br label %block_.L_4b0651

block_.L_4b0644:                                  ; preds = %block_4b05db, %entry
  %loadMem_4b0644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 33
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %PC.i2281 = bitcast %union.anon* %574 to i64*
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %576 = getelementptr inbounds %struct.GPR, %struct.GPR* %575, i32 0, i32 1
  %577 = getelementptr inbounds %struct.Reg, %struct.Reg* %576, i32 0, i32 0
  %EAX.i2282 = bitcast %union.anon* %577 to i32*
  %578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %579 = getelementptr inbounds %struct.GPR, %struct.GPR* %578, i32 0, i32 1
  %580 = getelementptr inbounds %struct.Reg, %struct.Reg* %579, i32 0, i32 0
  %RAX.i2283 = bitcast %union.anon* %580 to i64*
  %581 = load i64, i64* %RAX.i2283
  %582 = load i32, i32* %EAX.i2282
  %583 = zext i32 %582 to i64
  %584 = load i64, i64* %PC.i2281
  %585 = add i64 %584, 2
  store i64 %585, i64* %PC.i2281
  %586 = xor i64 %583, %581
  %587 = trunc i64 %586 to i32
  %588 = and i64 %586, 4294967295
  store i64 %588, i64* %RAX.i2283, align 8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %589, align 1
  %590 = and i32 %587, 255
  %591 = call i32 @llvm.ctpop.i32(i32 %590)
  %592 = trunc i32 %591 to i8
  %593 = and i8 %592, 1
  %594 = xor i8 %593, 1
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %594, i8* %595, align 1
  %596 = icmp eq i32 %587, 0
  %597 = zext i1 %596 to i8
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %597, i8* %598, align 1
  %599 = lshr i32 %587, 31
  %600 = trunc i32 %599 to i8
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %600, i8* %601, align 1
  %602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %602, align 1
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %603, align 1
  store %struct.Memory* %loadMem_4b0644, %struct.Memory** %MEMORY
  %loadMem_4b0646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %605 = getelementptr inbounds %struct.GPR, %struct.GPR* %604, i32 0, i32 33
  %606 = getelementptr inbounds %struct.Reg, %struct.Reg* %605, i32 0, i32 0
  %PC.i2278 = bitcast %union.anon* %606 to i64*
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 1
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %EAX.i2279 = bitcast %union.anon* %609 to i32*
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %611 = getelementptr inbounds %struct.GPR, %struct.GPR* %610, i32 0, i32 15
  %612 = getelementptr inbounds %struct.Reg, %struct.Reg* %611, i32 0, i32 0
  %RBP.i2280 = bitcast %union.anon* %612 to i64*
  %613 = load i64, i64* %RBP.i2280
  %614 = sub i64 %613, 35424
  %615 = load i32, i32* %EAX.i2279
  %616 = zext i32 %615 to i64
  %617 = load i64, i64* %PC.i2278
  %618 = add i64 %617, 6
  store i64 %618, i64* %PC.i2278
  %619 = inttoptr i64 %614 to i32*
  store i32 %615, i32* %619
  store %struct.Memory* %loadMem_4b0646, %struct.Memory** %MEMORY
  %loadMem_4b064c = load %struct.Memory*, %struct.Memory** %MEMORY
  %620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %621 = getelementptr inbounds %struct.GPR, %struct.GPR* %620, i32 0, i32 33
  %622 = getelementptr inbounds %struct.Reg, %struct.Reg* %621, i32 0, i32 0
  %PC.i2277 = bitcast %union.anon* %622 to i64*
  %623 = load i64, i64* %PC.i2277
  %624 = add i64 %623, 5
  %625 = load i64, i64* %PC.i2277
  %626 = add i64 %625, 5
  store i64 %626, i64* %PC.i2277
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %624, i64* %627, align 8
  store %struct.Memory* %loadMem_4b064c, %struct.Memory** %MEMORY
  br label %block_.L_4b0651

block_.L_4b0651:                                  ; preds = %block_.L_4b0644, %routine_idivl__esi.exit
  %loadMem_4b0651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 33
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %PC.i2274 = bitcast %union.anon* %630 to i64*
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %632 = getelementptr inbounds %struct.GPR, %struct.GPR* %631, i32 0, i32 1
  %633 = getelementptr inbounds %struct.Reg, %struct.Reg* %632, i32 0, i32 0
  %RAX.i2275 = bitcast %union.anon* %633 to i64*
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %635 = getelementptr inbounds %struct.GPR, %struct.GPR* %634, i32 0, i32 15
  %636 = getelementptr inbounds %struct.Reg, %struct.Reg* %635, i32 0, i32 0
  %RBP.i2276 = bitcast %union.anon* %636 to i64*
  %637 = load i64, i64* %RBP.i2276
  %638 = sub i64 %637, 35424
  %639 = load i64, i64* %PC.i2274
  %640 = add i64 %639, 6
  store i64 %640, i64* %PC.i2274
  %641 = inttoptr i64 %638 to i32*
  %642 = load i32, i32* %641
  %643 = zext i32 %642 to i64
  store i64 %643, i64* %RAX.i2275, align 8
  store %struct.Memory* %loadMem_4b0651, %struct.Memory** %MEMORY
  %loadMem_4b0657 = load %struct.Memory*, %struct.Memory** %MEMORY
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 33
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %PC.i2272 = bitcast %union.anon* %646 to i64*
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %648 = getelementptr inbounds %struct.GPR, %struct.GPR* %647, i32 0, i32 5
  %649 = getelementptr inbounds %struct.Reg, %struct.Reg* %648, i32 0, i32 0
  %RCX.i2273 = bitcast %union.anon* %649 to i64*
  %650 = load i64, i64* %PC.i2272
  %651 = add i64 %650, 5
  store i64 %651, i64* %PC.i2272
  store i64 1, i64* %RCX.i2273, align 8
  store %struct.Memory* %loadMem_4b0657, %struct.Memory** %MEMORY
  %loadMem_4b065c = load %struct.Memory*, %struct.Memory** %MEMORY
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 33
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %PC.i2269 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 1
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %EAX.i2270 = bitcast %union.anon* %657 to i32*
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 15
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %RBP.i2271 = bitcast %union.anon* %660 to i64*
  %661 = load i64, i64* %RBP.i2271
  %662 = sub i64 %661, 804
  %663 = load i32, i32* %EAX.i2270
  %664 = zext i32 %663 to i64
  %665 = load i64, i64* %PC.i2269
  %666 = add i64 %665, 6
  store i64 %666, i64* %PC.i2269
  %667 = inttoptr i64 %662 to i32*
  store i32 %663, i32* %667
  store %struct.Memory* %loadMem_4b065c, %struct.Memory** %MEMORY
  %loadMem_4b0662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 33
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %PC.i2267 = bitcast %union.anon* %670 to i64*
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %672 = getelementptr inbounds %struct.GPR, %struct.GPR* %671, i32 0, i32 15
  %673 = getelementptr inbounds %struct.Reg, %struct.Reg* %672, i32 0, i32 0
  %RBP.i2268 = bitcast %union.anon* %673 to i64*
  %674 = load i64, i64* %RBP.i2268
  %675 = sub i64 %674, 35408
  %676 = load i64, i64* %PC.i2267
  %677 = add i64 %676, 10
  store i64 %677, i64* %PC.i2267
  %678 = inttoptr i64 %675 to i32*
  store i32 0, i32* %678
  store %struct.Memory* %loadMem_4b0662, %struct.Memory** %MEMORY
  %loadMem_4b066c = load %struct.Memory*, %struct.Memory** %MEMORY
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %680 = getelementptr inbounds %struct.GPR, %struct.GPR* %679, i32 0, i32 33
  %681 = getelementptr inbounds %struct.Reg, %struct.Reg* %680, i32 0, i32 0
  %PC.i2266 = bitcast %union.anon* %681 to i64*
  %682 = load i64, i64* %PC.i2266
  %683 = add i64 %682, 11
  store i64 %683, i64* %PC.i2266
  store i32 5, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  store %struct.Memory* %loadMem_4b066c, %struct.Memory** %MEMORY
  %loadMem_4b0677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 33
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %PC.i2265 = bitcast %union.anon* %686 to i64*
  %687 = load i64, i64* %PC.i2265
  %688 = add i64 %687, 11
  store i64 %688, i64* %PC.i2265
  store i32 5, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  store %struct.Memory* %loadMem_4b0677, %struct.Memory** %MEMORY
  %loadMem_4b0682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %690 = getelementptr inbounds %struct.GPR, %struct.GPR* %689, i32 0, i32 33
  %691 = getelementptr inbounds %struct.Reg, %struct.Reg* %690, i32 0, i32 0
  %PC.i2263 = bitcast %union.anon* %691 to i64*
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %693 = getelementptr inbounds %struct.GPR, %struct.GPR* %692, i32 0, i32 1
  %694 = getelementptr inbounds %struct.Reg, %struct.Reg* %693, i32 0, i32 0
  %RAX.i2264 = bitcast %union.anon* %694 to i64*
  %695 = load i64, i64* %PC.i2263
  %696 = add i64 %695, 7
  store i64 %696, i64* %PC.i2263
  %697 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %698 = zext i32 %697 to i64
  store i64 %698, i64* %RAX.i2264, align 8
  store %struct.Memory* %loadMem_4b0682, %struct.Memory** %MEMORY
  %loadMem_4b0689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %700 = getelementptr inbounds %struct.GPR, %struct.GPR* %699, i32 0, i32 33
  %701 = getelementptr inbounds %struct.Reg, %struct.Reg* %700, i32 0, i32 0
  %PC.i2261 = bitcast %union.anon* %701 to i64*
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %703 = getelementptr inbounds %struct.GPR, %struct.GPR* %702, i32 0, i32 1
  %704 = getelementptr inbounds %struct.Reg, %struct.Reg* %703, i32 0, i32 0
  %RAX.i2262 = bitcast %union.anon* %704 to i64*
  %705 = load i64, i64* %RAX.i2262
  %706 = load i64, i64* %PC.i2261
  %707 = add i64 %706, 3
  store i64 %707, i64* %PC.i2261
  %708 = trunc i64 %705 to i32
  %709 = sub i32 %708, 1
  %710 = zext i32 %709 to i64
  store i64 %710, i64* %RAX.i2262, align 8
  %711 = icmp ult i32 %708, 1
  %712 = zext i1 %711 to i8
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %712, i8* %713, align 1
  %714 = and i32 %709, 255
  %715 = call i32 @llvm.ctpop.i32(i32 %714)
  %716 = trunc i32 %715 to i8
  %717 = and i8 %716, 1
  %718 = xor i8 %717, 1
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %718, i8* %719, align 1
  %720 = xor i64 1, %705
  %721 = trunc i64 %720 to i32
  %722 = xor i32 %721, %709
  %723 = lshr i32 %722, 4
  %724 = trunc i32 %723 to i8
  %725 = and i8 %724, 1
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %725, i8* %726, align 1
  %727 = icmp eq i32 %709, 0
  %728 = zext i1 %727 to i8
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %728, i8* %729, align 1
  %730 = lshr i32 %709, 31
  %731 = trunc i32 %730 to i8
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %731, i8* %732, align 1
  %733 = lshr i32 %708, 31
  %734 = xor i32 %730, %733
  %735 = add i32 %734, %733
  %736 = icmp eq i32 %735, 2
  %737 = zext i1 %736 to i8
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %737, i8* %738, align 1
  store %struct.Memory* %loadMem_4b0689, %struct.Memory** %MEMORY
  %loadMem_4b068c = load %struct.Memory*, %struct.Memory** %MEMORY
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %740 = getelementptr inbounds %struct.GPR, %struct.GPR* %739, i32 0, i32 33
  %741 = getelementptr inbounds %struct.Reg, %struct.Reg* %740, i32 0, i32 0
  %PC.i2258 = bitcast %union.anon* %741 to i64*
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 5
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %ECX.i2259 = bitcast %union.anon* %744 to i32*
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %746 = getelementptr inbounds %struct.GPR, %struct.GPR* %745, i32 0, i32 15
  %747 = getelementptr inbounds %struct.Reg, %struct.Reg* %746, i32 0, i32 0
  %RBP.i2260 = bitcast %union.anon* %747 to i64*
  %748 = load i64, i64* %RBP.i2260
  %749 = sub i64 %748, 35428
  %750 = load i32, i32* %ECX.i2259
  %751 = zext i32 %750 to i64
  %752 = load i64, i64* %PC.i2258
  %753 = add i64 %752, 6
  store i64 %753, i64* %PC.i2258
  %754 = inttoptr i64 %749 to i32*
  store i32 %750, i32* %754
  store %struct.Memory* %loadMem_4b068c, %struct.Memory** %MEMORY
  %loadMem_4b0692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %756 = getelementptr inbounds %struct.GPR, %struct.GPR* %755, i32 0, i32 33
  %757 = getelementptr inbounds %struct.Reg, %struct.Reg* %756, i32 0, i32 0
  %PC.i2255 = bitcast %union.anon* %757 to i64*
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 1
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %EAX.i2256 = bitcast %union.anon* %760 to i32*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 5
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RCX.i2257 = bitcast %union.anon* %763 to i64*
  %764 = load i32, i32* %EAX.i2256
  %765 = zext i32 %764 to i64
  %766 = load i64, i64* %PC.i2255
  %767 = add i64 %766, 2
  store i64 %767, i64* %PC.i2255
  %768 = and i64 %765, 4294967295
  store i64 %768, i64* %RCX.i2257, align 8
  store %struct.Memory* %loadMem_4b0692, %struct.Memory** %MEMORY
  %loadMem_4b0694 = load %struct.Memory*, %struct.Memory** %MEMORY
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %770 = getelementptr inbounds %struct.GPR, %struct.GPR* %769, i32 0, i32 33
  %771 = getelementptr inbounds %struct.Reg, %struct.Reg* %770, i32 0, i32 0
  %PC.i2252 = bitcast %union.anon* %771 to i64*
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %773 = getelementptr inbounds %struct.GPR, %struct.GPR* %772, i32 0, i32 1
  %774 = getelementptr inbounds %struct.Reg, %struct.Reg* %773, i32 0, i32 0
  %RAX.i2253 = bitcast %union.anon* %774 to i64*
  %775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %776 = getelementptr inbounds %struct.GPR, %struct.GPR* %775, i32 0, i32 15
  %777 = getelementptr inbounds %struct.Reg, %struct.Reg* %776, i32 0, i32 0
  %RBP.i2254 = bitcast %union.anon* %777 to i64*
  %778 = load i64, i64* %RBP.i2254
  %779 = sub i64 %778, 35428
  %780 = load i64, i64* %PC.i2252
  %781 = add i64 %780, 6
  store i64 %781, i64* %PC.i2252
  %782 = inttoptr i64 %779 to i32*
  %783 = load i32, i32* %782
  %784 = zext i32 %783 to i64
  store i64 %784, i64* %RAX.i2253, align 8
  store %struct.Memory* %loadMem_4b0694, %struct.Memory** %MEMORY
  %loadMem_4b069a = load %struct.Memory*, %struct.Memory** %MEMORY
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 33
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %PC.i2248 = bitcast %union.anon* %787 to i64*
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 5
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %791 = bitcast %union.anon* %790 to %struct.anon.2*
  %CL.i2249 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %791, i32 0, i32 0
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %793 = getelementptr inbounds %struct.GPR, %struct.GPR* %792, i32 0, i32 1
  %794 = getelementptr inbounds %struct.Reg, %struct.Reg* %793, i32 0, i32 0
  %RAX.i2250 = bitcast %union.anon* %794 to i64*
  %795 = load i64, i64* %RAX.i2250
  %796 = load i8, i8* %CL.i2249
  %797 = zext i8 %796 to i64
  %798 = load i64, i64* %PC.i2248
  %799 = add i64 %798, 2
  store i64 %799, i64* %PC.i2248
  %800 = trunc i64 %797 to i5
  switch i5 %800, label %807 [
    i5 0, label %routine_shll__cl___eax.exit2251
    i5 1, label %801
  ]

; <label>:801:                                    ; preds = %block_.L_4b0651
  %802 = trunc i64 %795 to i32
  %803 = shl i32 %802, 1
  %804 = icmp slt i32 %802, 0
  %805 = icmp slt i32 %803, 0
  %806 = xor i1 %804, %805
  br label %816

; <label>:807:                                    ; preds = %block_.L_4b0651
  %808 = and i64 %797, 31
  %809 = add i64 %808, 4294967295
  %810 = and i64 %795, 4294967295
  %811 = and i64 %809, 4294967295
  %812 = shl i64 %810, %811
  %813 = trunc i64 %812 to i32
  %814 = icmp slt i32 %813, 0
  %815 = shl i32 %813, 1
  br label %816

; <label>:816:                                    ; preds = %807, %801
  %817 = phi i1 [ %804, %801 ], [ %814, %807 ]
  %818 = phi i1 [ %806, %801 ], [ false, %807 ]
  %819 = phi i32 [ %803, %801 ], [ %815, %807 ]
  %820 = zext i32 %819 to i64
  store i64 %820, i64* %RAX.i2250, align 8
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %822 = zext i1 %817 to i8
  store i8 %822, i8* %821, align 1
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %824 = and i32 %819, 254
  %825 = call i32 @llvm.ctpop.i32(i32 %824)
  %826 = trunc i32 %825 to i8
  %827 = and i8 %826, 1
  %828 = xor i8 %827, 1
  store i8 %828, i8* %823, align 1
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %829, align 1
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %831 = icmp eq i32 %819, 0
  %832 = zext i1 %831 to i8
  store i8 %832, i8* %830, align 1
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %834 = lshr i32 %819, 31
  %835 = trunc i32 %834 to i8
  store i8 %835, i8* %833, align 1
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %837 = zext i1 %818 to i8
  store i8 %837, i8* %836, align 1
  br label %routine_shll__cl___eax.exit2251

routine_shll__cl___eax.exit2251:                  ; preds = %block_.L_4b0651, %816
  store %struct.Memory* %loadMem_4b069a, %struct.Memory** %MEMORY
  %loadMem_4b069c = load %struct.Memory*, %struct.Memory** %MEMORY
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %839 = getelementptr inbounds %struct.GPR, %struct.GPR* %838, i32 0, i32 33
  %840 = getelementptr inbounds %struct.Reg, %struct.Reg* %839, i32 0, i32 0
  %PC.i2246 = bitcast %union.anon* %840 to i64*
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %842 = getelementptr inbounds %struct.GPR, %struct.GPR* %841, i32 0, i32 1
  %843 = getelementptr inbounds %struct.Reg, %struct.Reg* %842, i32 0, i32 0
  %EAX.i2247 = bitcast %union.anon* %843 to i32*
  %844 = load i32, i32* %EAX.i2247
  %845 = zext i32 %844 to i64
  %846 = load i64, i64* %PC.i2246
  %847 = add i64 %846, 7
  store i64 %847, i64* %PC.i2246
  store i32 %844, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  store %struct.Memory* %loadMem_4b069c, %struct.Memory** %MEMORY
  %loadMem_4b06a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %849 = getelementptr inbounds %struct.GPR, %struct.GPR* %848, i32 0, i32 33
  %850 = getelementptr inbounds %struct.Reg, %struct.Reg* %849, i32 0, i32 0
  %PC.i2244 = bitcast %union.anon* %850 to i64*
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 1
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %RAX.i2245 = bitcast %union.anon* %853 to i64*
  %854 = load i64, i64* %PC.i2244
  %855 = add i64 %854, 7
  store i64 %855, i64* %PC.i2244
  %856 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %857 = zext i32 %856 to i64
  store i64 %857, i64* %RAX.i2245, align 8
  store %struct.Memory* %loadMem_4b06a3, %struct.Memory** %MEMORY
  %loadMem_4b06aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 33
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %PC.i2242 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 1
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %RAX.i2243 = bitcast %union.anon* %863 to i64*
  %864 = load i64, i64* %RAX.i2243
  %865 = load i64, i64* %PC.i2242
  %866 = add i64 %865, 3
  store i64 %866, i64* %PC.i2242
  %867 = trunc i64 %864 to i32
  %868 = sub i32 %867, 1
  %869 = zext i32 %868 to i64
  store i64 %869, i64* %RAX.i2243, align 8
  %870 = icmp ult i32 %867, 1
  %871 = zext i1 %870 to i8
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %871, i8* %872, align 1
  %873 = and i32 %868, 255
  %874 = call i32 @llvm.ctpop.i32(i32 %873)
  %875 = trunc i32 %874 to i8
  %876 = and i8 %875, 1
  %877 = xor i8 %876, 1
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %877, i8* %878, align 1
  %879 = xor i64 1, %864
  %880 = trunc i64 %879 to i32
  %881 = xor i32 %880, %868
  %882 = lshr i32 %881, 4
  %883 = trunc i32 %882 to i8
  %884 = and i8 %883, 1
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %884, i8* %885, align 1
  %886 = icmp eq i32 %868, 0
  %887 = zext i1 %886 to i8
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %887, i8* %888, align 1
  %889 = lshr i32 %868, 31
  %890 = trunc i32 %889 to i8
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %890, i8* %891, align 1
  %892 = lshr i32 %867, 31
  %893 = xor i32 %889, %892
  %894 = add i32 %893, %892
  %895 = icmp eq i32 %894, 2
  %896 = zext i1 %895 to i8
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %896, i8* %897, align 1
  store %struct.Memory* %loadMem_4b06aa, %struct.Memory** %MEMORY
  %loadMem_4b06ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %899 = getelementptr inbounds %struct.GPR, %struct.GPR* %898, i32 0, i32 33
  %900 = getelementptr inbounds %struct.Reg, %struct.Reg* %899, i32 0, i32 0
  %PC.i2239 = bitcast %union.anon* %900 to i64*
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %902 = getelementptr inbounds %struct.GPR, %struct.GPR* %901, i32 0, i32 1
  %903 = getelementptr inbounds %struct.Reg, %struct.Reg* %902, i32 0, i32 0
  %EAX.i2240 = bitcast %union.anon* %903 to i32*
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %905 = getelementptr inbounds %struct.GPR, %struct.GPR* %904, i32 0, i32 5
  %906 = getelementptr inbounds %struct.Reg, %struct.Reg* %905, i32 0, i32 0
  %RCX.i2241 = bitcast %union.anon* %906 to i64*
  %907 = load i32, i32* %EAX.i2240
  %908 = zext i32 %907 to i64
  %909 = load i64, i64* %PC.i2239
  %910 = add i64 %909, 2
  store i64 %910, i64* %PC.i2239
  %911 = and i64 %908, 4294967295
  store i64 %911, i64* %RCX.i2241, align 8
  store %struct.Memory* %loadMem_4b06ad, %struct.Memory** %MEMORY
  %loadMem_4b06af = load %struct.Memory*, %struct.Memory** %MEMORY
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %913 = getelementptr inbounds %struct.GPR, %struct.GPR* %912, i32 0, i32 33
  %914 = getelementptr inbounds %struct.Reg, %struct.Reg* %913, i32 0, i32 0
  %PC.i2236 = bitcast %union.anon* %914 to i64*
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %916 = getelementptr inbounds %struct.GPR, %struct.GPR* %915, i32 0, i32 1
  %917 = getelementptr inbounds %struct.Reg, %struct.Reg* %916, i32 0, i32 0
  %RAX.i2237 = bitcast %union.anon* %917 to i64*
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %919 = getelementptr inbounds %struct.GPR, %struct.GPR* %918, i32 0, i32 15
  %920 = getelementptr inbounds %struct.Reg, %struct.Reg* %919, i32 0, i32 0
  %RBP.i2238 = bitcast %union.anon* %920 to i64*
  %921 = load i64, i64* %RBP.i2238
  %922 = sub i64 %921, 35428
  %923 = load i64, i64* %PC.i2236
  %924 = add i64 %923, 6
  store i64 %924, i64* %PC.i2236
  %925 = inttoptr i64 %922 to i32*
  %926 = load i32, i32* %925
  %927 = zext i32 %926 to i64
  store i64 %927, i64* %RAX.i2237, align 8
  store %struct.Memory* %loadMem_4b06af, %struct.Memory** %MEMORY
  %loadMem_4b06b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %929 = getelementptr inbounds %struct.GPR, %struct.GPR* %928, i32 0, i32 33
  %930 = getelementptr inbounds %struct.Reg, %struct.Reg* %929, i32 0, i32 0
  %PC.i2232 = bitcast %union.anon* %930 to i64*
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %932 = getelementptr inbounds %struct.GPR, %struct.GPR* %931, i32 0, i32 5
  %933 = getelementptr inbounds %struct.Reg, %struct.Reg* %932, i32 0, i32 0
  %934 = bitcast %union.anon* %933 to %struct.anon.2*
  %CL.i2233 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %934, i32 0, i32 0
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 1
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %RAX.i2234 = bitcast %union.anon* %937 to i64*
  %938 = load i64, i64* %RAX.i2234
  %939 = load i8, i8* %CL.i2233
  %940 = zext i8 %939 to i64
  %941 = load i64, i64* %PC.i2232
  %942 = add i64 %941, 2
  store i64 %942, i64* %PC.i2232
  %943 = trunc i64 %940 to i5
  switch i5 %943, label %950 [
    i5 0, label %routine_shll__cl___eax.exit2235
    i5 1, label %944
  ]

; <label>:944:                                    ; preds = %routine_shll__cl___eax.exit2251
  %945 = trunc i64 %938 to i32
  %946 = shl i32 %945, 1
  %947 = icmp slt i32 %945, 0
  %948 = icmp slt i32 %946, 0
  %949 = xor i1 %947, %948
  br label %959

; <label>:950:                                    ; preds = %routine_shll__cl___eax.exit2251
  %951 = and i64 %940, 31
  %952 = add i64 %951, 4294967295
  %953 = and i64 %938, 4294967295
  %954 = and i64 %952, 4294967295
  %955 = shl i64 %953, %954
  %956 = trunc i64 %955 to i32
  %957 = icmp slt i32 %956, 0
  %958 = shl i32 %956, 1
  br label %959

; <label>:959:                                    ; preds = %950, %944
  %960 = phi i1 [ %947, %944 ], [ %957, %950 ]
  %961 = phi i1 [ %949, %944 ], [ false, %950 ]
  %962 = phi i32 [ %946, %944 ], [ %958, %950 ]
  %963 = zext i32 %962 to i64
  store i64 %963, i64* %RAX.i2234, align 8
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %965 = zext i1 %960 to i8
  store i8 %965, i8* %964, align 1
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %967 = and i32 %962, 254
  %968 = call i32 @llvm.ctpop.i32(i32 %967)
  %969 = trunc i32 %968 to i8
  %970 = and i8 %969, 1
  %971 = xor i8 %970, 1
  store i8 %971, i8* %966, align 1
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %972, align 1
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %974 = icmp eq i32 %962, 0
  %975 = zext i1 %974 to i8
  store i8 %975, i8* %973, align 1
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %977 = lshr i32 %962, 31
  %978 = trunc i32 %977 to i8
  store i8 %978, i8* %976, align 1
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %980 = zext i1 %961 to i8
  store i8 %980, i8* %979, align 1
  br label %routine_shll__cl___eax.exit2235

routine_shll__cl___eax.exit2235:                  ; preds = %routine_shll__cl___eax.exit2251, %959
  store %struct.Memory* %loadMem_4b06b5, %struct.Memory** %MEMORY
  %loadMem_4b06b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 33
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %PC.i2230 = bitcast %union.anon* %983 to i64*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %985 = getelementptr inbounds %struct.GPR, %struct.GPR* %984, i32 0, i32 1
  %986 = getelementptr inbounds %struct.Reg, %struct.Reg* %985, i32 0, i32 0
  %EAX.i2231 = bitcast %union.anon* %986 to i32*
  %987 = load i32, i32* %EAX.i2231
  %988 = zext i32 %987 to i64
  %989 = load i64, i64* %PC.i2230
  %990 = add i64 %989, 7
  store i64 %990, i64* %PC.i2230
  store i32 %987, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  store %struct.Memory* %loadMem_4b06b7, %struct.Memory** %MEMORY
  %loadMem_4b06be = load %struct.Memory*, %struct.Memory** %MEMORY
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %992 = getelementptr inbounds %struct.GPR, %struct.GPR* %991, i32 0, i32 33
  %993 = getelementptr inbounds %struct.Reg, %struct.Reg* %992, i32 0, i32 0
  %PC.i2228 = bitcast %union.anon* %993 to i64*
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %995 = getelementptr inbounds %struct.GPR, %struct.GPR* %994, i32 0, i32 5
  %996 = getelementptr inbounds %struct.Reg, %struct.Reg* %995, i32 0, i32 0
  %RCX.i2229 = bitcast %union.anon* %996 to i64*
  %997 = load i64, i64* %PC.i2228
  %998 = add i64 %997, 7
  store i64 %998, i64* %PC.i2228
  %999 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %1000 = zext i32 %999 to i64
  store i64 %1000, i64* %RCX.i2229, align 8
  store %struct.Memory* %loadMem_4b06be, %struct.Memory** %MEMORY
  %loadMem_4b06c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1002 = getelementptr inbounds %struct.GPR, %struct.GPR* %1001, i32 0, i32 33
  %1003 = getelementptr inbounds %struct.Reg, %struct.Reg* %1002, i32 0, i32 0
  %PC.i2225 = bitcast %union.anon* %1003 to i64*
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1005 = getelementptr inbounds %struct.GPR, %struct.GPR* %1004, i32 0, i32 1
  %1006 = getelementptr inbounds %struct.Reg, %struct.Reg* %1005, i32 0, i32 0
  %RAX.i2226 = bitcast %union.anon* %1006 to i64*
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 15
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %RBP.i2227 = bitcast %union.anon* %1009 to i64*
  %1010 = load i64, i64* %RBP.i2227
  %1011 = sub i64 %1010, 35428
  %1012 = load i64, i64* %PC.i2225
  %1013 = add i64 %1012, 6
  store i64 %1013, i64* %PC.i2225
  %1014 = inttoptr i64 %1011 to i32*
  %1015 = load i32, i32* %1014
  %1016 = zext i32 %1015 to i64
  store i64 %1016, i64* %RAX.i2226, align 8
  store %struct.Memory* %loadMem_4b06c5, %struct.Memory** %MEMORY
  %loadMem_4b06cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1018 = getelementptr inbounds %struct.GPR, %struct.GPR* %1017, i32 0, i32 33
  %1019 = getelementptr inbounds %struct.Reg, %struct.Reg* %1018, i32 0, i32 0
  %PC.i2221 = bitcast %union.anon* %1019 to i64*
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1021 = getelementptr inbounds %struct.GPR, %struct.GPR* %1020, i32 0, i32 5
  %1022 = getelementptr inbounds %struct.Reg, %struct.Reg* %1021, i32 0, i32 0
  %1023 = bitcast %union.anon* %1022 to %struct.anon.2*
  %CL.i2222 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1023, i32 0, i32 0
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1025 = getelementptr inbounds %struct.GPR, %struct.GPR* %1024, i32 0, i32 1
  %1026 = getelementptr inbounds %struct.Reg, %struct.Reg* %1025, i32 0, i32 0
  %RAX.i2223 = bitcast %union.anon* %1026 to i64*
  %1027 = load i64, i64* %RAX.i2223
  %1028 = load i8, i8* %CL.i2222
  %1029 = zext i8 %1028 to i64
  %1030 = load i64, i64* %PC.i2221
  %1031 = add i64 %1030, 2
  store i64 %1031, i64* %PC.i2221
  %1032 = trunc i64 %1029 to i5
  switch i5 %1032, label %1039 [
    i5 0, label %routine_shll__cl___eax.exit2224
    i5 1, label %1033
  ]

; <label>:1033:                                   ; preds = %routine_shll__cl___eax.exit2235
  %1034 = trunc i64 %1027 to i32
  %1035 = shl i32 %1034, 1
  %1036 = icmp slt i32 %1034, 0
  %1037 = icmp slt i32 %1035, 0
  %1038 = xor i1 %1036, %1037
  br label %1048

; <label>:1039:                                   ; preds = %routine_shll__cl___eax.exit2235
  %1040 = and i64 %1029, 31
  %1041 = add i64 %1040, 4294967295
  %1042 = and i64 %1027, 4294967295
  %1043 = and i64 %1041, 4294967295
  %1044 = shl i64 %1042, %1043
  %1045 = trunc i64 %1044 to i32
  %1046 = icmp slt i32 %1045, 0
  %1047 = shl i32 %1045, 1
  br label %1048

; <label>:1048:                                   ; preds = %1039, %1033
  %1049 = phi i1 [ %1036, %1033 ], [ %1046, %1039 ]
  %1050 = phi i1 [ %1038, %1033 ], [ false, %1039 ]
  %1051 = phi i32 [ %1035, %1033 ], [ %1047, %1039 ]
  %1052 = zext i32 %1051 to i64
  store i64 %1052, i64* %RAX.i2223, align 8
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1054 = zext i1 %1049 to i8
  store i8 %1054, i8* %1053, align 1
  %1055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1056 = and i32 %1051, 254
  %1057 = call i32 @llvm.ctpop.i32(i32 %1056)
  %1058 = trunc i32 %1057 to i8
  %1059 = and i8 %1058, 1
  %1060 = xor i8 %1059, 1
  store i8 %1060, i8* %1055, align 1
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1061, align 1
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1063 = icmp eq i32 %1051, 0
  %1064 = zext i1 %1063 to i8
  store i8 %1064, i8* %1062, align 1
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1066 = lshr i32 %1051, 31
  %1067 = trunc i32 %1066 to i8
  store i8 %1067, i8* %1065, align 1
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1069 = zext i1 %1050 to i8
  store i8 %1069, i8* %1068, align 1
  br label %routine_shll__cl___eax.exit2224

routine_shll__cl___eax.exit2224:                  ; preds = %routine_shll__cl___eax.exit2235, %1048
  store %struct.Memory* %loadMem_4b06cb, %struct.Memory** %MEMORY
  %loadMem_4b06cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 33
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %PC.i2218 = bitcast %union.anon* %1072 to i64*
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 1
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %EAX.i2219 = bitcast %union.anon* %1075 to i32*
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1077 = getelementptr inbounds %struct.GPR, %struct.GPR* %1076, i32 0, i32 15
  %1078 = getelementptr inbounds %struct.Reg, %struct.Reg* %1077, i32 0, i32 0
  %RBP.i2220 = bitcast %union.anon* %1078 to i64*
  %1079 = load i64, i64* %RBP.i2220
  %1080 = sub i64 %1079, 796
  %1081 = load i32, i32* %EAX.i2219
  %1082 = zext i32 %1081 to i64
  %1083 = load i64, i64* %PC.i2218
  %1084 = add i64 %1083, 6
  store i64 %1084, i64* %PC.i2218
  %1085 = inttoptr i64 %1080 to i32*
  store i32 %1081, i32* %1085
  store %struct.Memory* %loadMem_4b06cd, %struct.Memory** %MEMORY
  %loadMem_4b06d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 33
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %PC.i2216 = bitcast %union.anon* %1088 to i64*
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 5
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %RCX.i2217 = bitcast %union.anon* %1091 to i64*
  %1092 = load i64, i64* %PC.i2216
  %1093 = add i64 %1092, 7
  store i64 %1093, i64* %PC.i2216
  %1094 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %1095 = zext i32 %1094 to i64
  store i64 %1095, i64* %RCX.i2217, align 8
  store %struct.Memory* %loadMem_4b06d3, %struct.Memory** %MEMORY
  %loadMem_4b06da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1097 = getelementptr inbounds %struct.GPR, %struct.GPR* %1096, i32 0, i32 33
  %1098 = getelementptr inbounds %struct.Reg, %struct.Reg* %1097, i32 0, i32 0
  %PC.i2213 = bitcast %union.anon* %1098 to i64*
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 1
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %RAX.i2214 = bitcast %union.anon* %1101 to i64*
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 15
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %RBP.i2215 = bitcast %union.anon* %1104 to i64*
  %1105 = load i64, i64* %RBP.i2215
  %1106 = sub i64 %1105, 35428
  %1107 = load i64, i64* %PC.i2213
  %1108 = add i64 %1107, 6
  store i64 %1108, i64* %PC.i2213
  %1109 = inttoptr i64 %1106 to i32*
  %1110 = load i32, i32* %1109
  %1111 = zext i32 %1110 to i64
  store i64 %1111, i64* %RAX.i2214, align 8
  store %struct.Memory* %loadMem_4b06da, %struct.Memory** %MEMORY
  %loadMem_4b06e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 33
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %PC.i2209 = bitcast %union.anon* %1114 to i64*
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 5
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %1118 = bitcast %union.anon* %1117 to %struct.anon.2*
  %CL.i2210 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1118, i32 0, i32 0
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1120 = getelementptr inbounds %struct.GPR, %struct.GPR* %1119, i32 0, i32 1
  %1121 = getelementptr inbounds %struct.Reg, %struct.Reg* %1120, i32 0, i32 0
  %RAX.i2211 = bitcast %union.anon* %1121 to i64*
  %1122 = load i64, i64* %RAX.i2211
  %1123 = load i8, i8* %CL.i2210
  %1124 = zext i8 %1123 to i64
  %1125 = load i64, i64* %PC.i2209
  %1126 = add i64 %1125, 2
  store i64 %1126, i64* %PC.i2209
  %1127 = trunc i64 %1124 to i5
  switch i5 %1127, label %1134 [
    i5 0, label %routine_shll__cl___eax.exit2212
    i5 1, label %1128
  ]

; <label>:1128:                                   ; preds = %routine_shll__cl___eax.exit2224
  %1129 = trunc i64 %1122 to i32
  %1130 = shl i32 %1129, 1
  %1131 = icmp slt i32 %1129, 0
  %1132 = icmp slt i32 %1130, 0
  %1133 = xor i1 %1131, %1132
  br label %1143

; <label>:1134:                                   ; preds = %routine_shll__cl___eax.exit2224
  %1135 = and i64 %1124, 31
  %1136 = add i64 %1135, 4294967295
  %1137 = and i64 %1122, 4294967295
  %1138 = and i64 %1136, 4294967295
  %1139 = shl i64 %1137, %1138
  %1140 = trunc i64 %1139 to i32
  %1141 = icmp slt i32 %1140, 0
  %1142 = shl i32 %1140, 1
  br label %1143

; <label>:1143:                                   ; preds = %1134, %1128
  %1144 = phi i1 [ %1131, %1128 ], [ %1141, %1134 ]
  %1145 = phi i1 [ %1133, %1128 ], [ false, %1134 ]
  %1146 = phi i32 [ %1130, %1128 ], [ %1142, %1134 ]
  %1147 = zext i32 %1146 to i64
  store i64 %1147, i64* %RAX.i2211, align 8
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1149 = zext i1 %1144 to i8
  store i8 %1149, i8* %1148, align 1
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1151 = and i32 %1146, 254
  %1152 = call i32 @llvm.ctpop.i32(i32 %1151)
  %1153 = trunc i32 %1152 to i8
  %1154 = and i8 %1153, 1
  %1155 = xor i8 %1154, 1
  store i8 %1155, i8* %1150, align 1
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1156, align 1
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1158 = icmp eq i32 %1146, 0
  %1159 = zext i1 %1158 to i8
  store i8 %1159, i8* %1157, align 1
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1161 = lshr i32 %1146, 31
  %1162 = trunc i32 %1161 to i8
  store i8 %1162, i8* %1160, align 1
  %1163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1164 = zext i1 %1145 to i8
  store i8 %1164, i8* %1163, align 1
  br label %routine_shll__cl___eax.exit2212

routine_shll__cl___eax.exit2212:                  ; preds = %routine_shll__cl___eax.exit2224, %1143
  store %struct.Memory* %loadMem_4b06e0, %struct.Memory** %MEMORY
  %loadMem_4b06e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1166 = getelementptr inbounds %struct.GPR, %struct.GPR* %1165, i32 0, i32 33
  %1167 = getelementptr inbounds %struct.Reg, %struct.Reg* %1166, i32 0, i32 0
  %PC.i2206 = bitcast %union.anon* %1167 to i64*
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 1
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %EAX.i2207 = bitcast %union.anon* %1170 to i32*
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 15
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %RBP.i2208 = bitcast %union.anon* %1173 to i64*
  %1174 = load i64, i64* %RBP.i2208
  %1175 = sub i64 %1174, 800
  %1176 = load i32, i32* %EAX.i2207
  %1177 = zext i32 %1176 to i64
  %1178 = load i64, i64* %PC.i2206
  %1179 = add i64 %1178, 6
  store i64 %1179, i64* %PC.i2206
  %1180 = inttoptr i64 %1175 to i32*
  store i32 %1176, i32* %1180
  store %struct.Memory* %loadMem_4b06e2, %struct.Memory** %MEMORY
  %loadMem_4b06e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1182 = getelementptr inbounds %struct.GPR, %struct.GPR* %1181, i32 0, i32 33
  %1183 = getelementptr inbounds %struct.Reg, %struct.Reg* %1182, i32 0, i32 0
  %PC.i2204 = bitcast %union.anon* %1183 to i64*
  %1184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1185 = getelementptr inbounds %struct.GPR, %struct.GPR* %1184, i32 0, i32 15
  %1186 = getelementptr inbounds %struct.Reg, %struct.Reg* %1185, i32 0, i32 0
  %RBP.i2205 = bitcast %union.anon* %1186 to i64*
  %1187 = load i64, i64* %RBP.i2205
  %1188 = sub i64 %1187, 8
  %1189 = load i64, i64* %PC.i2204
  %1190 = add i64 %1189, 7
  store i64 %1190, i64* %PC.i2204
  %1191 = inttoptr i64 %1188 to i32*
  store i32 0, i32* %1191
  store %struct.Memory* %loadMem_4b06e8, %struct.Memory** %MEMORY
  br label %block_.L_4b06ef

block_.L_4b06ef:                                  ; preds = %block_.L_4b07f5, %routine_shll__cl___eax.exit2212
  %loadMem_4b06ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1193 = getelementptr inbounds %struct.GPR, %struct.GPR* %1192, i32 0, i32 33
  %1194 = getelementptr inbounds %struct.Reg, %struct.Reg* %1193, i32 0, i32 0
  %PC.i2201 = bitcast %union.anon* %1194 to i64*
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1196 = getelementptr inbounds %struct.GPR, %struct.GPR* %1195, i32 0, i32 1
  %1197 = getelementptr inbounds %struct.Reg, %struct.Reg* %1196, i32 0, i32 0
  %RAX.i2202 = bitcast %union.anon* %1197 to i64*
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1199 = getelementptr inbounds %struct.GPR, %struct.GPR* %1198, i32 0, i32 15
  %1200 = getelementptr inbounds %struct.Reg, %struct.Reg* %1199, i32 0, i32 0
  %RBP.i2203 = bitcast %union.anon* %1200 to i64*
  %1201 = load i64, i64* %RBP.i2203
  %1202 = sub i64 %1201, 8
  %1203 = load i64, i64* %PC.i2201
  %1204 = add i64 %1203, 3
  store i64 %1204, i64* %PC.i2201
  %1205 = inttoptr i64 %1202 to i32*
  %1206 = load i32, i32* %1205
  %1207 = zext i32 %1206 to i64
  store i64 %1207, i64* %RAX.i2202, align 8
  store %struct.Memory* %loadMem_4b06ef, %struct.Memory** %MEMORY
  %loadMem_4b06f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1209 = getelementptr inbounds %struct.GPR, %struct.GPR* %1208, i32 0, i32 33
  %1210 = getelementptr inbounds %struct.Reg, %struct.Reg* %1209, i32 0, i32 0
  %PC.i2198 = bitcast %union.anon* %1210 to i64*
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1212 = getelementptr inbounds %struct.GPR, %struct.GPR* %1211, i32 0, i32 5
  %1213 = getelementptr inbounds %struct.Reg, %struct.Reg* %1212, i32 0, i32 0
  %RCX.i2199 = bitcast %union.anon* %1213 to i64*
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1215 = getelementptr inbounds %struct.GPR, %struct.GPR* %1214, i32 0, i32 15
  %1216 = getelementptr inbounds %struct.Reg, %struct.Reg* %1215, i32 0, i32 0
  %RBP.i2200 = bitcast %union.anon* %1216 to i64*
  %1217 = load i64, i64* %RBP.i2200
  %1218 = sub i64 %1217, 804
  %1219 = load i64, i64* %PC.i2198
  %1220 = add i64 %1219, 6
  store i64 %1220, i64* %PC.i2198
  %1221 = inttoptr i64 %1218 to i32*
  %1222 = load i32, i32* %1221
  %1223 = zext i32 %1222 to i64
  store i64 %1223, i64* %RCX.i2199, align 8
  store %struct.Memory* %loadMem_4b06f2, %struct.Memory** %MEMORY
  %loadMem_4b06f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1225 = getelementptr inbounds %struct.GPR, %struct.GPR* %1224, i32 0, i32 33
  %1226 = getelementptr inbounds %struct.Reg, %struct.Reg* %1225, i32 0, i32 0
  %PC.i2196 = bitcast %union.anon* %1226 to i64*
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1228 = getelementptr inbounds %struct.GPR, %struct.GPR* %1227, i32 0, i32 5
  %1229 = getelementptr inbounds %struct.Reg, %struct.Reg* %1228, i32 0, i32 0
  %RCX.i2197 = bitcast %union.anon* %1229 to i64*
  %1230 = load i64, i64* %RCX.i2197
  %1231 = load i64, i64* %PC.i2196
  %1232 = add i64 %1231, 3
  store i64 %1232, i64* %PC.i2196
  %1233 = trunc i64 %1230 to i32
  %1234 = add i32 2, %1233
  %1235 = zext i32 %1234 to i64
  store i64 %1235, i64* %RCX.i2197, align 8
  %1236 = icmp ult i32 %1234, %1233
  %1237 = icmp ult i32 %1234, 2
  %1238 = or i1 %1236, %1237
  %1239 = zext i1 %1238 to i8
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1239, i8* %1240, align 1
  %1241 = and i32 %1234, 255
  %1242 = call i32 @llvm.ctpop.i32(i32 %1241)
  %1243 = trunc i32 %1242 to i8
  %1244 = and i8 %1243, 1
  %1245 = xor i8 %1244, 1
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1245, i8* %1246, align 1
  %1247 = xor i64 2, %1230
  %1248 = trunc i64 %1247 to i32
  %1249 = xor i32 %1248, %1234
  %1250 = lshr i32 %1249, 4
  %1251 = trunc i32 %1250 to i8
  %1252 = and i8 %1251, 1
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1252, i8* %1253, align 1
  %1254 = icmp eq i32 %1234, 0
  %1255 = zext i1 %1254 to i8
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1255, i8* %1256, align 1
  %1257 = lshr i32 %1234, 31
  %1258 = trunc i32 %1257 to i8
  %1259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1258, i8* %1259, align 1
  %1260 = lshr i32 %1233, 31
  %1261 = xor i32 %1257, %1260
  %1262 = add i32 %1261, %1257
  %1263 = icmp eq i32 %1262, 2
  %1264 = zext i1 %1263 to i8
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1264, i8* %1265, align 1
  store %struct.Memory* %loadMem_4b06f8, %struct.Memory** %MEMORY
  %loadMem_4b06fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1267 = getelementptr inbounds %struct.GPR, %struct.GPR* %1266, i32 0, i32 33
  %1268 = getelementptr inbounds %struct.Reg, %struct.Reg* %1267, i32 0, i32 0
  %PC.i2193 = bitcast %union.anon* %1268 to i64*
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1270 = getelementptr inbounds %struct.GPR, %struct.GPR* %1269, i32 0, i32 1
  %1271 = getelementptr inbounds %struct.Reg, %struct.Reg* %1270, i32 0, i32 0
  %EAX.i2194 = bitcast %union.anon* %1271 to i32*
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1273 = getelementptr inbounds %struct.GPR, %struct.GPR* %1272, i32 0, i32 5
  %1274 = getelementptr inbounds %struct.Reg, %struct.Reg* %1273, i32 0, i32 0
  %ECX.i2195 = bitcast %union.anon* %1274 to i32*
  %1275 = load i32, i32* %EAX.i2194
  %1276 = zext i32 %1275 to i64
  %1277 = load i32, i32* %ECX.i2195
  %1278 = zext i32 %1277 to i64
  %1279 = load i64, i64* %PC.i2193
  %1280 = add i64 %1279, 2
  store i64 %1280, i64* %PC.i2193
  %1281 = sub i32 %1275, %1277
  %1282 = icmp ult i32 %1275, %1277
  %1283 = zext i1 %1282 to i8
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1283, i8* %1284, align 1
  %1285 = and i32 %1281, 255
  %1286 = call i32 @llvm.ctpop.i32(i32 %1285)
  %1287 = trunc i32 %1286 to i8
  %1288 = and i8 %1287, 1
  %1289 = xor i8 %1288, 1
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1289, i8* %1290, align 1
  %1291 = xor i64 %1278, %1276
  %1292 = trunc i64 %1291 to i32
  %1293 = xor i32 %1292, %1281
  %1294 = lshr i32 %1293, 4
  %1295 = trunc i32 %1294 to i8
  %1296 = and i8 %1295, 1
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1296, i8* %1297, align 1
  %1298 = icmp eq i32 %1281, 0
  %1299 = zext i1 %1298 to i8
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1299, i8* %1300, align 1
  %1301 = lshr i32 %1281, 31
  %1302 = trunc i32 %1301 to i8
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1302, i8* %1303, align 1
  %1304 = lshr i32 %1275, 31
  %1305 = lshr i32 %1277, 31
  %1306 = xor i32 %1305, %1304
  %1307 = xor i32 %1301, %1304
  %1308 = add i32 %1307, %1306
  %1309 = icmp eq i32 %1308, 2
  %1310 = zext i1 %1309 to i8
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1310, i8* %1311, align 1
  store %struct.Memory* %loadMem_4b06fb, %struct.Memory** %MEMORY
  %loadMem_4b06fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 33
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %PC.i2192 = bitcast %union.anon* %1314 to i64*
  %1315 = load i64, i64* %PC.i2192
  %1316 = add i64 %1315, 262
  %1317 = load i64, i64* %PC.i2192
  %1318 = add i64 %1317, 6
  %1319 = load i64, i64* %PC.i2192
  %1320 = add i64 %1319, 6
  store i64 %1320, i64* %PC.i2192
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1322 = load i8, i8* %1321, align 1
  %1323 = icmp ne i8 %1322, 0
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1325 = load i8, i8* %1324, align 1
  %1326 = icmp ne i8 %1325, 0
  %1327 = xor i1 %1323, %1326
  %1328 = xor i1 %1327, true
  %1329 = zext i1 %1328 to i8
  store i8 %1329, i8* %BRANCH_TAKEN, align 1
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1331 = select i1 %1327, i64 %1318, i64 %1316
  store i64 %1331, i64* %1330, align 8
  store %struct.Memory* %loadMem_4b06fd, %struct.Memory** %MEMORY
  %loadBr_4b06fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b06fd = icmp eq i8 %loadBr_4b06fd, 1
  br i1 %cmpBr_4b06fd, label %block_.L_4b0803, label %block_4b0703

block_4b0703:                                     ; preds = %block_.L_4b06ef
  %loadMem_4b0703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 33
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %PC.i2190 = bitcast %union.anon* %1334 to i64*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 15
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %RBP.i2191 = bitcast %union.anon* %1337 to i64*
  %1338 = load i64, i64* %RBP.i2191
  %1339 = sub i64 %1338, 12
  %1340 = load i64, i64* %PC.i2190
  %1341 = add i64 %1340, 7
  store i64 %1341, i64* %PC.i2190
  %1342 = inttoptr i64 %1339 to i32*
  store i32 0, i32* %1342
  store %struct.Memory* %loadMem_4b0703, %struct.Memory** %MEMORY
  br label %block_.L_4b070a

block_.L_4b070a:                                  ; preds = %block_.L_4b07e2, %block_4b0703
  %loadMem_4b070a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 33
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %PC.i2187 = bitcast %union.anon* %1345 to i64*
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 1
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %RAX.i2188 = bitcast %union.anon* %1348 to i64*
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 15
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %RBP.i2189 = bitcast %union.anon* %1351 to i64*
  %1352 = load i64, i64* %RBP.i2189
  %1353 = sub i64 %1352, 12
  %1354 = load i64, i64* %PC.i2187
  %1355 = add i64 %1354, 3
  store i64 %1355, i64* %PC.i2187
  %1356 = inttoptr i64 %1353 to i32*
  %1357 = load i32, i32* %1356
  %1358 = zext i32 %1357 to i64
  store i64 %1358, i64* %RAX.i2188, align 8
  store %struct.Memory* %loadMem_4b070a, %struct.Memory** %MEMORY
  %loadMem_4b070d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 33
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %PC.i2184 = bitcast %union.anon* %1361 to i64*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 5
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %RCX.i2185 = bitcast %union.anon* %1364 to i64*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 15
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %RBP.i2186 = bitcast %union.anon* %1367 to i64*
  %1368 = load i64, i64* %RBP.i2186
  %1369 = sub i64 %1368, 8
  %1370 = load i64, i64* %PC.i2184
  %1371 = add i64 %1370, 4
  store i64 %1371, i64* %PC.i2184
  %1372 = inttoptr i64 %1369 to i32*
  %1373 = load i32, i32* %1372
  %1374 = sext i32 %1373 to i64
  store i64 %1374, i64* %RCX.i2185, align 8
  store %struct.Memory* %loadMem_4b070d, %struct.Memory** %MEMORY
  %loadMem_4b0711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1376 = getelementptr inbounds %struct.GPR, %struct.GPR* %1375, i32 0, i32 33
  %1377 = getelementptr inbounds %struct.Reg, %struct.Reg* %1376, i32 0, i32 0
  %PC.i2181 = bitcast %union.anon* %1377 to i64*
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1379 = getelementptr inbounds %struct.GPR, %struct.GPR* %1378, i32 0, i32 1
  %1380 = getelementptr inbounds %struct.Reg, %struct.Reg* %1379, i32 0, i32 0
  %EAX.i2182 = bitcast %union.anon* %1380 to i32*
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1382 = getelementptr inbounds %struct.GPR, %struct.GPR* %1381, i32 0, i32 5
  %1383 = getelementptr inbounds %struct.Reg, %struct.Reg* %1382, i32 0, i32 0
  %RCX.i2183 = bitcast %union.anon* %1383 to i64*
  %1384 = load i32, i32* %EAX.i2182
  %1385 = zext i32 %1384 to i64
  %1386 = load i64, i64* %RCX.i2183
  %1387 = mul i64 %1386, 4
  %1388 = add i64 %1387, 7489456
  %1389 = load i64, i64* %PC.i2181
  %1390 = add i64 %1389, 7
  store i64 %1390, i64* %PC.i2181
  %1391 = inttoptr i64 %1388 to i32*
  %1392 = load i32, i32* %1391
  %1393 = sub i32 %1384, %1392
  %1394 = icmp ult i32 %1384, %1392
  %1395 = zext i1 %1394 to i8
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1395, i8* %1396, align 1
  %1397 = and i32 %1393, 255
  %1398 = call i32 @llvm.ctpop.i32(i32 %1397)
  %1399 = trunc i32 %1398 to i8
  %1400 = and i8 %1399, 1
  %1401 = xor i8 %1400, 1
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1401, i8* %1402, align 1
  %1403 = xor i32 %1392, %1384
  %1404 = xor i32 %1403, %1393
  %1405 = lshr i32 %1404, 4
  %1406 = trunc i32 %1405 to i8
  %1407 = and i8 %1406, 1
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1407, i8* %1408, align 1
  %1409 = icmp eq i32 %1393, 0
  %1410 = zext i1 %1409 to i8
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1410, i8* %1411, align 1
  %1412 = lshr i32 %1393, 31
  %1413 = trunc i32 %1412 to i8
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1413, i8* %1414, align 1
  %1415 = lshr i32 %1384, 31
  %1416 = lshr i32 %1392, 31
  %1417 = xor i32 %1416, %1415
  %1418 = xor i32 %1412, %1415
  %1419 = add i32 %1418, %1417
  %1420 = icmp eq i32 %1419, 2
  %1421 = zext i1 %1420 to i8
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1421, i8* %1422, align 1
  store %struct.Memory* %loadMem_4b0711, %struct.Memory** %MEMORY
  %loadMem_4b0718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1424 = getelementptr inbounds %struct.GPR, %struct.GPR* %1423, i32 0, i32 33
  %1425 = getelementptr inbounds %struct.Reg, %struct.Reg* %1424, i32 0, i32 0
  %PC.i2180 = bitcast %union.anon* %1425 to i64*
  %1426 = load i64, i64* %PC.i2180
  %1427 = add i64 %1426, 216
  %1428 = load i64, i64* %PC.i2180
  %1429 = add i64 %1428, 6
  %1430 = load i64, i64* %PC.i2180
  %1431 = add i64 %1430, 6
  store i64 %1431, i64* %PC.i2180
  %1432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1433 = load i8, i8* %1432, align 1
  %1434 = icmp ne i8 %1433, 0
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1436 = load i8, i8* %1435, align 1
  %1437 = icmp ne i8 %1436, 0
  %1438 = xor i1 %1434, %1437
  %1439 = xor i1 %1438, true
  %1440 = zext i1 %1439 to i8
  store i8 %1440, i8* %BRANCH_TAKEN, align 1
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1442 = select i1 %1438, i64 %1429, i64 %1427
  store i64 %1442, i64* %1441, align 8
  store %struct.Memory* %loadMem_4b0718, %struct.Memory** %MEMORY
  %loadBr_4b0718 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0718 = icmp eq i8 %loadBr_4b0718, 1
  br i1 %cmpBr_4b0718, label %block_.L_4b07f0, label %block_4b071e

block_4b071e:                                     ; preds = %block_.L_4b070a
  %loadMem_4b071e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1444 = getelementptr inbounds %struct.GPR, %struct.GPR* %1443, i32 0, i32 33
  %1445 = getelementptr inbounds %struct.Reg, %struct.Reg* %1444, i32 0, i32 0
  %PC.i2178 = bitcast %union.anon* %1445 to i64*
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1447 = getelementptr inbounds %struct.GPR, %struct.GPR* %1446, i32 0, i32 15
  %1448 = getelementptr inbounds %struct.Reg, %struct.Reg* %1447, i32 0, i32 0
  %RBP.i2179 = bitcast %union.anon* %1448 to i64*
  %1449 = load i64, i64* %RBP.i2179
  %1450 = sub i64 %1449, 16
  %1451 = load i64, i64* %PC.i2178
  %1452 = add i64 %1451, 7
  store i64 %1452, i64* %PC.i2178
  %1453 = inttoptr i64 %1450 to i32*
  store i32 0, i32* %1453
  store %struct.Memory* %loadMem_4b071e, %struct.Memory** %MEMORY
  br label %block_.L_4b0725

block_.L_4b0725:                                  ; preds = %block_4b072f, %block_4b071e
  %loadMem_4b0725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1455 = getelementptr inbounds %struct.GPR, %struct.GPR* %1454, i32 0, i32 33
  %1456 = getelementptr inbounds %struct.Reg, %struct.Reg* %1455, i32 0, i32 0
  %PC.i2176 = bitcast %union.anon* %1456 to i64*
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1458 = getelementptr inbounds %struct.GPR, %struct.GPR* %1457, i32 0, i32 15
  %1459 = getelementptr inbounds %struct.Reg, %struct.Reg* %1458, i32 0, i32 0
  %RBP.i2177 = bitcast %union.anon* %1459 to i64*
  %1460 = load i64, i64* %RBP.i2177
  %1461 = sub i64 %1460, 16
  %1462 = load i64, i64* %PC.i2176
  %1463 = add i64 %1462, 4
  store i64 %1463, i64* %PC.i2176
  %1464 = inttoptr i64 %1461 to i32*
  %1465 = load i32, i32* %1464
  %1466 = sub i32 %1465, 3
  %1467 = icmp ult i32 %1465, 3
  %1468 = zext i1 %1467 to i8
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1468, i8* %1469, align 1
  %1470 = and i32 %1466, 255
  %1471 = call i32 @llvm.ctpop.i32(i32 %1470)
  %1472 = trunc i32 %1471 to i8
  %1473 = and i8 %1472, 1
  %1474 = xor i8 %1473, 1
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1474, i8* %1475, align 1
  %1476 = xor i32 %1465, 3
  %1477 = xor i32 %1476, %1466
  %1478 = lshr i32 %1477, 4
  %1479 = trunc i32 %1478 to i8
  %1480 = and i8 %1479, 1
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1480, i8* %1481, align 1
  %1482 = icmp eq i32 %1466, 0
  %1483 = zext i1 %1482 to i8
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1483, i8* %1484, align 1
  %1485 = lshr i32 %1466, 31
  %1486 = trunc i32 %1485 to i8
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1486, i8* %1487, align 1
  %1488 = lshr i32 %1465, 31
  %1489 = xor i32 %1485, %1488
  %1490 = add i32 %1489, %1488
  %1491 = icmp eq i32 %1490, 2
  %1492 = zext i1 %1491 to i8
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1492, i8* %1493, align 1
  store %struct.Memory* %loadMem_4b0725, %struct.Memory** %MEMORY
  %loadMem_4b0729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1495 = getelementptr inbounds %struct.GPR, %struct.GPR* %1494, i32 0, i32 33
  %1496 = getelementptr inbounds %struct.Reg, %struct.Reg* %1495, i32 0, i32 0
  %PC.i2175 = bitcast %union.anon* %1496 to i64*
  %1497 = load i64, i64* %PC.i2175
  %1498 = add i64 %1497, 180
  %1499 = load i64, i64* %PC.i2175
  %1500 = add i64 %1499, 6
  %1501 = load i64, i64* %PC.i2175
  %1502 = add i64 %1501, 6
  store i64 %1502, i64* %PC.i2175
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1504 = load i8, i8* %1503, align 1
  %1505 = icmp ne i8 %1504, 0
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1507 = load i8, i8* %1506, align 1
  %1508 = icmp ne i8 %1507, 0
  %1509 = xor i1 %1505, %1508
  %1510 = xor i1 %1509, true
  %1511 = zext i1 %1510 to i8
  store i8 %1511, i8* %BRANCH_TAKEN, align 1
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1513 = select i1 %1509, i64 %1500, i64 %1498
  store i64 %1513, i64* %1512, align 8
  store %struct.Memory* %loadMem_4b0729, %struct.Memory** %MEMORY
  %loadBr_4b0729 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0729 = icmp eq i8 %loadBr_4b0729, 1
  br i1 %cmpBr_4b0729, label %block_.L_4b07dd, label %block_4b072f

block_4b072f:                                     ; preds = %block_.L_4b0725
  %loadMem_4b072f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1515 = getelementptr inbounds %struct.GPR, %struct.GPR* %1514, i32 0, i32 33
  %1516 = getelementptr inbounds %struct.Reg, %struct.Reg* %1515, i32 0, i32 0
  %PC.i2172 = bitcast %union.anon* %1516 to i64*
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1518 = getelementptr inbounds %struct.GPR, %struct.GPR* %1517, i32 0, i32 1
  %1519 = getelementptr inbounds %struct.Reg, %struct.Reg* %1518, i32 0, i32 0
  %RAX.i2173 = bitcast %union.anon* %1519 to i64*
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1521 = getelementptr inbounds %struct.GPR, %struct.GPR* %1520, i32 0, i32 15
  %1522 = getelementptr inbounds %struct.Reg, %struct.Reg* %1521, i32 0, i32 0
  %RBP.i2174 = bitcast %union.anon* %1522 to i64*
  %1523 = load i64, i64* %RBP.i2174
  %1524 = sub i64 %1523, 1888
  %1525 = load i64, i64* %PC.i2172
  %1526 = add i64 %1525, 7
  store i64 %1526, i64* %PC.i2172
  store i64 %1524, i64* %RAX.i2173, align 8
  store %struct.Memory* %loadMem_4b072f, %struct.Memory** %MEMORY
  %loadMem_4b0736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1528 = getelementptr inbounds %struct.GPR, %struct.GPR* %1527, i32 0, i32 33
  %1529 = getelementptr inbounds %struct.Reg, %struct.Reg* %1528, i32 0, i32 0
  %PC.i2169 = bitcast %union.anon* %1529 to i64*
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1531 = getelementptr inbounds %struct.GPR, %struct.GPR* %1530, i32 0, i32 5
  %1532 = getelementptr inbounds %struct.Reg, %struct.Reg* %1531, i32 0, i32 0
  %RCX.i2170 = bitcast %union.anon* %1532 to i64*
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1534 = getelementptr inbounds %struct.GPR, %struct.GPR* %1533, i32 0, i32 15
  %1535 = getelementptr inbounds %struct.Reg, %struct.Reg* %1534, i32 0, i32 0
  %RBP.i2171 = bitcast %union.anon* %1535 to i64*
  %1536 = load i64, i64* %RBP.i2171
  %1537 = sub i64 %1536, 2976
  %1538 = load i64, i64* %PC.i2169
  %1539 = add i64 %1538, 7
  store i64 %1539, i64* %PC.i2169
  store i64 %1537, i64* %RCX.i2170, align 8
  store %struct.Memory* %loadMem_4b0736, %struct.Memory** %MEMORY
  %loadMem_4b073d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1541 = getelementptr inbounds %struct.GPR, %struct.GPR* %1540, i32 0, i32 33
  %1542 = getelementptr inbounds %struct.Reg, %struct.Reg* %1541, i32 0, i32 0
  %PC.i2166 = bitcast %union.anon* %1542 to i64*
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1544 = getelementptr inbounds %struct.GPR, %struct.GPR* %1543, i32 0, i32 7
  %1545 = getelementptr inbounds %struct.Reg, %struct.Reg* %1544, i32 0, i32 0
  %RDX.i2167 = bitcast %union.anon* %1545 to i64*
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1547 = getelementptr inbounds %struct.GPR, %struct.GPR* %1546, i32 0, i32 15
  %1548 = getelementptr inbounds %struct.Reg, %struct.Reg* %1547, i32 0, i32 0
  %RBP.i2168 = bitcast %union.anon* %1548 to i64*
  %1549 = load i64, i64* %RBP.i2168
  %1550 = sub i64 %1549, 796
  %1551 = load i64, i64* %PC.i2166
  %1552 = add i64 %1551, 6
  store i64 %1552, i64* %PC.i2166
  %1553 = inttoptr i64 %1550 to i32*
  %1554 = load i32, i32* %1553
  %1555 = zext i32 %1554 to i64
  store i64 %1555, i64* %RDX.i2167, align 8
  store %struct.Memory* %loadMem_4b073d, %struct.Memory** %MEMORY
  %loadMem_4b0743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 33
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %PC.i2164 = bitcast %union.anon* %1558 to i64*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1560 = getelementptr inbounds %struct.GPR, %struct.GPR* %1559, i32 0, i32 9
  %1561 = getelementptr inbounds %struct.Reg, %struct.Reg* %1560, i32 0, i32 0
  %RSI.i2165 = bitcast %union.anon* %1561 to i64*
  %1562 = load i64, i64* %PC.i2164
  %1563 = add i64 %1562, 8
  store i64 %1563, i64* %PC.i2164
  %1564 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %1564, i64* %RSI.i2165, align 8
  store %struct.Memory* %loadMem_4b0743, %struct.Memory** %MEMORY
  %loadMem_4b074b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1566 = getelementptr inbounds %struct.GPR, %struct.GPR* %1565, i32 0, i32 33
  %1567 = getelementptr inbounds %struct.Reg, %struct.Reg* %1566, i32 0, i32 0
  %PC.i2161 = bitcast %union.anon* %1567 to i64*
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1569 = getelementptr inbounds %struct.GPR, %struct.GPR* %1568, i32 0, i32 11
  %1570 = getelementptr inbounds %struct.Reg, %struct.Reg* %1569, i32 0, i32 0
  %RDI.i2162 = bitcast %union.anon* %1570 to i64*
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1572 = getelementptr inbounds %struct.GPR, %struct.GPR* %1571, i32 0, i32 15
  %1573 = getelementptr inbounds %struct.Reg, %struct.Reg* %1572, i32 0, i32 0
  %RBP.i2163 = bitcast %union.anon* %1573 to i64*
  %1574 = load i64, i64* %RBP.i2163
  %1575 = sub i64 %1574, 8
  %1576 = load i64, i64* %PC.i2161
  %1577 = add i64 %1576, 4
  store i64 %1577, i64* %PC.i2161
  %1578 = inttoptr i64 %1575 to i32*
  %1579 = load i32, i32* %1578
  %1580 = sext i32 %1579 to i64
  store i64 %1580, i64* %RDI.i2162, align 8
  store %struct.Memory* %loadMem_4b074b, %struct.Memory** %MEMORY
  %loadMem_4b074f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1582 = getelementptr inbounds %struct.GPR, %struct.GPR* %1581, i32 0, i32 33
  %1583 = getelementptr inbounds %struct.Reg, %struct.Reg* %1582, i32 0, i32 0
  %PC.i2158 = bitcast %union.anon* %1583 to i64*
  %1584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1585 = getelementptr inbounds %struct.GPR, %struct.GPR* %1584, i32 0, i32 9
  %1586 = getelementptr inbounds %struct.Reg, %struct.Reg* %1585, i32 0, i32 0
  %RSI.i2159 = bitcast %union.anon* %1586 to i64*
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 11
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %RDI.i2160 = bitcast %union.anon* %1589 to i64*
  %1590 = load i64, i64* %RSI.i2159
  %1591 = load i64, i64* %RDI.i2160
  %1592 = mul i64 %1591, 8
  %1593 = add i64 %1592, %1590
  %1594 = load i64, i64* %PC.i2158
  %1595 = add i64 %1594, 4
  store i64 %1595, i64* %PC.i2158
  %1596 = inttoptr i64 %1593 to i64*
  %1597 = load i64, i64* %1596
  store i64 %1597, i64* %RSI.i2159, align 8
  store %struct.Memory* %loadMem_4b074f, %struct.Memory** %MEMORY
  %loadMem_4b0753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 33
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %PC.i2155 = bitcast %union.anon* %1600 to i64*
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1602 = getelementptr inbounds %struct.GPR, %struct.GPR* %1601, i32 0, i32 11
  %1603 = getelementptr inbounds %struct.Reg, %struct.Reg* %1602, i32 0, i32 0
  %RDI.i2156 = bitcast %union.anon* %1603 to i64*
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1605 = getelementptr inbounds %struct.GPR, %struct.GPR* %1604, i32 0, i32 15
  %1606 = getelementptr inbounds %struct.Reg, %struct.Reg* %1605, i32 0, i32 0
  %RBP.i2157 = bitcast %union.anon* %1606 to i64*
  %1607 = load i64, i64* %RBP.i2157
  %1608 = sub i64 %1607, 12
  %1609 = load i64, i64* %PC.i2155
  %1610 = add i64 %1609, 4
  store i64 %1610, i64* %PC.i2155
  %1611 = inttoptr i64 %1608 to i32*
  %1612 = load i32, i32* %1611
  %1613 = sext i32 %1612 to i64
  store i64 %1613, i64* %RDI.i2156, align 8
  store %struct.Memory* %loadMem_4b0753, %struct.Memory** %MEMORY
  %loadMem_4b0757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 33
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %PC.i2152 = bitcast %union.anon* %1616 to i64*
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 9
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %RSI.i2153 = bitcast %union.anon* %1619 to i64*
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1621 = getelementptr inbounds %struct.GPR, %struct.GPR* %1620, i32 0, i32 11
  %1622 = getelementptr inbounds %struct.Reg, %struct.Reg* %1621, i32 0, i32 0
  %RDI.i2154 = bitcast %union.anon* %1622 to i64*
  %1623 = load i64, i64* %RSI.i2153
  %1624 = load i64, i64* %RDI.i2154
  %1625 = mul i64 %1624, 8
  %1626 = add i64 %1625, %1623
  %1627 = load i64, i64* %PC.i2152
  %1628 = add i64 %1627, 4
  store i64 %1628, i64* %PC.i2152
  %1629 = inttoptr i64 %1626 to i64*
  %1630 = load i64, i64* %1629
  store i64 %1630, i64* %RSI.i2153, align 8
  store %struct.Memory* %loadMem_4b0757, %struct.Memory** %MEMORY
  %loadMem_4b075b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1632 = getelementptr inbounds %struct.GPR, %struct.GPR* %1631, i32 0, i32 33
  %1633 = getelementptr inbounds %struct.Reg, %struct.Reg* %1632, i32 0, i32 0
  %PC.i2149 = bitcast %union.anon* %1633 to i64*
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1635 = getelementptr inbounds %struct.GPR, %struct.GPR* %1634, i32 0, i32 11
  %1636 = getelementptr inbounds %struct.Reg, %struct.Reg* %1635, i32 0, i32 0
  %RDI.i2150 = bitcast %union.anon* %1636 to i64*
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1638 = getelementptr inbounds %struct.GPR, %struct.GPR* %1637, i32 0, i32 15
  %1639 = getelementptr inbounds %struct.Reg, %struct.Reg* %1638, i32 0, i32 0
  %RBP.i2151 = bitcast %union.anon* %1639 to i64*
  %1640 = load i64, i64* %RBP.i2151
  %1641 = sub i64 %1640, 16
  %1642 = load i64, i64* %PC.i2149
  %1643 = add i64 %1642, 4
  store i64 %1643, i64* %PC.i2149
  %1644 = inttoptr i64 %1641 to i32*
  %1645 = load i32, i32* %1644
  %1646 = sext i32 %1645 to i64
  store i64 %1646, i64* %RDI.i2150, align 8
  store %struct.Memory* %loadMem_4b075b, %struct.Memory** %MEMORY
  %loadMem_4b075f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1648 = getelementptr inbounds %struct.GPR, %struct.GPR* %1647, i32 0, i32 33
  %1649 = getelementptr inbounds %struct.Reg, %struct.Reg* %1648, i32 0, i32 0
  %PC.i2145 = bitcast %union.anon* %1649 to i64*
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1651 = getelementptr inbounds %struct.GPR, %struct.GPR* %1650, i32 0, i32 7
  %1652 = getelementptr inbounds %struct.Reg, %struct.Reg* %1651, i32 0, i32 0
  %EDX.i2146 = bitcast %union.anon* %1652 to i32*
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1654 = getelementptr inbounds %struct.GPR, %struct.GPR* %1653, i32 0, i32 9
  %1655 = getelementptr inbounds %struct.Reg, %struct.Reg* %1654, i32 0, i32 0
  %RSI.i2147 = bitcast %union.anon* %1655 to i64*
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 11
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %RDI.i2148 = bitcast %union.anon* %1658 to i64*
  %1659 = load i64, i64* %RSI.i2147
  %1660 = load i64, i64* %RDI.i2148
  %1661 = mul i64 %1660, 4
  %1662 = add i64 %1661, %1659
  %1663 = load i32, i32* %EDX.i2146
  %1664 = zext i32 %1663 to i64
  %1665 = load i64, i64* %PC.i2145
  %1666 = add i64 %1665, 3
  store i64 %1666, i64* %PC.i2145
  %1667 = inttoptr i64 %1662 to i32*
  store i32 %1663, i32* %1667
  store %struct.Memory* %loadMem_4b075f, %struct.Memory** %MEMORY
  %loadMem_4b0762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1669 = getelementptr inbounds %struct.GPR, %struct.GPR* %1668, i32 0, i32 33
  %1670 = getelementptr inbounds %struct.Reg, %struct.Reg* %1669, i32 0, i32 0
  %PC.i2143 = bitcast %union.anon* %1670 to i64*
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 9
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %RSI.i2144 = bitcast %union.anon* %1673 to i64*
  %1674 = load i64, i64* %PC.i2143
  %1675 = add i64 %1674, 8
  store i64 %1675, i64* %PC.i2143
  %1676 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %1676, i64* %RSI.i2144, align 8
  store %struct.Memory* %loadMem_4b0762, %struct.Memory** %MEMORY
  %loadMem_4b076a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1678 = getelementptr inbounds %struct.GPR, %struct.GPR* %1677, i32 0, i32 33
  %1679 = getelementptr inbounds %struct.Reg, %struct.Reg* %1678, i32 0, i32 0
  %PC.i2140 = bitcast %union.anon* %1679 to i64*
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 11
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %RDI.i2141 = bitcast %union.anon* %1682 to i64*
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1684 = getelementptr inbounds %struct.GPR, %struct.GPR* %1683, i32 0, i32 15
  %1685 = getelementptr inbounds %struct.Reg, %struct.Reg* %1684, i32 0, i32 0
  %RBP.i2142 = bitcast %union.anon* %1685 to i64*
  %1686 = load i64, i64* %RBP.i2142
  %1687 = sub i64 %1686, 8
  %1688 = load i64, i64* %PC.i2140
  %1689 = add i64 %1688, 4
  store i64 %1689, i64* %PC.i2140
  %1690 = inttoptr i64 %1687 to i32*
  %1691 = load i32, i32* %1690
  %1692 = sext i32 %1691 to i64
  store i64 %1692, i64* %RDI.i2141, align 8
  store %struct.Memory* %loadMem_4b076a, %struct.Memory** %MEMORY
  %loadMem_4b076e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 33
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %PC.i2137 = bitcast %union.anon* %1695 to i64*
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1697 = getelementptr inbounds %struct.GPR, %struct.GPR* %1696, i32 0, i32 9
  %1698 = getelementptr inbounds %struct.Reg, %struct.Reg* %1697, i32 0, i32 0
  %RSI.i2138 = bitcast %union.anon* %1698 to i64*
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1700 = getelementptr inbounds %struct.GPR, %struct.GPR* %1699, i32 0, i32 11
  %1701 = getelementptr inbounds %struct.Reg, %struct.Reg* %1700, i32 0, i32 0
  %RDI.i2139 = bitcast %union.anon* %1701 to i64*
  %1702 = load i64, i64* %RSI.i2138
  %1703 = load i64, i64* %RDI.i2139
  %1704 = mul i64 %1703, 8
  %1705 = add i64 %1704, %1702
  %1706 = load i64, i64* %PC.i2137
  %1707 = add i64 %1706, 4
  store i64 %1707, i64* %PC.i2137
  %1708 = inttoptr i64 %1705 to i64*
  %1709 = load i64, i64* %1708
  store i64 %1709, i64* %RSI.i2138, align 8
  store %struct.Memory* %loadMem_4b076e, %struct.Memory** %MEMORY
  %loadMem_4b0772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1711 = getelementptr inbounds %struct.GPR, %struct.GPR* %1710, i32 0, i32 33
  %1712 = getelementptr inbounds %struct.Reg, %struct.Reg* %1711, i32 0, i32 0
  %PC.i2134 = bitcast %union.anon* %1712 to i64*
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1714 = getelementptr inbounds %struct.GPR, %struct.GPR* %1713, i32 0, i32 11
  %1715 = getelementptr inbounds %struct.Reg, %struct.Reg* %1714, i32 0, i32 0
  %RDI.i2135 = bitcast %union.anon* %1715 to i64*
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1717 = getelementptr inbounds %struct.GPR, %struct.GPR* %1716, i32 0, i32 15
  %1718 = getelementptr inbounds %struct.Reg, %struct.Reg* %1717, i32 0, i32 0
  %RBP.i2136 = bitcast %union.anon* %1718 to i64*
  %1719 = load i64, i64* %RBP.i2136
  %1720 = sub i64 %1719, 12
  %1721 = load i64, i64* %PC.i2134
  %1722 = add i64 %1721, 4
  store i64 %1722, i64* %PC.i2134
  %1723 = inttoptr i64 %1720 to i32*
  %1724 = load i32, i32* %1723
  %1725 = sext i32 %1724 to i64
  store i64 %1725, i64* %RDI.i2135, align 8
  store %struct.Memory* %loadMem_4b0772, %struct.Memory** %MEMORY
  %loadMem_4b0776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1727 = getelementptr inbounds %struct.GPR, %struct.GPR* %1726, i32 0, i32 33
  %1728 = getelementptr inbounds %struct.Reg, %struct.Reg* %1727, i32 0, i32 0
  %PC.i2131 = bitcast %union.anon* %1728 to i64*
  %1729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1730 = getelementptr inbounds %struct.GPR, %struct.GPR* %1729, i32 0, i32 9
  %1731 = getelementptr inbounds %struct.Reg, %struct.Reg* %1730, i32 0, i32 0
  %RSI.i2132 = bitcast %union.anon* %1731 to i64*
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1733 = getelementptr inbounds %struct.GPR, %struct.GPR* %1732, i32 0, i32 11
  %1734 = getelementptr inbounds %struct.Reg, %struct.Reg* %1733, i32 0, i32 0
  %RDI.i2133 = bitcast %union.anon* %1734 to i64*
  %1735 = load i64, i64* %RSI.i2132
  %1736 = load i64, i64* %RDI.i2133
  %1737 = mul i64 %1736, 8
  %1738 = add i64 %1737, %1735
  %1739 = load i64, i64* %PC.i2131
  %1740 = add i64 %1739, 4
  store i64 %1740, i64* %PC.i2131
  %1741 = inttoptr i64 %1738 to i64*
  %1742 = load i64, i64* %1741
  store i64 %1742, i64* %RSI.i2132, align 8
  store %struct.Memory* %loadMem_4b0776, %struct.Memory** %MEMORY
  %loadMem_4b077a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 33
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %PC.i2128 = bitcast %union.anon* %1745 to i64*
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1747 = getelementptr inbounds %struct.GPR, %struct.GPR* %1746, i32 0, i32 11
  %1748 = getelementptr inbounds %struct.Reg, %struct.Reg* %1747, i32 0, i32 0
  %RDI.i2129 = bitcast %union.anon* %1748 to i64*
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 15
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %RBP.i2130 = bitcast %union.anon* %1751 to i64*
  %1752 = load i64, i64* %RBP.i2130
  %1753 = sub i64 %1752, 16
  %1754 = load i64, i64* %PC.i2128
  %1755 = add i64 %1754, 4
  store i64 %1755, i64* %PC.i2128
  %1756 = inttoptr i64 %1753 to i32*
  %1757 = load i32, i32* %1756
  %1758 = sext i32 %1757 to i64
  store i64 %1758, i64* %RDI.i2129, align 8
  store %struct.Memory* %loadMem_4b077a, %struct.Memory** %MEMORY
  %loadMem_4b077e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 33
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %PC.i2125 = bitcast %union.anon* %1761 to i64*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 9
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %RSI.i2126 = bitcast %union.anon* %1764 to i64*
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1766 = getelementptr inbounds %struct.GPR, %struct.GPR* %1765, i32 0, i32 11
  %1767 = getelementptr inbounds %struct.Reg, %struct.Reg* %1766, i32 0, i32 0
  %RDI.i2127 = bitcast %union.anon* %1767 to i64*
  %1768 = load i64, i64* %RSI.i2126
  %1769 = load i64, i64* %RDI.i2127
  %1770 = mul i64 %1769, 4
  %1771 = add i64 %1770, %1768
  %1772 = load i64, i64* %PC.i2125
  %1773 = add i64 %1772, 7
  store i64 %1773, i64* %PC.i2125
  %1774 = inttoptr i64 %1771 to i32*
  store i32 0, i32* %1774
  store %struct.Memory* %loadMem_4b077e, %struct.Memory** %MEMORY
  %loadMem_4b0785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 33
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %PC.i2122 = bitcast %union.anon* %1777 to i64*
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1779 = getelementptr inbounds %struct.GPR, %struct.GPR* %1778, i32 0, i32 9
  %1780 = getelementptr inbounds %struct.Reg, %struct.Reg* %1779, i32 0, i32 0
  %RSI.i2123 = bitcast %union.anon* %1780 to i64*
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1782 = getelementptr inbounds %struct.GPR, %struct.GPR* %1781, i32 0, i32 15
  %1783 = getelementptr inbounds %struct.Reg, %struct.Reg* %1782, i32 0, i32 0
  %RBP.i2124 = bitcast %union.anon* %1783 to i64*
  %1784 = load i64, i64* %RBP.i2124
  %1785 = sub i64 %1784, 8
  %1786 = load i64, i64* %PC.i2122
  %1787 = add i64 %1786, 4
  store i64 %1787, i64* %PC.i2122
  %1788 = inttoptr i64 %1785 to i32*
  %1789 = load i32, i32* %1788
  %1790 = sext i32 %1789 to i64
  store i64 %1790, i64* %RSI.i2123, align 8
  store %struct.Memory* %loadMem_4b0785, %struct.Memory** %MEMORY
  %loadMem_4b0789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 33
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %PC.i2120 = bitcast %union.anon* %1793 to i64*
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1795 = getelementptr inbounds %struct.GPR, %struct.GPR* %1794, i32 0, i32 9
  %1796 = getelementptr inbounds %struct.Reg, %struct.Reg* %1795, i32 0, i32 0
  %RSI.i2121 = bitcast %union.anon* %1796 to i64*
  %1797 = load i64, i64* %RSI.i2121
  %1798 = load i64, i64* %PC.i2120
  %1799 = add i64 %1798, 7
  store i64 %1799, i64* %PC.i2120
  %1800 = sext i64 %1797 to i128
  %1801 = and i128 %1800, -18446744073709551616
  %1802 = zext i64 %1797 to i128
  %1803 = or i128 %1801, %1802
  %1804 = mul i128 180, %1803
  %1805 = trunc i128 %1804 to i64
  store i64 %1805, i64* %RSI.i2121, align 8
  %1806 = sext i64 %1805 to i128
  %1807 = icmp ne i128 %1806, %1804
  %1808 = zext i1 %1807 to i8
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1808, i8* %1809, align 1
  %1810 = trunc i128 %1804 to i32
  %1811 = and i32 %1810, 255
  %1812 = call i32 @llvm.ctpop.i32(i32 %1811)
  %1813 = trunc i32 %1812 to i8
  %1814 = and i8 %1813, 1
  %1815 = xor i8 %1814, 1
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1815, i8* %1816, align 1
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1817, align 1
  %1818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1818, align 1
  %1819 = lshr i64 %1805, 63
  %1820 = trunc i64 %1819 to i8
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1820, i8* %1821, align 1
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1808, i8* %1822, align 1
  store %struct.Memory* %loadMem_4b0789, %struct.Memory** %MEMORY
  %loadMem_4b0790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1824 = getelementptr inbounds %struct.GPR, %struct.GPR* %1823, i32 0, i32 33
  %1825 = getelementptr inbounds %struct.Reg, %struct.Reg* %1824, i32 0, i32 0
  %PC.i2117 = bitcast %union.anon* %1825 to i64*
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1827 = getelementptr inbounds %struct.GPR, %struct.GPR* %1826, i32 0, i32 5
  %1828 = getelementptr inbounds %struct.Reg, %struct.Reg* %1827, i32 0, i32 0
  %RCX.i2118 = bitcast %union.anon* %1828 to i64*
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 9
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %RSI.i2119 = bitcast %union.anon* %1831 to i64*
  %1832 = load i64, i64* %RCX.i2118
  %1833 = load i64, i64* %RSI.i2119
  %1834 = load i64, i64* %PC.i2117
  %1835 = add i64 %1834, 3
  store i64 %1835, i64* %PC.i2117
  %1836 = add i64 %1833, %1832
  store i64 %1836, i64* %RCX.i2118, align 8
  %1837 = icmp ult i64 %1836, %1832
  %1838 = icmp ult i64 %1836, %1833
  %1839 = or i1 %1837, %1838
  %1840 = zext i1 %1839 to i8
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1840, i8* %1841, align 1
  %1842 = trunc i64 %1836 to i32
  %1843 = and i32 %1842, 255
  %1844 = call i32 @llvm.ctpop.i32(i32 %1843)
  %1845 = trunc i32 %1844 to i8
  %1846 = and i8 %1845, 1
  %1847 = xor i8 %1846, 1
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1847, i8* %1848, align 1
  %1849 = xor i64 %1833, %1832
  %1850 = xor i64 %1849, %1836
  %1851 = lshr i64 %1850, 4
  %1852 = trunc i64 %1851 to i8
  %1853 = and i8 %1852, 1
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1853, i8* %1854, align 1
  %1855 = icmp eq i64 %1836, 0
  %1856 = zext i1 %1855 to i8
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1856, i8* %1857, align 1
  %1858 = lshr i64 %1836, 63
  %1859 = trunc i64 %1858 to i8
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1859, i8* %1860, align 1
  %1861 = lshr i64 %1832, 63
  %1862 = lshr i64 %1833, 63
  %1863 = xor i64 %1858, %1861
  %1864 = xor i64 %1858, %1862
  %1865 = add i64 %1863, %1864
  %1866 = icmp eq i64 %1865, 2
  %1867 = zext i1 %1866 to i8
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1867, i8* %1868, align 1
  store %struct.Memory* %loadMem_4b0790, %struct.Memory** %MEMORY
  %loadMem_4b0793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1870 = getelementptr inbounds %struct.GPR, %struct.GPR* %1869, i32 0, i32 33
  %1871 = getelementptr inbounds %struct.Reg, %struct.Reg* %1870, i32 0, i32 0
  %PC.i2114 = bitcast %union.anon* %1871 to i64*
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1873 = getelementptr inbounds %struct.GPR, %struct.GPR* %1872, i32 0, i32 9
  %1874 = getelementptr inbounds %struct.Reg, %struct.Reg* %1873, i32 0, i32 0
  %RSI.i2115 = bitcast %union.anon* %1874 to i64*
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1876 = getelementptr inbounds %struct.GPR, %struct.GPR* %1875, i32 0, i32 15
  %1877 = getelementptr inbounds %struct.Reg, %struct.Reg* %1876, i32 0, i32 0
  %RBP.i2116 = bitcast %union.anon* %1877 to i64*
  %1878 = load i64, i64* %RBP.i2116
  %1879 = sub i64 %1878, 12
  %1880 = load i64, i64* %PC.i2114
  %1881 = add i64 %1880, 4
  store i64 %1881, i64* %PC.i2114
  %1882 = inttoptr i64 %1879 to i32*
  %1883 = load i32, i32* %1882
  %1884 = sext i32 %1883 to i64
  store i64 %1884, i64* %RSI.i2115, align 8
  store %struct.Memory* %loadMem_4b0793, %struct.Memory** %MEMORY
  %loadMem_4b0797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1886 = getelementptr inbounds %struct.GPR, %struct.GPR* %1885, i32 0, i32 33
  %1887 = getelementptr inbounds %struct.Reg, %struct.Reg* %1886, i32 0, i32 0
  %PC.i2112 = bitcast %union.anon* %1887 to i64*
  %1888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1889 = getelementptr inbounds %struct.GPR, %struct.GPR* %1888, i32 0, i32 9
  %1890 = getelementptr inbounds %struct.Reg, %struct.Reg* %1889, i32 0, i32 0
  %RSI.i2113 = bitcast %union.anon* %1890 to i64*
  %1891 = load i64, i64* %RSI.i2113
  %1892 = load i64, i64* %PC.i2112
  %1893 = add i64 %1892, 4
  store i64 %1893, i64* %PC.i2112
  %1894 = sext i64 %1891 to i128
  %1895 = and i128 %1894, -18446744073709551616
  %1896 = zext i64 %1891 to i128
  %1897 = or i128 %1895, %1896
  %1898 = mul i128 12, %1897
  %1899 = trunc i128 %1898 to i64
  store i64 %1899, i64* %RSI.i2113, align 8
  %1900 = sext i64 %1899 to i128
  %1901 = icmp ne i128 %1900, %1898
  %1902 = zext i1 %1901 to i8
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1902, i8* %1903, align 1
  %1904 = trunc i128 %1898 to i32
  %1905 = and i32 %1904, 255
  %1906 = call i32 @llvm.ctpop.i32(i32 %1905)
  %1907 = trunc i32 %1906 to i8
  %1908 = and i8 %1907, 1
  %1909 = xor i8 %1908, 1
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1909, i8* %1910, align 1
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1911, align 1
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1912, align 1
  %1913 = lshr i64 %1899, 63
  %1914 = trunc i64 %1913 to i8
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1914, i8* %1915, align 1
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1902, i8* %1916, align 1
  store %struct.Memory* %loadMem_4b0797, %struct.Memory** %MEMORY
  %loadMem_4b079b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1918 = getelementptr inbounds %struct.GPR, %struct.GPR* %1917, i32 0, i32 33
  %1919 = getelementptr inbounds %struct.Reg, %struct.Reg* %1918, i32 0, i32 0
  %PC.i2109 = bitcast %union.anon* %1919 to i64*
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1921 = getelementptr inbounds %struct.GPR, %struct.GPR* %1920, i32 0, i32 5
  %1922 = getelementptr inbounds %struct.Reg, %struct.Reg* %1921, i32 0, i32 0
  %RCX.i2110 = bitcast %union.anon* %1922 to i64*
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 9
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %RSI.i2111 = bitcast %union.anon* %1925 to i64*
  %1926 = load i64, i64* %RCX.i2110
  %1927 = load i64, i64* %RSI.i2111
  %1928 = load i64, i64* %PC.i2109
  %1929 = add i64 %1928, 3
  store i64 %1929, i64* %PC.i2109
  %1930 = add i64 %1927, %1926
  store i64 %1930, i64* %RCX.i2110, align 8
  %1931 = icmp ult i64 %1930, %1926
  %1932 = icmp ult i64 %1930, %1927
  %1933 = or i1 %1931, %1932
  %1934 = zext i1 %1933 to i8
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1934, i8* %1935, align 1
  %1936 = trunc i64 %1930 to i32
  %1937 = and i32 %1936, 255
  %1938 = call i32 @llvm.ctpop.i32(i32 %1937)
  %1939 = trunc i32 %1938 to i8
  %1940 = and i8 %1939, 1
  %1941 = xor i8 %1940, 1
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1941, i8* %1942, align 1
  %1943 = xor i64 %1927, %1926
  %1944 = xor i64 %1943, %1930
  %1945 = lshr i64 %1944, 4
  %1946 = trunc i64 %1945 to i8
  %1947 = and i8 %1946, 1
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1947, i8* %1948, align 1
  %1949 = icmp eq i64 %1930, 0
  %1950 = zext i1 %1949 to i8
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1950, i8* %1951, align 1
  %1952 = lshr i64 %1930, 63
  %1953 = trunc i64 %1952 to i8
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1953, i8* %1954, align 1
  %1955 = lshr i64 %1926, 63
  %1956 = lshr i64 %1927, 63
  %1957 = xor i64 %1952, %1955
  %1958 = xor i64 %1952, %1956
  %1959 = add i64 %1957, %1958
  %1960 = icmp eq i64 %1959, 2
  %1961 = zext i1 %1960 to i8
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1961, i8* %1962, align 1
  store %struct.Memory* %loadMem_4b079b, %struct.Memory** %MEMORY
  %loadMem_4b079e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1964 = getelementptr inbounds %struct.GPR, %struct.GPR* %1963, i32 0, i32 33
  %1965 = getelementptr inbounds %struct.Reg, %struct.Reg* %1964, i32 0, i32 0
  %PC.i2106 = bitcast %union.anon* %1965 to i64*
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1967 = getelementptr inbounds %struct.GPR, %struct.GPR* %1966, i32 0, i32 9
  %1968 = getelementptr inbounds %struct.Reg, %struct.Reg* %1967, i32 0, i32 0
  %RSI.i2107 = bitcast %union.anon* %1968 to i64*
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1970 = getelementptr inbounds %struct.GPR, %struct.GPR* %1969, i32 0, i32 15
  %1971 = getelementptr inbounds %struct.Reg, %struct.Reg* %1970, i32 0, i32 0
  %RBP.i2108 = bitcast %union.anon* %1971 to i64*
  %1972 = load i64, i64* %RBP.i2108
  %1973 = sub i64 %1972, 16
  %1974 = load i64, i64* %PC.i2106
  %1975 = add i64 %1974, 4
  store i64 %1975, i64* %PC.i2106
  %1976 = inttoptr i64 %1973 to i32*
  %1977 = load i32, i32* %1976
  %1978 = sext i32 %1977 to i64
  store i64 %1978, i64* %RSI.i2107, align 8
  store %struct.Memory* %loadMem_4b079e, %struct.Memory** %MEMORY
  %loadMem_4b07a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1980 = getelementptr inbounds %struct.GPR, %struct.GPR* %1979, i32 0, i32 33
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %PC.i2103 = bitcast %union.anon* %1981 to i64*
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 5
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %RCX.i2104 = bitcast %union.anon* %1984 to i64*
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1986 = getelementptr inbounds %struct.GPR, %struct.GPR* %1985, i32 0, i32 9
  %1987 = getelementptr inbounds %struct.Reg, %struct.Reg* %1986, i32 0, i32 0
  %RSI.i2105 = bitcast %union.anon* %1987 to i64*
  %1988 = load i64, i64* %RCX.i2104
  %1989 = load i64, i64* %RSI.i2105
  %1990 = mul i64 %1989, 4
  %1991 = add i64 %1990, %1988
  %1992 = load i64, i64* %PC.i2103
  %1993 = add i64 %1992, 7
  store i64 %1993, i64* %PC.i2103
  %1994 = inttoptr i64 %1991 to i32*
  store i32 0, i32* %1994
  store %struct.Memory* %loadMem_4b07a2, %struct.Memory** %MEMORY
  %loadMem_4b07a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1996 = getelementptr inbounds %struct.GPR, %struct.GPR* %1995, i32 0, i32 33
  %1997 = getelementptr inbounds %struct.Reg, %struct.Reg* %1996, i32 0, i32 0
  %PC.i2100 = bitcast %union.anon* %1997 to i64*
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 7
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %RDX.i2101 = bitcast %union.anon* %2000 to i64*
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 15
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %RBP.i2102 = bitcast %union.anon* %2003 to i64*
  %2004 = load i64, i64* %RBP.i2102
  %2005 = sub i64 %2004, 796
  %2006 = load i64, i64* %PC.i2100
  %2007 = add i64 %2006, 6
  store i64 %2007, i64* %PC.i2100
  %2008 = inttoptr i64 %2005 to i32*
  %2009 = load i32, i32* %2008
  %2010 = zext i32 %2009 to i64
  store i64 %2010, i64* %RDX.i2101, align 8
  store %struct.Memory* %loadMem_4b07a9, %struct.Memory** %MEMORY
  %loadMem_4b07af = load %struct.Memory*, %struct.Memory** %MEMORY
  %2011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2012 = getelementptr inbounds %struct.GPR, %struct.GPR* %2011, i32 0, i32 33
  %2013 = getelementptr inbounds %struct.Reg, %struct.Reg* %2012, i32 0, i32 0
  %PC.i2097 = bitcast %union.anon* %2013 to i64*
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2015 = getelementptr inbounds %struct.GPR, %struct.GPR* %2014, i32 0, i32 5
  %2016 = getelementptr inbounds %struct.Reg, %struct.Reg* %2015, i32 0, i32 0
  %RCX.i2098 = bitcast %union.anon* %2016 to i64*
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2018 = getelementptr inbounds %struct.GPR, %struct.GPR* %2017, i32 0, i32 15
  %2019 = getelementptr inbounds %struct.Reg, %struct.Reg* %2018, i32 0, i32 0
  %RBP.i2099 = bitcast %union.anon* %2019 to i64*
  %2020 = load i64, i64* %RBP.i2099
  %2021 = sub i64 %2020, 8
  %2022 = load i64, i64* %PC.i2097
  %2023 = add i64 %2022, 4
  store i64 %2023, i64* %PC.i2097
  %2024 = inttoptr i64 %2021 to i32*
  %2025 = load i32, i32* %2024
  %2026 = sext i32 %2025 to i64
  store i64 %2026, i64* %RCX.i2098, align 8
  store %struct.Memory* %loadMem_4b07af, %struct.Memory** %MEMORY
  %loadMem_4b07b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2028 = getelementptr inbounds %struct.GPR, %struct.GPR* %2027, i32 0, i32 33
  %2029 = getelementptr inbounds %struct.Reg, %struct.Reg* %2028, i32 0, i32 0
  %PC.i2095 = bitcast %union.anon* %2029 to i64*
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 5
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %RCX.i2096 = bitcast %union.anon* %2032 to i64*
  %2033 = load i64, i64* %RCX.i2096
  %2034 = load i64, i64* %PC.i2095
  %2035 = add i64 %2034, 7
  store i64 %2035, i64* %PC.i2095
  %2036 = sext i64 %2033 to i128
  %2037 = and i128 %2036, -18446744073709551616
  %2038 = zext i64 %2033 to i128
  %2039 = or i128 %2037, %2038
  %2040 = mul i128 180, %2039
  %2041 = trunc i128 %2040 to i64
  store i64 %2041, i64* %RCX.i2096, align 8
  %2042 = sext i64 %2041 to i128
  %2043 = icmp ne i128 %2042, %2040
  %2044 = zext i1 %2043 to i8
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2044, i8* %2045, align 1
  %2046 = trunc i128 %2040 to i32
  %2047 = and i32 %2046, 255
  %2048 = call i32 @llvm.ctpop.i32(i32 %2047)
  %2049 = trunc i32 %2048 to i8
  %2050 = and i8 %2049, 1
  %2051 = xor i8 %2050, 1
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2051, i8* %2052, align 1
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2053, align 1
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2054, align 1
  %2055 = lshr i64 %2041, 63
  %2056 = trunc i64 %2055 to i8
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2056, i8* %2057, align 1
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2044, i8* %2058, align 1
  store %struct.Memory* %loadMem_4b07b3, %struct.Memory** %MEMORY
  %loadMem_4b07ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2060 = getelementptr inbounds %struct.GPR, %struct.GPR* %2059, i32 0, i32 33
  %2061 = getelementptr inbounds %struct.Reg, %struct.Reg* %2060, i32 0, i32 0
  %PC.i2092 = bitcast %union.anon* %2061 to i64*
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2063 = getelementptr inbounds %struct.GPR, %struct.GPR* %2062, i32 0, i32 1
  %2064 = getelementptr inbounds %struct.Reg, %struct.Reg* %2063, i32 0, i32 0
  %RAX.i2093 = bitcast %union.anon* %2064 to i64*
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 5
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %RCX.i2094 = bitcast %union.anon* %2067 to i64*
  %2068 = load i64, i64* %RAX.i2093
  %2069 = load i64, i64* %RCX.i2094
  %2070 = load i64, i64* %PC.i2092
  %2071 = add i64 %2070, 3
  store i64 %2071, i64* %PC.i2092
  %2072 = add i64 %2069, %2068
  store i64 %2072, i64* %RAX.i2093, align 8
  %2073 = icmp ult i64 %2072, %2068
  %2074 = icmp ult i64 %2072, %2069
  %2075 = or i1 %2073, %2074
  %2076 = zext i1 %2075 to i8
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2076, i8* %2077, align 1
  %2078 = trunc i64 %2072 to i32
  %2079 = and i32 %2078, 255
  %2080 = call i32 @llvm.ctpop.i32(i32 %2079)
  %2081 = trunc i32 %2080 to i8
  %2082 = and i8 %2081, 1
  %2083 = xor i8 %2082, 1
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2083, i8* %2084, align 1
  %2085 = xor i64 %2069, %2068
  %2086 = xor i64 %2085, %2072
  %2087 = lshr i64 %2086, 4
  %2088 = trunc i64 %2087 to i8
  %2089 = and i8 %2088, 1
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2089, i8* %2090, align 1
  %2091 = icmp eq i64 %2072, 0
  %2092 = zext i1 %2091 to i8
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2092, i8* %2093, align 1
  %2094 = lshr i64 %2072, 63
  %2095 = trunc i64 %2094 to i8
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2095, i8* %2096, align 1
  %2097 = lshr i64 %2068, 63
  %2098 = lshr i64 %2069, 63
  %2099 = xor i64 %2094, %2097
  %2100 = xor i64 %2094, %2098
  %2101 = add i64 %2099, %2100
  %2102 = icmp eq i64 %2101, 2
  %2103 = zext i1 %2102 to i8
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2103, i8* %2104, align 1
  store %struct.Memory* %loadMem_4b07ba, %struct.Memory** %MEMORY
  %loadMem_4b07bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2106 = getelementptr inbounds %struct.GPR, %struct.GPR* %2105, i32 0, i32 33
  %2107 = getelementptr inbounds %struct.Reg, %struct.Reg* %2106, i32 0, i32 0
  %PC.i2089 = bitcast %union.anon* %2107 to i64*
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2109 = getelementptr inbounds %struct.GPR, %struct.GPR* %2108, i32 0, i32 5
  %2110 = getelementptr inbounds %struct.Reg, %struct.Reg* %2109, i32 0, i32 0
  %RCX.i2090 = bitcast %union.anon* %2110 to i64*
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2112 = getelementptr inbounds %struct.GPR, %struct.GPR* %2111, i32 0, i32 15
  %2113 = getelementptr inbounds %struct.Reg, %struct.Reg* %2112, i32 0, i32 0
  %RBP.i2091 = bitcast %union.anon* %2113 to i64*
  %2114 = load i64, i64* %RBP.i2091
  %2115 = sub i64 %2114, 12
  %2116 = load i64, i64* %PC.i2089
  %2117 = add i64 %2116, 4
  store i64 %2117, i64* %PC.i2089
  %2118 = inttoptr i64 %2115 to i32*
  %2119 = load i32, i32* %2118
  %2120 = sext i32 %2119 to i64
  store i64 %2120, i64* %RCX.i2090, align 8
  store %struct.Memory* %loadMem_4b07bd, %struct.Memory** %MEMORY
  %loadMem_4b07c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2122 = getelementptr inbounds %struct.GPR, %struct.GPR* %2121, i32 0, i32 33
  %2123 = getelementptr inbounds %struct.Reg, %struct.Reg* %2122, i32 0, i32 0
  %PC.i2087 = bitcast %union.anon* %2123 to i64*
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2125 = getelementptr inbounds %struct.GPR, %struct.GPR* %2124, i32 0, i32 5
  %2126 = getelementptr inbounds %struct.Reg, %struct.Reg* %2125, i32 0, i32 0
  %RCX.i2088 = bitcast %union.anon* %2126 to i64*
  %2127 = load i64, i64* %RCX.i2088
  %2128 = load i64, i64* %PC.i2087
  %2129 = add i64 %2128, 4
  store i64 %2129, i64* %PC.i2087
  %2130 = sext i64 %2127 to i128
  %2131 = and i128 %2130, -18446744073709551616
  %2132 = zext i64 %2127 to i128
  %2133 = or i128 %2131, %2132
  %2134 = mul i128 12, %2133
  %2135 = trunc i128 %2134 to i64
  store i64 %2135, i64* %RCX.i2088, align 8
  %2136 = sext i64 %2135 to i128
  %2137 = icmp ne i128 %2136, %2134
  %2138 = zext i1 %2137 to i8
  %2139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2138, i8* %2139, align 1
  %2140 = trunc i128 %2134 to i32
  %2141 = and i32 %2140, 255
  %2142 = call i32 @llvm.ctpop.i32(i32 %2141)
  %2143 = trunc i32 %2142 to i8
  %2144 = and i8 %2143, 1
  %2145 = xor i8 %2144, 1
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2145, i8* %2146, align 1
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2147, align 1
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2148, align 1
  %2149 = lshr i64 %2135, 63
  %2150 = trunc i64 %2149 to i8
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2150, i8* %2151, align 1
  %2152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2138, i8* %2152, align 1
  store %struct.Memory* %loadMem_4b07c1, %struct.Memory** %MEMORY
  %loadMem_4b07c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 33
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %PC.i2084 = bitcast %union.anon* %2155 to i64*
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2157 = getelementptr inbounds %struct.GPR, %struct.GPR* %2156, i32 0, i32 1
  %2158 = getelementptr inbounds %struct.Reg, %struct.Reg* %2157, i32 0, i32 0
  %RAX.i2085 = bitcast %union.anon* %2158 to i64*
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2160 = getelementptr inbounds %struct.GPR, %struct.GPR* %2159, i32 0, i32 5
  %2161 = getelementptr inbounds %struct.Reg, %struct.Reg* %2160, i32 0, i32 0
  %RCX.i2086 = bitcast %union.anon* %2161 to i64*
  %2162 = load i64, i64* %RAX.i2085
  %2163 = load i64, i64* %RCX.i2086
  %2164 = load i64, i64* %PC.i2084
  %2165 = add i64 %2164, 3
  store i64 %2165, i64* %PC.i2084
  %2166 = add i64 %2163, %2162
  store i64 %2166, i64* %RAX.i2085, align 8
  %2167 = icmp ult i64 %2166, %2162
  %2168 = icmp ult i64 %2166, %2163
  %2169 = or i1 %2167, %2168
  %2170 = zext i1 %2169 to i8
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2170, i8* %2171, align 1
  %2172 = trunc i64 %2166 to i32
  %2173 = and i32 %2172, 255
  %2174 = call i32 @llvm.ctpop.i32(i32 %2173)
  %2175 = trunc i32 %2174 to i8
  %2176 = and i8 %2175, 1
  %2177 = xor i8 %2176, 1
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2177, i8* %2178, align 1
  %2179 = xor i64 %2163, %2162
  %2180 = xor i64 %2179, %2166
  %2181 = lshr i64 %2180, 4
  %2182 = trunc i64 %2181 to i8
  %2183 = and i8 %2182, 1
  %2184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2183, i8* %2184, align 1
  %2185 = icmp eq i64 %2166, 0
  %2186 = zext i1 %2185 to i8
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2186, i8* %2187, align 1
  %2188 = lshr i64 %2166, 63
  %2189 = trunc i64 %2188 to i8
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2189, i8* %2190, align 1
  %2191 = lshr i64 %2162, 63
  %2192 = lshr i64 %2163, 63
  %2193 = xor i64 %2188, %2191
  %2194 = xor i64 %2188, %2192
  %2195 = add i64 %2193, %2194
  %2196 = icmp eq i64 %2195, 2
  %2197 = zext i1 %2196 to i8
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2197, i8* %2198, align 1
  store %struct.Memory* %loadMem_4b07c5, %struct.Memory** %MEMORY
  %loadMem_4b07c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2200 = getelementptr inbounds %struct.GPR, %struct.GPR* %2199, i32 0, i32 33
  %2201 = getelementptr inbounds %struct.Reg, %struct.Reg* %2200, i32 0, i32 0
  %PC.i2081 = bitcast %union.anon* %2201 to i64*
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2203 = getelementptr inbounds %struct.GPR, %struct.GPR* %2202, i32 0, i32 5
  %2204 = getelementptr inbounds %struct.Reg, %struct.Reg* %2203, i32 0, i32 0
  %RCX.i2082 = bitcast %union.anon* %2204 to i64*
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2206 = getelementptr inbounds %struct.GPR, %struct.GPR* %2205, i32 0, i32 15
  %2207 = getelementptr inbounds %struct.Reg, %struct.Reg* %2206, i32 0, i32 0
  %RBP.i2083 = bitcast %union.anon* %2207 to i64*
  %2208 = load i64, i64* %RBP.i2083
  %2209 = sub i64 %2208, 16
  %2210 = load i64, i64* %PC.i2081
  %2211 = add i64 %2210, 4
  store i64 %2211, i64* %PC.i2081
  %2212 = inttoptr i64 %2209 to i32*
  %2213 = load i32, i32* %2212
  %2214 = sext i32 %2213 to i64
  store i64 %2214, i64* %RCX.i2082, align 8
  store %struct.Memory* %loadMem_4b07c8, %struct.Memory** %MEMORY
  %loadMem_4b07cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2216 = getelementptr inbounds %struct.GPR, %struct.GPR* %2215, i32 0, i32 33
  %2217 = getelementptr inbounds %struct.Reg, %struct.Reg* %2216, i32 0, i32 0
  %PC.i2077 = bitcast %union.anon* %2217 to i64*
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2219 = getelementptr inbounds %struct.GPR, %struct.GPR* %2218, i32 0, i32 7
  %2220 = getelementptr inbounds %struct.Reg, %struct.Reg* %2219, i32 0, i32 0
  %EDX.i2078 = bitcast %union.anon* %2220 to i32*
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2222 = getelementptr inbounds %struct.GPR, %struct.GPR* %2221, i32 0, i32 1
  %2223 = getelementptr inbounds %struct.Reg, %struct.Reg* %2222, i32 0, i32 0
  %RAX.i2079 = bitcast %union.anon* %2223 to i64*
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2225 = getelementptr inbounds %struct.GPR, %struct.GPR* %2224, i32 0, i32 5
  %2226 = getelementptr inbounds %struct.Reg, %struct.Reg* %2225, i32 0, i32 0
  %RCX.i2080 = bitcast %union.anon* %2226 to i64*
  %2227 = load i64, i64* %RAX.i2079
  %2228 = load i64, i64* %RCX.i2080
  %2229 = mul i64 %2228, 4
  %2230 = add i64 %2229, %2227
  %2231 = load i32, i32* %EDX.i2078
  %2232 = zext i32 %2231 to i64
  %2233 = load i64, i64* %PC.i2077
  %2234 = add i64 %2233, 3
  store i64 %2234, i64* %PC.i2077
  %2235 = inttoptr i64 %2230 to i32*
  store i32 %2231, i32* %2235
  store %struct.Memory* %loadMem_4b07cc, %struct.Memory** %MEMORY
  %loadMem_4b07cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2237 = getelementptr inbounds %struct.GPR, %struct.GPR* %2236, i32 0, i32 33
  %2238 = getelementptr inbounds %struct.Reg, %struct.Reg* %2237, i32 0, i32 0
  %PC.i2074 = bitcast %union.anon* %2238 to i64*
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2240 = getelementptr inbounds %struct.GPR, %struct.GPR* %2239, i32 0, i32 1
  %2241 = getelementptr inbounds %struct.Reg, %struct.Reg* %2240, i32 0, i32 0
  %RAX.i2075 = bitcast %union.anon* %2241 to i64*
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2243 = getelementptr inbounds %struct.GPR, %struct.GPR* %2242, i32 0, i32 15
  %2244 = getelementptr inbounds %struct.Reg, %struct.Reg* %2243, i32 0, i32 0
  %RBP.i2076 = bitcast %union.anon* %2244 to i64*
  %2245 = load i64, i64* %RBP.i2076
  %2246 = sub i64 %2245, 16
  %2247 = load i64, i64* %PC.i2074
  %2248 = add i64 %2247, 3
  store i64 %2248, i64* %PC.i2074
  %2249 = inttoptr i64 %2246 to i32*
  %2250 = load i32, i32* %2249
  %2251 = zext i32 %2250 to i64
  store i64 %2251, i64* %RAX.i2075, align 8
  store %struct.Memory* %loadMem_4b07cf, %struct.Memory** %MEMORY
  %loadMem_4b07d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2253 = getelementptr inbounds %struct.GPR, %struct.GPR* %2252, i32 0, i32 33
  %2254 = getelementptr inbounds %struct.Reg, %struct.Reg* %2253, i32 0, i32 0
  %PC.i2072 = bitcast %union.anon* %2254 to i64*
  %2255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2256 = getelementptr inbounds %struct.GPR, %struct.GPR* %2255, i32 0, i32 1
  %2257 = getelementptr inbounds %struct.Reg, %struct.Reg* %2256, i32 0, i32 0
  %RAX.i2073 = bitcast %union.anon* %2257 to i64*
  %2258 = load i64, i64* %RAX.i2073
  %2259 = load i64, i64* %PC.i2072
  %2260 = add i64 %2259, 3
  store i64 %2260, i64* %PC.i2072
  %2261 = trunc i64 %2258 to i32
  %2262 = add i32 1, %2261
  %2263 = zext i32 %2262 to i64
  store i64 %2263, i64* %RAX.i2073, align 8
  %2264 = icmp ult i32 %2262, %2261
  %2265 = icmp ult i32 %2262, 1
  %2266 = or i1 %2264, %2265
  %2267 = zext i1 %2266 to i8
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2267, i8* %2268, align 1
  %2269 = and i32 %2262, 255
  %2270 = call i32 @llvm.ctpop.i32(i32 %2269)
  %2271 = trunc i32 %2270 to i8
  %2272 = and i8 %2271, 1
  %2273 = xor i8 %2272, 1
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2273, i8* %2274, align 1
  %2275 = xor i64 1, %2258
  %2276 = trunc i64 %2275 to i32
  %2277 = xor i32 %2276, %2262
  %2278 = lshr i32 %2277, 4
  %2279 = trunc i32 %2278 to i8
  %2280 = and i8 %2279, 1
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2280, i8* %2281, align 1
  %2282 = icmp eq i32 %2262, 0
  %2283 = zext i1 %2282 to i8
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2283, i8* %2284, align 1
  %2285 = lshr i32 %2262, 31
  %2286 = trunc i32 %2285 to i8
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2286, i8* %2287, align 1
  %2288 = lshr i32 %2261, 31
  %2289 = xor i32 %2285, %2288
  %2290 = add i32 %2289, %2285
  %2291 = icmp eq i32 %2290, 2
  %2292 = zext i1 %2291 to i8
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2292, i8* %2293, align 1
  store %struct.Memory* %loadMem_4b07d2, %struct.Memory** %MEMORY
  %loadMem_4b07d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2295 = getelementptr inbounds %struct.GPR, %struct.GPR* %2294, i32 0, i32 33
  %2296 = getelementptr inbounds %struct.Reg, %struct.Reg* %2295, i32 0, i32 0
  %PC.i2069 = bitcast %union.anon* %2296 to i64*
  %2297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2298 = getelementptr inbounds %struct.GPR, %struct.GPR* %2297, i32 0, i32 1
  %2299 = getelementptr inbounds %struct.Reg, %struct.Reg* %2298, i32 0, i32 0
  %EAX.i2070 = bitcast %union.anon* %2299 to i32*
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2301 = getelementptr inbounds %struct.GPR, %struct.GPR* %2300, i32 0, i32 15
  %2302 = getelementptr inbounds %struct.Reg, %struct.Reg* %2301, i32 0, i32 0
  %RBP.i2071 = bitcast %union.anon* %2302 to i64*
  %2303 = load i64, i64* %RBP.i2071
  %2304 = sub i64 %2303, 16
  %2305 = load i32, i32* %EAX.i2070
  %2306 = zext i32 %2305 to i64
  %2307 = load i64, i64* %PC.i2069
  %2308 = add i64 %2307, 3
  store i64 %2308, i64* %PC.i2069
  %2309 = inttoptr i64 %2304 to i32*
  store i32 %2305, i32* %2309
  store %struct.Memory* %loadMem_4b07d5, %struct.Memory** %MEMORY
  %loadMem_4b07d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2311 = getelementptr inbounds %struct.GPR, %struct.GPR* %2310, i32 0, i32 33
  %2312 = getelementptr inbounds %struct.Reg, %struct.Reg* %2311, i32 0, i32 0
  %PC.i2068 = bitcast %union.anon* %2312 to i64*
  %2313 = load i64, i64* %PC.i2068
  %2314 = add i64 %2313, -179
  %2315 = load i64, i64* %PC.i2068
  %2316 = add i64 %2315, 5
  store i64 %2316, i64* %PC.i2068
  %2317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2314, i64* %2317, align 8
  store %struct.Memory* %loadMem_4b07d8, %struct.Memory** %MEMORY
  br label %block_.L_4b0725

block_.L_4b07dd:                                  ; preds = %block_.L_4b0725
  %loadMem_4b07dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2319 = getelementptr inbounds %struct.GPR, %struct.GPR* %2318, i32 0, i32 33
  %2320 = getelementptr inbounds %struct.Reg, %struct.Reg* %2319, i32 0, i32 0
  %PC.i2067 = bitcast %union.anon* %2320 to i64*
  %2321 = load i64, i64* %PC.i2067
  %2322 = add i64 %2321, 5
  %2323 = load i64, i64* %PC.i2067
  %2324 = add i64 %2323, 5
  store i64 %2324, i64* %PC.i2067
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2322, i64* %2325, align 8
  store %struct.Memory* %loadMem_4b07dd, %struct.Memory** %MEMORY
  br label %block_.L_4b07e2

block_.L_4b07e2:                                  ; preds = %block_.L_4b07dd
  %loadMem_4b07e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2327 = getelementptr inbounds %struct.GPR, %struct.GPR* %2326, i32 0, i32 33
  %2328 = getelementptr inbounds %struct.Reg, %struct.Reg* %2327, i32 0, i32 0
  %PC.i2064 = bitcast %union.anon* %2328 to i64*
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 1
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %RAX.i2065 = bitcast %union.anon* %2331 to i64*
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2333 = getelementptr inbounds %struct.GPR, %struct.GPR* %2332, i32 0, i32 15
  %2334 = getelementptr inbounds %struct.Reg, %struct.Reg* %2333, i32 0, i32 0
  %RBP.i2066 = bitcast %union.anon* %2334 to i64*
  %2335 = load i64, i64* %RBP.i2066
  %2336 = sub i64 %2335, 12
  %2337 = load i64, i64* %PC.i2064
  %2338 = add i64 %2337, 3
  store i64 %2338, i64* %PC.i2064
  %2339 = inttoptr i64 %2336 to i32*
  %2340 = load i32, i32* %2339
  %2341 = zext i32 %2340 to i64
  store i64 %2341, i64* %RAX.i2065, align 8
  store %struct.Memory* %loadMem_4b07e2, %struct.Memory** %MEMORY
  %loadMem_4b07e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2343 = getelementptr inbounds %struct.GPR, %struct.GPR* %2342, i32 0, i32 33
  %2344 = getelementptr inbounds %struct.Reg, %struct.Reg* %2343, i32 0, i32 0
  %PC.i2062 = bitcast %union.anon* %2344 to i64*
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 1
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %RAX.i2063 = bitcast %union.anon* %2347 to i64*
  %2348 = load i64, i64* %RAX.i2063
  %2349 = load i64, i64* %PC.i2062
  %2350 = add i64 %2349, 3
  store i64 %2350, i64* %PC.i2062
  %2351 = trunc i64 %2348 to i32
  %2352 = add i32 1, %2351
  %2353 = zext i32 %2352 to i64
  store i64 %2353, i64* %RAX.i2063, align 8
  %2354 = icmp ult i32 %2352, %2351
  %2355 = icmp ult i32 %2352, 1
  %2356 = or i1 %2354, %2355
  %2357 = zext i1 %2356 to i8
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2357, i8* %2358, align 1
  %2359 = and i32 %2352, 255
  %2360 = call i32 @llvm.ctpop.i32(i32 %2359)
  %2361 = trunc i32 %2360 to i8
  %2362 = and i8 %2361, 1
  %2363 = xor i8 %2362, 1
  %2364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2363, i8* %2364, align 1
  %2365 = xor i64 1, %2348
  %2366 = trunc i64 %2365 to i32
  %2367 = xor i32 %2366, %2352
  %2368 = lshr i32 %2367, 4
  %2369 = trunc i32 %2368 to i8
  %2370 = and i8 %2369, 1
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2370, i8* %2371, align 1
  %2372 = icmp eq i32 %2352, 0
  %2373 = zext i1 %2372 to i8
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2373, i8* %2374, align 1
  %2375 = lshr i32 %2352, 31
  %2376 = trunc i32 %2375 to i8
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2376, i8* %2377, align 1
  %2378 = lshr i32 %2351, 31
  %2379 = xor i32 %2375, %2378
  %2380 = add i32 %2379, %2375
  %2381 = icmp eq i32 %2380, 2
  %2382 = zext i1 %2381 to i8
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2382, i8* %2383, align 1
  store %struct.Memory* %loadMem_4b07e5, %struct.Memory** %MEMORY
  %loadMem_4b07e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2385 = getelementptr inbounds %struct.GPR, %struct.GPR* %2384, i32 0, i32 33
  %2386 = getelementptr inbounds %struct.Reg, %struct.Reg* %2385, i32 0, i32 0
  %PC.i2059 = bitcast %union.anon* %2386 to i64*
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2388 = getelementptr inbounds %struct.GPR, %struct.GPR* %2387, i32 0, i32 1
  %2389 = getelementptr inbounds %struct.Reg, %struct.Reg* %2388, i32 0, i32 0
  %EAX.i2060 = bitcast %union.anon* %2389 to i32*
  %2390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2391 = getelementptr inbounds %struct.GPR, %struct.GPR* %2390, i32 0, i32 15
  %2392 = getelementptr inbounds %struct.Reg, %struct.Reg* %2391, i32 0, i32 0
  %RBP.i2061 = bitcast %union.anon* %2392 to i64*
  %2393 = load i64, i64* %RBP.i2061
  %2394 = sub i64 %2393, 12
  %2395 = load i32, i32* %EAX.i2060
  %2396 = zext i32 %2395 to i64
  %2397 = load i64, i64* %PC.i2059
  %2398 = add i64 %2397, 3
  store i64 %2398, i64* %PC.i2059
  %2399 = inttoptr i64 %2394 to i32*
  store i32 %2395, i32* %2399
  store %struct.Memory* %loadMem_4b07e8, %struct.Memory** %MEMORY
  %loadMem_4b07eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2401 = getelementptr inbounds %struct.GPR, %struct.GPR* %2400, i32 0, i32 33
  %2402 = getelementptr inbounds %struct.Reg, %struct.Reg* %2401, i32 0, i32 0
  %PC.i2058 = bitcast %union.anon* %2402 to i64*
  %2403 = load i64, i64* %PC.i2058
  %2404 = add i64 %2403, -225
  %2405 = load i64, i64* %PC.i2058
  %2406 = add i64 %2405, 5
  store i64 %2406, i64* %PC.i2058
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2404, i64* %2407, align 8
  store %struct.Memory* %loadMem_4b07eb, %struct.Memory** %MEMORY
  br label %block_.L_4b070a

block_.L_4b07f0:                                  ; preds = %block_.L_4b070a
  %loadMem_4b07f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2409 = getelementptr inbounds %struct.GPR, %struct.GPR* %2408, i32 0, i32 33
  %2410 = getelementptr inbounds %struct.Reg, %struct.Reg* %2409, i32 0, i32 0
  %PC.i2057 = bitcast %union.anon* %2410 to i64*
  %2411 = load i64, i64* %PC.i2057
  %2412 = add i64 %2411, 5
  %2413 = load i64, i64* %PC.i2057
  %2414 = add i64 %2413, 5
  store i64 %2414, i64* %PC.i2057
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2412, i64* %2415, align 8
  store %struct.Memory* %loadMem_4b07f0, %struct.Memory** %MEMORY
  br label %block_.L_4b07f5

block_.L_4b07f5:                                  ; preds = %block_.L_4b07f0
  %loadMem_4b07f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2417 = getelementptr inbounds %struct.GPR, %struct.GPR* %2416, i32 0, i32 33
  %2418 = getelementptr inbounds %struct.Reg, %struct.Reg* %2417, i32 0, i32 0
  %PC.i2054 = bitcast %union.anon* %2418 to i64*
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2420 = getelementptr inbounds %struct.GPR, %struct.GPR* %2419, i32 0, i32 1
  %2421 = getelementptr inbounds %struct.Reg, %struct.Reg* %2420, i32 0, i32 0
  %RAX.i2055 = bitcast %union.anon* %2421 to i64*
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2423 = getelementptr inbounds %struct.GPR, %struct.GPR* %2422, i32 0, i32 15
  %2424 = getelementptr inbounds %struct.Reg, %struct.Reg* %2423, i32 0, i32 0
  %RBP.i2056 = bitcast %union.anon* %2424 to i64*
  %2425 = load i64, i64* %RBP.i2056
  %2426 = sub i64 %2425, 8
  %2427 = load i64, i64* %PC.i2054
  %2428 = add i64 %2427, 3
  store i64 %2428, i64* %PC.i2054
  %2429 = inttoptr i64 %2426 to i32*
  %2430 = load i32, i32* %2429
  %2431 = zext i32 %2430 to i64
  store i64 %2431, i64* %RAX.i2055, align 8
  store %struct.Memory* %loadMem_4b07f5, %struct.Memory** %MEMORY
  %loadMem_4b07f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2433 = getelementptr inbounds %struct.GPR, %struct.GPR* %2432, i32 0, i32 33
  %2434 = getelementptr inbounds %struct.Reg, %struct.Reg* %2433, i32 0, i32 0
  %PC.i2052 = bitcast %union.anon* %2434 to i64*
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2436 = getelementptr inbounds %struct.GPR, %struct.GPR* %2435, i32 0, i32 1
  %2437 = getelementptr inbounds %struct.Reg, %struct.Reg* %2436, i32 0, i32 0
  %RAX.i2053 = bitcast %union.anon* %2437 to i64*
  %2438 = load i64, i64* %RAX.i2053
  %2439 = load i64, i64* %PC.i2052
  %2440 = add i64 %2439, 3
  store i64 %2440, i64* %PC.i2052
  %2441 = trunc i64 %2438 to i32
  %2442 = add i32 1, %2441
  %2443 = zext i32 %2442 to i64
  store i64 %2443, i64* %RAX.i2053, align 8
  %2444 = icmp ult i32 %2442, %2441
  %2445 = icmp ult i32 %2442, 1
  %2446 = or i1 %2444, %2445
  %2447 = zext i1 %2446 to i8
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2447, i8* %2448, align 1
  %2449 = and i32 %2442, 255
  %2450 = call i32 @llvm.ctpop.i32(i32 %2449)
  %2451 = trunc i32 %2450 to i8
  %2452 = and i8 %2451, 1
  %2453 = xor i8 %2452, 1
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2453, i8* %2454, align 1
  %2455 = xor i64 1, %2438
  %2456 = trunc i64 %2455 to i32
  %2457 = xor i32 %2456, %2442
  %2458 = lshr i32 %2457, 4
  %2459 = trunc i32 %2458 to i8
  %2460 = and i8 %2459, 1
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2460, i8* %2461, align 1
  %2462 = icmp eq i32 %2442, 0
  %2463 = zext i1 %2462 to i8
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2463, i8* %2464, align 1
  %2465 = lshr i32 %2442, 31
  %2466 = trunc i32 %2465 to i8
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2466, i8* %2467, align 1
  %2468 = lshr i32 %2441, 31
  %2469 = xor i32 %2465, %2468
  %2470 = add i32 %2469, %2465
  %2471 = icmp eq i32 %2470, 2
  %2472 = zext i1 %2471 to i8
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2472, i8* %2473, align 1
  store %struct.Memory* %loadMem_4b07f8, %struct.Memory** %MEMORY
  %loadMem_4b07fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 33
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %PC.i2049 = bitcast %union.anon* %2476 to i64*
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 1
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %EAX.i2050 = bitcast %union.anon* %2479 to i32*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 15
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %RBP.i2051 = bitcast %union.anon* %2482 to i64*
  %2483 = load i64, i64* %RBP.i2051
  %2484 = sub i64 %2483, 8
  %2485 = load i32, i32* %EAX.i2050
  %2486 = zext i32 %2485 to i64
  %2487 = load i64, i64* %PC.i2049
  %2488 = add i64 %2487, 3
  store i64 %2488, i64* %PC.i2049
  %2489 = inttoptr i64 %2484 to i32*
  store i32 %2485, i32* %2489
  store %struct.Memory* %loadMem_4b07fb, %struct.Memory** %MEMORY
  %loadMem_4b07fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2491 = getelementptr inbounds %struct.GPR, %struct.GPR* %2490, i32 0, i32 33
  %2492 = getelementptr inbounds %struct.Reg, %struct.Reg* %2491, i32 0, i32 0
  %PC.i2048 = bitcast %union.anon* %2492 to i64*
  %2493 = load i64, i64* %PC.i2048
  %2494 = add i64 %2493, -271
  %2495 = load i64, i64* %PC.i2048
  %2496 = add i64 %2495, 5
  store i64 %2496, i64* %PC.i2048
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2494, i64* %2497, align 8
  store %struct.Memory* %loadMem_4b07fe, %struct.Memory** %MEMORY
  br label %block_.L_4b06ef

block_.L_4b0803:                                  ; preds = %block_.L_4b06ef
  %loadMem_4b0803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2499 = getelementptr inbounds %struct.GPR, %struct.GPR* %2498, i32 0, i32 33
  %2500 = getelementptr inbounds %struct.Reg, %struct.Reg* %2499, i32 0, i32 0
  %PC.i2046 = bitcast %union.anon* %2500 to i64*
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2502 = getelementptr inbounds %struct.GPR, %struct.GPR* %2501, i32 0, i32 15
  %2503 = getelementptr inbounds %struct.Reg, %struct.Reg* %2502, i32 0, i32 0
  %RBP.i2047 = bitcast %union.anon* %2503 to i64*
  %2504 = load i64, i64* %RBP.i2047
  %2505 = sub i64 %2504, 8
  %2506 = load i64, i64* %PC.i2046
  %2507 = add i64 %2506, 7
  store i64 %2507, i64* %PC.i2046
  %2508 = inttoptr i64 %2505 to i32*
  store i32 0, i32* %2508
  store %struct.Memory* %loadMem_4b0803, %struct.Memory** %MEMORY
  br label %block_.L_4b080a

block_.L_4b080a:                                  ; preds = %block_.L_4b0ccc, %block_.L_4b0803
  %loadMem_4b080a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2510 = getelementptr inbounds %struct.GPR, %struct.GPR* %2509, i32 0, i32 33
  %2511 = getelementptr inbounds %struct.Reg, %struct.Reg* %2510, i32 0, i32 0
  %PC.i2043 = bitcast %union.anon* %2511 to i64*
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2513 = getelementptr inbounds %struct.GPR, %struct.GPR* %2512, i32 0, i32 1
  %2514 = getelementptr inbounds %struct.Reg, %struct.Reg* %2513, i32 0, i32 0
  %RAX.i2044 = bitcast %union.anon* %2514 to i64*
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2516 = getelementptr inbounds %struct.GPR, %struct.GPR* %2515, i32 0, i32 15
  %2517 = getelementptr inbounds %struct.Reg, %struct.Reg* %2516, i32 0, i32 0
  %RBP.i2045 = bitcast %union.anon* %2517 to i64*
  %2518 = load i64, i64* %RBP.i2045
  %2519 = sub i64 %2518, 8
  %2520 = load i64, i64* %PC.i2043
  %2521 = add i64 %2520, 3
  store i64 %2521, i64* %PC.i2043
  %2522 = inttoptr i64 %2519 to i32*
  %2523 = load i32, i32* %2522
  %2524 = zext i32 %2523 to i64
  store i64 %2524, i64* %RAX.i2044, align 8
  store %struct.Memory* %loadMem_4b080a, %struct.Memory** %MEMORY
  %loadMem_4b080d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2526 = getelementptr inbounds %struct.GPR, %struct.GPR* %2525, i32 0, i32 33
  %2527 = getelementptr inbounds %struct.Reg, %struct.Reg* %2526, i32 0, i32 0
  %PC.i2041 = bitcast %union.anon* %2527 to i64*
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2529 = getelementptr inbounds %struct.GPR, %struct.GPR* %2528, i32 0, i32 1
  %2530 = getelementptr inbounds %struct.Reg, %struct.Reg* %2529, i32 0, i32 0
  %EAX.i2042 = bitcast %union.anon* %2530 to i32*
  %2531 = load i32, i32* %EAX.i2042
  %2532 = zext i32 %2531 to i64
  %2533 = load i64, i64* %PC.i2041
  %2534 = add i64 %2533, 7
  store i64 %2534, i64* %PC.i2041
  %2535 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %2536 = sub i32 %2531, %2535
  %2537 = icmp ult i32 %2531, %2535
  %2538 = zext i1 %2537 to i8
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2538, i8* %2539, align 1
  %2540 = and i32 %2536, 255
  %2541 = call i32 @llvm.ctpop.i32(i32 %2540)
  %2542 = trunc i32 %2541 to i8
  %2543 = and i8 %2542, 1
  %2544 = xor i8 %2543, 1
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2544, i8* %2545, align 1
  %2546 = xor i32 %2535, %2531
  %2547 = xor i32 %2546, %2536
  %2548 = lshr i32 %2547, 4
  %2549 = trunc i32 %2548 to i8
  %2550 = and i8 %2549, 1
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2550, i8* %2551, align 1
  %2552 = icmp eq i32 %2536, 0
  %2553 = zext i1 %2552 to i8
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2553, i8* %2554, align 1
  %2555 = lshr i32 %2536, 31
  %2556 = trunc i32 %2555 to i8
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2556, i8* %2557, align 1
  %2558 = lshr i32 %2531, 31
  %2559 = lshr i32 %2535, 31
  %2560 = xor i32 %2559, %2558
  %2561 = xor i32 %2555, %2558
  %2562 = add i32 %2561, %2560
  %2563 = icmp eq i32 %2562, 2
  %2564 = zext i1 %2563 to i8
  %2565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2564, i8* %2565, align 1
  store %struct.Memory* %loadMem_4b080d, %struct.Memory** %MEMORY
  %loadMem_4b0814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2567 = getelementptr inbounds %struct.GPR, %struct.GPR* %2566, i32 0, i32 33
  %2568 = getelementptr inbounds %struct.Reg, %struct.Reg* %2567, i32 0, i32 0
  %PC.i2040 = bitcast %union.anon* %2568 to i64*
  %2569 = load i64, i64* %PC.i2040
  %2570 = add i64 %2569, 1222
  %2571 = load i64, i64* %PC.i2040
  %2572 = add i64 %2571, 6
  %2573 = load i64, i64* %PC.i2040
  %2574 = add i64 %2573, 6
  store i64 %2574, i64* %PC.i2040
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2576 = load i8, i8* %2575, align 1
  %2577 = icmp ne i8 %2576, 0
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2579 = load i8, i8* %2578, align 1
  %2580 = icmp ne i8 %2579, 0
  %2581 = xor i1 %2577, %2580
  %2582 = xor i1 %2581, true
  %2583 = zext i1 %2582 to i8
  store i8 %2583, i8* %BRANCH_TAKEN, align 1
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2585 = select i1 %2581, i64 %2572, i64 %2570
  store i64 %2585, i64* %2584, align 8
  store %struct.Memory* %loadMem_4b0814, %struct.Memory** %MEMORY
  %loadBr_4b0814 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0814 = icmp eq i8 %loadBr_4b0814, 1
  br i1 %cmpBr_4b0814, label %block_.L_4b0cda, label %block_4b081a

block_4b081a:                                     ; preds = %block_.L_4b080a
  %loadMem_4b081a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 33
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %PC.i2038 = bitcast %union.anon* %2588 to i64*
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 15
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %RBP.i2039 = bitcast %union.anon* %2591 to i64*
  %2592 = load i64, i64* %RBP.i2039
  %2593 = sub i64 %2592, 12
  %2594 = load i64, i64* %PC.i2038
  %2595 = add i64 %2594, 7
  store i64 %2595, i64* %PC.i2038
  %2596 = inttoptr i64 %2593 to i32*
  store i32 0, i32* %2596
  store %struct.Memory* %loadMem_4b081a, %struct.Memory** %MEMORY
  br label %block_.L_4b0821

block_.L_4b0821:                                  ; preds = %block_.L_4b0cb9, %block_4b081a
  %loadMem_4b0821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2598 = getelementptr inbounds %struct.GPR, %struct.GPR* %2597, i32 0, i32 33
  %2599 = getelementptr inbounds %struct.Reg, %struct.Reg* %2598, i32 0, i32 0
  %PC.i2035 = bitcast %union.anon* %2599 to i64*
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2601 = getelementptr inbounds %struct.GPR, %struct.GPR* %2600, i32 0, i32 1
  %2602 = getelementptr inbounds %struct.Reg, %struct.Reg* %2601, i32 0, i32 0
  %RAX.i2036 = bitcast %union.anon* %2602 to i64*
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2604 = getelementptr inbounds %struct.GPR, %struct.GPR* %2603, i32 0, i32 15
  %2605 = getelementptr inbounds %struct.Reg, %struct.Reg* %2604, i32 0, i32 0
  %RBP.i2037 = bitcast %union.anon* %2605 to i64*
  %2606 = load i64, i64* %RBP.i2037
  %2607 = sub i64 %2606, 12
  %2608 = load i64, i64* %PC.i2035
  %2609 = add i64 %2608, 3
  store i64 %2609, i64* %PC.i2035
  %2610 = inttoptr i64 %2607 to i32*
  %2611 = load i32, i32* %2610
  %2612 = zext i32 %2611 to i64
  store i64 %2612, i64* %RAX.i2036, align 8
  store %struct.Memory* %loadMem_4b0821, %struct.Memory** %MEMORY
  %loadMem_4b0824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2614 = getelementptr inbounds %struct.GPR, %struct.GPR* %2613, i32 0, i32 33
  %2615 = getelementptr inbounds %struct.Reg, %struct.Reg* %2614, i32 0, i32 0
  %PC.i2033 = bitcast %union.anon* %2615 to i64*
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2617 = getelementptr inbounds %struct.GPR, %struct.GPR* %2616, i32 0, i32 1
  %2618 = getelementptr inbounds %struct.Reg, %struct.Reg* %2617, i32 0, i32 0
  %EAX.i2034 = bitcast %union.anon* %2618 to i32*
  %2619 = load i32, i32* %EAX.i2034
  %2620 = zext i32 %2619 to i64
  %2621 = load i64, i64* %PC.i2033
  %2622 = add i64 %2621, 7
  store i64 %2622, i64* %PC.i2033
  %2623 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %2624 = sub i32 %2619, %2623
  %2625 = icmp ult i32 %2619, %2623
  %2626 = zext i1 %2625 to i8
  %2627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2626, i8* %2627, align 1
  %2628 = and i32 %2624, 255
  %2629 = call i32 @llvm.ctpop.i32(i32 %2628)
  %2630 = trunc i32 %2629 to i8
  %2631 = and i8 %2630, 1
  %2632 = xor i8 %2631, 1
  %2633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2632, i8* %2633, align 1
  %2634 = xor i32 %2623, %2619
  %2635 = xor i32 %2634, %2624
  %2636 = lshr i32 %2635, 4
  %2637 = trunc i32 %2636 to i8
  %2638 = and i8 %2637, 1
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2638, i8* %2639, align 1
  %2640 = icmp eq i32 %2624, 0
  %2641 = zext i1 %2640 to i8
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2641, i8* %2642, align 1
  %2643 = lshr i32 %2624, 31
  %2644 = trunc i32 %2643 to i8
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2644, i8* %2645, align 1
  %2646 = lshr i32 %2619, 31
  %2647 = lshr i32 %2623, 31
  %2648 = xor i32 %2647, %2646
  %2649 = xor i32 %2643, %2646
  %2650 = add i32 %2649, %2648
  %2651 = icmp eq i32 %2650, 2
  %2652 = zext i1 %2651 to i8
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2652, i8* %2653, align 1
  store %struct.Memory* %loadMem_4b0824, %struct.Memory** %MEMORY
  %loadMem_4b082b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2655 = getelementptr inbounds %struct.GPR, %struct.GPR* %2654, i32 0, i32 33
  %2656 = getelementptr inbounds %struct.Reg, %struct.Reg* %2655, i32 0, i32 0
  %PC.i2032 = bitcast %union.anon* %2656 to i64*
  %2657 = load i64, i64* %PC.i2032
  %2658 = add i64 %2657, 1180
  %2659 = load i64, i64* %PC.i2032
  %2660 = add i64 %2659, 6
  %2661 = load i64, i64* %PC.i2032
  %2662 = add i64 %2661, 6
  store i64 %2662, i64* %PC.i2032
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2664 = load i8, i8* %2663, align 1
  %2665 = icmp ne i8 %2664, 0
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2667 = load i8, i8* %2666, align 1
  %2668 = icmp ne i8 %2667, 0
  %2669 = xor i1 %2665, %2668
  %2670 = xor i1 %2669, true
  %2671 = zext i1 %2670 to i8
  store i8 %2671, i8* %BRANCH_TAKEN, align 1
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2673 = select i1 %2669, i64 %2660, i64 %2658
  store i64 %2673, i64* %2672, align 8
  store %struct.Memory* %loadMem_4b082b, %struct.Memory** %MEMORY
  %loadBr_4b082b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b082b = icmp eq i8 %loadBr_4b082b, 1
  br i1 %cmpBr_4b082b, label %block_.L_4b0cc7, label %block_4b0831

block_4b0831:                                     ; preds = %block_.L_4b0821
  %loadMem_4b0831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 33
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %PC.i2030 = bitcast %union.anon* %2676 to i64*
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2678 = getelementptr inbounds %struct.GPR, %struct.GPR* %2677, i32 0, i32 1
  %2679 = getelementptr inbounds %struct.Reg, %struct.Reg* %2678, i32 0, i32 0
  %RAX.i2031 = bitcast %union.anon* %2679 to i64*
  %2680 = load i64, i64* %PC.i2030
  %2681 = add i64 %2680, 8
  store i64 %2681, i64* %PC.i2030
  %2682 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %2682, i64* %RAX.i2031, align 8
  store %struct.Memory* %loadMem_4b0831, %struct.Memory** %MEMORY
  %loadMem_4b0839 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2684 = getelementptr inbounds %struct.GPR, %struct.GPR* %2683, i32 0, i32 33
  %2685 = getelementptr inbounds %struct.Reg, %struct.Reg* %2684, i32 0, i32 0
  %PC.i2027 = bitcast %union.anon* %2685 to i64*
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2687 = getelementptr inbounds %struct.GPR, %struct.GPR* %2686, i32 0, i32 5
  %2688 = getelementptr inbounds %struct.Reg, %struct.Reg* %2687, i32 0, i32 0
  %RCX.i2028 = bitcast %union.anon* %2688 to i64*
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2690 = getelementptr inbounds %struct.GPR, %struct.GPR* %2689, i32 0, i32 15
  %2691 = getelementptr inbounds %struct.Reg, %struct.Reg* %2690, i32 0, i32 0
  %RBP.i2029 = bitcast %union.anon* %2691 to i64*
  %2692 = load i64, i64* %RBP.i2029
  %2693 = sub i64 %2692, 12
  %2694 = load i64, i64* %PC.i2027
  %2695 = add i64 %2694, 4
  store i64 %2695, i64* %PC.i2027
  %2696 = inttoptr i64 %2693 to i32*
  %2697 = load i32, i32* %2696
  %2698 = sext i32 %2697 to i64
  store i64 %2698, i64* %RCX.i2028, align 8
  store %struct.Memory* %loadMem_4b0839, %struct.Memory** %MEMORY
  %loadMem_4b083d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 33
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %PC.i2024 = bitcast %union.anon* %2701 to i64*
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2703 = getelementptr inbounds %struct.GPR, %struct.GPR* %2702, i32 0, i32 1
  %2704 = getelementptr inbounds %struct.Reg, %struct.Reg* %2703, i32 0, i32 0
  %RAX.i2025 = bitcast %union.anon* %2704 to i64*
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2706 = getelementptr inbounds %struct.GPR, %struct.GPR* %2705, i32 0, i32 5
  %2707 = getelementptr inbounds %struct.Reg, %struct.Reg* %2706, i32 0, i32 0
  %RCX.i2026 = bitcast %union.anon* %2707 to i64*
  %2708 = load i64, i64* %RAX.i2025
  %2709 = load i64, i64* %RCX.i2026
  %2710 = mul i64 %2709, 8
  %2711 = add i64 %2710, %2708
  %2712 = load i64, i64* %PC.i2024
  %2713 = add i64 %2712, 4
  store i64 %2713, i64* %PC.i2024
  %2714 = inttoptr i64 %2711 to i64*
  %2715 = load i64, i64* %2714
  store i64 %2715, i64* %RAX.i2025, align 8
  store %struct.Memory* %loadMem_4b083d, %struct.Memory** %MEMORY
  %loadMem_4b0841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2717 = getelementptr inbounds %struct.GPR, %struct.GPR* %2716, i32 0, i32 33
  %2718 = getelementptr inbounds %struct.Reg, %struct.Reg* %2717, i32 0, i32 0
  %PC.i2021 = bitcast %union.anon* %2718 to i64*
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 1
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %RAX.i2022 = bitcast %union.anon* %2721 to i64*
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2723 = getelementptr inbounds %struct.GPR, %struct.GPR* %2722, i32 0, i32 7
  %2724 = getelementptr inbounds %struct.Reg, %struct.Reg* %2723, i32 0, i32 0
  %RDX.i2023 = bitcast %union.anon* %2724 to i64*
  %2725 = load i64, i64* %RAX.i2022
  %2726 = add i64 %2725, 4
  %2727 = load i64, i64* %PC.i2021
  %2728 = add i64 %2727, 3
  store i64 %2728, i64* %PC.i2021
  %2729 = inttoptr i64 %2726 to i32*
  %2730 = load i32, i32* %2729
  %2731 = zext i32 %2730 to i64
  store i64 %2731, i64* %RDX.i2023, align 8
  store %struct.Memory* %loadMem_4b0841, %struct.Memory** %MEMORY
  %loadMem_4b0844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2733 = getelementptr inbounds %struct.GPR, %struct.GPR* %2732, i32 0, i32 33
  %2734 = getelementptr inbounds %struct.Reg, %struct.Reg* %2733, i32 0, i32 0
  %PC.i2019 = bitcast %union.anon* %2734 to i64*
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 1
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %RAX.i2020 = bitcast %union.anon* %2737 to i64*
  %2738 = load i64, i64* %PC.i2019
  %2739 = add i64 %2738, 8
  store i64 %2739, i64* %PC.i2019
  %2740 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %2740, i64* %RAX.i2020, align 8
  store %struct.Memory* %loadMem_4b0844, %struct.Memory** %MEMORY
  %loadMem_4b084c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2742 = getelementptr inbounds %struct.GPR, %struct.GPR* %2741, i32 0, i32 33
  %2743 = getelementptr inbounds %struct.Reg, %struct.Reg* %2742, i32 0, i32 0
  %PC.i2016 = bitcast %union.anon* %2743 to i64*
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2745 = getelementptr inbounds %struct.GPR, %struct.GPR* %2744, i32 0, i32 5
  %2746 = getelementptr inbounds %struct.Reg, %struct.Reg* %2745, i32 0, i32 0
  %RCX.i2017 = bitcast %union.anon* %2746 to i64*
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2748 = getelementptr inbounds %struct.GPR, %struct.GPR* %2747, i32 0, i32 15
  %2749 = getelementptr inbounds %struct.Reg, %struct.Reg* %2748, i32 0, i32 0
  %RBP.i2018 = bitcast %union.anon* %2749 to i64*
  %2750 = load i64, i64* %RBP.i2018
  %2751 = sub i64 %2750, 8
  %2752 = load i64, i64* %PC.i2016
  %2753 = add i64 %2752, 4
  store i64 %2753, i64* %PC.i2016
  %2754 = inttoptr i64 %2751 to i32*
  %2755 = load i32, i32* %2754
  %2756 = sext i32 %2755 to i64
  store i64 %2756, i64* %RCX.i2017, align 8
  store %struct.Memory* %loadMem_4b084c, %struct.Memory** %MEMORY
  %loadMem_4b0850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2758 = getelementptr inbounds %struct.GPR, %struct.GPR* %2757, i32 0, i32 33
  %2759 = getelementptr inbounds %struct.Reg, %struct.Reg* %2758, i32 0, i32 0
  %PC.i2013 = bitcast %union.anon* %2759 to i64*
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2761 = getelementptr inbounds %struct.GPR, %struct.GPR* %2760, i32 0, i32 1
  %2762 = getelementptr inbounds %struct.Reg, %struct.Reg* %2761, i32 0, i32 0
  %RAX.i2014 = bitcast %union.anon* %2762 to i64*
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2764 = getelementptr inbounds %struct.GPR, %struct.GPR* %2763, i32 0, i32 5
  %2765 = getelementptr inbounds %struct.Reg, %struct.Reg* %2764, i32 0, i32 0
  %RCX.i2015 = bitcast %union.anon* %2765 to i64*
  %2766 = load i64, i64* %RAX.i2014
  %2767 = load i64, i64* %RCX.i2015
  %2768 = mul i64 %2767, 8
  %2769 = add i64 %2768, %2766
  %2770 = load i64, i64* %PC.i2013
  %2771 = add i64 %2770, 4
  store i64 %2771, i64* %PC.i2013
  %2772 = inttoptr i64 %2769 to i64*
  %2773 = load i64, i64* %2772
  store i64 %2773, i64* %RAX.i2014, align 8
  store %struct.Memory* %loadMem_4b0850, %struct.Memory** %MEMORY
  %loadMem_4b0854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2775 = getelementptr inbounds %struct.GPR, %struct.GPR* %2774, i32 0, i32 33
  %2776 = getelementptr inbounds %struct.Reg, %struct.Reg* %2775, i32 0, i32 0
  %PC.i2010 = bitcast %union.anon* %2776 to i64*
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2778 = getelementptr inbounds %struct.GPR, %struct.GPR* %2777, i32 0, i32 1
  %2779 = getelementptr inbounds %struct.Reg, %struct.Reg* %2778, i32 0, i32 0
  %RAX.i2011 = bitcast %union.anon* %2779 to i64*
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2781 = getelementptr inbounds %struct.GPR, %struct.GPR* %2780, i32 0, i32 7
  %2782 = getelementptr inbounds %struct.Reg, %struct.Reg* %2781, i32 0, i32 0
  %RDX.i2012 = bitcast %union.anon* %2782 to i64*
  %2783 = load i64, i64* %RDX.i2012
  %2784 = load i64, i64* %RAX.i2011
  %2785 = add i64 %2784, 4
  %2786 = load i64, i64* %PC.i2010
  %2787 = add i64 %2786, 3
  store i64 %2787, i64* %PC.i2010
  %2788 = trunc i64 %2783 to i32
  %2789 = inttoptr i64 %2785 to i32*
  %2790 = load i32, i32* %2789
  %2791 = sub i32 %2788, %2790
  %2792 = zext i32 %2791 to i64
  store i64 %2792, i64* %RDX.i2012, align 8
  %2793 = icmp ult i32 %2788, %2790
  %2794 = zext i1 %2793 to i8
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2794, i8* %2795, align 1
  %2796 = and i32 %2791, 255
  %2797 = call i32 @llvm.ctpop.i32(i32 %2796)
  %2798 = trunc i32 %2797 to i8
  %2799 = and i8 %2798, 1
  %2800 = xor i8 %2799, 1
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2800, i8* %2801, align 1
  %2802 = xor i32 %2790, %2788
  %2803 = xor i32 %2802, %2791
  %2804 = lshr i32 %2803, 4
  %2805 = trunc i32 %2804 to i8
  %2806 = and i8 %2805, 1
  %2807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2806, i8* %2807, align 1
  %2808 = icmp eq i32 %2791, 0
  %2809 = zext i1 %2808 to i8
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2809, i8* %2810, align 1
  %2811 = lshr i32 %2791, 31
  %2812 = trunc i32 %2811 to i8
  %2813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2812, i8* %2813, align 1
  %2814 = lshr i32 %2788, 31
  %2815 = lshr i32 %2790, 31
  %2816 = xor i32 %2815, %2814
  %2817 = xor i32 %2811, %2814
  %2818 = add i32 %2817, %2816
  %2819 = icmp eq i32 %2818, 2
  %2820 = zext i1 %2819 to i8
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2820, i8* %2821, align 1
  store %struct.Memory* %loadMem_4b0854, %struct.Memory** %MEMORY
  %loadMem_4b0857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2823 = getelementptr inbounds %struct.GPR, %struct.GPR* %2822, i32 0, i32 33
  %2824 = getelementptr inbounds %struct.Reg, %struct.Reg* %2823, i32 0, i32 0
  %PC.i2008 = bitcast %union.anon* %2824 to i64*
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2826 = getelementptr inbounds %struct.GPR, %struct.GPR* %2825, i32 0, i32 7
  %2827 = getelementptr inbounds %struct.Reg, %struct.Reg* %2826, i32 0, i32 0
  %EDX.i2009 = bitcast %union.anon* %2827 to i32*
  %2828 = load i32, i32* %EDX.i2009
  %2829 = zext i32 %2828 to i64
  %2830 = load i64, i64* %PC.i2008
  %2831 = add i64 %2830, 3
  store i64 %2831, i64* %PC.i2008
  %2832 = sub i32 %2828, -128
  %2833 = icmp ult i32 %2828, -128
  %2834 = zext i1 %2833 to i8
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2834, i8* %2835, align 1
  %2836 = and i32 %2832, 255
  %2837 = call i32 @llvm.ctpop.i32(i32 %2836)
  %2838 = trunc i32 %2837 to i8
  %2839 = and i8 %2838, 1
  %2840 = xor i8 %2839, 1
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2840, i8* %2841, align 1
  %2842 = xor i64 -128, %2829
  %2843 = trunc i64 %2842 to i32
  %2844 = xor i32 %2843, %2832
  %2845 = lshr i32 %2844, 4
  %2846 = trunc i32 %2845 to i8
  %2847 = and i8 %2846, 1
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2847, i8* %2848, align 1
  %2849 = icmp eq i32 %2832, 0
  %2850 = zext i1 %2849 to i8
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2850, i8* %2851, align 1
  %2852 = lshr i32 %2832, 31
  %2853 = trunc i32 %2852 to i8
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2853, i8* %2854, align 1
  %2855 = lshr i32 %2828, 31
  %2856 = xor i32 1, %2855
  %2857 = xor i32 %2852, %2855
  %2858 = add i32 %2857, %2856
  %2859 = icmp eq i32 %2858, 2
  %2860 = zext i1 %2859 to i8
  %2861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2860, i8* %2861, align 1
  store %struct.Memory* %loadMem_4b0857, %struct.Memory** %MEMORY
  %loadMem_4b085a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2863 = getelementptr inbounds %struct.GPR, %struct.GPR* %2862, i32 0, i32 33
  %2864 = getelementptr inbounds %struct.Reg, %struct.Reg* %2863, i32 0, i32 0
  %PC.i2007 = bitcast %union.anon* %2864 to i64*
  %2865 = load i64, i64* %PC.i2007
  %2866 = add i64 %2865, 22
  %2867 = load i64, i64* %PC.i2007
  %2868 = add i64 %2867, 6
  %2869 = load i64, i64* %PC.i2007
  %2870 = add i64 %2869, 6
  store i64 %2870, i64* %PC.i2007
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2872 = load i8, i8* %2871, align 1
  %2873 = icmp ne i8 %2872, 0
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2875 = load i8, i8* %2874, align 1
  %2876 = icmp ne i8 %2875, 0
  %2877 = xor i1 %2873, %2876
  %2878 = xor i1 %2877, true
  %2879 = zext i1 %2878 to i8
  store i8 %2879, i8* %BRANCH_TAKEN, align 1
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2881 = select i1 %2877, i64 %2868, i64 %2866
  store i64 %2881, i64* %2880, align 8
  store %struct.Memory* %loadMem_4b085a, %struct.Memory** %MEMORY
  %loadBr_4b085a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b085a = icmp eq i8 %loadBr_4b085a, 1
  br i1 %cmpBr_4b085a, label %block_.L_4b0870, label %block_4b0860

block_4b0860:                                     ; preds = %block_4b0831
  %loadMem_4b0860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2883 = getelementptr inbounds %struct.GPR, %struct.GPR* %2882, i32 0, i32 33
  %2884 = getelementptr inbounds %struct.Reg, %struct.Reg* %2883, i32 0, i32 0
  %PC.i2005 = bitcast %union.anon* %2884 to i64*
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2886 = getelementptr inbounds %struct.GPR, %struct.GPR* %2885, i32 0, i32 1
  %2887 = getelementptr inbounds %struct.Reg, %struct.Reg* %2886, i32 0, i32 0
  %RAX.i2006 = bitcast %union.anon* %2887 to i64*
  %2888 = load i64, i64* %PC.i2005
  %2889 = add i64 %2888, 5
  store i64 %2889, i64* %PC.i2005
  store i64 4294967168, i64* %RAX.i2006, align 8
  store %struct.Memory* %loadMem_4b0860, %struct.Memory** %MEMORY
  %loadMem_4b0865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2891 = getelementptr inbounds %struct.GPR, %struct.GPR* %2890, i32 0, i32 33
  %2892 = getelementptr inbounds %struct.Reg, %struct.Reg* %2891, i32 0, i32 0
  %PC.i2002 = bitcast %union.anon* %2892 to i64*
  %2893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2894 = getelementptr inbounds %struct.GPR, %struct.GPR* %2893, i32 0, i32 1
  %2895 = getelementptr inbounds %struct.Reg, %struct.Reg* %2894, i32 0, i32 0
  %EAX.i2003 = bitcast %union.anon* %2895 to i32*
  %2896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2897 = getelementptr inbounds %struct.GPR, %struct.GPR* %2896, i32 0, i32 15
  %2898 = getelementptr inbounds %struct.Reg, %struct.Reg* %2897, i32 0, i32 0
  %RBP.i2004 = bitcast %union.anon* %2898 to i64*
  %2899 = load i64, i64* %RBP.i2004
  %2900 = sub i64 %2899, 35432
  %2901 = load i32, i32* %EAX.i2003
  %2902 = zext i32 %2901 to i64
  %2903 = load i64, i64* %PC.i2002
  %2904 = add i64 %2903, 6
  store i64 %2904, i64* %PC.i2002
  %2905 = inttoptr i64 %2900 to i32*
  store i32 %2901, i32* %2905
  store %struct.Memory* %loadMem_4b0865, %struct.Memory** %MEMORY
  %loadMem_4b086b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2907 = getelementptr inbounds %struct.GPR, %struct.GPR* %2906, i32 0, i32 33
  %2908 = getelementptr inbounds %struct.Reg, %struct.Reg* %2907, i32 0, i32 0
  %PC.i2001 = bitcast %union.anon* %2908 to i64*
  %2909 = load i64, i64* %PC.i2001
  %2910 = add i64 %2909, 124
  %2911 = load i64, i64* %PC.i2001
  %2912 = add i64 %2911, 5
  store i64 %2912, i64* %PC.i2001
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2910, i64* %2913, align 8
  store %struct.Memory* %loadMem_4b086b, %struct.Memory** %MEMORY
  br label %block_.L_4b08e7

block_.L_4b0870:                                  ; preds = %block_4b0831
  %loadMem_4b0870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2915 = getelementptr inbounds %struct.GPR, %struct.GPR* %2914, i32 0, i32 33
  %2916 = getelementptr inbounds %struct.Reg, %struct.Reg* %2915, i32 0, i32 0
  %PC.i1999 = bitcast %union.anon* %2916 to i64*
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 1
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %RAX.i2000 = bitcast %union.anon* %2919 to i64*
  %2920 = load i64, i64* %PC.i1999
  %2921 = add i64 %2920, 8
  store i64 %2921, i64* %PC.i1999
  %2922 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %2922, i64* %RAX.i2000, align 8
  store %struct.Memory* %loadMem_4b0870, %struct.Memory** %MEMORY
  %loadMem_4b0878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2924 = getelementptr inbounds %struct.GPR, %struct.GPR* %2923, i32 0, i32 33
  %2925 = getelementptr inbounds %struct.Reg, %struct.Reg* %2924, i32 0, i32 0
  %PC.i1996 = bitcast %union.anon* %2925 to i64*
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2927 = getelementptr inbounds %struct.GPR, %struct.GPR* %2926, i32 0, i32 5
  %2928 = getelementptr inbounds %struct.Reg, %struct.Reg* %2927, i32 0, i32 0
  %RCX.i1997 = bitcast %union.anon* %2928 to i64*
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2930 = getelementptr inbounds %struct.GPR, %struct.GPR* %2929, i32 0, i32 15
  %2931 = getelementptr inbounds %struct.Reg, %struct.Reg* %2930, i32 0, i32 0
  %RBP.i1998 = bitcast %union.anon* %2931 to i64*
  %2932 = load i64, i64* %RBP.i1998
  %2933 = sub i64 %2932, 12
  %2934 = load i64, i64* %PC.i1996
  %2935 = add i64 %2934, 4
  store i64 %2935, i64* %PC.i1996
  %2936 = inttoptr i64 %2933 to i32*
  %2937 = load i32, i32* %2936
  %2938 = sext i32 %2937 to i64
  store i64 %2938, i64* %RCX.i1997, align 8
  store %struct.Memory* %loadMem_4b0878, %struct.Memory** %MEMORY
  %loadMem_4b087c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 33
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %PC.i1993 = bitcast %union.anon* %2941 to i64*
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2943 = getelementptr inbounds %struct.GPR, %struct.GPR* %2942, i32 0, i32 1
  %2944 = getelementptr inbounds %struct.Reg, %struct.Reg* %2943, i32 0, i32 0
  %RAX.i1994 = bitcast %union.anon* %2944 to i64*
  %2945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2946 = getelementptr inbounds %struct.GPR, %struct.GPR* %2945, i32 0, i32 5
  %2947 = getelementptr inbounds %struct.Reg, %struct.Reg* %2946, i32 0, i32 0
  %RCX.i1995 = bitcast %union.anon* %2947 to i64*
  %2948 = load i64, i64* %RAX.i1994
  %2949 = load i64, i64* %RCX.i1995
  %2950 = mul i64 %2949, 8
  %2951 = add i64 %2950, %2948
  %2952 = load i64, i64* %PC.i1993
  %2953 = add i64 %2952, 4
  store i64 %2953, i64* %PC.i1993
  %2954 = inttoptr i64 %2951 to i64*
  %2955 = load i64, i64* %2954
  store i64 %2955, i64* %RAX.i1994, align 8
  store %struct.Memory* %loadMem_4b087c, %struct.Memory** %MEMORY
  %loadMem_4b0880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2957 = getelementptr inbounds %struct.GPR, %struct.GPR* %2956, i32 0, i32 33
  %2958 = getelementptr inbounds %struct.Reg, %struct.Reg* %2957, i32 0, i32 0
  %PC.i1990 = bitcast %union.anon* %2958 to i64*
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2960 = getelementptr inbounds %struct.GPR, %struct.GPR* %2959, i32 0, i32 1
  %2961 = getelementptr inbounds %struct.Reg, %struct.Reg* %2960, i32 0, i32 0
  %RAX.i1991 = bitcast %union.anon* %2961 to i64*
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2963 = getelementptr inbounds %struct.GPR, %struct.GPR* %2962, i32 0, i32 7
  %2964 = getelementptr inbounds %struct.Reg, %struct.Reg* %2963, i32 0, i32 0
  %RDX.i1992 = bitcast %union.anon* %2964 to i64*
  %2965 = load i64, i64* %RAX.i1991
  %2966 = add i64 %2965, 4
  %2967 = load i64, i64* %PC.i1990
  %2968 = add i64 %2967, 3
  store i64 %2968, i64* %PC.i1990
  %2969 = inttoptr i64 %2966 to i32*
  %2970 = load i32, i32* %2969
  %2971 = zext i32 %2970 to i64
  store i64 %2971, i64* %RDX.i1992, align 8
  store %struct.Memory* %loadMem_4b0880, %struct.Memory** %MEMORY
  %loadMem_4b0883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2973 = getelementptr inbounds %struct.GPR, %struct.GPR* %2972, i32 0, i32 33
  %2974 = getelementptr inbounds %struct.Reg, %struct.Reg* %2973, i32 0, i32 0
  %PC.i1988 = bitcast %union.anon* %2974 to i64*
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2976 = getelementptr inbounds %struct.GPR, %struct.GPR* %2975, i32 0, i32 1
  %2977 = getelementptr inbounds %struct.Reg, %struct.Reg* %2976, i32 0, i32 0
  %RAX.i1989 = bitcast %union.anon* %2977 to i64*
  %2978 = load i64, i64* %PC.i1988
  %2979 = add i64 %2978, 8
  store i64 %2979, i64* %PC.i1988
  %2980 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %2980, i64* %RAX.i1989, align 8
  store %struct.Memory* %loadMem_4b0883, %struct.Memory** %MEMORY
  %loadMem_4b088b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 33
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %PC.i1985 = bitcast %union.anon* %2983 to i64*
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2985 = getelementptr inbounds %struct.GPR, %struct.GPR* %2984, i32 0, i32 5
  %2986 = getelementptr inbounds %struct.Reg, %struct.Reg* %2985, i32 0, i32 0
  %RCX.i1986 = bitcast %union.anon* %2986 to i64*
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 15
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %RBP.i1987 = bitcast %union.anon* %2989 to i64*
  %2990 = load i64, i64* %RBP.i1987
  %2991 = sub i64 %2990, 8
  %2992 = load i64, i64* %PC.i1985
  %2993 = add i64 %2992, 4
  store i64 %2993, i64* %PC.i1985
  %2994 = inttoptr i64 %2991 to i32*
  %2995 = load i32, i32* %2994
  %2996 = sext i32 %2995 to i64
  store i64 %2996, i64* %RCX.i1986, align 8
  store %struct.Memory* %loadMem_4b088b, %struct.Memory** %MEMORY
  %loadMem_4b088f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 33
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %PC.i1982 = bitcast %union.anon* %2999 to i64*
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3001 = getelementptr inbounds %struct.GPR, %struct.GPR* %3000, i32 0, i32 1
  %3002 = getelementptr inbounds %struct.Reg, %struct.Reg* %3001, i32 0, i32 0
  %RAX.i1983 = bitcast %union.anon* %3002 to i64*
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3004 = getelementptr inbounds %struct.GPR, %struct.GPR* %3003, i32 0, i32 5
  %3005 = getelementptr inbounds %struct.Reg, %struct.Reg* %3004, i32 0, i32 0
  %RCX.i1984 = bitcast %union.anon* %3005 to i64*
  %3006 = load i64, i64* %RAX.i1983
  %3007 = load i64, i64* %RCX.i1984
  %3008 = mul i64 %3007, 8
  %3009 = add i64 %3008, %3006
  %3010 = load i64, i64* %PC.i1982
  %3011 = add i64 %3010, 4
  store i64 %3011, i64* %PC.i1982
  %3012 = inttoptr i64 %3009 to i64*
  %3013 = load i64, i64* %3012
  store i64 %3013, i64* %RAX.i1983, align 8
  store %struct.Memory* %loadMem_4b088f, %struct.Memory** %MEMORY
  %loadMem_4b0893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3015 = getelementptr inbounds %struct.GPR, %struct.GPR* %3014, i32 0, i32 33
  %3016 = getelementptr inbounds %struct.Reg, %struct.Reg* %3015, i32 0, i32 0
  %PC.i1979 = bitcast %union.anon* %3016 to i64*
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3018 = getelementptr inbounds %struct.GPR, %struct.GPR* %3017, i32 0, i32 1
  %3019 = getelementptr inbounds %struct.Reg, %struct.Reg* %3018, i32 0, i32 0
  %RAX.i1980 = bitcast %union.anon* %3019 to i64*
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3021 = getelementptr inbounds %struct.GPR, %struct.GPR* %3020, i32 0, i32 7
  %3022 = getelementptr inbounds %struct.Reg, %struct.Reg* %3021, i32 0, i32 0
  %RDX.i1981 = bitcast %union.anon* %3022 to i64*
  %3023 = load i64, i64* %RDX.i1981
  %3024 = load i64, i64* %RAX.i1980
  %3025 = add i64 %3024, 4
  %3026 = load i64, i64* %PC.i1979
  %3027 = add i64 %3026, 3
  store i64 %3027, i64* %PC.i1979
  %3028 = trunc i64 %3023 to i32
  %3029 = inttoptr i64 %3025 to i32*
  %3030 = load i32, i32* %3029
  %3031 = sub i32 %3028, %3030
  %3032 = zext i32 %3031 to i64
  store i64 %3032, i64* %RDX.i1981, align 8
  %3033 = icmp ult i32 %3028, %3030
  %3034 = zext i1 %3033 to i8
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3034, i8* %3035, align 1
  %3036 = and i32 %3031, 255
  %3037 = call i32 @llvm.ctpop.i32(i32 %3036)
  %3038 = trunc i32 %3037 to i8
  %3039 = and i8 %3038, 1
  %3040 = xor i8 %3039, 1
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3040, i8* %3041, align 1
  %3042 = xor i32 %3030, %3028
  %3043 = xor i32 %3042, %3031
  %3044 = lshr i32 %3043, 4
  %3045 = trunc i32 %3044 to i8
  %3046 = and i8 %3045, 1
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3046, i8* %3047, align 1
  %3048 = icmp eq i32 %3031, 0
  %3049 = zext i1 %3048 to i8
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3049, i8* %3050, align 1
  %3051 = lshr i32 %3031, 31
  %3052 = trunc i32 %3051 to i8
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3052, i8* %3053, align 1
  %3054 = lshr i32 %3028, 31
  %3055 = lshr i32 %3030, 31
  %3056 = xor i32 %3055, %3054
  %3057 = xor i32 %3051, %3054
  %3058 = add i32 %3057, %3056
  %3059 = icmp eq i32 %3058, 2
  %3060 = zext i1 %3059 to i8
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3060, i8* %3061, align 1
  store %struct.Memory* %loadMem_4b0893, %struct.Memory** %MEMORY
  %loadMem_4b0896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 33
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %PC.i1977 = bitcast %union.anon* %3064 to i64*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3066 = getelementptr inbounds %struct.GPR, %struct.GPR* %3065, i32 0, i32 7
  %3067 = getelementptr inbounds %struct.Reg, %struct.Reg* %3066, i32 0, i32 0
  %EDX.i1978 = bitcast %union.anon* %3067 to i32*
  %3068 = load i32, i32* %EDX.i1978
  %3069 = zext i32 %3068 to i64
  %3070 = load i64, i64* %PC.i1977
  %3071 = add i64 %3070, 3
  store i64 %3071, i64* %PC.i1977
  %3072 = sub i32 %3068, 127
  %3073 = icmp ult i32 %3068, 127
  %3074 = zext i1 %3073 to i8
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3074, i8* %3075, align 1
  %3076 = and i32 %3072, 255
  %3077 = call i32 @llvm.ctpop.i32(i32 %3076)
  %3078 = trunc i32 %3077 to i8
  %3079 = and i8 %3078, 1
  %3080 = xor i8 %3079, 1
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3080, i8* %3081, align 1
  %3082 = xor i64 127, %3069
  %3083 = trunc i64 %3082 to i32
  %3084 = xor i32 %3083, %3072
  %3085 = lshr i32 %3084, 4
  %3086 = trunc i32 %3085 to i8
  %3087 = and i8 %3086, 1
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3087, i8* %3088, align 1
  %3089 = icmp eq i32 %3072, 0
  %3090 = zext i1 %3089 to i8
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3090, i8* %3091, align 1
  %3092 = lshr i32 %3072, 31
  %3093 = trunc i32 %3092 to i8
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3093, i8* %3094, align 1
  %3095 = lshr i32 %3068, 31
  %3096 = xor i32 %3092, %3095
  %3097 = add i32 %3096, %3095
  %3098 = icmp eq i32 %3097, 2
  %3099 = zext i1 %3098 to i8
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3099, i8* %3100, align 1
  store %struct.Memory* %loadMem_4b0896, %struct.Memory** %MEMORY
  %loadMem_4b0899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3102 = getelementptr inbounds %struct.GPR, %struct.GPR* %3101, i32 0, i32 33
  %3103 = getelementptr inbounds %struct.Reg, %struct.Reg* %3102, i32 0, i32 0
  %PC.i1976 = bitcast %union.anon* %3103 to i64*
  %3104 = load i64, i64* %PC.i1976
  %3105 = add i64 %3104, 22
  %3106 = load i64, i64* %PC.i1976
  %3107 = add i64 %3106, 6
  %3108 = load i64, i64* %PC.i1976
  %3109 = add i64 %3108, 6
  store i64 %3109, i64* %PC.i1976
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3111 = load i8, i8* %3110, align 1
  %3112 = icmp ne i8 %3111, 0
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3114 = load i8, i8* %3113, align 1
  %3115 = icmp ne i8 %3114, 0
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3117 = load i8, i8* %3116, align 1
  %3118 = icmp ne i8 %3117, 0
  %3119 = xor i1 %3115, %3118
  %3120 = or i1 %3112, %3119
  %3121 = zext i1 %3120 to i8
  store i8 %3121, i8* %BRANCH_TAKEN, align 1
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3123 = select i1 %3120, i64 %3105, i64 %3107
  store i64 %3123, i64* %3122, align 8
  store %struct.Memory* %loadMem_4b0899, %struct.Memory** %MEMORY
  %loadBr_4b0899 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0899 = icmp eq i8 %loadBr_4b0899, 1
  br i1 %cmpBr_4b0899, label %block_.L_4b08af, label %block_4b089f

block_4b089f:                                     ; preds = %block_.L_4b0870
  %loadMem_4b089f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3125 = getelementptr inbounds %struct.GPR, %struct.GPR* %3124, i32 0, i32 33
  %3126 = getelementptr inbounds %struct.Reg, %struct.Reg* %3125, i32 0, i32 0
  %PC.i1974 = bitcast %union.anon* %3126 to i64*
  %3127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3128 = getelementptr inbounds %struct.GPR, %struct.GPR* %3127, i32 0, i32 1
  %3129 = getelementptr inbounds %struct.Reg, %struct.Reg* %3128, i32 0, i32 0
  %RAX.i1975 = bitcast %union.anon* %3129 to i64*
  %3130 = load i64, i64* %PC.i1974
  %3131 = add i64 %3130, 5
  store i64 %3131, i64* %PC.i1974
  store i64 127, i64* %RAX.i1975, align 8
  store %struct.Memory* %loadMem_4b089f, %struct.Memory** %MEMORY
  %loadMem_4b08a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3133 = getelementptr inbounds %struct.GPR, %struct.GPR* %3132, i32 0, i32 33
  %3134 = getelementptr inbounds %struct.Reg, %struct.Reg* %3133, i32 0, i32 0
  %PC.i1971 = bitcast %union.anon* %3134 to i64*
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3136 = getelementptr inbounds %struct.GPR, %struct.GPR* %3135, i32 0, i32 1
  %3137 = getelementptr inbounds %struct.Reg, %struct.Reg* %3136, i32 0, i32 0
  %EAX.i1972 = bitcast %union.anon* %3137 to i32*
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3139 = getelementptr inbounds %struct.GPR, %struct.GPR* %3138, i32 0, i32 15
  %3140 = getelementptr inbounds %struct.Reg, %struct.Reg* %3139, i32 0, i32 0
  %RBP.i1973 = bitcast %union.anon* %3140 to i64*
  %3141 = load i64, i64* %RBP.i1973
  %3142 = sub i64 %3141, 35436
  %3143 = load i32, i32* %EAX.i1972
  %3144 = zext i32 %3143 to i64
  %3145 = load i64, i64* %PC.i1971
  %3146 = add i64 %3145, 6
  store i64 %3146, i64* %PC.i1971
  %3147 = inttoptr i64 %3142 to i32*
  store i32 %3143, i32* %3147
  store %struct.Memory* %loadMem_4b08a4, %struct.Memory** %MEMORY
  %loadMem_4b08aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 33
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %PC.i1970 = bitcast %union.anon* %3150 to i64*
  %3151 = load i64, i64* %PC.i1970
  %3152 = add i64 %3151, 49
  %3153 = load i64, i64* %PC.i1970
  %3154 = add i64 %3153, 5
  store i64 %3154, i64* %PC.i1970
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3152, i64* %3155, align 8
  store %struct.Memory* %loadMem_4b08aa, %struct.Memory** %MEMORY
  br label %block_.L_4b08db

block_.L_4b08af:                                  ; preds = %block_.L_4b0870
  %loadMem_4b08af = load %struct.Memory*, %struct.Memory** %MEMORY
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3157 = getelementptr inbounds %struct.GPR, %struct.GPR* %3156, i32 0, i32 33
  %3158 = getelementptr inbounds %struct.Reg, %struct.Reg* %3157, i32 0, i32 0
  %PC.i1968 = bitcast %union.anon* %3158 to i64*
  %3159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3160 = getelementptr inbounds %struct.GPR, %struct.GPR* %3159, i32 0, i32 1
  %3161 = getelementptr inbounds %struct.Reg, %struct.Reg* %3160, i32 0, i32 0
  %RAX.i1969 = bitcast %union.anon* %3161 to i64*
  %3162 = load i64, i64* %PC.i1968
  %3163 = add i64 %3162, 8
  store i64 %3163, i64* %PC.i1968
  %3164 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %3164, i64* %RAX.i1969, align 8
  store %struct.Memory* %loadMem_4b08af, %struct.Memory** %MEMORY
  %loadMem_4b08b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3166 = getelementptr inbounds %struct.GPR, %struct.GPR* %3165, i32 0, i32 33
  %3167 = getelementptr inbounds %struct.Reg, %struct.Reg* %3166, i32 0, i32 0
  %PC.i1965 = bitcast %union.anon* %3167 to i64*
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3169 = getelementptr inbounds %struct.GPR, %struct.GPR* %3168, i32 0, i32 5
  %3170 = getelementptr inbounds %struct.Reg, %struct.Reg* %3169, i32 0, i32 0
  %RCX.i1966 = bitcast %union.anon* %3170 to i64*
  %3171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3172 = getelementptr inbounds %struct.GPR, %struct.GPR* %3171, i32 0, i32 15
  %3173 = getelementptr inbounds %struct.Reg, %struct.Reg* %3172, i32 0, i32 0
  %RBP.i1967 = bitcast %union.anon* %3173 to i64*
  %3174 = load i64, i64* %RBP.i1967
  %3175 = sub i64 %3174, 12
  %3176 = load i64, i64* %PC.i1965
  %3177 = add i64 %3176, 4
  store i64 %3177, i64* %PC.i1965
  %3178 = inttoptr i64 %3175 to i32*
  %3179 = load i32, i32* %3178
  %3180 = sext i32 %3179 to i64
  store i64 %3180, i64* %RCX.i1966, align 8
  store %struct.Memory* %loadMem_4b08b7, %struct.Memory** %MEMORY
  %loadMem_4b08bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3182 = getelementptr inbounds %struct.GPR, %struct.GPR* %3181, i32 0, i32 33
  %3183 = getelementptr inbounds %struct.Reg, %struct.Reg* %3182, i32 0, i32 0
  %PC.i1962 = bitcast %union.anon* %3183 to i64*
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3185 = getelementptr inbounds %struct.GPR, %struct.GPR* %3184, i32 0, i32 1
  %3186 = getelementptr inbounds %struct.Reg, %struct.Reg* %3185, i32 0, i32 0
  %RAX.i1963 = bitcast %union.anon* %3186 to i64*
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3188 = getelementptr inbounds %struct.GPR, %struct.GPR* %3187, i32 0, i32 5
  %3189 = getelementptr inbounds %struct.Reg, %struct.Reg* %3188, i32 0, i32 0
  %RCX.i1964 = bitcast %union.anon* %3189 to i64*
  %3190 = load i64, i64* %RAX.i1963
  %3191 = load i64, i64* %RCX.i1964
  %3192 = mul i64 %3191, 8
  %3193 = add i64 %3192, %3190
  %3194 = load i64, i64* %PC.i1962
  %3195 = add i64 %3194, 4
  store i64 %3195, i64* %PC.i1962
  %3196 = inttoptr i64 %3193 to i64*
  %3197 = load i64, i64* %3196
  store i64 %3197, i64* %RAX.i1963, align 8
  store %struct.Memory* %loadMem_4b08bb, %struct.Memory** %MEMORY
  %loadMem_4b08bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3199 = getelementptr inbounds %struct.GPR, %struct.GPR* %3198, i32 0, i32 33
  %3200 = getelementptr inbounds %struct.Reg, %struct.Reg* %3199, i32 0, i32 0
  %PC.i1959 = bitcast %union.anon* %3200 to i64*
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3202 = getelementptr inbounds %struct.GPR, %struct.GPR* %3201, i32 0, i32 1
  %3203 = getelementptr inbounds %struct.Reg, %struct.Reg* %3202, i32 0, i32 0
  %RAX.i1960 = bitcast %union.anon* %3203 to i64*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3205 = getelementptr inbounds %struct.GPR, %struct.GPR* %3204, i32 0, i32 7
  %3206 = getelementptr inbounds %struct.Reg, %struct.Reg* %3205, i32 0, i32 0
  %RDX.i1961 = bitcast %union.anon* %3206 to i64*
  %3207 = load i64, i64* %RAX.i1960
  %3208 = add i64 %3207, 4
  %3209 = load i64, i64* %PC.i1959
  %3210 = add i64 %3209, 3
  store i64 %3210, i64* %PC.i1959
  %3211 = inttoptr i64 %3208 to i32*
  %3212 = load i32, i32* %3211
  %3213 = zext i32 %3212 to i64
  store i64 %3213, i64* %RDX.i1961, align 8
  store %struct.Memory* %loadMem_4b08bf, %struct.Memory** %MEMORY
  %loadMem_4b08c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3215 = getelementptr inbounds %struct.GPR, %struct.GPR* %3214, i32 0, i32 33
  %3216 = getelementptr inbounds %struct.Reg, %struct.Reg* %3215, i32 0, i32 0
  %PC.i1957 = bitcast %union.anon* %3216 to i64*
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3218 = getelementptr inbounds %struct.GPR, %struct.GPR* %3217, i32 0, i32 1
  %3219 = getelementptr inbounds %struct.Reg, %struct.Reg* %3218, i32 0, i32 0
  %RAX.i1958 = bitcast %union.anon* %3219 to i64*
  %3220 = load i64, i64* %PC.i1957
  %3221 = add i64 %3220, 8
  store i64 %3221, i64* %PC.i1957
  %3222 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3222, i64* %RAX.i1958, align 8
  store %struct.Memory* %loadMem_4b08c2, %struct.Memory** %MEMORY
  %loadMem_4b08ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3224 = getelementptr inbounds %struct.GPR, %struct.GPR* %3223, i32 0, i32 33
  %3225 = getelementptr inbounds %struct.Reg, %struct.Reg* %3224, i32 0, i32 0
  %PC.i1954 = bitcast %union.anon* %3225 to i64*
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3227 = getelementptr inbounds %struct.GPR, %struct.GPR* %3226, i32 0, i32 5
  %3228 = getelementptr inbounds %struct.Reg, %struct.Reg* %3227, i32 0, i32 0
  %RCX.i1955 = bitcast %union.anon* %3228 to i64*
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3230 = getelementptr inbounds %struct.GPR, %struct.GPR* %3229, i32 0, i32 15
  %3231 = getelementptr inbounds %struct.Reg, %struct.Reg* %3230, i32 0, i32 0
  %RBP.i1956 = bitcast %union.anon* %3231 to i64*
  %3232 = load i64, i64* %RBP.i1956
  %3233 = sub i64 %3232, 8
  %3234 = load i64, i64* %PC.i1954
  %3235 = add i64 %3234, 4
  store i64 %3235, i64* %PC.i1954
  %3236 = inttoptr i64 %3233 to i32*
  %3237 = load i32, i32* %3236
  %3238 = sext i32 %3237 to i64
  store i64 %3238, i64* %RCX.i1955, align 8
  store %struct.Memory* %loadMem_4b08ca, %struct.Memory** %MEMORY
  %loadMem_4b08ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3240 = getelementptr inbounds %struct.GPR, %struct.GPR* %3239, i32 0, i32 33
  %3241 = getelementptr inbounds %struct.Reg, %struct.Reg* %3240, i32 0, i32 0
  %PC.i1951 = bitcast %union.anon* %3241 to i64*
  %3242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3243 = getelementptr inbounds %struct.GPR, %struct.GPR* %3242, i32 0, i32 1
  %3244 = getelementptr inbounds %struct.Reg, %struct.Reg* %3243, i32 0, i32 0
  %RAX.i1952 = bitcast %union.anon* %3244 to i64*
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3246 = getelementptr inbounds %struct.GPR, %struct.GPR* %3245, i32 0, i32 5
  %3247 = getelementptr inbounds %struct.Reg, %struct.Reg* %3246, i32 0, i32 0
  %RCX.i1953 = bitcast %union.anon* %3247 to i64*
  %3248 = load i64, i64* %RAX.i1952
  %3249 = load i64, i64* %RCX.i1953
  %3250 = mul i64 %3249, 8
  %3251 = add i64 %3250, %3248
  %3252 = load i64, i64* %PC.i1951
  %3253 = add i64 %3252, 4
  store i64 %3253, i64* %PC.i1951
  %3254 = inttoptr i64 %3251 to i64*
  %3255 = load i64, i64* %3254
  store i64 %3255, i64* %RAX.i1952, align 8
  store %struct.Memory* %loadMem_4b08ce, %struct.Memory** %MEMORY
  %loadMem_4b08d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3257 = getelementptr inbounds %struct.GPR, %struct.GPR* %3256, i32 0, i32 33
  %3258 = getelementptr inbounds %struct.Reg, %struct.Reg* %3257, i32 0, i32 0
  %PC.i1948 = bitcast %union.anon* %3258 to i64*
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3260 = getelementptr inbounds %struct.GPR, %struct.GPR* %3259, i32 0, i32 1
  %3261 = getelementptr inbounds %struct.Reg, %struct.Reg* %3260, i32 0, i32 0
  %RAX.i1949 = bitcast %union.anon* %3261 to i64*
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3263 = getelementptr inbounds %struct.GPR, %struct.GPR* %3262, i32 0, i32 7
  %3264 = getelementptr inbounds %struct.Reg, %struct.Reg* %3263, i32 0, i32 0
  %RDX.i1950 = bitcast %union.anon* %3264 to i64*
  %3265 = load i64, i64* %RDX.i1950
  %3266 = load i64, i64* %RAX.i1949
  %3267 = add i64 %3266, 4
  %3268 = load i64, i64* %PC.i1948
  %3269 = add i64 %3268, 3
  store i64 %3269, i64* %PC.i1948
  %3270 = trunc i64 %3265 to i32
  %3271 = inttoptr i64 %3267 to i32*
  %3272 = load i32, i32* %3271
  %3273 = sub i32 %3270, %3272
  %3274 = zext i32 %3273 to i64
  store i64 %3274, i64* %RDX.i1950, align 8
  %3275 = icmp ult i32 %3270, %3272
  %3276 = zext i1 %3275 to i8
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3276, i8* %3277, align 1
  %3278 = and i32 %3273, 255
  %3279 = call i32 @llvm.ctpop.i32(i32 %3278)
  %3280 = trunc i32 %3279 to i8
  %3281 = and i8 %3280, 1
  %3282 = xor i8 %3281, 1
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3282, i8* %3283, align 1
  %3284 = xor i32 %3272, %3270
  %3285 = xor i32 %3284, %3273
  %3286 = lshr i32 %3285, 4
  %3287 = trunc i32 %3286 to i8
  %3288 = and i8 %3287, 1
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3288, i8* %3289, align 1
  %3290 = icmp eq i32 %3273, 0
  %3291 = zext i1 %3290 to i8
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3291, i8* %3292, align 1
  %3293 = lshr i32 %3273, 31
  %3294 = trunc i32 %3293 to i8
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3294, i8* %3295, align 1
  %3296 = lshr i32 %3270, 31
  %3297 = lshr i32 %3272, 31
  %3298 = xor i32 %3297, %3296
  %3299 = xor i32 %3293, %3296
  %3300 = add i32 %3299, %3298
  %3301 = icmp eq i32 %3300, 2
  %3302 = zext i1 %3301 to i8
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3302, i8* %3303, align 1
  store %struct.Memory* %loadMem_4b08d2, %struct.Memory** %MEMORY
  %loadMem_4b08d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3305 = getelementptr inbounds %struct.GPR, %struct.GPR* %3304, i32 0, i32 33
  %3306 = getelementptr inbounds %struct.Reg, %struct.Reg* %3305, i32 0, i32 0
  %PC.i1945 = bitcast %union.anon* %3306 to i64*
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3308 = getelementptr inbounds %struct.GPR, %struct.GPR* %3307, i32 0, i32 7
  %3309 = getelementptr inbounds %struct.Reg, %struct.Reg* %3308, i32 0, i32 0
  %EDX.i1946 = bitcast %union.anon* %3309 to i32*
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3311 = getelementptr inbounds %struct.GPR, %struct.GPR* %3310, i32 0, i32 15
  %3312 = getelementptr inbounds %struct.Reg, %struct.Reg* %3311, i32 0, i32 0
  %RBP.i1947 = bitcast %union.anon* %3312 to i64*
  %3313 = load i64, i64* %RBP.i1947
  %3314 = sub i64 %3313, 35436
  %3315 = load i32, i32* %EDX.i1946
  %3316 = zext i32 %3315 to i64
  %3317 = load i64, i64* %PC.i1945
  %3318 = add i64 %3317, 6
  store i64 %3318, i64* %PC.i1945
  %3319 = inttoptr i64 %3314 to i32*
  store i32 %3315, i32* %3319
  store %struct.Memory* %loadMem_4b08d5, %struct.Memory** %MEMORY
  br label %block_.L_4b08db

block_.L_4b08db:                                  ; preds = %block_.L_4b08af, %block_4b089f
  %loadMem_4b08db = load %struct.Memory*, %struct.Memory** %MEMORY
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3321 = getelementptr inbounds %struct.GPR, %struct.GPR* %3320, i32 0, i32 33
  %3322 = getelementptr inbounds %struct.Reg, %struct.Reg* %3321, i32 0, i32 0
  %PC.i1942 = bitcast %union.anon* %3322 to i64*
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3324 = getelementptr inbounds %struct.GPR, %struct.GPR* %3323, i32 0, i32 1
  %3325 = getelementptr inbounds %struct.Reg, %struct.Reg* %3324, i32 0, i32 0
  %RAX.i1943 = bitcast %union.anon* %3325 to i64*
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3327 = getelementptr inbounds %struct.GPR, %struct.GPR* %3326, i32 0, i32 15
  %3328 = getelementptr inbounds %struct.Reg, %struct.Reg* %3327, i32 0, i32 0
  %RBP.i1944 = bitcast %union.anon* %3328 to i64*
  %3329 = load i64, i64* %RBP.i1944
  %3330 = sub i64 %3329, 35436
  %3331 = load i64, i64* %PC.i1942
  %3332 = add i64 %3331, 6
  store i64 %3332, i64* %PC.i1942
  %3333 = inttoptr i64 %3330 to i32*
  %3334 = load i32, i32* %3333
  %3335 = zext i32 %3334 to i64
  store i64 %3335, i64* %RAX.i1943, align 8
  store %struct.Memory* %loadMem_4b08db, %struct.Memory** %MEMORY
  %loadMem_4b08e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3337 = getelementptr inbounds %struct.GPR, %struct.GPR* %3336, i32 0, i32 33
  %3338 = getelementptr inbounds %struct.Reg, %struct.Reg* %3337, i32 0, i32 0
  %PC.i1939 = bitcast %union.anon* %3338 to i64*
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 1
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %EAX.i1940 = bitcast %union.anon* %3341 to i32*
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 15
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %RBP.i1941 = bitcast %union.anon* %3344 to i64*
  %3345 = load i64, i64* %RBP.i1941
  %3346 = sub i64 %3345, 35432
  %3347 = load i32, i32* %EAX.i1940
  %3348 = zext i32 %3347 to i64
  %3349 = load i64, i64* %PC.i1939
  %3350 = add i64 %3349, 6
  store i64 %3350, i64* %PC.i1939
  %3351 = inttoptr i64 %3346 to i32*
  store i32 %3347, i32* %3351
  store %struct.Memory* %loadMem_4b08e1, %struct.Memory** %MEMORY
  br label %block_.L_4b08e7

block_.L_4b08e7:                                  ; preds = %block_.L_4b08db, %block_4b0860
  %loadMem_4b08e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3353 = getelementptr inbounds %struct.GPR, %struct.GPR* %3352, i32 0, i32 33
  %3354 = getelementptr inbounds %struct.Reg, %struct.Reg* %3353, i32 0, i32 0
  %PC.i1936 = bitcast %union.anon* %3354 to i64*
  %3355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3356 = getelementptr inbounds %struct.GPR, %struct.GPR* %3355, i32 0, i32 1
  %3357 = getelementptr inbounds %struct.Reg, %struct.Reg* %3356, i32 0, i32 0
  %RAX.i1937 = bitcast %union.anon* %3357 to i64*
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 15
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %RBP.i1938 = bitcast %union.anon* %3360 to i64*
  %3361 = load i64, i64* %RBP.i1938
  %3362 = sub i64 %3361, 35432
  %3363 = load i64, i64* %PC.i1936
  %3364 = add i64 %3363, 6
  store i64 %3364, i64* %PC.i1936
  %3365 = inttoptr i64 %3362 to i32*
  %3366 = load i32, i32* %3365
  %3367 = zext i32 %3366 to i64
  store i64 %3367, i64* %RAX.i1937, align 8
  store %struct.Memory* %loadMem_4b08e7, %struct.Memory** %MEMORY
  %loadMem_4b08ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3369 = getelementptr inbounds %struct.GPR, %struct.GPR* %3368, i32 0, i32 33
  %3370 = getelementptr inbounds %struct.Reg, %struct.Reg* %3369, i32 0, i32 0
  %PC.i1933 = bitcast %union.anon* %3370 to i64*
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3372 = getelementptr inbounds %struct.GPR, %struct.GPR* %3371, i32 0, i32 1
  %3373 = getelementptr inbounds %struct.Reg, %struct.Reg* %3372, i32 0, i32 0
  %EAX.i1934 = bitcast %union.anon* %3373 to i32*
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 15
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %RBP.i1935 = bitcast %union.anon* %3376 to i64*
  %3377 = load i64, i64* %RBP.i1935
  %3378 = sub i64 %3377, 35412
  %3379 = load i32, i32* %EAX.i1934
  %3380 = zext i32 %3379 to i64
  %3381 = load i64, i64* %PC.i1933
  %3382 = add i64 %3381, 6
  store i64 %3382, i64* %PC.i1933
  %3383 = inttoptr i64 %3378 to i32*
  store i32 %3379, i32* %3383
  store %struct.Memory* %loadMem_4b08ed, %struct.Memory** %MEMORY
  %loadMem_4b08f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3385 = getelementptr inbounds %struct.GPR, %struct.GPR* %3384, i32 0, i32 33
  %3386 = getelementptr inbounds %struct.Reg, %struct.Reg* %3385, i32 0, i32 0
  %PC.i1931 = bitcast %union.anon* %3386 to i64*
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3388 = getelementptr inbounds %struct.GPR, %struct.GPR* %3387, i32 0, i32 5
  %3389 = getelementptr inbounds %struct.Reg, %struct.Reg* %3388, i32 0, i32 0
  %RCX.i1932 = bitcast %union.anon* %3389 to i64*
  %3390 = load i64, i64* %PC.i1931
  %3391 = add i64 %3390, 8
  store i64 %3391, i64* %PC.i1931
  %3392 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %3392, i64* %RCX.i1932, align 8
  store %struct.Memory* %loadMem_4b08f3, %struct.Memory** %MEMORY
  %loadMem_4b08fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3394 = getelementptr inbounds %struct.GPR, %struct.GPR* %3393, i32 0, i32 33
  %3395 = getelementptr inbounds %struct.Reg, %struct.Reg* %3394, i32 0, i32 0
  %PC.i1928 = bitcast %union.anon* %3395 to i64*
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3397 = getelementptr inbounds %struct.GPR, %struct.GPR* %3396, i32 0, i32 1
  %3398 = getelementptr inbounds %struct.Reg, %struct.Reg* %3397, i32 0, i32 0
  %RAX.i1929 = bitcast %union.anon* %3398 to i64*
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3400 = getelementptr inbounds %struct.GPR, %struct.GPR* %3399, i32 0, i32 5
  %3401 = getelementptr inbounds %struct.Reg, %struct.Reg* %3400, i32 0, i32 0
  %RCX.i1930 = bitcast %union.anon* %3401 to i64*
  %3402 = load i64, i64* %RCX.i1930
  %3403 = add i64 %3402, 4
  %3404 = load i64, i64* %PC.i1928
  %3405 = add i64 %3404, 3
  store i64 %3405, i64* %PC.i1928
  %3406 = inttoptr i64 %3403 to i32*
  %3407 = load i32, i32* %3406
  %3408 = zext i32 %3407 to i64
  store i64 %3408, i64* %RAX.i1929, align 8
  store %struct.Memory* %loadMem_4b08fb, %struct.Memory** %MEMORY
  %loadMem_4b08fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3410 = getelementptr inbounds %struct.GPR, %struct.GPR* %3409, i32 0, i32 33
  %3411 = getelementptr inbounds %struct.Reg, %struct.Reg* %3410, i32 0, i32 0
  %PC.i1926 = bitcast %union.anon* %3411 to i64*
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 5
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %RCX.i1927 = bitcast %union.anon* %3414 to i64*
  %3415 = load i64, i64* %PC.i1926
  %3416 = add i64 %3415, 8
  store i64 %3416, i64* %PC.i1926
  %3417 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3417, i64* %RCX.i1927, align 8
  store %struct.Memory* %loadMem_4b08fe, %struct.Memory** %MEMORY
  %loadMem_4b0906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3419 = getelementptr inbounds %struct.GPR, %struct.GPR* %3418, i32 0, i32 33
  %3420 = getelementptr inbounds %struct.Reg, %struct.Reg* %3419, i32 0, i32 0
  %PC.i1923 = bitcast %union.anon* %3420 to i64*
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3422 = getelementptr inbounds %struct.GPR, %struct.GPR* %3421, i32 0, i32 7
  %3423 = getelementptr inbounds %struct.Reg, %struct.Reg* %3422, i32 0, i32 0
  %RDX.i1924 = bitcast %union.anon* %3423 to i64*
  %3424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3425 = getelementptr inbounds %struct.GPR, %struct.GPR* %3424, i32 0, i32 15
  %3426 = getelementptr inbounds %struct.Reg, %struct.Reg* %3425, i32 0, i32 0
  %RBP.i1925 = bitcast %union.anon* %3426 to i64*
  %3427 = load i64, i64* %RBP.i1925
  %3428 = sub i64 %3427, 8
  %3429 = load i64, i64* %PC.i1923
  %3430 = add i64 %3429, 4
  store i64 %3430, i64* %PC.i1923
  %3431 = inttoptr i64 %3428 to i32*
  %3432 = load i32, i32* %3431
  %3433 = sext i32 %3432 to i64
  store i64 %3433, i64* %RDX.i1924, align 8
  store %struct.Memory* %loadMem_4b0906, %struct.Memory** %MEMORY
  %loadMem_4b090a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3435 = getelementptr inbounds %struct.GPR, %struct.GPR* %3434, i32 0, i32 33
  %3436 = getelementptr inbounds %struct.Reg, %struct.Reg* %3435, i32 0, i32 0
  %PC.i1920 = bitcast %union.anon* %3436 to i64*
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3438 = getelementptr inbounds %struct.GPR, %struct.GPR* %3437, i32 0, i32 5
  %3439 = getelementptr inbounds %struct.Reg, %struct.Reg* %3438, i32 0, i32 0
  %RCX.i1921 = bitcast %union.anon* %3439 to i64*
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3441 = getelementptr inbounds %struct.GPR, %struct.GPR* %3440, i32 0, i32 7
  %3442 = getelementptr inbounds %struct.Reg, %struct.Reg* %3441, i32 0, i32 0
  %RDX.i1922 = bitcast %union.anon* %3442 to i64*
  %3443 = load i64, i64* %RCX.i1921
  %3444 = load i64, i64* %RDX.i1922
  %3445 = mul i64 %3444, 8
  %3446 = add i64 %3445, %3443
  %3447 = load i64, i64* %PC.i1920
  %3448 = add i64 %3447, 4
  store i64 %3448, i64* %PC.i1920
  %3449 = inttoptr i64 %3446 to i64*
  %3450 = load i64, i64* %3449
  store i64 %3450, i64* %RCX.i1921, align 8
  store %struct.Memory* %loadMem_4b090a, %struct.Memory** %MEMORY
  %loadMem_4b090e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3452 = getelementptr inbounds %struct.GPR, %struct.GPR* %3451, i32 0, i32 33
  %3453 = getelementptr inbounds %struct.Reg, %struct.Reg* %3452, i32 0, i32 0
  %PC.i1917 = bitcast %union.anon* %3453 to i64*
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3455 = getelementptr inbounds %struct.GPR, %struct.GPR* %3454, i32 0, i32 1
  %3456 = getelementptr inbounds %struct.Reg, %struct.Reg* %3455, i32 0, i32 0
  %RAX.i1918 = bitcast %union.anon* %3456 to i64*
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3458 = getelementptr inbounds %struct.GPR, %struct.GPR* %3457, i32 0, i32 5
  %3459 = getelementptr inbounds %struct.Reg, %struct.Reg* %3458, i32 0, i32 0
  %RCX.i1919 = bitcast %union.anon* %3459 to i64*
  %3460 = load i64, i64* %RAX.i1918
  %3461 = load i64, i64* %RCX.i1919
  %3462 = add i64 %3461, 4
  %3463 = load i64, i64* %PC.i1917
  %3464 = add i64 %3463, 3
  store i64 %3464, i64* %PC.i1917
  %3465 = trunc i64 %3460 to i32
  %3466 = inttoptr i64 %3462 to i32*
  %3467 = load i32, i32* %3466
  %3468 = sub i32 %3465, %3467
  %3469 = zext i32 %3468 to i64
  store i64 %3469, i64* %RAX.i1918, align 8
  %3470 = icmp ult i32 %3465, %3467
  %3471 = zext i1 %3470 to i8
  %3472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3471, i8* %3472, align 1
  %3473 = and i32 %3468, 255
  %3474 = call i32 @llvm.ctpop.i32(i32 %3473)
  %3475 = trunc i32 %3474 to i8
  %3476 = and i8 %3475, 1
  %3477 = xor i8 %3476, 1
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3477, i8* %3478, align 1
  %3479 = xor i32 %3467, %3465
  %3480 = xor i32 %3479, %3468
  %3481 = lshr i32 %3480, 4
  %3482 = trunc i32 %3481 to i8
  %3483 = and i8 %3482, 1
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3483, i8* %3484, align 1
  %3485 = icmp eq i32 %3468, 0
  %3486 = zext i1 %3485 to i8
  %3487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3486, i8* %3487, align 1
  %3488 = lshr i32 %3468, 31
  %3489 = trunc i32 %3488 to i8
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3489, i8* %3490, align 1
  %3491 = lshr i32 %3465, 31
  %3492 = lshr i32 %3467, 31
  %3493 = xor i32 %3492, %3491
  %3494 = xor i32 %3488, %3491
  %3495 = add i32 %3494, %3493
  %3496 = icmp eq i32 %3495, 2
  %3497 = zext i1 %3496 to i8
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3497, i8* %3498, align 1
  store %struct.Memory* %loadMem_4b090e, %struct.Memory** %MEMORY
  %loadMem_4b0911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3500 = getelementptr inbounds %struct.GPR, %struct.GPR* %3499, i32 0, i32 33
  %3501 = getelementptr inbounds %struct.Reg, %struct.Reg* %3500, i32 0, i32 0
  %PC.i1915 = bitcast %union.anon* %3501 to i64*
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3503 = getelementptr inbounds %struct.GPR, %struct.GPR* %3502, i32 0, i32 1
  %3504 = getelementptr inbounds %struct.Reg, %struct.Reg* %3503, i32 0, i32 0
  %EAX.i1916 = bitcast %union.anon* %3504 to i32*
  %3505 = load i32, i32* %EAX.i1916
  %3506 = zext i32 %3505 to i64
  %3507 = load i64, i64* %PC.i1915
  %3508 = add i64 %3507, 3
  store i64 %3508, i64* %PC.i1915
  %3509 = sub i32 %3505, -128
  %3510 = icmp ult i32 %3505, -128
  %3511 = zext i1 %3510 to i8
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3511, i8* %3512, align 1
  %3513 = and i32 %3509, 255
  %3514 = call i32 @llvm.ctpop.i32(i32 %3513)
  %3515 = trunc i32 %3514 to i8
  %3516 = and i8 %3515, 1
  %3517 = xor i8 %3516, 1
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3517, i8* %3518, align 1
  %3519 = xor i64 -128, %3506
  %3520 = trunc i64 %3519 to i32
  %3521 = xor i32 %3520, %3509
  %3522 = lshr i32 %3521, 4
  %3523 = trunc i32 %3522 to i8
  %3524 = and i8 %3523, 1
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3524, i8* %3525, align 1
  %3526 = icmp eq i32 %3509, 0
  %3527 = zext i1 %3526 to i8
  %3528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3527, i8* %3528, align 1
  %3529 = lshr i32 %3509, 31
  %3530 = trunc i32 %3529 to i8
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3530, i8* %3531, align 1
  %3532 = lshr i32 %3505, 31
  %3533 = xor i32 1, %3532
  %3534 = xor i32 %3529, %3532
  %3535 = add i32 %3534, %3533
  %3536 = icmp eq i32 %3535, 2
  %3537 = zext i1 %3536 to i8
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3537, i8* %3538, align 1
  store %struct.Memory* %loadMem_4b0911, %struct.Memory** %MEMORY
  %loadMem_4b0914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 33
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %PC.i1914 = bitcast %union.anon* %3541 to i64*
  %3542 = load i64, i64* %PC.i1914
  %3543 = add i64 %3542, 22
  %3544 = load i64, i64* %PC.i1914
  %3545 = add i64 %3544, 6
  %3546 = load i64, i64* %PC.i1914
  %3547 = add i64 %3546, 6
  store i64 %3547, i64* %PC.i1914
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3549 = load i8, i8* %3548, align 1
  %3550 = icmp ne i8 %3549, 0
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3552 = load i8, i8* %3551, align 1
  %3553 = icmp ne i8 %3552, 0
  %3554 = xor i1 %3550, %3553
  %3555 = xor i1 %3554, true
  %3556 = zext i1 %3555 to i8
  store i8 %3556, i8* %BRANCH_TAKEN, align 1
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3558 = select i1 %3554, i64 %3545, i64 %3543
  store i64 %3558, i64* %3557, align 8
  store %struct.Memory* %loadMem_4b0914, %struct.Memory** %MEMORY
  %loadBr_4b0914 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0914 = icmp eq i8 %loadBr_4b0914, 1
  br i1 %cmpBr_4b0914, label %block_.L_4b092a, label %block_4b091a

block_4b091a:                                     ; preds = %block_.L_4b08e7
  %loadMem_4b091a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3560 = getelementptr inbounds %struct.GPR, %struct.GPR* %3559, i32 0, i32 33
  %3561 = getelementptr inbounds %struct.Reg, %struct.Reg* %3560, i32 0, i32 0
  %PC.i1912 = bitcast %union.anon* %3561 to i64*
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3563 = getelementptr inbounds %struct.GPR, %struct.GPR* %3562, i32 0, i32 1
  %3564 = getelementptr inbounds %struct.Reg, %struct.Reg* %3563, i32 0, i32 0
  %RAX.i1913 = bitcast %union.anon* %3564 to i64*
  %3565 = load i64, i64* %PC.i1912
  %3566 = add i64 %3565, 5
  store i64 %3566, i64* %PC.i1912
  store i64 4294967168, i64* %RAX.i1913, align 8
  store %struct.Memory* %loadMem_4b091a, %struct.Memory** %MEMORY
  %loadMem_4b091f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3568 = getelementptr inbounds %struct.GPR, %struct.GPR* %3567, i32 0, i32 33
  %3569 = getelementptr inbounds %struct.Reg, %struct.Reg* %3568, i32 0, i32 0
  %PC.i1909 = bitcast %union.anon* %3569 to i64*
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3571 = getelementptr inbounds %struct.GPR, %struct.GPR* %3570, i32 0, i32 1
  %3572 = getelementptr inbounds %struct.Reg, %struct.Reg* %3571, i32 0, i32 0
  %EAX.i1910 = bitcast %union.anon* %3572 to i32*
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3574 = getelementptr inbounds %struct.GPR, %struct.GPR* %3573, i32 0, i32 15
  %3575 = getelementptr inbounds %struct.Reg, %struct.Reg* %3574, i32 0, i32 0
  %RBP.i1911 = bitcast %union.anon* %3575 to i64*
  %3576 = load i64, i64* %RBP.i1911
  %3577 = sub i64 %3576, 35440
  %3578 = load i32, i32* %EAX.i1910
  %3579 = zext i32 %3578 to i64
  %3580 = load i64, i64* %PC.i1909
  %3581 = add i64 %3580, 6
  store i64 %3581, i64* %PC.i1909
  %3582 = inttoptr i64 %3577 to i32*
  store i32 %3578, i32* %3582
  store %struct.Memory* %loadMem_4b091f, %struct.Memory** %MEMORY
  %loadMem_4b0925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 33
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %PC.i1908 = bitcast %union.anon* %3585 to i64*
  %3586 = load i64, i64* %PC.i1908
  %3587 = add i64 %3586, 108
  %3588 = load i64, i64* %PC.i1908
  %3589 = add i64 %3588, 5
  store i64 %3589, i64* %PC.i1908
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3587, i64* %3590, align 8
  store %struct.Memory* %loadMem_4b0925, %struct.Memory** %MEMORY
  br label %block_.L_4b0991

block_.L_4b092a:                                  ; preds = %block_.L_4b08e7
  %loadMem_4b092a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 33
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %PC.i1906 = bitcast %union.anon* %3593 to i64*
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 1
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %RAX.i1907 = bitcast %union.anon* %3596 to i64*
  %3597 = load i64, i64* %PC.i1906
  %3598 = add i64 %3597, 8
  store i64 %3598, i64* %PC.i1906
  %3599 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %3599, i64* %RAX.i1907, align 8
  store %struct.Memory* %loadMem_4b092a, %struct.Memory** %MEMORY
  %loadMem_4b0932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3601 = getelementptr inbounds %struct.GPR, %struct.GPR* %3600, i32 0, i32 33
  %3602 = getelementptr inbounds %struct.Reg, %struct.Reg* %3601, i32 0, i32 0
  %PC.i1903 = bitcast %union.anon* %3602 to i64*
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3604 = getelementptr inbounds %struct.GPR, %struct.GPR* %3603, i32 0, i32 1
  %3605 = getelementptr inbounds %struct.Reg, %struct.Reg* %3604, i32 0, i32 0
  %RAX.i1904 = bitcast %union.anon* %3605 to i64*
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3607 = getelementptr inbounds %struct.GPR, %struct.GPR* %3606, i32 0, i32 5
  %3608 = getelementptr inbounds %struct.Reg, %struct.Reg* %3607, i32 0, i32 0
  %RCX.i1905 = bitcast %union.anon* %3608 to i64*
  %3609 = load i64, i64* %RAX.i1904
  %3610 = add i64 %3609, 4
  %3611 = load i64, i64* %PC.i1903
  %3612 = add i64 %3611, 3
  store i64 %3612, i64* %PC.i1903
  %3613 = inttoptr i64 %3610 to i32*
  %3614 = load i32, i32* %3613
  %3615 = zext i32 %3614 to i64
  store i64 %3615, i64* %RCX.i1905, align 8
  store %struct.Memory* %loadMem_4b0932, %struct.Memory** %MEMORY
  %loadMem_4b0935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3617 = getelementptr inbounds %struct.GPR, %struct.GPR* %3616, i32 0, i32 33
  %3618 = getelementptr inbounds %struct.Reg, %struct.Reg* %3617, i32 0, i32 0
  %PC.i1901 = bitcast %union.anon* %3618 to i64*
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3620 = getelementptr inbounds %struct.GPR, %struct.GPR* %3619, i32 0, i32 1
  %3621 = getelementptr inbounds %struct.Reg, %struct.Reg* %3620, i32 0, i32 0
  %RAX.i1902 = bitcast %union.anon* %3621 to i64*
  %3622 = load i64, i64* %PC.i1901
  %3623 = add i64 %3622, 8
  store i64 %3623, i64* %PC.i1901
  %3624 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3624, i64* %RAX.i1902, align 8
  store %struct.Memory* %loadMem_4b0935, %struct.Memory** %MEMORY
  %loadMem_4b093d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3626 = getelementptr inbounds %struct.GPR, %struct.GPR* %3625, i32 0, i32 33
  %3627 = getelementptr inbounds %struct.Reg, %struct.Reg* %3626, i32 0, i32 0
  %PC.i1898 = bitcast %union.anon* %3627 to i64*
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3629 = getelementptr inbounds %struct.GPR, %struct.GPR* %3628, i32 0, i32 7
  %3630 = getelementptr inbounds %struct.Reg, %struct.Reg* %3629, i32 0, i32 0
  %RDX.i1899 = bitcast %union.anon* %3630 to i64*
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3632 = getelementptr inbounds %struct.GPR, %struct.GPR* %3631, i32 0, i32 15
  %3633 = getelementptr inbounds %struct.Reg, %struct.Reg* %3632, i32 0, i32 0
  %RBP.i1900 = bitcast %union.anon* %3633 to i64*
  %3634 = load i64, i64* %RBP.i1900
  %3635 = sub i64 %3634, 8
  %3636 = load i64, i64* %PC.i1898
  %3637 = add i64 %3636, 4
  store i64 %3637, i64* %PC.i1898
  %3638 = inttoptr i64 %3635 to i32*
  %3639 = load i32, i32* %3638
  %3640 = sext i32 %3639 to i64
  store i64 %3640, i64* %RDX.i1899, align 8
  store %struct.Memory* %loadMem_4b093d, %struct.Memory** %MEMORY
  %loadMem_4b0941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3642 = getelementptr inbounds %struct.GPR, %struct.GPR* %3641, i32 0, i32 33
  %3643 = getelementptr inbounds %struct.Reg, %struct.Reg* %3642, i32 0, i32 0
  %PC.i1895 = bitcast %union.anon* %3643 to i64*
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 1
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %RAX.i1896 = bitcast %union.anon* %3646 to i64*
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3648 = getelementptr inbounds %struct.GPR, %struct.GPR* %3647, i32 0, i32 7
  %3649 = getelementptr inbounds %struct.Reg, %struct.Reg* %3648, i32 0, i32 0
  %RDX.i1897 = bitcast %union.anon* %3649 to i64*
  %3650 = load i64, i64* %RAX.i1896
  %3651 = load i64, i64* %RDX.i1897
  %3652 = mul i64 %3651, 8
  %3653 = add i64 %3652, %3650
  %3654 = load i64, i64* %PC.i1895
  %3655 = add i64 %3654, 4
  store i64 %3655, i64* %PC.i1895
  %3656 = inttoptr i64 %3653 to i64*
  %3657 = load i64, i64* %3656
  store i64 %3657, i64* %RAX.i1896, align 8
  store %struct.Memory* %loadMem_4b0941, %struct.Memory** %MEMORY
  %loadMem_4b0945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3659 = getelementptr inbounds %struct.GPR, %struct.GPR* %3658, i32 0, i32 33
  %3660 = getelementptr inbounds %struct.Reg, %struct.Reg* %3659, i32 0, i32 0
  %PC.i1892 = bitcast %union.anon* %3660 to i64*
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3662 = getelementptr inbounds %struct.GPR, %struct.GPR* %3661, i32 0, i32 1
  %3663 = getelementptr inbounds %struct.Reg, %struct.Reg* %3662, i32 0, i32 0
  %RAX.i1893 = bitcast %union.anon* %3663 to i64*
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3665 = getelementptr inbounds %struct.GPR, %struct.GPR* %3664, i32 0, i32 5
  %3666 = getelementptr inbounds %struct.Reg, %struct.Reg* %3665, i32 0, i32 0
  %RCX.i1894 = bitcast %union.anon* %3666 to i64*
  %3667 = load i64, i64* %RCX.i1894
  %3668 = load i64, i64* %RAX.i1893
  %3669 = add i64 %3668, 4
  %3670 = load i64, i64* %PC.i1892
  %3671 = add i64 %3670, 3
  store i64 %3671, i64* %PC.i1892
  %3672 = trunc i64 %3667 to i32
  %3673 = inttoptr i64 %3669 to i32*
  %3674 = load i32, i32* %3673
  %3675 = sub i32 %3672, %3674
  %3676 = zext i32 %3675 to i64
  store i64 %3676, i64* %RCX.i1894, align 8
  %3677 = icmp ult i32 %3672, %3674
  %3678 = zext i1 %3677 to i8
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3678, i8* %3679, align 1
  %3680 = and i32 %3675, 255
  %3681 = call i32 @llvm.ctpop.i32(i32 %3680)
  %3682 = trunc i32 %3681 to i8
  %3683 = and i8 %3682, 1
  %3684 = xor i8 %3683, 1
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3684, i8* %3685, align 1
  %3686 = xor i32 %3674, %3672
  %3687 = xor i32 %3686, %3675
  %3688 = lshr i32 %3687, 4
  %3689 = trunc i32 %3688 to i8
  %3690 = and i8 %3689, 1
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3690, i8* %3691, align 1
  %3692 = icmp eq i32 %3675, 0
  %3693 = zext i1 %3692 to i8
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3693, i8* %3694, align 1
  %3695 = lshr i32 %3675, 31
  %3696 = trunc i32 %3695 to i8
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3696, i8* %3697, align 1
  %3698 = lshr i32 %3672, 31
  %3699 = lshr i32 %3674, 31
  %3700 = xor i32 %3699, %3698
  %3701 = xor i32 %3695, %3698
  %3702 = add i32 %3701, %3700
  %3703 = icmp eq i32 %3702, 2
  %3704 = zext i1 %3703 to i8
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3704, i8* %3705, align 1
  store %struct.Memory* %loadMem_4b0945, %struct.Memory** %MEMORY
  %loadMem_4b0948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 33
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %PC.i1890 = bitcast %union.anon* %3708 to i64*
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 5
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %ECX.i1891 = bitcast %union.anon* %3711 to i32*
  %3712 = load i32, i32* %ECX.i1891
  %3713 = zext i32 %3712 to i64
  %3714 = load i64, i64* %PC.i1890
  %3715 = add i64 %3714, 3
  store i64 %3715, i64* %PC.i1890
  %3716 = sub i32 %3712, 127
  %3717 = icmp ult i32 %3712, 127
  %3718 = zext i1 %3717 to i8
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3718, i8* %3719, align 1
  %3720 = and i32 %3716, 255
  %3721 = call i32 @llvm.ctpop.i32(i32 %3720)
  %3722 = trunc i32 %3721 to i8
  %3723 = and i8 %3722, 1
  %3724 = xor i8 %3723, 1
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3724, i8* %3725, align 1
  %3726 = xor i64 127, %3713
  %3727 = trunc i64 %3726 to i32
  %3728 = xor i32 %3727, %3716
  %3729 = lshr i32 %3728, 4
  %3730 = trunc i32 %3729 to i8
  %3731 = and i8 %3730, 1
  %3732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3731, i8* %3732, align 1
  %3733 = icmp eq i32 %3716, 0
  %3734 = zext i1 %3733 to i8
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3734, i8* %3735, align 1
  %3736 = lshr i32 %3716, 31
  %3737 = trunc i32 %3736 to i8
  %3738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3737, i8* %3738, align 1
  %3739 = lshr i32 %3712, 31
  %3740 = xor i32 %3736, %3739
  %3741 = add i32 %3740, %3739
  %3742 = icmp eq i32 %3741, 2
  %3743 = zext i1 %3742 to i8
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3743, i8* %3744, align 1
  store %struct.Memory* %loadMem_4b0948, %struct.Memory** %MEMORY
  %loadMem_4b094b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3746 = getelementptr inbounds %struct.GPR, %struct.GPR* %3745, i32 0, i32 33
  %3747 = getelementptr inbounds %struct.Reg, %struct.Reg* %3746, i32 0, i32 0
  %PC.i1889 = bitcast %union.anon* %3747 to i64*
  %3748 = load i64, i64* %PC.i1889
  %3749 = add i64 %3748, 22
  %3750 = load i64, i64* %PC.i1889
  %3751 = add i64 %3750, 6
  %3752 = load i64, i64* %PC.i1889
  %3753 = add i64 %3752, 6
  store i64 %3753, i64* %PC.i1889
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3755 = load i8, i8* %3754, align 1
  %3756 = icmp ne i8 %3755, 0
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3758 = load i8, i8* %3757, align 1
  %3759 = icmp ne i8 %3758, 0
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3761 = load i8, i8* %3760, align 1
  %3762 = icmp ne i8 %3761, 0
  %3763 = xor i1 %3759, %3762
  %3764 = or i1 %3756, %3763
  %3765 = zext i1 %3764 to i8
  store i8 %3765, i8* %BRANCH_TAKEN, align 1
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3767 = select i1 %3764, i64 %3749, i64 %3751
  store i64 %3767, i64* %3766, align 8
  store %struct.Memory* %loadMem_4b094b, %struct.Memory** %MEMORY
  %loadBr_4b094b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b094b = icmp eq i8 %loadBr_4b094b, 1
  br i1 %cmpBr_4b094b, label %block_.L_4b0961, label %block_4b0951

block_4b0951:                                     ; preds = %block_.L_4b092a
  %loadMem_4b0951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3769 = getelementptr inbounds %struct.GPR, %struct.GPR* %3768, i32 0, i32 33
  %3770 = getelementptr inbounds %struct.Reg, %struct.Reg* %3769, i32 0, i32 0
  %PC.i1887 = bitcast %union.anon* %3770 to i64*
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 1
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %RAX.i1888 = bitcast %union.anon* %3773 to i64*
  %3774 = load i64, i64* %PC.i1887
  %3775 = add i64 %3774, 5
  store i64 %3775, i64* %PC.i1887
  store i64 127, i64* %RAX.i1888, align 8
  store %struct.Memory* %loadMem_4b0951, %struct.Memory** %MEMORY
  %loadMem_4b0956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3777 = getelementptr inbounds %struct.GPR, %struct.GPR* %3776, i32 0, i32 33
  %3778 = getelementptr inbounds %struct.Reg, %struct.Reg* %3777, i32 0, i32 0
  %PC.i1884 = bitcast %union.anon* %3778 to i64*
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3780 = getelementptr inbounds %struct.GPR, %struct.GPR* %3779, i32 0, i32 1
  %3781 = getelementptr inbounds %struct.Reg, %struct.Reg* %3780, i32 0, i32 0
  %EAX.i1885 = bitcast %union.anon* %3781 to i32*
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3783 = getelementptr inbounds %struct.GPR, %struct.GPR* %3782, i32 0, i32 15
  %3784 = getelementptr inbounds %struct.Reg, %struct.Reg* %3783, i32 0, i32 0
  %RBP.i1886 = bitcast %union.anon* %3784 to i64*
  %3785 = load i64, i64* %RBP.i1886
  %3786 = sub i64 %3785, 35444
  %3787 = load i32, i32* %EAX.i1885
  %3788 = zext i32 %3787 to i64
  %3789 = load i64, i64* %PC.i1884
  %3790 = add i64 %3789, 6
  store i64 %3790, i64* %PC.i1884
  %3791 = inttoptr i64 %3786 to i32*
  store i32 %3787, i32* %3791
  store %struct.Memory* %loadMem_4b0956, %struct.Memory** %MEMORY
  %loadMem_4b095c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3793 = getelementptr inbounds %struct.GPR, %struct.GPR* %3792, i32 0, i32 33
  %3794 = getelementptr inbounds %struct.Reg, %struct.Reg* %3793, i32 0, i32 0
  %PC.i1883 = bitcast %union.anon* %3794 to i64*
  %3795 = load i64, i64* %PC.i1883
  %3796 = add i64 %3795, 41
  %3797 = load i64, i64* %PC.i1883
  %3798 = add i64 %3797, 5
  store i64 %3798, i64* %PC.i1883
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3796, i64* %3799, align 8
  store %struct.Memory* %loadMem_4b095c, %struct.Memory** %MEMORY
  br label %block_.L_4b0985

block_.L_4b0961:                                  ; preds = %block_.L_4b092a
  %loadMem_4b0961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 33
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %PC.i1881 = bitcast %union.anon* %3802 to i64*
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3804 = getelementptr inbounds %struct.GPR, %struct.GPR* %3803, i32 0, i32 1
  %3805 = getelementptr inbounds %struct.Reg, %struct.Reg* %3804, i32 0, i32 0
  %RAX.i1882 = bitcast %union.anon* %3805 to i64*
  %3806 = load i64, i64* %PC.i1881
  %3807 = add i64 %3806, 8
  store i64 %3807, i64* %PC.i1881
  %3808 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %3808, i64* %RAX.i1882, align 8
  store %struct.Memory* %loadMem_4b0961, %struct.Memory** %MEMORY
  %loadMem_4b0969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3810 = getelementptr inbounds %struct.GPR, %struct.GPR* %3809, i32 0, i32 33
  %3811 = getelementptr inbounds %struct.Reg, %struct.Reg* %3810, i32 0, i32 0
  %PC.i1878 = bitcast %union.anon* %3811 to i64*
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 1
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %RAX.i1879 = bitcast %union.anon* %3814 to i64*
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3816 = getelementptr inbounds %struct.GPR, %struct.GPR* %3815, i32 0, i32 5
  %3817 = getelementptr inbounds %struct.Reg, %struct.Reg* %3816, i32 0, i32 0
  %RCX.i1880 = bitcast %union.anon* %3817 to i64*
  %3818 = load i64, i64* %RAX.i1879
  %3819 = add i64 %3818, 4
  %3820 = load i64, i64* %PC.i1878
  %3821 = add i64 %3820, 3
  store i64 %3821, i64* %PC.i1878
  %3822 = inttoptr i64 %3819 to i32*
  %3823 = load i32, i32* %3822
  %3824 = zext i32 %3823 to i64
  store i64 %3824, i64* %RCX.i1880, align 8
  store %struct.Memory* %loadMem_4b0969, %struct.Memory** %MEMORY
  %loadMem_4b096c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3826 = getelementptr inbounds %struct.GPR, %struct.GPR* %3825, i32 0, i32 33
  %3827 = getelementptr inbounds %struct.Reg, %struct.Reg* %3826, i32 0, i32 0
  %PC.i1876 = bitcast %union.anon* %3827 to i64*
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3829 = getelementptr inbounds %struct.GPR, %struct.GPR* %3828, i32 0, i32 1
  %3830 = getelementptr inbounds %struct.Reg, %struct.Reg* %3829, i32 0, i32 0
  %RAX.i1877 = bitcast %union.anon* %3830 to i64*
  %3831 = load i64, i64* %PC.i1876
  %3832 = add i64 %3831, 8
  store i64 %3832, i64* %PC.i1876
  %3833 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %3833, i64* %RAX.i1877, align 8
  store %struct.Memory* %loadMem_4b096c, %struct.Memory** %MEMORY
  %loadMem_4b0974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3835 = getelementptr inbounds %struct.GPR, %struct.GPR* %3834, i32 0, i32 33
  %3836 = getelementptr inbounds %struct.Reg, %struct.Reg* %3835, i32 0, i32 0
  %PC.i1873 = bitcast %union.anon* %3836 to i64*
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3838 = getelementptr inbounds %struct.GPR, %struct.GPR* %3837, i32 0, i32 7
  %3839 = getelementptr inbounds %struct.Reg, %struct.Reg* %3838, i32 0, i32 0
  %RDX.i1874 = bitcast %union.anon* %3839 to i64*
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3841 = getelementptr inbounds %struct.GPR, %struct.GPR* %3840, i32 0, i32 15
  %3842 = getelementptr inbounds %struct.Reg, %struct.Reg* %3841, i32 0, i32 0
  %RBP.i1875 = bitcast %union.anon* %3842 to i64*
  %3843 = load i64, i64* %RBP.i1875
  %3844 = sub i64 %3843, 8
  %3845 = load i64, i64* %PC.i1873
  %3846 = add i64 %3845, 4
  store i64 %3846, i64* %PC.i1873
  %3847 = inttoptr i64 %3844 to i32*
  %3848 = load i32, i32* %3847
  %3849 = sext i32 %3848 to i64
  store i64 %3849, i64* %RDX.i1874, align 8
  store %struct.Memory* %loadMem_4b0974, %struct.Memory** %MEMORY
  %loadMem_4b0978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3851 = getelementptr inbounds %struct.GPR, %struct.GPR* %3850, i32 0, i32 33
  %3852 = getelementptr inbounds %struct.Reg, %struct.Reg* %3851, i32 0, i32 0
  %PC.i1870 = bitcast %union.anon* %3852 to i64*
  %3853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3854 = getelementptr inbounds %struct.GPR, %struct.GPR* %3853, i32 0, i32 1
  %3855 = getelementptr inbounds %struct.Reg, %struct.Reg* %3854, i32 0, i32 0
  %RAX.i1871 = bitcast %union.anon* %3855 to i64*
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3857 = getelementptr inbounds %struct.GPR, %struct.GPR* %3856, i32 0, i32 7
  %3858 = getelementptr inbounds %struct.Reg, %struct.Reg* %3857, i32 0, i32 0
  %RDX.i1872 = bitcast %union.anon* %3858 to i64*
  %3859 = load i64, i64* %RAX.i1871
  %3860 = load i64, i64* %RDX.i1872
  %3861 = mul i64 %3860, 8
  %3862 = add i64 %3861, %3859
  %3863 = load i64, i64* %PC.i1870
  %3864 = add i64 %3863, 4
  store i64 %3864, i64* %PC.i1870
  %3865 = inttoptr i64 %3862 to i64*
  %3866 = load i64, i64* %3865
  store i64 %3866, i64* %RAX.i1871, align 8
  store %struct.Memory* %loadMem_4b0978, %struct.Memory** %MEMORY
  %loadMem_4b097c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3868 = getelementptr inbounds %struct.GPR, %struct.GPR* %3867, i32 0, i32 33
  %3869 = getelementptr inbounds %struct.Reg, %struct.Reg* %3868, i32 0, i32 0
  %PC.i1867 = bitcast %union.anon* %3869 to i64*
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3871 = getelementptr inbounds %struct.GPR, %struct.GPR* %3870, i32 0, i32 1
  %3872 = getelementptr inbounds %struct.Reg, %struct.Reg* %3871, i32 0, i32 0
  %RAX.i1868 = bitcast %union.anon* %3872 to i64*
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 5
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %RCX.i1869 = bitcast %union.anon* %3875 to i64*
  %3876 = load i64, i64* %RCX.i1869
  %3877 = load i64, i64* %RAX.i1868
  %3878 = add i64 %3877, 4
  %3879 = load i64, i64* %PC.i1867
  %3880 = add i64 %3879, 3
  store i64 %3880, i64* %PC.i1867
  %3881 = trunc i64 %3876 to i32
  %3882 = inttoptr i64 %3878 to i32*
  %3883 = load i32, i32* %3882
  %3884 = sub i32 %3881, %3883
  %3885 = zext i32 %3884 to i64
  store i64 %3885, i64* %RCX.i1869, align 8
  %3886 = icmp ult i32 %3881, %3883
  %3887 = zext i1 %3886 to i8
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3887, i8* %3888, align 1
  %3889 = and i32 %3884, 255
  %3890 = call i32 @llvm.ctpop.i32(i32 %3889)
  %3891 = trunc i32 %3890 to i8
  %3892 = and i8 %3891, 1
  %3893 = xor i8 %3892, 1
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3893, i8* %3894, align 1
  %3895 = xor i32 %3883, %3881
  %3896 = xor i32 %3895, %3884
  %3897 = lshr i32 %3896, 4
  %3898 = trunc i32 %3897 to i8
  %3899 = and i8 %3898, 1
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3899, i8* %3900, align 1
  %3901 = icmp eq i32 %3884, 0
  %3902 = zext i1 %3901 to i8
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3902, i8* %3903, align 1
  %3904 = lshr i32 %3884, 31
  %3905 = trunc i32 %3904 to i8
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3905, i8* %3906, align 1
  %3907 = lshr i32 %3881, 31
  %3908 = lshr i32 %3883, 31
  %3909 = xor i32 %3908, %3907
  %3910 = xor i32 %3904, %3907
  %3911 = add i32 %3910, %3909
  %3912 = icmp eq i32 %3911, 2
  %3913 = zext i1 %3912 to i8
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3913, i8* %3914, align 1
  store %struct.Memory* %loadMem_4b097c, %struct.Memory** %MEMORY
  %loadMem_4b097f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 33
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %PC.i1864 = bitcast %union.anon* %3917 to i64*
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 5
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %ECX.i1865 = bitcast %union.anon* %3920 to i32*
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 15
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %RBP.i1866 = bitcast %union.anon* %3923 to i64*
  %3924 = load i64, i64* %RBP.i1866
  %3925 = sub i64 %3924, 35444
  %3926 = load i32, i32* %ECX.i1865
  %3927 = zext i32 %3926 to i64
  %3928 = load i64, i64* %PC.i1864
  %3929 = add i64 %3928, 6
  store i64 %3929, i64* %PC.i1864
  %3930 = inttoptr i64 %3925 to i32*
  store i32 %3926, i32* %3930
  store %struct.Memory* %loadMem_4b097f, %struct.Memory** %MEMORY
  br label %block_.L_4b0985

block_.L_4b0985:                                  ; preds = %block_.L_4b0961, %block_4b0951
  %loadMem_4b0985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3932 = getelementptr inbounds %struct.GPR, %struct.GPR* %3931, i32 0, i32 33
  %3933 = getelementptr inbounds %struct.Reg, %struct.Reg* %3932, i32 0, i32 0
  %PC.i1861 = bitcast %union.anon* %3933 to i64*
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3935 = getelementptr inbounds %struct.GPR, %struct.GPR* %3934, i32 0, i32 1
  %3936 = getelementptr inbounds %struct.Reg, %struct.Reg* %3935, i32 0, i32 0
  %RAX.i1862 = bitcast %union.anon* %3936 to i64*
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3938 = getelementptr inbounds %struct.GPR, %struct.GPR* %3937, i32 0, i32 15
  %3939 = getelementptr inbounds %struct.Reg, %struct.Reg* %3938, i32 0, i32 0
  %RBP.i1863 = bitcast %union.anon* %3939 to i64*
  %3940 = load i64, i64* %RBP.i1863
  %3941 = sub i64 %3940, 35444
  %3942 = load i64, i64* %PC.i1861
  %3943 = add i64 %3942, 6
  store i64 %3943, i64* %PC.i1861
  %3944 = inttoptr i64 %3941 to i32*
  %3945 = load i32, i32* %3944
  %3946 = zext i32 %3945 to i64
  store i64 %3946, i64* %RAX.i1862, align 8
  store %struct.Memory* %loadMem_4b0985, %struct.Memory** %MEMORY
  %loadMem_4b098b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3948 = getelementptr inbounds %struct.GPR, %struct.GPR* %3947, i32 0, i32 33
  %3949 = getelementptr inbounds %struct.Reg, %struct.Reg* %3948, i32 0, i32 0
  %PC.i1858 = bitcast %union.anon* %3949 to i64*
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3951 = getelementptr inbounds %struct.GPR, %struct.GPR* %3950, i32 0, i32 1
  %3952 = getelementptr inbounds %struct.Reg, %struct.Reg* %3951, i32 0, i32 0
  %EAX.i1859 = bitcast %union.anon* %3952 to i32*
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3954 = getelementptr inbounds %struct.GPR, %struct.GPR* %3953, i32 0, i32 15
  %3955 = getelementptr inbounds %struct.Reg, %struct.Reg* %3954, i32 0, i32 0
  %RBP.i1860 = bitcast %union.anon* %3955 to i64*
  %3956 = load i64, i64* %RBP.i1860
  %3957 = sub i64 %3956, 35440
  %3958 = load i32, i32* %EAX.i1859
  %3959 = zext i32 %3958 to i64
  %3960 = load i64, i64* %PC.i1858
  %3961 = add i64 %3960, 6
  store i64 %3961, i64* %PC.i1858
  %3962 = inttoptr i64 %3957 to i32*
  store i32 %3958, i32* %3962
  store %struct.Memory* %loadMem_4b098b, %struct.Memory** %MEMORY
  br label %block_.L_4b0991

block_.L_4b0991:                                  ; preds = %block_.L_4b0985, %block_4b091a
  %loadMem_4b0991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3964 = getelementptr inbounds %struct.GPR, %struct.GPR* %3963, i32 0, i32 33
  %3965 = getelementptr inbounds %struct.Reg, %struct.Reg* %3964, i32 0, i32 0
  %PC.i1855 = bitcast %union.anon* %3965 to i64*
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3967 = getelementptr inbounds %struct.GPR, %struct.GPR* %3966, i32 0, i32 1
  %3968 = getelementptr inbounds %struct.Reg, %struct.Reg* %3967, i32 0, i32 0
  %RAX.i1856 = bitcast %union.anon* %3968 to i64*
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3970 = getelementptr inbounds %struct.GPR, %struct.GPR* %3969, i32 0, i32 15
  %3971 = getelementptr inbounds %struct.Reg, %struct.Reg* %3970, i32 0, i32 0
  %RBP.i1857 = bitcast %union.anon* %3971 to i64*
  %3972 = load i64, i64* %RBP.i1857
  %3973 = sub i64 %3972, 35440
  %3974 = load i64, i64* %PC.i1855
  %3975 = add i64 %3974, 6
  store i64 %3975, i64* %PC.i1855
  %3976 = inttoptr i64 %3973 to i32*
  %3977 = load i32, i32* %3976
  %3978 = zext i32 %3977 to i64
  store i64 %3978, i64* %RAX.i1856, align 8
  store %struct.Memory* %loadMem_4b0991, %struct.Memory** %MEMORY
  %loadMem_4b0997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3980 = getelementptr inbounds %struct.GPR, %struct.GPR* %3979, i32 0, i32 33
  %3981 = getelementptr inbounds %struct.Reg, %struct.Reg* %3980, i32 0, i32 0
  %PC.i1852 = bitcast %union.anon* %3981 to i64*
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3983 = getelementptr inbounds %struct.GPR, %struct.GPR* %3982, i32 0, i32 1
  %3984 = getelementptr inbounds %struct.Reg, %struct.Reg* %3983, i32 0, i32 0
  %EAX.i1853 = bitcast %union.anon* %3984 to i32*
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 15
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %RBP.i1854 = bitcast %union.anon* %3987 to i64*
  %3988 = load i64, i64* %RBP.i1854
  %3989 = sub i64 %3988, 35416
  %3990 = load i32, i32* %EAX.i1853
  %3991 = zext i32 %3990 to i64
  %3992 = load i64, i64* %PC.i1852
  %3993 = add i64 %3992, 6
  store i64 %3993, i64* %PC.i1852
  %3994 = inttoptr i64 %3989 to i32*
  store i32 %3990, i32* %3994
  store %struct.Memory* %loadMem_4b0997, %struct.Memory** %MEMORY
  %loadMem_4b099d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3996 = getelementptr inbounds %struct.GPR, %struct.GPR* %3995, i32 0, i32 33
  %3997 = getelementptr inbounds %struct.Reg, %struct.Reg* %3996, i32 0, i32 0
  %PC.i1850 = bitcast %union.anon* %3997 to i64*
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3999 = getelementptr inbounds %struct.GPR, %struct.GPR* %3998, i32 0, i32 15
  %4000 = getelementptr inbounds %struct.Reg, %struct.Reg* %3999, i32 0, i32 0
  %RBP.i1851 = bitcast %union.anon* %4000 to i64*
  %4001 = load i64, i64* %RBP.i1851
  %4002 = sub i64 %4001, 40
  %4003 = load i64, i64* %PC.i1850
  %4004 = add i64 %4003, 7
  store i64 %4004, i64* %PC.i1850
  %4005 = inttoptr i64 %4002 to i32*
  store i32 0, i32* %4005
  store %struct.Memory* %loadMem_4b099d, %struct.Memory** %MEMORY
  br label %block_.L_4b09a4

block_.L_4b09a4:                                  ; preds = %block_.L_4b0ca6, %block_.L_4b0991
  %loadMem_4b09a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4007 = getelementptr inbounds %struct.GPR, %struct.GPR* %4006, i32 0, i32 33
  %4008 = getelementptr inbounds %struct.Reg, %struct.Reg* %4007, i32 0, i32 0
  %PC.i1848 = bitcast %union.anon* %4008 to i64*
  %4009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4010 = getelementptr inbounds %struct.GPR, %struct.GPR* %4009, i32 0, i32 15
  %4011 = getelementptr inbounds %struct.Reg, %struct.Reg* %4010, i32 0, i32 0
  %RBP.i1849 = bitcast %union.anon* %4011 to i64*
  %4012 = load i64, i64* %RBP.i1849
  %4013 = sub i64 %4012, 40
  %4014 = load i64, i64* %PC.i1848
  %4015 = add i64 %4014, 4
  store i64 %4015, i64* %PC.i1848
  %4016 = inttoptr i64 %4013 to i32*
  %4017 = load i32, i32* %4016
  %4018 = sub i32 %4017, 3
  %4019 = icmp ult i32 %4017, 3
  %4020 = zext i1 %4019 to i8
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4020, i8* %4021, align 1
  %4022 = and i32 %4018, 255
  %4023 = call i32 @llvm.ctpop.i32(i32 %4022)
  %4024 = trunc i32 %4023 to i8
  %4025 = and i8 %4024, 1
  %4026 = xor i8 %4025, 1
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4026, i8* %4027, align 1
  %4028 = xor i32 %4017, 3
  %4029 = xor i32 %4028, %4018
  %4030 = lshr i32 %4029, 4
  %4031 = trunc i32 %4030 to i8
  %4032 = and i8 %4031, 1
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4032, i8* %4033, align 1
  %4034 = icmp eq i32 %4018, 0
  %4035 = zext i1 %4034 to i8
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4035, i8* %4036, align 1
  %4037 = lshr i32 %4018, 31
  %4038 = trunc i32 %4037 to i8
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4038, i8* %4039, align 1
  %4040 = lshr i32 %4017, 31
  %4041 = xor i32 %4037, %4040
  %4042 = add i32 %4041, %4040
  %4043 = icmp eq i32 %4042, 2
  %4044 = zext i1 %4043 to i8
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4044, i8* %4045, align 1
  store %struct.Memory* %loadMem_4b09a4, %struct.Memory** %MEMORY
  %loadMem_4b09a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4047 = getelementptr inbounds %struct.GPR, %struct.GPR* %4046, i32 0, i32 33
  %4048 = getelementptr inbounds %struct.Reg, %struct.Reg* %4047, i32 0, i32 0
  %PC.i1847 = bitcast %union.anon* %4048 to i64*
  %4049 = load i64, i64* %PC.i1847
  %4050 = add i64 %4049, 780
  %4051 = load i64, i64* %PC.i1847
  %4052 = add i64 %4051, 6
  %4053 = load i64, i64* %PC.i1847
  %4054 = add i64 %4053, 6
  store i64 %4054, i64* %PC.i1847
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4056 = load i8, i8* %4055, align 1
  %4057 = icmp ne i8 %4056, 0
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4059 = load i8, i8* %4058, align 1
  %4060 = icmp ne i8 %4059, 0
  %4061 = xor i1 %4057, %4060
  %4062 = xor i1 %4061, true
  %4063 = zext i1 %4062 to i8
  store i8 %4063, i8* %BRANCH_TAKEN, align 1
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4065 = select i1 %4061, i64 %4052, i64 %4050
  store i64 %4065, i64* %4064, align 8
  store %struct.Memory* %loadMem_4b09a8, %struct.Memory** %MEMORY
  %loadBr_4b09a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b09a8 = icmp eq i8 %loadBr_4b09a8, 1
  br i1 %cmpBr_4b09a8, label %block_.L_4b0cb4, label %block_4b09ae

block_4b09ae:                                     ; preds = %block_.L_4b09a4
  %loadMem_4b09ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4067 = getelementptr inbounds %struct.GPR, %struct.GPR* %4066, i32 0, i32 33
  %4068 = getelementptr inbounds %struct.Reg, %struct.Reg* %4067, i32 0, i32 0
  %PC.i1845 = bitcast %union.anon* %4068 to i64*
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4070 = getelementptr inbounds %struct.GPR, %struct.GPR* %4069, i32 0, i32 15
  %4071 = getelementptr inbounds %struct.Reg, %struct.Reg* %4070, i32 0, i32 0
  %RBP.i1846 = bitcast %union.anon* %4071 to i64*
  %4072 = load i64, i64* %RBP.i1846
  %4073 = sub i64 %4072, 35412
  %4074 = load i64, i64* %PC.i1845
  %4075 = add i64 %4074, 7
  store i64 %4075, i64* %PC.i1845
  %4076 = inttoptr i64 %4073 to i32*
  %4077 = load i32, i32* %4076
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4078, align 1
  %4079 = and i32 %4077, 255
  %4080 = call i32 @llvm.ctpop.i32(i32 %4079)
  %4081 = trunc i32 %4080 to i8
  %4082 = and i8 %4081, 1
  %4083 = xor i8 %4082, 1
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4083, i8* %4084, align 1
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4085, align 1
  %4086 = icmp eq i32 %4077, 0
  %4087 = zext i1 %4086 to i8
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4087, i8* %4088, align 1
  %4089 = lshr i32 %4077, 31
  %4090 = trunc i32 %4089 to i8
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4090, i8* %4091, align 1
  %4092 = lshr i32 %4077, 31
  %4093 = xor i32 %4089, %4092
  %4094 = add i32 %4093, %4092
  %4095 = icmp eq i32 %4094, 2
  %4096 = zext i1 %4095 to i8
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4096, i8* %4097, align 1
  store %struct.Memory* %loadMem_4b09ae, %struct.Memory** %MEMORY
  %loadMem_4b09b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4099 = getelementptr inbounds %struct.GPR, %struct.GPR* %4098, i32 0, i32 33
  %4100 = getelementptr inbounds %struct.Reg, %struct.Reg* %4099, i32 0, i32 0
  %PC.i1844 = bitcast %union.anon* %4100 to i64*
  %4101 = load i64, i64* %PC.i1844
  %4102 = add i64 %4101, 189
  %4103 = load i64, i64* %PC.i1844
  %4104 = add i64 %4103, 6
  %4105 = load i64, i64* %PC.i1844
  %4106 = add i64 %4105, 6
  store i64 %4106, i64* %PC.i1844
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4108 = load i8, i8* %4107, align 1
  %4109 = icmp eq i8 %4108, 0
  %4110 = zext i1 %4109 to i8
  store i8 %4110, i8* %BRANCH_TAKEN, align 1
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4112 = select i1 %4109, i64 %4102, i64 %4104
  store i64 %4112, i64* %4111, align 8
  store %struct.Memory* %loadMem_4b09b5, %struct.Memory** %MEMORY
  %loadBr_4b09b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b09b5 = icmp eq i8 %loadBr_4b09b5, 1
  br i1 %cmpBr_4b09b5, label %block_.L_4b0a72, label %block_4b09bb

block_4b09bb:                                     ; preds = %block_4b09ae
  %loadMem_4b09bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4114 = getelementptr inbounds %struct.GPR, %struct.GPR* %4113, i32 0, i32 33
  %4115 = getelementptr inbounds %struct.Reg, %struct.Reg* %4114, i32 0, i32 0
  %PC.i1841 = bitcast %union.anon* %4115 to i64*
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4117 = getelementptr inbounds %struct.GPR, %struct.GPR* %4116, i32 0, i32 1
  %4118 = getelementptr inbounds %struct.Reg, %struct.Reg* %4117, i32 0, i32 0
  %RAX.i1842 = bitcast %union.anon* %4118 to i64*
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 15
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %RBP.i1843 = bitcast %union.anon* %4121 to i64*
  %4122 = load i64, i64* %RBP.i1843
  %4123 = sub i64 %4122, 35392
  %4124 = load i64, i64* %PC.i1841
  %4125 = add i64 %4124, 7
  store i64 %4125, i64* %PC.i1841
  store i64 %4123, i64* %RAX.i1842, align 8
  store %struct.Memory* %loadMem_4b09bb, %struct.Memory** %MEMORY
  %loadMem_4b09c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 33
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %PC.i1838 = bitcast %union.anon* %4128 to i64*
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4130 = getelementptr inbounds %struct.GPR, %struct.GPR* %4129, i32 0, i32 5
  %4131 = getelementptr inbounds %struct.Reg, %struct.Reg* %4130, i32 0, i32 0
  %RCX.i1839 = bitcast %union.anon* %4131 to i64*
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 15
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %RBP.i1840 = bitcast %union.anon* %4134 to i64*
  %4135 = load i64, i64* %RBP.i1840
  %4136 = sub i64 %4135, 19184
  %4137 = load i64, i64* %PC.i1838
  %4138 = add i64 %4137, 7
  store i64 %4138, i64* %PC.i1838
  store i64 %4136, i64* %RCX.i1839, align 8
  store %struct.Memory* %loadMem_4b09c2, %struct.Memory** %MEMORY
  %loadMem_4b09c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4140 = getelementptr inbounds %struct.GPR, %struct.GPR* %4139, i32 0, i32 33
  %4141 = getelementptr inbounds %struct.Reg, %struct.Reg* %4140, i32 0, i32 0
  %PC.i1835 = bitcast %union.anon* %4141 to i64*
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4143 = getelementptr inbounds %struct.GPR, %struct.GPR* %4142, i32 0, i32 5
  %4144 = getelementptr inbounds %struct.Reg, %struct.Reg* %4143, i32 0, i32 0
  %RCX.i1836 = bitcast %union.anon* %4144 to i64*
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4146 = getelementptr inbounds %struct.GPR, %struct.GPR* %4145, i32 0, i32 7
  %4147 = getelementptr inbounds %struct.Reg, %struct.Reg* %4146, i32 0, i32 0
  %RDX.i1837 = bitcast %union.anon* %4147 to i64*
  %4148 = load i64, i64* %RCX.i1836
  %4149 = load i64, i64* %PC.i1835
  %4150 = add i64 %4149, 3
  store i64 %4150, i64* %PC.i1835
  store i64 %4148, i64* %RDX.i1837, align 8
  store %struct.Memory* %loadMem_4b09c9, %struct.Memory** %MEMORY
  %loadMem_4b09cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 33
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %PC.i1833 = bitcast %union.anon* %4153 to i64*
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4155 = getelementptr inbounds %struct.GPR, %struct.GPR* %4154, i32 0, i32 7
  %4156 = getelementptr inbounds %struct.Reg, %struct.Reg* %4155, i32 0, i32 0
  %RDX.i1834 = bitcast %union.anon* %4156 to i64*
  %4157 = load i64, i64* %RDX.i1834
  %4158 = load i64, i64* %PC.i1833
  %4159 = add i64 %4158, 7
  store i64 %4159, i64* %PC.i1833
  %4160 = add i64 2700, %4157
  store i64 %4160, i64* %RDX.i1834, align 8
  %4161 = icmp ult i64 %4160, %4157
  %4162 = icmp ult i64 %4160, 2700
  %4163 = or i1 %4161, %4162
  %4164 = zext i1 %4163 to i8
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4164, i8* %4165, align 1
  %4166 = trunc i64 %4160 to i32
  %4167 = and i32 %4166, 255
  %4168 = call i32 @llvm.ctpop.i32(i32 %4167)
  %4169 = trunc i32 %4168 to i8
  %4170 = and i8 %4169, 1
  %4171 = xor i8 %4170, 1
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4171, i8* %4172, align 1
  %4173 = xor i64 2700, %4157
  %4174 = xor i64 %4173, %4160
  %4175 = lshr i64 %4174, 4
  %4176 = trunc i64 %4175 to i8
  %4177 = and i8 %4176, 1
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4177, i8* %4178, align 1
  %4179 = icmp eq i64 %4160, 0
  %4180 = zext i1 %4179 to i8
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4180, i8* %4181, align 1
  %4182 = lshr i64 %4160, 63
  %4183 = trunc i64 %4182 to i8
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4183, i8* %4184, align 1
  %4185 = lshr i64 %4157, 63
  %4186 = xor i64 %4182, %4185
  %4187 = add i64 %4186, %4182
  %4188 = icmp eq i64 %4187, 2
  %4189 = zext i1 %4188 to i8
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4189, i8* %4190, align 1
  store %struct.Memory* %loadMem_4b09cc, %struct.Memory** %MEMORY
  %loadMem_4b09d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4192 = getelementptr inbounds %struct.GPR, %struct.GPR* %4191, i32 0, i32 33
  %4193 = getelementptr inbounds %struct.Reg, %struct.Reg* %4192, i32 0, i32 0
  %PC.i1830 = bitcast %union.anon* %4193 to i64*
  %4194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4195 = getelementptr inbounds %struct.GPR, %struct.GPR* %4194, i32 0, i32 9
  %4196 = getelementptr inbounds %struct.Reg, %struct.Reg* %4195, i32 0, i32 0
  %RSI.i1831 = bitcast %union.anon* %4196 to i64*
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4198 = getelementptr inbounds %struct.GPR, %struct.GPR* %4197, i32 0, i32 15
  %4199 = getelementptr inbounds %struct.Reg, %struct.Reg* %4198, i32 0, i32 0
  %RBP.i1832 = bitcast %union.anon* %4199 to i64*
  %4200 = load i64, i64* %RBP.i1832
  %4201 = sub i64 %4200, 8
  %4202 = load i64, i64* %PC.i1830
  %4203 = add i64 %4202, 4
  store i64 %4203, i64* %PC.i1830
  %4204 = inttoptr i64 %4201 to i32*
  %4205 = load i32, i32* %4204
  %4206 = sext i32 %4205 to i64
  store i64 %4206, i64* %RSI.i1831, align 8
  store %struct.Memory* %loadMem_4b09d3, %struct.Memory** %MEMORY
  %loadMem_4b09d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4208 = getelementptr inbounds %struct.GPR, %struct.GPR* %4207, i32 0, i32 33
  %4209 = getelementptr inbounds %struct.Reg, %struct.Reg* %4208, i32 0, i32 0
  %PC.i1828 = bitcast %union.anon* %4209 to i64*
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4211 = getelementptr inbounds %struct.GPR, %struct.GPR* %4210, i32 0, i32 9
  %4212 = getelementptr inbounds %struct.Reg, %struct.Reg* %4211, i32 0, i32 0
  %RSI.i1829 = bitcast %union.anon* %4212 to i64*
  %4213 = load i64, i64* %RSI.i1829
  %4214 = load i64, i64* %PC.i1828
  %4215 = add i64 %4214, 7
  store i64 %4215, i64* %PC.i1828
  %4216 = sext i64 %4213 to i128
  %4217 = and i128 %4216, -18446744073709551616
  %4218 = zext i64 %4213 to i128
  %4219 = or i128 %4217, %4218
  %4220 = mul i128 180, %4219
  %4221 = trunc i128 %4220 to i64
  store i64 %4221, i64* %RSI.i1829, align 8
  %4222 = sext i64 %4221 to i128
  %4223 = icmp ne i128 %4222, %4220
  %4224 = zext i1 %4223 to i8
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4224, i8* %4225, align 1
  %4226 = trunc i128 %4220 to i32
  %4227 = and i32 %4226, 255
  %4228 = call i32 @llvm.ctpop.i32(i32 %4227)
  %4229 = trunc i32 %4228 to i8
  %4230 = and i8 %4229, 1
  %4231 = xor i8 %4230, 1
  %4232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4231, i8* %4232, align 1
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4233, align 1
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4234, align 1
  %4235 = lshr i64 %4221, 63
  %4236 = trunc i64 %4235 to i8
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4236, i8* %4237, align 1
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4224, i8* %4238, align 1
  store %struct.Memory* %loadMem_4b09d7, %struct.Memory** %MEMORY
  %loadMem_4b09de = load %struct.Memory*, %struct.Memory** %MEMORY
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4240 = getelementptr inbounds %struct.GPR, %struct.GPR* %4239, i32 0, i32 33
  %4241 = getelementptr inbounds %struct.Reg, %struct.Reg* %4240, i32 0, i32 0
  %PC.i1825 = bitcast %union.anon* %4241 to i64*
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 7
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %RDX.i1826 = bitcast %union.anon* %4244 to i64*
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4246 = getelementptr inbounds %struct.GPR, %struct.GPR* %4245, i32 0, i32 9
  %4247 = getelementptr inbounds %struct.Reg, %struct.Reg* %4246, i32 0, i32 0
  %RSI.i1827 = bitcast %union.anon* %4247 to i64*
  %4248 = load i64, i64* %RDX.i1826
  %4249 = load i64, i64* %RSI.i1827
  %4250 = load i64, i64* %PC.i1825
  %4251 = add i64 %4250, 3
  store i64 %4251, i64* %PC.i1825
  %4252 = add i64 %4249, %4248
  store i64 %4252, i64* %RDX.i1826, align 8
  %4253 = icmp ult i64 %4252, %4248
  %4254 = icmp ult i64 %4252, %4249
  %4255 = or i1 %4253, %4254
  %4256 = zext i1 %4255 to i8
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4256, i8* %4257, align 1
  %4258 = trunc i64 %4252 to i32
  %4259 = and i32 %4258, 255
  %4260 = call i32 @llvm.ctpop.i32(i32 %4259)
  %4261 = trunc i32 %4260 to i8
  %4262 = and i8 %4261, 1
  %4263 = xor i8 %4262, 1
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4263, i8* %4264, align 1
  %4265 = xor i64 %4249, %4248
  %4266 = xor i64 %4265, %4252
  %4267 = lshr i64 %4266, 4
  %4268 = trunc i64 %4267 to i8
  %4269 = and i8 %4268, 1
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4269, i8* %4270, align 1
  %4271 = icmp eq i64 %4252, 0
  %4272 = zext i1 %4271 to i8
  %4273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4272, i8* %4273, align 1
  %4274 = lshr i64 %4252, 63
  %4275 = trunc i64 %4274 to i8
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4275, i8* %4276, align 1
  %4277 = lshr i64 %4248, 63
  %4278 = lshr i64 %4249, 63
  %4279 = xor i64 %4274, %4277
  %4280 = xor i64 %4274, %4278
  %4281 = add i64 %4279, %4280
  %4282 = icmp eq i64 %4281, 2
  %4283 = zext i1 %4282 to i8
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4283, i8* %4284, align 1
  store %struct.Memory* %loadMem_4b09de, %struct.Memory** %MEMORY
  %loadMem_4b09e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4286 = getelementptr inbounds %struct.GPR, %struct.GPR* %4285, i32 0, i32 33
  %4287 = getelementptr inbounds %struct.Reg, %struct.Reg* %4286, i32 0, i32 0
  %PC.i1822 = bitcast %union.anon* %4287 to i64*
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4289 = getelementptr inbounds %struct.GPR, %struct.GPR* %4288, i32 0, i32 9
  %4290 = getelementptr inbounds %struct.Reg, %struct.Reg* %4289, i32 0, i32 0
  %RSI.i1823 = bitcast %union.anon* %4290 to i64*
  %4291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4292 = getelementptr inbounds %struct.GPR, %struct.GPR* %4291, i32 0, i32 15
  %4293 = getelementptr inbounds %struct.Reg, %struct.Reg* %4292, i32 0, i32 0
  %RBP.i1824 = bitcast %union.anon* %4293 to i64*
  %4294 = load i64, i64* %RBP.i1824
  %4295 = sub i64 %4294, 12
  %4296 = load i64, i64* %PC.i1822
  %4297 = add i64 %4296, 4
  store i64 %4297, i64* %PC.i1822
  %4298 = inttoptr i64 %4295 to i32*
  %4299 = load i32, i32* %4298
  %4300 = sext i32 %4299 to i64
  store i64 %4300, i64* %RSI.i1823, align 8
  store %struct.Memory* %loadMem_4b09e1, %struct.Memory** %MEMORY
  %loadMem_4b09e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4302 = getelementptr inbounds %struct.GPR, %struct.GPR* %4301, i32 0, i32 33
  %4303 = getelementptr inbounds %struct.Reg, %struct.Reg* %4302, i32 0, i32 0
  %PC.i1820 = bitcast %union.anon* %4303 to i64*
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4305 = getelementptr inbounds %struct.GPR, %struct.GPR* %4304, i32 0, i32 9
  %4306 = getelementptr inbounds %struct.Reg, %struct.Reg* %4305, i32 0, i32 0
  %RSI.i1821 = bitcast %union.anon* %4306 to i64*
  %4307 = load i64, i64* %RSI.i1821
  %4308 = load i64, i64* %PC.i1820
  %4309 = add i64 %4308, 4
  store i64 %4309, i64* %PC.i1820
  %4310 = sext i64 %4307 to i128
  %4311 = and i128 %4310, -18446744073709551616
  %4312 = zext i64 %4307 to i128
  %4313 = or i128 %4311, %4312
  %4314 = mul i128 12, %4313
  %4315 = trunc i128 %4314 to i64
  store i64 %4315, i64* %RSI.i1821, align 8
  %4316 = sext i64 %4315 to i128
  %4317 = icmp ne i128 %4316, %4314
  %4318 = zext i1 %4317 to i8
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4318, i8* %4319, align 1
  %4320 = trunc i128 %4314 to i32
  %4321 = and i32 %4320, 255
  %4322 = call i32 @llvm.ctpop.i32(i32 %4321)
  %4323 = trunc i32 %4322 to i8
  %4324 = and i8 %4323, 1
  %4325 = xor i8 %4324, 1
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4325, i8* %4326, align 1
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4327, align 1
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4328, align 1
  %4329 = lshr i64 %4315, 63
  %4330 = trunc i64 %4329 to i8
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4330, i8* %4331, align 1
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4318, i8* %4332, align 1
  store %struct.Memory* %loadMem_4b09e5, %struct.Memory** %MEMORY
  %loadMem_4b09e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4334 = getelementptr inbounds %struct.GPR, %struct.GPR* %4333, i32 0, i32 33
  %4335 = getelementptr inbounds %struct.Reg, %struct.Reg* %4334, i32 0, i32 0
  %PC.i1817 = bitcast %union.anon* %4335 to i64*
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4337 = getelementptr inbounds %struct.GPR, %struct.GPR* %4336, i32 0, i32 7
  %4338 = getelementptr inbounds %struct.Reg, %struct.Reg* %4337, i32 0, i32 0
  %RDX.i1818 = bitcast %union.anon* %4338 to i64*
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4340 = getelementptr inbounds %struct.GPR, %struct.GPR* %4339, i32 0, i32 9
  %4341 = getelementptr inbounds %struct.Reg, %struct.Reg* %4340, i32 0, i32 0
  %RSI.i1819 = bitcast %union.anon* %4341 to i64*
  %4342 = load i64, i64* %RDX.i1818
  %4343 = load i64, i64* %RSI.i1819
  %4344 = load i64, i64* %PC.i1817
  %4345 = add i64 %4344, 3
  store i64 %4345, i64* %PC.i1817
  %4346 = add i64 %4343, %4342
  store i64 %4346, i64* %RDX.i1818, align 8
  %4347 = icmp ult i64 %4346, %4342
  %4348 = icmp ult i64 %4346, %4343
  %4349 = or i1 %4347, %4348
  %4350 = zext i1 %4349 to i8
  %4351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4350, i8* %4351, align 1
  %4352 = trunc i64 %4346 to i32
  %4353 = and i32 %4352, 255
  %4354 = call i32 @llvm.ctpop.i32(i32 %4353)
  %4355 = trunc i32 %4354 to i8
  %4356 = and i8 %4355, 1
  %4357 = xor i8 %4356, 1
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4357, i8* %4358, align 1
  %4359 = xor i64 %4343, %4342
  %4360 = xor i64 %4359, %4346
  %4361 = lshr i64 %4360, 4
  %4362 = trunc i64 %4361 to i8
  %4363 = and i8 %4362, 1
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4363, i8* %4364, align 1
  %4365 = icmp eq i64 %4346, 0
  %4366 = zext i1 %4365 to i8
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4366, i8* %4367, align 1
  %4368 = lshr i64 %4346, 63
  %4369 = trunc i64 %4368 to i8
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4369, i8* %4370, align 1
  %4371 = lshr i64 %4342, 63
  %4372 = lshr i64 %4343, 63
  %4373 = xor i64 %4368, %4371
  %4374 = xor i64 %4368, %4372
  %4375 = add i64 %4373, %4374
  %4376 = icmp eq i64 %4375, 2
  %4377 = zext i1 %4376 to i8
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4377, i8* %4378, align 1
  store %struct.Memory* %loadMem_4b09e9, %struct.Memory** %MEMORY
  %loadMem_4b09ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 33
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %PC.i1814 = bitcast %union.anon* %4381 to i64*
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4383 = getelementptr inbounds %struct.GPR, %struct.GPR* %4382, i32 0, i32 9
  %4384 = getelementptr inbounds %struct.Reg, %struct.Reg* %4383, i32 0, i32 0
  %RSI.i1815 = bitcast %union.anon* %4384 to i64*
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4386 = getelementptr inbounds %struct.GPR, %struct.GPR* %4385, i32 0, i32 15
  %4387 = getelementptr inbounds %struct.Reg, %struct.Reg* %4386, i32 0, i32 0
  %RBP.i1816 = bitcast %union.anon* %4387 to i64*
  %4388 = load i64, i64* %RBP.i1816
  %4389 = sub i64 %4388, 40
  %4390 = load i64, i64* %PC.i1814
  %4391 = add i64 %4390, 4
  store i64 %4391, i64* %PC.i1814
  %4392 = inttoptr i64 %4389 to i32*
  %4393 = load i32, i32* %4392
  %4394 = sext i32 %4393 to i64
  store i64 %4394, i64* %RSI.i1815, align 8
  store %struct.Memory* %loadMem_4b09ec, %struct.Memory** %MEMORY
  %loadMem_4b09f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4396 = getelementptr inbounds %struct.GPR, %struct.GPR* %4395, i32 0, i32 33
  %4397 = getelementptr inbounds %struct.Reg, %struct.Reg* %4396, i32 0, i32 0
  %PC.i1811 = bitcast %union.anon* %4397 to i64*
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 7
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %RDX.i1812 = bitcast %union.anon* %4400 to i64*
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4402 = getelementptr inbounds %struct.GPR, %struct.GPR* %4401, i32 0, i32 9
  %4403 = getelementptr inbounds %struct.Reg, %struct.Reg* %4402, i32 0, i32 0
  %RSI.i1813 = bitcast %union.anon* %4403 to i64*
  %4404 = load i64, i64* %RDX.i1812
  %4405 = load i64, i64* %RSI.i1813
  %4406 = mul i64 %4405, 4
  %4407 = add i64 %4406, %4404
  %4408 = load i64, i64* %PC.i1811
  %4409 = add i64 %4408, 7
  store i64 %4409, i64* %PC.i1811
  %4410 = inttoptr i64 %4407 to i32*
  store i32 32, i32* %4410
  store %struct.Memory* %loadMem_4b09f0, %struct.Memory** %MEMORY
  %loadMem_4b09f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4412 = getelementptr inbounds %struct.GPR, %struct.GPR* %4411, i32 0, i32 33
  %4413 = getelementptr inbounds %struct.Reg, %struct.Reg* %4412, i32 0, i32 0
  %PC.i1808 = bitcast %union.anon* %4413 to i64*
  %4414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4415 = getelementptr inbounds %struct.GPR, %struct.GPR* %4414, i32 0, i32 7
  %4416 = getelementptr inbounds %struct.Reg, %struct.Reg* %4415, i32 0, i32 0
  %RDX.i1809 = bitcast %union.anon* %4416 to i64*
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4418 = getelementptr inbounds %struct.GPR, %struct.GPR* %4417, i32 0, i32 15
  %4419 = getelementptr inbounds %struct.Reg, %struct.Reg* %4418, i32 0, i32 0
  %RBP.i1810 = bitcast %union.anon* %4419 to i64*
  %4420 = load i64, i64* %RBP.i1810
  %4421 = sub i64 %4420, 8
  %4422 = load i64, i64* %PC.i1808
  %4423 = add i64 %4422, 4
  store i64 %4423, i64* %PC.i1808
  %4424 = inttoptr i64 %4421 to i32*
  %4425 = load i32, i32* %4424
  %4426 = sext i32 %4425 to i64
  store i64 %4426, i64* %RDX.i1809, align 8
  store %struct.Memory* %loadMem_4b09f7, %struct.Memory** %MEMORY
  %loadMem_4b09fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4428 = getelementptr inbounds %struct.GPR, %struct.GPR* %4427, i32 0, i32 33
  %4429 = getelementptr inbounds %struct.Reg, %struct.Reg* %4428, i32 0, i32 0
  %PC.i1806 = bitcast %union.anon* %4429 to i64*
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4431 = getelementptr inbounds %struct.GPR, %struct.GPR* %4430, i32 0, i32 7
  %4432 = getelementptr inbounds %struct.Reg, %struct.Reg* %4431, i32 0, i32 0
  %RDX.i1807 = bitcast %union.anon* %4432 to i64*
  %4433 = load i64, i64* %RDX.i1807
  %4434 = load i64, i64* %PC.i1806
  %4435 = add i64 %4434, 7
  store i64 %4435, i64* %PC.i1806
  %4436 = sext i64 %4433 to i128
  %4437 = and i128 %4436, -18446744073709551616
  %4438 = zext i64 %4433 to i128
  %4439 = or i128 %4437, %4438
  %4440 = mul i128 180, %4439
  %4441 = trunc i128 %4440 to i64
  store i64 %4441, i64* %RDX.i1807, align 8
  %4442 = sext i64 %4441 to i128
  %4443 = icmp ne i128 %4442, %4440
  %4444 = zext i1 %4443 to i8
  %4445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4444, i8* %4445, align 1
  %4446 = trunc i128 %4440 to i32
  %4447 = and i32 %4446, 255
  %4448 = call i32 @llvm.ctpop.i32(i32 %4447)
  %4449 = trunc i32 %4448 to i8
  %4450 = and i8 %4449, 1
  %4451 = xor i8 %4450, 1
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4451, i8* %4452, align 1
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4453, align 1
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4454, align 1
  %4455 = lshr i64 %4441, 63
  %4456 = trunc i64 %4455 to i8
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4456, i8* %4457, align 1
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4444, i8* %4458, align 1
  store %struct.Memory* %loadMem_4b09fb, %struct.Memory** %MEMORY
  %loadMem_4b0a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 33
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %PC.i1803 = bitcast %union.anon* %4461 to i64*
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4463 = getelementptr inbounds %struct.GPR, %struct.GPR* %4462, i32 0, i32 5
  %4464 = getelementptr inbounds %struct.Reg, %struct.Reg* %4463, i32 0, i32 0
  %RCX.i1804 = bitcast %union.anon* %4464 to i64*
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4466 = getelementptr inbounds %struct.GPR, %struct.GPR* %4465, i32 0, i32 7
  %4467 = getelementptr inbounds %struct.Reg, %struct.Reg* %4466, i32 0, i32 0
  %RDX.i1805 = bitcast %union.anon* %4467 to i64*
  %4468 = load i64, i64* %RCX.i1804
  %4469 = load i64, i64* %RDX.i1805
  %4470 = load i64, i64* %PC.i1803
  %4471 = add i64 %4470, 3
  store i64 %4471, i64* %PC.i1803
  %4472 = add i64 %4469, %4468
  store i64 %4472, i64* %RCX.i1804, align 8
  %4473 = icmp ult i64 %4472, %4468
  %4474 = icmp ult i64 %4472, %4469
  %4475 = or i1 %4473, %4474
  %4476 = zext i1 %4475 to i8
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4476, i8* %4477, align 1
  %4478 = trunc i64 %4472 to i32
  %4479 = and i32 %4478, 255
  %4480 = call i32 @llvm.ctpop.i32(i32 %4479)
  %4481 = trunc i32 %4480 to i8
  %4482 = and i8 %4481, 1
  %4483 = xor i8 %4482, 1
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4483, i8* %4484, align 1
  %4485 = xor i64 %4469, %4468
  %4486 = xor i64 %4485, %4472
  %4487 = lshr i64 %4486, 4
  %4488 = trunc i64 %4487 to i8
  %4489 = and i8 %4488, 1
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4489, i8* %4490, align 1
  %4491 = icmp eq i64 %4472, 0
  %4492 = zext i1 %4491 to i8
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4492, i8* %4493, align 1
  %4494 = lshr i64 %4472, 63
  %4495 = trunc i64 %4494 to i8
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4495, i8* %4496, align 1
  %4497 = lshr i64 %4468, 63
  %4498 = lshr i64 %4469, 63
  %4499 = xor i64 %4494, %4497
  %4500 = xor i64 %4494, %4498
  %4501 = add i64 %4499, %4500
  %4502 = icmp eq i64 %4501, 2
  %4503 = zext i1 %4502 to i8
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4503, i8* %4504, align 1
  store %struct.Memory* %loadMem_4b0a02, %struct.Memory** %MEMORY
  %loadMem_4b0a05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4506 = getelementptr inbounds %struct.GPR, %struct.GPR* %4505, i32 0, i32 33
  %4507 = getelementptr inbounds %struct.Reg, %struct.Reg* %4506, i32 0, i32 0
  %PC.i1800 = bitcast %union.anon* %4507 to i64*
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4509 = getelementptr inbounds %struct.GPR, %struct.GPR* %4508, i32 0, i32 7
  %4510 = getelementptr inbounds %struct.Reg, %struct.Reg* %4509, i32 0, i32 0
  %RDX.i1801 = bitcast %union.anon* %4510 to i64*
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4512 = getelementptr inbounds %struct.GPR, %struct.GPR* %4511, i32 0, i32 15
  %4513 = getelementptr inbounds %struct.Reg, %struct.Reg* %4512, i32 0, i32 0
  %RBP.i1802 = bitcast %union.anon* %4513 to i64*
  %4514 = load i64, i64* %RBP.i1802
  %4515 = sub i64 %4514, 12
  %4516 = load i64, i64* %PC.i1800
  %4517 = add i64 %4516, 4
  store i64 %4517, i64* %PC.i1800
  %4518 = inttoptr i64 %4515 to i32*
  %4519 = load i32, i32* %4518
  %4520 = sext i32 %4519 to i64
  store i64 %4520, i64* %RDX.i1801, align 8
  store %struct.Memory* %loadMem_4b0a05, %struct.Memory** %MEMORY
  %loadMem_4b0a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4522 = getelementptr inbounds %struct.GPR, %struct.GPR* %4521, i32 0, i32 33
  %4523 = getelementptr inbounds %struct.Reg, %struct.Reg* %4522, i32 0, i32 0
  %PC.i1798 = bitcast %union.anon* %4523 to i64*
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4525 = getelementptr inbounds %struct.GPR, %struct.GPR* %4524, i32 0, i32 7
  %4526 = getelementptr inbounds %struct.Reg, %struct.Reg* %4525, i32 0, i32 0
  %RDX.i1799 = bitcast %union.anon* %4526 to i64*
  %4527 = load i64, i64* %RDX.i1799
  %4528 = load i64, i64* %PC.i1798
  %4529 = add i64 %4528, 4
  store i64 %4529, i64* %PC.i1798
  %4530 = sext i64 %4527 to i128
  %4531 = and i128 %4530, -18446744073709551616
  %4532 = zext i64 %4527 to i128
  %4533 = or i128 %4531, %4532
  %4534 = mul i128 12, %4533
  %4535 = trunc i128 %4534 to i64
  store i64 %4535, i64* %RDX.i1799, align 8
  %4536 = sext i64 %4535 to i128
  %4537 = icmp ne i128 %4536, %4534
  %4538 = zext i1 %4537 to i8
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4538, i8* %4539, align 1
  %4540 = trunc i128 %4534 to i32
  %4541 = and i32 %4540, 255
  %4542 = call i32 @llvm.ctpop.i32(i32 %4541)
  %4543 = trunc i32 %4542 to i8
  %4544 = and i8 %4543, 1
  %4545 = xor i8 %4544, 1
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4545, i8* %4546, align 1
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4547, align 1
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4548, align 1
  %4549 = lshr i64 %4535, 63
  %4550 = trunc i64 %4549 to i8
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4550, i8* %4551, align 1
  %4552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4538, i8* %4552, align 1
  store %struct.Memory* %loadMem_4b0a09, %struct.Memory** %MEMORY
  %loadMem_4b0a0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 33
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %PC.i1795 = bitcast %union.anon* %4555 to i64*
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4557 = getelementptr inbounds %struct.GPR, %struct.GPR* %4556, i32 0, i32 5
  %4558 = getelementptr inbounds %struct.Reg, %struct.Reg* %4557, i32 0, i32 0
  %RCX.i1796 = bitcast %union.anon* %4558 to i64*
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4560 = getelementptr inbounds %struct.GPR, %struct.GPR* %4559, i32 0, i32 7
  %4561 = getelementptr inbounds %struct.Reg, %struct.Reg* %4560, i32 0, i32 0
  %RDX.i1797 = bitcast %union.anon* %4561 to i64*
  %4562 = load i64, i64* %RCX.i1796
  %4563 = load i64, i64* %RDX.i1797
  %4564 = load i64, i64* %PC.i1795
  %4565 = add i64 %4564, 3
  store i64 %4565, i64* %PC.i1795
  %4566 = add i64 %4563, %4562
  store i64 %4566, i64* %RCX.i1796, align 8
  %4567 = icmp ult i64 %4566, %4562
  %4568 = icmp ult i64 %4566, %4563
  %4569 = or i1 %4567, %4568
  %4570 = zext i1 %4569 to i8
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4570, i8* %4571, align 1
  %4572 = trunc i64 %4566 to i32
  %4573 = and i32 %4572, 255
  %4574 = call i32 @llvm.ctpop.i32(i32 %4573)
  %4575 = trunc i32 %4574 to i8
  %4576 = and i8 %4575, 1
  %4577 = xor i8 %4576, 1
  %4578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4577, i8* %4578, align 1
  %4579 = xor i64 %4563, %4562
  %4580 = xor i64 %4579, %4566
  %4581 = lshr i64 %4580, 4
  %4582 = trunc i64 %4581 to i8
  %4583 = and i8 %4582, 1
  %4584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4583, i8* %4584, align 1
  %4585 = icmp eq i64 %4566, 0
  %4586 = zext i1 %4585 to i8
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4586, i8* %4587, align 1
  %4588 = lshr i64 %4566, 63
  %4589 = trunc i64 %4588 to i8
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4589, i8* %4590, align 1
  %4591 = lshr i64 %4562, 63
  %4592 = lshr i64 %4563, 63
  %4593 = xor i64 %4588, %4591
  %4594 = xor i64 %4588, %4592
  %4595 = add i64 %4593, %4594
  %4596 = icmp eq i64 %4595, 2
  %4597 = zext i1 %4596 to i8
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4597, i8* %4598, align 1
  store %struct.Memory* %loadMem_4b0a0d, %struct.Memory** %MEMORY
  %loadMem_4b0a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4600 = getelementptr inbounds %struct.GPR, %struct.GPR* %4599, i32 0, i32 33
  %4601 = getelementptr inbounds %struct.Reg, %struct.Reg* %4600, i32 0, i32 0
  %PC.i1792 = bitcast %union.anon* %4601 to i64*
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4603 = getelementptr inbounds %struct.GPR, %struct.GPR* %4602, i32 0, i32 7
  %4604 = getelementptr inbounds %struct.Reg, %struct.Reg* %4603, i32 0, i32 0
  %RDX.i1793 = bitcast %union.anon* %4604 to i64*
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4606 = getelementptr inbounds %struct.GPR, %struct.GPR* %4605, i32 0, i32 15
  %4607 = getelementptr inbounds %struct.Reg, %struct.Reg* %4606, i32 0, i32 0
  %RBP.i1794 = bitcast %union.anon* %4607 to i64*
  %4608 = load i64, i64* %RBP.i1794
  %4609 = sub i64 %4608, 40
  %4610 = load i64, i64* %PC.i1792
  %4611 = add i64 %4610, 4
  store i64 %4611, i64* %PC.i1792
  %4612 = inttoptr i64 %4609 to i32*
  %4613 = load i32, i32* %4612
  %4614 = sext i32 %4613 to i64
  store i64 %4614, i64* %RDX.i1793, align 8
  store %struct.Memory* %loadMem_4b0a10, %struct.Memory** %MEMORY
  %loadMem_4b0a14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4616 = getelementptr inbounds %struct.GPR, %struct.GPR* %4615, i32 0, i32 33
  %4617 = getelementptr inbounds %struct.Reg, %struct.Reg* %4616, i32 0, i32 0
  %PC.i1789 = bitcast %union.anon* %4617 to i64*
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4619 = getelementptr inbounds %struct.GPR, %struct.GPR* %4618, i32 0, i32 5
  %4620 = getelementptr inbounds %struct.Reg, %struct.Reg* %4619, i32 0, i32 0
  %RCX.i1790 = bitcast %union.anon* %4620 to i64*
  %4621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4622 = getelementptr inbounds %struct.GPR, %struct.GPR* %4621, i32 0, i32 7
  %4623 = getelementptr inbounds %struct.Reg, %struct.Reg* %4622, i32 0, i32 0
  %RDX.i1791 = bitcast %union.anon* %4623 to i64*
  %4624 = load i64, i64* %RCX.i1790
  %4625 = load i64, i64* %RDX.i1791
  %4626 = mul i64 %4625, 4
  %4627 = add i64 %4626, %4624
  %4628 = load i64, i64* %PC.i1789
  %4629 = add i64 %4628, 7
  store i64 %4629, i64* %PC.i1789
  %4630 = inttoptr i64 %4627 to i32*
  store i32 32, i32* %4630
  store %struct.Memory* %loadMem_4b0a14, %struct.Memory** %MEMORY
  %loadMem_4b0a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4632 = getelementptr inbounds %struct.GPR, %struct.GPR* %4631, i32 0, i32 33
  %4633 = getelementptr inbounds %struct.Reg, %struct.Reg* %4632, i32 0, i32 0
  %PC.i1786 = bitcast %union.anon* %4633 to i64*
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4635 = getelementptr inbounds %struct.GPR, %struct.GPR* %4634, i32 0, i32 1
  %4636 = getelementptr inbounds %struct.Reg, %struct.Reg* %4635, i32 0, i32 0
  %RAX.i1787 = bitcast %union.anon* %4636 to i64*
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 5
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %RCX.i1788 = bitcast %union.anon* %4639 to i64*
  %4640 = load i64, i64* %RAX.i1787
  %4641 = load i64, i64* %PC.i1786
  %4642 = add i64 %4641, 3
  store i64 %4642, i64* %PC.i1786
  store i64 %4640, i64* %RCX.i1788, align 8
  store %struct.Memory* %loadMem_4b0a1b, %struct.Memory** %MEMORY
  %loadMem_4b0a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4644 = getelementptr inbounds %struct.GPR, %struct.GPR* %4643, i32 0, i32 33
  %4645 = getelementptr inbounds %struct.Reg, %struct.Reg* %4644, i32 0, i32 0
  %PC.i1784 = bitcast %union.anon* %4645 to i64*
  %4646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4647 = getelementptr inbounds %struct.GPR, %struct.GPR* %4646, i32 0, i32 5
  %4648 = getelementptr inbounds %struct.Reg, %struct.Reg* %4647, i32 0, i32 0
  %RCX.i1785 = bitcast %union.anon* %4648 to i64*
  %4649 = load i64, i64* %RCX.i1785
  %4650 = load i64, i64* %PC.i1784
  %4651 = add i64 %4650, 7
  store i64 %4651, i64* %PC.i1784
  %4652 = add i64 2700, %4649
  store i64 %4652, i64* %RCX.i1785, align 8
  %4653 = icmp ult i64 %4652, %4649
  %4654 = icmp ult i64 %4652, 2700
  %4655 = or i1 %4653, %4654
  %4656 = zext i1 %4655 to i8
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4656, i8* %4657, align 1
  %4658 = trunc i64 %4652 to i32
  %4659 = and i32 %4658, 255
  %4660 = call i32 @llvm.ctpop.i32(i32 %4659)
  %4661 = trunc i32 %4660 to i8
  %4662 = and i8 %4661, 1
  %4663 = xor i8 %4662, 1
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4663, i8* %4664, align 1
  %4665 = xor i64 2700, %4649
  %4666 = xor i64 %4665, %4652
  %4667 = lshr i64 %4666, 4
  %4668 = trunc i64 %4667 to i8
  %4669 = and i8 %4668, 1
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4669, i8* %4670, align 1
  %4671 = icmp eq i64 %4652, 0
  %4672 = zext i1 %4671 to i8
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4672, i8* %4673, align 1
  %4674 = lshr i64 %4652, 63
  %4675 = trunc i64 %4674 to i8
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4675, i8* %4676, align 1
  %4677 = lshr i64 %4649, 63
  %4678 = xor i64 %4674, %4677
  %4679 = add i64 %4678, %4674
  %4680 = icmp eq i64 %4679, 2
  %4681 = zext i1 %4680 to i8
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4681, i8* %4682, align 1
  store %struct.Memory* %loadMem_4b0a1e, %struct.Memory** %MEMORY
  %loadMem_4b0a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 33
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %PC.i1781 = bitcast %union.anon* %4685 to i64*
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4687 = getelementptr inbounds %struct.GPR, %struct.GPR* %4686, i32 0, i32 7
  %4688 = getelementptr inbounds %struct.Reg, %struct.Reg* %4687, i32 0, i32 0
  %RDX.i1782 = bitcast %union.anon* %4688 to i64*
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4690 = getelementptr inbounds %struct.GPR, %struct.GPR* %4689, i32 0, i32 15
  %4691 = getelementptr inbounds %struct.Reg, %struct.Reg* %4690, i32 0, i32 0
  %RBP.i1783 = bitcast %union.anon* %4691 to i64*
  %4692 = load i64, i64* %RBP.i1783
  %4693 = sub i64 %4692, 8
  %4694 = load i64, i64* %PC.i1781
  %4695 = add i64 %4694, 4
  store i64 %4695, i64* %PC.i1781
  %4696 = inttoptr i64 %4693 to i32*
  %4697 = load i32, i32* %4696
  %4698 = sext i32 %4697 to i64
  store i64 %4698, i64* %RDX.i1782, align 8
  store %struct.Memory* %loadMem_4b0a25, %struct.Memory** %MEMORY
  %loadMem_4b0a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 33
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %PC.i1779 = bitcast %union.anon* %4701 to i64*
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4703 = getelementptr inbounds %struct.GPR, %struct.GPR* %4702, i32 0, i32 7
  %4704 = getelementptr inbounds %struct.Reg, %struct.Reg* %4703, i32 0, i32 0
  %RDX.i1780 = bitcast %union.anon* %4704 to i64*
  %4705 = load i64, i64* %RDX.i1780
  %4706 = load i64, i64* %PC.i1779
  %4707 = add i64 %4706, 7
  store i64 %4707, i64* %PC.i1779
  %4708 = sext i64 %4705 to i128
  %4709 = and i128 %4708, -18446744073709551616
  %4710 = zext i64 %4705 to i128
  %4711 = or i128 %4709, %4710
  %4712 = mul i128 180, %4711
  %4713 = trunc i128 %4712 to i64
  store i64 %4713, i64* %RDX.i1780, align 8
  %4714 = sext i64 %4713 to i128
  %4715 = icmp ne i128 %4714, %4712
  %4716 = zext i1 %4715 to i8
  %4717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4716, i8* %4717, align 1
  %4718 = trunc i128 %4712 to i32
  %4719 = and i32 %4718, 255
  %4720 = call i32 @llvm.ctpop.i32(i32 %4719)
  %4721 = trunc i32 %4720 to i8
  %4722 = and i8 %4721, 1
  %4723 = xor i8 %4722, 1
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4723, i8* %4724, align 1
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4725, align 1
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4726, align 1
  %4727 = lshr i64 %4713, 63
  %4728 = trunc i64 %4727 to i8
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4728, i8* %4729, align 1
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4716, i8* %4730, align 1
  store %struct.Memory* %loadMem_4b0a29, %struct.Memory** %MEMORY
  %loadMem_4b0a30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4732 = getelementptr inbounds %struct.GPR, %struct.GPR* %4731, i32 0, i32 33
  %4733 = getelementptr inbounds %struct.Reg, %struct.Reg* %4732, i32 0, i32 0
  %PC.i1776 = bitcast %union.anon* %4733 to i64*
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4735 = getelementptr inbounds %struct.GPR, %struct.GPR* %4734, i32 0, i32 5
  %4736 = getelementptr inbounds %struct.Reg, %struct.Reg* %4735, i32 0, i32 0
  %RCX.i1777 = bitcast %union.anon* %4736 to i64*
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4738 = getelementptr inbounds %struct.GPR, %struct.GPR* %4737, i32 0, i32 7
  %4739 = getelementptr inbounds %struct.Reg, %struct.Reg* %4738, i32 0, i32 0
  %RDX.i1778 = bitcast %union.anon* %4739 to i64*
  %4740 = load i64, i64* %RCX.i1777
  %4741 = load i64, i64* %RDX.i1778
  %4742 = load i64, i64* %PC.i1776
  %4743 = add i64 %4742, 3
  store i64 %4743, i64* %PC.i1776
  %4744 = add i64 %4741, %4740
  store i64 %4744, i64* %RCX.i1777, align 8
  %4745 = icmp ult i64 %4744, %4740
  %4746 = icmp ult i64 %4744, %4741
  %4747 = or i1 %4745, %4746
  %4748 = zext i1 %4747 to i8
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4748, i8* %4749, align 1
  %4750 = trunc i64 %4744 to i32
  %4751 = and i32 %4750, 255
  %4752 = call i32 @llvm.ctpop.i32(i32 %4751)
  %4753 = trunc i32 %4752 to i8
  %4754 = and i8 %4753, 1
  %4755 = xor i8 %4754, 1
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4755, i8* %4756, align 1
  %4757 = xor i64 %4741, %4740
  %4758 = xor i64 %4757, %4744
  %4759 = lshr i64 %4758, 4
  %4760 = trunc i64 %4759 to i8
  %4761 = and i8 %4760, 1
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4761, i8* %4762, align 1
  %4763 = icmp eq i64 %4744, 0
  %4764 = zext i1 %4763 to i8
  %4765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4764, i8* %4765, align 1
  %4766 = lshr i64 %4744, 63
  %4767 = trunc i64 %4766 to i8
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4767, i8* %4768, align 1
  %4769 = lshr i64 %4740, 63
  %4770 = lshr i64 %4741, 63
  %4771 = xor i64 %4766, %4769
  %4772 = xor i64 %4766, %4770
  %4773 = add i64 %4771, %4772
  %4774 = icmp eq i64 %4773, 2
  %4775 = zext i1 %4774 to i8
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4775, i8* %4776, align 1
  store %struct.Memory* %loadMem_4b0a30, %struct.Memory** %MEMORY
  %loadMem_4b0a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4778 = getelementptr inbounds %struct.GPR, %struct.GPR* %4777, i32 0, i32 33
  %4779 = getelementptr inbounds %struct.Reg, %struct.Reg* %4778, i32 0, i32 0
  %PC.i1773 = bitcast %union.anon* %4779 to i64*
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4781 = getelementptr inbounds %struct.GPR, %struct.GPR* %4780, i32 0, i32 7
  %4782 = getelementptr inbounds %struct.Reg, %struct.Reg* %4781, i32 0, i32 0
  %RDX.i1774 = bitcast %union.anon* %4782 to i64*
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4784 = getelementptr inbounds %struct.GPR, %struct.GPR* %4783, i32 0, i32 15
  %4785 = getelementptr inbounds %struct.Reg, %struct.Reg* %4784, i32 0, i32 0
  %RBP.i1775 = bitcast %union.anon* %4785 to i64*
  %4786 = load i64, i64* %RBP.i1775
  %4787 = sub i64 %4786, 12
  %4788 = load i64, i64* %PC.i1773
  %4789 = add i64 %4788, 4
  store i64 %4789, i64* %PC.i1773
  %4790 = inttoptr i64 %4787 to i32*
  %4791 = load i32, i32* %4790
  %4792 = sext i32 %4791 to i64
  store i64 %4792, i64* %RDX.i1774, align 8
  store %struct.Memory* %loadMem_4b0a33, %struct.Memory** %MEMORY
  %loadMem_4b0a37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4794 = getelementptr inbounds %struct.GPR, %struct.GPR* %4793, i32 0, i32 33
  %4795 = getelementptr inbounds %struct.Reg, %struct.Reg* %4794, i32 0, i32 0
  %PC.i1771 = bitcast %union.anon* %4795 to i64*
  %4796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4797 = getelementptr inbounds %struct.GPR, %struct.GPR* %4796, i32 0, i32 7
  %4798 = getelementptr inbounds %struct.Reg, %struct.Reg* %4797, i32 0, i32 0
  %RDX.i1772 = bitcast %union.anon* %4798 to i64*
  %4799 = load i64, i64* %RDX.i1772
  %4800 = load i64, i64* %PC.i1771
  %4801 = add i64 %4800, 4
  store i64 %4801, i64* %PC.i1771
  %4802 = sext i64 %4799 to i128
  %4803 = and i128 %4802, -18446744073709551616
  %4804 = zext i64 %4799 to i128
  %4805 = or i128 %4803, %4804
  %4806 = mul i128 12, %4805
  %4807 = trunc i128 %4806 to i64
  store i64 %4807, i64* %RDX.i1772, align 8
  %4808 = sext i64 %4807 to i128
  %4809 = icmp ne i128 %4808, %4806
  %4810 = zext i1 %4809 to i8
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4810, i8* %4811, align 1
  %4812 = trunc i128 %4806 to i32
  %4813 = and i32 %4812, 255
  %4814 = call i32 @llvm.ctpop.i32(i32 %4813)
  %4815 = trunc i32 %4814 to i8
  %4816 = and i8 %4815, 1
  %4817 = xor i8 %4816, 1
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4817, i8* %4818, align 1
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4819, align 1
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4820, align 1
  %4821 = lshr i64 %4807, 63
  %4822 = trunc i64 %4821 to i8
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4822, i8* %4823, align 1
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4810, i8* %4824, align 1
  store %struct.Memory* %loadMem_4b0a37, %struct.Memory** %MEMORY
  %loadMem_4b0a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4826 = getelementptr inbounds %struct.GPR, %struct.GPR* %4825, i32 0, i32 33
  %4827 = getelementptr inbounds %struct.Reg, %struct.Reg* %4826, i32 0, i32 0
  %PC.i1768 = bitcast %union.anon* %4827 to i64*
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 5
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %RCX.i1769 = bitcast %union.anon* %4830 to i64*
  %4831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4832 = getelementptr inbounds %struct.GPR, %struct.GPR* %4831, i32 0, i32 7
  %4833 = getelementptr inbounds %struct.Reg, %struct.Reg* %4832, i32 0, i32 0
  %RDX.i1770 = bitcast %union.anon* %4833 to i64*
  %4834 = load i64, i64* %RCX.i1769
  %4835 = load i64, i64* %RDX.i1770
  %4836 = load i64, i64* %PC.i1768
  %4837 = add i64 %4836, 3
  store i64 %4837, i64* %PC.i1768
  %4838 = add i64 %4835, %4834
  store i64 %4838, i64* %RCX.i1769, align 8
  %4839 = icmp ult i64 %4838, %4834
  %4840 = icmp ult i64 %4838, %4835
  %4841 = or i1 %4839, %4840
  %4842 = zext i1 %4841 to i8
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4842, i8* %4843, align 1
  %4844 = trunc i64 %4838 to i32
  %4845 = and i32 %4844, 255
  %4846 = call i32 @llvm.ctpop.i32(i32 %4845)
  %4847 = trunc i32 %4846 to i8
  %4848 = and i8 %4847, 1
  %4849 = xor i8 %4848, 1
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4849, i8* %4850, align 1
  %4851 = xor i64 %4835, %4834
  %4852 = xor i64 %4851, %4838
  %4853 = lshr i64 %4852, 4
  %4854 = trunc i64 %4853 to i8
  %4855 = and i8 %4854, 1
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4855, i8* %4856, align 1
  %4857 = icmp eq i64 %4838, 0
  %4858 = zext i1 %4857 to i8
  %4859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4858, i8* %4859, align 1
  %4860 = lshr i64 %4838, 63
  %4861 = trunc i64 %4860 to i8
  %4862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4861, i8* %4862, align 1
  %4863 = lshr i64 %4834, 63
  %4864 = lshr i64 %4835, 63
  %4865 = xor i64 %4860, %4863
  %4866 = xor i64 %4860, %4864
  %4867 = add i64 %4865, %4866
  %4868 = icmp eq i64 %4867, 2
  %4869 = zext i1 %4868 to i8
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4869, i8* %4870, align 1
  store %struct.Memory* %loadMem_4b0a3b, %struct.Memory** %MEMORY
  %loadMem_4b0a3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 33
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %PC.i1765 = bitcast %union.anon* %4873 to i64*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4875 = getelementptr inbounds %struct.GPR, %struct.GPR* %4874, i32 0, i32 7
  %4876 = getelementptr inbounds %struct.Reg, %struct.Reg* %4875, i32 0, i32 0
  %RDX.i1766 = bitcast %union.anon* %4876 to i64*
  %4877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4878 = getelementptr inbounds %struct.GPR, %struct.GPR* %4877, i32 0, i32 15
  %4879 = getelementptr inbounds %struct.Reg, %struct.Reg* %4878, i32 0, i32 0
  %RBP.i1767 = bitcast %union.anon* %4879 to i64*
  %4880 = load i64, i64* %RBP.i1767
  %4881 = sub i64 %4880, 40
  %4882 = load i64, i64* %PC.i1765
  %4883 = add i64 %4882, 4
  store i64 %4883, i64* %PC.i1765
  %4884 = inttoptr i64 %4881 to i32*
  %4885 = load i32, i32* %4884
  %4886 = sext i32 %4885 to i64
  store i64 %4886, i64* %RDX.i1766, align 8
  store %struct.Memory* %loadMem_4b0a3e, %struct.Memory** %MEMORY
  %loadMem_4b0a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 33
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %PC.i1762 = bitcast %union.anon* %4889 to i64*
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4891 = getelementptr inbounds %struct.GPR, %struct.GPR* %4890, i32 0, i32 5
  %4892 = getelementptr inbounds %struct.Reg, %struct.Reg* %4891, i32 0, i32 0
  %RCX.i1763 = bitcast %union.anon* %4892 to i64*
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4894 = getelementptr inbounds %struct.GPR, %struct.GPR* %4893, i32 0, i32 7
  %4895 = getelementptr inbounds %struct.Reg, %struct.Reg* %4894, i32 0, i32 0
  %RDX.i1764 = bitcast %union.anon* %4895 to i64*
  %4896 = load i64, i64* %RCX.i1763
  %4897 = load i64, i64* %RDX.i1764
  %4898 = mul i64 %4897, 4
  %4899 = add i64 %4898, %4896
  %4900 = load i64, i64* %PC.i1762
  %4901 = add i64 %4900, 7
  store i64 %4901, i64* %PC.i1762
  %4902 = inttoptr i64 %4899 to i32*
  store i32 0, i32* %4902
  store %struct.Memory* %loadMem_4b0a42, %struct.Memory** %MEMORY
  %loadMem_4b0a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 33
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %PC.i1759 = bitcast %union.anon* %4905 to i64*
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4907 = getelementptr inbounds %struct.GPR, %struct.GPR* %4906, i32 0, i32 5
  %4908 = getelementptr inbounds %struct.Reg, %struct.Reg* %4907, i32 0, i32 0
  %RCX.i1760 = bitcast %union.anon* %4908 to i64*
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4910 = getelementptr inbounds %struct.GPR, %struct.GPR* %4909, i32 0, i32 15
  %4911 = getelementptr inbounds %struct.Reg, %struct.Reg* %4910, i32 0, i32 0
  %RBP.i1761 = bitcast %union.anon* %4911 to i64*
  %4912 = load i64, i64* %RBP.i1761
  %4913 = sub i64 %4912, 8
  %4914 = load i64, i64* %PC.i1759
  %4915 = add i64 %4914, 4
  store i64 %4915, i64* %PC.i1759
  %4916 = inttoptr i64 %4913 to i32*
  %4917 = load i32, i32* %4916
  %4918 = sext i32 %4917 to i64
  store i64 %4918, i64* %RCX.i1760, align 8
  store %struct.Memory* %loadMem_4b0a49, %struct.Memory** %MEMORY
  %loadMem_4b0a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4920 = getelementptr inbounds %struct.GPR, %struct.GPR* %4919, i32 0, i32 33
  %4921 = getelementptr inbounds %struct.Reg, %struct.Reg* %4920, i32 0, i32 0
  %PC.i1757 = bitcast %union.anon* %4921 to i64*
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4923 = getelementptr inbounds %struct.GPR, %struct.GPR* %4922, i32 0, i32 5
  %4924 = getelementptr inbounds %struct.Reg, %struct.Reg* %4923, i32 0, i32 0
  %RCX.i1758 = bitcast %union.anon* %4924 to i64*
  %4925 = load i64, i64* %RCX.i1758
  %4926 = load i64, i64* %PC.i1757
  %4927 = add i64 %4926, 7
  store i64 %4927, i64* %PC.i1757
  %4928 = sext i64 %4925 to i128
  %4929 = and i128 %4928, -18446744073709551616
  %4930 = zext i64 %4925 to i128
  %4931 = or i128 %4929, %4930
  %4932 = mul i128 180, %4931
  %4933 = trunc i128 %4932 to i64
  store i64 %4933, i64* %RCX.i1758, align 8
  %4934 = sext i64 %4933 to i128
  %4935 = icmp ne i128 %4934, %4932
  %4936 = zext i1 %4935 to i8
  %4937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4936, i8* %4937, align 1
  %4938 = trunc i128 %4932 to i32
  %4939 = and i32 %4938, 255
  %4940 = call i32 @llvm.ctpop.i32(i32 %4939)
  %4941 = trunc i32 %4940 to i8
  %4942 = and i8 %4941, 1
  %4943 = xor i8 %4942, 1
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4943, i8* %4944, align 1
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4945, align 1
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4946, align 1
  %4947 = lshr i64 %4933, 63
  %4948 = trunc i64 %4947 to i8
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4948, i8* %4949, align 1
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4936, i8* %4950, align 1
  store %struct.Memory* %loadMem_4b0a4d, %struct.Memory** %MEMORY
  %loadMem_4b0a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4952 = getelementptr inbounds %struct.GPR, %struct.GPR* %4951, i32 0, i32 33
  %4953 = getelementptr inbounds %struct.Reg, %struct.Reg* %4952, i32 0, i32 0
  %PC.i1754 = bitcast %union.anon* %4953 to i64*
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4955 = getelementptr inbounds %struct.GPR, %struct.GPR* %4954, i32 0, i32 1
  %4956 = getelementptr inbounds %struct.Reg, %struct.Reg* %4955, i32 0, i32 0
  %RAX.i1755 = bitcast %union.anon* %4956 to i64*
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 5
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %RCX.i1756 = bitcast %union.anon* %4959 to i64*
  %4960 = load i64, i64* %RAX.i1755
  %4961 = load i64, i64* %RCX.i1756
  %4962 = load i64, i64* %PC.i1754
  %4963 = add i64 %4962, 3
  store i64 %4963, i64* %PC.i1754
  %4964 = add i64 %4961, %4960
  store i64 %4964, i64* %RAX.i1755, align 8
  %4965 = icmp ult i64 %4964, %4960
  %4966 = icmp ult i64 %4964, %4961
  %4967 = or i1 %4965, %4966
  %4968 = zext i1 %4967 to i8
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4968, i8* %4969, align 1
  %4970 = trunc i64 %4964 to i32
  %4971 = and i32 %4970, 255
  %4972 = call i32 @llvm.ctpop.i32(i32 %4971)
  %4973 = trunc i32 %4972 to i8
  %4974 = and i8 %4973, 1
  %4975 = xor i8 %4974, 1
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4975, i8* %4976, align 1
  %4977 = xor i64 %4961, %4960
  %4978 = xor i64 %4977, %4964
  %4979 = lshr i64 %4978, 4
  %4980 = trunc i64 %4979 to i8
  %4981 = and i8 %4980, 1
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4981, i8* %4982, align 1
  %4983 = icmp eq i64 %4964, 0
  %4984 = zext i1 %4983 to i8
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4984, i8* %4985, align 1
  %4986 = lshr i64 %4964, 63
  %4987 = trunc i64 %4986 to i8
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4987, i8* %4988, align 1
  %4989 = lshr i64 %4960, 63
  %4990 = lshr i64 %4961, 63
  %4991 = xor i64 %4986, %4989
  %4992 = xor i64 %4986, %4990
  %4993 = add i64 %4991, %4992
  %4994 = icmp eq i64 %4993, 2
  %4995 = zext i1 %4994 to i8
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4995, i8* %4996, align 1
  store %struct.Memory* %loadMem_4b0a54, %struct.Memory** %MEMORY
  %loadMem_4b0a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4998 = getelementptr inbounds %struct.GPR, %struct.GPR* %4997, i32 0, i32 33
  %4999 = getelementptr inbounds %struct.Reg, %struct.Reg* %4998, i32 0, i32 0
  %PC.i1751 = bitcast %union.anon* %4999 to i64*
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5001 = getelementptr inbounds %struct.GPR, %struct.GPR* %5000, i32 0, i32 5
  %5002 = getelementptr inbounds %struct.Reg, %struct.Reg* %5001, i32 0, i32 0
  %RCX.i1752 = bitcast %union.anon* %5002 to i64*
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 15
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %RBP.i1753 = bitcast %union.anon* %5005 to i64*
  %5006 = load i64, i64* %RBP.i1753
  %5007 = sub i64 %5006, 12
  %5008 = load i64, i64* %PC.i1751
  %5009 = add i64 %5008, 4
  store i64 %5009, i64* %PC.i1751
  %5010 = inttoptr i64 %5007 to i32*
  %5011 = load i32, i32* %5010
  %5012 = sext i32 %5011 to i64
  store i64 %5012, i64* %RCX.i1752, align 8
  store %struct.Memory* %loadMem_4b0a57, %struct.Memory** %MEMORY
  %loadMem_4b0a5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5014 = getelementptr inbounds %struct.GPR, %struct.GPR* %5013, i32 0, i32 33
  %5015 = getelementptr inbounds %struct.Reg, %struct.Reg* %5014, i32 0, i32 0
  %PC.i1749 = bitcast %union.anon* %5015 to i64*
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5017 = getelementptr inbounds %struct.GPR, %struct.GPR* %5016, i32 0, i32 5
  %5018 = getelementptr inbounds %struct.Reg, %struct.Reg* %5017, i32 0, i32 0
  %RCX.i1750 = bitcast %union.anon* %5018 to i64*
  %5019 = load i64, i64* %RCX.i1750
  %5020 = load i64, i64* %PC.i1749
  %5021 = add i64 %5020, 4
  store i64 %5021, i64* %PC.i1749
  %5022 = sext i64 %5019 to i128
  %5023 = and i128 %5022, -18446744073709551616
  %5024 = zext i64 %5019 to i128
  %5025 = or i128 %5023, %5024
  %5026 = mul i128 12, %5025
  %5027 = trunc i128 %5026 to i64
  store i64 %5027, i64* %RCX.i1750, align 8
  %5028 = sext i64 %5027 to i128
  %5029 = icmp ne i128 %5028, %5026
  %5030 = zext i1 %5029 to i8
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5030, i8* %5031, align 1
  %5032 = trunc i128 %5026 to i32
  %5033 = and i32 %5032, 255
  %5034 = call i32 @llvm.ctpop.i32(i32 %5033)
  %5035 = trunc i32 %5034 to i8
  %5036 = and i8 %5035, 1
  %5037 = xor i8 %5036, 1
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5037, i8* %5038, align 1
  %5039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5039, align 1
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5040, align 1
  %5041 = lshr i64 %5027, 63
  %5042 = trunc i64 %5041 to i8
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5042, i8* %5043, align 1
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5030, i8* %5044, align 1
  store %struct.Memory* %loadMem_4b0a5b, %struct.Memory** %MEMORY
  %loadMem_4b0a5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 33
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %PC.i1746 = bitcast %union.anon* %5047 to i64*
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 1
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %RAX.i1747 = bitcast %union.anon* %5050 to i64*
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5052 = getelementptr inbounds %struct.GPR, %struct.GPR* %5051, i32 0, i32 5
  %5053 = getelementptr inbounds %struct.Reg, %struct.Reg* %5052, i32 0, i32 0
  %RCX.i1748 = bitcast %union.anon* %5053 to i64*
  %5054 = load i64, i64* %RAX.i1747
  %5055 = load i64, i64* %RCX.i1748
  %5056 = load i64, i64* %PC.i1746
  %5057 = add i64 %5056, 3
  store i64 %5057, i64* %PC.i1746
  %5058 = add i64 %5055, %5054
  store i64 %5058, i64* %RAX.i1747, align 8
  %5059 = icmp ult i64 %5058, %5054
  %5060 = icmp ult i64 %5058, %5055
  %5061 = or i1 %5059, %5060
  %5062 = zext i1 %5061 to i8
  %5063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5062, i8* %5063, align 1
  %5064 = trunc i64 %5058 to i32
  %5065 = and i32 %5064, 255
  %5066 = call i32 @llvm.ctpop.i32(i32 %5065)
  %5067 = trunc i32 %5066 to i8
  %5068 = and i8 %5067, 1
  %5069 = xor i8 %5068, 1
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5069, i8* %5070, align 1
  %5071 = xor i64 %5055, %5054
  %5072 = xor i64 %5071, %5058
  %5073 = lshr i64 %5072, 4
  %5074 = trunc i64 %5073 to i8
  %5075 = and i8 %5074, 1
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5075, i8* %5076, align 1
  %5077 = icmp eq i64 %5058, 0
  %5078 = zext i1 %5077 to i8
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5078, i8* %5079, align 1
  %5080 = lshr i64 %5058, 63
  %5081 = trunc i64 %5080 to i8
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5081, i8* %5082, align 1
  %5083 = lshr i64 %5054, 63
  %5084 = lshr i64 %5055, 63
  %5085 = xor i64 %5080, %5083
  %5086 = xor i64 %5080, %5084
  %5087 = add i64 %5085, %5086
  %5088 = icmp eq i64 %5087, 2
  %5089 = zext i1 %5088 to i8
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5089, i8* %5090, align 1
  store %struct.Memory* %loadMem_4b0a5f, %struct.Memory** %MEMORY
  %loadMem_4b0a62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5092 = getelementptr inbounds %struct.GPR, %struct.GPR* %5091, i32 0, i32 33
  %5093 = getelementptr inbounds %struct.Reg, %struct.Reg* %5092, i32 0, i32 0
  %PC.i1743 = bitcast %union.anon* %5093 to i64*
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5095 = getelementptr inbounds %struct.GPR, %struct.GPR* %5094, i32 0, i32 5
  %5096 = getelementptr inbounds %struct.Reg, %struct.Reg* %5095, i32 0, i32 0
  %RCX.i1744 = bitcast %union.anon* %5096 to i64*
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5098 = getelementptr inbounds %struct.GPR, %struct.GPR* %5097, i32 0, i32 15
  %5099 = getelementptr inbounds %struct.Reg, %struct.Reg* %5098, i32 0, i32 0
  %RBP.i1745 = bitcast %union.anon* %5099 to i64*
  %5100 = load i64, i64* %RBP.i1745
  %5101 = sub i64 %5100, 40
  %5102 = load i64, i64* %PC.i1743
  %5103 = add i64 %5102, 4
  store i64 %5103, i64* %PC.i1743
  %5104 = inttoptr i64 %5101 to i32*
  %5105 = load i32, i32* %5104
  %5106 = sext i32 %5105 to i64
  store i64 %5106, i64* %RCX.i1744, align 8
  store %struct.Memory* %loadMem_4b0a62, %struct.Memory** %MEMORY
  %loadMem_4b0a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 33
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %PC.i1740 = bitcast %union.anon* %5109 to i64*
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5111 = getelementptr inbounds %struct.GPR, %struct.GPR* %5110, i32 0, i32 1
  %5112 = getelementptr inbounds %struct.Reg, %struct.Reg* %5111, i32 0, i32 0
  %RAX.i1741 = bitcast %union.anon* %5112 to i64*
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 5
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %RCX.i1742 = bitcast %union.anon* %5115 to i64*
  %5116 = load i64, i64* %RAX.i1741
  %5117 = load i64, i64* %RCX.i1742
  %5118 = mul i64 %5117, 4
  %5119 = add i64 %5118, %5116
  %5120 = load i64, i64* %PC.i1740
  %5121 = add i64 %5120, 7
  store i64 %5121, i64* %PC.i1740
  %5122 = inttoptr i64 %5119 to i32*
  store i32 0, i32* %5122
  store %struct.Memory* %loadMem_4b0a66, %struct.Memory** %MEMORY
  %loadMem_4b0a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5124 = getelementptr inbounds %struct.GPR, %struct.GPR* %5123, i32 0, i32 33
  %5125 = getelementptr inbounds %struct.Reg, %struct.Reg* %5124, i32 0, i32 0
  %PC.i1739 = bitcast %union.anon* %5125 to i64*
  %5126 = load i64, i64* %PC.i1739
  %5127 = add i64 %5126, 564
  %5128 = load i64, i64* %PC.i1739
  %5129 = add i64 %5128, 5
  store i64 %5129, i64* %PC.i1739
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5127, i64* %5130, align 8
  store %struct.Memory* %loadMem_4b0a6d, %struct.Memory** %MEMORY
  br label %block_.L_4b0ca1

block_.L_4b0a72:                                  ; preds = %block_4b09ae
  %loadMem_4b0a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5132 = getelementptr inbounds %struct.GPR, %struct.GPR* %5131, i32 0, i32 33
  %5133 = getelementptr inbounds %struct.Reg, %struct.Reg* %5132, i32 0, i32 0
  %PC.i1737 = bitcast %union.anon* %5133 to i64*
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5135 = getelementptr inbounds %struct.GPR, %struct.GPR* %5134, i32 0, i32 1
  %5136 = getelementptr inbounds %struct.Reg, %struct.Reg* %5135, i32 0, i32 0
  %RAX.i1738 = bitcast %union.anon* %5136 to i64*
  %5137 = load i64, i64* %PC.i1737
  %5138 = add i64 %5137, 5
  store i64 %5138, i64* %PC.i1737
  store i64 2, i64* %RAX.i1738, align 8
  store %struct.Memory* %loadMem_4b0a72, %struct.Memory** %MEMORY
  %loadMem_4b0a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 33
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %PC.i1734 = bitcast %union.anon* %5141 to i64*
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5143 = getelementptr inbounds %struct.GPR, %struct.GPR* %5142, i32 0, i32 5
  %5144 = getelementptr inbounds %struct.Reg, %struct.Reg* %5143, i32 0, i32 0
  %RCX.i1735 = bitcast %union.anon* %5144 to i64*
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5146 = getelementptr inbounds %struct.GPR, %struct.GPR* %5145, i32 0, i32 15
  %5147 = getelementptr inbounds %struct.Reg, %struct.Reg* %5146, i32 0, i32 0
  %RBP.i1736 = bitcast %union.anon* %5147 to i64*
  %5148 = load i64, i64* %RBP.i1736
  %5149 = sub i64 %5148, 35412
  %5150 = load i64, i64* %PC.i1734
  %5151 = add i64 %5150, 6
  store i64 %5151, i64* %PC.i1734
  %5152 = inttoptr i64 %5149 to i32*
  %5153 = load i32, i32* %5152
  %5154 = zext i32 %5153 to i64
  store i64 %5154, i64* %RCX.i1735, align 8
  store %struct.Memory* %loadMem_4b0a77, %struct.Memory** %MEMORY
  %loadMem_4b0a7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5156 = getelementptr inbounds %struct.GPR, %struct.GPR* %5155, i32 0, i32 33
  %5157 = getelementptr inbounds %struct.Reg, %struct.Reg* %5156, i32 0, i32 0
  %PC.i1731 = bitcast %union.anon* %5157 to i64*
  %5158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5159 = getelementptr inbounds %struct.GPR, %struct.GPR* %5158, i32 0, i32 1
  %5160 = getelementptr inbounds %struct.Reg, %struct.Reg* %5159, i32 0, i32 0
  %EAX.i1732 = bitcast %union.anon* %5160 to i32*
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5162 = getelementptr inbounds %struct.GPR, %struct.GPR* %5161, i32 0, i32 15
  %5163 = getelementptr inbounds %struct.Reg, %struct.Reg* %5162, i32 0, i32 0
  %RBP.i1733 = bitcast %union.anon* %5163 to i64*
  %5164 = load i64, i64* %RBP.i1733
  %5165 = sub i64 %5164, 35448
  %5166 = load i32, i32* %EAX.i1732
  %5167 = zext i32 %5166 to i64
  %5168 = load i64, i64* %PC.i1731
  %5169 = add i64 %5168, 6
  store i64 %5169, i64* %PC.i1731
  %5170 = inttoptr i64 %5165 to i32*
  store i32 %5166, i32* %5170
  store %struct.Memory* %loadMem_4b0a7d, %struct.Memory** %MEMORY
  %loadMem_4b0a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5172 = getelementptr inbounds %struct.GPR, %struct.GPR* %5171, i32 0, i32 33
  %5173 = getelementptr inbounds %struct.Reg, %struct.Reg* %5172, i32 0, i32 0
  %PC.i1728 = bitcast %union.anon* %5173 to i64*
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5175 = getelementptr inbounds %struct.GPR, %struct.GPR* %5174, i32 0, i32 5
  %5176 = getelementptr inbounds %struct.Reg, %struct.Reg* %5175, i32 0, i32 0
  %ECX.i1729 = bitcast %union.anon* %5176 to i32*
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5178 = getelementptr inbounds %struct.GPR, %struct.GPR* %5177, i32 0, i32 1
  %5179 = getelementptr inbounds %struct.Reg, %struct.Reg* %5178, i32 0, i32 0
  %RAX.i1730 = bitcast %union.anon* %5179 to i64*
  %5180 = load i32, i32* %ECX.i1729
  %5181 = zext i32 %5180 to i64
  %5182 = load i64, i64* %PC.i1728
  %5183 = add i64 %5182, 2
  store i64 %5183, i64* %PC.i1728
  %5184 = and i64 %5181, 4294967295
  store i64 %5184, i64* %RAX.i1730, align 8
  store %struct.Memory* %loadMem_4b0a83, %struct.Memory** %MEMORY
  %loadMem_4b0a85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 33
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %PC.i1727 = bitcast %union.anon* %5187 to i64*
  %5188 = load i64, i64* %PC.i1727
  %5189 = add i64 %5188, 1
  store i64 %5189, i64* %PC.i1727
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5192 = bitcast %union.anon* %5191 to i32*
  %5193 = load i32, i32* %5192, align 8
  %5194 = sext i32 %5193 to i64
  %5195 = lshr i64 %5194, 32
  store i64 %5195, i64* %5190, align 8
  store %struct.Memory* %loadMem_4b0a85, %struct.Memory** %MEMORY
  %loadMem_4b0a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5197 = getelementptr inbounds %struct.GPR, %struct.GPR* %5196, i32 0, i32 33
  %5198 = getelementptr inbounds %struct.Reg, %struct.Reg* %5197, i32 0, i32 0
  %PC.i1724 = bitcast %union.anon* %5198 to i64*
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 5
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %RCX.i1725 = bitcast %union.anon* %5201 to i64*
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5203 = getelementptr inbounds %struct.GPR, %struct.GPR* %5202, i32 0, i32 15
  %5204 = getelementptr inbounds %struct.Reg, %struct.Reg* %5203, i32 0, i32 0
  %RBP.i1726 = bitcast %union.anon* %5204 to i64*
  %5205 = load i64, i64* %RBP.i1726
  %5206 = sub i64 %5205, 35448
  %5207 = load i64, i64* %PC.i1724
  %5208 = add i64 %5207, 6
  store i64 %5208, i64* %PC.i1724
  %5209 = inttoptr i64 %5206 to i32*
  %5210 = load i32, i32* %5209
  %5211 = zext i32 %5210 to i64
  store i64 %5211, i64* %RCX.i1725, align 8
  store %struct.Memory* %loadMem_4b0a86, %struct.Memory** %MEMORY
  %loadMem_4b0a8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5213 = getelementptr inbounds %struct.GPR, %struct.GPR* %5212, i32 0, i32 33
  %5214 = getelementptr inbounds %struct.Reg, %struct.Reg* %5213, i32 0, i32 0
  %PC.i1720 = bitcast %union.anon* %5214 to i64*
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5216 = getelementptr inbounds %struct.GPR, %struct.GPR* %5215, i32 0, i32 5
  %5217 = getelementptr inbounds %struct.Reg, %struct.Reg* %5216, i32 0, i32 0
  %ECX.i1721 = bitcast %union.anon* %5217 to i32*
  %5218 = load i32, i32* %ECX.i1721
  %5219 = zext i32 %5218 to i64
  %5220 = load i64, i64* %PC.i1720
  %5221 = add i64 %5220, 2
  store i64 %5221, i64* %PC.i1720
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5223 = bitcast %union.anon* %5222 to i32*
  %5224 = load i32, i32* %5223, align 8
  %5225 = zext i32 %5224 to i64
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5227 = bitcast %union.anon* %5226 to i32*
  %5228 = load i32, i32* %5227, align 8
  %5229 = zext i32 %5228 to i64
  %5230 = shl i64 %5219, 32
  %5231 = ashr exact i64 %5230, 32
  %5232 = shl i64 %5229, 32
  %5233 = or i64 %5232, %5225
  %5234 = sdiv i64 %5233, %5231
  %5235 = shl i64 %5234, 32
  %5236 = ashr exact i64 %5235, 32
  %5237 = icmp eq i64 %5234, %5236
  br i1 %5237, label %5242, label %5238

; <label>:5238:                                   ; preds = %block_.L_4b0a72
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5240 = load i64, i64* %5239, align 8
  %5241 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5240, %struct.Memory* %loadMem_4b0a8c)
  br label %routine_idivl__ecx.exit

; <label>:5242:                                   ; preds = %block_.L_4b0a72
  %5243 = srem i64 %5233, %5231
  %5244 = getelementptr inbounds %union.anon, %union.anon* %5222, i64 0, i32 0
  %5245 = and i64 %5234, 4294967295
  store i64 %5245, i64* %5244, align 8
  %5246 = getelementptr inbounds %union.anon, %union.anon* %5226, i64 0, i32 0
  %5247 = and i64 %5243, 4294967295
  store i64 %5247, i64* %5246, align 8
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5248, align 1
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5249, align 1
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5250, align 1
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5251, align 1
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5252, align 1
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5253, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %5238, %5242
  %5254 = phi %struct.Memory* [ %5241, %5238 ], [ %loadMem_4b0a8c, %5242 ]
  store %struct.Memory* %5254, %struct.Memory** %MEMORY
  %loadMem_4b0a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 33
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %PC.i1717 = bitcast %union.anon* %5257 to i64*
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 1
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %EAX.i1718 = bitcast %union.anon* %5260 to i32*
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 11
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %RDI.i1719 = bitcast %union.anon* %5263 to i64*
  %5264 = load i32, i32* %EAX.i1718
  %5265 = zext i32 %5264 to i64
  %5266 = load i64, i64* %PC.i1717
  %5267 = add i64 %5266, 2
  store i64 %5267, i64* %PC.i1717
  %5268 = and i64 %5265, 4294967295
  store i64 %5268, i64* %RDI.i1719, align 8
  store %struct.Memory* %loadMem_4b0a8e, %struct.Memory** %MEMORY
  %loadMem1_4b0a90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5270 = getelementptr inbounds %struct.GPR, %struct.GPR* %5269, i32 0, i32 33
  %5271 = getelementptr inbounds %struct.Reg, %struct.Reg* %5270, i32 0, i32 0
  %PC.i1716 = bitcast %union.anon* %5271 to i64*
  %5272 = load i64, i64* %PC.i1716
  %5273 = add i64 %5272, -719504
  %5274 = load i64, i64* %PC.i1716
  %5275 = add i64 %5274, 5
  %5276 = load i64, i64* %PC.i1716
  %5277 = add i64 %5276, 5
  store i64 %5277, i64* %PC.i1716
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5279 = load i64, i64* %5278, align 8
  %5280 = add i64 %5279, -8
  %5281 = inttoptr i64 %5280 to i64*
  store i64 %5275, i64* %5281
  store i64 %5280, i64* %5278, align 8
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5273, i64* %5282, align 8
  store %struct.Memory* %loadMem1_4b0a90, %struct.Memory** %MEMORY
  %loadMem2_4b0a90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4b0a90 = load i64, i64* %3
  %5283 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %loadMem2_4b0a90)
  store %struct.Memory* %5283, %struct.Memory** %MEMORY
  %loadMem_4b0a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5285 = getelementptr inbounds %struct.GPR, %struct.GPR* %5284, i32 0, i32 33
  %5286 = getelementptr inbounds %struct.Reg, %struct.Reg* %5285, i32 0, i32 0
  %PC.i1711 = bitcast %union.anon* %5286 to i64*
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5288 = getelementptr inbounds %struct.GPR, %struct.GPR* %5287, i32 0, i32 1
  %5289 = getelementptr inbounds %struct.Reg, %struct.Reg* %5288, i32 0, i32 0
  %RAX.i1712 = bitcast %union.anon* %5289 to i64*
  %5290 = load i64, i64* %RAX.i1712
  %5291 = load i64, i64* %PC.i1711
  %5292 = add i64 %5291, 5
  store i64 %5292, i64* %PC.i1711
  %5293 = trunc i64 %5290 to i32
  %5294 = add i32 16384, %5293
  %5295 = zext i32 %5294 to i64
  store i64 %5295, i64* %RAX.i1712, align 8
  %5296 = icmp ult i32 %5294, %5293
  %5297 = icmp ult i32 %5294, 16384
  %5298 = or i1 %5296, %5297
  %5299 = zext i1 %5298 to i8
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5299, i8* %5300, align 1
  %5301 = and i32 %5294, 255
  %5302 = call i32 @llvm.ctpop.i32(i32 %5301)
  %5303 = trunc i32 %5302 to i8
  %5304 = and i8 %5303, 1
  %5305 = xor i8 %5304, 1
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5305, i8* %5306, align 1
  %5307 = xor i64 16384, %5290
  %5308 = trunc i64 %5307 to i32
  %5309 = xor i32 %5308, %5294
  %5310 = lshr i32 %5309, 4
  %5311 = trunc i32 %5310 to i8
  %5312 = and i8 %5311, 1
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5312, i8* %5313, align 1
  %5314 = icmp eq i32 %5294, 0
  %5315 = zext i1 %5314 to i8
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5315, i8* %5316, align 1
  %5317 = lshr i32 %5294, 31
  %5318 = trunc i32 %5317 to i8
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5318, i8* %5319, align 1
  %5320 = lshr i32 %5293, 31
  %5321 = xor i32 %5317, %5320
  %5322 = add i32 %5321, %5317
  %5323 = icmp eq i32 %5322, 2
  %5324 = zext i1 %5323 to i8
  %5325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5324, i8* %5325, align 1
  store %struct.Memory* %loadMem_4b0a95, %struct.Memory** %MEMORY
  %loadMem_4b0a9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5327 = getelementptr inbounds %struct.GPR, %struct.GPR* %5326, i32 0, i32 33
  %5328 = getelementptr inbounds %struct.Reg, %struct.Reg* %5327, i32 0, i32 0
  %PC.i1710 = bitcast %union.anon* %5328 to i64*
  %5329 = load i64, i64* %PC.i1710
  %5330 = add i64 %5329, 1
  store i64 %5330, i64* %PC.i1710
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5333 = bitcast %union.anon* %5332 to i32*
  %5334 = load i32, i32* %5333, align 8
  %5335 = sext i32 %5334 to i64
  %5336 = lshr i64 %5335, 32
  store i64 %5336, i64* %5331, align 8
  store %struct.Memory* %loadMem_4b0a9a, %struct.Memory** %MEMORY
  %loadMem_4b0a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 33
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %PC.i1706 = bitcast %union.anon* %5339 to i64*
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5341 = getelementptr inbounds %struct.GPR, %struct.GPR* %5340, i32 0, i32 15
  %5342 = getelementptr inbounds %struct.Reg, %struct.Reg* %5341, i32 0, i32 0
  %RBP.i1707 = bitcast %union.anon* %5342 to i64*
  %5343 = load i64, i64* %RBP.i1707
  %5344 = sub i64 %5343, 35412
  %5345 = load i64, i64* %PC.i1706
  %5346 = add i64 %5345, 6
  store i64 %5346, i64* %PC.i1706
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5348 = bitcast %union.anon* %5347 to i32*
  %5349 = load i32, i32* %5348, align 8
  %5350 = zext i32 %5349 to i64
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5352 = bitcast %union.anon* %5351 to i32*
  %5353 = load i32, i32* %5352, align 8
  %5354 = zext i32 %5353 to i64
  %5355 = inttoptr i64 %5344 to i32*
  %5356 = load i32, i32* %5355
  %5357 = sext i32 %5356 to i64
  %5358 = shl i64 %5354, 32
  %5359 = or i64 %5358, %5350
  %5360 = sdiv i64 %5359, %5357
  %5361 = shl i64 %5360, 32
  %5362 = ashr exact i64 %5361, 32
  %5363 = icmp eq i64 %5360, %5362
  br i1 %5363, label %5368, label %5364

; <label>:5364:                                   ; preds = %routine_idivl__ecx.exit
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5366 = load i64, i64* %5365, align 8
  %5367 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5366, %struct.Memory* %loadMem_4b0a9b)
  br label %routine_idivl_MINUS0x8a54__rbp_.exit

; <label>:5368:                                   ; preds = %routine_idivl__ecx.exit
  %5369 = srem i64 %5359, %5357
  %5370 = getelementptr inbounds %union.anon, %union.anon* %5347, i64 0, i32 0
  %5371 = and i64 %5360, 4294967295
  store i64 %5371, i64* %5370, align 8
  %5372 = getelementptr inbounds %union.anon, %union.anon* %5351, i64 0, i32 0
  %5373 = and i64 %5369, 4294967295
  store i64 %5373, i64* %5372, align 8
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5374, align 1
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5375, align 1
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5376, align 1
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5377, align 1
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5378, align 1
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5379, align 1
  br label %routine_idivl_MINUS0x8a54__rbp_.exit

routine_idivl_MINUS0x8a54__rbp_.exit:             ; preds = %5364, %5368
  %5380 = phi %struct.Memory* [ %5367, %5364 ], [ %loadMem_4b0a9b, %5368 ]
  store %struct.Memory* %5380, %struct.Memory** %MEMORY
  %loadMem_4b0aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5382 = getelementptr inbounds %struct.GPR, %struct.GPR* %5381, i32 0, i32 33
  %5383 = getelementptr inbounds %struct.Reg, %struct.Reg* %5382, i32 0, i32 0
  %PC.i1703 = bitcast %union.anon* %5383 to i64*
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 1
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %EAX.i1704 = bitcast %union.anon* %5386 to i32*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 15
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %RBP.i1705 = bitcast %union.anon* %5389 to i64*
  %5390 = load i64, i64* %RBP.i1705
  %5391 = sub i64 %5390, 20
  %5392 = load i32, i32* %EAX.i1704
  %5393 = zext i32 %5392 to i64
  %5394 = load i64, i64* %PC.i1703
  %5395 = add i64 %5394, 3
  store i64 %5395, i64* %PC.i1703
  %5396 = inttoptr i64 %5391 to i32*
  store i32 %5392, i32* %5396
  store %struct.Memory* %loadMem_4b0aa1, %struct.Memory** %MEMORY
  %loadMem_4b0aa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5398 = getelementptr inbounds %struct.GPR, %struct.GPR* %5397, i32 0, i32 33
  %5399 = getelementptr inbounds %struct.Reg, %struct.Reg* %5398, i32 0, i32 0
  %PC.i1700 = bitcast %union.anon* %5399 to i64*
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 1
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %RAX.i1701 = bitcast %union.anon* %5402 to i64*
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 15
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %RBP.i1702 = bitcast %union.anon* %5405 to i64*
  %5406 = load i64, i64* %RBP.i1702
  %5407 = sub i64 %5406, 20
  %5408 = load i64, i64* %PC.i1700
  %5409 = add i64 %5408, 3
  store i64 %5409, i64* %PC.i1700
  %5410 = inttoptr i64 %5407 to i32*
  %5411 = load i32, i32* %5410
  %5412 = zext i32 %5411 to i64
  store i64 %5412, i64* %RAX.i1701, align 8
  store %struct.Memory* %loadMem_4b0aa4, %struct.Memory** %MEMORY
  %loadMem_4b0aa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5414 = getelementptr inbounds %struct.GPR, %struct.GPR* %5413, i32 0, i32 33
  %5415 = getelementptr inbounds %struct.Reg, %struct.Reg* %5414, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %5415 to i64*
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5417 = getelementptr inbounds %struct.GPR, %struct.GPR* %5416, i32 0, i32 1
  %5418 = getelementptr inbounds %struct.Reg, %struct.Reg* %5417, i32 0, i32 0
  %RAX.i1698 = bitcast %union.anon* %5418 to i64*
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5420 = getelementptr inbounds %struct.GPR, %struct.GPR* %5419, i32 0, i32 15
  %5421 = getelementptr inbounds %struct.Reg, %struct.Reg* %5420, i32 0, i32 0
  %RBP.i1699 = bitcast %union.anon* %5421 to i64*
  %5422 = load i64, i64* %RAX.i1698
  %5423 = load i64, i64* %RBP.i1699
  %5424 = sub i64 %5423, 35416
  %5425 = load i64, i64* %PC.i1697
  %5426 = add i64 %5425, 7
  store i64 %5426, i64* %PC.i1697
  %5427 = inttoptr i64 %5424 to i32*
  %5428 = load i32, i32* %5427
  %5429 = shl i64 %5422, 32
  %5430 = ashr exact i64 %5429, 32
  %5431 = sext i32 %5428 to i64
  %5432 = mul i64 %5431, %5430
  %5433 = trunc i64 %5432 to i32
  %5434 = and i64 %5432, 4294967295
  store i64 %5434, i64* %RAX.i1698, align 8
  %5435 = shl i64 %5432, 32
  %5436 = ashr exact i64 %5435, 32
  %5437 = icmp ne i64 %5436, %5432
  %5438 = zext i1 %5437 to i8
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5438, i8* %5439, align 1
  %5440 = and i32 %5433, 255
  %5441 = call i32 @llvm.ctpop.i32(i32 %5440)
  %5442 = trunc i32 %5441 to i8
  %5443 = and i8 %5442, 1
  %5444 = xor i8 %5443, 1
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5444, i8* %5445, align 1
  %5446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5446, align 1
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5447, align 1
  %5448 = lshr i32 %5433, 31
  %5449 = trunc i32 %5448 to i8
  %5450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5449, i8* %5450, align 1
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5438, i8* %5451, align 1
  store %struct.Memory* %loadMem_4b0aa7, %struct.Memory** %MEMORY
  %loadMem_4b0aae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 33
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %PC.i1695 = bitcast %union.anon* %5454 to i64*
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 1
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %RAX.i1696 = bitcast %union.anon* %5457 to i64*
  %5458 = load i64, i64* %RAX.i1696
  %5459 = load i64, i64* %PC.i1695
  %5460 = add i64 %5459, 3
  store i64 %5460, i64* %PC.i1695
  %5461 = trunc i64 %5458 to i32
  %5462 = add i32 32, %5461
  %5463 = zext i32 %5462 to i64
  store i64 %5463, i64* %RAX.i1696, align 8
  %5464 = icmp ult i32 %5462, %5461
  %5465 = icmp ult i32 %5462, 32
  %5466 = or i1 %5464, %5465
  %5467 = zext i1 %5466 to i8
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5467, i8* %5468, align 1
  %5469 = and i32 %5462, 255
  %5470 = call i32 @llvm.ctpop.i32(i32 %5469)
  %5471 = trunc i32 %5470 to i8
  %5472 = and i8 %5471, 1
  %5473 = xor i8 %5472, 1
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5473, i8* %5474, align 1
  %5475 = xor i64 32, %5458
  %5476 = trunc i64 %5475 to i32
  %5477 = xor i32 %5476, %5462
  %5478 = lshr i32 %5477, 4
  %5479 = trunc i32 %5478 to i8
  %5480 = and i8 %5479, 1
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5480, i8* %5481, align 1
  %5482 = icmp eq i32 %5462, 0
  %5483 = zext i1 %5482 to i8
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5483, i8* %5484, align 1
  %5485 = lshr i32 %5462, 31
  %5486 = trunc i32 %5485 to i8
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5486, i8* %5487, align 1
  %5488 = lshr i32 %5461, 31
  %5489 = xor i32 %5485, %5488
  %5490 = add i32 %5489, %5485
  %5491 = icmp eq i32 %5490, 2
  %5492 = zext i1 %5491 to i8
  %5493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5492, i8* %5493, align 1
  store %struct.Memory* %loadMem_4b0aae, %struct.Memory** %MEMORY
  %loadMem_4b0ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5495 = getelementptr inbounds %struct.GPR, %struct.GPR* %5494, i32 0, i32 33
  %5496 = getelementptr inbounds %struct.Reg, %struct.Reg* %5495, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %5496 to i64*
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 1
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %RAX.i1694 = bitcast %union.anon* %5499 to i64*
  %5500 = load i64, i64* %RAX.i1694
  %5501 = load i64, i64* %PC.i1693
  %5502 = add i64 %5501, 3
  store i64 %5502, i64* %PC.i1693
  %5503 = shl i64 %5500, 32
  %5504 = ashr exact i64 %5503, 32
  %5505 = ashr i64 %5504, 5
  %5506 = lshr i64 %5505, 1
  %5507 = trunc i64 %5505 to i8
  %5508 = and i8 %5507, 1
  %5509 = trunc i64 %5506 to i32
  %5510 = and i64 %5506, 4294967295
  store i64 %5510, i64* %RAX.i1694, align 8
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5508, i8* %5511, align 1
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5513 = and i32 %5509, 255
  %5514 = call i32 @llvm.ctpop.i32(i32 %5513)
  %5515 = trunc i32 %5514 to i8
  %5516 = and i8 %5515, 1
  %5517 = xor i8 %5516, 1
  store i8 %5517, i8* %5512, align 1
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5518, align 1
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5520 = icmp eq i32 %5509, 0
  %5521 = zext i1 %5520 to i8
  store i8 %5521, i8* %5519, align 1
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5523 = lshr i32 %5509, 31
  %5524 = trunc i32 %5523 to i8
  store i8 %5524, i8* %5522, align 1
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5525, align 1
  store %struct.Memory* %loadMem_4b0ab1, %struct.Memory** %MEMORY
  %loadMem_4b0ab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5527 = getelementptr inbounds %struct.GPR, %struct.GPR* %5526, i32 0, i32 33
  %5528 = getelementptr inbounds %struct.Reg, %struct.Reg* %5527, i32 0, i32 0
  %PC.i1691 = bitcast %union.anon* %5528 to i64*
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5530 = getelementptr inbounds %struct.GPR, %struct.GPR* %5529, i32 0, i32 1
  %5531 = getelementptr inbounds %struct.Reg, %struct.Reg* %5530, i32 0, i32 0
  %EAX.i1692 = bitcast %union.anon* %5531 to i32*
  %5532 = load i32, i32* %EAX.i1692
  %5533 = zext i32 %5532 to i64
  %5534 = load i64, i64* %PC.i1691
  %5535 = add i64 %5534, 5
  store i64 %5535, i64* %PC.i1691
  %5536 = sub i32 %5532, -1024
  %5537 = icmp ult i32 %5532, -1024
  %5538 = zext i1 %5537 to i8
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5538, i8* %5539, align 1
  %5540 = and i32 %5536, 255
  %5541 = call i32 @llvm.ctpop.i32(i32 %5540)
  %5542 = trunc i32 %5541 to i8
  %5543 = and i8 %5542, 1
  %5544 = xor i8 %5543, 1
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5544, i8* %5545, align 1
  %5546 = xor i64 -1024, %5533
  %5547 = trunc i64 %5546 to i32
  %5548 = xor i32 %5547, %5536
  %5549 = lshr i32 %5548, 4
  %5550 = trunc i32 %5549 to i8
  %5551 = and i8 %5550, 1
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5551, i8* %5552, align 1
  %5553 = icmp eq i32 %5536, 0
  %5554 = zext i1 %5553 to i8
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5554, i8* %5555, align 1
  %5556 = lshr i32 %5536, 31
  %5557 = trunc i32 %5556 to i8
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5557, i8* %5558, align 1
  %5559 = lshr i32 %5532, 31
  %5560 = xor i32 1, %5559
  %5561 = xor i32 %5556, %5559
  %5562 = add i32 %5561, %5560
  %5563 = icmp eq i32 %5562, 2
  %5564 = zext i1 %5563 to i8
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5564, i8* %5565, align 1
  store %struct.Memory* %loadMem_4b0ab4, %struct.Memory** %MEMORY
  %loadMem_4b0ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5567 = getelementptr inbounds %struct.GPR, %struct.GPR* %5566, i32 0, i32 33
  %5568 = getelementptr inbounds %struct.Reg, %struct.Reg* %5567, i32 0, i32 0
  %PC.i1690 = bitcast %union.anon* %5568 to i64*
  %5569 = load i64, i64* %PC.i1690
  %5570 = add i64 %5569, 22
  %5571 = load i64, i64* %PC.i1690
  %5572 = add i64 %5571, 6
  %5573 = load i64, i64* %PC.i1690
  %5574 = add i64 %5573, 6
  store i64 %5574, i64* %PC.i1690
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5576 = load i8, i8* %5575, align 1
  %5577 = icmp ne i8 %5576, 0
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5579 = load i8, i8* %5578, align 1
  %5580 = icmp ne i8 %5579, 0
  %5581 = xor i1 %5577, %5580
  %5582 = xor i1 %5581, true
  %5583 = zext i1 %5582 to i8
  store i8 %5583, i8* %BRANCH_TAKEN, align 1
  %5584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5585 = select i1 %5581, i64 %5572, i64 %5570
  store i64 %5585, i64* %5584, align 8
  store %struct.Memory* %loadMem_4b0ab9, %struct.Memory** %MEMORY
  %loadBr_4b0ab9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0ab9 = icmp eq i8 %loadBr_4b0ab9, 1
  br i1 %cmpBr_4b0ab9, label %block_.L_4b0acf, label %block_4b0abf

block_4b0abf:                                     ; preds = %routine_idivl_MINUS0x8a54__rbp_.exit
  %loadMem_4b0abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5587 = getelementptr inbounds %struct.GPR, %struct.GPR* %5586, i32 0, i32 33
  %5588 = getelementptr inbounds %struct.Reg, %struct.Reg* %5587, i32 0, i32 0
  %PC.i1688 = bitcast %union.anon* %5588 to i64*
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5590 = getelementptr inbounds %struct.GPR, %struct.GPR* %5589, i32 0, i32 1
  %5591 = getelementptr inbounds %struct.Reg, %struct.Reg* %5590, i32 0, i32 0
  %RAX.i1689 = bitcast %union.anon* %5591 to i64*
  %5592 = load i64, i64* %PC.i1688
  %5593 = add i64 %5592, 5
  store i64 %5593, i64* %PC.i1688
  store i64 4294966272, i64* %RAX.i1689, align 8
  store %struct.Memory* %loadMem_4b0abf, %struct.Memory** %MEMORY
  %loadMem_4b0ac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5595 = getelementptr inbounds %struct.GPR, %struct.GPR* %5594, i32 0, i32 33
  %5596 = getelementptr inbounds %struct.Reg, %struct.Reg* %5595, i32 0, i32 0
  %PC.i1685 = bitcast %union.anon* %5596 to i64*
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 1
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %EAX.i1686 = bitcast %union.anon* %5599 to i32*
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 15
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %RBP.i1687 = bitcast %union.anon* %5602 to i64*
  %5603 = load i64, i64* %RBP.i1687
  %5604 = sub i64 %5603, 35452
  %5605 = load i32, i32* %EAX.i1686
  %5606 = zext i32 %5605 to i64
  %5607 = load i64, i64* %PC.i1685
  %5608 = add i64 %5607, 6
  store i64 %5608, i64* %PC.i1685
  %5609 = inttoptr i64 %5604 to i32*
  store i32 %5605, i32* %5609
  store %struct.Memory* %loadMem_4b0ac4, %struct.Memory** %MEMORY
  %loadMem_4b0aca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5611 = getelementptr inbounds %struct.GPR, %struct.GPR* %5610, i32 0, i32 33
  %5612 = getelementptr inbounds %struct.Reg, %struct.Reg* %5611, i32 0, i32 0
  %PC.i1684 = bitcast %union.anon* %5612 to i64*
  %5613 = load i64, i64* %PC.i1684
  %5614 = add i64 %5613, 82
  %5615 = load i64, i64* %PC.i1684
  %5616 = add i64 %5615, 5
  store i64 %5616, i64* %PC.i1684
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5614, i64* %5617, align 8
  store %struct.Memory* %loadMem_4b0aca, %struct.Memory** %MEMORY
  br label %block_.L_4b0b1c

block_.L_4b0acf:                                  ; preds = %routine_idivl_MINUS0x8a54__rbp_.exit
  %loadMem_4b0acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5619 = getelementptr inbounds %struct.GPR, %struct.GPR* %5618, i32 0, i32 33
  %5620 = getelementptr inbounds %struct.Reg, %struct.Reg* %5619, i32 0, i32 0
  %PC.i1681 = bitcast %union.anon* %5620 to i64*
  %5621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5622 = getelementptr inbounds %struct.GPR, %struct.GPR* %5621, i32 0, i32 1
  %5623 = getelementptr inbounds %struct.Reg, %struct.Reg* %5622, i32 0, i32 0
  %RAX.i1682 = bitcast %union.anon* %5623 to i64*
  %5624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5625 = getelementptr inbounds %struct.GPR, %struct.GPR* %5624, i32 0, i32 15
  %5626 = getelementptr inbounds %struct.Reg, %struct.Reg* %5625, i32 0, i32 0
  %RBP.i1683 = bitcast %union.anon* %5626 to i64*
  %5627 = load i64, i64* %RBP.i1683
  %5628 = sub i64 %5627, 20
  %5629 = load i64, i64* %PC.i1681
  %5630 = add i64 %5629, 3
  store i64 %5630, i64* %PC.i1681
  %5631 = inttoptr i64 %5628 to i32*
  %5632 = load i32, i32* %5631
  %5633 = zext i32 %5632 to i64
  store i64 %5633, i64* %RAX.i1682, align 8
  store %struct.Memory* %loadMem_4b0acf, %struct.Memory** %MEMORY
  %loadMem_4b0ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5635 = getelementptr inbounds %struct.GPR, %struct.GPR* %5634, i32 0, i32 33
  %5636 = getelementptr inbounds %struct.Reg, %struct.Reg* %5635, i32 0, i32 0
  %PC.i1678 = bitcast %union.anon* %5636 to i64*
  %5637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5638 = getelementptr inbounds %struct.GPR, %struct.GPR* %5637, i32 0, i32 1
  %5639 = getelementptr inbounds %struct.Reg, %struct.Reg* %5638, i32 0, i32 0
  %RAX.i1679 = bitcast %union.anon* %5639 to i64*
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5641 = getelementptr inbounds %struct.GPR, %struct.GPR* %5640, i32 0, i32 15
  %5642 = getelementptr inbounds %struct.Reg, %struct.Reg* %5641, i32 0, i32 0
  %RBP.i1680 = bitcast %union.anon* %5642 to i64*
  %5643 = load i64, i64* %RAX.i1679
  %5644 = load i64, i64* %RBP.i1680
  %5645 = sub i64 %5644, 35416
  %5646 = load i64, i64* %PC.i1678
  %5647 = add i64 %5646, 7
  store i64 %5647, i64* %PC.i1678
  %5648 = inttoptr i64 %5645 to i32*
  %5649 = load i32, i32* %5648
  %5650 = shl i64 %5643, 32
  %5651 = ashr exact i64 %5650, 32
  %5652 = sext i32 %5649 to i64
  %5653 = mul i64 %5652, %5651
  %5654 = trunc i64 %5653 to i32
  %5655 = and i64 %5653, 4294967295
  store i64 %5655, i64* %RAX.i1679, align 8
  %5656 = shl i64 %5653, 32
  %5657 = ashr exact i64 %5656, 32
  %5658 = icmp ne i64 %5657, %5653
  %5659 = zext i1 %5658 to i8
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5659, i8* %5660, align 1
  %5661 = and i32 %5654, 255
  %5662 = call i32 @llvm.ctpop.i32(i32 %5661)
  %5663 = trunc i32 %5662 to i8
  %5664 = and i8 %5663, 1
  %5665 = xor i8 %5664, 1
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5665, i8* %5666, align 1
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5667, align 1
  %5668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5668, align 1
  %5669 = lshr i32 %5654, 31
  %5670 = trunc i32 %5669 to i8
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5670, i8* %5671, align 1
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5659, i8* %5672, align 1
  store %struct.Memory* %loadMem_4b0ad2, %struct.Memory** %MEMORY
  %loadMem_4b0ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5674 = getelementptr inbounds %struct.GPR, %struct.GPR* %5673, i32 0, i32 33
  %5675 = getelementptr inbounds %struct.Reg, %struct.Reg* %5674, i32 0, i32 0
  %PC.i1676 = bitcast %union.anon* %5675 to i64*
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5677 = getelementptr inbounds %struct.GPR, %struct.GPR* %5676, i32 0, i32 1
  %5678 = getelementptr inbounds %struct.Reg, %struct.Reg* %5677, i32 0, i32 0
  %RAX.i1677 = bitcast %union.anon* %5678 to i64*
  %5679 = load i64, i64* %RAX.i1677
  %5680 = load i64, i64* %PC.i1676
  %5681 = add i64 %5680, 3
  store i64 %5681, i64* %PC.i1676
  %5682 = trunc i64 %5679 to i32
  %5683 = add i32 32, %5682
  %5684 = zext i32 %5683 to i64
  store i64 %5684, i64* %RAX.i1677, align 8
  %5685 = icmp ult i32 %5683, %5682
  %5686 = icmp ult i32 %5683, 32
  %5687 = or i1 %5685, %5686
  %5688 = zext i1 %5687 to i8
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5688, i8* %5689, align 1
  %5690 = and i32 %5683, 255
  %5691 = call i32 @llvm.ctpop.i32(i32 %5690)
  %5692 = trunc i32 %5691 to i8
  %5693 = and i8 %5692, 1
  %5694 = xor i8 %5693, 1
  %5695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5694, i8* %5695, align 1
  %5696 = xor i64 32, %5679
  %5697 = trunc i64 %5696 to i32
  %5698 = xor i32 %5697, %5683
  %5699 = lshr i32 %5698, 4
  %5700 = trunc i32 %5699 to i8
  %5701 = and i8 %5700, 1
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5701, i8* %5702, align 1
  %5703 = icmp eq i32 %5683, 0
  %5704 = zext i1 %5703 to i8
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5704, i8* %5705, align 1
  %5706 = lshr i32 %5683, 31
  %5707 = trunc i32 %5706 to i8
  %5708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5707, i8* %5708, align 1
  %5709 = lshr i32 %5682, 31
  %5710 = xor i32 %5706, %5709
  %5711 = add i32 %5710, %5706
  %5712 = icmp eq i32 %5711, 2
  %5713 = zext i1 %5712 to i8
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5713, i8* %5714, align 1
  store %struct.Memory* %loadMem_4b0ad9, %struct.Memory** %MEMORY
  %loadMem_4b0adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5716 = getelementptr inbounds %struct.GPR, %struct.GPR* %5715, i32 0, i32 33
  %5717 = getelementptr inbounds %struct.Reg, %struct.Reg* %5716, i32 0, i32 0
  %PC.i1674 = bitcast %union.anon* %5717 to i64*
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5719 = getelementptr inbounds %struct.GPR, %struct.GPR* %5718, i32 0, i32 1
  %5720 = getelementptr inbounds %struct.Reg, %struct.Reg* %5719, i32 0, i32 0
  %RAX.i1675 = bitcast %union.anon* %5720 to i64*
  %5721 = load i64, i64* %RAX.i1675
  %5722 = load i64, i64* %PC.i1674
  %5723 = add i64 %5722, 3
  store i64 %5723, i64* %PC.i1674
  %5724 = shl i64 %5721, 32
  %5725 = ashr exact i64 %5724, 32
  %5726 = ashr i64 %5725, 5
  %5727 = lshr i64 %5726, 1
  %5728 = trunc i64 %5726 to i8
  %5729 = and i8 %5728, 1
  %5730 = trunc i64 %5727 to i32
  %5731 = and i64 %5727, 4294967295
  store i64 %5731, i64* %RAX.i1675, align 8
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5729, i8* %5732, align 1
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5734 = and i32 %5730, 255
  %5735 = call i32 @llvm.ctpop.i32(i32 %5734)
  %5736 = trunc i32 %5735 to i8
  %5737 = and i8 %5736, 1
  %5738 = xor i8 %5737, 1
  store i8 %5738, i8* %5733, align 1
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5739, align 1
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5741 = icmp eq i32 %5730, 0
  %5742 = zext i1 %5741 to i8
  store i8 %5742, i8* %5740, align 1
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5744 = lshr i32 %5730, 31
  %5745 = trunc i32 %5744 to i8
  store i8 %5745, i8* %5743, align 1
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5746, align 1
  store %struct.Memory* %loadMem_4b0adc, %struct.Memory** %MEMORY
  %loadMem_4b0adf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5748 = getelementptr inbounds %struct.GPR, %struct.GPR* %5747, i32 0, i32 33
  %5749 = getelementptr inbounds %struct.Reg, %struct.Reg* %5748, i32 0, i32 0
  %PC.i1672 = bitcast %union.anon* %5749 to i64*
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 1
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %EAX.i1673 = bitcast %union.anon* %5752 to i32*
  %5753 = load i32, i32* %EAX.i1673
  %5754 = zext i32 %5753 to i64
  %5755 = load i64, i64* %PC.i1672
  %5756 = add i64 %5755, 5
  store i64 %5756, i64* %PC.i1672
  %5757 = sub i32 %5753, 1023
  %5758 = icmp ult i32 %5753, 1023
  %5759 = zext i1 %5758 to i8
  %5760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5759, i8* %5760, align 1
  %5761 = and i32 %5757, 255
  %5762 = call i32 @llvm.ctpop.i32(i32 %5761)
  %5763 = trunc i32 %5762 to i8
  %5764 = and i8 %5763, 1
  %5765 = xor i8 %5764, 1
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5765, i8* %5766, align 1
  %5767 = xor i64 1023, %5754
  %5768 = trunc i64 %5767 to i32
  %5769 = xor i32 %5768, %5757
  %5770 = lshr i32 %5769, 4
  %5771 = trunc i32 %5770 to i8
  %5772 = and i8 %5771, 1
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5772, i8* %5773, align 1
  %5774 = icmp eq i32 %5757, 0
  %5775 = zext i1 %5774 to i8
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5775, i8* %5776, align 1
  %5777 = lshr i32 %5757, 31
  %5778 = trunc i32 %5777 to i8
  %5779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5778, i8* %5779, align 1
  %5780 = lshr i32 %5753, 31
  %5781 = xor i32 %5777, %5780
  %5782 = add i32 %5781, %5780
  %5783 = icmp eq i32 %5782, 2
  %5784 = zext i1 %5783 to i8
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5784, i8* %5785, align 1
  store %struct.Memory* %loadMem_4b0adf, %struct.Memory** %MEMORY
  %loadMem_4b0ae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5787 = getelementptr inbounds %struct.GPR, %struct.GPR* %5786, i32 0, i32 33
  %5788 = getelementptr inbounds %struct.Reg, %struct.Reg* %5787, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %5788 to i64*
  %5789 = load i64, i64* %PC.i1671
  %5790 = add i64 %5789, 22
  %5791 = load i64, i64* %PC.i1671
  %5792 = add i64 %5791, 6
  %5793 = load i64, i64* %PC.i1671
  %5794 = add i64 %5793, 6
  store i64 %5794, i64* %PC.i1671
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5796 = load i8, i8* %5795, align 1
  %5797 = icmp ne i8 %5796, 0
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5799 = load i8, i8* %5798, align 1
  %5800 = icmp ne i8 %5799, 0
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5802 = load i8, i8* %5801, align 1
  %5803 = icmp ne i8 %5802, 0
  %5804 = xor i1 %5800, %5803
  %5805 = or i1 %5797, %5804
  %5806 = zext i1 %5805 to i8
  store i8 %5806, i8* %BRANCH_TAKEN, align 1
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5808 = select i1 %5805, i64 %5790, i64 %5792
  store i64 %5808, i64* %5807, align 8
  store %struct.Memory* %loadMem_4b0ae4, %struct.Memory** %MEMORY
  %loadBr_4b0ae4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0ae4 = icmp eq i8 %loadBr_4b0ae4, 1
  br i1 %cmpBr_4b0ae4, label %block_.L_4b0afa, label %block_4b0aea

block_4b0aea:                                     ; preds = %block_.L_4b0acf
  %loadMem_4b0aea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5810 = getelementptr inbounds %struct.GPR, %struct.GPR* %5809, i32 0, i32 33
  %5811 = getelementptr inbounds %struct.Reg, %struct.Reg* %5810, i32 0, i32 0
  %PC.i1669 = bitcast %union.anon* %5811 to i64*
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5813 = getelementptr inbounds %struct.GPR, %struct.GPR* %5812, i32 0, i32 1
  %5814 = getelementptr inbounds %struct.Reg, %struct.Reg* %5813, i32 0, i32 0
  %RAX.i1670 = bitcast %union.anon* %5814 to i64*
  %5815 = load i64, i64* %PC.i1669
  %5816 = add i64 %5815, 5
  store i64 %5816, i64* %PC.i1669
  store i64 1023, i64* %RAX.i1670, align 8
  store %struct.Memory* %loadMem_4b0aea, %struct.Memory** %MEMORY
  %loadMem_4b0aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 33
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %PC.i1666 = bitcast %union.anon* %5819 to i64*
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 1
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %EAX.i1667 = bitcast %union.anon* %5822 to i32*
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5824 = getelementptr inbounds %struct.GPR, %struct.GPR* %5823, i32 0, i32 15
  %5825 = getelementptr inbounds %struct.Reg, %struct.Reg* %5824, i32 0, i32 0
  %RBP.i1668 = bitcast %union.anon* %5825 to i64*
  %5826 = load i64, i64* %RBP.i1668
  %5827 = sub i64 %5826, 35456
  %5828 = load i32, i32* %EAX.i1667
  %5829 = zext i32 %5828 to i64
  %5830 = load i64, i64* %PC.i1666
  %5831 = add i64 %5830, 6
  store i64 %5831, i64* %PC.i1666
  %5832 = inttoptr i64 %5827 to i32*
  store i32 %5828, i32* %5832
  store %struct.Memory* %loadMem_4b0aef, %struct.Memory** %MEMORY
  %loadMem_4b0af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 33
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %5835 to i64*
  %5836 = load i64, i64* %PC.i1665
  %5837 = add i64 %5836, 27
  %5838 = load i64, i64* %PC.i1665
  %5839 = add i64 %5838, 5
  store i64 %5839, i64* %PC.i1665
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5837, i64* %5840, align 8
  store %struct.Memory* %loadMem_4b0af5, %struct.Memory** %MEMORY
  br label %block_.L_4b0b10

block_.L_4b0afa:                                  ; preds = %block_.L_4b0acf
  %loadMem_4b0afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5842 = getelementptr inbounds %struct.GPR, %struct.GPR* %5841, i32 0, i32 33
  %5843 = getelementptr inbounds %struct.Reg, %struct.Reg* %5842, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %5843 to i64*
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 1
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %RAX.i1663 = bitcast %union.anon* %5846 to i64*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 15
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %RBP.i1664 = bitcast %union.anon* %5849 to i64*
  %5850 = load i64, i64* %RBP.i1664
  %5851 = sub i64 %5850, 20
  %5852 = load i64, i64* %PC.i1662
  %5853 = add i64 %5852, 3
  store i64 %5853, i64* %PC.i1662
  %5854 = inttoptr i64 %5851 to i32*
  %5855 = load i32, i32* %5854
  %5856 = zext i32 %5855 to i64
  store i64 %5856, i64* %RAX.i1663, align 8
  store %struct.Memory* %loadMem_4b0afa, %struct.Memory** %MEMORY
  %loadMem_4b0afd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5858 = getelementptr inbounds %struct.GPR, %struct.GPR* %5857, i32 0, i32 33
  %5859 = getelementptr inbounds %struct.Reg, %struct.Reg* %5858, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %5859 to i64*
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 1
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %RAX.i1660 = bitcast %union.anon* %5862 to i64*
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 15
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %RBP.i1661 = bitcast %union.anon* %5865 to i64*
  %5866 = load i64, i64* %RAX.i1660
  %5867 = load i64, i64* %RBP.i1661
  %5868 = sub i64 %5867, 35416
  %5869 = load i64, i64* %PC.i1659
  %5870 = add i64 %5869, 7
  store i64 %5870, i64* %PC.i1659
  %5871 = inttoptr i64 %5868 to i32*
  %5872 = load i32, i32* %5871
  %5873 = shl i64 %5866, 32
  %5874 = ashr exact i64 %5873, 32
  %5875 = sext i32 %5872 to i64
  %5876 = mul i64 %5875, %5874
  %5877 = trunc i64 %5876 to i32
  %5878 = and i64 %5876, 4294967295
  store i64 %5878, i64* %RAX.i1660, align 8
  %5879 = shl i64 %5876, 32
  %5880 = ashr exact i64 %5879, 32
  %5881 = icmp ne i64 %5880, %5876
  %5882 = zext i1 %5881 to i8
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5882, i8* %5883, align 1
  %5884 = and i32 %5877, 255
  %5885 = call i32 @llvm.ctpop.i32(i32 %5884)
  %5886 = trunc i32 %5885 to i8
  %5887 = and i8 %5886, 1
  %5888 = xor i8 %5887, 1
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5888, i8* %5889, align 1
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5890, align 1
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5891, align 1
  %5892 = lshr i32 %5877, 31
  %5893 = trunc i32 %5892 to i8
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5893, i8* %5894, align 1
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5882, i8* %5895, align 1
  store %struct.Memory* %loadMem_4b0afd, %struct.Memory** %MEMORY
  %loadMem_4b0b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5897 = getelementptr inbounds %struct.GPR, %struct.GPR* %5896, i32 0, i32 33
  %5898 = getelementptr inbounds %struct.Reg, %struct.Reg* %5897, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %5898 to i64*
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5900 = getelementptr inbounds %struct.GPR, %struct.GPR* %5899, i32 0, i32 1
  %5901 = getelementptr inbounds %struct.Reg, %struct.Reg* %5900, i32 0, i32 0
  %RAX.i1658 = bitcast %union.anon* %5901 to i64*
  %5902 = load i64, i64* %RAX.i1658
  %5903 = load i64, i64* %PC.i1657
  %5904 = add i64 %5903, 3
  store i64 %5904, i64* %PC.i1657
  %5905 = trunc i64 %5902 to i32
  %5906 = add i32 32, %5905
  %5907 = zext i32 %5906 to i64
  store i64 %5907, i64* %RAX.i1658, align 8
  %5908 = icmp ult i32 %5906, %5905
  %5909 = icmp ult i32 %5906, 32
  %5910 = or i1 %5908, %5909
  %5911 = zext i1 %5910 to i8
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5911, i8* %5912, align 1
  %5913 = and i32 %5906, 255
  %5914 = call i32 @llvm.ctpop.i32(i32 %5913)
  %5915 = trunc i32 %5914 to i8
  %5916 = and i8 %5915, 1
  %5917 = xor i8 %5916, 1
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5917, i8* %5918, align 1
  %5919 = xor i64 32, %5902
  %5920 = trunc i64 %5919 to i32
  %5921 = xor i32 %5920, %5906
  %5922 = lshr i32 %5921, 4
  %5923 = trunc i32 %5922 to i8
  %5924 = and i8 %5923, 1
  %5925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5924, i8* %5925, align 1
  %5926 = icmp eq i32 %5906, 0
  %5927 = zext i1 %5926 to i8
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5927, i8* %5928, align 1
  %5929 = lshr i32 %5906, 31
  %5930 = trunc i32 %5929 to i8
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5930, i8* %5931, align 1
  %5932 = lshr i32 %5905, 31
  %5933 = xor i32 %5929, %5932
  %5934 = add i32 %5933, %5929
  %5935 = icmp eq i32 %5934, 2
  %5936 = zext i1 %5935 to i8
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5936, i8* %5937, align 1
  store %struct.Memory* %loadMem_4b0b04, %struct.Memory** %MEMORY
  %loadMem_4b0b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5939 = getelementptr inbounds %struct.GPR, %struct.GPR* %5938, i32 0, i32 33
  %5940 = getelementptr inbounds %struct.Reg, %struct.Reg* %5939, i32 0, i32 0
  %PC.i1655 = bitcast %union.anon* %5940 to i64*
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5942 = getelementptr inbounds %struct.GPR, %struct.GPR* %5941, i32 0, i32 1
  %5943 = getelementptr inbounds %struct.Reg, %struct.Reg* %5942, i32 0, i32 0
  %RAX.i1656 = bitcast %union.anon* %5943 to i64*
  %5944 = load i64, i64* %RAX.i1656
  %5945 = load i64, i64* %PC.i1655
  %5946 = add i64 %5945, 3
  store i64 %5946, i64* %PC.i1655
  %5947 = shl i64 %5944, 32
  %5948 = ashr exact i64 %5947, 32
  %5949 = ashr i64 %5948, 5
  %5950 = lshr i64 %5949, 1
  %5951 = trunc i64 %5949 to i8
  %5952 = and i8 %5951, 1
  %5953 = trunc i64 %5950 to i32
  %5954 = and i64 %5950, 4294967295
  store i64 %5954, i64* %RAX.i1656, align 8
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5952, i8* %5955, align 1
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5957 = and i32 %5953, 255
  %5958 = call i32 @llvm.ctpop.i32(i32 %5957)
  %5959 = trunc i32 %5958 to i8
  %5960 = and i8 %5959, 1
  %5961 = xor i8 %5960, 1
  store i8 %5961, i8* %5956, align 1
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5962, align 1
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5964 = icmp eq i32 %5953, 0
  %5965 = zext i1 %5964 to i8
  store i8 %5965, i8* %5963, align 1
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5967 = lshr i32 %5953, 31
  %5968 = trunc i32 %5967 to i8
  store i8 %5968, i8* %5966, align 1
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5969, align 1
  store %struct.Memory* %loadMem_4b0b07, %struct.Memory** %MEMORY
  %loadMem_4b0b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5971 = getelementptr inbounds %struct.GPR, %struct.GPR* %5970, i32 0, i32 33
  %5972 = getelementptr inbounds %struct.Reg, %struct.Reg* %5971, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %5972 to i64*
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5974 = getelementptr inbounds %struct.GPR, %struct.GPR* %5973, i32 0, i32 1
  %5975 = getelementptr inbounds %struct.Reg, %struct.Reg* %5974, i32 0, i32 0
  %EAX.i1653 = bitcast %union.anon* %5975 to i32*
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5977 = getelementptr inbounds %struct.GPR, %struct.GPR* %5976, i32 0, i32 15
  %5978 = getelementptr inbounds %struct.Reg, %struct.Reg* %5977, i32 0, i32 0
  %RBP.i1654 = bitcast %union.anon* %5978 to i64*
  %5979 = load i64, i64* %RBP.i1654
  %5980 = sub i64 %5979, 35456
  %5981 = load i32, i32* %EAX.i1653
  %5982 = zext i32 %5981 to i64
  %5983 = load i64, i64* %PC.i1652
  %5984 = add i64 %5983, 6
  store i64 %5984, i64* %PC.i1652
  %5985 = inttoptr i64 %5980 to i32*
  store i32 %5981, i32* %5985
  store %struct.Memory* %loadMem_4b0b0a, %struct.Memory** %MEMORY
  br label %block_.L_4b0b10

block_.L_4b0b10:                                  ; preds = %block_.L_4b0afa, %block_4b0aea
  %loadMem_4b0b10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 33
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %5988 to i64*
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5990 = getelementptr inbounds %struct.GPR, %struct.GPR* %5989, i32 0, i32 1
  %5991 = getelementptr inbounds %struct.Reg, %struct.Reg* %5990, i32 0, i32 0
  %RAX.i1650 = bitcast %union.anon* %5991 to i64*
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5993 = getelementptr inbounds %struct.GPR, %struct.GPR* %5992, i32 0, i32 15
  %5994 = getelementptr inbounds %struct.Reg, %struct.Reg* %5993, i32 0, i32 0
  %RBP.i1651 = bitcast %union.anon* %5994 to i64*
  %5995 = load i64, i64* %RBP.i1651
  %5996 = sub i64 %5995, 35456
  %5997 = load i64, i64* %PC.i1649
  %5998 = add i64 %5997, 6
  store i64 %5998, i64* %PC.i1649
  %5999 = inttoptr i64 %5996 to i32*
  %6000 = load i32, i32* %5999
  %6001 = zext i32 %6000 to i64
  store i64 %6001, i64* %RAX.i1650, align 8
  store %struct.Memory* %loadMem_4b0b10, %struct.Memory** %MEMORY
  %loadMem_4b0b16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6003 = getelementptr inbounds %struct.GPR, %struct.GPR* %6002, i32 0, i32 33
  %6004 = getelementptr inbounds %struct.Reg, %struct.Reg* %6003, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %6004 to i64*
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6006 = getelementptr inbounds %struct.GPR, %struct.GPR* %6005, i32 0, i32 1
  %6007 = getelementptr inbounds %struct.Reg, %struct.Reg* %6006, i32 0, i32 0
  %EAX.i1647 = bitcast %union.anon* %6007 to i32*
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6009 = getelementptr inbounds %struct.GPR, %struct.GPR* %6008, i32 0, i32 15
  %6010 = getelementptr inbounds %struct.Reg, %struct.Reg* %6009, i32 0, i32 0
  %RBP.i1648 = bitcast %union.anon* %6010 to i64*
  %6011 = load i64, i64* %RBP.i1648
  %6012 = sub i64 %6011, 35452
  %6013 = load i32, i32* %EAX.i1647
  %6014 = zext i32 %6013 to i64
  %6015 = load i64, i64* %PC.i1646
  %6016 = add i64 %6015, 6
  store i64 %6016, i64* %PC.i1646
  %6017 = inttoptr i64 %6012 to i32*
  store i32 %6013, i32* %6017
  store %struct.Memory* %loadMem_4b0b16, %struct.Memory** %MEMORY
  br label %block_.L_4b0b1c

block_.L_4b0b1c:                                  ; preds = %block_.L_4b0b10, %block_4b0abf
  %loadMem_4b0b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6019 = getelementptr inbounds %struct.GPR, %struct.GPR* %6018, i32 0, i32 33
  %6020 = getelementptr inbounds %struct.Reg, %struct.Reg* %6019, i32 0, i32 0
  %PC.i1643 = bitcast %union.anon* %6020 to i64*
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6022 = getelementptr inbounds %struct.GPR, %struct.GPR* %6021, i32 0, i32 1
  %6023 = getelementptr inbounds %struct.Reg, %struct.Reg* %6022, i32 0, i32 0
  %RAX.i1644 = bitcast %union.anon* %6023 to i64*
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6025 = getelementptr inbounds %struct.GPR, %struct.GPR* %6024, i32 0, i32 15
  %6026 = getelementptr inbounds %struct.Reg, %struct.Reg* %6025, i32 0, i32 0
  %RBP.i1645 = bitcast %union.anon* %6026 to i64*
  %6027 = load i64, i64* %RBP.i1645
  %6028 = sub i64 %6027, 35452
  %6029 = load i64, i64* %PC.i1643
  %6030 = add i64 %6029, 6
  store i64 %6030, i64* %PC.i1643
  %6031 = inttoptr i64 %6028 to i32*
  %6032 = load i32, i32* %6031
  %6033 = zext i32 %6032 to i64
  store i64 %6033, i64* %RAX.i1644, align 8
  store %struct.Memory* %loadMem_4b0b1c, %struct.Memory** %MEMORY
  %loadMem_4b0b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6035 = getelementptr inbounds %struct.GPR, %struct.GPR* %6034, i32 0, i32 33
  %6036 = getelementptr inbounds %struct.Reg, %struct.Reg* %6035, i32 0, i32 0
  %PC.i1640 = bitcast %union.anon* %6036 to i64*
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6038 = getelementptr inbounds %struct.GPR, %struct.GPR* %6037, i32 0, i32 5
  %6039 = getelementptr inbounds %struct.Reg, %struct.Reg* %6038, i32 0, i32 0
  %RCX.i1641 = bitcast %union.anon* %6039 to i64*
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6041 = getelementptr inbounds %struct.GPR, %struct.GPR* %6040, i32 0, i32 15
  %6042 = getelementptr inbounds %struct.Reg, %struct.Reg* %6041, i32 0, i32 0
  %RBP.i1642 = bitcast %union.anon* %6042 to i64*
  %6043 = load i64, i64* %RBP.i1642
  %6044 = sub i64 %6043, 19184
  %6045 = load i64, i64* %PC.i1640
  %6046 = add i64 %6045, 7
  store i64 %6046, i64* %PC.i1640
  store i64 %6044, i64* %RCX.i1641, align 8
  store %struct.Memory* %loadMem_4b0b22, %struct.Memory** %MEMORY
  %loadMem_4b0b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6048 = getelementptr inbounds %struct.GPR, %struct.GPR* %6047, i32 0, i32 33
  %6049 = getelementptr inbounds %struct.Reg, %struct.Reg* %6048, i32 0, i32 0
  %PC.i1637 = bitcast %union.anon* %6049 to i64*
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 1
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %EAX.i1638 = bitcast %union.anon* %6052 to i32*
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6054 = getelementptr inbounds %struct.GPR, %struct.GPR* %6053, i32 0, i32 15
  %6055 = getelementptr inbounds %struct.Reg, %struct.Reg* %6054, i32 0, i32 0
  %RBP.i1639 = bitcast %union.anon* %6055 to i64*
  %6056 = load i64, i64* %RBP.i1639
  %6057 = sub i64 %6056, 24
  %6058 = load i32, i32* %EAX.i1638
  %6059 = zext i32 %6058 to i64
  %6060 = load i64, i64* %PC.i1637
  %6061 = add i64 %6060, 3
  store i64 %6061, i64* %PC.i1637
  %6062 = inttoptr i64 %6057 to i32*
  store i32 %6058, i32* %6062
  store %struct.Memory* %loadMem_4b0b29, %struct.Memory** %MEMORY
  %loadMem_4b0b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6064 = getelementptr inbounds %struct.GPR, %struct.GPR* %6063, i32 0, i32 33
  %6065 = getelementptr inbounds %struct.Reg, %struct.Reg* %6064, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %6065 to i64*
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 1
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %RAX.i1635 = bitcast %union.anon* %6068 to i64*
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 15
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %RBP.i1636 = bitcast %union.anon* %6071 to i64*
  %6072 = load i64, i64* %RBP.i1636
  %6073 = sub i64 %6072, 24
  %6074 = load i64, i64* %PC.i1634
  %6075 = add i64 %6074, 3
  store i64 %6075, i64* %PC.i1634
  %6076 = inttoptr i64 %6073 to i32*
  %6077 = load i32, i32* %6076
  %6078 = zext i32 %6077 to i64
  store i64 %6078, i64* %RAX.i1635, align 8
  store %struct.Memory* %loadMem_4b0b2c, %struct.Memory** %MEMORY
  %loadMem_4b0b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6080 = getelementptr inbounds %struct.GPR, %struct.GPR* %6079, i32 0, i32 33
  %6081 = getelementptr inbounds %struct.Reg, %struct.Reg* %6080, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %6081 to i64*
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 1
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %RAX.i1633 = bitcast %union.anon* %6084 to i64*
  %6085 = load i64, i64* %RAX.i1633
  %6086 = load i64, i64* %PC.i1632
  %6087 = add i64 %6086, 3
  store i64 %6087, i64* %PC.i1632
  %6088 = shl i64 %6085, 32
  %6089 = ashr exact i64 %6088, 32
  %6090 = ashr i64 %6089, 1
  %6091 = lshr i64 %6090, 1
  %6092 = trunc i64 %6090 to i8
  %6093 = and i8 %6092, 1
  %6094 = trunc i64 %6091 to i32
  %6095 = and i64 %6091, 4294967295
  store i64 %6095, i64* %RAX.i1633, align 8
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6093, i8* %6096, align 1
  %6097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6098 = and i32 %6094, 255
  %6099 = call i32 @llvm.ctpop.i32(i32 %6098)
  %6100 = trunc i32 %6099 to i8
  %6101 = and i8 %6100, 1
  %6102 = xor i8 %6101, 1
  store i8 %6102, i8* %6097, align 1
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6103, align 1
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6105 = icmp eq i32 %6094, 0
  %6106 = zext i1 %6105 to i8
  store i8 %6106, i8* %6104, align 1
  %6107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6108 = lshr i32 %6094, 31
  %6109 = trunc i32 %6108 to i8
  store i8 %6109, i8* %6107, align 1
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6110, align 1
  store %struct.Memory* %loadMem_4b0b2f, %struct.Memory** %MEMORY
  %loadMem_4b0b32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6112 = getelementptr inbounds %struct.GPR, %struct.GPR* %6111, i32 0, i32 33
  %6113 = getelementptr inbounds %struct.Reg, %struct.Reg* %6112, i32 0, i32 0
  %PC.i1629 = bitcast %union.anon* %6113 to i64*
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6115 = getelementptr inbounds %struct.GPR, %struct.GPR* %6114, i32 0, i32 5
  %6116 = getelementptr inbounds %struct.Reg, %struct.Reg* %6115, i32 0, i32 0
  %RCX.i1630 = bitcast %union.anon* %6116 to i64*
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6118 = getelementptr inbounds %struct.GPR, %struct.GPR* %6117, i32 0, i32 7
  %6119 = getelementptr inbounds %struct.Reg, %struct.Reg* %6118, i32 0, i32 0
  %RDX.i1631 = bitcast %union.anon* %6119 to i64*
  %6120 = load i64, i64* %RCX.i1630
  %6121 = load i64, i64* %PC.i1629
  %6122 = add i64 %6121, 3
  store i64 %6122, i64* %PC.i1629
  store i64 %6120, i64* %RDX.i1631, align 8
  store %struct.Memory* %loadMem_4b0b32, %struct.Memory** %MEMORY
  %loadMem_4b0b35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6124 = getelementptr inbounds %struct.GPR, %struct.GPR* %6123, i32 0, i32 33
  %6125 = getelementptr inbounds %struct.Reg, %struct.Reg* %6124, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %6125 to i64*
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6127 = getelementptr inbounds %struct.GPR, %struct.GPR* %6126, i32 0, i32 7
  %6128 = getelementptr inbounds %struct.Reg, %struct.Reg* %6127, i32 0, i32 0
  %RDX.i1628 = bitcast %union.anon* %6128 to i64*
  %6129 = load i64, i64* %RDX.i1628
  %6130 = load i64, i64* %PC.i1627
  %6131 = add i64 %6130, 7
  store i64 %6131, i64* %PC.i1627
  %6132 = add i64 2700, %6129
  store i64 %6132, i64* %RDX.i1628, align 8
  %6133 = icmp ult i64 %6132, %6129
  %6134 = icmp ult i64 %6132, 2700
  %6135 = or i1 %6133, %6134
  %6136 = zext i1 %6135 to i8
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6136, i8* %6137, align 1
  %6138 = trunc i64 %6132 to i32
  %6139 = and i32 %6138, 255
  %6140 = call i32 @llvm.ctpop.i32(i32 %6139)
  %6141 = trunc i32 %6140 to i8
  %6142 = and i8 %6141, 1
  %6143 = xor i8 %6142, 1
  %6144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6143, i8* %6144, align 1
  %6145 = xor i64 2700, %6129
  %6146 = xor i64 %6145, %6132
  %6147 = lshr i64 %6146, 4
  %6148 = trunc i64 %6147 to i8
  %6149 = and i8 %6148, 1
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6149, i8* %6150, align 1
  %6151 = icmp eq i64 %6132, 0
  %6152 = zext i1 %6151 to i8
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6152, i8* %6153, align 1
  %6154 = lshr i64 %6132, 63
  %6155 = trunc i64 %6154 to i8
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6155, i8* %6156, align 1
  %6157 = lshr i64 %6129, 63
  %6158 = xor i64 %6154, %6157
  %6159 = add i64 %6158, %6154
  %6160 = icmp eq i64 %6159, 2
  %6161 = zext i1 %6160 to i8
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6161, i8* %6162, align 1
  store %struct.Memory* %loadMem_4b0b35, %struct.Memory** %MEMORY
  %loadMem_4b0b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6164 = getelementptr inbounds %struct.GPR, %struct.GPR* %6163, i32 0, i32 33
  %6165 = getelementptr inbounds %struct.Reg, %struct.Reg* %6164, i32 0, i32 0
  %PC.i1624 = bitcast %union.anon* %6165 to i64*
  %6166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6167 = getelementptr inbounds %struct.GPR, %struct.GPR* %6166, i32 0, i32 9
  %6168 = getelementptr inbounds %struct.Reg, %struct.Reg* %6167, i32 0, i32 0
  %RSI.i1625 = bitcast %union.anon* %6168 to i64*
  %6169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6170 = getelementptr inbounds %struct.GPR, %struct.GPR* %6169, i32 0, i32 15
  %6171 = getelementptr inbounds %struct.Reg, %struct.Reg* %6170, i32 0, i32 0
  %RBP.i1626 = bitcast %union.anon* %6171 to i64*
  %6172 = load i64, i64* %RBP.i1626
  %6173 = sub i64 %6172, 8
  %6174 = load i64, i64* %PC.i1624
  %6175 = add i64 %6174, 4
  store i64 %6175, i64* %PC.i1624
  %6176 = inttoptr i64 %6173 to i32*
  %6177 = load i32, i32* %6176
  %6178 = sext i32 %6177 to i64
  store i64 %6178, i64* %RSI.i1625, align 8
  store %struct.Memory* %loadMem_4b0b3c, %struct.Memory** %MEMORY
  %loadMem_4b0b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6180 = getelementptr inbounds %struct.GPR, %struct.GPR* %6179, i32 0, i32 33
  %6181 = getelementptr inbounds %struct.Reg, %struct.Reg* %6180, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %6181 to i64*
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6183 = getelementptr inbounds %struct.GPR, %struct.GPR* %6182, i32 0, i32 9
  %6184 = getelementptr inbounds %struct.Reg, %struct.Reg* %6183, i32 0, i32 0
  %RSI.i1623 = bitcast %union.anon* %6184 to i64*
  %6185 = load i64, i64* %RSI.i1623
  %6186 = load i64, i64* %PC.i1622
  %6187 = add i64 %6186, 7
  store i64 %6187, i64* %PC.i1622
  %6188 = sext i64 %6185 to i128
  %6189 = and i128 %6188, -18446744073709551616
  %6190 = zext i64 %6185 to i128
  %6191 = or i128 %6189, %6190
  %6192 = mul i128 180, %6191
  %6193 = trunc i128 %6192 to i64
  store i64 %6193, i64* %RSI.i1623, align 8
  %6194 = sext i64 %6193 to i128
  %6195 = icmp ne i128 %6194, %6192
  %6196 = zext i1 %6195 to i8
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6196, i8* %6197, align 1
  %6198 = trunc i128 %6192 to i32
  %6199 = and i32 %6198, 255
  %6200 = call i32 @llvm.ctpop.i32(i32 %6199)
  %6201 = trunc i32 %6200 to i8
  %6202 = and i8 %6201, 1
  %6203 = xor i8 %6202, 1
  %6204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6203, i8* %6204, align 1
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6205, align 1
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6206, align 1
  %6207 = lshr i64 %6193, 63
  %6208 = trunc i64 %6207 to i8
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6208, i8* %6209, align 1
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6196, i8* %6210, align 1
  store %struct.Memory* %loadMem_4b0b40, %struct.Memory** %MEMORY
  %loadMem_4b0b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6212 = getelementptr inbounds %struct.GPR, %struct.GPR* %6211, i32 0, i32 33
  %6213 = getelementptr inbounds %struct.Reg, %struct.Reg* %6212, i32 0, i32 0
  %PC.i1619 = bitcast %union.anon* %6213 to i64*
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6215 = getelementptr inbounds %struct.GPR, %struct.GPR* %6214, i32 0, i32 7
  %6216 = getelementptr inbounds %struct.Reg, %struct.Reg* %6215, i32 0, i32 0
  %RDX.i1620 = bitcast %union.anon* %6216 to i64*
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6218 = getelementptr inbounds %struct.GPR, %struct.GPR* %6217, i32 0, i32 9
  %6219 = getelementptr inbounds %struct.Reg, %struct.Reg* %6218, i32 0, i32 0
  %RSI.i1621 = bitcast %union.anon* %6219 to i64*
  %6220 = load i64, i64* %RDX.i1620
  %6221 = load i64, i64* %RSI.i1621
  %6222 = load i64, i64* %PC.i1619
  %6223 = add i64 %6222, 3
  store i64 %6223, i64* %PC.i1619
  %6224 = add i64 %6221, %6220
  store i64 %6224, i64* %RDX.i1620, align 8
  %6225 = icmp ult i64 %6224, %6220
  %6226 = icmp ult i64 %6224, %6221
  %6227 = or i1 %6225, %6226
  %6228 = zext i1 %6227 to i8
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6228, i8* %6229, align 1
  %6230 = trunc i64 %6224 to i32
  %6231 = and i32 %6230, 255
  %6232 = call i32 @llvm.ctpop.i32(i32 %6231)
  %6233 = trunc i32 %6232 to i8
  %6234 = and i8 %6233, 1
  %6235 = xor i8 %6234, 1
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6235, i8* %6236, align 1
  %6237 = xor i64 %6221, %6220
  %6238 = xor i64 %6237, %6224
  %6239 = lshr i64 %6238, 4
  %6240 = trunc i64 %6239 to i8
  %6241 = and i8 %6240, 1
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6241, i8* %6242, align 1
  %6243 = icmp eq i64 %6224, 0
  %6244 = zext i1 %6243 to i8
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6244, i8* %6245, align 1
  %6246 = lshr i64 %6224, 63
  %6247 = trunc i64 %6246 to i8
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6247, i8* %6248, align 1
  %6249 = lshr i64 %6220, 63
  %6250 = lshr i64 %6221, 63
  %6251 = xor i64 %6246, %6249
  %6252 = xor i64 %6246, %6250
  %6253 = add i64 %6251, %6252
  %6254 = icmp eq i64 %6253, 2
  %6255 = zext i1 %6254 to i8
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6255, i8* %6256, align 1
  store %struct.Memory* %loadMem_4b0b47, %struct.Memory** %MEMORY
  %loadMem_4b0b4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6258 = getelementptr inbounds %struct.GPR, %struct.GPR* %6257, i32 0, i32 33
  %6259 = getelementptr inbounds %struct.Reg, %struct.Reg* %6258, i32 0, i32 0
  %PC.i1616 = bitcast %union.anon* %6259 to i64*
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6261 = getelementptr inbounds %struct.GPR, %struct.GPR* %6260, i32 0, i32 9
  %6262 = getelementptr inbounds %struct.Reg, %struct.Reg* %6261, i32 0, i32 0
  %RSI.i1617 = bitcast %union.anon* %6262 to i64*
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6264 = getelementptr inbounds %struct.GPR, %struct.GPR* %6263, i32 0, i32 15
  %6265 = getelementptr inbounds %struct.Reg, %struct.Reg* %6264, i32 0, i32 0
  %RBP.i1618 = bitcast %union.anon* %6265 to i64*
  %6266 = load i64, i64* %RBP.i1618
  %6267 = sub i64 %6266, 12
  %6268 = load i64, i64* %PC.i1616
  %6269 = add i64 %6268, 4
  store i64 %6269, i64* %PC.i1616
  %6270 = inttoptr i64 %6267 to i32*
  %6271 = load i32, i32* %6270
  %6272 = sext i32 %6271 to i64
  store i64 %6272, i64* %RSI.i1617, align 8
  store %struct.Memory* %loadMem_4b0b4a, %struct.Memory** %MEMORY
  %loadMem_4b0b4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6274 = getelementptr inbounds %struct.GPR, %struct.GPR* %6273, i32 0, i32 33
  %6275 = getelementptr inbounds %struct.Reg, %struct.Reg* %6274, i32 0, i32 0
  %PC.i1614 = bitcast %union.anon* %6275 to i64*
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6277 = getelementptr inbounds %struct.GPR, %struct.GPR* %6276, i32 0, i32 9
  %6278 = getelementptr inbounds %struct.Reg, %struct.Reg* %6277, i32 0, i32 0
  %RSI.i1615 = bitcast %union.anon* %6278 to i64*
  %6279 = load i64, i64* %RSI.i1615
  %6280 = load i64, i64* %PC.i1614
  %6281 = add i64 %6280, 4
  store i64 %6281, i64* %PC.i1614
  %6282 = sext i64 %6279 to i128
  %6283 = and i128 %6282, -18446744073709551616
  %6284 = zext i64 %6279 to i128
  %6285 = or i128 %6283, %6284
  %6286 = mul i128 12, %6285
  %6287 = trunc i128 %6286 to i64
  store i64 %6287, i64* %RSI.i1615, align 8
  %6288 = sext i64 %6287 to i128
  %6289 = icmp ne i128 %6288, %6286
  %6290 = zext i1 %6289 to i8
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6290, i8* %6291, align 1
  %6292 = trunc i128 %6286 to i32
  %6293 = and i32 %6292, 255
  %6294 = call i32 @llvm.ctpop.i32(i32 %6293)
  %6295 = trunc i32 %6294 to i8
  %6296 = and i8 %6295, 1
  %6297 = xor i8 %6296, 1
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6297, i8* %6298, align 1
  %6299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6299, align 1
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6300, align 1
  %6301 = lshr i64 %6287, 63
  %6302 = trunc i64 %6301 to i8
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6302, i8* %6303, align 1
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6290, i8* %6304, align 1
  store %struct.Memory* %loadMem_4b0b4e, %struct.Memory** %MEMORY
  %loadMem_4b0b52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6306 = getelementptr inbounds %struct.GPR, %struct.GPR* %6305, i32 0, i32 33
  %6307 = getelementptr inbounds %struct.Reg, %struct.Reg* %6306, i32 0, i32 0
  %PC.i1611 = bitcast %union.anon* %6307 to i64*
  %6308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6309 = getelementptr inbounds %struct.GPR, %struct.GPR* %6308, i32 0, i32 7
  %6310 = getelementptr inbounds %struct.Reg, %struct.Reg* %6309, i32 0, i32 0
  %RDX.i1612 = bitcast %union.anon* %6310 to i64*
  %6311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6312 = getelementptr inbounds %struct.GPR, %struct.GPR* %6311, i32 0, i32 9
  %6313 = getelementptr inbounds %struct.Reg, %struct.Reg* %6312, i32 0, i32 0
  %RSI.i1613 = bitcast %union.anon* %6313 to i64*
  %6314 = load i64, i64* %RDX.i1612
  %6315 = load i64, i64* %RSI.i1613
  %6316 = load i64, i64* %PC.i1611
  %6317 = add i64 %6316, 3
  store i64 %6317, i64* %PC.i1611
  %6318 = add i64 %6315, %6314
  store i64 %6318, i64* %RDX.i1612, align 8
  %6319 = icmp ult i64 %6318, %6314
  %6320 = icmp ult i64 %6318, %6315
  %6321 = or i1 %6319, %6320
  %6322 = zext i1 %6321 to i8
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6322, i8* %6323, align 1
  %6324 = trunc i64 %6318 to i32
  %6325 = and i32 %6324, 255
  %6326 = call i32 @llvm.ctpop.i32(i32 %6325)
  %6327 = trunc i32 %6326 to i8
  %6328 = and i8 %6327, 1
  %6329 = xor i8 %6328, 1
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6329, i8* %6330, align 1
  %6331 = xor i64 %6315, %6314
  %6332 = xor i64 %6331, %6318
  %6333 = lshr i64 %6332, 4
  %6334 = trunc i64 %6333 to i8
  %6335 = and i8 %6334, 1
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6335, i8* %6336, align 1
  %6337 = icmp eq i64 %6318, 0
  %6338 = zext i1 %6337 to i8
  %6339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6338, i8* %6339, align 1
  %6340 = lshr i64 %6318, 63
  %6341 = trunc i64 %6340 to i8
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6341, i8* %6342, align 1
  %6343 = lshr i64 %6314, 63
  %6344 = lshr i64 %6315, 63
  %6345 = xor i64 %6340, %6343
  %6346 = xor i64 %6340, %6344
  %6347 = add i64 %6345, %6346
  %6348 = icmp eq i64 %6347, 2
  %6349 = zext i1 %6348 to i8
  %6350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6349, i8* %6350, align 1
  store %struct.Memory* %loadMem_4b0b52, %struct.Memory** %MEMORY
  %loadMem_4b0b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6352 = getelementptr inbounds %struct.GPR, %struct.GPR* %6351, i32 0, i32 33
  %6353 = getelementptr inbounds %struct.Reg, %struct.Reg* %6352, i32 0, i32 0
  %PC.i1608 = bitcast %union.anon* %6353 to i64*
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 9
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %RSI.i1609 = bitcast %union.anon* %6356 to i64*
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 15
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %RBP.i1610 = bitcast %union.anon* %6359 to i64*
  %6360 = load i64, i64* %RBP.i1610
  %6361 = sub i64 %6360, 40
  %6362 = load i64, i64* %PC.i1608
  %6363 = add i64 %6362, 4
  store i64 %6363, i64* %PC.i1608
  %6364 = inttoptr i64 %6361 to i32*
  %6365 = load i32, i32* %6364
  %6366 = sext i32 %6365 to i64
  store i64 %6366, i64* %RSI.i1609, align 8
  store %struct.Memory* %loadMem_4b0b55, %struct.Memory** %MEMORY
  %loadMem_4b0b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6368 = getelementptr inbounds %struct.GPR, %struct.GPR* %6367, i32 0, i32 33
  %6369 = getelementptr inbounds %struct.Reg, %struct.Reg* %6368, i32 0, i32 0
  %PC.i1604 = bitcast %union.anon* %6369 to i64*
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6371 = getelementptr inbounds %struct.GPR, %struct.GPR* %6370, i32 0, i32 1
  %6372 = getelementptr inbounds %struct.Reg, %struct.Reg* %6371, i32 0, i32 0
  %EAX.i1605 = bitcast %union.anon* %6372 to i32*
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 7
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %RDX.i1606 = bitcast %union.anon* %6375 to i64*
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6377 = getelementptr inbounds %struct.GPR, %struct.GPR* %6376, i32 0, i32 9
  %6378 = getelementptr inbounds %struct.Reg, %struct.Reg* %6377, i32 0, i32 0
  %RSI.i1607 = bitcast %union.anon* %6378 to i64*
  %6379 = load i64, i64* %RDX.i1606
  %6380 = load i64, i64* %RSI.i1607
  %6381 = mul i64 %6380, 4
  %6382 = add i64 %6381, %6379
  %6383 = load i32, i32* %EAX.i1605
  %6384 = zext i32 %6383 to i64
  %6385 = load i64, i64* %PC.i1604
  %6386 = add i64 %6385, 3
  store i64 %6386, i64* %PC.i1604
  %6387 = inttoptr i64 %6382 to i32*
  store i32 %6383, i32* %6387
  store %struct.Memory* %loadMem_4b0b59, %struct.Memory** %MEMORY
  %loadMem_4b0b5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6389 = getelementptr inbounds %struct.GPR, %struct.GPR* %6388, i32 0, i32 33
  %6390 = getelementptr inbounds %struct.Reg, %struct.Reg* %6389, i32 0, i32 0
  %PC.i1602 = bitcast %union.anon* %6390 to i64*
  %6391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6392 = getelementptr inbounds %struct.GPR, %struct.GPR* %6391, i32 0, i32 5
  %6393 = getelementptr inbounds %struct.Reg, %struct.Reg* %6392, i32 0, i32 0
  %RCX.i1603 = bitcast %union.anon* %6393 to i64*
  %6394 = load i64, i64* %RCX.i1603
  %6395 = load i64, i64* %PC.i1602
  %6396 = add i64 %6395, 7
  store i64 %6396, i64* %PC.i1602
  %6397 = add i64 2700, %6394
  store i64 %6397, i64* %RCX.i1603, align 8
  %6398 = icmp ult i64 %6397, %6394
  %6399 = icmp ult i64 %6397, 2700
  %6400 = or i1 %6398, %6399
  %6401 = zext i1 %6400 to i8
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6401, i8* %6402, align 1
  %6403 = trunc i64 %6397 to i32
  %6404 = and i32 %6403, 255
  %6405 = call i32 @llvm.ctpop.i32(i32 %6404)
  %6406 = trunc i32 %6405 to i8
  %6407 = and i8 %6406, 1
  %6408 = xor i8 %6407, 1
  %6409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6408, i8* %6409, align 1
  %6410 = xor i64 2700, %6394
  %6411 = xor i64 %6410, %6397
  %6412 = lshr i64 %6411, 4
  %6413 = trunc i64 %6412 to i8
  %6414 = and i8 %6413, 1
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6414, i8* %6415, align 1
  %6416 = icmp eq i64 %6397, 0
  %6417 = zext i1 %6416 to i8
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6417, i8* %6418, align 1
  %6419 = lshr i64 %6397, 63
  %6420 = trunc i64 %6419 to i8
  %6421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6420, i8* %6421, align 1
  %6422 = lshr i64 %6394, 63
  %6423 = xor i64 %6419, %6422
  %6424 = add i64 %6423, %6419
  %6425 = icmp eq i64 %6424, 2
  %6426 = zext i1 %6425 to i8
  %6427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6426, i8* %6427, align 1
  store %struct.Memory* %loadMem_4b0b5c, %struct.Memory** %MEMORY
  %loadMem_4b0b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 33
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %6430 to i64*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6432 = getelementptr inbounds %struct.GPR, %struct.GPR* %6431, i32 0, i32 7
  %6433 = getelementptr inbounds %struct.Reg, %struct.Reg* %6432, i32 0, i32 0
  %RDX.i1600 = bitcast %union.anon* %6433 to i64*
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6435 = getelementptr inbounds %struct.GPR, %struct.GPR* %6434, i32 0, i32 15
  %6436 = getelementptr inbounds %struct.Reg, %struct.Reg* %6435, i32 0, i32 0
  %RBP.i1601 = bitcast %union.anon* %6436 to i64*
  %6437 = load i64, i64* %RBP.i1601
  %6438 = sub i64 %6437, 8
  %6439 = load i64, i64* %PC.i1599
  %6440 = add i64 %6439, 4
  store i64 %6440, i64* %PC.i1599
  %6441 = inttoptr i64 %6438 to i32*
  %6442 = load i32, i32* %6441
  %6443 = sext i32 %6442 to i64
  store i64 %6443, i64* %RDX.i1600, align 8
  store %struct.Memory* %loadMem_4b0b63, %struct.Memory** %MEMORY
  %loadMem_4b0b67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6445 = getelementptr inbounds %struct.GPR, %struct.GPR* %6444, i32 0, i32 33
  %6446 = getelementptr inbounds %struct.Reg, %struct.Reg* %6445, i32 0, i32 0
  %PC.i1597 = bitcast %union.anon* %6446 to i64*
  %6447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6448 = getelementptr inbounds %struct.GPR, %struct.GPR* %6447, i32 0, i32 7
  %6449 = getelementptr inbounds %struct.Reg, %struct.Reg* %6448, i32 0, i32 0
  %RDX.i1598 = bitcast %union.anon* %6449 to i64*
  %6450 = load i64, i64* %RDX.i1598
  %6451 = load i64, i64* %PC.i1597
  %6452 = add i64 %6451, 7
  store i64 %6452, i64* %PC.i1597
  %6453 = sext i64 %6450 to i128
  %6454 = and i128 %6453, -18446744073709551616
  %6455 = zext i64 %6450 to i128
  %6456 = or i128 %6454, %6455
  %6457 = mul i128 180, %6456
  %6458 = trunc i128 %6457 to i64
  store i64 %6458, i64* %RDX.i1598, align 8
  %6459 = sext i64 %6458 to i128
  %6460 = icmp ne i128 %6459, %6457
  %6461 = zext i1 %6460 to i8
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6461, i8* %6462, align 1
  %6463 = trunc i128 %6457 to i32
  %6464 = and i32 %6463, 255
  %6465 = call i32 @llvm.ctpop.i32(i32 %6464)
  %6466 = trunc i32 %6465 to i8
  %6467 = and i8 %6466, 1
  %6468 = xor i8 %6467, 1
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6468, i8* %6469, align 1
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6470, align 1
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6471, align 1
  %6472 = lshr i64 %6458, 63
  %6473 = trunc i64 %6472 to i8
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6473, i8* %6474, align 1
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6461, i8* %6475, align 1
  store %struct.Memory* %loadMem_4b0b67, %struct.Memory** %MEMORY
  %loadMem_4b0b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 33
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %6478 to i64*
  %6479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6480 = getelementptr inbounds %struct.GPR, %struct.GPR* %6479, i32 0, i32 5
  %6481 = getelementptr inbounds %struct.Reg, %struct.Reg* %6480, i32 0, i32 0
  %RCX.i1595 = bitcast %union.anon* %6481 to i64*
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6483 = getelementptr inbounds %struct.GPR, %struct.GPR* %6482, i32 0, i32 7
  %6484 = getelementptr inbounds %struct.Reg, %struct.Reg* %6483, i32 0, i32 0
  %RDX.i1596 = bitcast %union.anon* %6484 to i64*
  %6485 = load i64, i64* %RCX.i1595
  %6486 = load i64, i64* %RDX.i1596
  %6487 = load i64, i64* %PC.i1594
  %6488 = add i64 %6487, 3
  store i64 %6488, i64* %PC.i1594
  %6489 = add i64 %6486, %6485
  store i64 %6489, i64* %RCX.i1595, align 8
  %6490 = icmp ult i64 %6489, %6485
  %6491 = icmp ult i64 %6489, %6486
  %6492 = or i1 %6490, %6491
  %6493 = zext i1 %6492 to i8
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6493, i8* %6494, align 1
  %6495 = trunc i64 %6489 to i32
  %6496 = and i32 %6495, 255
  %6497 = call i32 @llvm.ctpop.i32(i32 %6496)
  %6498 = trunc i32 %6497 to i8
  %6499 = and i8 %6498, 1
  %6500 = xor i8 %6499, 1
  %6501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6500, i8* %6501, align 1
  %6502 = xor i64 %6486, %6485
  %6503 = xor i64 %6502, %6489
  %6504 = lshr i64 %6503, 4
  %6505 = trunc i64 %6504 to i8
  %6506 = and i8 %6505, 1
  %6507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6506, i8* %6507, align 1
  %6508 = icmp eq i64 %6489, 0
  %6509 = zext i1 %6508 to i8
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6509, i8* %6510, align 1
  %6511 = lshr i64 %6489, 63
  %6512 = trunc i64 %6511 to i8
  %6513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6512, i8* %6513, align 1
  %6514 = lshr i64 %6485, 63
  %6515 = lshr i64 %6486, 63
  %6516 = xor i64 %6511, %6514
  %6517 = xor i64 %6511, %6515
  %6518 = add i64 %6516, %6517
  %6519 = icmp eq i64 %6518, 2
  %6520 = zext i1 %6519 to i8
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6520, i8* %6521, align 1
  store %struct.Memory* %loadMem_4b0b6e, %struct.Memory** %MEMORY
  %loadMem_4b0b71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6523 = getelementptr inbounds %struct.GPR, %struct.GPR* %6522, i32 0, i32 33
  %6524 = getelementptr inbounds %struct.Reg, %struct.Reg* %6523, i32 0, i32 0
  %PC.i1591 = bitcast %union.anon* %6524 to i64*
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6526 = getelementptr inbounds %struct.GPR, %struct.GPR* %6525, i32 0, i32 7
  %6527 = getelementptr inbounds %struct.Reg, %struct.Reg* %6526, i32 0, i32 0
  %RDX.i1592 = bitcast %union.anon* %6527 to i64*
  %6528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6529 = getelementptr inbounds %struct.GPR, %struct.GPR* %6528, i32 0, i32 15
  %6530 = getelementptr inbounds %struct.Reg, %struct.Reg* %6529, i32 0, i32 0
  %RBP.i1593 = bitcast %union.anon* %6530 to i64*
  %6531 = load i64, i64* %RBP.i1593
  %6532 = sub i64 %6531, 12
  %6533 = load i64, i64* %PC.i1591
  %6534 = add i64 %6533, 4
  store i64 %6534, i64* %PC.i1591
  %6535 = inttoptr i64 %6532 to i32*
  %6536 = load i32, i32* %6535
  %6537 = sext i32 %6536 to i64
  store i64 %6537, i64* %RDX.i1592, align 8
  store %struct.Memory* %loadMem_4b0b71, %struct.Memory** %MEMORY
  %loadMem_4b0b75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6539 = getelementptr inbounds %struct.GPR, %struct.GPR* %6538, i32 0, i32 33
  %6540 = getelementptr inbounds %struct.Reg, %struct.Reg* %6539, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %6540 to i64*
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6542 = getelementptr inbounds %struct.GPR, %struct.GPR* %6541, i32 0, i32 7
  %6543 = getelementptr inbounds %struct.Reg, %struct.Reg* %6542, i32 0, i32 0
  %RDX.i1590 = bitcast %union.anon* %6543 to i64*
  %6544 = load i64, i64* %RDX.i1590
  %6545 = load i64, i64* %PC.i1589
  %6546 = add i64 %6545, 4
  store i64 %6546, i64* %PC.i1589
  %6547 = sext i64 %6544 to i128
  %6548 = and i128 %6547, -18446744073709551616
  %6549 = zext i64 %6544 to i128
  %6550 = or i128 %6548, %6549
  %6551 = mul i128 12, %6550
  %6552 = trunc i128 %6551 to i64
  store i64 %6552, i64* %RDX.i1590, align 8
  %6553 = sext i64 %6552 to i128
  %6554 = icmp ne i128 %6553, %6551
  %6555 = zext i1 %6554 to i8
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6555, i8* %6556, align 1
  %6557 = trunc i128 %6551 to i32
  %6558 = and i32 %6557, 255
  %6559 = call i32 @llvm.ctpop.i32(i32 %6558)
  %6560 = trunc i32 %6559 to i8
  %6561 = and i8 %6560, 1
  %6562 = xor i8 %6561, 1
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6562, i8* %6563, align 1
  %6564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6564, align 1
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6565, align 1
  %6566 = lshr i64 %6552, 63
  %6567 = trunc i64 %6566 to i8
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6567, i8* %6568, align 1
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6555, i8* %6569, align 1
  store %struct.Memory* %loadMem_4b0b75, %struct.Memory** %MEMORY
  %loadMem_4b0b79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6571 = getelementptr inbounds %struct.GPR, %struct.GPR* %6570, i32 0, i32 33
  %6572 = getelementptr inbounds %struct.Reg, %struct.Reg* %6571, i32 0, i32 0
  %PC.i1586 = bitcast %union.anon* %6572 to i64*
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6574 = getelementptr inbounds %struct.GPR, %struct.GPR* %6573, i32 0, i32 5
  %6575 = getelementptr inbounds %struct.Reg, %struct.Reg* %6574, i32 0, i32 0
  %RCX.i1587 = bitcast %union.anon* %6575 to i64*
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6577 = getelementptr inbounds %struct.GPR, %struct.GPR* %6576, i32 0, i32 7
  %6578 = getelementptr inbounds %struct.Reg, %struct.Reg* %6577, i32 0, i32 0
  %RDX.i1588 = bitcast %union.anon* %6578 to i64*
  %6579 = load i64, i64* %RCX.i1587
  %6580 = load i64, i64* %RDX.i1588
  %6581 = load i64, i64* %PC.i1586
  %6582 = add i64 %6581, 3
  store i64 %6582, i64* %PC.i1586
  %6583 = add i64 %6580, %6579
  store i64 %6583, i64* %RCX.i1587, align 8
  %6584 = icmp ult i64 %6583, %6579
  %6585 = icmp ult i64 %6583, %6580
  %6586 = or i1 %6584, %6585
  %6587 = zext i1 %6586 to i8
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6587, i8* %6588, align 1
  %6589 = trunc i64 %6583 to i32
  %6590 = and i32 %6589, 255
  %6591 = call i32 @llvm.ctpop.i32(i32 %6590)
  %6592 = trunc i32 %6591 to i8
  %6593 = and i8 %6592, 1
  %6594 = xor i8 %6593, 1
  %6595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6594, i8* %6595, align 1
  %6596 = xor i64 %6580, %6579
  %6597 = xor i64 %6596, %6583
  %6598 = lshr i64 %6597, 4
  %6599 = trunc i64 %6598 to i8
  %6600 = and i8 %6599, 1
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6600, i8* %6601, align 1
  %6602 = icmp eq i64 %6583, 0
  %6603 = zext i1 %6602 to i8
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6603, i8* %6604, align 1
  %6605 = lshr i64 %6583, 63
  %6606 = trunc i64 %6605 to i8
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6606, i8* %6607, align 1
  %6608 = lshr i64 %6579, 63
  %6609 = lshr i64 %6580, 63
  %6610 = xor i64 %6605, %6608
  %6611 = xor i64 %6605, %6609
  %6612 = add i64 %6610, %6611
  %6613 = icmp eq i64 %6612, 2
  %6614 = zext i1 %6613 to i8
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6614, i8* %6615, align 1
  store %struct.Memory* %loadMem_4b0b79, %struct.Memory** %MEMORY
  %loadMem_4b0b7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6617 = getelementptr inbounds %struct.GPR, %struct.GPR* %6616, i32 0, i32 33
  %6618 = getelementptr inbounds %struct.Reg, %struct.Reg* %6617, i32 0, i32 0
  %PC.i1583 = bitcast %union.anon* %6618 to i64*
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 7
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %RDX.i1584 = bitcast %union.anon* %6621 to i64*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 15
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RBP.i1585 = bitcast %union.anon* %6624 to i64*
  %6625 = load i64, i64* %RBP.i1585
  %6626 = sub i64 %6625, 40
  %6627 = load i64, i64* %PC.i1583
  %6628 = add i64 %6627, 4
  store i64 %6628, i64* %PC.i1583
  %6629 = inttoptr i64 %6626 to i32*
  %6630 = load i32, i32* %6629
  %6631 = sext i32 %6630 to i64
  store i64 %6631, i64* %RDX.i1584, align 8
  store %struct.Memory* %loadMem_4b0b7c, %struct.Memory** %MEMORY
  %loadMem_4b0b80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 33
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %6634 to i64*
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6636 = getelementptr inbounds %struct.GPR, %struct.GPR* %6635, i32 0, i32 5
  %6637 = getelementptr inbounds %struct.Reg, %struct.Reg* %6636, i32 0, i32 0
  %RCX.i1581 = bitcast %union.anon* %6637 to i64*
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6639 = getelementptr inbounds %struct.GPR, %struct.GPR* %6638, i32 0, i32 7
  %6640 = getelementptr inbounds %struct.Reg, %struct.Reg* %6639, i32 0, i32 0
  %RDX.i1582 = bitcast %union.anon* %6640 to i64*
  %6641 = load i64, i64* %RCX.i1581
  %6642 = load i64, i64* %RDX.i1582
  %6643 = mul i64 %6642, 4
  %6644 = add i64 %6643, %6641
  %6645 = load i64, i64* %PC.i1580
  %6646 = add i64 %6645, 4
  store i64 %6646, i64* %PC.i1580
  %6647 = inttoptr i64 %6644 to i32*
  %6648 = load i32, i32* %6647
  %6649 = sub i32 %6648, -64
  %6650 = icmp ult i32 %6648, -64
  %6651 = zext i1 %6650 to i8
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6651, i8* %6652, align 1
  %6653 = and i32 %6649, 255
  %6654 = call i32 @llvm.ctpop.i32(i32 %6653)
  %6655 = trunc i32 %6654 to i8
  %6656 = and i8 %6655, 1
  %6657 = xor i8 %6656, 1
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6657, i8* %6658, align 1
  %6659 = xor i32 %6648, -64
  %6660 = xor i32 %6659, %6649
  %6661 = lshr i32 %6660, 4
  %6662 = trunc i32 %6661 to i8
  %6663 = and i8 %6662, 1
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6663, i8* %6664, align 1
  %6665 = icmp eq i32 %6649, 0
  %6666 = zext i1 %6665 to i8
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6666, i8* %6667, align 1
  %6668 = lshr i32 %6649, 31
  %6669 = trunc i32 %6668 to i8
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6669, i8* %6670, align 1
  %6671 = lshr i32 %6648, 31
  %6672 = xor i32 %6671, 1
  %6673 = xor i32 %6668, %6671
  %6674 = add i32 %6673, %6672
  %6675 = icmp eq i32 %6674, 2
  %6676 = zext i1 %6675 to i8
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6676, i8* %6677, align 1
  store %struct.Memory* %loadMem_4b0b80, %struct.Memory** %MEMORY
  %loadMem_4b0b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6679 = getelementptr inbounds %struct.GPR, %struct.GPR* %6678, i32 0, i32 33
  %6680 = getelementptr inbounds %struct.Reg, %struct.Reg* %6679, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %6680 to i64*
  %6681 = load i64, i64* %PC.i1579
  %6682 = add i64 %6681, 61
  %6683 = load i64, i64* %PC.i1579
  %6684 = add i64 %6683, 6
  %6685 = load i64, i64* %PC.i1579
  %6686 = add i64 %6685, 6
  store i64 %6686, i64* %PC.i1579
  %6687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6688 = load i8, i8* %6687, align 1
  %6689 = icmp ne i8 %6688, 0
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6691 = load i8, i8* %6690, align 1
  %6692 = icmp ne i8 %6691, 0
  %6693 = xor i1 %6689, %6692
  %6694 = zext i1 %6693 to i8
  store i8 %6694, i8* %BRANCH_TAKEN, align 1
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6696 = select i1 %6693, i64 %6682, i64 %6684
  store i64 %6696, i64* %6695, align 8
  store %struct.Memory* %loadMem_4b0b84, %struct.Memory** %MEMORY
  %loadBr_4b0b84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0b84 = icmp eq i8 %loadBr_4b0b84, 1
  br i1 %cmpBr_4b0b84, label %block_.L_4b0bc1, label %block_4b0b8a

block_4b0b8a:                                     ; preds = %block_.L_4b0b1c
  %loadMem_4b0b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 33
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %PC.i1576 = bitcast %union.anon* %6699 to i64*
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6701 = getelementptr inbounds %struct.GPR, %struct.GPR* %6700, i32 0, i32 1
  %6702 = getelementptr inbounds %struct.Reg, %struct.Reg* %6701, i32 0, i32 0
  %RAX.i1577 = bitcast %union.anon* %6702 to i64*
  %6703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6704 = getelementptr inbounds %struct.GPR, %struct.GPR* %6703, i32 0, i32 15
  %6705 = getelementptr inbounds %struct.Reg, %struct.Reg* %6704, i32 0, i32 0
  %RBP.i1578 = bitcast %union.anon* %6705 to i64*
  %6706 = load i64, i64* %RBP.i1578
  %6707 = sub i64 %6706, 19184
  %6708 = load i64, i64* %PC.i1576
  %6709 = add i64 %6708, 7
  store i64 %6709, i64* %PC.i1576
  store i64 %6707, i64* %RAX.i1577, align 8
  store %struct.Memory* %loadMem_4b0b8a, %struct.Memory** %MEMORY
  %loadMem_4b0b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 33
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %6712 to i64*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 1
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %RAX.i1575 = bitcast %union.anon* %6715 to i64*
  %6716 = load i64, i64* %RAX.i1575
  %6717 = load i64, i64* %PC.i1574
  %6718 = add i64 %6717, 6
  store i64 %6718, i64* %PC.i1574
  %6719 = add i64 2700, %6716
  store i64 %6719, i64* %RAX.i1575, align 8
  %6720 = icmp ult i64 %6719, %6716
  %6721 = icmp ult i64 %6719, 2700
  %6722 = or i1 %6720, %6721
  %6723 = zext i1 %6722 to i8
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6723, i8* %6724, align 1
  %6725 = trunc i64 %6719 to i32
  %6726 = and i32 %6725, 255
  %6727 = call i32 @llvm.ctpop.i32(i32 %6726)
  %6728 = trunc i32 %6727 to i8
  %6729 = and i8 %6728, 1
  %6730 = xor i8 %6729, 1
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6730, i8* %6731, align 1
  %6732 = xor i64 2700, %6716
  %6733 = xor i64 %6732, %6719
  %6734 = lshr i64 %6733, 4
  %6735 = trunc i64 %6734 to i8
  %6736 = and i8 %6735, 1
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6736, i8* %6737, align 1
  %6738 = icmp eq i64 %6719, 0
  %6739 = zext i1 %6738 to i8
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6739, i8* %6740, align 1
  %6741 = lshr i64 %6719, 63
  %6742 = trunc i64 %6741 to i8
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6742, i8* %6743, align 1
  %6744 = lshr i64 %6716, 63
  %6745 = xor i64 %6741, %6744
  %6746 = add i64 %6745, %6741
  %6747 = icmp eq i64 %6746, 2
  %6748 = zext i1 %6747 to i8
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6748, i8* %6749, align 1
  store %struct.Memory* %loadMem_4b0b91, %struct.Memory** %MEMORY
  %loadMem_4b0b97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6751 = getelementptr inbounds %struct.GPR, %struct.GPR* %6750, i32 0, i32 33
  %6752 = getelementptr inbounds %struct.Reg, %struct.Reg* %6751, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %6752 to i64*
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6754 = getelementptr inbounds %struct.GPR, %struct.GPR* %6753, i32 0, i32 5
  %6755 = getelementptr inbounds %struct.Reg, %struct.Reg* %6754, i32 0, i32 0
  %RCX.i1572 = bitcast %union.anon* %6755 to i64*
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6757 = getelementptr inbounds %struct.GPR, %struct.GPR* %6756, i32 0, i32 15
  %6758 = getelementptr inbounds %struct.Reg, %struct.Reg* %6757, i32 0, i32 0
  %RBP.i1573 = bitcast %union.anon* %6758 to i64*
  %6759 = load i64, i64* %RBP.i1573
  %6760 = sub i64 %6759, 8
  %6761 = load i64, i64* %PC.i1571
  %6762 = add i64 %6761, 4
  store i64 %6762, i64* %PC.i1571
  %6763 = inttoptr i64 %6760 to i32*
  %6764 = load i32, i32* %6763
  %6765 = sext i32 %6764 to i64
  store i64 %6765, i64* %RCX.i1572, align 8
  store %struct.Memory* %loadMem_4b0b97, %struct.Memory** %MEMORY
  %loadMem_4b0b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 33
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %PC.i1569 = bitcast %union.anon* %6768 to i64*
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6770 = getelementptr inbounds %struct.GPR, %struct.GPR* %6769, i32 0, i32 5
  %6771 = getelementptr inbounds %struct.Reg, %struct.Reg* %6770, i32 0, i32 0
  %RCX.i1570 = bitcast %union.anon* %6771 to i64*
  %6772 = load i64, i64* %RCX.i1570
  %6773 = load i64, i64* %PC.i1569
  %6774 = add i64 %6773, 7
  store i64 %6774, i64* %PC.i1569
  %6775 = sext i64 %6772 to i128
  %6776 = and i128 %6775, -18446744073709551616
  %6777 = zext i64 %6772 to i128
  %6778 = or i128 %6776, %6777
  %6779 = mul i128 180, %6778
  %6780 = trunc i128 %6779 to i64
  store i64 %6780, i64* %RCX.i1570, align 8
  %6781 = sext i64 %6780 to i128
  %6782 = icmp ne i128 %6781, %6779
  %6783 = zext i1 %6782 to i8
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6783, i8* %6784, align 1
  %6785 = trunc i128 %6779 to i32
  %6786 = and i32 %6785, 255
  %6787 = call i32 @llvm.ctpop.i32(i32 %6786)
  %6788 = trunc i32 %6787 to i8
  %6789 = and i8 %6788, 1
  %6790 = xor i8 %6789, 1
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6790, i8* %6791, align 1
  %6792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6792, align 1
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6793, align 1
  %6794 = lshr i64 %6780, 63
  %6795 = trunc i64 %6794 to i8
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6795, i8* %6796, align 1
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6783, i8* %6797, align 1
  store %struct.Memory* %loadMem_4b0b9b, %struct.Memory** %MEMORY
  %loadMem_4b0ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6799 = getelementptr inbounds %struct.GPR, %struct.GPR* %6798, i32 0, i32 33
  %6800 = getelementptr inbounds %struct.Reg, %struct.Reg* %6799, i32 0, i32 0
  %PC.i1566 = bitcast %union.anon* %6800 to i64*
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6802 = getelementptr inbounds %struct.GPR, %struct.GPR* %6801, i32 0, i32 1
  %6803 = getelementptr inbounds %struct.Reg, %struct.Reg* %6802, i32 0, i32 0
  %RAX.i1567 = bitcast %union.anon* %6803 to i64*
  %6804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6805 = getelementptr inbounds %struct.GPR, %struct.GPR* %6804, i32 0, i32 5
  %6806 = getelementptr inbounds %struct.Reg, %struct.Reg* %6805, i32 0, i32 0
  %RCX.i1568 = bitcast %union.anon* %6806 to i64*
  %6807 = load i64, i64* %RAX.i1567
  %6808 = load i64, i64* %RCX.i1568
  %6809 = load i64, i64* %PC.i1566
  %6810 = add i64 %6809, 3
  store i64 %6810, i64* %PC.i1566
  %6811 = add i64 %6808, %6807
  store i64 %6811, i64* %RAX.i1567, align 8
  %6812 = icmp ult i64 %6811, %6807
  %6813 = icmp ult i64 %6811, %6808
  %6814 = or i1 %6812, %6813
  %6815 = zext i1 %6814 to i8
  %6816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6815, i8* %6816, align 1
  %6817 = trunc i64 %6811 to i32
  %6818 = and i32 %6817, 255
  %6819 = call i32 @llvm.ctpop.i32(i32 %6818)
  %6820 = trunc i32 %6819 to i8
  %6821 = and i8 %6820, 1
  %6822 = xor i8 %6821, 1
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6822, i8* %6823, align 1
  %6824 = xor i64 %6808, %6807
  %6825 = xor i64 %6824, %6811
  %6826 = lshr i64 %6825, 4
  %6827 = trunc i64 %6826 to i8
  %6828 = and i8 %6827, 1
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6828, i8* %6829, align 1
  %6830 = icmp eq i64 %6811, 0
  %6831 = zext i1 %6830 to i8
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6831, i8* %6832, align 1
  %6833 = lshr i64 %6811, 63
  %6834 = trunc i64 %6833 to i8
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6834, i8* %6835, align 1
  %6836 = lshr i64 %6807, 63
  %6837 = lshr i64 %6808, 63
  %6838 = xor i64 %6833, %6836
  %6839 = xor i64 %6833, %6837
  %6840 = add i64 %6838, %6839
  %6841 = icmp eq i64 %6840, 2
  %6842 = zext i1 %6841 to i8
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6842, i8* %6843, align 1
  store %struct.Memory* %loadMem_4b0ba2, %struct.Memory** %MEMORY
  %loadMem_4b0ba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6845 = getelementptr inbounds %struct.GPR, %struct.GPR* %6844, i32 0, i32 33
  %6846 = getelementptr inbounds %struct.Reg, %struct.Reg* %6845, i32 0, i32 0
  %PC.i1563 = bitcast %union.anon* %6846 to i64*
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6848 = getelementptr inbounds %struct.GPR, %struct.GPR* %6847, i32 0, i32 5
  %6849 = getelementptr inbounds %struct.Reg, %struct.Reg* %6848, i32 0, i32 0
  %RCX.i1564 = bitcast %union.anon* %6849 to i64*
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6851 = getelementptr inbounds %struct.GPR, %struct.GPR* %6850, i32 0, i32 15
  %6852 = getelementptr inbounds %struct.Reg, %struct.Reg* %6851, i32 0, i32 0
  %RBP.i1565 = bitcast %union.anon* %6852 to i64*
  %6853 = load i64, i64* %RBP.i1565
  %6854 = sub i64 %6853, 12
  %6855 = load i64, i64* %PC.i1563
  %6856 = add i64 %6855, 4
  store i64 %6856, i64* %PC.i1563
  %6857 = inttoptr i64 %6854 to i32*
  %6858 = load i32, i32* %6857
  %6859 = sext i32 %6858 to i64
  store i64 %6859, i64* %RCX.i1564, align 8
  store %struct.Memory* %loadMem_4b0ba5, %struct.Memory** %MEMORY
  %loadMem_4b0ba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 33
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %6862 to i64*
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 5
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %RCX.i1562 = bitcast %union.anon* %6865 to i64*
  %6866 = load i64, i64* %RCX.i1562
  %6867 = load i64, i64* %PC.i1561
  %6868 = add i64 %6867, 4
  store i64 %6868, i64* %PC.i1561
  %6869 = sext i64 %6866 to i128
  %6870 = and i128 %6869, -18446744073709551616
  %6871 = zext i64 %6866 to i128
  %6872 = or i128 %6870, %6871
  %6873 = mul i128 12, %6872
  %6874 = trunc i128 %6873 to i64
  store i64 %6874, i64* %RCX.i1562, align 8
  %6875 = sext i64 %6874 to i128
  %6876 = icmp ne i128 %6875, %6873
  %6877 = zext i1 %6876 to i8
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6877, i8* %6878, align 1
  %6879 = trunc i128 %6873 to i32
  %6880 = and i32 %6879, 255
  %6881 = call i32 @llvm.ctpop.i32(i32 %6880)
  %6882 = trunc i32 %6881 to i8
  %6883 = and i8 %6882, 1
  %6884 = xor i8 %6883, 1
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6884, i8* %6885, align 1
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6886, align 1
  %6887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6887, align 1
  %6888 = lshr i64 %6874, 63
  %6889 = trunc i64 %6888 to i8
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6889, i8* %6890, align 1
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6877, i8* %6891, align 1
  store %struct.Memory* %loadMem_4b0ba9, %struct.Memory** %MEMORY
  %loadMem_4b0bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6893 = getelementptr inbounds %struct.GPR, %struct.GPR* %6892, i32 0, i32 33
  %6894 = getelementptr inbounds %struct.Reg, %struct.Reg* %6893, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %6894 to i64*
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6896 = getelementptr inbounds %struct.GPR, %struct.GPR* %6895, i32 0, i32 1
  %6897 = getelementptr inbounds %struct.Reg, %struct.Reg* %6896, i32 0, i32 0
  %RAX.i1559 = bitcast %union.anon* %6897 to i64*
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6899 = getelementptr inbounds %struct.GPR, %struct.GPR* %6898, i32 0, i32 5
  %6900 = getelementptr inbounds %struct.Reg, %struct.Reg* %6899, i32 0, i32 0
  %RCX.i1560 = bitcast %union.anon* %6900 to i64*
  %6901 = load i64, i64* %RAX.i1559
  %6902 = load i64, i64* %RCX.i1560
  %6903 = load i64, i64* %PC.i1558
  %6904 = add i64 %6903, 3
  store i64 %6904, i64* %PC.i1558
  %6905 = add i64 %6902, %6901
  store i64 %6905, i64* %RAX.i1559, align 8
  %6906 = icmp ult i64 %6905, %6901
  %6907 = icmp ult i64 %6905, %6902
  %6908 = or i1 %6906, %6907
  %6909 = zext i1 %6908 to i8
  %6910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6909, i8* %6910, align 1
  %6911 = trunc i64 %6905 to i32
  %6912 = and i32 %6911, 255
  %6913 = call i32 @llvm.ctpop.i32(i32 %6912)
  %6914 = trunc i32 %6913 to i8
  %6915 = and i8 %6914, 1
  %6916 = xor i8 %6915, 1
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6916, i8* %6917, align 1
  %6918 = xor i64 %6902, %6901
  %6919 = xor i64 %6918, %6905
  %6920 = lshr i64 %6919, 4
  %6921 = trunc i64 %6920 to i8
  %6922 = and i8 %6921, 1
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6922, i8* %6923, align 1
  %6924 = icmp eq i64 %6905, 0
  %6925 = zext i1 %6924 to i8
  %6926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6925, i8* %6926, align 1
  %6927 = lshr i64 %6905, 63
  %6928 = trunc i64 %6927 to i8
  %6929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6928, i8* %6929, align 1
  %6930 = lshr i64 %6901, 63
  %6931 = lshr i64 %6902, 63
  %6932 = xor i64 %6927, %6930
  %6933 = xor i64 %6927, %6931
  %6934 = add i64 %6932, %6933
  %6935 = icmp eq i64 %6934, 2
  %6936 = zext i1 %6935 to i8
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6936, i8* %6937, align 1
  store %struct.Memory* %loadMem_4b0bad, %struct.Memory** %MEMORY
  %loadMem_4b0bb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6939 = getelementptr inbounds %struct.GPR, %struct.GPR* %6938, i32 0, i32 33
  %6940 = getelementptr inbounds %struct.Reg, %struct.Reg* %6939, i32 0, i32 0
  %PC.i1555 = bitcast %union.anon* %6940 to i64*
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6942 = getelementptr inbounds %struct.GPR, %struct.GPR* %6941, i32 0, i32 5
  %6943 = getelementptr inbounds %struct.Reg, %struct.Reg* %6942, i32 0, i32 0
  %RCX.i1556 = bitcast %union.anon* %6943 to i64*
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6945 = getelementptr inbounds %struct.GPR, %struct.GPR* %6944, i32 0, i32 15
  %6946 = getelementptr inbounds %struct.Reg, %struct.Reg* %6945, i32 0, i32 0
  %RBP.i1557 = bitcast %union.anon* %6946 to i64*
  %6947 = load i64, i64* %RBP.i1557
  %6948 = sub i64 %6947, 40
  %6949 = load i64, i64* %PC.i1555
  %6950 = add i64 %6949, 4
  store i64 %6950, i64* %PC.i1555
  %6951 = inttoptr i64 %6948 to i32*
  %6952 = load i32, i32* %6951
  %6953 = sext i32 %6952 to i64
  store i64 %6953, i64* %RCX.i1556, align 8
  store %struct.Memory* %loadMem_4b0bb0, %struct.Memory** %MEMORY
  %loadMem_4b0bb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6955 = getelementptr inbounds %struct.GPR, %struct.GPR* %6954, i32 0, i32 33
  %6956 = getelementptr inbounds %struct.Reg, %struct.Reg* %6955, i32 0, i32 0
  %PC.i1552 = bitcast %union.anon* %6956 to i64*
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6958 = getelementptr inbounds %struct.GPR, %struct.GPR* %6957, i32 0, i32 1
  %6959 = getelementptr inbounds %struct.Reg, %struct.Reg* %6958, i32 0, i32 0
  %RAX.i1553 = bitcast %union.anon* %6959 to i64*
  %6960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6961 = getelementptr inbounds %struct.GPR, %struct.GPR* %6960, i32 0, i32 5
  %6962 = getelementptr inbounds %struct.Reg, %struct.Reg* %6961, i32 0, i32 0
  %RCX.i1554 = bitcast %union.anon* %6962 to i64*
  %6963 = load i64, i64* %RAX.i1553
  %6964 = load i64, i64* %RCX.i1554
  %6965 = mul i64 %6964, 4
  %6966 = add i64 %6965, %6963
  %6967 = load i64, i64* %PC.i1552
  %6968 = add i64 %6967, 7
  store i64 %6968, i64* %PC.i1552
  %6969 = inttoptr i64 %6966 to i32*
  %6970 = load i32, i32* %6969
  %6971 = sub i32 %6970, 128
  %6972 = icmp ult i32 %6970, 128
  %6973 = zext i1 %6972 to i8
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6973, i8* %6974, align 1
  %6975 = and i32 %6971, 255
  %6976 = call i32 @llvm.ctpop.i32(i32 %6975)
  %6977 = trunc i32 %6976 to i8
  %6978 = and i8 %6977, 1
  %6979 = xor i8 %6978, 1
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6979, i8* %6980, align 1
  %6981 = xor i32 %6970, 128
  %6982 = xor i32 %6981, %6971
  %6983 = lshr i32 %6982, 4
  %6984 = trunc i32 %6983 to i8
  %6985 = and i8 %6984, 1
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6985, i8* %6986, align 1
  %6987 = icmp eq i32 %6971, 0
  %6988 = zext i1 %6987 to i8
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6988, i8* %6989, align 1
  %6990 = lshr i32 %6971, 31
  %6991 = trunc i32 %6990 to i8
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6991, i8* %6992, align 1
  %6993 = lshr i32 %6970, 31
  %6994 = xor i32 %6990, %6993
  %6995 = add i32 %6994, %6993
  %6996 = icmp eq i32 %6995, 2
  %6997 = zext i1 %6996 to i8
  %6998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6997, i8* %6998, align 1
  store %struct.Memory* %loadMem_4b0bb4, %struct.Memory** %MEMORY
  %loadMem_4b0bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 33
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %7001 to i64*
  %7002 = load i64, i64* %PC.i1551
  %7003 = add i64 %7002, 55
  %7004 = load i64, i64* %PC.i1551
  %7005 = add i64 %7004, 6
  %7006 = load i64, i64* %PC.i1551
  %7007 = add i64 %7006, 6
  store i64 %7007, i64* %PC.i1551
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7009 = load i8, i8* %7008, align 1
  %7010 = icmp ne i8 %7009, 0
  %7011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7012 = load i8, i8* %7011, align 1
  %7013 = icmp ne i8 %7012, 0
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7015 = load i8, i8* %7014, align 1
  %7016 = icmp ne i8 %7015, 0
  %7017 = xor i1 %7013, %7016
  %7018 = or i1 %7010, %7017
  %7019 = zext i1 %7018 to i8
  store i8 %7019, i8* %BRANCH_TAKEN, align 1
  %7020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7021 = select i1 %7018, i64 %7003, i64 %7005
  store i64 %7021, i64* %7020, align 8
  store %struct.Memory* %loadMem_4b0bbb, %struct.Memory** %MEMORY
  %loadBr_4b0bbb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0bbb = icmp eq i8 %loadBr_4b0bbb, 1
  br i1 %cmpBr_4b0bbb, label %block_.L_4b0bf2, label %block_.L_4b0bc1

block_.L_4b0bc1:                                  ; preds = %block_4b0b8a, %block_.L_4b0b1c
  %loadMem_4b0bc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7023 = getelementptr inbounds %struct.GPR, %struct.GPR* %7022, i32 0, i32 33
  %7024 = getelementptr inbounds %struct.Reg, %struct.Reg* %7023, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %7024 to i64*
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7026 = getelementptr inbounds %struct.GPR, %struct.GPR* %7025, i32 0, i32 1
  %7027 = getelementptr inbounds %struct.Reg, %struct.Reg* %7026, i32 0, i32 0
  %RAX.i1549 = bitcast %union.anon* %7027 to i64*
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 15
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %RBP.i1550 = bitcast %union.anon* %7030 to i64*
  %7031 = load i64, i64* %RBP.i1550
  %7032 = sub i64 %7031, 19184
  %7033 = load i64, i64* %PC.i1548
  %7034 = add i64 %7033, 7
  store i64 %7034, i64* %PC.i1548
  store i64 %7032, i64* %RAX.i1549, align 8
  store %struct.Memory* %loadMem_4b0bc1, %struct.Memory** %MEMORY
  %loadMem_4b0bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7036 = getelementptr inbounds %struct.GPR, %struct.GPR* %7035, i32 0, i32 33
  %7037 = getelementptr inbounds %struct.Reg, %struct.Reg* %7036, i32 0, i32 0
  %PC.i1546 = bitcast %union.anon* %7037 to i64*
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7039 = getelementptr inbounds %struct.GPR, %struct.GPR* %7038, i32 0, i32 1
  %7040 = getelementptr inbounds %struct.Reg, %struct.Reg* %7039, i32 0, i32 0
  %RAX.i1547 = bitcast %union.anon* %7040 to i64*
  %7041 = load i64, i64* %RAX.i1547
  %7042 = load i64, i64* %PC.i1546
  %7043 = add i64 %7042, 6
  store i64 %7043, i64* %PC.i1546
  %7044 = add i64 2700, %7041
  store i64 %7044, i64* %RAX.i1547, align 8
  %7045 = icmp ult i64 %7044, %7041
  %7046 = icmp ult i64 %7044, 2700
  %7047 = or i1 %7045, %7046
  %7048 = zext i1 %7047 to i8
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7048, i8* %7049, align 1
  %7050 = trunc i64 %7044 to i32
  %7051 = and i32 %7050, 255
  %7052 = call i32 @llvm.ctpop.i32(i32 %7051)
  %7053 = trunc i32 %7052 to i8
  %7054 = and i8 %7053, 1
  %7055 = xor i8 %7054, 1
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7055, i8* %7056, align 1
  %7057 = xor i64 2700, %7041
  %7058 = xor i64 %7057, %7044
  %7059 = lshr i64 %7058, 4
  %7060 = trunc i64 %7059 to i8
  %7061 = and i8 %7060, 1
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7061, i8* %7062, align 1
  %7063 = icmp eq i64 %7044, 0
  %7064 = zext i1 %7063 to i8
  %7065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7064, i8* %7065, align 1
  %7066 = lshr i64 %7044, 63
  %7067 = trunc i64 %7066 to i8
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7067, i8* %7068, align 1
  %7069 = lshr i64 %7041, 63
  %7070 = xor i64 %7066, %7069
  %7071 = add i64 %7070, %7066
  %7072 = icmp eq i64 %7071, 2
  %7073 = zext i1 %7072 to i8
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7073, i8* %7074, align 1
  store %struct.Memory* %loadMem_4b0bc8, %struct.Memory** %MEMORY
  %loadMem_4b0bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7076 = getelementptr inbounds %struct.GPR, %struct.GPR* %7075, i32 0, i32 33
  %7077 = getelementptr inbounds %struct.Reg, %struct.Reg* %7076, i32 0, i32 0
  %PC.i1543 = bitcast %union.anon* %7077 to i64*
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7079 = getelementptr inbounds %struct.GPR, %struct.GPR* %7078, i32 0, i32 5
  %7080 = getelementptr inbounds %struct.Reg, %struct.Reg* %7079, i32 0, i32 0
  %RCX.i1544 = bitcast %union.anon* %7080 to i64*
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7082 = getelementptr inbounds %struct.GPR, %struct.GPR* %7081, i32 0, i32 15
  %7083 = getelementptr inbounds %struct.Reg, %struct.Reg* %7082, i32 0, i32 0
  %RBP.i1545 = bitcast %union.anon* %7083 to i64*
  %7084 = load i64, i64* %RBP.i1545
  %7085 = sub i64 %7084, 8
  %7086 = load i64, i64* %PC.i1543
  %7087 = add i64 %7086, 4
  store i64 %7087, i64* %PC.i1543
  %7088 = inttoptr i64 %7085 to i32*
  %7089 = load i32, i32* %7088
  %7090 = sext i32 %7089 to i64
  store i64 %7090, i64* %RCX.i1544, align 8
  store %struct.Memory* %loadMem_4b0bce, %struct.Memory** %MEMORY
  %loadMem_4b0bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7092 = getelementptr inbounds %struct.GPR, %struct.GPR* %7091, i32 0, i32 33
  %7093 = getelementptr inbounds %struct.Reg, %struct.Reg* %7092, i32 0, i32 0
  %PC.i1541 = bitcast %union.anon* %7093 to i64*
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7095 = getelementptr inbounds %struct.GPR, %struct.GPR* %7094, i32 0, i32 5
  %7096 = getelementptr inbounds %struct.Reg, %struct.Reg* %7095, i32 0, i32 0
  %RCX.i1542 = bitcast %union.anon* %7096 to i64*
  %7097 = load i64, i64* %RCX.i1542
  %7098 = load i64, i64* %PC.i1541
  %7099 = add i64 %7098, 7
  store i64 %7099, i64* %PC.i1541
  %7100 = sext i64 %7097 to i128
  %7101 = and i128 %7100, -18446744073709551616
  %7102 = zext i64 %7097 to i128
  %7103 = or i128 %7101, %7102
  %7104 = mul i128 180, %7103
  %7105 = trunc i128 %7104 to i64
  store i64 %7105, i64* %RCX.i1542, align 8
  %7106 = sext i64 %7105 to i128
  %7107 = icmp ne i128 %7106, %7104
  %7108 = zext i1 %7107 to i8
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7108, i8* %7109, align 1
  %7110 = trunc i128 %7104 to i32
  %7111 = and i32 %7110, 255
  %7112 = call i32 @llvm.ctpop.i32(i32 %7111)
  %7113 = trunc i32 %7112 to i8
  %7114 = and i8 %7113, 1
  %7115 = xor i8 %7114, 1
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7115, i8* %7116, align 1
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7117, align 1
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7118, align 1
  %7119 = lshr i64 %7105, 63
  %7120 = trunc i64 %7119 to i8
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7120, i8* %7121, align 1
  %7122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7108, i8* %7122, align 1
  store %struct.Memory* %loadMem_4b0bd2, %struct.Memory** %MEMORY
  %loadMem_4b0bd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7124 = getelementptr inbounds %struct.GPR, %struct.GPR* %7123, i32 0, i32 33
  %7125 = getelementptr inbounds %struct.Reg, %struct.Reg* %7124, i32 0, i32 0
  %PC.i1538 = bitcast %union.anon* %7125 to i64*
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7127 = getelementptr inbounds %struct.GPR, %struct.GPR* %7126, i32 0, i32 1
  %7128 = getelementptr inbounds %struct.Reg, %struct.Reg* %7127, i32 0, i32 0
  %RAX.i1539 = bitcast %union.anon* %7128 to i64*
  %7129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7130 = getelementptr inbounds %struct.GPR, %struct.GPR* %7129, i32 0, i32 5
  %7131 = getelementptr inbounds %struct.Reg, %struct.Reg* %7130, i32 0, i32 0
  %RCX.i1540 = bitcast %union.anon* %7131 to i64*
  %7132 = load i64, i64* %RAX.i1539
  %7133 = load i64, i64* %RCX.i1540
  %7134 = load i64, i64* %PC.i1538
  %7135 = add i64 %7134, 3
  store i64 %7135, i64* %PC.i1538
  %7136 = add i64 %7133, %7132
  store i64 %7136, i64* %RAX.i1539, align 8
  %7137 = icmp ult i64 %7136, %7132
  %7138 = icmp ult i64 %7136, %7133
  %7139 = or i1 %7137, %7138
  %7140 = zext i1 %7139 to i8
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7140, i8* %7141, align 1
  %7142 = trunc i64 %7136 to i32
  %7143 = and i32 %7142, 255
  %7144 = call i32 @llvm.ctpop.i32(i32 %7143)
  %7145 = trunc i32 %7144 to i8
  %7146 = and i8 %7145, 1
  %7147 = xor i8 %7146, 1
  %7148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7147, i8* %7148, align 1
  %7149 = xor i64 %7133, %7132
  %7150 = xor i64 %7149, %7136
  %7151 = lshr i64 %7150, 4
  %7152 = trunc i64 %7151 to i8
  %7153 = and i8 %7152, 1
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7153, i8* %7154, align 1
  %7155 = icmp eq i64 %7136, 0
  %7156 = zext i1 %7155 to i8
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7156, i8* %7157, align 1
  %7158 = lshr i64 %7136, 63
  %7159 = trunc i64 %7158 to i8
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7159, i8* %7160, align 1
  %7161 = lshr i64 %7132, 63
  %7162 = lshr i64 %7133, 63
  %7163 = xor i64 %7158, %7161
  %7164 = xor i64 %7158, %7162
  %7165 = add i64 %7163, %7164
  %7166 = icmp eq i64 %7165, 2
  %7167 = zext i1 %7166 to i8
  %7168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7167, i8* %7168, align 1
  store %struct.Memory* %loadMem_4b0bd9, %struct.Memory** %MEMORY
  %loadMem_4b0bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7170 = getelementptr inbounds %struct.GPR, %struct.GPR* %7169, i32 0, i32 33
  %7171 = getelementptr inbounds %struct.Reg, %struct.Reg* %7170, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %7171 to i64*
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7173 = getelementptr inbounds %struct.GPR, %struct.GPR* %7172, i32 0, i32 5
  %7174 = getelementptr inbounds %struct.Reg, %struct.Reg* %7173, i32 0, i32 0
  %RCX.i1536 = bitcast %union.anon* %7174 to i64*
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7176 = getelementptr inbounds %struct.GPR, %struct.GPR* %7175, i32 0, i32 15
  %7177 = getelementptr inbounds %struct.Reg, %struct.Reg* %7176, i32 0, i32 0
  %RBP.i1537 = bitcast %union.anon* %7177 to i64*
  %7178 = load i64, i64* %RBP.i1537
  %7179 = sub i64 %7178, 12
  %7180 = load i64, i64* %PC.i1535
  %7181 = add i64 %7180, 4
  store i64 %7181, i64* %PC.i1535
  %7182 = inttoptr i64 %7179 to i32*
  %7183 = load i32, i32* %7182
  %7184 = sext i32 %7183 to i64
  store i64 %7184, i64* %RCX.i1536, align 8
  store %struct.Memory* %loadMem_4b0bdc, %struct.Memory** %MEMORY
  %loadMem_4b0be0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7186 = getelementptr inbounds %struct.GPR, %struct.GPR* %7185, i32 0, i32 33
  %7187 = getelementptr inbounds %struct.Reg, %struct.Reg* %7186, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %7187 to i64*
  %7188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7189 = getelementptr inbounds %struct.GPR, %struct.GPR* %7188, i32 0, i32 5
  %7190 = getelementptr inbounds %struct.Reg, %struct.Reg* %7189, i32 0, i32 0
  %RCX.i1534 = bitcast %union.anon* %7190 to i64*
  %7191 = load i64, i64* %RCX.i1534
  %7192 = load i64, i64* %PC.i1533
  %7193 = add i64 %7192, 4
  store i64 %7193, i64* %PC.i1533
  %7194 = sext i64 %7191 to i128
  %7195 = and i128 %7194, -18446744073709551616
  %7196 = zext i64 %7191 to i128
  %7197 = or i128 %7195, %7196
  %7198 = mul i128 12, %7197
  %7199 = trunc i128 %7198 to i64
  store i64 %7199, i64* %RCX.i1534, align 8
  %7200 = sext i64 %7199 to i128
  %7201 = icmp ne i128 %7200, %7198
  %7202 = zext i1 %7201 to i8
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7202, i8* %7203, align 1
  %7204 = trunc i128 %7198 to i32
  %7205 = and i32 %7204, 255
  %7206 = call i32 @llvm.ctpop.i32(i32 %7205)
  %7207 = trunc i32 %7206 to i8
  %7208 = and i8 %7207, 1
  %7209 = xor i8 %7208, 1
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7209, i8* %7210, align 1
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7211, align 1
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7212, align 1
  %7213 = lshr i64 %7199, 63
  %7214 = trunc i64 %7213 to i8
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7214, i8* %7215, align 1
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7202, i8* %7216, align 1
  store %struct.Memory* %loadMem_4b0be0, %struct.Memory** %MEMORY
  %loadMem_4b0be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 33
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %7219 to i64*
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7221 = getelementptr inbounds %struct.GPR, %struct.GPR* %7220, i32 0, i32 1
  %7222 = getelementptr inbounds %struct.Reg, %struct.Reg* %7221, i32 0, i32 0
  %RAX.i1531 = bitcast %union.anon* %7222 to i64*
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7224 = getelementptr inbounds %struct.GPR, %struct.GPR* %7223, i32 0, i32 5
  %7225 = getelementptr inbounds %struct.Reg, %struct.Reg* %7224, i32 0, i32 0
  %RCX.i1532 = bitcast %union.anon* %7225 to i64*
  %7226 = load i64, i64* %RAX.i1531
  %7227 = load i64, i64* %RCX.i1532
  %7228 = load i64, i64* %PC.i1530
  %7229 = add i64 %7228, 3
  store i64 %7229, i64* %PC.i1530
  %7230 = add i64 %7227, %7226
  store i64 %7230, i64* %RAX.i1531, align 8
  %7231 = icmp ult i64 %7230, %7226
  %7232 = icmp ult i64 %7230, %7227
  %7233 = or i1 %7231, %7232
  %7234 = zext i1 %7233 to i8
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7234, i8* %7235, align 1
  %7236 = trunc i64 %7230 to i32
  %7237 = and i32 %7236, 255
  %7238 = call i32 @llvm.ctpop.i32(i32 %7237)
  %7239 = trunc i32 %7238 to i8
  %7240 = and i8 %7239, 1
  %7241 = xor i8 %7240, 1
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7241, i8* %7242, align 1
  %7243 = xor i64 %7227, %7226
  %7244 = xor i64 %7243, %7230
  %7245 = lshr i64 %7244, 4
  %7246 = trunc i64 %7245 to i8
  %7247 = and i8 %7246, 1
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7247, i8* %7248, align 1
  %7249 = icmp eq i64 %7230, 0
  %7250 = zext i1 %7249 to i8
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7250, i8* %7251, align 1
  %7252 = lshr i64 %7230, 63
  %7253 = trunc i64 %7252 to i8
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7253, i8* %7254, align 1
  %7255 = lshr i64 %7226, 63
  %7256 = lshr i64 %7227, 63
  %7257 = xor i64 %7252, %7255
  %7258 = xor i64 %7252, %7256
  %7259 = add i64 %7257, %7258
  %7260 = icmp eq i64 %7259, 2
  %7261 = zext i1 %7260 to i8
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7261, i8* %7262, align 1
  store %struct.Memory* %loadMem_4b0be4, %struct.Memory** %MEMORY
  %loadMem_4b0be7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7264 = getelementptr inbounds %struct.GPR, %struct.GPR* %7263, i32 0, i32 33
  %7265 = getelementptr inbounds %struct.Reg, %struct.Reg* %7264, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %7265 to i64*
  %7266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7267 = getelementptr inbounds %struct.GPR, %struct.GPR* %7266, i32 0, i32 5
  %7268 = getelementptr inbounds %struct.Reg, %struct.Reg* %7267, i32 0, i32 0
  %RCX.i1528 = bitcast %union.anon* %7268 to i64*
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 15
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %RBP.i1529 = bitcast %union.anon* %7271 to i64*
  %7272 = load i64, i64* %RBP.i1529
  %7273 = sub i64 %7272, 40
  %7274 = load i64, i64* %PC.i1527
  %7275 = add i64 %7274, 4
  store i64 %7275, i64* %PC.i1527
  %7276 = inttoptr i64 %7273 to i32*
  %7277 = load i32, i32* %7276
  %7278 = sext i32 %7277 to i64
  store i64 %7278, i64* %RCX.i1528, align 8
  store %struct.Memory* %loadMem_4b0be7, %struct.Memory** %MEMORY
  %loadMem_4b0beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7280 = getelementptr inbounds %struct.GPR, %struct.GPR* %7279, i32 0, i32 33
  %7281 = getelementptr inbounds %struct.Reg, %struct.Reg* %7280, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %7281 to i64*
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7283 = getelementptr inbounds %struct.GPR, %struct.GPR* %7282, i32 0, i32 1
  %7284 = getelementptr inbounds %struct.Reg, %struct.Reg* %7283, i32 0, i32 0
  %RAX.i1525 = bitcast %union.anon* %7284 to i64*
  %7285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7286 = getelementptr inbounds %struct.GPR, %struct.GPR* %7285, i32 0, i32 5
  %7287 = getelementptr inbounds %struct.Reg, %struct.Reg* %7286, i32 0, i32 0
  %RCX.i1526 = bitcast %union.anon* %7287 to i64*
  %7288 = load i64, i64* %RAX.i1525
  %7289 = load i64, i64* %RCX.i1526
  %7290 = mul i64 %7289, 4
  %7291 = add i64 %7290, %7288
  %7292 = load i64, i64* %PC.i1524
  %7293 = add i64 %7292, 7
  store i64 %7293, i64* %PC.i1524
  %7294 = inttoptr i64 %7291 to i32*
  store i32 32, i32* %7294
  store %struct.Memory* %loadMem_4b0beb, %struct.Memory** %MEMORY
  br label %block_.L_4b0bf2

block_.L_4b0bf2:                                  ; preds = %block_.L_4b0bc1, %block_4b0b8a
  %loadMem_4b0bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 33
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %7297 to i64*
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 1
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %RAX.i1522 = bitcast %union.anon* %7300 to i64*
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7302 = getelementptr inbounds %struct.GPR, %struct.GPR* %7301, i32 0, i32 15
  %7303 = getelementptr inbounds %struct.Reg, %struct.Reg* %7302, i32 0, i32 0
  %RBP.i1523 = bitcast %union.anon* %7303 to i64*
  %7304 = load i64, i64* %RBP.i1523
  %7305 = sub i64 %7304, 35392
  %7306 = load i64, i64* %PC.i1521
  %7307 = add i64 %7306, 7
  store i64 %7307, i64* %PC.i1521
  store i64 %7305, i64* %RAX.i1522, align 8
  store %struct.Memory* %loadMem_4b0bf2, %struct.Memory** %MEMORY
  %loadMem_4b0bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7309 = getelementptr inbounds %struct.GPR, %struct.GPR* %7308, i32 0, i32 33
  %7310 = getelementptr inbounds %struct.Reg, %struct.Reg* %7309, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %7310 to i64*
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 5
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %RCX.i1519 = bitcast %union.anon* %7313 to i64*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 15
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %RBP.i1520 = bitcast %union.anon* %7316 to i64*
  %7317 = load i64, i64* %RBP.i1520
  %7318 = sub i64 %7317, 19184
  %7319 = load i64, i64* %PC.i1518
  %7320 = add i64 %7319, 7
  store i64 %7320, i64* %PC.i1518
  store i64 %7318, i64* %RCX.i1519, align 8
  store %struct.Memory* %loadMem_4b0bf9, %struct.Memory** %MEMORY
  %loadMem_4b0c00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7322 = getelementptr inbounds %struct.GPR, %struct.GPR* %7321, i32 0, i32 33
  %7323 = getelementptr inbounds %struct.Reg, %struct.Reg* %7322, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %7323 to i64*
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7325 = getelementptr inbounds %struct.GPR, %struct.GPR* %7324, i32 0, i32 7
  %7326 = getelementptr inbounds %struct.Reg, %struct.Reg* %7325, i32 0, i32 0
  %RDX.i1517 = bitcast %union.anon* %7326 to i64*
  %7327 = load i64, i64* %PC.i1516
  %7328 = add i64 %7327, 5
  store i64 %7328, i64* %PC.i1516
  store i64 64, i64* %RDX.i1517, align 8
  store %struct.Memory* %loadMem_4b0c00, %struct.Memory** %MEMORY
  %loadMem_4b0c05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7330 = getelementptr inbounds %struct.GPR, %struct.GPR* %7329, i32 0, i32 33
  %7331 = getelementptr inbounds %struct.Reg, %struct.Reg* %7330, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %7331 to i64*
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7333 = getelementptr inbounds %struct.GPR, %struct.GPR* %7332, i32 0, i32 5
  %7334 = getelementptr inbounds %struct.Reg, %struct.Reg* %7333, i32 0, i32 0
  %RCX.i1514 = bitcast %union.anon* %7334 to i64*
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 9
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %RSI.i1515 = bitcast %union.anon* %7337 to i64*
  %7338 = load i64, i64* %RCX.i1514
  %7339 = load i64, i64* %PC.i1513
  %7340 = add i64 %7339, 3
  store i64 %7340, i64* %PC.i1513
  store i64 %7338, i64* %RSI.i1515, align 8
  store %struct.Memory* %loadMem_4b0c05, %struct.Memory** %MEMORY
  %loadMem_4b0c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 33
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %7343 to i64*
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 9
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %RSI.i1512 = bitcast %union.anon* %7346 to i64*
  %7347 = load i64, i64* %RSI.i1512
  %7348 = load i64, i64* %PC.i1511
  %7349 = add i64 %7348, 7
  store i64 %7349, i64* %PC.i1511
  %7350 = add i64 2700, %7347
  store i64 %7350, i64* %RSI.i1512, align 8
  %7351 = icmp ult i64 %7350, %7347
  %7352 = icmp ult i64 %7350, 2700
  %7353 = or i1 %7351, %7352
  %7354 = zext i1 %7353 to i8
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7354, i8* %7355, align 1
  %7356 = trunc i64 %7350 to i32
  %7357 = and i32 %7356, 255
  %7358 = call i32 @llvm.ctpop.i32(i32 %7357)
  %7359 = trunc i32 %7358 to i8
  %7360 = and i8 %7359, 1
  %7361 = xor i8 %7360, 1
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7361, i8* %7362, align 1
  %7363 = xor i64 2700, %7347
  %7364 = xor i64 %7363, %7350
  %7365 = lshr i64 %7364, 4
  %7366 = trunc i64 %7365 to i8
  %7367 = and i8 %7366, 1
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7367, i8* %7368, align 1
  %7369 = icmp eq i64 %7350, 0
  %7370 = zext i1 %7369 to i8
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7370, i8* %7371, align 1
  %7372 = lshr i64 %7350, 63
  %7373 = trunc i64 %7372 to i8
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7373, i8* %7374, align 1
  %7375 = lshr i64 %7347, 63
  %7376 = xor i64 %7372, %7375
  %7377 = add i64 %7376, %7372
  %7378 = icmp eq i64 %7377, 2
  %7379 = zext i1 %7378 to i8
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7379, i8* %7380, align 1
  store %struct.Memory* %loadMem_4b0c08, %struct.Memory** %MEMORY
  %loadMem_4b0c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7382 = getelementptr inbounds %struct.GPR, %struct.GPR* %7381, i32 0, i32 33
  %7383 = getelementptr inbounds %struct.Reg, %struct.Reg* %7382, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %7383 to i64*
  %7384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7385 = getelementptr inbounds %struct.GPR, %struct.GPR* %7384, i32 0, i32 11
  %7386 = getelementptr inbounds %struct.Reg, %struct.Reg* %7385, i32 0, i32 0
  %RDI.i1509 = bitcast %union.anon* %7386 to i64*
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7388 = getelementptr inbounds %struct.GPR, %struct.GPR* %7387, i32 0, i32 15
  %7389 = getelementptr inbounds %struct.Reg, %struct.Reg* %7388, i32 0, i32 0
  %RBP.i1510 = bitcast %union.anon* %7389 to i64*
  %7390 = load i64, i64* %RBP.i1510
  %7391 = sub i64 %7390, 8
  %7392 = load i64, i64* %PC.i1508
  %7393 = add i64 %7392, 4
  store i64 %7393, i64* %PC.i1508
  %7394 = inttoptr i64 %7391 to i32*
  %7395 = load i32, i32* %7394
  %7396 = sext i32 %7395 to i64
  store i64 %7396, i64* %RDI.i1509, align 8
  store %struct.Memory* %loadMem_4b0c0f, %struct.Memory** %MEMORY
  %loadMem_4b0c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7398 = getelementptr inbounds %struct.GPR, %struct.GPR* %7397, i32 0, i32 33
  %7399 = getelementptr inbounds %struct.Reg, %struct.Reg* %7398, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %7399 to i64*
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 11
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %RDI.i1507 = bitcast %union.anon* %7402 to i64*
  %7403 = load i64, i64* %RDI.i1507
  %7404 = load i64, i64* %PC.i1506
  %7405 = add i64 %7404, 7
  store i64 %7405, i64* %PC.i1506
  %7406 = sext i64 %7403 to i128
  %7407 = and i128 %7406, -18446744073709551616
  %7408 = zext i64 %7403 to i128
  %7409 = or i128 %7407, %7408
  %7410 = mul i128 180, %7409
  %7411 = trunc i128 %7410 to i64
  store i64 %7411, i64* %RDI.i1507, align 8
  %7412 = sext i64 %7411 to i128
  %7413 = icmp ne i128 %7412, %7410
  %7414 = zext i1 %7413 to i8
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7414, i8* %7415, align 1
  %7416 = trunc i128 %7410 to i32
  %7417 = and i32 %7416, 255
  %7418 = call i32 @llvm.ctpop.i32(i32 %7417)
  %7419 = trunc i32 %7418 to i8
  %7420 = and i8 %7419, 1
  %7421 = xor i8 %7420, 1
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7421, i8* %7422, align 1
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7423, align 1
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7424, align 1
  %7425 = lshr i64 %7411, 63
  %7426 = trunc i64 %7425 to i8
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7426, i8* %7427, align 1
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7414, i8* %7428, align 1
  store %struct.Memory* %loadMem_4b0c13, %struct.Memory** %MEMORY
  %loadMem_4b0c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 33
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %PC.i1503 = bitcast %union.anon* %7431 to i64*
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7433 = getelementptr inbounds %struct.GPR, %struct.GPR* %7432, i32 0, i32 9
  %7434 = getelementptr inbounds %struct.Reg, %struct.Reg* %7433, i32 0, i32 0
  %RSI.i1504 = bitcast %union.anon* %7434 to i64*
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7436 = getelementptr inbounds %struct.GPR, %struct.GPR* %7435, i32 0, i32 11
  %7437 = getelementptr inbounds %struct.Reg, %struct.Reg* %7436, i32 0, i32 0
  %RDI.i1505 = bitcast %union.anon* %7437 to i64*
  %7438 = load i64, i64* %RSI.i1504
  %7439 = load i64, i64* %RDI.i1505
  %7440 = load i64, i64* %PC.i1503
  %7441 = add i64 %7440, 3
  store i64 %7441, i64* %PC.i1503
  %7442 = add i64 %7439, %7438
  store i64 %7442, i64* %RSI.i1504, align 8
  %7443 = icmp ult i64 %7442, %7438
  %7444 = icmp ult i64 %7442, %7439
  %7445 = or i1 %7443, %7444
  %7446 = zext i1 %7445 to i8
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7446, i8* %7447, align 1
  %7448 = trunc i64 %7442 to i32
  %7449 = and i32 %7448, 255
  %7450 = call i32 @llvm.ctpop.i32(i32 %7449)
  %7451 = trunc i32 %7450 to i8
  %7452 = and i8 %7451, 1
  %7453 = xor i8 %7452, 1
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7453, i8* %7454, align 1
  %7455 = xor i64 %7439, %7438
  %7456 = xor i64 %7455, %7442
  %7457 = lshr i64 %7456, 4
  %7458 = trunc i64 %7457 to i8
  %7459 = and i8 %7458, 1
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7459, i8* %7460, align 1
  %7461 = icmp eq i64 %7442, 0
  %7462 = zext i1 %7461 to i8
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7462, i8* %7463, align 1
  %7464 = lshr i64 %7442, 63
  %7465 = trunc i64 %7464 to i8
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7465, i8* %7466, align 1
  %7467 = lshr i64 %7438, 63
  %7468 = lshr i64 %7439, 63
  %7469 = xor i64 %7464, %7467
  %7470 = xor i64 %7464, %7468
  %7471 = add i64 %7469, %7470
  %7472 = icmp eq i64 %7471, 2
  %7473 = zext i1 %7472 to i8
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7473, i8* %7474, align 1
  store %struct.Memory* %loadMem_4b0c1a, %struct.Memory** %MEMORY
  %loadMem_4b0c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7476 = getelementptr inbounds %struct.GPR, %struct.GPR* %7475, i32 0, i32 33
  %7477 = getelementptr inbounds %struct.Reg, %struct.Reg* %7476, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %7477 to i64*
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7479 = getelementptr inbounds %struct.GPR, %struct.GPR* %7478, i32 0, i32 11
  %7480 = getelementptr inbounds %struct.Reg, %struct.Reg* %7479, i32 0, i32 0
  %RDI.i1501 = bitcast %union.anon* %7480 to i64*
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7482 = getelementptr inbounds %struct.GPR, %struct.GPR* %7481, i32 0, i32 15
  %7483 = getelementptr inbounds %struct.Reg, %struct.Reg* %7482, i32 0, i32 0
  %RBP.i1502 = bitcast %union.anon* %7483 to i64*
  %7484 = load i64, i64* %RBP.i1502
  %7485 = sub i64 %7484, 12
  %7486 = load i64, i64* %PC.i1500
  %7487 = add i64 %7486, 4
  store i64 %7487, i64* %PC.i1500
  %7488 = inttoptr i64 %7485 to i32*
  %7489 = load i32, i32* %7488
  %7490 = sext i32 %7489 to i64
  store i64 %7490, i64* %RDI.i1501, align 8
  store %struct.Memory* %loadMem_4b0c1d, %struct.Memory** %MEMORY
  %loadMem_4b0c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7492 = getelementptr inbounds %struct.GPR, %struct.GPR* %7491, i32 0, i32 33
  %7493 = getelementptr inbounds %struct.Reg, %struct.Reg* %7492, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %7493 to i64*
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7495 = getelementptr inbounds %struct.GPR, %struct.GPR* %7494, i32 0, i32 11
  %7496 = getelementptr inbounds %struct.Reg, %struct.Reg* %7495, i32 0, i32 0
  %RDI.i1499 = bitcast %union.anon* %7496 to i64*
  %7497 = load i64, i64* %RDI.i1499
  %7498 = load i64, i64* %PC.i1498
  %7499 = add i64 %7498, 4
  store i64 %7499, i64* %PC.i1498
  %7500 = sext i64 %7497 to i128
  %7501 = and i128 %7500, -18446744073709551616
  %7502 = zext i64 %7497 to i128
  %7503 = or i128 %7501, %7502
  %7504 = mul i128 12, %7503
  %7505 = trunc i128 %7504 to i64
  store i64 %7505, i64* %RDI.i1499, align 8
  %7506 = sext i64 %7505 to i128
  %7507 = icmp ne i128 %7506, %7504
  %7508 = zext i1 %7507 to i8
  %7509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7508, i8* %7509, align 1
  %7510 = trunc i128 %7504 to i32
  %7511 = and i32 %7510, 255
  %7512 = call i32 @llvm.ctpop.i32(i32 %7511)
  %7513 = trunc i32 %7512 to i8
  %7514 = and i8 %7513, 1
  %7515 = xor i8 %7514, 1
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7515, i8* %7516, align 1
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7517, align 1
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7518, align 1
  %7519 = lshr i64 %7505, 63
  %7520 = trunc i64 %7519 to i8
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7520, i8* %7521, align 1
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7508, i8* %7522, align 1
  store %struct.Memory* %loadMem_4b0c21, %struct.Memory** %MEMORY
  %loadMem_4b0c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7524 = getelementptr inbounds %struct.GPR, %struct.GPR* %7523, i32 0, i32 33
  %7525 = getelementptr inbounds %struct.Reg, %struct.Reg* %7524, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %7525 to i64*
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7527 = getelementptr inbounds %struct.GPR, %struct.GPR* %7526, i32 0, i32 9
  %7528 = getelementptr inbounds %struct.Reg, %struct.Reg* %7527, i32 0, i32 0
  %RSI.i1496 = bitcast %union.anon* %7528 to i64*
  %7529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7530 = getelementptr inbounds %struct.GPR, %struct.GPR* %7529, i32 0, i32 11
  %7531 = getelementptr inbounds %struct.Reg, %struct.Reg* %7530, i32 0, i32 0
  %RDI.i1497 = bitcast %union.anon* %7531 to i64*
  %7532 = load i64, i64* %RSI.i1496
  %7533 = load i64, i64* %RDI.i1497
  %7534 = load i64, i64* %PC.i1495
  %7535 = add i64 %7534, 3
  store i64 %7535, i64* %PC.i1495
  %7536 = add i64 %7533, %7532
  store i64 %7536, i64* %RSI.i1496, align 8
  %7537 = icmp ult i64 %7536, %7532
  %7538 = icmp ult i64 %7536, %7533
  %7539 = or i1 %7537, %7538
  %7540 = zext i1 %7539 to i8
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7540, i8* %7541, align 1
  %7542 = trunc i64 %7536 to i32
  %7543 = and i32 %7542, 255
  %7544 = call i32 @llvm.ctpop.i32(i32 %7543)
  %7545 = trunc i32 %7544 to i8
  %7546 = and i8 %7545, 1
  %7547 = xor i8 %7546, 1
  %7548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7547, i8* %7548, align 1
  %7549 = xor i64 %7533, %7532
  %7550 = xor i64 %7549, %7536
  %7551 = lshr i64 %7550, 4
  %7552 = trunc i64 %7551 to i8
  %7553 = and i8 %7552, 1
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7553, i8* %7554, align 1
  %7555 = icmp eq i64 %7536, 0
  %7556 = zext i1 %7555 to i8
  %7557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7556, i8* %7557, align 1
  %7558 = lshr i64 %7536, 63
  %7559 = trunc i64 %7558 to i8
  %7560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7559, i8* %7560, align 1
  %7561 = lshr i64 %7532, 63
  %7562 = lshr i64 %7533, 63
  %7563 = xor i64 %7558, %7561
  %7564 = xor i64 %7558, %7562
  %7565 = add i64 %7563, %7564
  %7566 = icmp eq i64 %7565, 2
  %7567 = zext i1 %7566 to i8
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7567, i8* %7568, align 1
  store %struct.Memory* %loadMem_4b0c25, %struct.Memory** %MEMORY
  %loadMem_4b0c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 33
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %PC.i1492 = bitcast %union.anon* %7571 to i64*
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7573 = getelementptr inbounds %struct.GPR, %struct.GPR* %7572, i32 0, i32 11
  %7574 = getelementptr inbounds %struct.Reg, %struct.Reg* %7573, i32 0, i32 0
  %RDI.i1493 = bitcast %union.anon* %7574 to i64*
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7576 = getelementptr inbounds %struct.GPR, %struct.GPR* %7575, i32 0, i32 15
  %7577 = getelementptr inbounds %struct.Reg, %struct.Reg* %7576, i32 0, i32 0
  %RBP.i1494 = bitcast %union.anon* %7577 to i64*
  %7578 = load i64, i64* %RBP.i1494
  %7579 = sub i64 %7578, 40
  %7580 = load i64, i64* %PC.i1492
  %7581 = add i64 %7580, 4
  store i64 %7581, i64* %PC.i1492
  %7582 = inttoptr i64 %7579 to i32*
  %7583 = load i32, i32* %7582
  %7584 = sext i32 %7583 to i64
  store i64 %7584, i64* %RDI.i1493, align 8
  store %struct.Memory* %loadMem_4b0c28, %struct.Memory** %MEMORY
  %loadMem_4b0c2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 33
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %PC.i1488 = bitcast %union.anon* %7587 to i64*
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7589 = getelementptr inbounds %struct.GPR, %struct.GPR* %7588, i32 0, i32 7
  %7590 = getelementptr inbounds %struct.Reg, %struct.Reg* %7589, i32 0, i32 0
  %RDX.i1489 = bitcast %union.anon* %7590 to i64*
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 9
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %RSI.i1490 = bitcast %union.anon* %7593 to i64*
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 11
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %RDI.i1491 = bitcast %union.anon* %7596 to i64*
  %7597 = load i64, i64* %RDX.i1489
  %7598 = load i64, i64* %RSI.i1490
  %7599 = load i64, i64* %RDI.i1491
  %7600 = mul i64 %7599, 4
  %7601 = add i64 %7600, %7598
  %7602 = load i64, i64* %PC.i1488
  %7603 = add i64 %7602, 3
  store i64 %7603, i64* %PC.i1488
  %7604 = trunc i64 %7597 to i32
  %7605 = inttoptr i64 %7601 to i32*
  %7606 = load i32, i32* %7605
  %7607 = sub i32 %7604, %7606
  %7608 = zext i32 %7607 to i64
  store i64 %7608, i64* %RDX.i1489, align 8
  %7609 = icmp ult i32 %7604, %7606
  %7610 = zext i1 %7609 to i8
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7610, i8* %7611, align 1
  %7612 = and i32 %7607, 255
  %7613 = call i32 @llvm.ctpop.i32(i32 %7612)
  %7614 = trunc i32 %7613 to i8
  %7615 = and i8 %7614, 1
  %7616 = xor i8 %7615, 1
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7616, i8* %7617, align 1
  %7618 = xor i32 %7606, %7604
  %7619 = xor i32 %7618, %7607
  %7620 = lshr i32 %7619, 4
  %7621 = trunc i32 %7620 to i8
  %7622 = and i8 %7621, 1
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7622, i8* %7623, align 1
  %7624 = icmp eq i32 %7607, 0
  %7625 = zext i1 %7624 to i8
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7625, i8* %7626, align 1
  %7627 = lshr i32 %7607, 31
  %7628 = trunc i32 %7627 to i8
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7628, i8* %7629, align 1
  %7630 = lshr i32 %7604, 31
  %7631 = lshr i32 %7606, 31
  %7632 = xor i32 %7631, %7630
  %7633 = xor i32 %7627, %7630
  %7634 = add i32 %7633, %7632
  %7635 = icmp eq i32 %7634, 2
  %7636 = zext i1 %7635 to i8
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7636, i8* %7637, align 1
  store %struct.Memory* %loadMem_4b0c2c, %struct.Memory** %MEMORY
  %loadMem_4b0c2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7639 = getelementptr inbounds %struct.GPR, %struct.GPR* %7638, i32 0, i32 33
  %7640 = getelementptr inbounds %struct.Reg, %struct.Reg* %7639, i32 0, i32 0
  %PC.i1485 = bitcast %union.anon* %7640 to i64*
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7642 = getelementptr inbounds %struct.GPR, %struct.GPR* %7641, i32 0, i32 9
  %7643 = getelementptr inbounds %struct.Reg, %struct.Reg* %7642, i32 0, i32 0
  %RSI.i1486 = bitcast %union.anon* %7643 to i64*
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7645 = getelementptr inbounds %struct.GPR, %struct.GPR* %7644, i32 0, i32 15
  %7646 = getelementptr inbounds %struct.Reg, %struct.Reg* %7645, i32 0, i32 0
  %RBP.i1487 = bitcast %union.anon* %7646 to i64*
  %7647 = load i64, i64* %RBP.i1487
  %7648 = sub i64 %7647, 8
  %7649 = load i64, i64* %PC.i1485
  %7650 = add i64 %7649, 4
  store i64 %7650, i64* %PC.i1485
  %7651 = inttoptr i64 %7648 to i32*
  %7652 = load i32, i32* %7651
  %7653 = sext i32 %7652 to i64
  store i64 %7653, i64* %RSI.i1486, align 8
  store %struct.Memory* %loadMem_4b0c2f, %struct.Memory** %MEMORY
  %loadMem_4b0c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 33
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %7656 to i64*
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 9
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %RSI.i1484 = bitcast %union.anon* %7659 to i64*
  %7660 = load i64, i64* %RSI.i1484
  %7661 = load i64, i64* %PC.i1483
  %7662 = add i64 %7661, 7
  store i64 %7662, i64* %PC.i1483
  %7663 = sext i64 %7660 to i128
  %7664 = and i128 %7663, -18446744073709551616
  %7665 = zext i64 %7660 to i128
  %7666 = or i128 %7664, %7665
  %7667 = mul i128 180, %7666
  %7668 = trunc i128 %7667 to i64
  store i64 %7668, i64* %RSI.i1484, align 8
  %7669 = sext i64 %7668 to i128
  %7670 = icmp ne i128 %7669, %7667
  %7671 = zext i1 %7670 to i8
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7671, i8* %7672, align 1
  %7673 = trunc i128 %7667 to i32
  %7674 = and i32 %7673, 255
  %7675 = call i32 @llvm.ctpop.i32(i32 %7674)
  %7676 = trunc i32 %7675 to i8
  %7677 = and i8 %7676, 1
  %7678 = xor i8 %7677, 1
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7678, i8* %7679, align 1
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7680, align 1
  %7681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7681, align 1
  %7682 = lshr i64 %7668, 63
  %7683 = trunc i64 %7682 to i8
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7683, i8* %7684, align 1
  %7685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7671, i8* %7685, align 1
  store %struct.Memory* %loadMem_4b0c33, %struct.Memory** %MEMORY
  %loadMem_4b0c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7687 = getelementptr inbounds %struct.GPR, %struct.GPR* %7686, i32 0, i32 33
  %7688 = getelementptr inbounds %struct.Reg, %struct.Reg* %7687, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %7688 to i64*
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 5
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %RCX.i1481 = bitcast %union.anon* %7691 to i64*
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 9
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %RSI.i1482 = bitcast %union.anon* %7694 to i64*
  %7695 = load i64, i64* %RCX.i1481
  %7696 = load i64, i64* %RSI.i1482
  %7697 = load i64, i64* %PC.i1480
  %7698 = add i64 %7697, 3
  store i64 %7698, i64* %PC.i1480
  %7699 = add i64 %7696, %7695
  store i64 %7699, i64* %RCX.i1481, align 8
  %7700 = icmp ult i64 %7699, %7695
  %7701 = icmp ult i64 %7699, %7696
  %7702 = or i1 %7700, %7701
  %7703 = zext i1 %7702 to i8
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7703, i8* %7704, align 1
  %7705 = trunc i64 %7699 to i32
  %7706 = and i32 %7705, 255
  %7707 = call i32 @llvm.ctpop.i32(i32 %7706)
  %7708 = trunc i32 %7707 to i8
  %7709 = and i8 %7708, 1
  %7710 = xor i8 %7709, 1
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7710, i8* %7711, align 1
  %7712 = xor i64 %7696, %7695
  %7713 = xor i64 %7712, %7699
  %7714 = lshr i64 %7713, 4
  %7715 = trunc i64 %7714 to i8
  %7716 = and i8 %7715, 1
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7716, i8* %7717, align 1
  %7718 = icmp eq i64 %7699, 0
  %7719 = zext i1 %7718 to i8
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7719, i8* %7720, align 1
  %7721 = lshr i64 %7699, 63
  %7722 = trunc i64 %7721 to i8
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7722, i8* %7723, align 1
  %7724 = lshr i64 %7695, 63
  %7725 = lshr i64 %7696, 63
  %7726 = xor i64 %7721, %7724
  %7727 = xor i64 %7721, %7725
  %7728 = add i64 %7726, %7727
  %7729 = icmp eq i64 %7728, 2
  %7730 = zext i1 %7729 to i8
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7730, i8* %7731, align 1
  store %struct.Memory* %loadMem_4b0c3a, %struct.Memory** %MEMORY
  %loadMem_4b0c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 33
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %7734 to i64*
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7736 = getelementptr inbounds %struct.GPR, %struct.GPR* %7735, i32 0, i32 9
  %7737 = getelementptr inbounds %struct.Reg, %struct.Reg* %7736, i32 0, i32 0
  %RSI.i1478 = bitcast %union.anon* %7737 to i64*
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 15
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %RBP.i1479 = bitcast %union.anon* %7740 to i64*
  %7741 = load i64, i64* %RBP.i1479
  %7742 = sub i64 %7741, 12
  %7743 = load i64, i64* %PC.i1477
  %7744 = add i64 %7743, 4
  store i64 %7744, i64* %PC.i1477
  %7745 = inttoptr i64 %7742 to i32*
  %7746 = load i32, i32* %7745
  %7747 = sext i32 %7746 to i64
  store i64 %7747, i64* %RSI.i1478, align 8
  store %struct.Memory* %loadMem_4b0c3d, %struct.Memory** %MEMORY
  %loadMem_4b0c41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 33
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %7750 to i64*
  %7751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7752 = getelementptr inbounds %struct.GPR, %struct.GPR* %7751, i32 0, i32 9
  %7753 = getelementptr inbounds %struct.Reg, %struct.Reg* %7752, i32 0, i32 0
  %RSI.i1476 = bitcast %union.anon* %7753 to i64*
  %7754 = load i64, i64* %RSI.i1476
  %7755 = load i64, i64* %PC.i1475
  %7756 = add i64 %7755, 4
  store i64 %7756, i64* %PC.i1475
  %7757 = sext i64 %7754 to i128
  %7758 = and i128 %7757, -18446744073709551616
  %7759 = zext i64 %7754 to i128
  %7760 = or i128 %7758, %7759
  %7761 = mul i128 12, %7760
  %7762 = trunc i128 %7761 to i64
  store i64 %7762, i64* %RSI.i1476, align 8
  %7763 = sext i64 %7762 to i128
  %7764 = icmp ne i128 %7763, %7761
  %7765 = zext i1 %7764 to i8
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7765, i8* %7766, align 1
  %7767 = trunc i128 %7761 to i32
  %7768 = and i32 %7767, 255
  %7769 = call i32 @llvm.ctpop.i32(i32 %7768)
  %7770 = trunc i32 %7769 to i8
  %7771 = and i8 %7770, 1
  %7772 = xor i8 %7771, 1
  %7773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7772, i8* %7773, align 1
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7774, align 1
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7775, align 1
  %7776 = lshr i64 %7762, 63
  %7777 = trunc i64 %7776 to i8
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7777, i8* %7778, align 1
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7765, i8* %7779, align 1
  store %struct.Memory* %loadMem_4b0c41, %struct.Memory** %MEMORY
  %loadMem_4b0c45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7781 = getelementptr inbounds %struct.GPR, %struct.GPR* %7780, i32 0, i32 33
  %7782 = getelementptr inbounds %struct.Reg, %struct.Reg* %7781, i32 0, i32 0
  %PC.i1472 = bitcast %union.anon* %7782 to i64*
  %7783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7784 = getelementptr inbounds %struct.GPR, %struct.GPR* %7783, i32 0, i32 5
  %7785 = getelementptr inbounds %struct.Reg, %struct.Reg* %7784, i32 0, i32 0
  %RCX.i1473 = bitcast %union.anon* %7785 to i64*
  %7786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7787 = getelementptr inbounds %struct.GPR, %struct.GPR* %7786, i32 0, i32 9
  %7788 = getelementptr inbounds %struct.Reg, %struct.Reg* %7787, i32 0, i32 0
  %RSI.i1474 = bitcast %union.anon* %7788 to i64*
  %7789 = load i64, i64* %RCX.i1473
  %7790 = load i64, i64* %RSI.i1474
  %7791 = load i64, i64* %PC.i1472
  %7792 = add i64 %7791, 3
  store i64 %7792, i64* %PC.i1472
  %7793 = add i64 %7790, %7789
  store i64 %7793, i64* %RCX.i1473, align 8
  %7794 = icmp ult i64 %7793, %7789
  %7795 = icmp ult i64 %7793, %7790
  %7796 = or i1 %7794, %7795
  %7797 = zext i1 %7796 to i8
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7797, i8* %7798, align 1
  %7799 = trunc i64 %7793 to i32
  %7800 = and i32 %7799, 255
  %7801 = call i32 @llvm.ctpop.i32(i32 %7800)
  %7802 = trunc i32 %7801 to i8
  %7803 = and i8 %7802, 1
  %7804 = xor i8 %7803, 1
  %7805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7804, i8* %7805, align 1
  %7806 = xor i64 %7790, %7789
  %7807 = xor i64 %7806, %7793
  %7808 = lshr i64 %7807, 4
  %7809 = trunc i64 %7808 to i8
  %7810 = and i8 %7809, 1
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7810, i8* %7811, align 1
  %7812 = icmp eq i64 %7793, 0
  %7813 = zext i1 %7812 to i8
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7813, i8* %7814, align 1
  %7815 = lshr i64 %7793, 63
  %7816 = trunc i64 %7815 to i8
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7816, i8* %7817, align 1
  %7818 = lshr i64 %7789, 63
  %7819 = lshr i64 %7790, 63
  %7820 = xor i64 %7815, %7818
  %7821 = xor i64 %7815, %7819
  %7822 = add i64 %7820, %7821
  %7823 = icmp eq i64 %7822, 2
  %7824 = zext i1 %7823 to i8
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7824, i8* %7825, align 1
  store %struct.Memory* %loadMem_4b0c45, %struct.Memory** %MEMORY
  %loadMem_4b0c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7827 = getelementptr inbounds %struct.GPR, %struct.GPR* %7826, i32 0, i32 33
  %7828 = getelementptr inbounds %struct.Reg, %struct.Reg* %7827, i32 0, i32 0
  %PC.i1469 = bitcast %union.anon* %7828 to i64*
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7830 = getelementptr inbounds %struct.GPR, %struct.GPR* %7829, i32 0, i32 9
  %7831 = getelementptr inbounds %struct.Reg, %struct.Reg* %7830, i32 0, i32 0
  %RSI.i1470 = bitcast %union.anon* %7831 to i64*
  %7832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7833 = getelementptr inbounds %struct.GPR, %struct.GPR* %7832, i32 0, i32 15
  %7834 = getelementptr inbounds %struct.Reg, %struct.Reg* %7833, i32 0, i32 0
  %RBP.i1471 = bitcast %union.anon* %7834 to i64*
  %7835 = load i64, i64* %RBP.i1471
  %7836 = sub i64 %7835, 40
  %7837 = load i64, i64* %PC.i1469
  %7838 = add i64 %7837, 4
  store i64 %7838, i64* %PC.i1469
  %7839 = inttoptr i64 %7836 to i32*
  %7840 = load i32, i32* %7839
  %7841 = sext i32 %7840 to i64
  store i64 %7841, i64* %RSI.i1470, align 8
  store %struct.Memory* %loadMem_4b0c48, %struct.Memory** %MEMORY
  %loadMem_4b0c4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 33
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %PC.i1465 = bitcast %union.anon* %7844 to i64*
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 7
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %EDX.i1466 = bitcast %union.anon* %7847 to i32*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 5
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %RCX.i1467 = bitcast %union.anon* %7850 to i64*
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 9
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %RSI.i1468 = bitcast %union.anon* %7853 to i64*
  %7854 = load i64, i64* %RCX.i1467
  %7855 = load i64, i64* %RSI.i1468
  %7856 = mul i64 %7855, 4
  %7857 = add i64 %7856, %7854
  %7858 = load i32, i32* %EDX.i1466
  %7859 = zext i32 %7858 to i64
  %7860 = load i64, i64* %PC.i1465
  %7861 = add i64 %7860, 3
  store i64 %7861, i64* %PC.i1465
  %7862 = inttoptr i64 %7857 to i32*
  store i32 %7858, i32* %7862
  store %struct.Memory* %loadMem_4b0c4c, %struct.Memory** %MEMORY
  %loadMem_4b0c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7864 = getelementptr inbounds %struct.GPR, %struct.GPR* %7863, i32 0, i32 33
  %7865 = getelementptr inbounds %struct.Reg, %struct.Reg* %7864, i32 0, i32 0
  %PC.i1462 = bitcast %union.anon* %7865 to i64*
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7867 = getelementptr inbounds %struct.GPR, %struct.GPR* %7866, i32 0, i32 1
  %7868 = getelementptr inbounds %struct.Reg, %struct.Reg* %7867, i32 0, i32 0
  %RAX.i1463 = bitcast %union.anon* %7868 to i64*
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7870 = getelementptr inbounds %struct.GPR, %struct.GPR* %7869, i32 0, i32 5
  %7871 = getelementptr inbounds %struct.Reg, %struct.Reg* %7870, i32 0, i32 0
  %RCX.i1464 = bitcast %union.anon* %7871 to i64*
  %7872 = load i64, i64* %RAX.i1463
  %7873 = load i64, i64* %PC.i1462
  %7874 = add i64 %7873, 3
  store i64 %7874, i64* %PC.i1462
  store i64 %7872, i64* %RCX.i1464, align 8
  store %struct.Memory* %loadMem_4b0c4f, %struct.Memory** %MEMORY
  %loadMem_4b0c52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 33
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %7877 to i64*
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 5
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %RCX.i1461 = bitcast %union.anon* %7880 to i64*
  %7881 = load i64, i64* %RCX.i1461
  %7882 = load i64, i64* %PC.i1460
  %7883 = add i64 %7882, 7
  store i64 %7883, i64* %PC.i1460
  %7884 = add i64 2700, %7881
  store i64 %7884, i64* %RCX.i1461, align 8
  %7885 = icmp ult i64 %7884, %7881
  %7886 = icmp ult i64 %7884, 2700
  %7887 = or i1 %7885, %7886
  %7888 = zext i1 %7887 to i8
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7888, i8* %7889, align 1
  %7890 = trunc i64 %7884 to i32
  %7891 = and i32 %7890, 255
  %7892 = call i32 @llvm.ctpop.i32(i32 %7891)
  %7893 = trunc i32 %7892 to i8
  %7894 = and i8 %7893, 1
  %7895 = xor i8 %7894, 1
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7895, i8* %7896, align 1
  %7897 = xor i64 2700, %7881
  %7898 = xor i64 %7897, %7884
  %7899 = lshr i64 %7898, 4
  %7900 = trunc i64 %7899 to i8
  %7901 = and i8 %7900, 1
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7901, i8* %7902, align 1
  %7903 = icmp eq i64 %7884, 0
  %7904 = zext i1 %7903 to i8
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7904, i8* %7905, align 1
  %7906 = lshr i64 %7884, 63
  %7907 = trunc i64 %7906 to i8
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7907, i8* %7908, align 1
  %7909 = lshr i64 %7881, 63
  %7910 = xor i64 %7906, %7909
  %7911 = add i64 %7910, %7906
  %7912 = icmp eq i64 %7911, 2
  %7913 = zext i1 %7912 to i8
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7913, i8* %7914, align 1
  store %struct.Memory* %loadMem_4b0c52, %struct.Memory** %MEMORY
  %loadMem_4b0c59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 33
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %PC.i1457 = bitcast %union.anon* %7917 to i64*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 9
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %RSI.i1458 = bitcast %union.anon* %7920 to i64*
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7922 = getelementptr inbounds %struct.GPR, %struct.GPR* %7921, i32 0, i32 15
  %7923 = getelementptr inbounds %struct.Reg, %struct.Reg* %7922, i32 0, i32 0
  %RBP.i1459 = bitcast %union.anon* %7923 to i64*
  %7924 = load i64, i64* %RBP.i1459
  %7925 = sub i64 %7924, 8
  %7926 = load i64, i64* %PC.i1457
  %7927 = add i64 %7926, 4
  store i64 %7927, i64* %PC.i1457
  %7928 = inttoptr i64 %7925 to i32*
  %7929 = load i32, i32* %7928
  %7930 = sext i32 %7929 to i64
  store i64 %7930, i64* %RSI.i1458, align 8
  store %struct.Memory* %loadMem_4b0c59, %struct.Memory** %MEMORY
  %loadMem_4b0c5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7932 = getelementptr inbounds %struct.GPR, %struct.GPR* %7931, i32 0, i32 33
  %7933 = getelementptr inbounds %struct.Reg, %struct.Reg* %7932, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %7933 to i64*
  %7934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7935 = getelementptr inbounds %struct.GPR, %struct.GPR* %7934, i32 0, i32 9
  %7936 = getelementptr inbounds %struct.Reg, %struct.Reg* %7935, i32 0, i32 0
  %RSI.i1456 = bitcast %union.anon* %7936 to i64*
  %7937 = load i64, i64* %RSI.i1456
  %7938 = load i64, i64* %PC.i1455
  %7939 = add i64 %7938, 7
  store i64 %7939, i64* %PC.i1455
  %7940 = sext i64 %7937 to i128
  %7941 = and i128 %7940, -18446744073709551616
  %7942 = zext i64 %7937 to i128
  %7943 = or i128 %7941, %7942
  %7944 = mul i128 180, %7943
  %7945 = trunc i128 %7944 to i64
  store i64 %7945, i64* %RSI.i1456, align 8
  %7946 = sext i64 %7945 to i128
  %7947 = icmp ne i128 %7946, %7944
  %7948 = zext i1 %7947 to i8
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7948, i8* %7949, align 1
  %7950 = trunc i128 %7944 to i32
  %7951 = and i32 %7950, 255
  %7952 = call i32 @llvm.ctpop.i32(i32 %7951)
  %7953 = trunc i32 %7952 to i8
  %7954 = and i8 %7953, 1
  %7955 = xor i8 %7954, 1
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7955, i8* %7956, align 1
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7957, align 1
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7958, align 1
  %7959 = lshr i64 %7945, 63
  %7960 = trunc i64 %7959 to i8
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7960, i8* %7961, align 1
  %7962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7948, i8* %7962, align 1
  store %struct.Memory* %loadMem_4b0c5d, %struct.Memory** %MEMORY
  %loadMem_4b0c64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7964 = getelementptr inbounds %struct.GPR, %struct.GPR* %7963, i32 0, i32 33
  %7965 = getelementptr inbounds %struct.Reg, %struct.Reg* %7964, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %7965 to i64*
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7967 = getelementptr inbounds %struct.GPR, %struct.GPR* %7966, i32 0, i32 5
  %7968 = getelementptr inbounds %struct.Reg, %struct.Reg* %7967, i32 0, i32 0
  %RCX.i1453 = bitcast %union.anon* %7968 to i64*
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7970 = getelementptr inbounds %struct.GPR, %struct.GPR* %7969, i32 0, i32 9
  %7971 = getelementptr inbounds %struct.Reg, %struct.Reg* %7970, i32 0, i32 0
  %RSI.i1454 = bitcast %union.anon* %7971 to i64*
  %7972 = load i64, i64* %RCX.i1453
  %7973 = load i64, i64* %RSI.i1454
  %7974 = load i64, i64* %PC.i1452
  %7975 = add i64 %7974, 3
  store i64 %7975, i64* %PC.i1452
  %7976 = add i64 %7973, %7972
  store i64 %7976, i64* %RCX.i1453, align 8
  %7977 = icmp ult i64 %7976, %7972
  %7978 = icmp ult i64 %7976, %7973
  %7979 = or i1 %7977, %7978
  %7980 = zext i1 %7979 to i8
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7980, i8* %7981, align 1
  %7982 = trunc i64 %7976 to i32
  %7983 = and i32 %7982, 255
  %7984 = call i32 @llvm.ctpop.i32(i32 %7983)
  %7985 = trunc i32 %7984 to i8
  %7986 = and i8 %7985, 1
  %7987 = xor i8 %7986, 1
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7987, i8* %7988, align 1
  %7989 = xor i64 %7973, %7972
  %7990 = xor i64 %7989, %7976
  %7991 = lshr i64 %7990, 4
  %7992 = trunc i64 %7991 to i8
  %7993 = and i8 %7992, 1
  %7994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7993, i8* %7994, align 1
  %7995 = icmp eq i64 %7976, 0
  %7996 = zext i1 %7995 to i8
  %7997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7996, i8* %7997, align 1
  %7998 = lshr i64 %7976, 63
  %7999 = trunc i64 %7998 to i8
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7999, i8* %8000, align 1
  %8001 = lshr i64 %7972, 63
  %8002 = lshr i64 %7973, 63
  %8003 = xor i64 %7998, %8001
  %8004 = xor i64 %7998, %8002
  %8005 = add i64 %8003, %8004
  %8006 = icmp eq i64 %8005, 2
  %8007 = zext i1 %8006 to i8
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8007, i8* %8008, align 1
  store %struct.Memory* %loadMem_4b0c64, %struct.Memory** %MEMORY
  %loadMem_4b0c67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8010 = getelementptr inbounds %struct.GPR, %struct.GPR* %8009, i32 0, i32 33
  %8011 = getelementptr inbounds %struct.Reg, %struct.Reg* %8010, i32 0, i32 0
  %PC.i1449 = bitcast %union.anon* %8011 to i64*
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8013 = getelementptr inbounds %struct.GPR, %struct.GPR* %8012, i32 0, i32 9
  %8014 = getelementptr inbounds %struct.Reg, %struct.Reg* %8013, i32 0, i32 0
  %RSI.i1450 = bitcast %union.anon* %8014 to i64*
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8016 = getelementptr inbounds %struct.GPR, %struct.GPR* %8015, i32 0, i32 15
  %8017 = getelementptr inbounds %struct.Reg, %struct.Reg* %8016, i32 0, i32 0
  %RBP.i1451 = bitcast %union.anon* %8017 to i64*
  %8018 = load i64, i64* %RBP.i1451
  %8019 = sub i64 %8018, 12
  %8020 = load i64, i64* %PC.i1449
  %8021 = add i64 %8020, 4
  store i64 %8021, i64* %PC.i1449
  %8022 = inttoptr i64 %8019 to i32*
  %8023 = load i32, i32* %8022
  %8024 = sext i32 %8023 to i64
  store i64 %8024, i64* %RSI.i1450, align 8
  store %struct.Memory* %loadMem_4b0c67, %struct.Memory** %MEMORY
  %loadMem_4b0c6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8026 = getelementptr inbounds %struct.GPR, %struct.GPR* %8025, i32 0, i32 33
  %8027 = getelementptr inbounds %struct.Reg, %struct.Reg* %8026, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %8027 to i64*
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8029 = getelementptr inbounds %struct.GPR, %struct.GPR* %8028, i32 0, i32 9
  %8030 = getelementptr inbounds %struct.Reg, %struct.Reg* %8029, i32 0, i32 0
  %RSI.i1448 = bitcast %union.anon* %8030 to i64*
  %8031 = load i64, i64* %RSI.i1448
  %8032 = load i64, i64* %PC.i1447
  %8033 = add i64 %8032, 4
  store i64 %8033, i64* %PC.i1447
  %8034 = sext i64 %8031 to i128
  %8035 = and i128 %8034, -18446744073709551616
  %8036 = zext i64 %8031 to i128
  %8037 = or i128 %8035, %8036
  %8038 = mul i128 12, %8037
  %8039 = trunc i128 %8038 to i64
  store i64 %8039, i64* %RSI.i1448, align 8
  %8040 = sext i64 %8039 to i128
  %8041 = icmp ne i128 %8040, %8038
  %8042 = zext i1 %8041 to i8
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8042, i8* %8043, align 1
  %8044 = trunc i128 %8038 to i32
  %8045 = and i32 %8044, 255
  %8046 = call i32 @llvm.ctpop.i32(i32 %8045)
  %8047 = trunc i32 %8046 to i8
  %8048 = and i8 %8047, 1
  %8049 = xor i8 %8048, 1
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8049, i8* %8050, align 1
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8051, align 1
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8052, align 1
  %8053 = lshr i64 %8039, 63
  %8054 = trunc i64 %8053 to i8
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8054, i8* %8055, align 1
  %8056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8042, i8* %8056, align 1
  store %struct.Memory* %loadMem_4b0c6b, %struct.Memory** %MEMORY
  %loadMem_4b0c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8058 = getelementptr inbounds %struct.GPR, %struct.GPR* %8057, i32 0, i32 33
  %8059 = getelementptr inbounds %struct.Reg, %struct.Reg* %8058, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %8059 to i64*
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8061 = getelementptr inbounds %struct.GPR, %struct.GPR* %8060, i32 0, i32 5
  %8062 = getelementptr inbounds %struct.Reg, %struct.Reg* %8061, i32 0, i32 0
  %RCX.i1445 = bitcast %union.anon* %8062 to i64*
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8064 = getelementptr inbounds %struct.GPR, %struct.GPR* %8063, i32 0, i32 9
  %8065 = getelementptr inbounds %struct.Reg, %struct.Reg* %8064, i32 0, i32 0
  %RSI.i1446 = bitcast %union.anon* %8065 to i64*
  %8066 = load i64, i64* %RCX.i1445
  %8067 = load i64, i64* %RSI.i1446
  %8068 = load i64, i64* %PC.i1444
  %8069 = add i64 %8068, 3
  store i64 %8069, i64* %PC.i1444
  %8070 = add i64 %8067, %8066
  store i64 %8070, i64* %RCX.i1445, align 8
  %8071 = icmp ult i64 %8070, %8066
  %8072 = icmp ult i64 %8070, %8067
  %8073 = or i1 %8071, %8072
  %8074 = zext i1 %8073 to i8
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8074, i8* %8075, align 1
  %8076 = trunc i64 %8070 to i32
  %8077 = and i32 %8076, 255
  %8078 = call i32 @llvm.ctpop.i32(i32 %8077)
  %8079 = trunc i32 %8078 to i8
  %8080 = and i8 %8079, 1
  %8081 = xor i8 %8080, 1
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8081, i8* %8082, align 1
  %8083 = xor i64 %8067, %8066
  %8084 = xor i64 %8083, %8070
  %8085 = lshr i64 %8084, 4
  %8086 = trunc i64 %8085 to i8
  %8087 = and i8 %8086, 1
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8087, i8* %8088, align 1
  %8089 = icmp eq i64 %8070, 0
  %8090 = zext i1 %8089 to i8
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8090, i8* %8091, align 1
  %8092 = lshr i64 %8070, 63
  %8093 = trunc i64 %8092 to i8
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8093, i8* %8094, align 1
  %8095 = lshr i64 %8066, 63
  %8096 = lshr i64 %8067, 63
  %8097 = xor i64 %8092, %8095
  %8098 = xor i64 %8092, %8096
  %8099 = add i64 %8097, %8098
  %8100 = icmp eq i64 %8099, 2
  %8101 = zext i1 %8100 to i8
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8101, i8* %8102, align 1
  store %struct.Memory* %loadMem_4b0c6f, %struct.Memory** %MEMORY
  %loadMem_4b0c72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8104 = getelementptr inbounds %struct.GPR, %struct.GPR* %8103, i32 0, i32 33
  %8105 = getelementptr inbounds %struct.Reg, %struct.Reg* %8104, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %8105 to i64*
  %8106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8107 = getelementptr inbounds %struct.GPR, %struct.GPR* %8106, i32 0, i32 9
  %8108 = getelementptr inbounds %struct.Reg, %struct.Reg* %8107, i32 0, i32 0
  %RSI.i1442 = bitcast %union.anon* %8108 to i64*
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8110 = getelementptr inbounds %struct.GPR, %struct.GPR* %8109, i32 0, i32 15
  %8111 = getelementptr inbounds %struct.Reg, %struct.Reg* %8110, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %8111 to i64*
  %8112 = load i64, i64* %RBP.i1443
  %8113 = sub i64 %8112, 40
  %8114 = load i64, i64* %PC.i1441
  %8115 = add i64 %8114, 4
  store i64 %8115, i64* %PC.i1441
  %8116 = inttoptr i64 %8113 to i32*
  %8117 = load i32, i32* %8116
  %8118 = sext i32 %8117 to i64
  store i64 %8118, i64* %RSI.i1442, align 8
  store %struct.Memory* %loadMem_4b0c72, %struct.Memory** %MEMORY
  %loadMem_4b0c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8120 = getelementptr inbounds %struct.GPR, %struct.GPR* %8119, i32 0, i32 33
  %8121 = getelementptr inbounds %struct.Reg, %struct.Reg* %8120, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %8121 to i64*
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8123 = getelementptr inbounds %struct.GPR, %struct.GPR* %8122, i32 0, i32 5
  %8124 = getelementptr inbounds %struct.Reg, %struct.Reg* %8123, i32 0, i32 0
  %RCX.i1439 = bitcast %union.anon* %8124 to i64*
  %8125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8126 = getelementptr inbounds %struct.GPR, %struct.GPR* %8125, i32 0, i32 9
  %8127 = getelementptr inbounds %struct.Reg, %struct.Reg* %8126, i32 0, i32 0
  %RSI.i1440 = bitcast %union.anon* %8127 to i64*
  %8128 = load i64, i64* %RCX.i1439
  %8129 = load i64, i64* %RSI.i1440
  %8130 = mul i64 %8129, 4
  %8131 = add i64 %8130, %8128
  %8132 = load i64, i64* %PC.i1438
  %8133 = add i64 %8132, 7
  store i64 %8133, i64* %PC.i1438
  %8134 = inttoptr i64 %8131 to i32*
  store i32 0, i32* %8134
  store %struct.Memory* %loadMem_4b0c76, %struct.Memory** %MEMORY
  %loadMem_4b0c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8136 = getelementptr inbounds %struct.GPR, %struct.GPR* %8135, i32 0, i32 33
  %8137 = getelementptr inbounds %struct.Reg, %struct.Reg* %8136, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %8137 to i64*
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8139 = getelementptr inbounds %struct.GPR, %struct.GPR* %8138, i32 0, i32 5
  %8140 = getelementptr inbounds %struct.Reg, %struct.Reg* %8139, i32 0, i32 0
  %RCX.i1436 = bitcast %union.anon* %8140 to i64*
  %8141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8142 = getelementptr inbounds %struct.GPR, %struct.GPR* %8141, i32 0, i32 15
  %8143 = getelementptr inbounds %struct.Reg, %struct.Reg* %8142, i32 0, i32 0
  %RBP.i1437 = bitcast %union.anon* %8143 to i64*
  %8144 = load i64, i64* %RBP.i1437
  %8145 = sub i64 %8144, 8
  %8146 = load i64, i64* %PC.i1435
  %8147 = add i64 %8146, 4
  store i64 %8147, i64* %PC.i1435
  %8148 = inttoptr i64 %8145 to i32*
  %8149 = load i32, i32* %8148
  %8150 = sext i32 %8149 to i64
  store i64 %8150, i64* %RCX.i1436, align 8
  store %struct.Memory* %loadMem_4b0c7d, %struct.Memory** %MEMORY
  %loadMem_4b0c81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8152 = getelementptr inbounds %struct.GPR, %struct.GPR* %8151, i32 0, i32 33
  %8153 = getelementptr inbounds %struct.Reg, %struct.Reg* %8152, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %8153 to i64*
  %8154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8155 = getelementptr inbounds %struct.GPR, %struct.GPR* %8154, i32 0, i32 5
  %8156 = getelementptr inbounds %struct.Reg, %struct.Reg* %8155, i32 0, i32 0
  %RCX.i1434 = bitcast %union.anon* %8156 to i64*
  %8157 = load i64, i64* %RCX.i1434
  %8158 = load i64, i64* %PC.i1433
  %8159 = add i64 %8158, 7
  store i64 %8159, i64* %PC.i1433
  %8160 = sext i64 %8157 to i128
  %8161 = and i128 %8160, -18446744073709551616
  %8162 = zext i64 %8157 to i128
  %8163 = or i128 %8161, %8162
  %8164 = mul i128 180, %8163
  %8165 = trunc i128 %8164 to i64
  store i64 %8165, i64* %RCX.i1434, align 8
  %8166 = sext i64 %8165 to i128
  %8167 = icmp ne i128 %8166, %8164
  %8168 = zext i1 %8167 to i8
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8168, i8* %8169, align 1
  %8170 = trunc i128 %8164 to i32
  %8171 = and i32 %8170, 255
  %8172 = call i32 @llvm.ctpop.i32(i32 %8171)
  %8173 = trunc i32 %8172 to i8
  %8174 = and i8 %8173, 1
  %8175 = xor i8 %8174, 1
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8175, i8* %8176, align 1
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8177, align 1
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8178, align 1
  %8179 = lshr i64 %8165, 63
  %8180 = trunc i64 %8179 to i8
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8180, i8* %8181, align 1
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8168, i8* %8182, align 1
  store %struct.Memory* %loadMem_4b0c81, %struct.Memory** %MEMORY
  %loadMem_4b0c88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8184 = getelementptr inbounds %struct.GPR, %struct.GPR* %8183, i32 0, i32 33
  %8185 = getelementptr inbounds %struct.Reg, %struct.Reg* %8184, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %8185 to i64*
  %8186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8187 = getelementptr inbounds %struct.GPR, %struct.GPR* %8186, i32 0, i32 1
  %8188 = getelementptr inbounds %struct.Reg, %struct.Reg* %8187, i32 0, i32 0
  %RAX.i1431 = bitcast %union.anon* %8188 to i64*
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8190 = getelementptr inbounds %struct.GPR, %struct.GPR* %8189, i32 0, i32 5
  %8191 = getelementptr inbounds %struct.Reg, %struct.Reg* %8190, i32 0, i32 0
  %RCX.i1432 = bitcast %union.anon* %8191 to i64*
  %8192 = load i64, i64* %RAX.i1431
  %8193 = load i64, i64* %RCX.i1432
  %8194 = load i64, i64* %PC.i1430
  %8195 = add i64 %8194, 3
  store i64 %8195, i64* %PC.i1430
  %8196 = add i64 %8193, %8192
  store i64 %8196, i64* %RAX.i1431, align 8
  %8197 = icmp ult i64 %8196, %8192
  %8198 = icmp ult i64 %8196, %8193
  %8199 = or i1 %8197, %8198
  %8200 = zext i1 %8199 to i8
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8200, i8* %8201, align 1
  %8202 = trunc i64 %8196 to i32
  %8203 = and i32 %8202, 255
  %8204 = call i32 @llvm.ctpop.i32(i32 %8203)
  %8205 = trunc i32 %8204 to i8
  %8206 = and i8 %8205, 1
  %8207 = xor i8 %8206, 1
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8207, i8* %8208, align 1
  %8209 = xor i64 %8193, %8192
  %8210 = xor i64 %8209, %8196
  %8211 = lshr i64 %8210, 4
  %8212 = trunc i64 %8211 to i8
  %8213 = and i8 %8212, 1
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8213, i8* %8214, align 1
  %8215 = icmp eq i64 %8196, 0
  %8216 = zext i1 %8215 to i8
  %8217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8216, i8* %8217, align 1
  %8218 = lshr i64 %8196, 63
  %8219 = trunc i64 %8218 to i8
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8219, i8* %8220, align 1
  %8221 = lshr i64 %8192, 63
  %8222 = lshr i64 %8193, 63
  %8223 = xor i64 %8218, %8221
  %8224 = xor i64 %8218, %8222
  %8225 = add i64 %8223, %8224
  %8226 = icmp eq i64 %8225, 2
  %8227 = zext i1 %8226 to i8
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8227, i8* %8228, align 1
  store %struct.Memory* %loadMem_4b0c88, %struct.Memory** %MEMORY
  %loadMem_4b0c8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8230 = getelementptr inbounds %struct.GPR, %struct.GPR* %8229, i32 0, i32 33
  %8231 = getelementptr inbounds %struct.Reg, %struct.Reg* %8230, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %8231 to i64*
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 5
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %RCX.i1428 = bitcast %union.anon* %8234 to i64*
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8236 = getelementptr inbounds %struct.GPR, %struct.GPR* %8235, i32 0, i32 15
  %8237 = getelementptr inbounds %struct.Reg, %struct.Reg* %8236, i32 0, i32 0
  %RBP.i1429 = bitcast %union.anon* %8237 to i64*
  %8238 = load i64, i64* %RBP.i1429
  %8239 = sub i64 %8238, 12
  %8240 = load i64, i64* %PC.i1427
  %8241 = add i64 %8240, 4
  store i64 %8241, i64* %PC.i1427
  %8242 = inttoptr i64 %8239 to i32*
  %8243 = load i32, i32* %8242
  %8244 = sext i32 %8243 to i64
  store i64 %8244, i64* %RCX.i1428, align 8
  store %struct.Memory* %loadMem_4b0c8b, %struct.Memory** %MEMORY
  %loadMem_4b0c8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 33
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %8247 to i64*
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8249 = getelementptr inbounds %struct.GPR, %struct.GPR* %8248, i32 0, i32 5
  %8250 = getelementptr inbounds %struct.Reg, %struct.Reg* %8249, i32 0, i32 0
  %RCX.i1426 = bitcast %union.anon* %8250 to i64*
  %8251 = load i64, i64* %RCX.i1426
  %8252 = load i64, i64* %PC.i1425
  %8253 = add i64 %8252, 4
  store i64 %8253, i64* %PC.i1425
  %8254 = sext i64 %8251 to i128
  %8255 = and i128 %8254, -18446744073709551616
  %8256 = zext i64 %8251 to i128
  %8257 = or i128 %8255, %8256
  %8258 = mul i128 12, %8257
  %8259 = trunc i128 %8258 to i64
  store i64 %8259, i64* %RCX.i1426, align 8
  %8260 = sext i64 %8259 to i128
  %8261 = icmp ne i128 %8260, %8258
  %8262 = zext i1 %8261 to i8
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8262, i8* %8263, align 1
  %8264 = trunc i128 %8258 to i32
  %8265 = and i32 %8264, 255
  %8266 = call i32 @llvm.ctpop.i32(i32 %8265)
  %8267 = trunc i32 %8266 to i8
  %8268 = and i8 %8267, 1
  %8269 = xor i8 %8268, 1
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8269, i8* %8270, align 1
  %8271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8271, align 1
  %8272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8272, align 1
  %8273 = lshr i64 %8259, 63
  %8274 = trunc i64 %8273 to i8
  %8275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8274, i8* %8275, align 1
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8262, i8* %8276, align 1
  store %struct.Memory* %loadMem_4b0c8f, %struct.Memory** %MEMORY
  %loadMem_4b0c93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8278 = getelementptr inbounds %struct.GPR, %struct.GPR* %8277, i32 0, i32 33
  %8279 = getelementptr inbounds %struct.Reg, %struct.Reg* %8278, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %8279 to i64*
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8281 = getelementptr inbounds %struct.GPR, %struct.GPR* %8280, i32 0, i32 1
  %8282 = getelementptr inbounds %struct.Reg, %struct.Reg* %8281, i32 0, i32 0
  %RAX.i1423 = bitcast %union.anon* %8282 to i64*
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8284 = getelementptr inbounds %struct.GPR, %struct.GPR* %8283, i32 0, i32 5
  %8285 = getelementptr inbounds %struct.Reg, %struct.Reg* %8284, i32 0, i32 0
  %RCX.i1424 = bitcast %union.anon* %8285 to i64*
  %8286 = load i64, i64* %RAX.i1423
  %8287 = load i64, i64* %RCX.i1424
  %8288 = load i64, i64* %PC.i1422
  %8289 = add i64 %8288, 3
  store i64 %8289, i64* %PC.i1422
  %8290 = add i64 %8287, %8286
  store i64 %8290, i64* %RAX.i1423, align 8
  %8291 = icmp ult i64 %8290, %8286
  %8292 = icmp ult i64 %8290, %8287
  %8293 = or i1 %8291, %8292
  %8294 = zext i1 %8293 to i8
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8294, i8* %8295, align 1
  %8296 = trunc i64 %8290 to i32
  %8297 = and i32 %8296, 255
  %8298 = call i32 @llvm.ctpop.i32(i32 %8297)
  %8299 = trunc i32 %8298 to i8
  %8300 = and i8 %8299, 1
  %8301 = xor i8 %8300, 1
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8301, i8* %8302, align 1
  %8303 = xor i64 %8287, %8286
  %8304 = xor i64 %8303, %8290
  %8305 = lshr i64 %8304, 4
  %8306 = trunc i64 %8305 to i8
  %8307 = and i8 %8306, 1
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8307, i8* %8308, align 1
  %8309 = icmp eq i64 %8290, 0
  %8310 = zext i1 %8309 to i8
  %8311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8310, i8* %8311, align 1
  %8312 = lshr i64 %8290, 63
  %8313 = trunc i64 %8312 to i8
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8313, i8* %8314, align 1
  %8315 = lshr i64 %8286, 63
  %8316 = lshr i64 %8287, 63
  %8317 = xor i64 %8312, %8315
  %8318 = xor i64 %8312, %8316
  %8319 = add i64 %8317, %8318
  %8320 = icmp eq i64 %8319, 2
  %8321 = zext i1 %8320 to i8
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8321, i8* %8322, align 1
  store %struct.Memory* %loadMem_4b0c93, %struct.Memory** %MEMORY
  %loadMem_4b0c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8324 = getelementptr inbounds %struct.GPR, %struct.GPR* %8323, i32 0, i32 33
  %8325 = getelementptr inbounds %struct.Reg, %struct.Reg* %8324, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %8325 to i64*
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8327 = getelementptr inbounds %struct.GPR, %struct.GPR* %8326, i32 0, i32 5
  %8328 = getelementptr inbounds %struct.Reg, %struct.Reg* %8327, i32 0, i32 0
  %RCX.i1420 = bitcast %union.anon* %8328 to i64*
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8330 = getelementptr inbounds %struct.GPR, %struct.GPR* %8329, i32 0, i32 15
  %8331 = getelementptr inbounds %struct.Reg, %struct.Reg* %8330, i32 0, i32 0
  %RBP.i1421 = bitcast %union.anon* %8331 to i64*
  %8332 = load i64, i64* %RBP.i1421
  %8333 = sub i64 %8332, 40
  %8334 = load i64, i64* %PC.i1419
  %8335 = add i64 %8334, 4
  store i64 %8335, i64* %PC.i1419
  %8336 = inttoptr i64 %8333 to i32*
  %8337 = load i32, i32* %8336
  %8338 = sext i32 %8337 to i64
  store i64 %8338, i64* %RCX.i1420, align 8
  store %struct.Memory* %loadMem_4b0c96, %struct.Memory** %MEMORY
  %loadMem_4b0c9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8340 = getelementptr inbounds %struct.GPR, %struct.GPR* %8339, i32 0, i32 33
  %8341 = getelementptr inbounds %struct.Reg, %struct.Reg* %8340, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %8341 to i64*
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8343 = getelementptr inbounds %struct.GPR, %struct.GPR* %8342, i32 0, i32 1
  %8344 = getelementptr inbounds %struct.Reg, %struct.Reg* %8343, i32 0, i32 0
  %RAX.i1417 = bitcast %union.anon* %8344 to i64*
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8346 = getelementptr inbounds %struct.GPR, %struct.GPR* %8345, i32 0, i32 5
  %8347 = getelementptr inbounds %struct.Reg, %struct.Reg* %8346, i32 0, i32 0
  %RCX.i1418 = bitcast %union.anon* %8347 to i64*
  %8348 = load i64, i64* %RAX.i1417
  %8349 = load i64, i64* %RCX.i1418
  %8350 = mul i64 %8349, 4
  %8351 = add i64 %8350, %8348
  %8352 = load i64, i64* %PC.i1416
  %8353 = add i64 %8352, 7
  store i64 %8353, i64* %PC.i1416
  %8354 = inttoptr i64 %8351 to i32*
  store i32 0, i32* %8354
  store %struct.Memory* %loadMem_4b0c9a, %struct.Memory** %MEMORY
  br label %block_.L_4b0ca1

block_.L_4b0ca1:                                  ; preds = %block_.L_4b0bf2, %block_4b09bb
  %loadMem_4b0ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 33
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %PC.i1415 = bitcast %union.anon* %8357 to i64*
  %8358 = load i64, i64* %PC.i1415
  %8359 = add i64 %8358, 5
  %8360 = load i64, i64* %PC.i1415
  %8361 = add i64 %8360, 5
  store i64 %8361, i64* %PC.i1415
  %8362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8359, i64* %8362, align 8
  store %struct.Memory* %loadMem_4b0ca1, %struct.Memory** %MEMORY
  br label %block_.L_4b0ca6

block_.L_4b0ca6:                                  ; preds = %block_.L_4b0ca1
  %loadMem_4b0ca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8364 = getelementptr inbounds %struct.GPR, %struct.GPR* %8363, i32 0, i32 33
  %8365 = getelementptr inbounds %struct.Reg, %struct.Reg* %8364, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %8365 to i64*
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8367 = getelementptr inbounds %struct.GPR, %struct.GPR* %8366, i32 0, i32 1
  %8368 = getelementptr inbounds %struct.Reg, %struct.Reg* %8367, i32 0, i32 0
  %RAX.i1413 = bitcast %union.anon* %8368 to i64*
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8370 = getelementptr inbounds %struct.GPR, %struct.GPR* %8369, i32 0, i32 15
  %8371 = getelementptr inbounds %struct.Reg, %struct.Reg* %8370, i32 0, i32 0
  %RBP.i1414 = bitcast %union.anon* %8371 to i64*
  %8372 = load i64, i64* %RBP.i1414
  %8373 = sub i64 %8372, 40
  %8374 = load i64, i64* %PC.i1412
  %8375 = add i64 %8374, 3
  store i64 %8375, i64* %PC.i1412
  %8376 = inttoptr i64 %8373 to i32*
  %8377 = load i32, i32* %8376
  %8378 = zext i32 %8377 to i64
  store i64 %8378, i64* %RAX.i1413, align 8
  store %struct.Memory* %loadMem_4b0ca6, %struct.Memory** %MEMORY
  %loadMem_4b0ca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 33
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %PC.i1410 = bitcast %union.anon* %8381 to i64*
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 1
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %RAX.i1411 = bitcast %union.anon* %8384 to i64*
  %8385 = load i64, i64* %RAX.i1411
  %8386 = load i64, i64* %PC.i1410
  %8387 = add i64 %8386, 3
  store i64 %8387, i64* %PC.i1410
  %8388 = trunc i64 %8385 to i32
  %8389 = add i32 1, %8388
  %8390 = zext i32 %8389 to i64
  store i64 %8390, i64* %RAX.i1411, align 8
  %8391 = icmp ult i32 %8389, %8388
  %8392 = icmp ult i32 %8389, 1
  %8393 = or i1 %8391, %8392
  %8394 = zext i1 %8393 to i8
  %8395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8394, i8* %8395, align 1
  %8396 = and i32 %8389, 255
  %8397 = call i32 @llvm.ctpop.i32(i32 %8396)
  %8398 = trunc i32 %8397 to i8
  %8399 = and i8 %8398, 1
  %8400 = xor i8 %8399, 1
  %8401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8400, i8* %8401, align 1
  %8402 = xor i64 1, %8385
  %8403 = trunc i64 %8402 to i32
  %8404 = xor i32 %8403, %8389
  %8405 = lshr i32 %8404, 4
  %8406 = trunc i32 %8405 to i8
  %8407 = and i8 %8406, 1
  %8408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8407, i8* %8408, align 1
  %8409 = icmp eq i32 %8389, 0
  %8410 = zext i1 %8409 to i8
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8410, i8* %8411, align 1
  %8412 = lshr i32 %8389, 31
  %8413 = trunc i32 %8412 to i8
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8413, i8* %8414, align 1
  %8415 = lshr i32 %8388, 31
  %8416 = xor i32 %8412, %8415
  %8417 = add i32 %8416, %8412
  %8418 = icmp eq i32 %8417, 2
  %8419 = zext i1 %8418 to i8
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8419, i8* %8420, align 1
  store %struct.Memory* %loadMem_4b0ca9, %struct.Memory** %MEMORY
  %loadMem_4b0cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8422 = getelementptr inbounds %struct.GPR, %struct.GPR* %8421, i32 0, i32 33
  %8423 = getelementptr inbounds %struct.Reg, %struct.Reg* %8422, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %8423 to i64*
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 1
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %EAX.i1408 = bitcast %union.anon* %8426 to i32*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 15
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %RBP.i1409 = bitcast %union.anon* %8429 to i64*
  %8430 = load i64, i64* %RBP.i1409
  %8431 = sub i64 %8430, 40
  %8432 = load i32, i32* %EAX.i1408
  %8433 = zext i32 %8432 to i64
  %8434 = load i64, i64* %PC.i1407
  %8435 = add i64 %8434, 3
  store i64 %8435, i64* %PC.i1407
  %8436 = inttoptr i64 %8431 to i32*
  store i32 %8432, i32* %8436
  store %struct.Memory* %loadMem_4b0cac, %struct.Memory** %MEMORY
  %loadMem_4b0caf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8438 = getelementptr inbounds %struct.GPR, %struct.GPR* %8437, i32 0, i32 33
  %8439 = getelementptr inbounds %struct.Reg, %struct.Reg* %8438, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %8439 to i64*
  %8440 = load i64, i64* %PC.i1406
  %8441 = add i64 %8440, -779
  %8442 = load i64, i64* %PC.i1406
  %8443 = add i64 %8442, 5
  store i64 %8443, i64* %PC.i1406
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8441, i64* %8444, align 8
  store %struct.Memory* %loadMem_4b0caf, %struct.Memory** %MEMORY
  br label %block_.L_4b09a4

block_.L_4b0cb4:                                  ; preds = %block_.L_4b09a4
  %loadMem_4b0cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 33
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %8447 to i64*
  %8448 = load i64, i64* %PC.i1405
  %8449 = add i64 %8448, 5
  %8450 = load i64, i64* %PC.i1405
  %8451 = add i64 %8450, 5
  store i64 %8451, i64* %PC.i1405
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8449, i64* %8452, align 8
  store %struct.Memory* %loadMem_4b0cb4, %struct.Memory** %MEMORY
  br label %block_.L_4b0cb9

block_.L_4b0cb9:                                  ; preds = %block_.L_4b0cb4
  %loadMem_4b0cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8454 = getelementptr inbounds %struct.GPR, %struct.GPR* %8453, i32 0, i32 33
  %8455 = getelementptr inbounds %struct.Reg, %struct.Reg* %8454, i32 0, i32 0
  %PC.i1402 = bitcast %union.anon* %8455 to i64*
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8457 = getelementptr inbounds %struct.GPR, %struct.GPR* %8456, i32 0, i32 1
  %8458 = getelementptr inbounds %struct.Reg, %struct.Reg* %8457, i32 0, i32 0
  %RAX.i1403 = bitcast %union.anon* %8458 to i64*
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8460 = getelementptr inbounds %struct.GPR, %struct.GPR* %8459, i32 0, i32 15
  %8461 = getelementptr inbounds %struct.Reg, %struct.Reg* %8460, i32 0, i32 0
  %RBP.i1404 = bitcast %union.anon* %8461 to i64*
  %8462 = load i64, i64* %RBP.i1404
  %8463 = sub i64 %8462, 12
  %8464 = load i64, i64* %PC.i1402
  %8465 = add i64 %8464, 3
  store i64 %8465, i64* %PC.i1402
  %8466 = inttoptr i64 %8463 to i32*
  %8467 = load i32, i32* %8466
  %8468 = zext i32 %8467 to i64
  store i64 %8468, i64* %RAX.i1403, align 8
  store %struct.Memory* %loadMem_4b0cb9, %struct.Memory** %MEMORY
  %loadMem_4b0cbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8470 = getelementptr inbounds %struct.GPR, %struct.GPR* %8469, i32 0, i32 33
  %8471 = getelementptr inbounds %struct.Reg, %struct.Reg* %8470, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %8471 to i64*
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 1
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %RAX.i1401 = bitcast %union.anon* %8474 to i64*
  %8475 = load i64, i64* %RAX.i1401
  %8476 = load i64, i64* %PC.i1400
  %8477 = add i64 %8476, 3
  store i64 %8477, i64* %PC.i1400
  %8478 = trunc i64 %8475 to i32
  %8479 = add i32 1, %8478
  %8480 = zext i32 %8479 to i64
  store i64 %8480, i64* %RAX.i1401, align 8
  %8481 = icmp ult i32 %8479, %8478
  %8482 = icmp ult i32 %8479, 1
  %8483 = or i1 %8481, %8482
  %8484 = zext i1 %8483 to i8
  %8485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8484, i8* %8485, align 1
  %8486 = and i32 %8479, 255
  %8487 = call i32 @llvm.ctpop.i32(i32 %8486)
  %8488 = trunc i32 %8487 to i8
  %8489 = and i8 %8488, 1
  %8490 = xor i8 %8489, 1
  %8491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8490, i8* %8491, align 1
  %8492 = xor i64 1, %8475
  %8493 = trunc i64 %8492 to i32
  %8494 = xor i32 %8493, %8479
  %8495 = lshr i32 %8494, 4
  %8496 = trunc i32 %8495 to i8
  %8497 = and i8 %8496, 1
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8497, i8* %8498, align 1
  %8499 = icmp eq i32 %8479, 0
  %8500 = zext i1 %8499 to i8
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8500, i8* %8501, align 1
  %8502 = lshr i32 %8479, 31
  %8503 = trunc i32 %8502 to i8
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8503, i8* %8504, align 1
  %8505 = lshr i32 %8478, 31
  %8506 = xor i32 %8502, %8505
  %8507 = add i32 %8506, %8502
  %8508 = icmp eq i32 %8507, 2
  %8509 = zext i1 %8508 to i8
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8509, i8* %8510, align 1
  store %struct.Memory* %loadMem_4b0cbc, %struct.Memory** %MEMORY
  %loadMem_4b0cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8512 = getelementptr inbounds %struct.GPR, %struct.GPR* %8511, i32 0, i32 33
  %8513 = getelementptr inbounds %struct.Reg, %struct.Reg* %8512, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %8513 to i64*
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8515 = getelementptr inbounds %struct.GPR, %struct.GPR* %8514, i32 0, i32 1
  %8516 = getelementptr inbounds %struct.Reg, %struct.Reg* %8515, i32 0, i32 0
  %EAX.i1398 = bitcast %union.anon* %8516 to i32*
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8518 = getelementptr inbounds %struct.GPR, %struct.GPR* %8517, i32 0, i32 15
  %8519 = getelementptr inbounds %struct.Reg, %struct.Reg* %8518, i32 0, i32 0
  %RBP.i1399 = bitcast %union.anon* %8519 to i64*
  %8520 = load i64, i64* %RBP.i1399
  %8521 = sub i64 %8520, 12
  %8522 = load i32, i32* %EAX.i1398
  %8523 = zext i32 %8522 to i64
  %8524 = load i64, i64* %PC.i1397
  %8525 = add i64 %8524, 3
  store i64 %8525, i64* %PC.i1397
  %8526 = inttoptr i64 %8521 to i32*
  store i32 %8522, i32* %8526
  store %struct.Memory* %loadMem_4b0cbf, %struct.Memory** %MEMORY
  %loadMem_4b0cc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8528 = getelementptr inbounds %struct.GPR, %struct.GPR* %8527, i32 0, i32 33
  %8529 = getelementptr inbounds %struct.Reg, %struct.Reg* %8528, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %8529 to i64*
  %8530 = load i64, i64* %PC.i1396
  %8531 = add i64 %8530, -1185
  %8532 = load i64, i64* %PC.i1396
  %8533 = add i64 %8532, 5
  store i64 %8533, i64* %PC.i1396
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8531, i64* %8534, align 8
  store %struct.Memory* %loadMem_4b0cc2, %struct.Memory** %MEMORY
  br label %block_.L_4b0821

block_.L_4b0cc7:                                  ; preds = %block_.L_4b0821
  %loadMem_4b0cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8536 = getelementptr inbounds %struct.GPR, %struct.GPR* %8535, i32 0, i32 33
  %8537 = getelementptr inbounds %struct.Reg, %struct.Reg* %8536, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %8537 to i64*
  %8538 = load i64, i64* %PC.i1395
  %8539 = add i64 %8538, 5
  %8540 = load i64, i64* %PC.i1395
  %8541 = add i64 %8540, 5
  store i64 %8541, i64* %PC.i1395
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8539, i64* %8542, align 8
  store %struct.Memory* %loadMem_4b0cc7, %struct.Memory** %MEMORY
  br label %block_.L_4b0ccc

block_.L_4b0ccc:                                  ; preds = %block_.L_4b0cc7
  %loadMem_4b0ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 33
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %8545 to i64*
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 1
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %RAX.i1393 = bitcast %union.anon* %8548 to i64*
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 15
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %RBP.i1394 = bitcast %union.anon* %8551 to i64*
  %8552 = load i64, i64* %RBP.i1394
  %8553 = sub i64 %8552, 8
  %8554 = load i64, i64* %PC.i1392
  %8555 = add i64 %8554, 3
  store i64 %8555, i64* %PC.i1392
  %8556 = inttoptr i64 %8553 to i32*
  %8557 = load i32, i32* %8556
  %8558 = zext i32 %8557 to i64
  store i64 %8558, i64* %RAX.i1393, align 8
  store %struct.Memory* %loadMem_4b0ccc, %struct.Memory** %MEMORY
  %loadMem_4b0ccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8560 = getelementptr inbounds %struct.GPR, %struct.GPR* %8559, i32 0, i32 33
  %8561 = getelementptr inbounds %struct.Reg, %struct.Reg* %8560, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %8561 to i64*
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8563 = getelementptr inbounds %struct.GPR, %struct.GPR* %8562, i32 0, i32 1
  %8564 = getelementptr inbounds %struct.Reg, %struct.Reg* %8563, i32 0, i32 0
  %RAX.i1391 = bitcast %union.anon* %8564 to i64*
  %8565 = load i64, i64* %RAX.i1391
  %8566 = load i64, i64* %PC.i1390
  %8567 = add i64 %8566, 3
  store i64 %8567, i64* %PC.i1390
  %8568 = trunc i64 %8565 to i32
  %8569 = add i32 1, %8568
  %8570 = zext i32 %8569 to i64
  store i64 %8570, i64* %RAX.i1391, align 8
  %8571 = icmp ult i32 %8569, %8568
  %8572 = icmp ult i32 %8569, 1
  %8573 = or i1 %8571, %8572
  %8574 = zext i1 %8573 to i8
  %8575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8574, i8* %8575, align 1
  %8576 = and i32 %8569, 255
  %8577 = call i32 @llvm.ctpop.i32(i32 %8576)
  %8578 = trunc i32 %8577 to i8
  %8579 = and i8 %8578, 1
  %8580 = xor i8 %8579, 1
  %8581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8580, i8* %8581, align 1
  %8582 = xor i64 1, %8565
  %8583 = trunc i64 %8582 to i32
  %8584 = xor i32 %8583, %8569
  %8585 = lshr i32 %8584, 4
  %8586 = trunc i32 %8585 to i8
  %8587 = and i8 %8586, 1
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8587, i8* %8588, align 1
  %8589 = icmp eq i32 %8569, 0
  %8590 = zext i1 %8589 to i8
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8590, i8* %8591, align 1
  %8592 = lshr i32 %8569, 31
  %8593 = trunc i32 %8592 to i8
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8593, i8* %8594, align 1
  %8595 = lshr i32 %8568, 31
  %8596 = xor i32 %8592, %8595
  %8597 = add i32 %8596, %8592
  %8598 = icmp eq i32 %8597, 2
  %8599 = zext i1 %8598 to i8
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8599, i8* %8600, align 1
  store %struct.Memory* %loadMem_4b0ccf, %struct.Memory** %MEMORY
  %loadMem_4b0cd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8602 = getelementptr inbounds %struct.GPR, %struct.GPR* %8601, i32 0, i32 33
  %8603 = getelementptr inbounds %struct.Reg, %struct.Reg* %8602, i32 0, i32 0
  %PC.i1387 = bitcast %union.anon* %8603 to i64*
  %8604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8605 = getelementptr inbounds %struct.GPR, %struct.GPR* %8604, i32 0, i32 1
  %8606 = getelementptr inbounds %struct.Reg, %struct.Reg* %8605, i32 0, i32 0
  %EAX.i1388 = bitcast %union.anon* %8606 to i32*
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8608 = getelementptr inbounds %struct.GPR, %struct.GPR* %8607, i32 0, i32 15
  %8609 = getelementptr inbounds %struct.Reg, %struct.Reg* %8608, i32 0, i32 0
  %RBP.i1389 = bitcast %union.anon* %8609 to i64*
  %8610 = load i64, i64* %RBP.i1389
  %8611 = sub i64 %8610, 8
  %8612 = load i32, i32* %EAX.i1388
  %8613 = zext i32 %8612 to i64
  %8614 = load i64, i64* %PC.i1387
  %8615 = add i64 %8614, 3
  store i64 %8615, i64* %PC.i1387
  %8616 = inttoptr i64 %8611 to i32*
  store i32 %8612, i32* %8616
  store %struct.Memory* %loadMem_4b0cd2, %struct.Memory** %MEMORY
  %loadMem_4b0cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8618 = getelementptr inbounds %struct.GPR, %struct.GPR* %8617, i32 0, i32 33
  %8619 = getelementptr inbounds %struct.Reg, %struct.Reg* %8618, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %8619 to i64*
  %8620 = load i64, i64* %PC.i1386
  %8621 = add i64 %8620, -1227
  %8622 = load i64, i64* %PC.i1386
  %8623 = add i64 %8622, 5
  store i64 %8623, i64* %PC.i1386
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8621, i64* %8624, align 8
  store %struct.Memory* %loadMem_4b0cd5, %struct.Memory** %MEMORY
  br label %block_.L_4b080a

block_.L_4b0cda:                                  ; preds = %block_.L_4b080a
  %loadMem_4b0cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %8625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8626 = getelementptr inbounds %struct.GPR, %struct.GPR* %8625, i32 0, i32 33
  %8627 = getelementptr inbounds %struct.Reg, %struct.Reg* %8626, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %8627 to i64*
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8629 = getelementptr inbounds %struct.GPR, %struct.GPR* %8628, i32 0, i32 15
  %8630 = getelementptr inbounds %struct.Reg, %struct.Reg* %8629, i32 0, i32 0
  %RBP.i1385 = bitcast %union.anon* %8630 to i64*
  %8631 = load i64, i64* %RBP.i1385
  %8632 = sub i64 %8631, 4
  %8633 = load i64, i64* %PC.i1384
  %8634 = add i64 %8633, 4
  store i64 %8634, i64* %PC.i1384
  %8635 = inttoptr i64 %8632 to i32*
  %8636 = load i32, i32* %8635
  %8637 = sub i32 %8636, 1
  %8638 = icmp ult i32 %8636, 1
  %8639 = zext i1 %8638 to i8
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8639, i8* %8640, align 1
  %8641 = and i32 %8637, 255
  %8642 = call i32 @llvm.ctpop.i32(i32 %8641)
  %8643 = trunc i32 %8642 to i8
  %8644 = and i8 %8643, 1
  %8645 = xor i8 %8644, 1
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8645, i8* %8646, align 1
  %8647 = xor i32 %8636, 1
  %8648 = xor i32 %8647, %8637
  %8649 = lshr i32 %8648, 4
  %8650 = trunc i32 %8649 to i8
  %8651 = and i8 %8650, 1
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8651, i8* %8652, align 1
  %8653 = icmp eq i32 %8637, 0
  %8654 = zext i1 %8653 to i8
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8654, i8* %8655, align 1
  %8656 = lshr i32 %8637, 31
  %8657 = trunc i32 %8656 to i8
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8657, i8* %8658, align 1
  %8659 = lshr i32 %8636, 31
  %8660 = xor i32 %8656, %8659
  %8661 = add i32 %8660, %8659
  %8662 = icmp eq i32 %8661, 2
  %8663 = zext i1 %8662 to i8
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8663, i8* %8664, align 1
  store %struct.Memory* %loadMem_4b0cda, %struct.Memory** %MEMORY
  %loadMem_4b0cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8666 = getelementptr inbounds %struct.GPR, %struct.GPR* %8665, i32 0, i32 33
  %8667 = getelementptr inbounds %struct.Reg, %struct.Reg* %8666, i32 0, i32 0
  %PC.i1383 = bitcast %union.anon* %8667 to i64*
  %8668 = load i64, i64* %PC.i1383
  %8669 = add i64 %8668, 657
  %8670 = load i64, i64* %PC.i1383
  %8671 = add i64 %8670, 6
  %8672 = load i64, i64* %PC.i1383
  %8673 = add i64 %8672, 6
  store i64 %8673, i64* %PC.i1383
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8675 = load i8, i8* %8674, align 1
  %8676 = icmp eq i8 %8675, 0
  %8677 = zext i1 %8676 to i8
  store i8 %8677, i8* %BRANCH_TAKEN, align 1
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8679 = select i1 %8676, i64 %8669, i64 %8671
  store i64 %8679, i64* %8678, align 8
  store %struct.Memory* %loadMem_4b0cde, %struct.Memory** %MEMORY
  %loadBr_4b0cde = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0cde = icmp eq i8 %loadBr_4b0cde, 1
  br i1 %cmpBr_4b0cde, label %block_.L_4b0f6f, label %block_4b0ce4

block_4b0ce4:                                     ; preds = %block_.L_4b0cda
  %loadMem_4b0ce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8681 = getelementptr inbounds %struct.GPR, %struct.GPR* %8680, i32 0, i32 33
  %8682 = getelementptr inbounds %struct.Reg, %struct.Reg* %8681, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %8682 to i64*
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8684 = getelementptr inbounds %struct.GPR, %struct.GPR* %8683, i32 0, i32 15
  %8685 = getelementptr inbounds %struct.Reg, %struct.Reg* %8684, i32 0, i32 0
  %RBP.i1382 = bitcast %union.anon* %8685 to i64*
  %8686 = load i64, i64* %RBP.i1382
  %8687 = sub i64 %8686, 8
  %8688 = load i64, i64* %PC.i1381
  %8689 = add i64 %8688, 7
  store i64 %8689, i64* %PC.i1381
  %8690 = inttoptr i64 %8687 to i32*
  store i32 0, i32* %8690
  store %struct.Memory* %loadMem_4b0ce4, %struct.Memory** %MEMORY
  br label %block_.L_4b0ceb

block_.L_4b0ceb:                                  ; preds = %block_.L_4b0e14, %block_4b0ce4
  %loadMem_4b0ceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8692 = getelementptr inbounds %struct.GPR, %struct.GPR* %8691, i32 0, i32 33
  %8693 = getelementptr inbounds %struct.Reg, %struct.Reg* %8692, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %8693 to i64*
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 1
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %RAX.i1379 = bitcast %union.anon* %8696 to i64*
  %8697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8698 = getelementptr inbounds %struct.GPR, %struct.GPR* %8697, i32 0, i32 15
  %8699 = getelementptr inbounds %struct.Reg, %struct.Reg* %8698, i32 0, i32 0
  %RBP.i1380 = bitcast %union.anon* %8699 to i64*
  %8700 = load i64, i64* %RBP.i1380
  %8701 = sub i64 %8700, 8
  %8702 = load i64, i64* %PC.i1378
  %8703 = add i64 %8702, 3
  store i64 %8703, i64* %PC.i1378
  %8704 = inttoptr i64 %8701 to i32*
  %8705 = load i32, i32* %8704
  %8706 = zext i32 %8705 to i64
  store i64 %8706, i64* %RAX.i1379, align 8
  store %struct.Memory* %loadMem_4b0ceb, %struct.Memory** %MEMORY
  %loadMem_4b0cee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 33
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %8709 to i64*
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 1
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %EAX.i1377 = bitcast %union.anon* %8712 to i32*
  %8713 = load i32, i32* %EAX.i1377
  %8714 = zext i32 %8713 to i64
  %8715 = load i64, i64* %PC.i1376
  %8716 = add i64 %8715, 7
  store i64 %8716, i64* %PC.i1376
  %8717 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %8718 = sub i32 %8713, %8717
  %8719 = icmp ult i32 %8713, %8717
  %8720 = zext i1 %8719 to i8
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8720, i8* %8721, align 1
  %8722 = and i32 %8718, 255
  %8723 = call i32 @llvm.ctpop.i32(i32 %8722)
  %8724 = trunc i32 %8723 to i8
  %8725 = and i8 %8724, 1
  %8726 = xor i8 %8725, 1
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8726, i8* %8727, align 1
  %8728 = xor i32 %8717, %8713
  %8729 = xor i32 %8728, %8718
  %8730 = lshr i32 %8729, 4
  %8731 = trunc i32 %8730 to i8
  %8732 = and i8 %8731, 1
  %8733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8732, i8* %8733, align 1
  %8734 = icmp eq i32 %8718, 0
  %8735 = zext i1 %8734 to i8
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8735, i8* %8736, align 1
  %8737 = lshr i32 %8718, 31
  %8738 = trunc i32 %8737 to i8
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8738, i8* %8739, align 1
  %8740 = lshr i32 %8713, 31
  %8741 = lshr i32 %8717, 31
  %8742 = xor i32 %8741, %8740
  %8743 = xor i32 %8737, %8740
  %8744 = add i32 %8743, %8742
  %8745 = icmp eq i32 %8744, 2
  %8746 = zext i1 %8745 to i8
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8746, i8* %8747, align 1
  store %struct.Memory* %loadMem_4b0cee, %struct.Memory** %MEMORY
  %loadMem_4b0cf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8749 = getelementptr inbounds %struct.GPR, %struct.GPR* %8748, i32 0, i32 33
  %8750 = getelementptr inbounds %struct.Reg, %struct.Reg* %8749, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %8750 to i64*
  %8751 = load i64, i64* %PC.i1375
  %8752 = add i64 %8751, 301
  %8753 = load i64, i64* %PC.i1375
  %8754 = add i64 %8753, 6
  %8755 = load i64, i64* %PC.i1375
  %8756 = add i64 %8755, 6
  store i64 %8756, i64* %PC.i1375
  %8757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8758 = load i8, i8* %8757, align 1
  %8759 = icmp ne i8 %8758, 0
  %8760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8761 = load i8, i8* %8760, align 1
  %8762 = icmp ne i8 %8761, 0
  %8763 = xor i1 %8759, %8762
  %8764 = xor i1 %8763, true
  %8765 = zext i1 %8764 to i8
  store i8 %8765, i8* %BRANCH_TAKEN, align 1
  %8766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8767 = select i1 %8763, i64 %8754, i64 %8752
  store i64 %8767, i64* %8766, align 8
  store %struct.Memory* %loadMem_4b0cf5, %struct.Memory** %MEMORY
  %loadBr_4b0cf5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0cf5 = icmp eq i8 %loadBr_4b0cf5, 1
  br i1 %cmpBr_4b0cf5, label %block_.L_4b0e22, label %block_4b0cfb

block_4b0cfb:                                     ; preds = %block_.L_4b0ceb
  %loadMem_4b0cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 33
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %8770 to i64*
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 15
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %RBP.i1374 = bitcast %union.anon* %8773 to i64*
  %8774 = load i64, i64* %RBP.i1374
  %8775 = sub i64 %8774, 12
  %8776 = load i64, i64* %PC.i1373
  %8777 = add i64 %8776, 7
  store i64 %8777, i64* %PC.i1373
  %8778 = inttoptr i64 %8775 to i32*
  store i32 0, i32* %8778
  store %struct.Memory* %loadMem_4b0cfb, %struct.Memory** %MEMORY
  br label %block_.L_4b0d02

block_.L_4b0d02:                                  ; preds = %block_.L_4b0e01, %block_4b0cfb
  %loadMem_4b0d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8780 = getelementptr inbounds %struct.GPR, %struct.GPR* %8779, i32 0, i32 33
  %8781 = getelementptr inbounds %struct.Reg, %struct.Reg* %8780, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %8781 to i64*
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8783 = getelementptr inbounds %struct.GPR, %struct.GPR* %8782, i32 0, i32 1
  %8784 = getelementptr inbounds %struct.Reg, %struct.Reg* %8783, i32 0, i32 0
  %RAX.i1371 = bitcast %union.anon* %8784 to i64*
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8786 = getelementptr inbounds %struct.GPR, %struct.GPR* %8785, i32 0, i32 15
  %8787 = getelementptr inbounds %struct.Reg, %struct.Reg* %8786, i32 0, i32 0
  %RBP.i1372 = bitcast %union.anon* %8787 to i64*
  %8788 = load i64, i64* %RBP.i1372
  %8789 = sub i64 %8788, 12
  %8790 = load i64, i64* %PC.i1370
  %8791 = add i64 %8790, 3
  store i64 %8791, i64* %PC.i1370
  %8792 = inttoptr i64 %8789 to i32*
  %8793 = load i32, i32* %8792
  %8794 = zext i32 %8793 to i64
  store i64 %8794, i64* %RAX.i1371, align 8
  store %struct.Memory* %loadMem_4b0d02, %struct.Memory** %MEMORY
  %loadMem_4b0d05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8796 = getelementptr inbounds %struct.GPR, %struct.GPR* %8795, i32 0, i32 33
  %8797 = getelementptr inbounds %struct.Reg, %struct.Reg* %8796, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %8797 to i64*
  %8798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8799 = getelementptr inbounds %struct.GPR, %struct.GPR* %8798, i32 0, i32 1
  %8800 = getelementptr inbounds %struct.Reg, %struct.Reg* %8799, i32 0, i32 0
  %EAX.i1369 = bitcast %union.anon* %8800 to i32*
  %8801 = load i32, i32* %EAX.i1369
  %8802 = zext i32 %8801 to i64
  %8803 = load i64, i64* %PC.i1368
  %8804 = add i64 %8803, 7
  store i64 %8804, i64* %PC.i1368
  %8805 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %8806 = sub i32 %8801, %8805
  %8807 = icmp ult i32 %8801, %8805
  %8808 = zext i1 %8807 to i8
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8808, i8* %8809, align 1
  %8810 = and i32 %8806, 255
  %8811 = call i32 @llvm.ctpop.i32(i32 %8810)
  %8812 = trunc i32 %8811 to i8
  %8813 = and i8 %8812, 1
  %8814 = xor i8 %8813, 1
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8814, i8* %8815, align 1
  %8816 = xor i32 %8805, %8801
  %8817 = xor i32 %8816, %8806
  %8818 = lshr i32 %8817, 4
  %8819 = trunc i32 %8818 to i8
  %8820 = and i8 %8819, 1
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8820, i8* %8821, align 1
  %8822 = icmp eq i32 %8806, 0
  %8823 = zext i1 %8822 to i8
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8823, i8* %8824, align 1
  %8825 = lshr i32 %8806, 31
  %8826 = trunc i32 %8825 to i8
  %8827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8826, i8* %8827, align 1
  %8828 = lshr i32 %8801, 31
  %8829 = lshr i32 %8805, 31
  %8830 = xor i32 %8829, %8828
  %8831 = xor i32 %8825, %8828
  %8832 = add i32 %8831, %8830
  %8833 = icmp eq i32 %8832, 2
  %8834 = zext i1 %8833 to i8
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8834, i8* %8835, align 1
  store %struct.Memory* %loadMem_4b0d05, %struct.Memory** %MEMORY
  %loadMem_4b0d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 33
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %8838 to i64*
  %8839 = load i64, i64* %PC.i1367
  %8840 = add i64 %8839, 259
  %8841 = load i64, i64* %PC.i1367
  %8842 = add i64 %8841, 6
  %8843 = load i64, i64* %PC.i1367
  %8844 = add i64 %8843, 6
  store i64 %8844, i64* %PC.i1367
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8846 = load i8, i8* %8845, align 1
  %8847 = icmp ne i8 %8846, 0
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8849 = load i8, i8* %8848, align 1
  %8850 = icmp ne i8 %8849, 0
  %8851 = xor i1 %8847, %8850
  %8852 = xor i1 %8851, true
  %8853 = zext i1 %8852 to i8
  store i8 %8853, i8* %BRANCH_TAKEN, align 1
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8855 = select i1 %8851, i64 %8842, i64 %8840
  store i64 %8855, i64* %8854, align 8
  store %struct.Memory* %loadMem_4b0d0c, %struct.Memory** %MEMORY
  %loadBr_4b0d0c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0d0c = icmp eq i8 %loadBr_4b0d0c, 1
  br i1 %cmpBr_4b0d0c, label %block_.L_4b0e0f, label %block_4b0d12

block_4b0d12:                                     ; preds = %block_.L_4b0d02
  %loadMem_4b0d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8857 = getelementptr inbounds %struct.GPR, %struct.GPR* %8856, i32 0, i32 33
  %8858 = getelementptr inbounds %struct.Reg, %struct.Reg* %8857, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %8858 to i64*
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8860 = getelementptr inbounds %struct.GPR, %struct.GPR* %8859, i32 0, i32 15
  %8861 = getelementptr inbounds %struct.Reg, %struct.Reg* %8860, i32 0, i32 0
  %RBP.i1366 = bitcast %union.anon* %8861 to i64*
  %8862 = load i64, i64* %RBP.i1366
  %8863 = sub i64 %8862, 40
  %8864 = load i64, i64* %PC.i1365
  %8865 = add i64 %8864, 7
  store i64 %8865, i64* %PC.i1365
  %8866 = inttoptr i64 %8863 to i32*
  store i32 0, i32* %8866
  store %struct.Memory* %loadMem_4b0d12, %struct.Memory** %MEMORY
  br label %block_.L_4b0d19

block_.L_4b0d19:                                  ; preds = %block_.L_4b0d4c, %block_4b0d12
  %loadMem_4b0d19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8868 = getelementptr inbounds %struct.GPR, %struct.GPR* %8867, i32 0, i32 33
  %8869 = getelementptr inbounds %struct.Reg, %struct.Reg* %8868, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %8869 to i64*
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 15
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %RBP.i1364 = bitcast %union.anon* %8872 to i64*
  %8873 = load i64, i64* %RBP.i1364
  %8874 = sub i64 %8873, 40
  %8875 = load i64, i64* %PC.i1363
  %8876 = add i64 %8875, 4
  store i64 %8876, i64* %PC.i1363
  %8877 = inttoptr i64 %8874 to i32*
  %8878 = load i32, i32* %8877
  %8879 = sub i32 %8878, 3
  %8880 = icmp ult i32 %8878, 3
  %8881 = zext i1 %8880 to i8
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8881, i8* %8882, align 1
  %8883 = and i32 %8879, 255
  %8884 = call i32 @llvm.ctpop.i32(i32 %8883)
  %8885 = trunc i32 %8884 to i8
  %8886 = and i8 %8885, 1
  %8887 = xor i8 %8886, 1
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8887, i8* %8888, align 1
  %8889 = xor i32 %8878, 3
  %8890 = xor i32 %8889, %8879
  %8891 = lshr i32 %8890, 4
  %8892 = trunc i32 %8891 to i8
  %8893 = and i8 %8892, 1
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8893, i8* %8894, align 1
  %8895 = icmp eq i32 %8879, 0
  %8896 = zext i1 %8895 to i8
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8896, i8* %8897, align 1
  %8898 = lshr i32 %8879, 31
  %8899 = trunc i32 %8898 to i8
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8899, i8* %8900, align 1
  %8901 = lshr i32 %8878, 31
  %8902 = xor i32 %8898, %8901
  %8903 = add i32 %8902, %8901
  %8904 = icmp eq i32 %8903, 2
  %8905 = zext i1 %8904 to i8
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8905, i8* %8906, align 1
  store %struct.Memory* %loadMem_4b0d19, %struct.Memory** %MEMORY
  %loadMem_4b0d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8908 = getelementptr inbounds %struct.GPR, %struct.GPR* %8907, i32 0, i32 33
  %8909 = getelementptr inbounds %struct.Reg, %struct.Reg* %8908, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %8909 to i64*
  %8910 = load i64, i64* %PC.i1362
  %8911 = add i64 %8910, 223
  %8912 = load i64, i64* %PC.i1362
  %8913 = add i64 %8912, 6
  %8914 = load i64, i64* %PC.i1362
  %8915 = add i64 %8914, 6
  store i64 %8915, i64* %PC.i1362
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8917 = load i8, i8* %8916, align 1
  %8918 = icmp ne i8 %8917, 0
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8920 = load i8, i8* %8919, align 1
  %8921 = icmp ne i8 %8920, 0
  %8922 = xor i1 %8918, %8921
  %8923 = xor i1 %8922, true
  %8924 = zext i1 %8923 to i8
  store i8 %8924, i8* %BRANCH_TAKEN, align 1
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8926 = select i1 %8922, i64 %8913, i64 %8911
  store i64 %8926, i64* %8925, align 8
  store %struct.Memory* %loadMem_4b0d1d, %struct.Memory** %MEMORY
  %loadBr_4b0d1d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0d1d = icmp eq i8 %loadBr_4b0d1d, 1
  br i1 %cmpBr_4b0d1d, label %block_.L_4b0dfc, label %block_4b0d23

block_4b0d23:                                     ; preds = %block_.L_4b0d19
  %loadMem_4b0d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8928 = getelementptr inbounds %struct.GPR, %struct.GPR* %8927, i32 0, i32 33
  %8929 = getelementptr inbounds %struct.Reg, %struct.Reg* %8928, i32 0, i32 0
  %PC.i1360 = bitcast %union.anon* %8929 to i64*
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8931 = getelementptr inbounds %struct.GPR, %struct.GPR* %8930, i32 0, i32 15
  %8932 = getelementptr inbounds %struct.Reg, %struct.Reg* %8931, i32 0, i32 0
  %RBP.i1361 = bitcast %union.anon* %8932 to i64*
  %8933 = load i64, i64* %RBP.i1361
  %8934 = sub i64 %8933, 40
  %8935 = load i64, i64* %PC.i1360
  %8936 = add i64 %8935, 4
  store i64 %8936, i64* %PC.i1360
  %8937 = inttoptr i64 %8934 to i32*
  %8938 = load i32, i32* %8937
  %8939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8939, align 1
  %8940 = and i32 %8938, 255
  %8941 = call i32 @llvm.ctpop.i32(i32 %8940)
  %8942 = trunc i32 %8941 to i8
  %8943 = and i8 %8942, 1
  %8944 = xor i8 %8943, 1
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8944, i8* %8945, align 1
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8946, align 1
  %8947 = icmp eq i32 %8938, 0
  %8948 = zext i1 %8947 to i8
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8948, i8* %8949, align 1
  %8950 = lshr i32 %8938, 31
  %8951 = trunc i32 %8950 to i8
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8951, i8* %8952, align 1
  %8953 = lshr i32 %8938, 31
  %8954 = xor i32 %8950, %8953
  %8955 = add i32 %8954, %8953
  %8956 = icmp eq i32 %8955, 2
  %8957 = zext i1 %8956 to i8
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8957, i8* %8958, align 1
  store %struct.Memory* %loadMem_4b0d23, %struct.Memory** %MEMORY
  %loadMem_4b0d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8960 = getelementptr inbounds %struct.GPR, %struct.GPR* %8959, i32 0, i32 33
  %8961 = getelementptr inbounds %struct.Reg, %struct.Reg* %8960, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %8961 to i64*
  %8962 = load i64, i64* %PC.i1359
  %8963 = add i64 %8962, 24
  %8964 = load i64, i64* %PC.i1359
  %8965 = add i64 %8964, 6
  %8966 = load i64, i64* %PC.i1359
  %8967 = add i64 %8966, 6
  store i64 %8967, i64* %PC.i1359
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8969 = load i8, i8* %8968, align 1
  %8970 = icmp eq i8 %8969, 0
  %8971 = zext i1 %8970 to i8
  store i8 %8971, i8* %BRANCH_TAKEN, align 1
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8973 = select i1 %8970, i64 %8963, i64 %8965
  store i64 %8973, i64* %8972, align 8
  store %struct.Memory* %loadMem_4b0d27, %struct.Memory** %MEMORY
  %loadBr_4b0d27 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0d27 = icmp eq i8 %loadBr_4b0d27, 1
  br i1 %cmpBr_4b0d27, label %block_.L_4b0d3f, label %block_4b0d2d

block_4b0d2d:                                     ; preds = %block_4b0d23
  %loadMem_4b0d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8975 = getelementptr inbounds %struct.GPR, %struct.GPR* %8974, i32 0, i32 33
  %8976 = getelementptr inbounds %struct.Reg, %struct.Reg* %8975, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %8976 to i64*
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8978 = getelementptr inbounds %struct.GPR, %struct.GPR* %8977, i32 0, i32 1
  %8979 = getelementptr inbounds %struct.Reg, %struct.Reg* %8978, i32 0, i32 0
  %RAX.i1358 = bitcast %union.anon* %8979 to i64*
  %8980 = load i64, i64* %PC.i1357
  %8981 = add i64 %8980, 7
  store i64 %8981, i64* %PC.i1357
  %8982 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %8983 = zext i32 %8982 to i64
  store i64 %8983, i64* %RAX.i1358, align 8
  store %struct.Memory* %loadMem_4b0d2d, %struct.Memory** %MEMORY
  %loadMem_4b0d34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8985 = getelementptr inbounds %struct.GPR, %struct.GPR* %8984, i32 0, i32 33
  %8986 = getelementptr inbounds %struct.Reg, %struct.Reg* %8985, i32 0, i32 0
  %PC.i1354 = bitcast %union.anon* %8986 to i64*
  %8987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8988 = getelementptr inbounds %struct.GPR, %struct.GPR* %8987, i32 0, i32 1
  %8989 = getelementptr inbounds %struct.Reg, %struct.Reg* %8988, i32 0, i32 0
  %EAX.i1355 = bitcast %union.anon* %8989 to i32*
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8991 = getelementptr inbounds %struct.GPR, %struct.GPR* %8990, i32 0, i32 15
  %8992 = getelementptr inbounds %struct.Reg, %struct.Reg* %8991, i32 0, i32 0
  %RBP.i1356 = bitcast %union.anon* %8992 to i64*
  %8993 = load i64, i64* %RBP.i1356
  %8994 = sub i64 %8993, 35460
  %8995 = load i32, i32* %EAX.i1355
  %8996 = zext i32 %8995 to i64
  %8997 = load i64, i64* %PC.i1354
  %8998 = add i64 %8997, 6
  store i64 %8998, i64* %PC.i1354
  %8999 = inttoptr i64 %8994 to i32*
  store i32 %8995, i32* %8999
  store %struct.Memory* %loadMem_4b0d34, %struct.Memory** %MEMORY
  %loadMem_4b0d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 33
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %9002 to i64*
  %9003 = load i64, i64* %PC.i1353
  %9004 = add i64 %9003, 18
  %9005 = load i64, i64* %PC.i1353
  %9006 = add i64 %9005, 5
  store i64 %9006, i64* %PC.i1353
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9004, i64* %9007, align 8
  store %struct.Memory* %loadMem_4b0d3a, %struct.Memory** %MEMORY
  br label %block_.L_4b0d4c

block_.L_4b0d3f:                                  ; preds = %block_4b0d23
  %loadMem_4b0d3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 33
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %9010 to i64*
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9012 = getelementptr inbounds %struct.GPR, %struct.GPR* %9011, i32 0, i32 1
  %9013 = getelementptr inbounds %struct.Reg, %struct.Reg* %9012, i32 0, i32 0
  %RAX.i1352 = bitcast %union.anon* %9013 to i64*
  %9014 = load i64, i64* %PC.i1351
  %9015 = add i64 %9014, 7
  store i64 %9015, i64* %PC.i1351
  %9016 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %9017 = zext i32 %9016 to i64
  store i64 %9017, i64* %RAX.i1352, align 8
  store %struct.Memory* %loadMem_4b0d3f, %struct.Memory** %MEMORY
  %loadMem_4b0d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9019 = getelementptr inbounds %struct.GPR, %struct.GPR* %9018, i32 0, i32 33
  %9020 = getelementptr inbounds %struct.Reg, %struct.Reg* %9019, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %9020 to i64*
  %9021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9022 = getelementptr inbounds %struct.GPR, %struct.GPR* %9021, i32 0, i32 1
  %9023 = getelementptr inbounds %struct.Reg, %struct.Reg* %9022, i32 0, i32 0
  %EAX.i1349 = bitcast %union.anon* %9023 to i32*
  %9024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9025 = getelementptr inbounds %struct.GPR, %struct.GPR* %9024, i32 0, i32 15
  %9026 = getelementptr inbounds %struct.Reg, %struct.Reg* %9025, i32 0, i32 0
  %RBP.i1350 = bitcast %union.anon* %9026 to i64*
  %9027 = load i64, i64* %RBP.i1350
  %9028 = sub i64 %9027, 35460
  %9029 = load i32, i32* %EAX.i1349
  %9030 = zext i32 %9029 to i64
  %9031 = load i64, i64* %PC.i1348
  %9032 = add i64 %9031, 6
  store i64 %9032, i64* %PC.i1348
  %9033 = inttoptr i64 %9028 to i32*
  store i32 %9029, i32* %9033
  store %struct.Memory* %loadMem_4b0d46, %struct.Memory** %MEMORY
  br label %block_.L_4b0d4c

block_.L_4b0d4c:                                  ; preds = %block_.L_4b0d3f, %block_4b0d2d
  %loadMem_4b0d4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9035 = getelementptr inbounds %struct.GPR, %struct.GPR* %9034, i32 0, i32 33
  %9036 = getelementptr inbounds %struct.Reg, %struct.Reg* %9035, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %9036 to i64*
  %9037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9038 = getelementptr inbounds %struct.GPR, %struct.GPR* %9037, i32 0, i32 1
  %9039 = getelementptr inbounds %struct.Reg, %struct.Reg* %9038, i32 0, i32 0
  %RAX.i1346 = bitcast %union.anon* %9039 to i64*
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9041 = getelementptr inbounds %struct.GPR, %struct.GPR* %9040, i32 0, i32 15
  %9042 = getelementptr inbounds %struct.Reg, %struct.Reg* %9041, i32 0, i32 0
  %RBP.i1347 = bitcast %union.anon* %9042 to i64*
  %9043 = load i64, i64* %RBP.i1347
  %9044 = sub i64 %9043, 35460
  %9045 = load i64, i64* %PC.i1345
  %9046 = add i64 %9045, 6
  store i64 %9046, i64* %PC.i1345
  %9047 = inttoptr i64 %9044 to i32*
  %9048 = load i32, i32* %9047
  %9049 = zext i32 %9048 to i64
  store i64 %9049, i64* %RAX.i1346, align 8
  store %struct.Memory* %loadMem_4b0d4c, %struct.Memory** %MEMORY
  %loadMem_4b0d52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9051 = getelementptr inbounds %struct.GPR, %struct.GPR* %9050, i32 0, i32 33
  %9052 = getelementptr inbounds %struct.Reg, %struct.Reg* %9051, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %9052 to i64*
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9054 = getelementptr inbounds %struct.GPR, %struct.GPR* %9053, i32 0, i32 5
  %9055 = getelementptr inbounds %struct.Reg, %struct.Reg* %9054, i32 0, i32 0
  %RCX.i1343 = bitcast %union.anon* %9055 to i64*
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9057 = getelementptr inbounds %struct.GPR, %struct.GPR* %9056, i32 0, i32 15
  %9058 = getelementptr inbounds %struct.Reg, %struct.Reg* %9057, i32 0, i32 0
  %RBP.i1344 = bitcast %union.anon* %9058 to i64*
  %9059 = load i64, i64* %RBP.i1344
  %9060 = sub i64 %9059, 19184
  %9061 = load i64, i64* %PC.i1342
  %9062 = add i64 %9061, 7
  store i64 %9062, i64* %PC.i1342
  store i64 %9060, i64* %RCX.i1343, align 8
  store %struct.Memory* %loadMem_4b0d52, %struct.Memory** %MEMORY
  %loadMem_4b0d59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 33
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %9065 to i64*
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9067 = getelementptr inbounds %struct.GPR, %struct.GPR* %9066, i32 0, i32 1
  %9068 = getelementptr inbounds %struct.Reg, %struct.Reg* %9067, i32 0, i32 0
  %EAX.i1340 = bitcast %union.anon* %9068 to i32*
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9070 = getelementptr inbounds %struct.GPR, %struct.GPR* %9069, i32 0, i32 15
  %9071 = getelementptr inbounds %struct.Reg, %struct.Reg* %9070, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %9071 to i64*
  %9072 = load i64, i64* %RBP.i1341
  %9073 = sub i64 %9072, 772
  %9074 = load i32, i32* %EAX.i1340
  %9075 = zext i32 %9074 to i64
  %9076 = load i64, i64* %PC.i1339
  %9077 = add i64 %9076, 6
  store i64 %9077, i64* %PC.i1339
  %9078 = inttoptr i64 %9073 to i32*
  store i32 %9074, i32* %9078
  store %struct.Memory* %loadMem_4b0d59, %struct.Memory** %MEMORY
  %loadMem_4b0d5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9080 = getelementptr inbounds %struct.GPR, %struct.GPR* %9079, i32 0, i32 33
  %9081 = getelementptr inbounds %struct.Reg, %struct.Reg* %9080, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %9081 to i64*
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9083 = getelementptr inbounds %struct.GPR, %struct.GPR* %9082, i32 0, i32 5
  %9084 = getelementptr inbounds %struct.Reg, %struct.Reg* %9083, i32 0, i32 0
  %RCX.i1337 = bitcast %union.anon* %9084 to i64*
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9086 = getelementptr inbounds %struct.GPR, %struct.GPR* %9085, i32 0, i32 7
  %9087 = getelementptr inbounds %struct.Reg, %struct.Reg* %9086, i32 0, i32 0
  %RDX.i1338 = bitcast %union.anon* %9087 to i64*
  %9088 = load i64, i64* %RCX.i1337
  %9089 = load i64, i64* %PC.i1336
  %9090 = add i64 %9089, 3
  store i64 %9090, i64* %PC.i1336
  store i64 %9088, i64* %RDX.i1338, align 8
  store %struct.Memory* %loadMem_4b0d5f, %struct.Memory** %MEMORY
  %loadMem_4b0d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9092 = getelementptr inbounds %struct.GPR, %struct.GPR* %9091, i32 0, i32 33
  %9093 = getelementptr inbounds %struct.Reg, %struct.Reg* %9092, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %9093 to i64*
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9095 = getelementptr inbounds %struct.GPR, %struct.GPR* %9094, i32 0, i32 7
  %9096 = getelementptr inbounds %struct.Reg, %struct.Reg* %9095, i32 0, i32 0
  %RDX.i1335 = bitcast %union.anon* %9096 to i64*
  %9097 = load i64, i64* %RDX.i1335
  %9098 = load i64, i64* %PC.i1334
  %9099 = add i64 %9098, 7
  store i64 %9099, i64* %PC.i1334
  %9100 = add i64 2700, %9097
  store i64 %9100, i64* %RDX.i1335, align 8
  %9101 = icmp ult i64 %9100, %9097
  %9102 = icmp ult i64 %9100, 2700
  %9103 = or i1 %9101, %9102
  %9104 = zext i1 %9103 to i8
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9104, i8* %9105, align 1
  %9106 = trunc i64 %9100 to i32
  %9107 = and i32 %9106, 255
  %9108 = call i32 @llvm.ctpop.i32(i32 %9107)
  %9109 = trunc i32 %9108 to i8
  %9110 = and i8 %9109, 1
  %9111 = xor i8 %9110, 1
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9111, i8* %9112, align 1
  %9113 = xor i64 2700, %9097
  %9114 = xor i64 %9113, %9100
  %9115 = lshr i64 %9114, 4
  %9116 = trunc i64 %9115 to i8
  %9117 = and i8 %9116, 1
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9117, i8* %9118, align 1
  %9119 = icmp eq i64 %9100, 0
  %9120 = zext i1 %9119 to i8
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9120, i8* %9121, align 1
  %9122 = lshr i64 %9100, 63
  %9123 = trunc i64 %9122 to i8
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9123, i8* %9124, align 1
  %9125 = lshr i64 %9097, 63
  %9126 = xor i64 %9122, %9125
  %9127 = add i64 %9126, %9122
  %9128 = icmp eq i64 %9127, 2
  %9129 = zext i1 %9128 to i8
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9129, i8* %9130, align 1
  store %struct.Memory* %loadMem_4b0d62, %struct.Memory** %MEMORY
  %loadMem_4b0d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9132 = getelementptr inbounds %struct.GPR, %struct.GPR* %9131, i32 0, i32 33
  %9133 = getelementptr inbounds %struct.Reg, %struct.Reg* %9132, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %9133 to i64*
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 9
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %RSI.i1332 = bitcast %union.anon* %9136 to i64*
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 15
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %RBP.i1333 = bitcast %union.anon* %9139 to i64*
  %9140 = load i64, i64* %RBP.i1333
  %9141 = sub i64 %9140, 8
  %9142 = load i64, i64* %PC.i1331
  %9143 = add i64 %9142, 4
  store i64 %9143, i64* %PC.i1331
  %9144 = inttoptr i64 %9141 to i32*
  %9145 = load i32, i32* %9144
  %9146 = sext i32 %9145 to i64
  store i64 %9146, i64* %RSI.i1332, align 8
  store %struct.Memory* %loadMem_4b0d69, %struct.Memory** %MEMORY
  %loadMem_4b0d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9148 = getelementptr inbounds %struct.GPR, %struct.GPR* %9147, i32 0, i32 33
  %9149 = getelementptr inbounds %struct.Reg, %struct.Reg* %9148, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %9149 to i64*
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9151 = getelementptr inbounds %struct.GPR, %struct.GPR* %9150, i32 0, i32 9
  %9152 = getelementptr inbounds %struct.Reg, %struct.Reg* %9151, i32 0, i32 0
  %RSI.i1330 = bitcast %union.anon* %9152 to i64*
  %9153 = load i64, i64* %RSI.i1330
  %9154 = load i64, i64* %PC.i1329
  %9155 = add i64 %9154, 7
  store i64 %9155, i64* %PC.i1329
  %9156 = sext i64 %9153 to i128
  %9157 = and i128 %9156, -18446744073709551616
  %9158 = zext i64 %9153 to i128
  %9159 = or i128 %9157, %9158
  %9160 = mul i128 180, %9159
  %9161 = trunc i128 %9160 to i64
  store i64 %9161, i64* %RSI.i1330, align 8
  %9162 = sext i64 %9161 to i128
  %9163 = icmp ne i128 %9162, %9160
  %9164 = zext i1 %9163 to i8
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9164, i8* %9165, align 1
  %9166 = trunc i128 %9160 to i32
  %9167 = and i32 %9166, 255
  %9168 = call i32 @llvm.ctpop.i32(i32 %9167)
  %9169 = trunc i32 %9168 to i8
  %9170 = and i8 %9169, 1
  %9171 = xor i8 %9170, 1
  %9172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9171, i8* %9172, align 1
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9173, align 1
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9174, align 1
  %9175 = lshr i64 %9161, 63
  %9176 = trunc i64 %9175 to i8
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9176, i8* %9177, align 1
  %9178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9164, i8* %9178, align 1
  store %struct.Memory* %loadMem_4b0d6d, %struct.Memory** %MEMORY
  %loadMem_4b0d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9180 = getelementptr inbounds %struct.GPR, %struct.GPR* %9179, i32 0, i32 33
  %9181 = getelementptr inbounds %struct.Reg, %struct.Reg* %9180, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %9181 to i64*
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9183 = getelementptr inbounds %struct.GPR, %struct.GPR* %9182, i32 0, i32 7
  %9184 = getelementptr inbounds %struct.Reg, %struct.Reg* %9183, i32 0, i32 0
  %RDX.i1327 = bitcast %union.anon* %9184 to i64*
  %9185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9186 = getelementptr inbounds %struct.GPR, %struct.GPR* %9185, i32 0, i32 9
  %9187 = getelementptr inbounds %struct.Reg, %struct.Reg* %9186, i32 0, i32 0
  %RSI.i1328 = bitcast %union.anon* %9187 to i64*
  %9188 = load i64, i64* %RDX.i1327
  %9189 = load i64, i64* %RSI.i1328
  %9190 = load i64, i64* %PC.i1326
  %9191 = add i64 %9190, 3
  store i64 %9191, i64* %PC.i1326
  %9192 = add i64 %9189, %9188
  store i64 %9192, i64* %RDX.i1327, align 8
  %9193 = icmp ult i64 %9192, %9188
  %9194 = icmp ult i64 %9192, %9189
  %9195 = or i1 %9193, %9194
  %9196 = zext i1 %9195 to i8
  %9197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9196, i8* %9197, align 1
  %9198 = trunc i64 %9192 to i32
  %9199 = and i32 %9198, 255
  %9200 = call i32 @llvm.ctpop.i32(i32 %9199)
  %9201 = trunc i32 %9200 to i8
  %9202 = and i8 %9201, 1
  %9203 = xor i8 %9202, 1
  %9204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9203, i8* %9204, align 1
  %9205 = xor i64 %9189, %9188
  %9206 = xor i64 %9205, %9192
  %9207 = lshr i64 %9206, 4
  %9208 = trunc i64 %9207 to i8
  %9209 = and i8 %9208, 1
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9209, i8* %9210, align 1
  %9211 = icmp eq i64 %9192, 0
  %9212 = zext i1 %9211 to i8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9212, i8* %9213, align 1
  %9214 = lshr i64 %9192, 63
  %9215 = trunc i64 %9214 to i8
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9215, i8* %9216, align 1
  %9217 = lshr i64 %9188, 63
  %9218 = lshr i64 %9189, 63
  %9219 = xor i64 %9214, %9217
  %9220 = xor i64 %9214, %9218
  %9221 = add i64 %9219, %9220
  %9222 = icmp eq i64 %9221, 2
  %9223 = zext i1 %9222 to i8
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9223, i8* %9224, align 1
  store %struct.Memory* %loadMem_4b0d74, %struct.Memory** %MEMORY
  %loadMem_4b0d77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9226 = getelementptr inbounds %struct.GPR, %struct.GPR* %9225, i32 0, i32 33
  %9227 = getelementptr inbounds %struct.Reg, %struct.Reg* %9226, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %9227 to i64*
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9229 = getelementptr inbounds %struct.GPR, %struct.GPR* %9228, i32 0, i32 9
  %9230 = getelementptr inbounds %struct.Reg, %struct.Reg* %9229, i32 0, i32 0
  %RSI.i1324 = bitcast %union.anon* %9230 to i64*
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9232 = getelementptr inbounds %struct.GPR, %struct.GPR* %9231, i32 0, i32 15
  %9233 = getelementptr inbounds %struct.Reg, %struct.Reg* %9232, i32 0, i32 0
  %RBP.i1325 = bitcast %union.anon* %9233 to i64*
  %9234 = load i64, i64* %RBP.i1325
  %9235 = sub i64 %9234, 12
  %9236 = load i64, i64* %PC.i1323
  %9237 = add i64 %9236, 4
  store i64 %9237, i64* %PC.i1323
  %9238 = inttoptr i64 %9235 to i32*
  %9239 = load i32, i32* %9238
  %9240 = sext i32 %9239 to i64
  store i64 %9240, i64* %RSI.i1324, align 8
  store %struct.Memory* %loadMem_4b0d77, %struct.Memory** %MEMORY
  %loadMem_4b0d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 33
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %9243 to i64*
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9245 = getelementptr inbounds %struct.GPR, %struct.GPR* %9244, i32 0, i32 9
  %9246 = getelementptr inbounds %struct.Reg, %struct.Reg* %9245, i32 0, i32 0
  %RSI.i1322 = bitcast %union.anon* %9246 to i64*
  %9247 = load i64, i64* %RSI.i1322
  %9248 = load i64, i64* %PC.i1321
  %9249 = add i64 %9248, 4
  store i64 %9249, i64* %PC.i1321
  %9250 = sext i64 %9247 to i128
  %9251 = and i128 %9250, -18446744073709551616
  %9252 = zext i64 %9247 to i128
  %9253 = or i128 %9251, %9252
  %9254 = mul i128 12, %9253
  %9255 = trunc i128 %9254 to i64
  store i64 %9255, i64* %RSI.i1322, align 8
  %9256 = sext i64 %9255 to i128
  %9257 = icmp ne i128 %9256, %9254
  %9258 = zext i1 %9257 to i8
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9258, i8* %9259, align 1
  %9260 = trunc i128 %9254 to i32
  %9261 = and i32 %9260, 255
  %9262 = call i32 @llvm.ctpop.i32(i32 %9261)
  %9263 = trunc i32 %9262 to i8
  %9264 = and i8 %9263, 1
  %9265 = xor i8 %9264, 1
  %9266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9265, i8* %9266, align 1
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9267, align 1
  %9268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9268, align 1
  %9269 = lshr i64 %9255, 63
  %9270 = trunc i64 %9269 to i8
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9270, i8* %9271, align 1
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9258, i8* %9272, align 1
  store %struct.Memory* %loadMem_4b0d7b, %struct.Memory** %MEMORY
  %loadMem_4b0d7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9274 = getelementptr inbounds %struct.GPR, %struct.GPR* %9273, i32 0, i32 33
  %9275 = getelementptr inbounds %struct.Reg, %struct.Reg* %9274, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %9275 to i64*
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 7
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %RDX.i1319 = bitcast %union.anon* %9278 to i64*
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9280 = getelementptr inbounds %struct.GPR, %struct.GPR* %9279, i32 0, i32 9
  %9281 = getelementptr inbounds %struct.Reg, %struct.Reg* %9280, i32 0, i32 0
  %RSI.i1320 = bitcast %union.anon* %9281 to i64*
  %9282 = load i64, i64* %RDX.i1319
  %9283 = load i64, i64* %RSI.i1320
  %9284 = load i64, i64* %PC.i1318
  %9285 = add i64 %9284, 3
  store i64 %9285, i64* %PC.i1318
  %9286 = add i64 %9283, %9282
  store i64 %9286, i64* %RDX.i1319, align 8
  %9287 = icmp ult i64 %9286, %9282
  %9288 = icmp ult i64 %9286, %9283
  %9289 = or i1 %9287, %9288
  %9290 = zext i1 %9289 to i8
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9290, i8* %9291, align 1
  %9292 = trunc i64 %9286 to i32
  %9293 = and i32 %9292, 255
  %9294 = call i32 @llvm.ctpop.i32(i32 %9293)
  %9295 = trunc i32 %9294 to i8
  %9296 = and i8 %9295, 1
  %9297 = xor i8 %9296, 1
  %9298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9297, i8* %9298, align 1
  %9299 = xor i64 %9283, %9282
  %9300 = xor i64 %9299, %9286
  %9301 = lshr i64 %9300, 4
  %9302 = trunc i64 %9301 to i8
  %9303 = and i8 %9302, 1
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9303, i8* %9304, align 1
  %9305 = icmp eq i64 %9286, 0
  %9306 = zext i1 %9305 to i8
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9306, i8* %9307, align 1
  %9308 = lshr i64 %9286, 63
  %9309 = trunc i64 %9308 to i8
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9309, i8* %9310, align 1
  %9311 = lshr i64 %9282, 63
  %9312 = lshr i64 %9283, 63
  %9313 = xor i64 %9308, %9311
  %9314 = xor i64 %9308, %9312
  %9315 = add i64 %9313, %9314
  %9316 = icmp eq i64 %9315, 2
  %9317 = zext i1 %9316 to i8
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9317, i8* %9318, align 1
  store %struct.Memory* %loadMem_4b0d7f, %struct.Memory** %MEMORY
  %loadMem_4b0d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9320 = getelementptr inbounds %struct.GPR, %struct.GPR* %9319, i32 0, i32 33
  %9321 = getelementptr inbounds %struct.Reg, %struct.Reg* %9320, i32 0, i32 0
  %PC.i1315 = bitcast %union.anon* %9321 to i64*
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9323 = getelementptr inbounds %struct.GPR, %struct.GPR* %9322, i32 0, i32 9
  %9324 = getelementptr inbounds %struct.Reg, %struct.Reg* %9323, i32 0, i32 0
  %RSI.i1316 = bitcast %union.anon* %9324 to i64*
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9326 = getelementptr inbounds %struct.GPR, %struct.GPR* %9325, i32 0, i32 15
  %9327 = getelementptr inbounds %struct.Reg, %struct.Reg* %9326, i32 0, i32 0
  %RBP.i1317 = bitcast %union.anon* %9327 to i64*
  %9328 = load i64, i64* %RBP.i1317
  %9329 = sub i64 %9328, 40
  %9330 = load i64, i64* %PC.i1315
  %9331 = add i64 %9330, 4
  store i64 %9331, i64* %PC.i1315
  %9332 = inttoptr i64 %9329 to i32*
  %9333 = load i32, i32* %9332
  %9334 = sext i32 %9333 to i64
  store i64 %9334, i64* %RSI.i1316, align 8
  store %struct.Memory* %loadMem_4b0d82, %struct.Memory** %MEMORY
  %loadMem_4b0d86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9336 = getelementptr inbounds %struct.GPR, %struct.GPR* %9335, i32 0, i32 33
  %9337 = getelementptr inbounds %struct.Reg, %struct.Reg* %9336, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %9337 to i64*
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9339 = getelementptr inbounds %struct.GPR, %struct.GPR* %9338, i32 0, i32 1
  %9340 = getelementptr inbounds %struct.Reg, %struct.Reg* %9339, i32 0, i32 0
  %RAX.i1312 = bitcast %union.anon* %9340 to i64*
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 7
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %RDX.i1313 = bitcast %union.anon* %9343 to i64*
  %9344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9345 = getelementptr inbounds %struct.GPR, %struct.GPR* %9344, i32 0, i32 9
  %9346 = getelementptr inbounds %struct.Reg, %struct.Reg* %9345, i32 0, i32 0
  %RSI.i1314 = bitcast %union.anon* %9346 to i64*
  %9347 = load i64, i64* %RDX.i1313
  %9348 = load i64, i64* %RSI.i1314
  %9349 = mul i64 %9348, 4
  %9350 = add i64 %9349, %9347
  %9351 = load i64, i64* %PC.i1311
  %9352 = add i64 %9351, 3
  store i64 %9352, i64* %PC.i1311
  %9353 = inttoptr i64 %9350 to i32*
  %9354 = load i32, i32* %9353
  %9355 = zext i32 %9354 to i64
  store i64 %9355, i64* %RAX.i1312, align 8
  store %struct.Memory* %loadMem_4b0d86, %struct.Memory** %MEMORY
  %loadMem_4b0d89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9357 = getelementptr inbounds %struct.GPR, %struct.GPR* %9356, i32 0, i32 33
  %9358 = getelementptr inbounds %struct.Reg, %struct.Reg* %9357, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %9358 to i64*
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9360 = getelementptr inbounds %struct.GPR, %struct.GPR* %9359, i32 0, i32 7
  %9361 = getelementptr inbounds %struct.Reg, %struct.Reg* %9360, i32 0, i32 0
  %RDX.i1310 = bitcast %union.anon* %9361 to i64*
  %9362 = load i64, i64* %PC.i1309
  %9363 = add i64 %9362, 8
  store i64 %9363, i64* %PC.i1309
  %9364 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %9364, i64* %RDX.i1310, align 8
  store %struct.Memory* %loadMem_4b0d89, %struct.Memory** %MEMORY
  %loadMem_4b0d91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9366 = getelementptr inbounds %struct.GPR, %struct.GPR* %9365, i32 0, i32 33
  %9367 = getelementptr inbounds %struct.Reg, %struct.Reg* %9366, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %9367 to i64*
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 7
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %RDX.i1308 = bitcast %union.anon* %9370 to i64*
  %9371 = load i64, i64* %RDX.i1308
  %9372 = add i64 %9371, 8
  %9373 = load i64, i64* %PC.i1307
  %9374 = add i64 %9373, 4
  store i64 %9374, i64* %PC.i1307
  %9375 = inttoptr i64 %9372 to i64*
  %9376 = load i64, i64* %9375
  store i64 %9376, i64* %RDX.i1308, align 8
  store %struct.Memory* %loadMem_4b0d91, %struct.Memory** %MEMORY
  %loadMem_4b0d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9378 = getelementptr inbounds %struct.GPR, %struct.GPR* %9377, i32 0, i32 33
  %9379 = getelementptr inbounds %struct.Reg, %struct.Reg* %9378, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %9379 to i64*
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9381 = getelementptr inbounds %struct.GPR, %struct.GPR* %9380, i32 0, i32 9
  %9382 = getelementptr inbounds %struct.Reg, %struct.Reg* %9381, i32 0, i32 0
  %RSI.i1305 = bitcast %union.anon* %9382 to i64*
  %9383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9384 = getelementptr inbounds %struct.GPR, %struct.GPR* %9383, i32 0, i32 15
  %9385 = getelementptr inbounds %struct.Reg, %struct.Reg* %9384, i32 0, i32 0
  %RBP.i1306 = bitcast %union.anon* %9385 to i64*
  %9386 = load i64, i64* %RBP.i1306
  %9387 = sub i64 %9386, 8
  %9388 = load i64, i64* %PC.i1304
  %9389 = add i64 %9388, 4
  store i64 %9389, i64* %PC.i1304
  %9390 = inttoptr i64 %9387 to i32*
  %9391 = load i32, i32* %9390
  %9392 = sext i32 %9391 to i64
  store i64 %9392, i64* %RSI.i1305, align 8
  store %struct.Memory* %loadMem_4b0d95, %struct.Memory** %MEMORY
  %loadMem_4b0d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 33
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %9395 to i64*
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9397 = getelementptr inbounds %struct.GPR, %struct.GPR* %9396, i32 0, i32 7
  %9398 = getelementptr inbounds %struct.Reg, %struct.Reg* %9397, i32 0, i32 0
  %RDX.i1302 = bitcast %union.anon* %9398 to i64*
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9400 = getelementptr inbounds %struct.GPR, %struct.GPR* %9399, i32 0, i32 9
  %9401 = getelementptr inbounds %struct.Reg, %struct.Reg* %9400, i32 0, i32 0
  %RSI.i1303 = bitcast %union.anon* %9401 to i64*
  %9402 = load i64, i64* %RDX.i1302
  %9403 = load i64, i64* %RSI.i1303
  %9404 = mul i64 %9403, 8
  %9405 = add i64 %9404, %9402
  %9406 = load i64, i64* %PC.i1301
  %9407 = add i64 %9406, 4
  store i64 %9407, i64* %PC.i1301
  %9408 = inttoptr i64 %9405 to i64*
  %9409 = load i64, i64* %9408
  store i64 %9409, i64* %RDX.i1302, align 8
  store %struct.Memory* %loadMem_4b0d99, %struct.Memory** %MEMORY
  %loadMem_4b0d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9411 = getelementptr inbounds %struct.GPR, %struct.GPR* %9410, i32 0, i32 33
  %9412 = getelementptr inbounds %struct.Reg, %struct.Reg* %9411, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %9412 to i64*
  %9413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9414 = getelementptr inbounds %struct.GPR, %struct.GPR* %9413, i32 0, i32 9
  %9415 = getelementptr inbounds %struct.Reg, %struct.Reg* %9414, i32 0, i32 0
  %RSI.i1299 = bitcast %union.anon* %9415 to i64*
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9417 = getelementptr inbounds %struct.GPR, %struct.GPR* %9416, i32 0, i32 15
  %9418 = getelementptr inbounds %struct.Reg, %struct.Reg* %9417, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %9418 to i64*
  %9419 = load i64, i64* %RBP.i1300
  %9420 = sub i64 %9419, 12
  %9421 = load i64, i64* %PC.i1298
  %9422 = add i64 %9421, 4
  store i64 %9422, i64* %PC.i1298
  %9423 = inttoptr i64 %9420 to i32*
  %9424 = load i32, i32* %9423
  %9425 = sext i32 %9424 to i64
  store i64 %9425, i64* %RSI.i1299, align 8
  store %struct.Memory* %loadMem_4b0d9d, %struct.Memory** %MEMORY
  %loadMem_4b0da1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9427 = getelementptr inbounds %struct.GPR, %struct.GPR* %9426, i32 0, i32 33
  %9428 = getelementptr inbounds %struct.Reg, %struct.Reg* %9427, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %9428 to i64*
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9430 = getelementptr inbounds %struct.GPR, %struct.GPR* %9429, i32 0, i32 7
  %9431 = getelementptr inbounds %struct.Reg, %struct.Reg* %9430, i32 0, i32 0
  %RDX.i1296 = bitcast %union.anon* %9431 to i64*
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 9
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %RSI.i1297 = bitcast %union.anon* %9434 to i64*
  %9435 = load i64, i64* %RDX.i1296
  %9436 = load i64, i64* %RSI.i1297
  %9437 = mul i64 %9436, 8
  %9438 = add i64 %9437, %9435
  %9439 = load i64, i64* %PC.i1295
  %9440 = add i64 %9439, 4
  store i64 %9440, i64* %PC.i1295
  %9441 = inttoptr i64 %9438 to i64*
  %9442 = load i64, i64* %9441
  store i64 %9442, i64* %RDX.i1296, align 8
  store %struct.Memory* %loadMem_4b0da1, %struct.Memory** %MEMORY
  %loadMem_4b0da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9444 = getelementptr inbounds %struct.GPR, %struct.GPR* %9443, i32 0, i32 33
  %9445 = getelementptr inbounds %struct.Reg, %struct.Reg* %9444, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %9445 to i64*
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9447 = getelementptr inbounds %struct.GPR, %struct.GPR* %9446, i32 0, i32 9
  %9448 = getelementptr inbounds %struct.Reg, %struct.Reg* %9447, i32 0, i32 0
  %RSI.i1293 = bitcast %union.anon* %9448 to i64*
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9450 = getelementptr inbounds %struct.GPR, %struct.GPR* %9449, i32 0, i32 15
  %9451 = getelementptr inbounds %struct.Reg, %struct.Reg* %9450, i32 0, i32 0
  %RBP.i1294 = bitcast %union.anon* %9451 to i64*
  %9452 = load i64, i64* %RBP.i1294
  %9453 = sub i64 %9452, 40
  %9454 = load i64, i64* %PC.i1292
  %9455 = add i64 %9454, 4
  store i64 %9455, i64* %PC.i1292
  %9456 = inttoptr i64 %9453 to i32*
  %9457 = load i32, i32* %9456
  %9458 = sext i32 %9457 to i64
  store i64 %9458, i64* %RSI.i1293, align 8
  store %struct.Memory* %loadMem_4b0da5, %struct.Memory** %MEMORY
  %loadMem_4b0da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9460 = getelementptr inbounds %struct.GPR, %struct.GPR* %9459, i32 0, i32 33
  %9461 = getelementptr inbounds %struct.Reg, %struct.Reg* %9460, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %9461 to i64*
  %9462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9463 = getelementptr inbounds %struct.GPR, %struct.GPR* %9462, i32 0, i32 1
  %9464 = getelementptr inbounds %struct.Reg, %struct.Reg* %9463, i32 0, i32 0
  %EAX.i1289 = bitcast %union.anon* %9464 to i32*
  %9465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9466 = getelementptr inbounds %struct.GPR, %struct.GPR* %9465, i32 0, i32 7
  %9467 = getelementptr inbounds %struct.Reg, %struct.Reg* %9466, i32 0, i32 0
  %RDX.i1290 = bitcast %union.anon* %9467 to i64*
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9469 = getelementptr inbounds %struct.GPR, %struct.GPR* %9468, i32 0, i32 9
  %9470 = getelementptr inbounds %struct.Reg, %struct.Reg* %9469, i32 0, i32 0
  %RSI.i1291 = bitcast %union.anon* %9470 to i64*
  %9471 = load i64, i64* %RDX.i1290
  %9472 = load i64, i64* %RSI.i1291
  %9473 = mul i64 %9472, 4
  %9474 = add i64 %9473, %9471
  %9475 = load i32, i32* %EAX.i1289
  %9476 = zext i32 %9475 to i64
  %9477 = load i64, i64* %PC.i1288
  %9478 = add i64 %9477, 3
  store i64 %9478, i64* %PC.i1288
  %9479 = inttoptr i64 %9474 to i32*
  store i32 %9475, i32* %9479
  store %struct.Memory* %loadMem_4b0da9, %struct.Memory** %MEMORY
  %loadMem_4b0dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9481 = getelementptr inbounds %struct.GPR, %struct.GPR* %9480, i32 0, i32 33
  %9482 = getelementptr inbounds %struct.Reg, %struct.Reg* %9481, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %9482 to i64*
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9484 = getelementptr inbounds %struct.GPR, %struct.GPR* %9483, i32 0, i32 7
  %9485 = getelementptr inbounds %struct.Reg, %struct.Reg* %9484, i32 0, i32 0
  %RDX.i1286 = bitcast %union.anon* %9485 to i64*
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9487 = getelementptr inbounds %struct.GPR, %struct.GPR* %9486, i32 0, i32 15
  %9488 = getelementptr inbounds %struct.Reg, %struct.Reg* %9487, i32 0, i32 0
  %RBP.i1287 = bitcast %union.anon* %9488 to i64*
  %9489 = load i64, i64* %RBP.i1287
  %9490 = sub i64 %9489, 8
  %9491 = load i64, i64* %PC.i1285
  %9492 = add i64 %9491, 4
  store i64 %9492, i64* %PC.i1285
  %9493 = inttoptr i64 %9490 to i32*
  %9494 = load i32, i32* %9493
  %9495 = sext i32 %9494 to i64
  store i64 %9495, i64* %RDX.i1286, align 8
  store %struct.Memory* %loadMem_4b0dac, %struct.Memory** %MEMORY
  %loadMem_4b0db0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9497 = getelementptr inbounds %struct.GPR, %struct.GPR* %9496, i32 0, i32 33
  %9498 = getelementptr inbounds %struct.Reg, %struct.Reg* %9497, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %9498 to i64*
  %9499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9500 = getelementptr inbounds %struct.GPR, %struct.GPR* %9499, i32 0, i32 7
  %9501 = getelementptr inbounds %struct.Reg, %struct.Reg* %9500, i32 0, i32 0
  %RDX.i1284 = bitcast %union.anon* %9501 to i64*
  %9502 = load i64, i64* %RDX.i1284
  %9503 = load i64, i64* %PC.i1283
  %9504 = add i64 %9503, 7
  store i64 %9504, i64* %PC.i1283
  %9505 = sext i64 %9502 to i128
  %9506 = and i128 %9505, -18446744073709551616
  %9507 = zext i64 %9502 to i128
  %9508 = or i128 %9506, %9507
  %9509 = mul i128 180, %9508
  %9510 = trunc i128 %9509 to i64
  store i64 %9510, i64* %RDX.i1284, align 8
  %9511 = sext i64 %9510 to i128
  %9512 = icmp ne i128 %9511, %9509
  %9513 = zext i1 %9512 to i8
  %9514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9513, i8* %9514, align 1
  %9515 = trunc i128 %9509 to i32
  %9516 = and i32 %9515, 255
  %9517 = call i32 @llvm.ctpop.i32(i32 %9516)
  %9518 = trunc i32 %9517 to i8
  %9519 = and i8 %9518, 1
  %9520 = xor i8 %9519, 1
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9520, i8* %9521, align 1
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9522, align 1
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9523, align 1
  %9524 = lshr i64 %9510, 63
  %9525 = trunc i64 %9524 to i8
  %9526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9525, i8* %9526, align 1
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9513, i8* %9527, align 1
  store %struct.Memory* %loadMem_4b0db0, %struct.Memory** %MEMORY
  %loadMem_4b0db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9529 = getelementptr inbounds %struct.GPR, %struct.GPR* %9528, i32 0, i32 33
  %9530 = getelementptr inbounds %struct.Reg, %struct.Reg* %9529, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %9530 to i64*
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9532 = getelementptr inbounds %struct.GPR, %struct.GPR* %9531, i32 0, i32 5
  %9533 = getelementptr inbounds %struct.Reg, %struct.Reg* %9532, i32 0, i32 0
  %RCX.i1281 = bitcast %union.anon* %9533 to i64*
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9535 = getelementptr inbounds %struct.GPR, %struct.GPR* %9534, i32 0, i32 7
  %9536 = getelementptr inbounds %struct.Reg, %struct.Reg* %9535, i32 0, i32 0
  %RDX.i1282 = bitcast %union.anon* %9536 to i64*
  %9537 = load i64, i64* %RCX.i1281
  %9538 = load i64, i64* %RDX.i1282
  %9539 = load i64, i64* %PC.i1280
  %9540 = add i64 %9539, 3
  store i64 %9540, i64* %PC.i1280
  %9541 = add i64 %9538, %9537
  store i64 %9541, i64* %RCX.i1281, align 8
  %9542 = icmp ult i64 %9541, %9537
  %9543 = icmp ult i64 %9541, %9538
  %9544 = or i1 %9542, %9543
  %9545 = zext i1 %9544 to i8
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9545, i8* %9546, align 1
  %9547 = trunc i64 %9541 to i32
  %9548 = and i32 %9547, 255
  %9549 = call i32 @llvm.ctpop.i32(i32 %9548)
  %9550 = trunc i32 %9549 to i8
  %9551 = and i8 %9550, 1
  %9552 = xor i8 %9551, 1
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9552, i8* %9553, align 1
  %9554 = xor i64 %9538, %9537
  %9555 = xor i64 %9554, %9541
  %9556 = lshr i64 %9555, 4
  %9557 = trunc i64 %9556 to i8
  %9558 = and i8 %9557, 1
  %9559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9558, i8* %9559, align 1
  %9560 = icmp eq i64 %9541, 0
  %9561 = zext i1 %9560 to i8
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9561, i8* %9562, align 1
  %9563 = lshr i64 %9541, 63
  %9564 = trunc i64 %9563 to i8
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9564, i8* %9565, align 1
  %9566 = lshr i64 %9537, 63
  %9567 = lshr i64 %9538, 63
  %9568 = xor i64 %9563, %9566
  %9569 = xor i64 %9563, %9567
  %9570 = add i64 %9568, %9569
  %9571 = icmp eq i64 %9570, 2
  %9572 = zext i1 %9571 to i8
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9572, i8* %9573, align 1
  store %struct.Memory* %loadMem_4b0db7, %struct.Memory** %MEMORY
  %loadMem_4b0dba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9575 = getelementptr inbounds %struct.GPR, %struct.GPR* %9574, i32 0, i32 33
  %9576 = getelementptr inbounds %struct.Reg, %struct.Reg* %9575, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %9576 to i64*
  %9577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9578 = getelementptr inbounds %struct.GPR, %struct.GPR* %9577, i32 0, i32 7
  %9579 = getelementptr inbounds %struct.Reg, %struct.Reg* %9578, i32 0, i32 0
  %RDX.i1278 = bitcast %union.anon* %9579 to i64*
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9581 = getelementptr inbounds %struct.GPR, %struct.GPR* %9580, i32 0, i32 15
  %9582 = getelementptr inbounds %struct.Reg, %struct.Reg* %9581, i32 0, i32 0
  %RBP.i1279 = bitcast %union.anon* %9582 to i64*
  %9583 = load i64, i64* %RBP.i1279
  %9584 = sub i64 %9583, 12
  %9585 = load i64, i64* %PC.i1277
  %9586 = add i64 %9585, 4
  store i64 %9586, i64* %PC.i1277
  %9587 = inttoptr i64 %9584 to i32*
  %9588 = load i32, i32* %9587
  %9589 = sext i32 %9588 to i64
  store i64 %9589, i64* %RDX.i1278, align 8
  store %struct.Memory* %loadMem_4b0dba, %struct.Memory** %MEMORY
  %loadMem_4b0dbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9591 = getelementptr inbounds %struct.GPR, %struct.GPR* %9590, i32 0, i32 33
  %9592 = getelementptr inbounds %struct.Reg, %struct.Reg* %9591, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %9592 to i64*
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9594 = getelementptr inbounds %struct.GPR, %struct.GPR* %9593, i32 0, i32 7
  %9595 = getelementptr inbounds %struct.Reg, %struct.Reg* %9594, i32 0, i32 0
  %RDX.i1276 = bitcast %union.anon* %9595 to i64*
  %9596 = load i64, i64* %RDX.i1276
  %9597 = load i64, i64* %PC.i1275
  %9598 = add i64 %9597, 4
  store i64 %9598, i64* %PC.i1275
  %9599 = sext i64 %9596 to i128
  %9600 = and i128 %9599, -18446744073709551616
  %9601 = zext i64 %9596 to i128
  %9602 = or i128 %9600, %9601
  %9603 = mul i128 12, %9602
  %9604 = trunc i128 %9603 to i64
  store i64 %9604, i64* %RDX.i1276, align 8
  %9605 = sext i64 %9604 to i128
  %9606 = icmp ne i128 %9605, %9603
  %9607 = zext i1 %9606 to i8
  %9608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9607, i8* %9608, align 1
  %9609 = trunc i128 %9603 to i32
  %9610 = and i32 %9609, 255
  %9611 = call i32 @llvm.ctpop.i32(i32 %9610)
  %9612 = trunc i32 %9611 to i8
  %9613 = and i8 %9612, 1
  %9614 = xor i8 %9613, 1
  %9615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9614, i8* %9615, align 1
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9616, align 1
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9617, align 1
  %9618 = lshr i64 %9604, 63
  %9619 = trunc i64 %9618 to i8
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9619, i8* %9620, align 1
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9607, i8* %9621, align 1
  store %struct.Memory* %loadMem_4b0dbe, %struct.Memory** %MEMORY
  %loadMem_4b0dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9623 = getelementptr inbounds %struct.GPR, %struct.GPR* %9622, i32 0, i32 33
  %9624 = getelementptr inbounds %struct.Reg, %struct.Reg* %9623, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %9624 to i64*
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9626 = getelementptr inbounds %struct.GPR, %struct.GPR* %9625, i32 0, i32 5
  %9627 = getelementptr inbounds %struct.Reg, %struct.Reg* %9626, i32 0, i32 0
  %RCX.i1273 = bitcast %union.anon* %9627 to i64*
  %9628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9629 = getelementptr inbounds %struct.GPR, %struct.GPR* %9628, i32 0, i32 7
  %9630 = getelementptr inbounds %struct.Reg, %struct.Reg* %9629, i32 0, i32 0
  %RDX.i1274 = bitcast %union.anon* %9630 to i64*
  %9631 = load i64, i64* %RCX.i1273
  %9632 = load i64, i64* %RDX.i1274
  %9633 = load i64, i64* %PC.i1272
  %9634 = add i64 %9633, 3
  store i64 %9634, i64* %PC.i1272
  %9635 = add i64 %9632, %9631
  store i64 %9635, i64* %RCX.i1273, align 8
  %9636 = icmp ult i64 %9635, %9631
  %9637 = icmp ult i64 %9635, %9632
  %9638 = or i1 %9636, %9637
  %9639 = zext i1 %9638 to i8
  %9640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9639, i8* %9640, align 1
  %9641 = trunc i64 %9635 to i32
  %9642 = and i32 %9641, 255
  %9643 = call i32 @llvm.ctpop.i32(i32 %9642)
  %9644 = trunc i32 %9643 to i8
  %9645 = and i8 %9644, 1
  %9646 = xor i8 %9645, 1
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9646, i8* %9647, align 1
  %9648 = xor i64 %9632, %9631
  %9649 = xor i64 %9648, %9635
  %9650 = lshr i64 %9649, 4
  %9651 = trunc i64 %9650 to i8
  %9652 = and i8 %9651, 1
  %9653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9652, i8* %9653, align 1
  %9654 = icmp eq i64 %9635, 0
  %9655 = zext i1 %9654 to i8
  %9656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9655, i8* %9656, align 1
  %9657 = lshr i64 %9635, 63
  %9658 = trunc i64 %9657 to i8
  %9659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9658, i8* %9659, align 1
  %9660 = lshr i64 %9631, 63
  %9661 = lshr i64 %9632, 63
  %9662 = xor i64 %9657, %9660
  %9663 = xor i64 %9657, %9661
  %9664 = add i64 %9662, %9663
  %9665 = icmp eq i64 %9664, 2
  %9666 = zext i1 %9665 to i8
  %9667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9666, i8* %9667, align 1
  store %struct.Memory* %loadMem_4b0dc2, %struct.Memory** %MEMORY
  %loadMem_4b0dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9669 = getelementptr inbounds %struct.GPR, %struct.GPR* %9668, i32 0, i32 33
  %9670 = getelementptr inbounds %struct.Reg, %struct.Reg* %9669, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %9670 to i64*
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9672 = getelementptr inbounds %struct.GPR, %struct.GPR* %9671, i32 0, i32 7
  %9673 = getelementptr inbounds %struct.Reg, %struct.Reg* %9672, i32 0, i32 0
  %RDX.i1270 = bitcast %union.anon* %9673 to i64*
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9675 = getelementptr inbounds %struct.GPR, %struct.GPR* %9674, i32 0, i32 15
  %9676 = getelementptr inbounds %struct.Reg, %struct.Reg* %9675, i32 0, i32 0
  %RBP.i1271 = bitcast %union.anon* %9676 to i64*
  %9677 = load i64, i64* %RBP.i1271
  %9678 = sub i64 %9677, 40
  %9679 = load i64, i64* %PC.i1269
  %9680 = add i64 %9679, 4
  store i64 %9680, i64* %PC.i1269
  %9681 = inttoptr i64 %9678 to i32*
  %9682 = load i32, i32* %9681
  %9683 = sext i32 %9682 to i64
  store i64 %9683, i64* %RDX.i1270, align 8
  store %struct.Memory* %loadMem_4b0dc5, %struct.Memory** %MEMORY
  %loadMem_4b0dc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9685 = getelementptr inbounds %struct.GPR, %struct.GPR* %9684, i32 0, i32 33
  %9686 = getelementptr inbounds %struct.Reg, %struct.Reg* %9685, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %9686 to i64*
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9688 = getelementptr inbounds %struct.GPR, %struct.GPR* %9687, i32 0, i32 1
  %9689 = getelementptr inbounds %struct.Reg, %struct.Reg* %9688, i32 0, i32 0
  %RAX.i1266 = bitcast %union.anon* %9689 to i64*
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9691 = getelementptr inbounds %struct.GPR, %struct.GPR* %9690, i32 0, i32 5
  %9692 = getelementptr inbounds %struct.Reg, %struct.Reg* %9691, i32 0, i32 0
  %RCX.i1267 = bitcast %union.anon* %9692 to i64*
  %9693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9694 = getelementptr inbounds %struct.GPR, %struct.GPR* %9693, i32 0, i32 7
  %9695 = getelementptr inbounds %struct.Reg, %struct.Reg* %9694, i32 0, i32 0
  %RDX.i1268 = bitcast %union.anon* %9695 to i64*
  %9696 = load i64, i64* %RCX.i1267
  %9697 = load i64, i64* %RDX.i1268
  %9698 = mul i64 %9697, 4
  %9699 = add i64 %9698, %9696
  %9700 = load i64, i64* %PC.i1265
  %9701 = add i64 %9700, 3
  store i64 %9701, i64* %PC.i1265
  %9702 = inttoptr i64 %9699 to i32*
  %9703 = load i32, i32* %9702
  %9704 = zext i32 %9703 to i64
  store i64 %9704, i64* %RAX.i1266, align 8
  store %struct.Memory* %loadMem_4b0dc9, %struct.Memory** %MEMORY
  %loadMem_4b0dcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9706 = getelementptr inbounds %struct.GPR, %struct.GPR* %9705, i32 0, i32 33
  %9707 = getelementptr inbounds %struct.Reg, %struct.Reg* %9706, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %9707 to i64*
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9709 = getelementptr inbounds %struct.GPR, %struct.GPR* %9708, i32 0, i32 5
  %9710 = getelementptr inbounds %struct.Reg, %struct.Reg* %9709, i32 0, i32 0
  %RCX.i1264 = bitcast %union.anon* %9710 to i64*
  %9711 = load i64, i64* %PC.i1263
  %9712 = add i64 %9711, 8
  store i64 %9712, i64* %PC.i1263
  %9713 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %9713, i64* %RCX.i1264, align 8
  store %struct.Memory* %loadMem_4b0dcc, %struct.Memory** %MEMORY
  %loadMem_4b0dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 33
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %9716 to i64*
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9718 = getelementptr inbounds %struct.GPR, %struct.GPR* %9717, i32 0, i32 5
  %9719 = getelementptr inbounds %struct.Reg, %struct.Reg* %9718, i32 0, i32 0
  %RCX.i1262 = bitcast %union.anon* %9719 to i64*
  %9720 = load i64, i64* %RCX.i1262
  %9721 = load i64, i64* %PC.i1261
  %9722 = add i64 %9721, 3
  store i64 %9722, i64* %PC.i1261
  %9723 = inttoptr i64 %9720 to i64*
  %9724 = load i64, i64* %9723
  store i64 %9724, i64* %RCX.i1262, align 8
  store %struct.Memory* %loadMem_4b0dd4, %struct.Memory** %MEMORY
  %loadMem_4b0dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9726 = getelementptr inbounds %struct.GPR, %struct.GPR* %9725, i32 0, i32 33
  %9727 = getelementptr inbounds %struct.Reg, %struct.Reg* %9726, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %9727 to i64*
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 7
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %RDX.i1259 = bitcast %union.anon* %9730 to i64*
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9732 = getelementptr inbounds %struct.GPR, %struct.GPR* %9731, i32 0, i32 15
  %9733 = getelementptr inbounds %struct.Reg, %struct.Reg* %9732, i32 0, i32 0
  %RBP.i1260 = bitcast %union.anon* %9733 to i64*
  %9734 = load i64, i64* %RBP.i1260
  %9735 = sub i64 %9734, 8
  %9736 = load i64, i64* %PC.i1258
  %9737 = add i64 %9736, 4
  store i64 %9737, i64* %PC.i1258
  %9738 = inttoptr i64 %9735 to i32*
  %9739 = load i32, i32* %9738
  %9740 = sext i32 %9739 to i64
  store i64 %9740, i64* %RDX.i1259, align 8
  store %struct.Memory* %loadMem_4b0dd7, %struct.Memory** %MEMORY
  %loadMem_4b0ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9742 = getelementptr inbounds %struct.GPR, %struct.GPR* %9741, i32 0, i32 33
  %9743 = getelementptr inbounds %struct.Reg, %struct.Reg* %9742, i32 0, i32 0
  %PC.i1255 = bitcast %union.anon* %9743 to i64*
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 5
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %RCX.i1256 = bitcast %union.anon* %9746 to i64*
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9748 = getelementptr inbounds %struct.GPR, %struct.GPR* %9747, i32 0, i32 7
  %9749 = getelementptr inbounds %struct.Reg, %struct.Reg* %9748, i32 0, i32 0
  %RDX.i1257 = bitcast %union.anon* %9749 to i64*
  %9750 = load i64, i64* %RCX.i1256
  %9751 = load i64, i64* %RDX.i1257
  %9752 = mul i64 %9751, 8
  %9753 = add i64 %9752, %9750
  %9754 = load i64, i64* %PC.i1255
  %9755 = add i64 %9754, 4
  store i64 %9755, i64* %PC.i1255
  %9756 = inttoptr i64 %9753 to i64*
  %9757 = load i64, i64* %9756
  store i64 %9757, i64* %RCX.i1256, align 8
  store %struct.Memory* %loadMem_4b0ddb, %struct.Memory** %MEMORY
  %loadMem_4b0ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9759 = getelementptr inbounds %struct.GPR, %struct.GPR* %9758, i32 0, i32 33
  %9760 = getelementptr inbounds %struct.Reg, %struct.Reg* %9759, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %9760 to i64*
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 7
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %RDX.i1253 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 15
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RBP.i1254 = bitcast %union.anon* %9766 to i64*
  %9767 = load i64, i64* %RBP.i1254
  %9768 = sub i64 %9767, 12
  %9769 = load i64, i64* %PC.i1252
  %9770 = add i64 %9769, 4
  store i64 %9770, i64* %PC.i1252
  %9771 = inttoptr i64 %9768 to i32*
  %9772 = load i32, i32* %9771
  %9773 = sext i32 %9772 to i64
  store i64 %9773, i64* %RDX.i1253, align 8
  store %struct.Memory* %loadMem_4b0ddf, %struct.Memory** %MEMORY
  %loadMem_4b0de3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 33
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %9776 to i64*
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 5
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %RCX.i1250 = bitcast %union.anon* %9779 to i64*
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 7
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %RDX.i1251 = bitcast %union.anon* %9782 to i64*
  %9783 = load i64, i64* %RCX.i1250
  %9784 = load i64, i64* %RDX.i1251
  %9785 = mul i64 %9784, 8
  %9786 = add i64 %9785, %9783
  %9787 = load i64, i64* %PC.i1249
  %9788 = add i64 %9787, 4
  store i64 %9788, i64* %PC.i1249
  %9789 = inttoptr i64 %9786 to i64*
  %9790 = load i64, i64* %9789
  store i64 %9790, i64* %RCX.i1250, align 8
  store %struct.Memory* %loadMem_4b0de3, %struct.Memory** %MEMORY
  %loadMem_4b0de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9792 = getelementptr inbounds %struct.GPR, %struct.GPR* %9791, i32 0, i32 33
  %9793 = getelementptr inbounds %struct.Reg, %struct.Reg* %9792, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %9793 to i64*
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9795 = getelementptr inbounds %struct.GPR, %struct.GPR* %9794, i32 0, i32 7
  %9796 = getelementptr inbounds %struct.Reg, %struct.Reg* %9795, i32 0, i32 0
  %RDX.i1247 = bitcast %union.anon* %9796 to i64*
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9798 = getelementptr inbounds %struct.GPR, %struct.GPR* %9797, i32 0, i32 15
  %9799 = getelementptr inbounds %struct.Reg, %struct.Reg* %9798, i32 0, i32 0
  %RBP.i1248 = bitcast %union.anon* %9799 to i64*
  %9800 = load i64, i64* %RBP.i1248
  %9801 = sub i64 %9800, 40
  %9802 = load i64, i64* %PC.i1246
  %9803 = add i64 %9802, 4
  store i64 %9803, i64* %PC.i1246
  %9804 = inttoptr i64 %9801 to i32*
  %9805 = load i32, i32* %9804
  %9806 = sext i32 %9805 to i64
  store i64 %9806, i64* %RDX.i1247, align 8
  store %struct.Memory* %loadMem_4b0de7, %struct.Memory** %MEMORY
  %loadMem_4b0deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9808 = getelementptr inbounds %struct.GPR, %struct.GPR* %9807, i32 0, i32 33
  %9809 = getelementptr inbounds %struct.Reg, %struct.Reg* %9808, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %9809 to i64*
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9811 = getelementptr inbounds %struct.GPR, %struct.GPR* %9810, i32 0, i32 1
  %9812 = getelementptr inbounds %struct.Reg, %struct.Reg* %9811, i32 0, i32 0
  %EAX.i1243 = bitcast %union.anon* %9812 to i32*
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9814 = getelementptr inbounds %struct.GPR, %struct.GPR* %9813, i32 0, i32 5
  %9815 = getelementptr inbounds %struct.Reg, %struct.Reg* %9814, i32 0, i32 0
  %RCX.i1244 = bitcast %union.anon* %9815 to i64*
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9817 = getelementptr inbounds %struct.GPR, %struct.GPR* %9816, i32 0, i32 7
  %9818 = getelementptr inbounds %struct.Reg, %struct.Reg* %9817, i32 0, i32 0
  %RDX.i1245 = bitcast %union.anon* %9818 to i64*
  %9819 = load i64, i64* %RCX.i1244
  %9820 = load i64, i64* %RDX.i1245
  %9821 = mul i64 %9820, 4
  %9822 = add i64 %9821, %9819
  %9823 = load i32, i32* %EAX.i1243
  %9824 = zext i32 %9823 to i64
  %9825 = load i64, i64* %PC.i1242
  %9826 = add i64 %9825, 3
  store i64 %9826, i64* %PC.i1242
  %9827 = inttoptr i64 %9822 to i32*
  store i32 %9823, i32* %9827
  store %struct.Memory* %loadMem_4b0deb, %struct.Memory** %MEMORY
  %loadMem_4b0dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9829 = getelementptr inbounds %struct.GPR, %struct.GPR* %9828, i32 0, i32 33
  %9830 = getelementptr inbounds %struct.Reg, %struct.Reg* %9829, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %9830 to i64*
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9832 = getelementptr inbounds %struct.GPR, %struct.GPR* %9831, i32 0, i32 1
  %9833 = getelementptr inbounds %struct.Reg, %struct.Reg* %9832, i32 0, i32 0
  %RAX.i1240 = bitcast %union.anon* %9833 to i64*
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9835 = getelementptr inbounds %struct.GPR, %struct.GPR* %9834, i32 0, i32 15
  %9836 = getelementptr inbounds %struct.Reg, %struct.Reg* %9835, i32 0, i32 0
  %RBP.i1241 = bitcast %union.anon* %9836 to i64*
  %9837 = load i64, i64* %RBP.i1241
  %9838 = sub i64 %9837, 40
  %9839 = load i64, i64* %PC.i1239
  %9840 = add i64 %9839, 3
  store i64 %9840, i64* %PC.i1239
  %9841 = inttoptr i64 %9838 to i32*
  %9842 = load i32, i32* %9841
  %9843 = zext i32 %9842 to i64
  store i64 %9843, i64* %RAX.i1240, align 8
  store %struct.Memory* %loadMem_4b0dee, %struct.Memory** %MEMORY
  %loadMem_4b0df1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9845 = getelementptr inbounds %struct.GPR, %struct.GPR* %9844, i32 0, i32 33
  %9846 = getelementptr inbounds %struct.Reg, %struct.Reg* %9845, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %9846 to i64*
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9848 = getelementptr inbounds %struct.GPR, %struct.GPR* %9847, i32 0, i32 1
  %9849 = getelementptr inbounds %struct.Reg, %struct.Reg* %9848, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %9849 to i64*
  %9850 = load i64, i64* %RAX.i1238
  %9851 = load i64, i64* %PC.i1237
  %9852 = add i64 %9851, 3
  store i64 %9852, i64* %PC.i1237
  %9853 = trunc i64 %9850 to i32
  %9854 = add i32 1, %9853
  %9855 = zext i32 %9854 to i64
  store i64 %9855, i64* %RAX.i1238, align 8
  %9856 = icmp ult i32 %9854, %9853
  %9857 = icmp ult i32 %9854, 1
  %9858 = or i1 %9856, %9857
  %9859 = zext i1 %9858 to i8
  %9860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9859, i8* %9860, align 1
  %9861 = and i32 %9854, 255
  %9862 = call i32 @llvm.ctpop.i32(i32 %9861)
  %9863 = trunc i32 %9862 to i8
  %9864 = and i8 %9863, 1
  %9865 = xor i8 %9864, 1
  %9866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9865, i8* %9866, align 1
  %9867 = xor i64 1, %9850
  %9868 = trunc i64 %9867 to i32
  %9869 = xor i32 %9868, %9854
  %9870 = lshr i32 %9869, 4
  %9871 = trunc i32 %9870 to i8
  %9872 = and i8 %9871, 1
  %9873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9872, i8* %9873, align 1
  %9874 = icmp eq i32 %9854, 0
  %9875 = zext i1 %9874 to i8
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9875, i8* %9876, align 1
  %9877 = lshr i32 %9854, 31
  %9878 = trunc i32 %9877 to i8
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9878, i8* %9879, align 1
  %9880 = lshr i32 %9853, 31
  %9881 = xor i32 %9877, %9880
  %9882 = add i32 %9881, %9877
  %9883 = icmp eq i32 %9882, 2
  %9884 = zext i1 %9883 to i8
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9884, i8* %9885, align 1
  store %struct.Memory* %loadMem_4b0df1, %struct.Memory** %MEMORY
  %loadMem_4b0df4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9887 = getelementptr inbounds %struct.GPR, %struct.GPR* %9886, i32 0, i32 33
  %9888 = getelementptr inbounds %struct.Reg, %struct.Reg* %9887, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %9888 to i64*
  %9889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9890 = getelementptr inbounds %struct.GPR, %struct.GPR* %9889, i32 0, i32 1
  %9891 = getelementptr inbounds %struct.Reg, %struct.Reg* %9890, i32 0, i32 0
  %EAX.i1235 = bitcast %union.anon* %9891 to i32*
  %9892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9893 = getelementptr inbounds %struct.GPR, %struct.GPR* %9892, i32 0, i32 15
  %9894 = getelementptr inbounds %struct.Reg, %struct.Reg* %9893, i32 0, i32 0
  %RBP.i1236 = bitcast %union.anon* %9894 to i64*
  %9895 = load i64, i64* %RBP.i1236
  %9896 = sub i64 %9895, 40
  %9897 = load i32, i32* %EAX.i1235
  %9898 = zext i32 %9897 to i64
  %9899 = load i64, i64* %PC.i1234
  %9900 = add i64 %9899, 3
  store i64 %9900, i64* %PC.i1234
  %9901 = inttoptr i64 %9896 to i32*
  store i32 %9897, i32* %9901
  store %struct.Memory* %loadMem_4b0df4, %struct.Memory** %MEMORY
  %loadMem_4b0df7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9903 = getelementptr inbounds %struct.GPR, %struct.GPR* %9902, i32 0, i32 33
  %9904 = getelementptr inbounds %struct.Reg, %struct.Reg* %9903, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %9904 to i64*
  %9905 = load i64, i64* %PC.i1233
  %9906 = add i64 %9905, -222
  %9907 = load i64, i64* %PC.i1233
  %9908 = add i64 %9907, 5
  store i64 %9908, i64* %PC.i1233
  %9909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9906, i64* %9909, align 8
  store %struct.Memory* %loadMem_4b0df7, %struct.Memory** %MEMORY
  br label %block_.L_4b0d19

block_.L_4b0dfc:                                  ; preds = %block_.L_4b0d19
  %loadMem_4b0dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9911 = getelementptr inbounds %struct.GPR, %struct.GPR* %9910, i32 0, i32 33
  %9912 = getelementptr inbounds %struct.Reg, %struct.Reg* %9911, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %9912 to i64*
  %9913 = load i64, i64* %PC.i1232
  %9914 = add i64 %9913, 5
  %9915 = load i64, i64* %PC.i1232
  %9916 = add i64 %9915, 5
  store i64 %9916, i64* %PC.i1232
  %9917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9914, i64* %9917, align 8
  store %struct.Memory* %loadMem_4b0dfc, %struct.Memory** %MEMORY
  br label %block_.L_4b0e01

block_.L_4b0e01:                                  ; preds = %block_.L_4b0dfc
  %loadMem_4b0e01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9919 = getelementptr inbounds %struct.GPR, %struct.GPR* %9918, i32 0, i32 33
  %9920 = getelementptr inbounds %struct.Reg, %struct.Reg* %9919, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %9920 to i64*
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9922 = getelementptr inbounds %struct.GPR, %struct.GPR* %9921, i32 0, i32 1
  %9923 = getelementptr inbounds %struct.Reg, %struct.Reg* %9922, i32 0, i32 0
  %RAX.i1230 = bitcast %union.anon* %9923 to i64*
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9925 = getelementptr inbounds %struct.GPR, %struct.GPR* %9924, i32 0, i32 15
  %9926 = getelementptr inbounds %struct.Reg, %struct.Reg* %9925, i32 0, i32 0
  %RBP.i1231 = bitcast %union.anon* %9926 to i64*
  %9927 = load i64, i64* %RBP.i1231
  %9928 = sub i64 %9927, 12
  %9929 = load i64, i64* %PC.i1229
  %9930 = add i64 %9929, 3
  store i64 %9930, i64* %PC.i1229
  %9931 = inttoptr i64 %9928 to i32*
  %9932 = load i32, i32* %9931
  %9933 = zext i32 %9932 to i64
  store i64 %9933, i64* %RAX.i1230, align 8
  store %struct.Memory* %loadMem_4b0e01, %struct.Memory** %MEMORY
  %loadMem_4b0e04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9935 = getelementptr inbounds %struct.GPR, %struct.GPR* %9934, i32 0, i32 33
  %9936 = getelementptr inbounds %struct.Reg, %struct.Reg* %9935, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %9936 to i64*
  %9937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9938 = getelementptr inbounds %struct.GPR, %struct.GPR* %9937, i32 0, i32 1
  %9939 = getelementptr inbounds %struct.Reg, %struct.Reg* %9938, i32 0, i32 0
  %RAX.i1228 = bitcast %union.anon* %9939 to i64*
  %9940 = load i64, i64* %RAX.i1228
  %9941 = load i64, i64* %PC.i1227
  %9942 = add i64 %9941, 3
  store i64 %9942, i64* %PC.i1227
  %9943 = trunc i64 %9940 to i32
  %9944 = add i32 1, %9943
  %9945 = zext i32 %9944 to i64
  store i64 %9945, i64* %RAX.i1228, align 8
  %9946 = icmp ult i32 %9944, %9943
  %9947 = icmp ult i32 %9944, 1
  %9948 = or i1 %9946, %9947
  %9949 = zext i1 %9948 to i8
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9949, i8* %9950, align 1
  %9951 = and i32 %9944, 255
  %9952 = call i32 @llvm.ctpop.i32(i32 %9951)
  %9953 = trunc i32 %9952 to i8
  %9954 = and i8 %9953, 1
  %9955 = xor i8 %9954, 1
  %9956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9955, i8* %9956, align 1
  %9957 = xor i64 1, %9940
  %9958 = trunc i64 %9957 to i32
  %9959 = xor i32 %9958, %9944
  %9960 = lshr i32 %9959, 4
  %9961 = trunc i32 %9960 to i8
  %9962 = and i8 %9961, 1
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9962, i8* %9963, align 1
  %9964 = icmp eq i32 %9944, 0
  %9965 = zext i1 %9964 to i8
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9965, i8* %9966, align 1
  %9967 = lshr i32 %9944, 31
  %9968 = trunc i32 %9967 to i8
  %9969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9968, i8* %9969, align 1
  %9970 = lshr i32 %9943, 31
  %9971 = xor i32 %9967, %9970
  %9972 = add i32 %9971, %9967
  %9973 = icmp eq i32 %9972, 2
  %9974 = zext i1 %9973 to i8
  %9975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9974, i8* %9975, align 1
  store %struct.Memory* %loadMem_4b0e04, %struct.Memory** %MEMORY
  %loadMem_4b0e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9977 = getelementptr inbounds %struct.GPR, %struct.GPR* %9976, i32 0, i32 33
  %9978 = getelementptr inbounds %struct.Reg, %struct.Reg* %9977, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %9978 to i64*
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9980 = getelementptr inbounds %struct.GPR, %struct.GPR* %9979, i32 0, i32 1
  %9981 = getelementptr inbounds %struct.Reg, %struct.Reg* %9980, i32 0, i32 0
  %EAX.i1225 = bitcast %union.anon* %9981 to i32*
  %9982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9983 = getelementptr inbounds %struct.GPR, %struct.GPR* %9982, i32 0, i32 15
  %9984 = getelementptr inbounds %struct.Reg, %struct.Reg* %9983, i32 0, i32 0
  %RBP.i1226 = bitcast %union.anon* %9984 to i64*
  %9985 = load i64, i64* %RBP.i1226
  %9986 = sub i64 %9985, 12
  %9987 = load i32, i32* %EAX.i1225
  %9988 = zext i32 %9987 to i64
  %9989 = load i64, i64* %PC.i1224
  %9990 = add i64 %9989, 3
  store i64 %9990, i64* %PC.i1224
  %9991 = inttoptr i64 %9986 to i32*
  store i32 %9987, i32* %9991
  store %struct.Memory* %loadMem_4b0e07, %struct.Memory** %MEMORY
  %loadMem_4b0e0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9993 = getelementptr inbounds %struct.GPR, %struct.GPR* %9992, i32 0, i32 33
  %9994 = getelementptr inbounds %struct.Reg, %struct.Reg* %9993, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %9994 to i64*
  %9995 = load i64, i64* %PC.i1223
  %9996 = add i64 %9995, -264
  %9997 = load i64, i64* %PC.i1223
  %9998 = add i64 %9997, 5
  store i64 %9998, i64* %PC.i1223
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9996, i64* %9999, align 8
  store %struct.Memory* %loadMem_4b0e0a, %struct.Memory** %MEMORY
  br label %block_.L_4b0d02

block_.L_4b0e0f:                                  ; preds = %block_.L_4b0d02
  %loadMem_4b0e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10001 = getelementptr inbounds %struct.GPR, %struct.GPR* %10000, i32 0, i32 33
  %10002 = getelementptr inbounds %struct.Reg, %struct.Reg* %10001, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %10002 to i64*
  %10003 = load i64, i64* %PC.i1222
  %10004 = add i64 %10003, 5
  %10005 = load i64, i64* %PC.i1222
  %10006 = add i64 %10005, 5
  store i64 %10006, i64* %PC.i1222
  %10007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10004, i64* %10007, align 8
  store %struct.Memory* %loadMem_4b0e0f, %struct.Memory** %MEMORY
  br label %block_.L_4b0e14

block_.L_4b0e14:                                  ; preds = %block_.L_4b0e0f
  %loadMem_4b0e14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10009 = getelementptr inbounds %struct.GPR, %struct.GPR* %10008, i32 0, i32 33
  %10010 = getelementptr inbounds %struct.Reg, %struct.Reg* %10009, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %10010 to i64*
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10012 = getelementptr inbounds %struct.GPR, %struct.GPR* %10011, i32 0, i32 1
  %10013 = getelementptr inbounds %struct.Reg, %struct.Reg* %10012, i32 0, i32 0
  %RAX.i1220 = bitcast %union.anon* %10013 to i64*
  %10014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10015 = getelementptr inbounds %struct.GPR, %struct.GPR* %10014, i32 0, i32 15
  %10016 = getelementptr inbounds %struct.Reg, %struct.Reg* %10015, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %10016 to i64*
  %10017 = load i64, i64* %RBP.i1221
  %10018 = sub i64 %10017, 8
  %10019 = load i64, i64* %PC.i1219
  %10020 = add i64 %10019, 3
  store i64 %10020, i64* %PC.i1219
  %10021 = inttoptr i64 %10018 to i32*
  %10022 = load i32, i32* %10021
  %10023 = zext i32 %10022 to i64
  store i64 %10023, i64* %RAX.i1220, align 8
  store %struct.Memory* %loadMem_4b0e14, %struct.Memory** %MEMORY
  %loadMem_4b0e17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10025 = getelementptr inbounds %struct.GPR, %struct.GPR* %10024, i32 0, i32 33
  %10026 = getelementptr inbounds %struct.Reg, %struct.Reg* %10025, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %10026 to i64*
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10028 = getelementptr inbounds %struct.GPR, %struct.GPR* %10027, i32 0, i32 1
  %10029 = getelementptr inbounds %struct.Reg, %struct.Reg* %10028, i32 0, i32 0
  %RAX.i1218 = bitcast %union.anon* %10029 to i64*
  %10030 = load i64, i64* %RAX.i1218
  %10031 = load i64, i64* %PC.i1217
  %10032 = add i64 %10031, 3
  store i64 %10032, i64* %PC.i1217
  %10033 = trunc i64 %10030 to i32
  %10034 = add i32 1, %10033
  %10035 = zext i32 %10034 to i64
  store i64 %10035, i64* %RAX.i1218, align 8
  %10036 = icmp ult i32 %10034, %10033
  %10037 = icmp ult i32 %10034, 1
  %10038 = or i1 %10036, %10037
  %10039 = zext i1 %10038 to i8
  %10040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10039, i8* %10040, align 1
  %10041 = and i32 %10034, 255
  %10042 = call i32 @llvm.ctpop.i32(i32 %10041)
  %10043 = trunc i32 %10042 to i8
  %10044 = and i8 %10043, 1
  %10045 = xor i8 %10044, 1
  %10046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10045, i8* %10046, align 1
  %10047 = xor i64 1, %10030
  %10048 = trunc i64 %10047 to i32
  %10049 = xor i32 %10048, %10034
  %10050 = lshr i32 %10049, 4
  %10051 = trunc i32 %10050 to i8
  %10052 = and i8 %10051, 1
  %10053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10052, i8* %10053, align 1
  %10054 = icmp eq i32 %10034, 0
  %10055 = zext i1 %10054 to i8
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10055, i8* %10056, align 1
  %10057 = lshr i32 %10034, 31
  %10058 = trunc i32 %10057 to i8
  %10059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10058, i8* %10059, align 1
  %10060 = lshr i32 %10033, 31
  %10061 = xor i32 %10057, %10060
  %10062 = add i32 %10061, %10057
  %10063 = icmp eq i32 %10062, 2
  %10064 = zext i1 %10063 to i8
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10064, i8* %10065, align 1
  store %struct.Memory* %loadMem_4b0e17, %struct.Memory** %MEMORY
  %loadMem_4b0e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10067 = getelementptr inbounds %struct.GPR, %struct.GPR* %10066, i32 0, i32 33
  %10068 = getelementptr inbounds %struct.Reg, %struct.Reg* %10067, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %10068 to i64*
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10070 = getelementptr inbounds %struct.GPR, %struct.GPR* %10069, i32 0, i32 1
  %10071 = getelementptr inbounds %struct.Reg, %struct.Reg* %10070, i32 0, i32 0
  %EAX.i1215 = bitcast %union.anon* %10071 to i32*
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 15
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %RBP.i1216 = bitcast %union.anon* %10074 to i64*
  %10075 = load i64, i64* %RBP.i1216
  %10076 = sub i64 %10075, 8
  %10077 = load i32, i32* %EAX.i1215
  %10078 = zext i32 %10077 to i64
  %10079 = load i64, i64* %PC.i1214
  %10080 = add i64 %10079, 3
  store i64 %10080, i64* %PC.i1214
  %10081 = inttoptr i64 %10076 to i32*
  store i32 %10077, i32* %10081
  store %struct.Memory* %loadMem_4b0e1a, %struct.Memory** %MEMORY
  %loadMem_4b0e1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10083 = getelementptr inbounds %struct.GPR, %struct.GPR* %10082, i32 0, i32 33
  %10084 = getelementptr inbounds %struct.Reg, %struct.Reg* %10083, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %10084 to i64*
  %10085 = load i64, i64* %PC.i1213
  %10086 = add i64 %10085, -306
  %10087 = load i64, i64* %PC.i1213
  %10088 = add i64 %10087, 5
  store i64 %10088, i64* %PC.i1213
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10086, i64* %10089, align 8
  store %struct.Memory* %loadMem_4b0e1d, %struct.Memory** %MEMORY
  br label %block_.L_4b0ceb

block_.L_4b0e22:                                  ; preds = %block_.L_4b0ceb
  %loadMem_4b0e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10091 = getelementptr inbounds %struct.GPR, %struct.GPR* %10090, i32 0, i32 33
  %10092 = getelementptr inbounds %struct.Reg, %struct.Reg* %10091, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %10092 to i64*
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10094 = getelementptr inbounds %struct.GPR, %struct.GPR* %10093, i32 0, i32 15
  %10095 = getelementptr inbounds %struct.Reg, %struct.Reg* %10094, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %10095 to i64*
  %10096 = load i64, i64* %RBP.i1212
  %10097 = sub i64 %10096, 35396
  %10098 = load i64, i64* %PC.i1211
  %10099 = add i64 %10098, 10
  store i64 %10099, i64* %PC.i1211
  %10100 = inttoptr i64 %10097 to i32*
  store i32 0, i32* %10100
  store %struct.Memory* %loadMem_4b0e22, %struct.Memory** %MEMORY
  br label %block_.L_4b0e2c

block_.L_4b0e2c:                                  ; preds = %block_.L_4b0f56, %block_.L_4b0e22
  %loadMem_4b0e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10102 = getelementptr inbounds %struct.GPR, %struct.GPR* %10101, i32 0, i32 33
  %10103 = getelementptr inbounds %struct.Reg, %struct.Reg* %10102, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %10103 to i64*
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10105 = getelementptr inbounds %struct.GPR, %struct.GPR* %10104, i32 0, i32 1
  %10106 = getelementptr inbounds %struct.Reg, %struct.Reg* %10105, i32 0, i32 0
  %RAX.i1209 = bitcast %union.anon* %10106 to i64*
  %10107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10108 = getelementptr inbounds %struct.GPR, %struct.GPR* %10107, i32 0, i32 15
  %10109 = getelementptr inbounds %struct.Reg, %struct.Reg* %10108, i32 0, i32 0
  %RBP.i1210 = bitcast %union.anon* %10109 to i64*
  %10110 = load i64, i64* %RBP.i1210
  %10111 = sub i64 %10110, 35396
  %10112 = load i64, i64* %PC.i1208
  %10113 = add i64 %10112, 6
  store i64 %10113, i64* %PC.i1208
  %10114 = inttoptr i64 %10111 to i32*
  %10115 = load i32, i32* %10114
  %10116 = zext i32 %10115 to i64
  store i64 %10116, i64* %RAX.i1209, align 8
  store %struct.Memory* %loadMem_4b0e2c, %struct.Memory** %MEMORY
  %loadMem_4b0e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10118 = getelementptr inbounds %struct.GPR, %struct.GPR* %10117, i32 0, i32 33
  %10119 = getelementptr inbounds %struct.Reg, %struct.Reg* %10118, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %10119 to i64*
  %10120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10121 = getelementptr inbounds %struct.GPR, %struct.GPR* %10120, i32 0, i32 5
  %10122 = getelementptr inbounds %struct.Reg, %struct.Reg* %10121, i32 0, i32 0
  %RCX.i1206 = bitcast %union.anon* %10122 to i64*
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10124 = getelementptr inbounds %struct.GPR, %struct.GPR* %10123, i32 0, i32 15
  %10125 = getelementptr inbounds %struct.Reg, %struct.Reg* %10124, i32 0, i32 0
  %RBP.i1207 = bitcast %union.anon* %10125 to i64*
  %10126 = load i64, i64* %RBP.i1207
  %10127 = sub i64 %10126, 804
  %10128 = load i64, i64* %PC.i1205
  %10129 = add i64 %10128, 6
  store i64 %10129, i64* %PC.i1205
  %10130 = inttoptr i64 %10127 to i32*
  %10131 = load i32, i32* %10130
  %10132 = zext i32 %10131 to i64
  store i64 %10132, i64* %RCX.i1206, align 8
  store %struct.Memory* %loadMem_4b0e32, %struct.Memory** %MEMORY
  %loadMem_4b0e38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10134 = getelementptr inbounds %struct.GPR, %struct.GPR* %10133, i32 0, i32 33
  %10135 = getelementptr inbounds %struct.Reg, %struct.Reg* %10134, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %10135 to i64*
  %10136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10137 = getelementptr inbounds %struct.GPR, %struct.GPR* %10136, i32 0, i32 5
  %10138 = getelementptr inbounds %struct.Reg, %struct.Reg* %10137, i32 0, i32 0
  %RCX.i1204 = bitcast %union.anon* %10138 to i64*
  %10139 = load i64, i64* %RCX.i1204
  %10140 = load i64, i64* %PC.i1203
  %10141 = add i64 %10140, 3
  store i64 %10141, i64* %PC.i1203
  %10142 = trunc i64 %10139 to i32
  %10143 = add i32 2, %10142
  %10144 = zext i32 %10143 to i64
  store i64 %10144, i64* %RCX.i1204, align 8
  %10145 = icmp ult i32 %10143, %10142
  %10146 = icmp ult i32 %10143, 2
  %10147 = or i1 %10145, %10146
  %10148 = zext i1 %10147 to i8
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10148, i8* %10149, align 1
  %10150 = and i32 %10143, 255
  %10151 = call i32 @llvm.ctpop.i32(i32 %10150)
  %10152 = trunc i32 %10151 to i8
  %10153 = and i8 %10152, 1
  %10154 = xor i8 %10153, 1
  %10155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10154, i8* %10155, align 1
  %10156 = xor i64 2, %10139
  %10157 = trunc i64 %10156 to i32
  %10158 = xor i32 %10157, %10143
  %10159 = lshr i32 %10158, 4
  %10160 = trunc i32 %10159 to i8
  %10161 = and i8 %10160, 1
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10161, i8* %10162, align 1
  %10163 = icmp eq i32 %10143, 0
  %10164 = zext i1 %10163 to i8
  %10165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10164, i8* %10165, align 1
  %10166 = lshr i32 %10143, 31
  %10167 = trunc i32 %10166 to i8
  %10168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10167, i8* %10168, align 1
  %10169 = lshr i32 %10142, 31
  %10170 = xor i32 %10166, %10169
  %10171 = add i32 %10170, %10166
  %10172 = icmp eq i32 %10171, 2
  %10173 = zext i1 %10172 to i8
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10173, i8* %10174, align 1
  store %struct.Memory* %loadMem_4b0e38, %struct.Memory** %MEMORY
  %loadMem_4b0e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10176 = getelementptr inbounds %struct.GPR, %struct.GPR* %10175, i32 0, i32 33
  %10177 = getelementptr inbounds %struct.Reg, %struct.Reg* %10176, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %10177 to i64*
  %10178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10179 = getelementptr inbounds %struct.GPR, %struct.GPR* %10178, i32 0, i32 1
  %10180 = getelementptr inbounds %struct.Reg, %struct.Reg* %10179, i32 0, i32 0
  %EAX.i1201 = bitcast %union.anon* %10180 to i32*
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10182 = getelementptr inbounds %struct.GPR, %struct.GPR* %10181, i32 0, i32 5
  %10183 = getelementptr inbounds %struct.Reg, %struct.Reg* %10182, i32 0, i32 0
  %ECX.i1202 = bitcast %union.anon* %10183 to i32*
  %10184 = load i32, i32* %EAX.i1201
  %10185 = zext i32 %10184 to i64
  %10186 = load i32, i32* %ECX.i1202
  %10187 = zext i32 %10186 to i64
  %10188 = load i64, i64* %PC.i1200
  %10189 = add i64 %10188, 2
  store i64 %10189, i64* %PC.i1200
  %10190 = sub i32 %10184, %10186
  %10191 = icmp ult i32 %10184, %10186
  %10192 = zext i1 %10191 to i8
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10192, i8* %10193, align 1
  %10194 = and i32 %10190, 255
  %10195 = call i32 @llvm.ctpop.i32(i32 %10194)
  %10196 = trunc i32 %10195 to i8
  %10197 = and i8 %10196, 1
  %10198 = xor i8 %10197, 1
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10198, i8* %10199, align 1
  %10200 = xor i64 %10187, %10185
  %10201 = trunc i64 %10200 to i32
  %10202 = xor i32 %10201, %10190
  %10203 = lshr i32 %10202, 4
  %10204 = trunc i32 %10203 to i8
  %10205 = and i8 %10204, 1
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10205, i8* %10206, align 1
  %10207 = icmp eq i32 %10190, 0
  %10208 = zext i1 %10207 to i8
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10208, i8* %10209, align 1
  %10210 = lshr i32 %10190, 31
  %10211 = trunc i32 %10210 to i8
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10211, i8* %10212, align 1
  %10213 = lshr i32 %10184, 31
  %10214 = lshr i32 %10186, 31
  %10215 = xor i32 %10214, %10213
  %10216 = xor i32 %10210, %10213
  %10217 = add i32 %10216, %10215
  %10218 = icmp eq i32 %10217, 2
  %10219 = zext i1 %10218 to i8
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10219, i8* %10220, align 1
  store %struct.Memory* %loadMem_4b0e3b, %struct.Memory** %MEMORY
  %loadMem_4b0e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10222 = getelementptr inbounds %struct.GPR, %struct.GPR* %10221, i32 0, i32 33
  %10223 = getelementptr inbounds %struct.Reg, %struct.Reg* %10222, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %10223 to i64*
  %10224 = load i64, i64* %PC.i1199
  %10225 = add i64 %10224, 301
  %10226 = load i64, i64* %PC.i1199
  %10227 = add i64 %10226, 6
  %10228 = load i64, i64* %PC.i1199
  %10229 = add i64 %10228, 6
  store i64 %10229, i64* %PC.i1199
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10231 = load i8, i8* %10230, align 1
  %10232 = icmp ne i8 %10231, 0
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10234 = load i8, i8* %10233, align 1
  %10235 = icmp ne i8 %10234, 0
  %10236 = xor i1 %10232, %10235
  %10237 = xor i1 %10236, true
  %10238 = zext i1 %10237 to i8
  store i8 %10238, i8* %BRANCH_TAKEN, align 1
  %10239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10240 = select i1 %10236, i64 %10227, i64 %10225
  store i64 %10240, i64* %10239, align 8
  store %struct.Memory* %loadMem_4b0e3d, %struct.Memory** %MEMORY
  %loadBr_4b0e3d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0e3d = icmp eq i8 %loadBr_4b0e3d, 1
  br i1 %cmpBr_4b0e3d, label %block_.L_4b0f6a, label %block_4b0e43

block_4b0e43:                                     ; preds = %block_.L_4b0e2c
  %loadMem_4b0e43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10242 = getelementptr inbounds %struct.GPR, %struct.GPR* %10241, i32 0, i32 33
  %10243 = getelementptr inbounds %struct.Reg, %struct.Reg* %10242, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %10243 to i64*
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10245 = getelementptr inbounds %struct.GPR, %struct.GPR* %10244, i32 0, i32 15
  %10246 = getelementptr inbounds %struct.Reg, %struct.Reg* %10245, i32 0, i32 0
  %RBP.i1198 = bitcast %union.anon* %10246 to i64*
  %10247 = load i64, i64* %RBP.i1198
  %10248 = sub i64 %10247, 36
  %10249 = load i64, i64* %PC.i1197
  %10250 = add i64 %10249, 7
  store i64 %10250, i64* %PC.i1197
  %10251 = inttoptr i64 %10248 to i32*
  store i32 0, i32* %10251
  store %struct.Memory* %loadMem_4b0e43, %struct.Memory** %MEMORY
  br label %block_.L_4b0e4a

block_.L_4b0e4a:                                  ; preds = %routine_shll__cl___eax.exit1130, %block_4b0e43
  %loadMem_4b0e4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10253 = getelementptr inbounds %struct.GPR, %struct.GPR* %10252, i32 0, i32 33
  %10254 = getelementptr inbounds %struct.Reg, %struct.Reg* %10253, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %10254 to i64*
  %10255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10256 = getelementptr inbounds %struct.GPR, %struct.GPR* %10255, i32 0, i32 1
  %10257 = getelementptr inbounds %struct.Reg, %struct.Reg* %10256, i32 0, i32 0
  %RAX.i1195 = bitcast %union.anon* %10257 to i64*
  %10258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10259 = getelementptr inbounds %struct.GPR, %struct.GPR* %10258, i32 0, i32 15
  %10260 = getelementptr inbounds %struct.Reg, %struct.Reg* %10259, i32 0, i32 0
  %RBP.i1196 = bitcast %union.anon* %10260 to i64*
  %10261 = load i64, i64* %RBP.i1196
  %10262 = sub i64 %10261, 36
  %10263 = load i64, i64* %PC.i1194
  %10264 = add i64 %10263, 3
  store i64 %10264, i64* %PC.i1194
  %10265 = inttoptr i64 %10262 to i32*
  %10266 = load i32, i32* %10265
  %10267 = zext i32 %10266 to i64
  store i64 %10267, i64* %RAX.i1195, align 8
  store %struct.Memory* %loadMem_4b0e4a, %struct.Memory** %MEMORY
  %loadMem_4b0e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10269 = getelementptr inbounds %struct.GPR, %struct.GPR* %10268, i32 0, i32 33
  %10270 = getelementptr inbounds %struct.Reg, %struct.Reg* %10269, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %10270 to i64*
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10272 = getelementptr inbounds %struct.GPR, %struct.GPR* %10271, i32 0, i32 5
  %10273 = getelementptr inbounds %struct.Reg, %struct.Reg* %10272, i32 0, i32 0
  %RCX.i1192 = bitcast %union.anon* %10273 to i64*
  %10274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10275 = getelementptr inbounds %struct.GPR, %struct.GPR* %10274, i32 0, i32 15
  %10276 = getelementptr inbounds %struct.Reg, %struct.Reg* %10275, i32 0, i32 0
  %RBP.i1193 = bitcast %union.anon* %10276 to i64*
  %10277 = load i64, i64* %RBP.i1193
  %10278 = sub i64 %10277, 35396
  %10279 = load i64, i64* %PC.i1191
  %10280 = add i64 %10279, 7
  store i64 %10280, i64* %PC.i1191
  %10281 = inttoptr i64 %10278 to i32*
  %10282 = load i32, i32* %10281
  %10283 = sext i32 %10282 to i64
  store i64 %10283, i64* %RCX.i1192, align 8
  store %struct.Memory* %loadMem_4b0e4d, %struct.Memory** %MEMORY
  %loadMem_4b0e54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10285 = getelementptr inbounds %struct.GPR, %struct.GPR* %10284, i32 0, i32 33
  %10286 = getelementptr inbounds %struct.Reg, %struct.Reg* %10285, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %10286 to i64*
  %10287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10288 = getelementptr inbounds %struct.GPR, %struct.GPR* %10287, i32 0, i32 1
  %10289 = getelementptr inbounds %struct.Reg, %struct.Reg* %10288, i32 0, i32 0
  %EAX.i1189 = bitcast %union.anon* %10289 to i32*
  %10290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10291 = getelementptr inbounds %struct.GPR, %struct.GPR* %10290, i32 0, i32 5
  %10292 = getelementptr inbounds %struct.Reg, %struct.Reg* %10291, i32 0, i32 0
  %RCX.i1190 = bitcast %union.anon* %10292 to i64*
  %10293 = load i32, i32* %EAX.i1189
  %10294 = zext i32 %10293 to i64
  %10295 = load i64, i64* %RCX.i1190
  %10296 = mul i64 %10295, 4
  %10297 = add i64 %10296, 7489456
  %10298 = load i64, i64* %PC.i1188
  %10299 = add i64 %10298, 7
  store i64 %10299, i64* %PC.i1188
  %10300 = inttoptr i64 %10297 to i32*
  %10301 = load i32, i32* %10300
  %10302 = sub i32 %10293, %10301
  %10303 = icmp ult i32 %10293, %10301
  %10304 = zext i1 %10303 to i8
  %10305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10304, i8* %10305, align 1
  %10306 = and i32 %10302, 255
  %10307 = call i32 @llvm.ctpop.i32(i32 %10306)
  %10308 = trunc i32 %10307 to i8
  %10309 = and i8 %10308, 1
  %10310 = xor i8 %10309, 1
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10310, i8* %10311, align 1
  %10312 = xor i32 %10301, %10293
  %10313 = xor i32 %10312, %10302
  %10314 = lshr i32 %10313, 4
  %10315 = trunc i32 %10314 to i8
  %10316 = and i8 %10315, 1
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10316, i8* %10317, align 1
  %10318 = icmp eq i32 %10302, 0
  %10319 = zext i1 %10318 to i8
  %10320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10319, i8* %10320, align 1
  %10321 = lshr i32 %10302, 31
  %10322 = trunc i32 %10321 to i8
  %10323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10322, i8* %10323, align 1
  %10324 = lshr i32 %10293, 31
  %10325 = lshr i32 %10301, 31
  %10326 = xor i32 %10325, %10324
  %10327 = xor i32 %10321, %10324
  %10328 = add i32 %10327, %10326
  %10329 = icmp eq i32 %10328, 2
  %10330 = zext i1 %10329 to i8
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10330, i8* %10331, align 1
  store %struct.Memory* %loadMem_4b0e54, %struct.Memory** %MEMORY
  %loadMem_4b0e5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10333 = getelementptr inbounds %struct.GPR, %struct.GPR* %10332, i32 0, i32 33
  %10334 = getelementptr inbounds %struct.Reg, %struct.Reg* %10333, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %10334 to i64*
  %10335 = load i64, i64* %PC.i1187
  %10336 = add i64 %10335, 246
  %10337 = load i64, i64* %PC.i1187
  %10338 = add i64 %10337, 6
  %10339 = load i64, i64* %PC.i1187
  %10340 = add i64 %10339, 6
  store i64 %10340, i64* %PC.i1187
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10342 = load i8, i8* %10341, align 1
  %10343 = icmp ne i8 %10342, 0
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10345 = load i8, i8* %10344, align 1
  %10346 = icmp ne i8 %10345, 0
  %10347 = xor i1 %10343, %10346
  %10348 = xor i1 %10347, true
  %10349 = zext i1 %10348 to i8
  store i8 %10349, i8* %BRANCH_TAKEN, align 1
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10351 = select i1 %10347, i64 %10338, i64 %10336
  store i64 %10351, i64* %10350, align 8
  store %struct.Memory* %loadMem_4b0e5b, %struct.Memory** %MEMORY
  %loadBr_4b0e5b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0e5b = icmp eq i8 %loadBr_4b0e5b, 1
  br i1 %cmpBr_4b0e5b, label %block_.L_4b0f51, label %block_4b0e61

block_4b0e61:                                     ; preds = %block_.L_4b0e4a
  %loadMem_4b0e61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10353 = getelementptr inbounds %struct.GPR, %struct.GPR* %10352, i32 0, i32 33
  %10354 = getelementptr inbounds %struct.Reg, %struct.Reg* %10353, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %10354 to i64*
  %10355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10356 = getelementptr inbounds %struct.GPR, %struct.GPR* %10355, i32 0, i32 1
  %10357 = getelementptr inbounds %struct.Reg, %struct.Reg* %10356, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %10357 to i64*
  %10358 = load i64, i64* %PC.i1185
  %10359 = add i64 %10358, 5
  store i64 %10359, i64* %PC.i1185
  store i64 1, i64* %RAX.i1186, align 8
  store %struct.Memory* %loadMem_4b0e61, %struct.Memory** %MEMORY
  %loadMem_4b0e66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10361 = getelementptr inbounds %struct.GPR, %struct.GPR* %10360, i32 0, i32 33
  %10362 = getelementptr inbounds %struct.Reg, %struct.Reg* %10361, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %10362 to i64*
  %10363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10364 = getelementptr inbounds %struct.GPR, %struct.GPR* %10363, i32 0, i32 5
  %10365 = getelementptr inbounds %struct.Reg, %struct.Reg* %10364, i32 0, i32 0
  %RCX.i1184 = bitcast %union.anon* %10365 to i64*
  %10366 = load i64, i64* %PC.i1183
  %10367 = add i64 %10366, 7
  store i64 %10367, i64* %PC.i1183
  %10368 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %10369 = zext i32 %10368 to i64
  store i64 %10369, i64* %RCX.i1184, align 8
  store %struct.Memory* %loadMem_4b0e66, %struct.Memory** %MEMORY
  %loadMem_4b0e6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10371 = getelementptr inbounds %struct.GPR, %struct.GPR* %10370, i32 0, i32 33
  %10372 = getelementptr inbounds %struct.Reg, %struct.Reg* %10371, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %10372 to i64*
  %10373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10374 = getelementptr inbounds %struct.GPR, %struct.GPR* %10373, i32 0, i32 1
  %10375 = getelementptr inbounds %struct.Reg, %struct.Reg* %10374, i32 0, i32 0
  %EAX.i1181 = bitcast %union.anon* %10375 to i32*
  %10376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10377 = getelementptr inbounds %struct.GPR, %struct.GPR* %10376, i32 0, i32 7
  %10378 = getelementptr inbounds %struct.Reg, %struct.Reg* %10377, i32 0, i32 0
  %RDX.i1182 = bitcast %union.anon* %10378 to i64*
  %10379 = load i32, i32* %EAX.i1181
  %10380 = zext i32 %10379 to i64
  %10381 = load i64, i64* %PC.i1180
  %10382 = add i64 %10381, 2
  store i64 %10382, i64* %PC.i1180
  %10383 = and i64 %10380, 4294967295
  store i64 %10383, i64* %RDX.i1182, align 8
  store %struct.Memory* %loadMem_4b0e6d, %struct.Memory** %MEMORY
  %loadMem_4b0e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10385 = getelementptr inbounds %struct.GPR, %struct.GPR* %10384, i32 0, i32 33
  %10386 = getelementptr inbounds %struct.Reg, %struct.Reg* %10385, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %10386 to i64*
  %10387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10388 = getelementptr inbounds %struct.GPR, %struct.GPR* %10387, i32 0, i32 5
  %10389 = getelementptr inbounds %struct.Reg, %struct.Reg* %10388, i32 0, i32 0
  %10390 = bitcast %union.anon* %10389 to %struct.anon.2*
  %CL.i1177 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10390, i32 0, i32 0
  %10391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10392 = getelementptr inbounds %struct.GPR, %struct.GPR* %10391, i32 0, i32 7
  %10393 = getelementptr inbounds %struct.Reg, %struct.Reg* %10392, i32 0, i32 0
  %RDX.i1178 = bitcast %union.anon* %10393 to i64*
  %10394 = load i64, i64* %RDX.i1178
  %10395 = load i8, i8* %CL.i1177
  %10396 = zext i8 %10395 to i64
  %10397 = load i64, i64* %PC.i1176
  %10398 = add i64 %10397, 2
  store i64 %10398, i64* %PC.i1176
  %10399 = trunc i64 %10396 to i5
  switch i5 %10399, label %10406 [
    i5 0, label %routine_shll__cl___edx.exit1179
    i5 1, label %10400
  ]

; <label>:10400:                                  ; preds = %block_4b0e61
  %10401 = trunc i64 %10394 to i32
  %10402 = shl i32 %10401, 1
  %10403 = icmp slt i32 %10401, 0
  %10404 = icmp slt i32 %10402, 0
  %10405 = xor i1 %10403, %10404
  br label %10415

; <label>:10406:                                  ; preds = %block_4b0e61
  %10407 = and i64 %10396, 31
  %10408 = add i64 %10407, 4294967295
  %10409 = and i64 %10394, 4294967295
  %10410 = and i64 %10408, 4294967295
  %10411 = shl i64 %10409, %10410
  %10412 = trunc i64 %10411 to i32
  %10413 = icmp slt i32 %10412, 0
  %10414 = shl i32 %10412, 1
  br label %10415

; <label>:10415:                                  ; preds = %10406, %10400
  %10416 = phi i1 [ %10403, %10400 ], [ %10413, %10406 ]
  %10417 = phi i1 [ %10405, %10400 ], [ false, %10406 ]
  %10418 = phi i32 [ %10402, %10400 ], [ %10414, %10406 ]
  %10419 = zext i32 %10418 to i64
  store i64 %10419, i64* %RDX.i1178, align 8
  %10420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10421 = zext i1 %10416 to i8
  store i8 %10421, i8* %10420, align 1
  %10422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10423 = and i32 %10418, 254
  %10424 = call i32 @llvm.ctpop.i32(i32 %10423)
  %10425 = trunc i32 %10424 to i8
  %10426 = and i8 %10425, 1
  %10427 = xor i8 %10426, 1
  store i8 %10427, i8* %10422, align 1
  %10428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10428, align 1
  %10429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10430 = icmp eq i32 %10418, 0
  %10431 = zext i1 %10430 to i8
  store i8 %10431, i8* %10429, align 1
  %10432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10433 = lshr i32 %10418, 31
  %10434 = trunc i32 %10433 to i8
  store i8 %10434, i8* %10432, align 1
  %10435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10436 = zext i1 %10417 to i8
  store i8 %10436, i8* %10435, align 1
  br label %routine_shll__cl___edx.exit1179

routine_shll__cl___edx.exit1179:                  ; preds = %block_4b0e61, %10415
  store %struct.Memory* %loadMem_4b0e6f, %struct.Memory** %MEMORY
  %loadMem_4b0e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10438 = getelementptr inbounds %struct.GPR, %struct.GPR* %10437, i32 0, i32 33
  %10439 = getelementptr inbounds %struct.Reg, %struct.Reg* %10438, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %10439 to i64*
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10441 = getelementptr inbounds %struct.GPR, %struct.GPR* %10440, i32 0, i32 9
  %10442 = getelementptr inbounds %struct.Reg, %struct.Reg* %10441, i32 0, i32 0
  %RSI.i1175 = bitcast %union.anon* %10442 to i64*
  %10443 = load i64, i64* %PC.i1174
  %10444 = add i64 %10443, 8
  store i64 %10444, i64* %PC.i1174
  %10445 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %10445, i64* %RSI.i1175, align 8
  store %struct.Memory* %loadMem_4b0e71, %struct.Memory** %MEMORY
  %loadMem_4b0e79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10447 = getelementptr inbounds %struct.GPR, %struct.GPR* %10446, i32 0, i32 33
  %10448 = getelementptr inbounds %struct.Reg, %struct.Reg* %10447, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %10448 to i64*
  %10449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10450 = getelementptr inbounds %struct.GPR, %struct.GPR* %10449, i32 0, i32 11
  %10451 = getelementptr inbounds %struct.Reg, %struct.Reg* %10450, i32 0, i32 0
  %RDI.i1172 = bitcast %union.anon* %10451 to i64*
  %10452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10453 = getelementptr inbounds %struct.GPR, %struct.GPR* %10452, i32 0, i32 15
  %10454 = getelementptr inbounds %struct.Reg, %struct.Reg* %10453, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %10454 to i64*
  %10455 = load i64, i64* %RBP.i1173
  %10456 = sub i64 %10455, 35396
  %10457 = load i64, i64* %PC.i1171
  %10458 = add i64 %10457, 7
  store i64 %10458, i64* %PC.i1171
  %10459 = inttoptr i64 %10456 to i32*
  %10460 = load i32, i32* %10459
  %10461 = sext i32 %10460 to i64
  store i64 %10461, i64* %RDI.i1172, align 8
  store %struct.Memory* %loadMem_4b0e79, %struct.Memory** %MEMORY
  %loadMem_4b0e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10463 = getelementptr inbounds %struct.GPR, %struct.GPR* %10462, i32 0, i32 33
  %10464 = getelementptr inbounds %struct.Reg, %struct.Reg* %10463, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %10464 to i64*
  %10465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10466 = getelementptr inbounds %struct.GPR, %struct.GPR* %10465, i32 0, i32 9
  %10467 = getelementptr inbounds %struct.Reg, %struct.Reg* %10466, i32 0, i32 0
  %RSI.i1169 = bitcast %union.anon* %10467 to i64*
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10469 = getelementptr inbounds %struct.GPR, %struct.GPR* %10468, i32 0, i32 11
  %10470 = getelementptr inbounds %struct.Reg, %struct.Reg* %10469, i32 0, i32 0
  %RDI.i1170 = bitcast %union.anon* %10470 to i64*
  %10471 = load i64, i64* %RSI.i1169
  %10472 = load i64, i64* %RDI.i1170
  %10473 = mul i64 %10472, 8
  %10474 = add i64 %10473, %10471
  %10475 = load i64, i64* %PC.i1168
  %10476 = add i64 %10475, 4
  store i64 %10476, i64* %PC.i1168
  %10477 = inttoptr i64 %10474 to i64*
  %10478 = load i64, i64* %10477
  store i64 %10478, i64* %RSI.i1169, align 8
  store %struct.Memory* %loadMem_4b0e80, %struct.Memory** %MEMORY
  %loadMem_4b0e84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10480 = getelementptr inbounds %struct.GPR, %struct.GPR* %10479, i32 0, i32 33
  %10481 = getelementptr inbounds %struct.Reg, %struct.Reg* %10480, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %10481 to i64*
  %10482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10483 = getelementptr inbounds %struct.GPR, %struct.GPR* %10482, i32 0, i32 11
  %10484 = getelementptr inbounds %struct.Reg, %struct.Reg* %10483, i32 0, i32 0
  %RDI.i1166 = bitcast %union.anon* %10484 to i64*
  %10485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10486 = getelementptr inbounds %struct.GPR, %struct.GPR* %10485, i32 0, i32 15
  %10487 = getelementptr inbounds %struct.Reg, %struct.Reg* %10486, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %10487 to i64*
  %10488 = load i64, i64* %RBP.i1167
  %10489 = sub i64 %10488, 36
  %10490 = load i64, i64* %PC.i1165
  %10491 = add i64 %10490, 4
  store i64 %10491, i64* %PC.i1165
  %10492 = inttoptr i64 %10489 to i32*
  %10493 = load i32, i32* %10492
  %10494 = sext i32 %10493 to i64
  store i64 %10494, i64* %RDI.i1166, align 8
  store %struct.Memory* %loadMem_4b0e84, %struct.Memory** %MEMORY
  %loadMem_4b0e88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10496 = getelementptr inbounds %struct.GPR, %struct.GPR* %10495, i32 0, i32 33
  %10497 = getelementptr inbounds %struct.Reg, %struct.Reg* %10496, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %10497 to i64*
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10499 = getelementptr inbounds %struct.GPR, %struct.GPR* %10498, i32 0, i32 9
  %10500 = getelementptr inbounds %struct.Reg, %struct.Reg* %10499, i32 0, i32 0
  %RSI.i1163 = bitcast %union.anon* %10500 to i64*
  %10501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10502 = getelementptr inbounds %struct.GPR, %struct.GPR* %10501, i32 0, i32 11
  %10503 = getelementptr inbounds %struct.Reg, %struct.Reg* %10502, i32 0, i32 0
  %RDI.i1164 = bitcast %union.anon* %10503 to i64*
  %10504 = load i64, i64* %RSI.i1163
  %10505 = load i64, i64* %RDI.i1164
  %10506 = mul i64 %10505, 8
  %10507 = add i64 %10506, %10504
  %10508 = load i64, i64* %PC.i1162
  %10509 = add i64 %10508, 4
  store i64 %10509, i64* %PC.i1162
  %10510 = inttoptr i64 %10507 to i64*
  %10511 = load i64, i64* %10510
  store i64 %10511, i64* %RSI.i1163, align 8
  store %struct.Memory* %loadMem_4b0e88, %struct.Memory** %MEMORY
  %loadMem_4b0e8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10513 = getelementptr inbounds %struct.GPR, %struct.GPR* %10512, i32 0, i32 33
  %10514 = getelementptr inbounds %struct.Reg, %struct.Reg* %10513, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %10514 to i64*
  %10515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10516 = getelementptr inbounds %struct.GPR, %struct.GPR* %10515, i32 0, i32 7
  %10517 = getelementptr inbounds %struct.Reg, %struct.Reg* %10516, i32 0, i32 0
  %EDX.i1160 = bitcast %union.anon* %10517 to i32*
  %10518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10519 = getelementptr inbounds %struct.GPR, %struct.GPR* %10518, i32 0, i32 9
  %10520 = getelementptr inbounds %struct.Reg, %struct.Reg* %10519, i32 0, i32 0
  %RSI.i1161 = bitcast %union.anon* %10520 to i64*
  %10521 = load i64, i64* %RSI.i1161
  %10522 = load i32, i32* %EDX.i1160
  %10523 = zext i32 %10522 to i64
  %10524 = load i64, i64* %PC.i1159
  %10525 = add i64 %10524, 2
  store i64 %10525, i64* %PC.i1159
  %10526 = inttoptr i64 %10521 to i32*
  store i32 %10522, i32* %10526
  store %struct.Memory* %loadMem_4b0e8c, %struct.Memory** %MEMORY
  %loadMem_4b0e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10528 = getelementptr inbounds %struct.GPR, %struct.GPR* %10527, i32 0, i32 33
  %10529 = getelementptr inbounds %struct.Reg, %struct.Reg* %10528, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %10529 to i64*
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10531 = getelementptr inbounds %struct.GPR, %struct.GPR* %10530, i32 0, i32 5
  %10532 = getelementptr inbounds %struct.Reg, %struct.Reg* %10531, i32 0, i32 0
  %RCX.i1158 = bitcast %union.anon* %10532 to i64*
  %10533 = load i64, i64* %PC.i1157
  %10534 = add i64 %10533, 7
  store i64 %10534, i64* %PC.i1157
  %10535 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %10536 = zext i32 %10535 to i64
  store i64 %10536, i64* %RCX.i1158, align 8
  store %struct.Memory* %loadMem_4b0e8e, %struct.Memory** %MEMORY
  %loadMem_4b0e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10538 = getelementptr inbounds %struct.GPR, %struct.GPR* %10537, i32 0, i32 33
  %10539 = getelementptr inbounds %struct.Reg, %struct.Reg* %10538, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %10539 to i64*
  %10540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10541 = getelementptr inbounds %struct.GPR, %struct.GPR* %10540, i32 0, i32 1
  %10542 = getelementptr inbounds %struct.Reg, %struct.Reg* %10541, i32 0, i32 0
  %EAX.i1155 = bitcast %union.anon* %10542 to i32*
  %10543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10544 = getelementptr inbounds %struct.GPR, %struct.GPR* %10543, i32 0, i32 7
  %10545 = getelementptr inbounds %struct.Reg, %struct.Reg* %10544, i32 0, i32 0
  %RDX.i1156 = bitcast %union.anon* %10545 to i64*
  %10546 = load i32, i32* %EAX.i1155
  %10547 = zext i32 %10546 to i64
  %10548 = load i64, i64* %PC.i1154
  %10549 = add i64 %10548, 2
  store i64 %10549, i64* %PC.i1154
  %10550 = and i64 %10547, 4294967295
  store i64 %10550, i64* %RDX.i1156, align 8
  store %struct.Memory* %loadMem_4b0e95, %struct.Memory** %MEMORY
  %loadMem_4b0e97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10552 = getelementptr inbounds %struct.GPR, %struct.GPR* %10551, i32 0, i32 33
  %10553 = getelementptr inbounds %struct.Reg, %struct.Reg* %10552, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %10553 to i64*
  %10554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10555 = getelementptr inbounds %struct.GPR, %struct.GPR* %10554, i32 0, i32 5
  %10556 = getelementptr inbounds %struct.Reg, %struct.Reg* %10555, i32 0, i32 0
  %10557 = bitcast %union.anon* %10556 to %struct.anon.2*
  %CL.i1151 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10557, i32 0, i32 0
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10559 = getelementptr inbounds %struct.GPR, %struct.GPR* %10558, i32 0, i32 7
  %10560 = getelementptr inbounds %struct.Reg, %struct.Reg* %10559, i32 0, i32 0
  %RDX.i1152 = bitcast %union.anon* %10560 to i64*
  %10561 = load i64, i64* %RDX.i1152
  %10562 = load i8, i8* %CL.i1151
  %10563 = zext i8 %10562 to i64
  %10564 = load i64, i64* %PC.i1150
  %10565 = add i64 %10564, 2
  store i64 %10565, i64* %PC.i1150
  %10566 = trunc i64 %10563 to i5
  switch i5 %10566, label %10573 [
    i5 0, label %routine_shll__cl___edx.exit1153
    i5 1, label %10567
  ]

; <label>:10567:                                  ; preds = %routine_shll__cl___edx.exit1179
  %10568 = trunc i64 %10561 to i32
  %10569 = shl i32 %10568, 1
  %10570 = icmp slt i32 %10568, 0
  %10571 = icmp slt i32 %10569, 0
  %10572 = xor i1 %10570, %10571
  br label %10582

; <label>:10573:                                  ; preds = %routine_shll__cl___edx.exit1179
  %10574 = and i64 %10563, 31
  %10575 = add i64 %10574, 4294967295
  %10576 = and i64 %10561, 4294967295
  %10577 = and i64 %10575, 4294967295
  %10578 = shl i64 %10576, %10577
  %10579 = trunc i64 %10578 to i32
  %10580 = icmp slt i32 %10579, 0
  %10581 = shl i32 %10579, 1
  br label %10582

; <label>:10582:                                  ; preds = %10573, %10567
  %10583 = phi i1 [ %10570, %10567 ], [ %10580, %10573 ]
  %10584 = phi i1 [ %10572, %10567 ], [ false, %10573 ]
  %10585 = phi i32 [ %10569, %10567 ], [ %10581, %10573 ]
  %10586 = zext i32 %10585 to i64
  store i64 %10586, i64* %RDX.i1152, align 8
  %10587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10588 = zext i1 %10583 to i8
  store i8 %10588, i8* %10587, align 1
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10590 = and i32 %10585, 254
  %10591 = call i32 @llvm.ctpop.i32(i32 %10590)
  %10592 = trunc i32 %10591 to i8
  %10593 = and i8 %10592, 1
  %10594 = xor i8 %10593, 1
  store i8 %10594, i8* %10589, align 1
  %10595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10595, align 1
  %10596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10597 = icmp eq i32 %10585, 0
  %10598 = zext i1 %10597 to i8
  store i8 %10598, i8* %10596, align 1
  %10599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10600 = lshr i32 %10585, 31
  %10601 = trunc i32 %10600 to i8
  store i8 %10601, i8* %10599, align 1
  %10602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10603 = zext i1 %10584 to i8
  store i8 %10603, i8* %10602, align 1
  br label %routine_shll__cl___edx.exit1153

routine_shll__cl___edx.exit1153:                  ; preds = %routine_shll__cl___edx.exit1179, %10582
  store %struct.Memory* %loadMem_4b0e97, %struct.Memory** %MEMORY
  %loadMem_4b0e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10605 = getelementptr inbounds %struct.GPR, %struct.GPR* %10604, i32 0, i32 33
  %10606 = getelementptr inbounds %struct.Reg, %struct.Reg* %10605, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %10606 to i64*
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10608 = getelementptr inbounds %struct.GPR, %struct.GPR* %10607, i32 0, i32 9
  %10609 = getelementptr inbounds %struct.Reg, %struct.Reg* %10608, i32 0, i32 0
  %RSI.i1149 = bitcast %union.anon* %10609 to i64*
  %10610 = load i64, i64* %PC.i1148
  %10611 = add i64 %10610, 8
  store i64 %10611, i64* %PC.i1148
  %10612 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %10612, i64* %RSI.i1149, align 8
  store %struct.Memory* %loadMem_4b0e99, %struct.Memory** %MEMORY
  %loadMem_4b0ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 33
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %10615 to i64*
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10617 = getelementptr inbounds %struct.GPR, %struct.GPR* %10616, i32 0, i32 11
  %10618 = getelementptr inbounds %struct.Reg, %struct.Reg* %10617, i32 0, i32 0
  %RDI.i1146 = bitcast %union.anon* %10618 to i64*
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10620 = getelementptr inbounds %struct.GPR, %struct.GPR* %10619, i32 0, i32 15
  %10621 = getelementptr inbounds %struct.Reg, %struct.Reg* %10620, i32 0, i32 0
  %RBP.i1147 = bitcast %union.anon* %10621 to i64*
  %10622 = load i64, i64* %RBP.i1147
  %10623 = sub i64 %10622, 35396
  %10624 = load i64, i64* %PC.i1145
  %10625 = add i64 %10624, 7
  store i64 %10625, i64* %PC.i1145
  %10626 = inttoptr i64 %10623 to i32*
  %10627 = load i32, i32* %10626
  %10628 = sext i32 %10627 to i64
  store i64 %10628, i64* %RDI.i1146, align 8
  store %struct.Memory* %loadMem_4b0ea1, %struct.Memory** %MEMORY
  %loadMem_4b0ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10630 = getelementptr inbounds %struct.GPR, %struct.GPR* %10629, i32 0, i32 33
  %10631 = getelementptr inbounds %struct.Reg, %struct.Reg* %10630, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %10631 to i64*
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 9
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %RSI.i1143 = bitcast %union.anon* %10634 to i64*
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 11
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %RDI.i1144 = bitcast %union.anon* %10637 to i64*
  %10638 = load i64, i64* %RSI.i1143
  %10639 = load i64, i64* %RDI.i1144
  %10640 = mul i64 %10639, 8
  %10641 = add i64 %10640, %10638
  %10642 = load i64, i64* %PC.i1142
  %10643 = add i64 %10642, 4
  store i64 %10643, i64* %PC.i1142
  %10644 = inttoptr i64 %10641 to i64*
  %10645 = load i64, i64* %10644
  store i64 %10645, i64* %RSI.i1143, align 8
  store %struct.Memory* %loadMem_4b0ea8, %struct.Memory** %MEMORY
  %loadMem_4b0eac = load %struct.Memory*, %struct.Memory** %MEMORY
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10647 = getelementptr inbounds %struct.GPR, %struct.GPR* %10646, i32 0, i32 33
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %10648 to i64*
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10650 = getelementptr inbounds %struct.GPR, %struct.GPR* %10649, i32 0, i32 11
  %10651 = getelementptr inbounds %struct.Reg, %struct.Reg* %10650, i32 0, i32 0
  %RDI.i1140 = bitcast %union.anon* %10651 to i64*
  %10652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10653 = getelementptr inbounds %struct.GPR, %struct.GPR* %10652, i32 0, i32 15
  %10654 = getelementptr inbounds %struct.Reg, %struct.Reg* %10653, i32 0, i32 0
  %RBP.i1141 = bitcast %union.anon* %10654 to i64*
  %10655 = load i64, i64* %RBP.i1141
  %10656 = sub i64 %10655, 36
  %10657 = load i64, i64* %PC.i1139
  %10658 = add i64 %10657, 4
  store i64 %10658, i64* %PC.i1139
  %10659 = inttoptr i64 %10656 to i32*
  %10660 = load i32, i32* %10659
  %10661 = sext i32 %10660 to i64
  store i64 %10661, i64* %RDI.i1140, align 8
  store %struct.Memory* %loadMem_4b0eac, %struct.Memory** %MEMORY
  %loadMem_4b0eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10663 = getelementptr inbounds %struct.GPR, %struct.GPR* %10662, i32 0, i32 33
  %10664 = getelementptr inbounds %struct.Reg, %struct.Reg* %10663, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %10664 to i64*
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10666 = getelementptr inbounds %struct.GPR, %struct.GPR* %10665, i32 0, i32 9
  %10667 = getelementptr inbounds %struct.Reg, %struct.Reg* %10666, i32 0, i32 0
  %RSI.i1137 = bitcast %union.anon* %10667 to i64*
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10669 = getelementptr inbounds %struct.GPR, %struct.GPR* %10668, i32 0, i32 11
  %10670 = getelementptr inbounds %struct.Reg, %struct.Reg* %10669, i32 0, i32 0
  %RDI.i1138 = bitcast %union.anon* %10670 to i64*
  %10671 = load i64, i64* %RSI.i1137
  %10672 = load i64, i64* %RDI.i1138
  %10673 = mul i64 %10672, 8
  %10674 = add i64 %10673, %10671
  %10675 = load i64, i64* %PC.i1136
  %10676 = add i64 %10675, 4
  store i64 %10676, i64* %PC.i1136
  %10677 = inttoptr i64 %10674 to i64*
  %10678 = load i64, i64* %10677
  store i64 %10678, i64* %RSI.i1137, align 8
  store %struct.Memory* %loadMem_4b0eb0, %struct.Memory** %MEMORY
  %loadMem_4b0eb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10680 = getelementptr inbounds %struct.GPR, %struct.GPR* %10679, i32 0, i32 33
  %10681 = getelementptr inbounds %struct.Reg, %struct.Reg* %10680, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %10681 to i64*
  %10682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10683 = getelementptr inbounds %struct.GPR, %struct.GPR* %10682, i32 0, i32 7
  %10684 = getelementptr inbounds %struct.Reg, %struct.Reg* %10683, i32 0, i32 0
  %EDX.i1134 = bitcast %union.anon* %10684 to i32*
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10686 = getelementptr inbounds %struct.GPR, %struct.GPR* %10685, i32 0, i32 9
  %10687 = getelementptr inbounds %struct.Reg, %struct.Reg* %10686, i32 0, i32 0
  %RSI.i1135 = bitcast %union.anon* %10687 to i64*
  %10688 = load i64, i64* %RSI.i1135
  %10689 = add i64 %10688, 4
  %10690 = load i32, i32* %EDX.i1134
  %10691 = zext i32 %10690 to i64
  %10692 = load i64, i64* %PC.i1133
  %10693 = add i64 %10692, 3
  store i64 %10693, i64* %PC.i1133
  %10694 = inttoptr i64 %10689 to i32*
  store i32 %10690, i32* %10694
  store %struct.Memory* %loadMem_4b0eb4, %struct.Memory** %MEMORY
  %loadMem_4b0eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10696 = getelementptr inbounds %struct.GPR, %struct.GPR* %10695, i32 0, i32 33
  %10697 = getelementptr inbounds %struct.Reg, %struct.Reg* %10696, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %10697 to i64*
  %10698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10699 = getelementptr inbounds %struct.GPR, %struct.GPR* %10698, i32 0, i32 5
  %10700 = getelementptr inbounds %struct.Reg, %struct.Reg* %10699, i32 0, i32 0
  %RCX.i1132 = bitcast %union.anon* %10700 to i64*
  %10701 = load i64, i64* %PC.i1131
  %10702 = add i64 %10701, 7
  store i64 %10702, i64* %PC.i1131
  %10703 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %10704 = zext i32 %10703 to i64
  store i64 %10704, i64* %RCX.i1132, align 8
  store %struct.Memory* %loadMem_4b0eb7, %struct.Memory** %MEMORY
  %loadMem_4b0ebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10706 = getelementptr inbounds %struct.GPR, %struct.GPR* %10705, i32 0, i32 33
  %10707 = getelementptr inbounds %struct.Reg, %struct.Reg* %10706, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %10707 to i64*
  %10708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10709 = getelementptr inbounds %struct.GPR, %struct.GPR* %10708, i32 0, i32 5
  %10710 = getelementptr inbounds %struct.Reg, %struct.Reg* %10709, i32 0, i32 0
  %10711 = bitcast %union.anon* %10710 to %struct.anon.2*
  %CL.i1128 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10711, i32 0, i32 0
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10713 = getelementptr inbounds %struct.GPR, %struct.GPR* %10712, i32 0, i32 1
  %10714 = getelementptr inbounds %struct.Reg, %struct.Reg* %10713, i32 0, i32 0
  %RAX.i1129 = bitcast %union.anon* %10714 to i64*
  %10715 = load i64, i64* %RAX.i1129
  %10716 = load i8, i8* %CL.i1128
  %10717 = zext i8 %10716 to i64
  %10718 = load i64, i64* %PC.i1127
  %10719 = add i64 %10718, 2
  store i64 %10719, i64* %PC.i1127
  %10720 = trunc i64 %10717 to i5
  switch i5 %10720, label %10727 [
    i5 0, label %routine_shll__cl___eax.exit1130
    i5 1, label %10721
  ]

; <label>:10721:                                  ; preds = %routine_shll__cl___edx.exit1153
  %10722 = trunc i64 %10715 to i32
  %10723 = shl i32 %10722, 1
  %10724 = icmp slt i32 %10722, 0
  %10725 = icmp slt i32 %10723, 0
  %10726 = xor i1 %10724, %10725
  br label %10736

; <label>:10727:                                  ; preds = %routine_shll__cl___edx.exit1153
  %10728 = and i64 %10717, 31
  %10729 = add i64 %10728, 4294967295
  %10730 = and i64 %10715, 4294967295
  %10731 = and i64 %10729, 4294967295
  %10732 = shl i64 %10730, %10731
  %10733 = trunc i64 %10732 to i32
  %10734 = icmp slt i32 %10733, 0
  %10735 = shl i32 %10733, 1
  br label %10736

; <label>:10736:                                  ; preds = %10727, %10721
  %10737 = phi i1 [ %10724, %10721 ], [ %10734, %10727 ]
  %10738 = phi i1 [ %10726, %10721 ], [ false, %10727 ]
  %10739 = phi i32 [ %10723, %10721 ], [ %10735, %10727 ]
  %10740 = zext i32 %10739 to i64
  store i64 %10740, i64* %RAX.i1129, align 8
  %10741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10742 = zext i1 %10737 to i8
  store i8 %10742, i8* %10741, align 1
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10744 = and i32 %10739, 254
  %10745 = call i32 @llvm.ctpop.i32(i32 %10744)
  %10746 = trunc i32 %10745 to i8
  %10747 = and i8 %10746, 1
  %10748 = xor i8 %10747, 1
  store i8 %10748, i8* %10743, align 1
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10749, align 1
  %10750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10751 = icmp eq i32 %10739, 0
  %10752 = zext i1 %10751 to i8
  store i8 %10752, i8* %10750, align 1
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10754 = lshr i32 %10739, 31
  %10755 = trunc i32 %10754 to i8
  store i8 %10755, i8* %10753, align 1
  %10756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10757 = zext i1 %10738 to i8
  store i8 %10757, i8* %10756, align 1
  br label %routine_shll__cl___eax.exit1130

routine_shll__cl___eax.exit1130:                  ; preds = %routine_shll__cl___edx.exit1153, %10736
  store %struct.Memory* %loadMem_4b0ebe, %struct.Memory** %MEMORY
  %loadMem_4b0ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10759 = getelementptr inbounds %struct.GPR, %struct.GPR* %10758, i32 0, i32 33
  %10760 = getelementptr inbounds %struct.Reg, %struct.Reg* %10759, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %10760 to i64*
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10762 = getelementptr inbounds %struct.GPR, %struct.GPR* %10761, i32 0, i32 9
  %10763 = getelementptr inbounds %struct.Reg, %struct.Reg* %10762, i32 0, i32 0
  %RSI.i1126 = bitcast %union.anon* %10763 to i64*
  %10764 = load i64, i64* %PC.i1125
  %10765 = add i64 %10764, 8
  store i64 %10765, i64* %PC.i1125
  %10766 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %10766, i64* %RSI.i1126, align 8
  store %struct.Memory* %loadMem_4b0ec0, %struct.Memory** %MEMORY
  %loadMem_4b0ec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10768 = getelementptr inbounds %struct.GPR, %struct.GPR* %10767, i32 0, i32 33
  %10769 = getelementptr inbounds %struct.Reg, %struct.Reg* %10768, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %10769 to i64*
  %10770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10771 = getelementptr inbounds %struct.GPR, %struct.GPR* %10770, i32 0, i32 11
  %10772 = getelementptr inbounds %struct.Reg, %struct.Reg* %10771, i32 0, i32 0
  %RDI.i1123 = bitcast %union.anon* %10772 to i64*
  %10773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10774 = getelementptr inbounds %struct.GPR, %struct.GPR* %10773, i32 0, i32 15
  %10775 = getelementptr inbounds %struct.Reg, %struct.Reg* %10774, i32 0, i32 0
  %RBP.i1124 = bitcast %union.anon* %10775 to i64*
  %10776 = load i64, i64* %RBP.i1124
  %10777 = sub i64 %10776, 35396
  %10778 = load i64, i64* %PC.i1122
  %10779 = add i64 %10778, 7
  store i64 %10779, i64* %PC.i1122
  %10780 = inttoptr i64 %10777 to i32*
  %10781 = load i32, i32* %10780
  %10782 = sext i32 %10781 to i64
  store i64 %10782, i64* %RDI.i1123, align 8
  store %struct.Memory* %loadMem_4b0ec8, %struct.Memory** %MEMORY
  %loadMem_4b0ecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10784 = getelementptr inbounds %struct.GPR, %struct.GPR* %10783, i32 0, i32 33
  %10785 = getelementptr inbounds %struct.Reg, %struct.Reg* %10784, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %10785 to i64*
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10787 = getelementptr inbounds %struct.GPR, %struct.GPR* %10786, i32 0, i32 9
  %10788 = getelementptr inbounds %struct.Reg, %struct.Reg* %10787, i32 0, i32 0
  %RSI.i1120 = bitcast %union.anon* %10788 to i64*
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10790 = getelementptr inbounds %struct.GPR, %struct.GPR* %10789, i32 0, i32 11
  %10791 = getelementptr inbounds %struct.Reg, %struct.Reg* %10790, i32 0, i32 0
  %RDI.i1121 = bitcast %union.anon* %10791 to i64*
  %10792 = load i64, i64* %RSI.i1120
  %10793 = load i64, i64* %RDI.i1121
  %10794 = mul i64 %10793, 8
  %10795 = add i64 %10794, %10792
  %10796 = load i64, i64* %PC.i1119
  %10797 = add i64 %10796, 4
  store i64 %10797, i64* %PC.i1119
  %10798 = inttoptr i64 %10795 to i64*
  %10799 = load i64, i64* %10798
  store i64 %10799, i64* %RSI.i1120, align 8
  store %struct.Memory* %loadMem_4b0ecf, %struct.Memory** %MEMORY
  %loadMem_4b0ed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10801 = getelementptr inbounds %struct.GPR, %struct.GPR* %10800, i32 0, i32 33
  %10802 = getelementptr inbounds %struct.Reg, %struct.Reg* %10801, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %10802 to i64*
  %10803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10804 = getelementptr inbounds %struct.GPR, %struct.GPR* %10803, i32 0, i32 11
  %10805 = getelementptr inbounds %struct.Reg, %struct.Reg* %10804, i32 0, i32 0
  %RDI.i1117 = bitcast %union.anon* %10805 to i64*
  %10806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10807 = getelementptr inbounds %struct.GPR, %struct.GPR* %10806, i32 0, i32 15
  %10808 = getelementptr inbounds %struct.Reg, %struct.Reg* %10807, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %10808 to i64*
  %10809 = load i64, i64* %RBP.i1118
  %10810 = sub i64 %10809, 36
  %10811 = load i64, i64* %PC.i1116
  %10812 = add i64 %10811, 4
  store i64 %10812, i64* %PC.i1116
  %10813 = inttoptr i64 %10810 to i32*
  %10814 = load i32, i32* %10813
  %10815 = sext i32 %10814 to i64
  store i64 %10815, i64* %RDI.i1117, align 8
  store %struct.Memory* %loadMem_4b0ed3, %struct.Memory** %MEMORY
  %loadMem_4b0ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10817 = getelementptr inbounds %struct.GPR, %struct.GPR* %10816, i32 0, i32 33
  %10818 = getelementptr inbounds %struct.Reg, %struct.Reg* %10817, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %10818 to i64*
  %10819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10820 = getelementptr inbounds %struct.GPR, %struct.GPR* %10819, i32 0, i32 9
  %10821 = getelementptr inbounds %struct.Reg, %struct.Reg* %10820, i32 0, i32 0
  %RSI.i1114 = bitcast %union.anon* %10821 to i64*
  %10822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10823 = getelementptr inbounds %struct.GPR, %struct.GPR* %10822, i32 0, i32 11
  %10824 = getelementptr inbounds %struct.Reg, %struct.Reg* %10823, i32 0, i32 0
  %RDI.i1115 = bitcast %union.anon* %10824 to i64*
  %10825 = load i64, i64* %RSI.i1114
  %10826 = load i64, i64* %RDI.i1115
  %10827 = mul i64 %10826, 8
  %10828 = add i64 %10827, %10825
  %10829 = load i64, i64* %PC.i1113
  %10830 = add i64 %10829, 4
  store i64 %10830, i64* %PC.i1113
  %10831 = inttoptr i64 %10828 to i64*
  %10832 = load i64, i64* %10831
  store i64 %10832, i64* %RSI.i1114, align 8
  store %struct.Memory* %loadMem_4b0ed7, %struct.Memory** %MEMORY
  %loadMem_4b0edb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10834 = getelementptr inbounds %struct.GPR, %struct.GPR* %10833, i32 0, i32 33
  %10835 = getelementptr inbounds %struct.Reg, %struct.Reg* %10834, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %10835 to i64*
  %10836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10837 = getelementptr inbounds %struct.GPR, %struct.GPR* %10836, i32 0, i32 1
  %10838 = getelementptr inbounds %struct.Reg, %struct.Reg* %10837, i32 0, i32 0
  %EAX.i1111 = bitcast %union.anon* %10838 to i32*
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10840 = getelementptr inbounds %struct.GPR, %struct.GPR* %10839, i32 0, i32 9
  %10841 = getelementptr inbounds %struct.Reg, %struct.Reg* %10840, i32 0, i32 0
  %RSI.i1112 = bitcast %union.anon* %10841 to i64*
  %10842 = load i64, i64* %RSI.i1112
  %10843 = add i64 %10842, 8
  %10844 = load i32, i32* %EAX.i1111
  %10845 = zext i32 %10844 to i64
  %10846 = load i64, i64* %PC.i1110
  %10847 = add i64 %10846, 3
  store i64 %10847, i64* %PC.i1110
  %10848 = inttoptr i64 %10843 to i32*
  store i32 %10844, i32* %10848
  store %struct.Memory* %loadMem_4b0edb, %struct.Memory** %MEMORY
  %loadMem_4b0ede = load %struct.Memory*, %struct.Memory** %MEMORY
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10850 = getelementptr inbounds %struct.GPR, %struct.GPR* %10849, i32 0, i32 33
  %10851 = getelementptr inbounds %struct.Reg, %struct.Reg* %10850, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %10851 to i64*
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10853 = getelementptr inbounds %struct.GPR, %struct.GPR* %10852, i32 0, i32 9
  %10854 = getelementptr inbounds %struct.Reg, %struct.Reg* %10853, i32 0, i32 0
  %RSI.i1109 = bitcast %union.anon* %10854 to i64*
  %10855 = load i64, i64* %PC.i1108
  %10856 = add i64 %10855, 8
  store i64 %10856, i64* %PC.i1108
  %10857 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %10857, i64* %RSI.i1109, align 8
  store %struct.Memory* %loadMem_4b0ede, %struct.Memory** %MEMORY
  %loadMem_4b0ee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10859 = getelementptr inbounds %struct.GPR, %struct.GPR* %10858, i32 0, i32 33
  %10860 = getelementptr inbounds %struct.Reg, %struct.Reg* %10859, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %10860 to i64*
  %10861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10862 = getelementptr inbounds %struct.GPR, %struct.GPR* %10861, i32 0, i32 11
  %10863 = getelementptr inbounds %struct.Reg, %struct.Reg* %10862, i32 0, i32 0
  %RDI.i1106 = bitcast %union.anon* %10863 to i64*
  %10864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10865 = getelementptr inbounds %struct.GPR, %struct.GPR* %10864, i32 0, i32 15
  %10866 = getelementptr inbounds %struct.Reg, %struct.Reg* %10865, i32 0, i32 0
  %RBP.i1107 = bitcast %union.anon* %10866 to i64*
  %10867 = load i64, i64* %RBP.i1107
  %10868 = sub i64 %10867, 35396
  %10869 = load i64, i64* %PC.i1105
  %10870 = add i64 %10869, 7
  store i64 %10870, i64* %PC.i1105
  %10871 = inttoptr i64 %10868 to i32*
  %10872 = load i32, i32* %10871
  %10873 = sext i32 %10872 to i64
  store i64 %10873, i64* %RDI.i1106, align 8
  store %struct.Memory* %loadMem_4b0ee6, %struct.Memory** %MEMORY
  %loadMem_4b0eed = load %struct.Memory*, %struct.Memory** %MEMORY
  %10874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10875 = getelementptr inbounds %struct.GPR, %struct.GPR* %10874, i32 0, i32 33
  %10876 = getelementptr inbounds %struct.Reg, %struct.Reg* %10875, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %10876 to i64*
  %10877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10878 = getelementptr inbounds %struct.GPR, %struct.GPR* %10877, i32 0, i32 9
  %10879 = getelementptr inbounds %struct.Reg, %struct.Reg* %10878, i32 0, i32 0
  %RSI.i1103 = bitcast %union.anon* %10879 to i64*
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10881 = getelementptr inbounds %struct.GPR, %struct.GPR* %10880, i32 0, i32 11
  %10882 = getelementptr inbounds %struct.Reg, %struct.Reg* %10881, i32 0, i32 0
  %RDI.i1104 = bitcast %union.anon* %10882 to i64*
  %10883 = load i64, i64* %RSI.i1103
  %10884 = load i64, i64* %RDI.i1104
  %10885 = mul i64 %10884, 8
  %10886 = add i64 %10885, %10883
  %10887 = load i64, i64* %PC.i1102
  %10888 = add i64 %10887, 4
  store i64 %10888, i64* %PC.i1102
  %10889 = inttoptr i64 %10886 to i64*
  %10890 = load i64, i64* %10889
  store i64 %10890, i64* %RSI.i1103, align 8
  store %struct.Memory* %loadMem_4b0eed, %struct.Memory** %MEMORY
  %loadMem_4b0ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10892 = getelementptr inbounds %struct.GPR, %struct.GPR* %10891, i32 0, i32 33
  %10893 = getelementptr inbounds %struct.Reg, %struct.Reg* %10892, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %10893 to i64*
  %10894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10895 = getelementptr inbounds %struct.GPR, %struct.GPR* %10894, i32 0, i32 11
  %10896 = getelementptr inbounds %struct.Reg, %struct.Reg* %10895, i32 0, i32 0
  %RDI.i1100 = bitcast %union.anon* %10896 to i64*
  %10897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10898 = getelementptr inbounds %struct.GPR, %struct.GPR* %10897, i32 0, i32 15
  %10899 = getelementptr inbounds %struct.Reg, %struct.Reg* %10898, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %10899 to i64*
  %10900 = load i64, i64* %RBP.i1101
  %10901 = sub i64 %10900, 36
  %10902 = load i64, i64* %PC.i1099
  %10903 = add i64 %10902, 4
  store i64 %10903, i64* %PC.i1099
  %10904 = inttoptr i64 %10901 to i32*
  %10905 = load i32, i32* %10904
  %10906 = sext i32 %10905 to i64
  store i64 %10906, i64* %RDI.i1100, align 8
  store %struct.Memory* %loadMem_4b0ef1, %struct.Memory** %MEMORY
  %loadMem_4b0ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10908 = getelementptr inbounds %struct.GPR, %struct.GPR* %10907, i32 0, i32 33
  %10909 = getelementptr inbounds %struct.Reg, %struct.Reg* %10908, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %10909 to i64*
  %10910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10911 = getelementptr inbounds %struct.GPR, %struct.GPR* %10910, i32 0, i32 9
  %10912 = getelementptr inbounds %struct.Reg, %struct.Reg* %10911, i32 0, i32 0
  %RSI.i1097 = bitcast %union.anon* %10912 to i64*
  %10913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10914 = getelementptr inbounds %struct.GPR, %struct.GPR* %10913, i32 0, i32 11
  %10915 = getelementptr inbounds %struct.Reg, %struct.Reg* %10914, i32 0, i32 0
  %RDI.i1098 = bitcast %union.anon* %10915 to i64*
  %10916 = load i64, i64* %RSI.i1097
  %10917 = load i64, i64* %RDI.i1098
  %10918 = mul i64 %10917, 8
  %10919 = add i64 %10918, %10916
  %10920 = load i64, i64* %PC.i1096
  %10921 = add i64 %10920, 4
  store i64 %10921, i64* %PC.i1096
  %10922 = inttoptr i64 %10919 to i64*
  %10923 = load i64, i64* %10922
  store i64 %10923, i64* %RSI.i1097, align 8
  store %struct.Memory* %loadMem_4b0ef5, %struct.Memory** %MEMORY
  %loadMem_4b0ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10925 = getelementptr inbounds %struct.GPR, %struct.GPR* %10924, i32 0, i32 33
  %10926 = getelementptr inbounds %struct.Reg, %struct.Reg* %10925, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %10926 to i64*
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10928 = getelementptr inbounds %struct.GPR, %struct.GPR* %10927, i32 0, i32 9
  %10929 = getelementptr inbounds %struct.Reg, %struct.Reg* %10928, i32 0, i32 0
  %RSI.i1095 = bitcast %union.anon* %10929 to i64*
  %10930 = load i64, i64* %RSI.i1095
  %10931 = load i64, i64* %PC.i1094
  %10932 = add i64 %10931, 6
  store i64 %10932, i64* %PC.i1094
  %10933 = inttoptr i64 %10930 to i32*
  store i32 0, i32* %10933
  store %struct.Memory* %loadMem_4b0ef9, %struct.Memory** %MEMORY
  %loadMem_4b0eff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10935 = getelementptr inbounds %struct.GPR, %struct.GPR* %10934, i32 0, i32 33
  %10936 = getelementptr inbounds %struct.Reg, %struct.Reg* %10935, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %10936 to i64*
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10938 = getelementptr inbounds %struct.GPR, %struct.GPR* %10937, i32 0, i32 9
  %10939 = getelementptr inbounds %struct.Reg, %struct.Reg* %10938, i32 0, i32 0
  %RSI.i1093 = bitcast %union.anon* %10939 to i64*
  %10940 = load i64, i64* %PC.i1092
  %10941 = add i64 %10940, 8
  store i64 %10941, i64* %PC.i1092
  %10942 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %10942, i64* %RSI.i1093, align 8
  store %struct.Memory* %loadMem_4b0eff, %struct.Memory** %MEMORY
  %loadMem_4b0f07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10944 = getelementptr inbounds %struct.GPR, %struct.GPR* %10943, i32 0, i32 33
  %10945 = getelementptr inbounds %struct.Reg, %struct.Reg* %10944, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %10945 to i64*
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10947 = getelementptr inbounds %struct.GPR, %struct.GPR* %10946, i32 0, i32 11
  %10948 = getelementptr inbounds %struct.Reg, %struct.Reg* %10947, i32 0, i32 0
  %RDI.i1090 = bitcast %union.anon* %10948 to i64*
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 15
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %RBP.i1091 = bitcast %union.anon* %10951 to i64*
  %10952 = load i64, i64* %RBP.i1091
  %10953 = sub i64 %10952, 35396
  %10954 = load i64, i64* %PC.i1089
  %10955 = add i64 %10954, 7
  store i64 %10955, i64* %PC.i1089
  %10956 = inttoptr i64 %10953 to i32*
  %10957 = load i32, i32* %10956
  %10958 = sext i32 %10957 to i64
  store i64 %10958, i64* %RDI.i1090, align 8
  store %struct.Memory* %loadMem_4b0f07, %struct.Memory** %MEMORY
  %loadMem_4b0f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10960 = getelementptr inbounds %struct.GPR, %struct.GPR* %10959, i32 0, i32 33
  %10961 = getelementptr inbounds %struct.Reg, %struct.Reg* %10960, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %10961 to i64*
  %10962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10963 = getelementptr inbounds %struct.GPR, %struct.GPR* %10962, i32 0, i32 9
  %10964 = getelementptr inbounds %struct.Reg, %struct.Reg* %10963, i32 0, i32 0
  %RSI.i1087 = bitcast %union.anon* %10964 to i64*
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 11
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %RDI.i1088 = bitcast %union.anon* %10967 to i64*
  %10968 = load i64, i64* %RSI.i1087
  %10969 = load i64, i64* %RDI.i1088
  %10970 = mul i64 %10969, 8
  %10971 = add i64 %10970, %10968
  %10972 = load i64, i64* %PC.i1086
  %10973 = add i64 %10972, 4
  store i64 %10973, i64* %PC.i1086
  %10974 = inttoptr i64 %10971 to i64*
  %10975 = load i64, i64* %10974
  store i64 %10975, i64* %RSI.i1087, align 8
  store %struct.Memory* %loadMem_4b0f0e, %struct.Memory** %MEMORY
  %loadMem_4b0f12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10977 = getelementptr inbounds %struct.GPR, %struct.GPR* %10976, i32 0, i32 33
  %10978 = getelementptr inbounds %struct.Reg, %struct.Reg* %10977, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %10978 to i64*
  %10979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10980 = getelementptr inbounds %struct.GPR, %struct.GPR* %10979, i32 0, i32 11
  %10981 = getelementptr inbounds %struct.Reg, %struct.Reg* %10980, i32 0, i32 0
  %RDI.i1084 = bitcast %union.anon* %10981 to i64*
  %10982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10983 = getelementptr inbounds %struct.GPR, %struct.GPR* %10982, i32 0, i32 15
  %10984 = getelementptr inbounds %struct.Reg, %struct.Reg* %10983, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %10984 to i64*
  %10985 = load i64, i64* %RBP.i1085
  %10986 = sub i64 %10985, 36
  %10987 = load i64, i64* %PC.i1083
  %10988 = add i64 %10987, 4
  store i64 %10988, i64* %PC.i1083
  %10989 = inttoptr i64 %10986 to i32*
  %10990 = load i32, i32* %10989
  %10991 = sext i32 %10990 to i64
  store i64 %10991, i64* %RDI.i1084, align 8
  store %struct.Memory* %loadMem_4b0f12, %struct.Memory** %MEMORY
  %loadMem_4b0f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10993 = getelementptr inbounds %struct.GPR, %struct.GPR* %10992, i32 0, i32 33
  %10994 = getelementptr inbounds %struct.Reg, %struct.Reg* %10993, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %10994 to i64*
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10996 = getelementptr inbounds %struct.GPR, %struct.GPR* %10995, i32 0, i32 9
  %10997 = getelementptr inbounds %struct.Reg, %struct.Reg* %10996, i32 0, i32 0
  %RSI.i1081 = bitcast %union.anon* %10997 to i64*
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10999 = getelementptr inbounds %struct.GPR, %struct.GPR* %10998, i32 0, i32 11
  %11000 = getelementptr inbounds %struct.Reg, %struct.Reg* %10999, i32 0, i32 0
  %RDI.i1082 = bitcast %union.anon* %11000 to i64*
  %11001 = load i64, i64* %RSI.i1081
  %11002 = load i64, i64* %RDI.i1082
  %11003 = mul i64 %11002, 8
  %11004 = add i64 %11003, %11001
  %11005 = load i64, i64* %PC.i1080
  %11006 = add i64 %11005, 4
  store i64 %11006, i64* %PC.i1080
  %11007 = inttoptr i64 %11004 to i64*
  %11008 = load i64, i64* %11007
  store i64 %11008, i64* %RSI.i1081, align 8
  store %struct.Memory* %loadMem_4b0f16, %struct.Memory** %MEMORY
  %loadMem_4b0f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11010 = getelementptr inbounds %struct.GPR, %struct.GPR* %11009, i32 0, i32 33
  %11011 = getelementptr inbounds %struct.Reg, %struct.Reg* %11010, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %11011 to i64*
  %11012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11013 = getelementptr inbounds %struct.GPR, %struct.GPR* %11012, i32 0, i32 9
  %11014 = getelementptr inbounds %struct.Reg, %struct.Reg* %11013, i32 0, i32 0
  %RSI.i1079 = bitcast %union.anon* %11014 to i64*
  %11015 = load i64, i64* %RSI.i1079
  %11016 = add i64 %11015, 4
  %11017 = load i64, i64* %PC.i1078
  %11018 = add i64 %11017, 7
  store i64 %11018, i64* %PC.i1078
  %11019 = inttoptr i64 %11016 to i32*
  store i32 0, i32* %11019
  store %struct.Memory* %loadMem_4b0f1a, %struct.Memory** %MEMORY
  %loadMem_4b0f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11021 = getelementptr inbounds %struct.GPR, %struct.GPR* %11020, i32 0, i32 33
  %11022 = getelementptr inbounds %struct.Reg, %struct.Reg* %11021, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %11022 to i64*
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11024 = getelementptr inbounds %struct.GPR, %struct.GPR* %11023, i32 0, i32 9
  %11025 = getelementptr inbounds %struct.Reg, %struct.Reg* %11024, i32 0, i32 0
  %RSI.i1077 = bitcast %union.anon* %11025 to i64*
  %11026 = load i64, i64* %PC.i1076
  %11027 = add i64 %11026, 8
  store i64 %11027, i64* %PC.i1076
  %11028 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11028, i64* %RSI.i1077, align 8
  store %struct.Memory* %loadMem_4b0f21, %struct.Memory** %MEMORY
  %loadMem_4b0f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11030 = getelementptr inbounds %struct.GPR, %struct.GPR* %11029, i32 0, i32 33
  %11031 = getelementptr inbounds %struct.Reg, %struct.Reg* %11030, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %11031 to i64*
  %11032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11033 = getelementptr inbounds %struct.GPR, %struct.GPR* %11032, i32 0, i32 11
  %11034 = getelementptr inbounds %struct.Reg, %struct.Reg* %11033, i32 0, i32 0
  %RDI.i1074 = bitcast %union.anon* %11034 to i64*
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11036 = getelementptr inbounds %struct.GPR, %struct.GPR* %11035, i32 0, i32 15
  %11037 = getelementptr inbounds %struct.Reg, %struct.Reg* %11036, i32 0, i32 0
  %RBP.i1075 = bitcast %union.anon* %11037 to i64*
  %11038 = load i64, i64* %RBP.i1075
  %11039 = sub i64 %11038, 35396
  %11040 = load i64, i64* %PC.i1073
  %11041 = add i64 %11040, 7
  store i64 %11041, i64* %PC.i1073
  %11042 = inttoptr i64 %11039 to i32*
  %11043 = load i32, i32* %11042
  %11044 = sext i32 %11043 to i64
  store i64 %11044, i64* %RDI.i1074, align 8
  store %struct.Memory* %loadMem_4b0f29, %struct.Memory** %MEMORY
  %loadMem_4b0f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11046 = getelementptr inbounds %struct.GPR, %struct.GPR* %11045, i32 0, i32 33
  %11047 = getelementptr inbounds %struct.Reg, %struct.Reg* %11046, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %11047 to i64*
  %11048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11049 = getelementptr inbounds %struct.GPR, %struct.GPR* %11048, i32 0, i32 9
  %11050 = getelementptr inbounds %struct.Reg, %struct.Reg* %11049, i32 0, i32 0
  %RSI.i1071 = bitcast %union.anon* %11050 to i64*
  %11051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11052 = getelementptr inbounds %struct.GPR, %struct.GPR* %11051, i32 0, i32 11
  %11053 = getelementptr inbounds %struct.Reg, %struct.Reg* %11052, i32 0, i32 0
  %RDI.i1072 = bitcast %union.anon* %11053 to i64*
  %11054 = load i64, i64* %RSI.i1071
  %11055 = load i64, i64* %RDI.i1072
  %11056 = mul i64 %11055, 8
  %11057 = add i64 %11056, %11054
  %11058 = load i64, i64* %PC.i1070
  %11059 = add i64 %11058, 4
  store i64 %11059, i64* %PC.i1070
  %11060 = inttoptr i64 %11057 to i64*
  %11061 = load i64, i64* %11060
  store i64 %11061, i64* %RSI.i1071, align 8
  store %struct.Memory* %loadMem_4b0f30, %struct.Memory** %MEMORY
  %loadMem_4b0f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11063 = getelementptr inbounds %struct.GPR, %struct.GPR* %11062, i32 0, i32 33
  %11064 = getelementptr inbounds %struct.Reg, %struct.Reg* %11063, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %11064 to i64*
  %11065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11066 = getelementptr inbounds %struct.GPR, %struct.GPR* %11065, i32 0, i32 11
  %11067 = getelementptr inbounds %struct.Reg, %struct.Reg* %11066, i32 0, i32 0
  %RDI.i1068 = bitcast %union.anon* %11067 to i64*
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11069 = getelementptr inbounds %struct.GPR, %struct.GPR* %11068, i32 0, i32 15
  %11070 = getelementptr inbounds %struct.Reg, %struct.Reg* %11069, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %11070 to i64*
  %11071 = load i64, i64* %RBP.i1069
  %11072 = sub i64 %11071, 36
  %11073 = load i64, i64* %PC.i1067
  %11074 = add i64 %11073, 4
  store i64 %11074, i64* %PC.i1067
  %11075 = inttoptr i64 %11072 to i32*
  %11076 = load i32, i32* %11075
  %11077 = sext i32 %11076 to i64
  store i64 %11077, i64* %RDI.i1068, align 8
  store %struct.Memory* %loadMem_4b0f34, %struct.Memory** %MEMORY
  %loadMem_4b0f38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11079 = getelementptr inbounds %struct.GPR, %struct.GPR* %11078, i32 0, i32 33
  %11080 = getelementptr inbounds %struct.Reg, %struct.Reg* %11079, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %11080 to i64*
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11082 = getelementptr inbounds %struct.GPR, %struct.GPR* %11081, i32 0, i32 9
  %11083 = getelementptr inbounds %struct.Reg, %struct.Reg* %11082, i32 0, i32 0
  %RSI.i1065 = bitcast %union.anon* %11083 to i64*
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11085 = getelementptr inbounds %struct.GPR, %struct.GPR* %11084, i32 0, i32 11
  %11086 = getelementptr inbounds %struct.Reg, %struct.Reg* %11085, i32 0, i32 0
  %RDI.i1066 = bitcast %union.anon* %11086 to i64*
  %11087 = load i64, i64* %RSI.i1065
  %11088 = load i64, i64* %RDI.i1066
  %11089 = mul i64 %11088, 8
  %11090 = add i64 %11089, %11087
  %11091 = load i64, i64* %PC.i1064
  %11092 = add i64 %11091, 4
  store i64 %11092, i64* %PC.i1064
  %11093 = inttoptr i64 %11090 to i64*
  %11094 = load i64, i64* %11093
  store i64 %11094, i64* %RSI.i1065, align 8
  store %struct.Memory* %loadMem_4b0f38, %struct.Memory** %MEMORY
  %loadMem_4b0f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11096 = getelementptr inbounds %struct.GPR, %struct.GPR* %11095, i32 0, i32 33
  %11097 = getelementptr inbounds %struct.Reg, %struct.Reg* %11096, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %11097 to i64*
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11099 = getelementptr inbounds %struct.GPR, %struct.GPR* %11098, i32 0, i32 9
  %11100 = getelementptr inbounds %struct.Reg, %struct.Reg* %11099, i32 0, i32 0
  %RSI.i1063 = bitcast %union.anon* %11100 to i64*
  %11101 = load i64, i64* %RSI.i1063
  %11102 = add i64 %11101, 8
  %11103 = load i64, i64* %PC.i1062
  %11104 = add i64 %11103, 7
  store i64 %11104, i64* %PC.i1062
  %11105 = inttoptr i64 %11102 to i32*
  store i32 0, i32* %11105
  store %struct.Memory* %loadMem_4b0f3c, %struct.Memory** %MEMORY
  %loadMem_4b0f43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11107 = getelementptr inbounds %struct.GPR, %struct.GPR* %11106, i32 0, i32 33
  %11108 = getelementptr inbounds %struct.Reg, %struct.Reg* %11107, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %11108 to i64*
  %11109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11110 = getelementptr inbounds %struct.GPR, %struct.GPR* %11109, i32 0, i32 1
  %11111 = getelementptr inbounds %struct.Reg, %struct.Reg* %11110, i32 0, i32 0
  %RAX.i1060 = bitcast %union.anon* %11111 to i64*
  %11112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11113 = getelementptr inbounds %struct.GPR, %struct.GPR* %11112, i32 0, i32 15
  %11114 = getelementptr inbounds %struct.Reg, %struct.Reg* %11113, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %11114 to i64*
  %11115 = load i64, i64* %RBP.i1061
  %11116 = sub i64 %11115, 36
  %11117 = load i64, i64* %PC.i1059
  %11118 = add i64 %11117, 3
  store i64 %11118, i64* %PC.i1059
  %11119 = inttoptr i64 %11116 to i32*
  %11120 = load i32, i32* %11119
  %11121 = zext i32 %11120 to i64
  store i64 %11121, i64* %RAX.i1060, align 8
  store %struct.Memory* %loadMem_4b0f43, %struct.Memory** %MEMORY
  %loadMem_4b0f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11123 = getelementptr inbounds %struct.GPR, %struct.GPR* %11122, i32 0, i32 33
  %11124 = getelementptr inbounds %struct.Reg, %struct.Reg* %11123, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %11124 to i64*
  %11125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11126 = getelementptr inbounds %struct.GPR, %struct.GPR* %11125, i32 0, i32 1
  %11127 = getelementptr inbounds %struct.Reg, %struct.Reg* %11126, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %11127 to i64*
  %11128 = load i64, i64* %RAX.i1058
  %11129 = load i64, i64* %PC.i1057
  %11130 = add i64 %11129, 3
  store i64 %11130, i64* %PC.i1057
  %11131 = trunc i64 %11128 to i32
  %11132 = add i32 1, %11131
  %11133 = zext i32 %11132 to i64
  store i64 %11133, i64* %RAX.i1058, align 8
  %11134 = icmp ult i32 %11132, %11131
  %11135 = icmp ult i32 %11132, 1
  %11136 = or i1 %11134, %11135
  %11137 = zext i1 %11136 to i8
  %11138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11137, i8* %11138, align 1
  %11139 = and i32 %11132, 255
  %11140 = call i32 @llvm.ctpop.i32(i32 %11139)
  %11141 = trunc i32 %11140 to i8
  %11142 = and i8 %11141, 1
  %11143 = xor i8 %11142, 1
  %11144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11143, i8* %11144, align 1
  %11145 = xor i64 1, %11128
  %11146 = trunc i64 %11145 to i32
  %11147 = xor i32 %11146, %11132
  %11148 = lshr i32 %11147, 4
  %11149 = trunc i32 %11148 to i8
  %11150 = and i8 %11149, 1
  %11151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11150, i8* %11151, align 1
  %11152 = icmp eq i32 %11132, 0
  %11153 = zext i1 %11152 to i8
  %11154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11153, i8* %11154, align 1
  %11155 = lshr i32 %11132, 31
  %11156 = trunc i32 %11155 to i8
  %11157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11156, i8* %11157, align 1
  %11158 = lshr i32 %11131, 31
  %11159 = xor i32 %11155, %11158
  %11160 = add i32 %11159, %11155
  %11161 = icmp eq i32 %11160, 2
  %11162 = zext i1 %11161 to i8
  %11163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11162, i8* %11163, align 1
  store %struct.Memory* %loadMem_4b0f46, %struct.Memory** %MEMORY
  %loadMem_4b0f49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11165 = getelementptr inbounds %struct.GPR, %struct.GPR* %11164, i32 0, i32 33
  %11166 = getelementptr inbounds %struct.Reg, %struct.Reg* %11165, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %11166 to i64*
  %11167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11168 = getelementptr inbounds %struct.GPR, %struct.GPR* %11167, i32 0, i32 1
  %11169 = getelementptr inbounds %struct.Reg, %struct.Reg* %11168, i32 0, i32 0
  %EAX.i1055 = bitcast %union.anon* %11169 to i32*
  %11170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11171 = getelementptr inbounds %struct.GPR, %struct.GPR* %11170, i32 0, i32 15
  %11172 = getelementptr inbounds %struct.Reg, %struct.Reg* %11171, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %11172 to i64*
  %11173 = load i64, i64* %RBP.i1056
  %11174 = sub i64 %11173, 36
  %11175 = load i32, i32* %EAX.i1055
  %11176 = zext i32 %11175 to i64
  %11177 = load i64, i64* %PC.i1054
  %11178 = add i64 %11177, 3
  store i64 %11178, i64* %PC.i1054
  %11179 = inttoptr i64 %11174 to i32*
  store i32 %11175, i32* %11179
  store %struct.Memory* %loadMem_4b0f49, %struct.Memory** %MEMORY
  %loadMem_4b0f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11181 = getelementptr inbounds %struct.GPR, %struct.GPR* %11180, i32 0, i32 33
  %11182 = getelementptr inbounds %struct.Reg, %struct.Reg* %11181, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %11182 to i64*
  %11183 = load i64, i64* %PC.i1053
  %11184 = add i64 %11183, -258
  %11185 = load i64, i64* %PC.i1053
  %11186 = add i64 %11185, 5
  store i64 %11186, i64* %PC.i1053
  %11187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11184, i64* %11187, align 8
  store %struct.Memory* %loadMem_4b0f4c, %struct.Memory** %MEMORY
  br label %block_.L_4b0e4a

block_.L_4b0f51:                                  ; preds = %block_.L_4b0e4a
  %loadMem_4b0f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11189 = getelementptr inbounds %struct.GPR, %struct.GPR* %11188, i32 0, i32 33
  %11190 = getelementptr inbounds %struct.Reg, %struct.Reg* %11189, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %11190 to i64*
  %11191 = load i64, i64* %PC.i1052
  %11192 = add i64 %11191, 5
  %11193 = load i64, i64* %PC.i1052
  %11194 = add i64 %11193, 5
  store i64 %11194, i64* %PC.i1052
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11192, i64* %11195, align 8
  store %struct.Memory* %loadMem_4b0f51, %struct.Memory** %MEMORY
  br label %block_.L_4b0f56

block_.L_4b0f56:                                  ; preds = %block_.L_4b0f51
  %loadMem_4b0f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11197 = getelementptr inbounds %struct.GPR, %struct.GPR* %11196, i32 0, i32 33
  %11198 = getelementptr inbounds %struct.Reg, %struct.Reg* %11197, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %11198 to i64*
  %11199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11200 = getelementptr inbounds %struct.GPR, %struct.GPR* %11199, i32 0, i32 1
  %11201 = getelementptr inbounds %struct.Reg, %struct.Reg* %11200, i32 0, i32 0
  %RAX.i1050 = bitcast %union.anon* %11201 to i64*
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11203 = getelementptr inbounds %struct.GPR, %struct.GPR* %11202, i32 0, i32 15
  %11204 = getelementptr inbounds %struct.Reg, %struct.Reg* %11203, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %11204 to i64*
  %11205 = load i64, i64* %RBP.i1051
  %11206 = sub i64 %11205, 35396
  %11207 = load i64, i64* %PC.i1049
  %11208 = add i64 %11207, 6
  store i64 %11208, i64* %PC.i1049
  %11209 = inttoptr i64 %11206 to i32*
  %11210 = load i32, i32* %11209
  %11211 = zext i32 %11210 to i64
  store i64 %11211, i64* %RAX.i1050, align 8
  store %struct.Memory* %loadMem_4b0f56, %struct.Memory** %MEMORY
  %loadMem_4b0f5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11213 = getelementptr inbounds %struct.GPR, %struct.GPR* %11212, i32 0, i32 33
  %11214 = getelementptr inbounds %struct.Reg, %struct.Reg* %11213, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %11214 to i64*
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11216 = getelementptr inbounds %struct.GPR, %struct.GPR* %11215, i32 0, i32 1
  %11217 = getelementptr inbounds %struct.Reg, %struct.Reg* %11216, i32 0, i32 0
  %RAX.i1048 = bitcast %union.anon* %11217 to i64*
  %11218 = load i64, i64* %RAX.i1048
  %11219 = load i64, i64* %PC.i1047
  %11220 = add i64 %11219, 3
  store i64 %11220, i64* %PC.i1047
  %11221 = trunc i64 %11218 to i32
  %11222 = add i32 1, %11221
  %11223 = zext i32 %11222 to i64
  store i64 %11223, i64* %RAX.i1048, align 8
  %11224 = icmp ult i32 %11222, %11221
  %11225 = icmp ult i32 %11222, 1
  %11226 = or i1 %11224, %11225
  %11227 = zext i1 %11226 to i8
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11227, i8* %11228, align 1
  %11229 = and i32 %11222, 255
  %11230 = call i32 @llvm.ctpop.i32(i32 %11229)
  %11231 = trunc i32 %11230 to i8
  %11232 = and i8 %11231, 1
  %11233 = xor i8 %11232, 1
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11233, i8* %11234, align 1
  %11235 = xor i64 1, %11218
  %11236 = trunc i64 %11235 to i32
  %11237 = xor i32 %11236, %11222
  %11238 = lshr i32 %11237, 4
  %11239 = trunc i32 %11238 to i8
  %11240 = and i8 %11239, 1
  %11241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11240, i8* %11241, align 1
  %11242 = icmp eq i32 %11222, 0
  %11243 = zext i1 %11242 to i8
  %11244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11243, i8* %11244, align 1
  %11245 = lshr i32 %11222, 31
  %11246 = trunc i32 %11245 to i8
  %11247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11246, i8* %11247, align 1
  %11248 = lshr i32 %11221, 31
  %11249 = xor i32 %11245, %11248
  %11250 = add i32 %11249, %11245
  %11251 = icmp eq i32 %11250, 2
  %11252 = zext i1 %11251 to i8
  %11253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11252, i8* %11253, align 1
  store %struct.Memory* %loadMem_4b0f5c, %struct.Memory** %MEMORY
  %loadMem_4b0f5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11255 = getelementptr inbounds %struct.GPR, %struct.GPR* %11254, i32 0, i32 33
  %11256 = getelementptr inbounds %struct.Reg, %struct.Reg* %11255, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %11256 to i64*
  %11257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11258 = getelementptr inbounds %struct.GPR, %struct.GPR* %11257, i32 0, i32 1
  %11259 = getelementptr inbounds %struct.Reg, %struct.Reg* %11258, i32 0, i32 0
  %EAX.i1045 = bitcast %union.anon* %11259 to i32*
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11261 = getelementptr inbounds %struct.GPR, %struct.GPR* %11260, i32 0, i32 15
  %11262 = getelementptr inbounds %struct.Reg, %struct.Reg* %11261, i32 0, i32 0
  %RBP.i1046 = bitcast %union.anon* %11262 to i64*
  %11263 = load i64, i64* %RBP.i1046
  %11264 = sub i64 %11263, 35396
  %11265 = load i32, i32* %EAX.i1045
  %11266 = zext i32 %11265 to i64
  %11267 = load i64, i64* %PC.i1044
  %11268 = add i64 %11267, 6
  store i64 %11268, i64* %PC.i1044
  %11269 = inttoptr i64 %11264 to i32*
  store i32 %11265, i32* %11269
  store %struct.Memory* %loadMem_4b0f5f, %struct.Memory** %MEMORY
  %loadMem_4b0f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11271 = getelementptr inbounds %struct.GPR, %struct.GPR* %11270, i32 0, i32 33
  %11272 = getelementptr inbounds %struct.Reg, %struct.Reg* %11271, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %11272 to i64*
  %11273 = load i64, i64* %PC.i1043
  %11274 = add i64 %11273, -313
  %11275 = load i64, i64* %PC.i1043
  %11276 = add i64 %11275, 5
  store i64 %11276, i64* %PC.i1043
  %11277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11274, i64* %11277, align 8
  store %struct.Memory* %loadMem_4b0f65, %struct.Memory** %MEMORY
  br label %block_.L_4b0e2c

block_.L_4b0f6a:                                  ; preds = %block_.L_4b0e2c
  %loadMem_4b0f6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11279 = getelementptr inbounds %struct.GPR, %struct.GPR* %11278, i32 0, i32 33
  %11280 = getelementptr inbounds %struct.Reg, %struct.Reg* %11279, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %11280 to i64*
  %11281 = load i64, i64* %PC.i1042
  %11282 = add i64 %11281, 1815
  %11283 = load i64, i64* %PC.i1042
  %11284 = add i64 %11283, 5
  store i64 %11284, i64* %PC.i1042
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11282, i64* %11285, align 8
  store %struct.Memory* %loadMem_4b0f6a, %struct.Memory** %MEMORY
  br label %block_.L_4b1681

block_.L_4b0f6f:                                  ; preds = %block_.L_4b0cda
  %loadMem_4b0f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11287 = getelementptr inbounds %struct.GPR, %struct.GPR* %11286, i32 0, i32 33
  %11288 = getelementptr inbounds %struct.Reg, %struct.Reg* %11287, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %11288 to i64*
  %11289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11290 = getelementptr inbounds %struct.GPR, %struct.GPR* %11289, i32 0, i32 15
  %11291 = getelementptr inbounds %struct.Reg, %struct.Reg* %11290, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %11291 to i64*
  %11292 = load i64, i64* %RBP.i1041
  %11293 = sub i64 %11292, 8
  %11294 = load i64, i64* %PC.i1040
  %11295 = add i64 %11294, 7
  store i64 %11295, i64* %PC.i1040
  %11296 = inttoptr i64 %11293 to i32*
  store i32 0, i32* %11296
  store %struct.Memory* %loadMem_4b0f6f, %struct.Memory** %MEMORY
  br label %block_.L_4b0f76

block_.L_4b0f76:                                  ; preds = %block_.L_4b0fdd, %block_.L_4b0f6f
  %loadMem_4b0f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11298 = getelementptr inbounds %struct.GPR, %struct.GPR* %11297, i32 0, i32 33
  %11299 = getelementptr inbounds %struct.Reg, %struct.Reg* %11298, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %11299 to i64*
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11301 = getelementptr inbounds %struct.GPR, %struct.GPR* %11300, i32 0, i32 1
  %11302 = getelementptr inbounds %struct.Reg, %struct.Reg* %11301, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %11302 to i64*
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11304 = getelementptr inbounds %struct.GPR, %struct.GPR* %11303, i32 0, i32 15
  %11305 = getelementptr inbounds %struct.Reg, %struct.Reg* %11304, i32 0, i32 0
  %RBP.i1039 = bitcast %union.anon* %11305 to i64*
  %11306 = load i64, i64* %RBP.i1039
  %11307 = sub i64 %11306, 8
  %11308 = load i64, i64* %PC.i1037
  %11309 = add i64 %11308, 3
  store i64 %11309, i64* %PC.i1037
  %11310 = inttoptr i64 %11307 to i32*
  %11311 = load i32, i32* %11310
  %11312 = zext i32 %11311 to i64
  store i64 %11312, i64* %RAX.i1038, align 8
  store %struct.Memory* %loadMem_4b0f76, %struct.Memory** %MEMORY
  %loadMem_4b0f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11314 = getelementptr inbounds %struct.GPR, %struct.GPR* %11313, i32 0, i32 33
  %11315 = getelementptr inbounds %struct.Reg, %struct.Reg* %11314, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %11315 to i64*
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11317 = getelementptr inbounds %struct.GPR, %struct.GPR* %11316, i32 0, i32 5
  %11318 = getelementptr inbounds %struct.Reg, %struct.Reg* %11317, i32 0, i32 0
  %RCX.i1036 = bitcast %union.anon* %11318 to i64*
  %11319 = load i64, i64* %PC.i1035
  %11320 = add i64 %11319, 8
  store i64 %11320, i64* %PC.i1035
  %11321 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11321, i64* %RCX.i1036, align 8
  store %struct.Memory* %loadMem_4b0f79, %struct.Memory** %MEMORY
  %loadMem_4b0f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11323 = getelementptr inbounds %struct.GPR, %struct.GPR* %11322, i32 0, i32 33
  %11324 = getelementptr inbounds %struct.Reg, %struct.Reg* %11323, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %11324 to i64*
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11326 = getelementptr inbounds %struct.GPR, %struct.GPR* %11325, i32 0, i32 1
  %11327 = getelementptr inbounds %struct.Reg, %struct.Reg* %11326, i32 0, i32 0
  %EAX.i1033 = bitcast %union.anon* %11327 to i32*
  %11328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11329 = getelementptr inbounds %struct.GPR, %struct.GPR* %11328, i32 0, i32 5
  %11330 = getelementptr inbounds %struct.Reg, %struct.Reg* %11329, i32 0, i32 0
  %RCX.i1034 = bitcast %union.anon* %11330 to i64*
  %11331 = load i32, i32* %EAX.i1033
  %11332 = zext i32 %11331 to i64
  %11333 = load i64, i64* %RCX.i1034
  %11334 = add i64 %11333, 60
  %11335 = load i64, i64* %PC.i1032
  %11336 = add i64 %11335, 3
  store i64 %11336, i64* %PC.i1032
  %11337 = inttoptr i64 %11334 to i32*
  %11338 = load i32, i32* %11337
  %11339 = sub i32 %11331, %11338
  %11340 = icmp ult i32 %11331, %11338
  %11341 = zext i1 %11340 to i8
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11341, i8* %11342, align 1
  %11343 = and i32 %11339, 255
  %11344 = call i32 @llvm.ctpop.i32(i32 %11343)
  %11345 = trunc i32 %11344 to i8
  %11346 = and i8 %11345, 1
  %11347 = xor i8 %11346, 1
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11347, i8* %11348, align 1
  %11349 = xor i32 %11338, %11331
  %11350 = xor i32 %11349, %11339
  %11351 = lshr i32 %11350, 4
  %11352 = trunc i32 %11351 to i8
  %11353 = and i8 %11352, 1
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11353, i8* %11354, align 1
  %11355 = icmp eq i32 %11339, 0
  %11356 = zext i1 %11355 to i8
  %11357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11356, i8* %11357, align 1
  %11358 = lshr i32 %11339, 31
  %11359 = trunc i32 %11358 to i8
  %11360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11359, i8* %11360, align 1
  %11361 = lshr i32 %11331, 31
  %11362 = lshr i32 %11338, 31
  %11363 = xor i32 %11362, %11361
  %11364 = xor i32 %11358, %11361
  %11365 = add i32 %11364, %11363
  %11366 = icmp eq i32 %11365, 2
  %11367 = zext i1 %11366 to i8
  %11368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11367, i8* %11368, align 1
  store %struct.Memory* %loadMem_4b0f81, %struct.Memory** %MEMORY
  %loadMem_4b0f84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11370 = getelementptr inbounds %struct.GPR, %struct.GPR* %11369, i32 0, i32 33
  %11371 = getelementptr inbounds %struct.Reg, %struct.Reg* %11370, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %11371 to i64*
  %11372 = load i64, i64* %PC.i1031
  %11373 = add i64 %11372, 103
  %11374 = load i64, i64* %PC.i1031
  %11375 = add i64 %11374, 6
  %11376 = load i64, i64* %PC.i1031
  %11377 = add i64 %11376, 6
  store i64 %11377, i64* %PC.i1031
  %11378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11379 = load i8, i8* %11378, align 1
  %11380 = icmp ne i8 %11379, 0
  %11381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11382 = load i8, i8* %11381, align 1
  %11383 = icmp ne i8 %11382, 0
  %11384 = xor i1 %11380, %11383
  %11385 = xor i1 %11384, true
  %11386 = zext i1 %11385 to i8
  store i8 %11386, i8* %BRANCH_TAKEN, align 1
  %11387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11388 = select i1 %11384, i64 %11375, i64 %11373
  store i64 %11388, i64* %11387, align 8
  store %struct.Memory* %loadMem_4b0f84, %struct.Memory** %MEMORY
  %loadBr_4b0f84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0f84 = icmp eq i8 %loadBr_4b0f84, 1
  br i1 %cmpBr_4b0f84, label %block_.L_4b0feb, label %block_4b0f8a

block_4b0f8a:                                     ; preds = %block_.L_4b0f76
  %loadMem_4b0f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11390 = getelementptr inbounds %struct.GPR, %struct.GPR* %11389, i32 0, i32 33
  %11391 = getelementptr inbounds %struct.Reg, %struct.Reg* %11390, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %11391 to i64*
  %11392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11393 = getelementptr inbounds %struct.GPR, %struct.GPR* %11392, i32 0, i32 15
  %11394 = getelementptr inbounds %struct.Reg, %struct.Reg* %11393, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %11394 to i64*
  %11395 = load i64, i64* %RBP.i1030
  %11396 = sub i64 %11395, 12
  %11397 = load i64, i64* %PC.i1029
  %11398 = add i64 %11397, 7
  store i64 %11398, i64* %PC.i1029
  %11399 = inttoptr i64 %11396 to i32*
  store i32 0, i32* %11399
  store %struct.Memory* %loadMem_4b0f8a, %struct.Memory** %MEMORY
  br label %block_.L_4b0f91

block_.L_4b0f91:                                  ; preds = %block_4b0fa5, %block_4b0f8a
  %loadMem_4b0f91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11401 = getelementptr inbounds %struct.GPR, %struct.GPR* %11400, i32 0, i32 33
  %11402 = getelementptr inbounds %struct.Reg, %struct.Reg* %11401, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %11402 to i64*
  %11403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11404 = getelementptr inbounds %struct.GPR, %struct.GPR* %11403, i32 0, i32 1
  %11405 = getelementptr inbounds %struct.Reg, %struct.Reg* %11404, i32 0, i32 0
  %RAX.i1027 = bitcast %union.anon* %11405 to i64*
  %11406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11407 = getelementptr inbounds %struct.GPR, %struct.GPR* %11406, i32 0, i32 15
  %11408 = getelementptr inbounds %struct.Reg, %struct.Reg* %11407, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %11408 to i64*
  %11409 = load i64, i64* %RBP.i1028
  %11410 = sub i64 %11409, 12
  %11411 = load i64, i64* %PC.i1026
  %11412 = add i64 %11411, 3
  store i64 %11412, i64* %PC.i1026
  %11413 = inttoptr i64 %11410 to i32*
  %11414 = load i32, i32* %11413
  %11415 = zext i32 %11414 to i64
  store i64 %11415, i64* %RAX.i1027, align 8
  store %struct.Memory* %loadMem_4b0f91, %struct.Memory** %MEMORY
  %loadMem_4b0f94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11417 = getelementptr inbounds %struct.GPR, %struct.GPR* %11416, i32 0, i32 33
  %11418 = getelementptr inbounds %struct.Reg, %struct.Reg* %11417, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %11418 to i64*
  %11419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11420 = getelementptr inbounds %struct.GPR, %struct.GPR* %11419, i32 0, i32 5
  %11421 = getelementptr inbounds %struct.Reg, %struct.Reg* %11420, i32 0, i32 0
  %RCX.i1025 = bitcast %union.anon* %11421 to i64*
  %11422 = load i64, i64* %PC.i1024
  %11423 = add i64 %11422, 8
  store i64 %11423, i64* %PC.i1024
  %11424 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11424, i64* %RCX.i1025, align 8
  store %struct.Memory* %loadMem_4b0f94, %struct.Memory** %MEMORY
  %loadMem_4b0f9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11426 = getelementptr inbounds %struct.GPR, %struct.GPR* %11425, i32 0, i32 33
  %11427 = getelementptr inbounds %struct.Reg, %struct.Reg* %11426, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %11427 to i64*
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 1
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %EAX.i1022 = bitcast %union.anon* %11430 to i32*
  %11431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11432 = getelementptr inbounds %struct.GPR, %struct.GPR* %11431, i32 0, i32 5
  %11433 = getelementptr inbounds %struct.Reg, %struct.Reg* %11432, i32 0, i32 0
  %RCX.i1023 = bitcast %union.anon* %11433 to i64*
  %11434 = load i32, i32* %EAX.i1022
  %11435 = zext i32 %11434 to i64
  %11436 = load i64, i64* %RCX.i1023
  %11437 = add i64 %11436, 52
  %11438 = load i64, i64* %PC.i1021
  %11439 = add i64 %11438, 3
  store i64 %11439, i64* %PC.i1021
  %11440 = inttoptr i64 %11437 to i32*
  %11441 = load i32, i32* %11440
  %11442 = sub i32 %11434, %11441
  %11443 = icmp ult i32 %11434, %11441
  %11444 = zext i1 %11443 to i8
  %11445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11444, i8* %11445, align 1
  %11446 = and i32 %11442, 255
  %11447 = call i32 @llvm.ctpop.i32(i32 %11446)
  %11448 = trunc i32 %11447 to i8
  %11449 = and i8 %11448, 1
  %11450 = xor i8 %11449, 1
  %11451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11450, i8* %11451, align 1
  %11452 = xor i32 %11441, %11434
  %11453 = xor i32 %11452, %11442
  %11454 = lshr i32 %11453, 4
  %11455 = trunc i32 %11454 to i8
  %11456 = and i8 %11455, 1
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11456, i8* %11457, align 1
  %11458 = icmp eq i32 %11442, 0
  %11459 = zext i1 %11458 to i8
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11459, i8* %11460, align 1
  %11461 = lshr i32 %11442, 31
  %11462 = trunc i32 %11461 to i8
  %11463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11462, i8* %11463, align 1
  %11464 = lshr i32 %11434, 31
  %11465 = lshr i32 %11441, 31
  %11466 = xor i32 %11465, %11464
  %11467 = xor i32 %11461, %11464
  %11468 = add i32 %11467, %11466
  %11469 = icmp eq i32 %11468, 2
  %11470 = zext i1 %11469 to i8
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11470, i8* %11471, align 1
  store %struct.Memory* %loadMem_4b0f9c, %struct.Memory** %MEMORY
  %loadMem_4b0f9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11473 = getelementptr inbounds %struct.GPR, %struct.GPR* %11472, i32 0, i32 33
  %11474 = getelementptr inbounds %struct.Reg, %struct.Reg* %11473, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %11474 to i64*
  %11475 = load i64, i64* %PC.i1020
  %11476 = add i64 %11475, 57
  %11477 = load i64, i64* %PC.i1020
  %11478 = add i64 %11477, 6
  %11479 = load i64, i64* %PC.i1020
  %11480 = add i64 %11479, 6
  store i64 %11480, i64* %PC.i1020
  %11481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11482 = load i8, i8* %11481, align 1
  %11483 = icmp ne i8 %11482, 0
  %11484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11485 = load i8, i8* %11484, align 1
  %11486 = icmp ne i8 %11485, 0
  %11487 = xor i1 %11483, %11486
  %11488 = xor i1 %11487, true
  %11489 = zext i1 %11488 to i8
  store i8 %11489, i8* %BRANCH_TAKEN, align 1
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11491 = select i1 %11487, i64 %11478, i64 %11476
  store i64 %11491, i64* %11490, align 8
  store %struct.Memory* %loadMem_4b0f9f, %struct.Memory** %MEMORY
  %loadBr_4b0f9f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b0f9f = icmp eq i8 %loadBr_4b0f9f, 1
  br i1 %cmpBr_4b0f9f, label %block_.L_4b0fd8, label %block_4b0fa5

block_4b0fa5:                                     ; preds = %block_.L_4b0f91
  %loadMem_4b0fa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11493 = getelementptr inbounds %struct.GPR, %struct.GPR* %11492, i32 0, i32 33
  %11494 = getelementptr inbounds %struct.Reg, %struct.Reg* %11493, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %11494 to i64*
  %11495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11496 = getelementptr inbounds %struct.GPR, %struct.GPR* %11495, i32 0, i32 1
  %11497 = getelementptr inbounds %struct.Reg, %struct.Reg* %11496, i32 0, i32 0
  %RAX.i1019 = bitcast %union.anon* %11497 to i64*
  %11498 = load i64, i64* %PC.i1018
  %11499 = add i64 %11498, ptrtoint (%G_0x27546c__rip__type* @G_0x27546c__rip_ to i64)
  %11500 = load i64, i64* %PC.i1018
  %11501 = add i64 %11500, 7
  store i64 %11501, i64* %PC.i1018
  %11502 = inttoptr i64 %11499 to i64*
  %11503 = load i64, i64* %11502
  store i64 %11503, i64* %RAX.i1019, align 8
  store %struct.Memory* %loadMem_4b0fa5, %struct.Memory** %MEMORY
  %loadMem_4b0fac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11505 = getelementptr inbounds %struct.GPR, %struct.GPR* %11504, i32 0, i32 33
  %11506 = getelementptr inbounds %struct.Reg, %struct.Reg* %11505, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %11506 to i64*
  %11507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11508 = getelementptr inbounds %struct.GPR, %struct.GPR* %11507, i32 0, i32 5
  %11509 = getelementptr inbounds %struct.Reg, %struct.Reg* %11508, i32 0, i32 0
  %RCX.i1016 = bitcast %union.anon* %11509 to i64*
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11511 = getelementptr inbounds %struct.GPR, %struct.GPR* %11510, i32 0, i32 15
  %11512 = getelementptr inbounds %struct.Reg, %struct.Reg* %11511, i32 0, i32 0
  %RBP.i1017 = bitcast %union.anon* %11512 to i64*
  %11513 = load i64, i64* %RBP.i1017
  %11514 = sub i64 %11513, 8
  %11515 = load i64, i64* %PC.i1015
  %11516 = add i64 %11515, 4
  store i64 %11516, i64* %PC.i1015
  %11517 = inttoptr i64 %11514 to i32*
  %11518 = load i32, i32* %11517
  %11519 = sext i32 %11518 to i64
  store i64 %11519, i64* %RCX.i1016, align 8
  store %struct.Memory* %loadMem_4b0fac, %struct.Memory** %MEMORY
  %loadMem_4b0fb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11521 = getelementptr inbounds %struct.GPR, %struct.GPR* %11520, i32 0, i32 33
  %11522 = getelementptr inbounds %struct.Reg, %struct.Reg* %11521, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %11522 to i64*
  %11523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11524 = getelementptr inbounds %struct.GPR, %struct.GPR* %11523, i32 0, i32 1
  %11525 = getelementptr inbounds %struct.Reg, %struct.Reg* %11524, i32 0, i32 0
  %RAX.i1013 = bitcast %union.anon* %11525 to i64*
  %11526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11527 = getelementptr inbounds %struct.GPR, %struct.GPR* %11526, i32 0, i32 5
  %11528 = getelementptr inbounds %struct.Reg, %struct.Reg* %11527, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %11528 to i64*
  %11529 = load i64, i64* %RAX.i1013
  %11530 = load i64, i64* %RCX.i1014
  %11531 = mul i64 %11530, 8
  %11532 = add i64 %11531, %11529
  %11533 = load i64, i64* %PC.i1012
  %11534 = add i64 %11533, 4
  store i64 %11534, i64* %PC.i1012
  %11535 = inttoptr i64 %11532 to i64*
  %11536 = load i64, i64* %11535
  store i64 %11536, i64* %RAX.i1013, align 8
  store %struct.Memory* %loadMem_4b0fb0, %struct.Memory** %MEMORY
  %loadMem_4b0fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11538 = getelementptr inbounds %struct.GPR, %struct.GPR* %11537, i32 0, i32 33
  %11539 = getelementptr inbounds %struct.Reg, %struct.Reg* %11538, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %11539 to i64*
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11541 = getelementptr inbounds %struct.GPR, %struct.GPR* %11540, i32 0, i32 5
  %11542 = getelementptr inbounds %struct.Reg, %struct.Reg* %11541, i32 0, i32 0
  %RCX.i1010 = bitcast %union.anon* %11542 to i64*
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11544 = getelementptr inbounds %struct.GPR, %struct.GPR* %11543, i32 0, i32 15
  %11545 = getelementptr inbounds %struct.Reg, %struct.Reg* %11544, i32 0, i32 0
  %RBP.i1011 = bitcast %union.anon* %11545 to i64*
  %11546 = load i64, i64* %RBP.i1011
  %11547 = sub i64 %11546, 12
  %11548 = load i64, i64* %PC.i1009
  %11549 = add i64 %11548, 4
  store i64 %11549, i64* %PC.i1009
  %11550 = inttoptr i64 %11547 to i32*
  %11551 = load i32, i32* %11550
  %11552 = sext i32 %11551 to i64
  store i64 %11552, i64* %RCX.i1010, align 8
  store %struct.Memory* %loadMem_4b0fb4, %struct.Memory** %MEMORY
  %loadMem_4b0fb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11554 = getelementptr inbounds %struct.GPR, %struct.GPR* %11553, i32 0, i32 33
  %11555 = getelementptr inbounds %struct.Reg, %struct.Reg* %11554, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %11555 to i64*
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11557 = getelementptr inbounds %struct.GPR, %struct.GPR* %11556, i32 0, i32 1
  %11558 = getelementptr inbounds %struct.Reg, %struct.Reg* %11557, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %11558 to i64*
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11560 = getelementptr inbounds %struct.GPR, %struct.GPR* %11559, i32 0, i32 5
  %11561 = getelementptr inbounds %struct.Reg, %struct.Reg* %11560, i32 0, i32 0
  %RCX.i1007 = bitcast %union.anon* %11561 to i64*
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11563 = getelementptr inbounds %struct.GPR, %struct.GPR* %11562, i32 0, i32 7
  %11564 = getelementptr inbounds %struct.Reg, %struct.Reg* %11563, i32 0, i32 0
  %RDX.i1008 = bitcast %union.anon* %11564 to i64*
  %11565 = load i64, i64* %RAX.i1006
  %11566 = load i64, i64* %RCX.i1007
  %11567 = mul i64 %11566, 2
  %11568 = add i64 %11567, %11565
  %11569 = load i64, i64* %PC.i1005
  %11570 = add i64 %11569, 4
  store i64 %11570, i64* %PC.i1005
  %11571 = inttoptr i64 %11568 to i16*
  %11572 = load i16, i16* %11571
  %11573 = zext i16 %11572 to i64
  store i64 %11573, i64* %RDX.i1008, align 8
  store %struct.Memory* %loadMem_4b0fb8, %struct.Memory** %MEMORY
  %loadMem_4b0fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11575 = getelementptr inbounds %struct.GPR, %struct.GPR* %11574, i32 0, i32 33
  %11576 = getelementptr inbounds %struct.Reg, %struct.Reg* %11575, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %11576 to i64*
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11578 = getelementptr inbounds %struct.GPR, %struct.GPR* %11577, i32 0, i32 7
  %11579 = getelementptr inbounds %struct.Reg, %struct.Reg* %11578, i32 0, i32 0
  %EDX.i1003 = bitcast %union.anon* %11579 to i32*
  %11580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11581 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11580, i64 0, i64 0
  %YMM0.i1004 = bitcast %union.VectorReg* %11581 to %"class.std::bitset"*
  %11582 = bitcast %"class.std::bitset"* %YMM0.i1004 to i8*
  %11583 = load i32, i32* %EDX.i1003
  %11584 = zext i32 %11583 to i64
  %11585 = load i64, i64* %PC.i1002
  %11586 = add i64 %11585, 4
  store i64 %11586, i64* %PC.i1002
  %11587 = sitofp i32 %11583 to double
  %11588 = bitcast i8* %11582 to double*
  store double %11587, double* %11588, align 1
  store %struct.Memory* %loadMem_4b0fbc, %struct.Memory** %MEMORY
  %loadMem_4b0fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11590 = getelementptr inbounds %struct.GPR, %struct.GPR* %11589, i32 0, i32 33
  %11591 = getelementptr inbounds %struct.Reg, %struct.Reg* %11590, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %11591 to i64*
  %11592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11593 = getelementptr inbounds %struct.GPR, %struct.GPR* %11592, i32 0, i32 15
  %11594 = getelementptr inbounds %struct.Reg, %struct.Reg* %11593, i32 0, i32 0
  %RBP.i1000 = bitcast %union.anon* %11594 to i64*
  %11595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11596 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11595, i64 0, i64 0
  %YMM0.i1001 = bitcast %union.VectorReg* %11596 to %"class.std::bitset"*
  %11597 = bitcast %"class.std::bitset"* %YMM0.i1001 to i8*
  %11598 = bitcast %"class.std::bitset"* %YMM0.i1001 to i8*
  %11599 = load i64, i64* %RBP.i1000
  %11600 = sub i64 %11599, 32
  %11601 = load i64, i64* %PC.i999
  %11602 = add i64 %11601, 5
  store i64 %11602, i64* %PC.i999
  %11603 = bitcast i8* %11598 to double*
  %11604 = load double, double* %11603, align 1
  %11605 = getelementptr inbounds i8, i8* %11598, i64 8
  %11606 = bitcast i8* %11605 to i64*
  %11607 = load i64, i64* %11606, align 1
  %11608 = inttoptr i64 %11600 to double*
  %11609 = load double, double* %11608
  %11610 = fadd double %11604, %11609
  %11611 = bitcast i8* %11597 to double*
  store double %11610, double* %11611, align 1
  %11612 = getelementptr inbounds i8, i8* %11597, i64 8
  %11613 = bitcast i8* %11612 to i64*
  store i64 %11607, i64* %11613, align 1
  store %struct.Memory* %loadMem_4b0fc0, %struct.Memory** %MEMORY
  %loadMem_4b0fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11615 = getelementptr inbounds %struct.GPR, %struct.GPR* %11614, i32 0, i32 33
  %11616 = getelementptr inbounds %struct.Reg, %struct.Reg* %11615, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %11616 to i64*
  %11617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11618 = getelementptr inbounds %struct.GPR, %struct.GPR* %11617, i32 0, i32 15
  %11619 = getelementptr inbounds %struct.Reg, %struct.Reg* %11618, i32 0, i32 0
  %RBP.i997 = bitcast %union.anon* %11619 to i64*
  %11620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11620, i64 0, i64 0
  %XMM0.i998 = bitcast %union.VectorReg* %11621 to %union.vec128_t*
  %11622 = load i64, i64* %RBP.i997
  %11623 = sub i64 %11622, 32
  %11624 = bitcast %union.vec128_t* %XMM0.i998 to i8*
  %11625 = load i64, i64* %PC.i996
  %11626 = add i64 %11625, 5
  store i64 %11626, i64* %PC.i996
  %11627 = bitcast i8* %11624 to double*
  %11628 = load double, double* %11627, align 1
  %11629 = inttoptr i64 %11623 to double*
  store double %11628, double* %11629
  store %struct.Memory* %loadMem_4b0fc5, %struct.Memory** %MEMORY
  %loadMem_4b0fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %11630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11631 = getelementptr inbounds %struct.GPR, %struct.GPR* %11630, i32 0, i32 33
  %11632 = getelementptr inbounds %struct.Reg, %struct.Reg* %11631, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %11632 to i64*
  %11633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11634 = getelementptr inbounds %struct.GPR, %struct.GPR* %11633, i32 0, i32 1
  %11635 = getelementptr inbounds %struct.Reg, %struct.Reg* %11634, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %11635 to i64*
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11637 = getelementptr inbounds %struct.GPR, %struct.GPR* %11636, i32 0, i32 15
  %11638 = getelementptr inbounds %struct.Reg, %struct.Reg* %11637, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %11638 to i64*
  %11639 = load i64, i64* %RBP.i995
  %11640 = sub i64 %11639, 12
  %11641 = load i64, i64* %PC.i993
  %11642 = add i64 %11641, 3
  store i64 %11642, i64* %PC.i993
  %11643 = inttoptr i64 %11640 to i32*
  %11644 = load i32, i32* %11643
  %11645 = zext i32 %11644 to i64
  store i64 %11645, i64* %RAX.i994, align 8
  store %struct.Memory* %loadMem_4b0fca, %struct.Memory** %MEMORY
  %loadMem_4b0fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11647 = getelementptr inbounds %struct.GPR, %struct.GPR* %11646, i32 0, i32 33
  %11648 = getelementptr inbounds %struct.Reg, %struct.Reg* %11647, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %11648 to i64*
  %11649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11650 = getelementptr inbounds %struct.GPR, %struct.GPR* %11649, i32 0, i32 1
  %11651 = getelementptr inbounds %struct.Reg, %struct.Reg* %11650, i32 0, i32 0
  %RAX.i992 = bitcast %union.anon* %11651 to i64*
  %11652 = load i64, i64* %RAX.i992
  %11653 = load i64, i64* %PC.i991
  %11654 = add i64 %11653, 3
  store i64 %11654, i64* %PC.i991
  %11655 = trunc i64 %11652 to i32
  %11656 = add i32 1, %11655
  %11657 = zext i32 %11656 to i64
  store i64 %11657, i64* %RAX.i992, align 8
  %11658 = icmp ult i32 %11656, %11655
  %11659 = icmp ult i32 %11656, 1
  %11660 = or i1 %11658, %11659
  %11661 = zext i1 %11660 to i8
  %11662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11661, i8* %11662, align 1
  %11663 = and i32 %11656, 255
  %11664 = call i32 @llvm.ctpop.i32(i32 %11663)
  %11665 = trunc i32 %11664 to i8
  %11666 = and i8 %11665, 1
  %11667 = xor i8 %11666, 1
  %11668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11667, i8* %11668, align 1
  %11669 = xor i64 1, %11652
  %11670 = trunc i64 %11669 to i32
  %11671 = xor i32 %11670, %11656
  %11672 = lshr i32 %11671, 4
  %11673 = trunc i32 %11672 to i8
  %11674 = and i8 %11673, 1
  %11675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11674, i8* %11675, align 1
  %11676 = icmp eq i32 %11656, 0
  %11677 = zext i1 %11676 to i8
  %11678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11677, i8* %11678, align 1
  %11679 = lshr i32 %11656, 31
  %11680 = trunc i32 %11679 to i8
  %11681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11680, i8* %11681, align 1
  %11682 = lshr i32 %11655, 31
  %11683 = xor i32 %11679, %11682
  %11684 = add i32 %11683, %11679
  %11685 = icmp eq i32 %11684, 2
  %11686 = zext i1 %11685 to i8
  %11687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11686, i8* %11687, align 1
  store %struct.Memory* %loadMem_4b0fcd, %struct.Memory** %MEMORY
  %loadMem_4b0fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11689 = getelementptr inbounds %struct.GPR, %struct.GPR* %11688, i32 0, i32 33
  %11690 = getelementptr inbounds %struct.Reg, %struct.Reg* %11689, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %11690 to i64*
  %11691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11692 = getelementptr inbounds %struct.GPR, %struct.GPR* %11691, i32 0, i32 1
  %11693 = getelementptr inbounds %struct.Reg, %struct.Reg* %11692, i32 0, i32 0
  %EAX.i989 = bitcast %union.anon* %11693 to i32*
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11695 = getelementptr inbounds %struct.GPR, %struct.GPR* %11694, i32 0, i32 15
  %11696 = getelementptr inbounds %struct.Reg, %struct.Reg* %11695, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %11696 to i64*
  %11697 = load i64, i64* %RBP.i990
  %11698 = sub i64 %11697, 12
  %11699 = load i32, i32* %EAX.i989
  %11700 = zext i32 %11699 to i64
  %11701 = load i64, i64* %PC.i988
  %11702 = add i64 %11701, 3
  store i64 %11702, i64* %PC.i988
  %11703 = inttoptr i64 %11698 to i32*
  store i32 %11699, i32* %11703
  store %struct.Memory* %loadMem_4b0fd0, %struct.Memory** %MEMORY
  %loadMem_4b0fd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11705 = getelementptr inbounds %struct.GPR, %struct.GPR* %11704, i32 0, i32 33
  %11706 = getelementptr inbounds %struct.Reg, %struct.Reg* %11705, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %11706 to i64*
  %11707 = load i64, i64* %PC.i987
  %11708 = add i64 %11707, -66
  %11709 = load i64, i64* %PC.i987
  %11710 = add i64 %11709, 5
  store i64 %11710, i64* %PC.i987
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11708, i64* %11711, align 8
  store %struct.Memory* %loadMem_4b0fd3, %struct.Memory** %MEMORY
  br label %block_.L_4b0f91

block_.L_4b0fd8:                                  ; preds = %block_.L_4b0f91
  %loadMem_4b0fd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11713 = getelementptr inbounds %struct.GPR, %struct.GPR* %11712, i32 0, i32 33
  %11714 = getelementptr inbounds %struct.Reg, %struct.Reg* %11713, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %11714 to i64*
  %11715 = load i64, i64* %PC.i986
  %11716 = add i64 %11715, 5
  %11717 = load i64, i64* %PC.i986
  %11718 = add i64 %11717, 5
  store i64 %11718, i64* %PC.i986
  %11719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11716, i64* %11719, align 8
  store %struct.Memory* %loadMem_4b0fd8, %struct.Memory** %MEMORY
  br label %block_.L_4b0fdd

block_.L_4b0fdd:                                  ; preds = %block_.L_4b0fd8
  %loadMem_4b0fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11721 = getelementptr inbounds %struct.GPR, %struct.GPR* %11720, i32 0, i32 33
  %11722 = getelementptr inbounds %struct.Reg, %struct.Reg* %11721, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %11722 to i64*
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11724 = getelementptr inbounds %struct.GPR, %struct.GPR* %11723, i32 0, i32 1
  %11725 = getelementptr inbounds %struct.Reg, %struct.Reg* %11724, i32 0, i32 0
  %RAX.i984 = bitcast %union.anon* %11725 to i64*
  %11726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11727 = getelementptr inbounds %struct.GPR, %struct.GPR* %11726, i32 0, i32 15
  %11728 = getelementptr inbounds %struct.Reg, %struct.Reg* %11727, i32 0, i32 0
  %RBP.i985 = bitcast %union.anon* %11728 to i64*
  %11729 = load i64, i64* %RBP.i985
  %11730 = sub i64 %11729, 8
  %11731 = load i64, i64* %PC.i983
  %11732 = add i64 %11731, 3
  store i64 %11732, i64* %PC.i983
  %11733 = inttoptr i64 %11730 to i32*
  %11734 = load i32, i32* %11733
  %11735 = zext i32 %11734 to i64
  store i64 %11735, i64* %RAX.i984, align 8
  store %struct.Memory* %loadMem_4b0fdd, %struct.Memory** %MEMORY
  %loadMem_4b0fe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11737 = getelementptr inbounds %struct.GPR, %struct.GPR* %11736, i32 0, i32 33
  %11738 = getelementptr inbounds %struct.Reg, %struct.Reg* %11737, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %11738 to i64*
  %11739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11740 = getelementptr inbounds %struct.GPR, %struct.GPR* %11739, i32 0, i32 1
  %11741 = getelementptr inbounds %struct.Reg, %struct.Reg* %11740, i32 0, i32 0
  %RAX.i982 = bitcast %union.anon* %11741 to i64*
  %11742 = load i64, i64* %RAX.i982
  %11743 = load i64, i64* %PC.i981
  %11744 = add i64 %11743, 3
  store i64 %11744, i64* %PC.i981
  %11745 = trunc i64 %11742 to i32
  %11746 = add i32 1, %11745
  %11747 = zext i32 %11746 to i64
  store i64 %11747, i64* %RAX.i982, align 8
  %11748 = icmp ult i32 %11746, %11745
  %11749 = icmp ult i32 %11746, 1
  %11750 = or i1 %11748, %11749
  %11751 = zext i1 %11750 to i8
  %11752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11751, i8* %11752, align 1
  %11753 = and i32 %11746, 255
  %11754 = call i32 @llvm.ctpop.i32(i32 %11753)
  %11755 = trunc i32 %11754 to i8
  %11756 = and i8 %11755, 1
  %11757 = xor i8 %11756, 1
  %11758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11757, i8* %11758, align 1
  %11759 = xor i64 1, %11742
  %11760 = trunc i64 %11759 to i32
  %11761 = xor i32 %11760, %11746
  %11762 = lshr i32 %11761, 4
  %11763 = trunc i32 %11762 to i8
  %11764 = and i8 %11763, 1
  %11765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11764, i8* %11765, align 1
  %11766 = icmp eq i32 %11746, 0
  %11767 = zext i1 %11766 to i8
  %11768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11767, i8* %11768, align 1
  %11769 = lshr i32 %11746, 31
  %11770 = trunc i32 %11769 to i8
  %11771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11770, i8* %11771, align 1
  %11772 = lshr i32 %11745, 31
  %11773 = xor i32 %11769, %11772
  %11774 = add i32 %11773, %11769
  %11775 = icmp eq i32 %11774, 2
  %11776 = zext i1 %11775 to i8
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11776, i8* %11777, align 1
  store %struct.Memory* %loadMem_4b0fe0, %struct.Memory** %MEMORY
  %loadMem_4b0fe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11779 = getelementptr inbounds %struct.GPR, %struct.GPR* %11778, i32 0, i32 33
  %11780 = getelementptr inbounds %struct.Reg, %struct.Reg* %11779, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %11780 to i64*
  %11781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11782 = getelementptr inbounds %struct.GPR, %struct.GPR* %11781, i32 0, i32 1
  %11783 = getelementptr inbounds %struct.Reg, %struct.Reg* %11782, i32 0, i32 0
  %EAX.i979 = bitcast %union.anon* %11783 to i32*
  %11784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11785 = getelementptr inbounds %struct.GPR, %struct.GPR* %11784, i32 0, i32 15
  %11786 = getelementptr inbounds %struct.Reg, %struct.Reg* %11785, i32 0, i32 0
  %RBP.i980 = bitcast %union.anon* %11786 to i64*
  %11787 = load i64, i64* %RBP.i980
  %11788 = sub i64 %11787, 8
  %11789 = load i32, i32* %EAX.i979
  %11790 = zext i32 %11789 to i64
  %11791 = load i64, i64* %PC.i978
  %11792 = add i64 %11791, 3
  store i64 %11792, i64* %PC.i978
  %11793 = inttoptr i64 %11788 to i32*
  store i32 %11789, i32* %11793
  store %struct.Memory* %loadMem_4b0fe3, %struct.Memory** %MEMORY
  %loadMem_4b0fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11795 = getelementptr inbounds %struct.GPR, %struct.GPR* %11794, i32 0, i32 33
  %11796 = getelementptr inbounds %struct.Reg, %struct.Reg* %11795, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %11796 to i64*
  %11797 = load i64, i64* %PC.i977
  %11798 = add i64 %11797, -112
  %11799 = load i64, i64* %PC.i977
  %11800 = add i64 %11799, 5
  store i64 %11800, i64* %PC.i977
  %11801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11798, i64* %11801, align 8
  store %struct.Memory* %loadMem_4b0fe6, %struct.Memory** %MEMORY
  br label %block_.L_4b0f76

block_.L_4b0feb:                                  ; preds = %block_.L_4b0f76
  %loadMem_4b0feb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11803 = getelementptr inbounds %struct.GPR, %struct.GPR* %11802, i32 0, i32 33
  %11804 = getelementptr inbounds %struct.Reg, %struct.Reg* %11803, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %11804 to i64*
  %11805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11806 = getelementptr inbounds %struct.GPR, %struct.GPR* %11805, i32 0, i32 15
  %11807 = getelementptr inbounds %struct.Reg, %struct.Reg* %11806, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %11807 to i64*
  %11808 = load i64, i64* %RBP.i976
  %11809 = sub i64 %11808, 35396
  %11810 = load i64, i64* %PC.i975
  %11811 = add i64 %11810, 10
  store i64 %11811, i64* %PC.i975
  %11812 = inttoptr i64 %11809 to i32*
  store i32 0, i32* %11812
  store %struct.Memory* %loadMem_4b0feb, %struct.Memory** %MEMORY
  br label %block_.L_4b0ff5

block_.L_4b0ff5:                                  ; preds = %block_.L_4b12bd, %block_.L_4b0feb
  %loadMem_4b0ff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11814 = getelementptr inbounds %struct.GPR, %struct.GPR* %11813, i32 0, i32 33
  %11815 = getelementptr inbounds %struct.Reg, %struct.Reg* %11814, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %11815 to i64*
  %11816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11817 = getelementptr inbounds %struct.GPR, %struct.GPR* %11816, i32 0, i32 1
  %11818 = getelementptr inbounds %struct.Reg, %struct.Reg* %11817, i32 0, i32 0
  %RAX.i973 = bitcast %union.anon* %11818 to i64*
  %11819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11820 = getelementptr inbounds %struct.GPR, %struct.GPR* %11819, i32 0, i32 15
  %11821 = getelementptr inbounds %struct.Reg, %struct.Reg* %11820, i32 0, i32 0
  %RBP.i974 = bitcast %union.anon* %11821 to i64*
  %11822 = load i64, i64* %RBP.i974
  %11823 = sub i64 %11822, 35396
  %11824 = load i64, i64* %PC.i972
  %11825 = add i64 %11824, 6
  store i64 %11825, i64* %PC.i972
  %11826 = inttoptr i64 %11823 to i32*
  %11827 = load i32, i32* %11826
  %11828 = zext i32 %11827 to i64
  store i64 %11828, i64* %RAX.i973, align 8
  store %struct.Memory* %loadMem_4b0ff5, %struct.Memory** %MEMORY
  %loadMem_4b0ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11830 = getelementptr inbounds %struct.GPR, %struct.GPR* %11829, i32 0, i32 33
  %11831 = getelementptr inbounds %struct.Reg, %struct.Reg* %11830, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %11831 to i64*
  %11832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11833 = getelementptr inbounds %struct.GPR, %struct.GPR* %11832, i32 0, i32 5
  %11834 = getelementptr inbounds %struct.Reg, %struct.Reg* %11833, i32 0, i32 0
  %RCX.i970 = bitcast %union.anon* %11834 to i64*
  %11835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11836 = getelementptr inbounds %struct.GPR, %struct.GPR* %11835, i32 0, i32 15
  %11837 = getelementptr inbounds %struct.Reg, %struct.Reg* %11836, i32 0, i32 0
  %RBP.i971 = bitcast %union.anon* %11837 to i64*
  %11838 = load i64, i64* %RBP.i971
  %11839 = sub i64 %11838, 804
  %11840 = load i64, i64* %PC.i969
  %11841 = add i64 %11840, 6
  store i64 %11841, i64* %PC.i969
  %11842 = inttoptr i64 %11839 to i32*
  %11843 = load i32, i32* %11842
  %11844 = zext i32 %11843 to i64
  store i64 %11844, i64* %RCX.i970, align 8
  store %struct.Memory* %loadMem_4b0ffb, %struct.Memory** %MEMORY
  %loadMem_4b1001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11846 = getelementptr inbounds %struct.GPR, %struct.GPR* %11845, i32 0, i32 33
  %11847 = getelementptr inbounds %struct.Reg, %struct.Reg* %11846, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %11847 to i64*
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11849 = getelementptr inbounds %struct.GPR, %struct.GPR* %11848, i32 0, i32 5
  %11850 = getelementptr inbounds %struct.Reg, %struct.Reg* %11849, i32 0, i32 0
  %RCX.i968 = bitcast %union.anon* %11850 to i64*
  %11851 = load i64, i64* %RCX.i968
  %11852 = load i64, i64* %PC.i967
  %11853 = add i64 %11852, 3
  store i64 %11853, i64* %PC.i967
  %11854 = trunc i64 %11851 to i32
  %11855 = add i32 2, %11854
  %11856 = zext i32 %11855 to i64
  store i64 %11856, i64* %RCX.i968, align 8
  %11857 = icmp ult i32 %11855, %11854
  %11858 = icmp ult i32 %11855, 2
  %11859 = or i1 %11857, %11858
  %11860 = zext i1 %11859 to i8
  %11861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11860, i8* %11861, align 1
  %11862 = and i32 %11855, 255
  %11863 = call i32 @llvm.ctpop.i32(i32 %11862)
  %11864 = trunc i32 %11863 to i8
  %11865 = and i8 %11864, 1
  %11866 = xor i8 %11865, 1
  %11867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11866, i8* %11867, align 1
  %11868 = xor i64 2, %11851
  %11869 = trunc i64 %11868 to i32
  %11870 = xor i32 %11869, %11855
  %11871 = lshr i32 %11870, 4
  %11872 = trunc i32 %11871 to i8
  %11873 = and i8 %11872, 1
  %11874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11873, i8* %11874, align 1
  %11875 = icmp eq i32 %11855, 0
  %11876 = zext i1 %11875 to i8
  %11877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11876, i8* %11877, align 1
  %11878 = lshr i32 %11855, 31
  %11879 = trunc i32 %11878 to i8
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11879, i8* %11880, align 1
  %11881 = lshr i32 %11854, 31
  %11882 = xor i32 %11878, %11881
  %11883 = add i32 %11882, %11878
  %11884 = icmp eq i32 %11883, 2
  %11885 = zext i1 %11884 to i8
  %11886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11885, i8* %11886, align 1
  store %struct.Memory* %loadMem_4b1001, %struct.Memory** %MEMORY
  %loadMem_4b1004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11888 = getelementptr inbounds %struct.GPR, %struct.GPR* %11887, i32 0, i32 33
  %11889 = getelementptr inbounds %struct.Reg, %struct.Reg* %11888, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %11889 to i64*
  %11890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11891 = getelementptr inbounds %struct.GPR, %struct.GPR* %11890, i32 0, i32 1
  %11892 = getelementptr inbounds %struct.Reg, %struct.Reg* %11891, i32 0, i32 0
  %EAX.i965 = bitcast %union.anon* %11892 to i32*
  %11893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11894 = getelementptr inbounds %struct.GPR, %struct.GPR* %11893, i32 0, i32 5
  %11895 = getelementptr inbounds %struct.Reg, %struct.Reg* %11894, i32 0, i32 0
  %ECX.i966 = bitcast %union.anon* %11895 to i32*
  %11896 = load i32, i32* %EAX.i965
  %11897 = zext i32 %11896 to i64
  %11898 = load i32, i32* %ECX.i966
  %11899 = zext i32 %11898 to i64
  %11900 = load i64, i64* %PC.i964
  %11901 = add i64 %11900, 2
  store i64 %11901, i64* %PC.i964
  %11902 = sub i32 %11896, %11898
  %11903 = icmp ult i32 %11896, %11898
  %11904 = zext i1 %11903 to i8
  %11905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11904, i8* %11905, align 1
  %11906 = and i32 %11902, 255
  %11907 = call i32 @llvm.ctpop.i32(i32 %11906)
  %11908 = trunc i32 %11907 to i8
  %11909 = and i8 %11908, 1
  %11910 = xor i8 %11909, 1
  %11911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11910, i8* %11911, align 1
  %11912 = xor i64 %11899, %11897
  %11913 = trunc i64 %11912 to i32
  %11914 = xor i32 %11913, %11902
  %11915 = lshr i32 %11914, 4
  %11916 = trunc i32 %11915 to i8
  %11917 = and i8 %11916, 1
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11917, i8* %11918, align 1
  %11919 = icmp eq i32 %11902, 0
  %11920 = zext i1 %11919 to i8
  %11921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11920, i8* %11921, align 1
  %11922 = lshr i32 %11902, 31
  %11923 = trunc i32 %11922 to i8
  %11924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11923, i8* %11924, align 1
  %11925 = lshr i32 %11896, 31
  %11926 = lshr i32 %11898, 31
  %11927 = xor i32 %11926, %11925
  %11928 = xor i32 %11922, %11925
  %11929 = add i32 %11928, %11927
  %11930 = icmp eq i32 %11929, 2
  %11931 = zext i1 %11930 to i8
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11931, i8* %11932, align 1
  store %struct.Memory* %loadMem_4b1004, %struct.Memory** %MEMORY
  %loadMem_4b1006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11934 = getelementptr inbounds %struct.GPR, %struct.GPR* %11933, i32 0, i32 33
  %11935 = getelementptr inbounds %struct.Reg, %struct.Reg* %11934, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %11935 to i64*
  %11936 = load i64, i64* %PC.i963
  %11937 = add i64 %11936, 715
  %11938 = load i64, i64* %PC.i963
  %11939 = add i64 %11938, 6
  %11940 = load i64, i64* %PC.i963
  %11941 = add i64 %11940, 6
  store i64 %11941, i64* %PC.i963
  %11942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11943 = load i8, i8* %11942, align 1
  %11944 = icmp ne i8 %11943, 0
  %11945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11946 = load i8, i8* %11945, align 1
  %11947 = icmp ne i8 %11946, 0
  %11948 = xor i1 %11944, %11947
  %11949 = xor i1 %11948, true
  %11950 = zext i1 %11949 to i8
  store i8 %11950, i8* %BRANCH_TAKEN, align 1
  %11951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11952 = select i1 %11948, i64 %11939, i64 %11937
  store i64 %11952, i64* %11951, align 8
  store %struct.Memory* %loadMem_4b1006, %struct.Memory** %MEMORY
  %loadBr_4b1006 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1006 = icmp eq i8 %loadBr_4b1006, 1
  br i1 %cmpBr_4b1006, label %block_.L_4b12d1, label %block_4b100c

block_4b100c:                                     ; preds = %block_.L_4b0ff5
  %loadMem_4b100c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11954 = getelementptr inbounds %struct.GPR, %struct.GPR* %11953, i32 0, i32 33
  %11955 = getelementptr inbounds %struct.Reg, %struct.Reg* %11954, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %11955 to i64*
  %11956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11957 = getelementptr inbounds %struct.GPR, %struct.GPR* %11956, i32 0, i32 15
  %11958 = getelementptr inbounds %struct.Reg, %struct.Reg* %11957, i32 0, i32 0
  %RBP.i962 = bitcast %union.anon* %11958 to i64*
  %11959 = load i64, i64* %RBP.i962
  %11960 = sub i64 %11959, 16
  %11961 = load i64, i64* %PC.i961
  %11962 = add i64 %11961, 7
  store i64 %11962, i64* %PC.i961
  %11963 = inttoptr i64 %11960 to i32*
  store i32 0, i32* %11963
  store %struct.Memory* %loadMem_4b100c, %struct.Memory** %MEMORY
  br label %block_.L_4b1013

block_.L_4b1013:                                  ; preds = %block_.L_4b11b0, %block_4b100c
  %loadMem_4b1013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11965 = getelementptr inbounds %struct.GPR, %struct.GPR* %11964, i32 0, i32 33
  %11966 = getelementptr inbounds %struct.Reg, %struct.Reg* %11965, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %11966 to i64*
  %11967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11968 = getelementptr inbounds %struct.GPR, %struct.GPR* %11967, i32 0, i32 1
  %11969 = getelementptr inbounds %struct.Reg, %struct.Reg* %11968, i32 0, i32 0
  %RAX.i959 = bitcast %union.anon* %11969 to i64*
  %11970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11971 = getelementptr inbounds %struct.GPR, %struct.GPR* %11970, i32 0, i32 15
  %11972 = getelementptr inbounds %struct.Reg, %struct.Reg* %11971, i32 0, i32 0
  %RBP.i960 = bitcast %union.anon* %11972 to i64*
  %11973 = load i64, i64* %RBP.i960
  %11974 = sub i64 %11973, 16
  %11975 = load i64, i64* %PC.i958
  %11976 = add i64 %11975, 3
  store i64 %11976, i64* %PC.i958
  %11977 = inttoptr i64 %11974 to i32*
  %11978 = load i32, i32* %11977
  %11979 = zext i32 %11978 to i64
  store i64 %11979, i64* %RAX.i959, align 8
  store %struct.Memory* %loadMem_4b1013, %struct.Memory** %MEMORY
  %loadMem_4b1016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11981 = getelementptr inbounds %struct.GPR, %struct.GPR* %11980, i32 0, i32 33
  %11982 = getelementptr inbounds %struct.Reg, %struct.Reg* %11981, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %11982 to i64*
  %11983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11984 = getelementptr inbounds %struct.GPR, %struct.GPR* %11983, i32 0, i32 5
  %11985 = getelementptr inbounds %struct.Reg, %struct.Reg* %11984, i32 0, i32 0
  %RCX.i956 = bitcast %union.anon* %11985 to i64*
  %11986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11987 = getelementptr inbounds %struct.GPR, %struct.GPR* %11986, i32 0, i32 15
  %11988 = getelementptr inbounds %struct.Reg, %struct.Reg* %11987, i32 0, i32 0
  %RBP.i957 = bitcast %union.anon* %11988 to i64*
  %11989 = load i64, i64* %RBP.i957
  %11990 = sub i64 %11989, 35396
  %11991 = load i64, i64* %PC.i955
  %11992 = add i64 %11991, 7
  store i64 %11992, i64* %PC.i955
  %11993 = inttoptr i64 %11990 to i32*
  %11994 = load i32, i32* %11993
  %11995 = sext i32 %11994 to i64
  store i64 %11995, i64* %RCX.i956, align 8
  store %struct.Memory* %loadMem_4b1016, %struct.Memory** %MEMORY
  %loadMem_4b101d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11997 = getelementptr inbounds %struct.GPR, %struct.GPR* %11996, i32 0, i32 33
  %11998 = getelementptr inbounds %struct.Reg, %struct.Reg* %11997, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %11998 to i64*
  %11999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12000 = getelementptr inbounds %struct.GPR, %struct.GPR* %11999, i32 0, i32 1
  %12001 = getelementptr inbounds %struct.Reg, %struct.Reg* %12000, i32 0, i32 0
  %EAX.i953 = bitcast %union.anon* %12001 to i32*
  %12002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12003 = getelementptr inbounds %struct.GPR, %struct.GPR* %12002, i32 0, i32 5
  %12004 = getelementptr inbounds %struct.Reg, %struct.Reg* %12003, i32 0, i32 0
  %RCX.i954 = bitcast %union.anon* %12004 to i64*
  %12005 = load i32, i32* %EAX.i953
  %12006 = zext i32 %12005 to i64
  %12007 = load i64, i64* %RCX.i954
  %12008 = mul i64 %12007, 4
  %12009 = add i64 %12008, 7489456
  %12010 = load i64, i64* %PC.i952
  %12011 = add i64 %12010, 7
  store i64 %12011, i64* %PC.i952
  %12012 = inttoptr i64 %12009 to i32*
  %12013 = load i32, i32* %12012
  %12014 = sub i32 %12005, %12013
  %12015 = icmp ult i32 %12005, %12013
  %12016 = zext i1 %12015 to i8
  %12017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12016, i8* %12017, align 1
  %12018 = and i32 %12014, 255
  %12019 = call i32 @llvm.ctpop.i32(i32 %12018)
  %12020 = trunc i32 %12019 to i8
  %12021 = and i8 %12020, 1
  %12022 = xor i8 %12021, 1
  %12023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12022, i8* %12023, align 1
  %12024 = xor i32 %12013, %12005
  %12025 = xor i32 %12024, %12014
  %12026 = lshr i32 %12025, 4
  %12027 = trunc i32 %12026 to i8
  %12028 = and i8 %12027, 1
  %12029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12028, i8* %12029, align 1
  %12030 = icmp eq i32 %12014, 0
  %12031 = zext i1 %12030 to i8
  %12032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12031, i8* %12032, align 1
  %12033 = lshr i32 %12014, 31
  %12034 = trunc i32 %12033 to i8
  %12035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12034, i8* %12035, align 1
  %12036 = lshr i32 %12005, 31
  %12037 = lshr i32 %12013, 31
  %12038 = xor i32 %12037, %12036
  %12039 = xor i32 %12033, %12036
  %12040 = add i32 %12039, %12038
  %12041 = icmp eq i32 %12040, 2
  %12042 = zext i1 %12041 to i8
  %12043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12042, i8* %12043, align 1
  store %struct.Memory* %loadMem_4b101d, %struct.Memory** %MEMORY
  %loadMem_4b1024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12045 = getelementptr inbounds %struct.GPR, %struct.GPR* %12044, i32 0, i32 33
  %12046 = getelementptr inbounds %struct.Reg, %struct.Reg* %12045, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %12046 to i64*
  %12047 = load i64, i64* %PC.i951
  %12048 = add i64 %12047, 660
  %12049 = load i64, i64* %PC.i951
  %12050 = add i64 %12049, 6
  %12051 = load i64, i64* %PC.i951
  %12052 = add i64 %12051, 6
  store i64 %12052, i64* %PC.i951
  %12053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12054 = load i8, i8* %12053, align 1
  %12055 = icmp ne i8 %12054, 0
  %12056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12057 = load i8, i8* %12056, align 1
  %12058 = icmp ne i8 %12057, 0
  %12059 = xor i1 %12055, %12058
  %12060 = xor i1 %12059, true
  %12061 = zext i1 %12060 to i8
  store i8 %12061, i8* %BRANCH_TAKEN, align 1
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12063 = select i1 %12059, i64 %12050, i64 %12048
  store i64 %12063, i64* %12062, align 8
  store %struct.Memory* %loadMem_4b1024, %struct.Memory** %MEMORY
  %loadBr_4b1024 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1024 = icmp eq i8 %loadBr_4b1024, 1
  br i1 %cmpBr_4b1024, label %block_.L_4b12b8, label %block_4b102a

block_4b102a:                                     ; preds = %block_.L_4b1013
  %loadMem_4b102a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12065 = getelementptr inbounds %struct.GPR, %struct.GPR* %12064, i32 0, i32 33
  %12066 = getelementptr inbounds %struct.Reg, %struct.Reg* %12065, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %12066 to i64*
  %12067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12068 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12067, i64 0, i64 0
  %YMM0.i949 = bitcast %union.VectorReg* %12068 to %"class.std::bitset"*
  %12069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12070 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12069, i64 0, i64 0
  %XMM0.i950 = bitcast %union.VectorReg* %12070 to %union.vec128_t*
  %12071 = bitcast %"class.std::bitset"* %YMM0.i949 to i8*
  %12072 = bitcast %"class.std::bitset"* %YMM0.i949 to i8*
  %12073 = bitcast %union.vec128_t* %XMM0.i950 to i8*
  %12074 = load i64, i64* %PC.i948
  %12075 = add i64 %12074, 3
  store i64 %12075, i64* %PC.i948
  %12076 = bitcast i8* %12072 to i64*
  %12077 = load i64, i64* %12076, align 1
  %12078 = getelementptr inbounds i8, i8* %12072, i64 8
  %12079 = bitcast i8* %12078 to i64*
  %12080 = load i64, i64* %12079, align 1
  %12081 = bitcast i8* %12073 to i64*
  %12082 = load i64, i64* %12081, align 1
  %12083 = getelementptr inbounds i8, i8* %12073, i64 8
  %12084 = bitcast i8* %12083 to i64*
  %12085 = load i64, i64* %12084, align 1
  %12086 = xor i64 %12082, %12077
  %12087 = xor i64 %12085, %12080
  %12088 = trunc i64 %12086 to i32
  %12089 = lshr i64 %12086, 32
  %12090 = trunc i64 %12089 to i32
  %12091 = bitcast i8* %12071 to i32*
  store i32 %12088, i32* %12091, align 1
  %12092 = getelementptr inbounds i8, i8* %12071, i64 4
  %12093 = bitcast i8* %12092 to i32*
  store i32 %12090, i32* %12093, align 1
  %12094 = trunc i64 %12087 to i32
  %12095 = getelementptr inbounds i8, i8* %12071, i64 8
  %12096 = bitcast i8* %12095 to i32*
  store i32 %12094, i32* %12096, align 1
  %12097 = lshr i64 %12087, 32
  %12098 = trunc i64 %12097 to i32
  %12099 = getelementptr inbounds i8, i8* %12071, i64 12
  %12100 = bitcast i8* %12099 to i32*
  store i32 %12098, i32* %12100, align 1
  store %struct.Memory* %loadMem_4b102a, %struct.Memory** %MEMORY
  %loadMem_4b102d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12102 = getelementptr inbounds %struct.GPR, %struct.GPR* %12101, i32 0, i32 33
  %12103 = getelementptr inbounds %struct.Reg, %struct.Reg* %12102, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %12103 to i64*
  %12104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12105 = getelementptr inbounds %struct.GPR, %struct.GPR* %12104, i32 0, i32 1
  %12106 = getelementptr inbounds %struct.Reg, %struct.Reg* %12105, i32 0, i32 0
  %RAX.i946 = bitcast %union.anon* %12106 to i64*
  %12107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12108 = getelementptr inbounds %struct.GPR, %struct.GPR* %12107, i32 0, i32 15
  %12109 = getelementptr inbounds %struct.Reg, %struct.Reg* %12108, i32 0, i32 0
  %RBP.i947 = bitcast %union.anon* %12109 to i64*
  %12110 = load i64, i64* %RBP.i947
  %12111 = sub i64 %12110, 768
  %12112 = load i64, i64* %PC.i945
  %12113 = add i64 %12112, 7
  store i64 %12113, i64* %PC.i945
  store i64 %12111, i64* %RAX.i946, align 8
  store %struct.Memory* %loadMem_4b102d, %struct.Memory** %MEMORY
  %loadMem_4b1034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12115 = getelementptr inbounds %struct.GPR, %struct.GPR* %12114, i32 0, i32 33
  %12116 = getelementptr inbounds %struct.Reg, %struct.Reg* %12115, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %12116 to i64*
  %12117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12118 = getelementptr inbounds %struct.GPR, %struct.GPR* %12117, i32 0, i32 5
  %12119 = getelementptr inbounds %struct.Reg, %struct.Reg* %12118, i32 0, i32 0
  %RCX.i943 = bitcast %union.anon* %12119 to i64*
  %12120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12121 = getelementptr inbounds %struct.GPR, %struct.GPR* %12120, i32 0, i32 15
  %12122 = getelementptr inbounds %struct.Reg, %struct.Reg* %12121, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %12122 to i64*
  %12123 = load i64, i64* %RBP.i944
  %12124 = sub i64 %12123, 35396
  %12125 = load i64, i64* %PC.i942
  %12126 = add i64 %12125, 7
  store i64 %12126, i64* %PC.i942
  %12127 = inttoptr i64 %12124 to i32*
  %12128 = load i32, i32* %12127
  %12129 = sext i32 %12128 to i64
  store i64 %12129, i64* %RCX.i943, align 8
  store %struct.Memory* %loadMem_4b1034, %struct.Memory** %MEMORY
  %loadMem_4b103b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12131 = getelementptr inbounds %struct.GPR, %struct.GPR* %12130, i32 0, i32 33
  %12132 = getelementptr inbounds %struct.Reg, %struct.Reg* %12131, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %12132 to i64*
  %12133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12134 = getelementptr inbounds %struct.GPR, %struct.GPR* %12133, i32 0, i32 5
  %12135 = getelementptr inbounds %struct.Reg, %struct.Reg* %12134, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %12135 to i64*
  %12136 = load i64, i64* %RCX.i941
  %12137 = load i64, i64* %PC.i940
  %12138 = add i64 %12137, 4
  store i64 %12138, i64* %PC.i940
  %12139 = sext i64 %12136 to i128
  %12140 = and i128 %12139, -18446744073709551616
  %12141 = zext i64 %12136 to i128
  %12142 = or i128 %12140, %12141
  %12143 = mul i128 120, %12142
  %12144 = trunc i128 %12143 to i64
  store i64 %12144, i64* %RCX.i941, align 8
  %12145 = sext i64 %12144 to i128
  %12146 = icmp ne i128 %12145, %12143
  %12147 = zext i1 %12146 to i8
  %12148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12147, i8* %12148, align 1
  %12149 = trunc i128 %12143 to i32
  %12150 = and i32 %12149, 255
  %12151 = call i32 @llvm.ctpop.i32(i32 %12150)
  %12152 = trunc i32 %12151 to i8
  %12153 = and i8 %12152, 1
  %12154 = xor i8 %12153, 1
  %12155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12154, i8* %12155, align 1
  %12156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12156, align 1
  %12157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12157, align 1
  %12158 = lshr i64 %12144, 63
  %12159 = trunc i64 %12158 to i8
  %12160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12159, i8* %12160, align 1
  %12161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12147, i8* %12161, align 1
  store %struct.Memory* %loadMem_4b103b, %struct.Memory** %MEMORY
  %loadMem_4b103f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12163 = getelementptr inbounds %struct.GPR, %struct.GPR* %12162, i32 0, i32 33
  %12164 = getelementptr inbounds %struct.Reg, %struct.Reg* %12163, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %12164 to i64*
  %12165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12166 = getelementptr inbounds %struct.GPR, %struct.GPR* %12165, i32 0, i32 1
  %12167 = getelementptr inbounds %struct.Reg, %struct.Reg* %12166, i32 0, i32 0
  %RAX.i938 = bitcast %union.anon* %12167 to i64*
  %12168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12169 = getelementptr inbounds %struct.GPR, %struct.GPR* %12168, i32 0, i32 5
  %12170 = getelementptr inbounds %struct.Reg, %struct.Reg* %12169, i32 0, i32 0
  %RCX.i939 = bitcast %union.anon* %12170 to i64*
  %12171 = load i64, i64* %RAX.i938
  %12172 = load i64, i64* %RCX.i939
  %12173 = load i64, i64* %PC.i937
  %12174 = add i64 %12173, 3
  store i64 %12174, i64* %PC.i937
  %12175 = add i64 %12172, %12171
  store i64 %12175, i64* %RAX.i938, align 8
  %12176 = icmp ult i64 %12175, %12171
  %12177 = icmp ult i64 %12175, %12172
  %12178 = or i1 %12176, %12177
  %12179 = zext i1 %12178 to i8
  %12180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12179, i8* %12180, align 1
  %12181 = trunc i64 %12175 to i32
  %12182 = and i32 %12181, 255
  %12183 = call i32 @llvm.ctpop.i32(i32 %12182)
  %12184 = trunc i32 %12183 to i8
  %12185 = and i8 %12184, 1
  %12186 = xor i8 %12185, 1
  %12187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12186, i8* %12187, align 1
  %12188 = xor i64 %12172, %12171
  %12189 = xor i64 %12188, %12175
  %12190 = lshr i64 %12189, 4
  %12191 = trunc i64 %12190 to i8
  %12192 = and i8 %12191, 1
  %12193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12192, i8* %12193, align 1
  %12194 = icmp eq i64 %12175, 0
  %12195 = zext i1 %12194 to i8
  %12196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12195, i8* %12196, align 1
  %12197 = lshr i64 %12175, 63
  %12198 = trunc i64 %12197 to i8
  %12199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12198, i8* %12199, align 1
  %12200 = lshr i64 %12171, 63
  %12201 = lshr i64 %12172, 63
  %12202 = xor i64 %12197, %12200
  %12203 = xor i64 %12197, %12201
  %12204 = add i64 %12202, %12203
  %12205 = icmp eq i64 %12204, 2
  %12206 = zext i1 %12205 to i8
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12206, i8* %12207, align 1
  store %struct.Memory* %loadMem_4b103f, %struct.Memory** %MEMORY
  %loadMem_4b1042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12209 = getelementptr inbounds %struct.GPR, %struct.GPR* %12208, i32 0, i32 33
  %12210 = getelementptr inbounds %struct.Reg, %struct.Reg* %12209, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %12210 to i64*
  %12211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12212 = getelementptr inbounds %struct.GPR, %struct.GPR* %12211, i32 0, i32 5
  %12213 = getelementptr inbounds %struct.Reg, %struct.Reg* %12212, i32 0, i32 0
  %RCX.i935 = bitcast %union.anon* %12213 to i64*
  %12214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12215 = getelementptr inbounds %struct.GPR, %struct.GPR* %12214, i32 0, i32 15
  %12216 = getelementptr inbounds %struct.Reg, %struct.Reg* %12215, i32 0, i32 0
  %RBP.i936 = bitcast %union.anon* %12216 to i64*
  %12217 = load i64, i64* %RBP.i936
  %12218 = sub i64 %12217, 16
  %12219 = load i64, i64* %PC.i934
  %12220 = add i64 %12219, 4
  store i64 %12220, i64* %PC.i934
  %12221 = inttoptr i64 %12218 to i32*
  %12222 = load i32, i32* %12221
  %12223 = sext i32 %12222 to i64
  store i64 %12223, i64* %RCX.i935, align 8
  store %struct.Memory* %loadMem_4b1042, %struct.Memory** %MEMORY
  %loadMem_4b1046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12225 = getelementptr inbounds %struct.GPR, %struct.GPR* %12224, i32 0, i32 33
  %12226 = getelementptr inbounds %struct.Reg, %struct.Reg* %12225, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %12226 to i64*
  %12227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12228 = getelementptr inbounds %struct.GPR, %struct.GPR* %12227, i32 0, i32 1
  %12229 = getelementptr inbounds %struct.Reg, %struct.Reg* %12228, i32 0, i32 0
  %RAX.i931 = bitcast %union.anon* %12229 to i64*
  %12230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12231 = getelementptr inbounds %struct.GPR, %struct.GPR* %12230, i32 0, i32 5
  %12232 = getelementptr inbounds %struct.Reg, %struct.Reg* %12231, i32 0, i32 0
  %RCX.i932 = bitcast %union.anon* %12232 to i64*
  %12233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12234 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12233, i64 0, i64 0
  %XMM0.i933 = bitcast %union.VectorReg* %12234 to %union.vec128_t*
  %12235 = load i64, i64* %RAX.i931
  %12236 = load i64, i64* %RCX.i932
  %12237 = mul i64 %12236, 8
  %12238 = add i64 %12237, %12235
  %12239 = bitcast %union.vec128_t* %XMM0.i933 to i8*
  %12240 = load i64, i64* %PC.i930
  %12241 = add i64 %12240, 5
  store i64 %12241, i64* %PC.i930
  %12242 = bitcast i8* %12239 to double*
  %12243 = load double, double* %12242, align 1
  %12244 = inttoptr i64 %12238 to double*
  store double %12243, double* %12244
  store %struct.Memory* %loadMem_4b1046, %struct.Memory** %MEMORY
  %loadMem_4b104b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12246 = getelementptr inbounds %struct.GPR, %struct.GPR* %12245, i32 0, i32 33
  %12247 = getelementptr inbounds %struct.Reg, %struct.Reg* %12246, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %12247 to i64*
  %12248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12249 = getelementptr inbounds %struct.GPR, %struct.GPR* %12248, i32 0, i32 1
  %12250 = getelementptr inbounds %struct.Reg, %struct.Reg* %12249, i32 0, i32 0
  %RAX.i928 = bitcast %union.anon* %12250 to i64*
  %12251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12252 = getelementptr inbounds %struct.GPR, %struct.GPR* %12251, i32 0, i32 15
  %12253 = getelementptr inbounds %struct.Reg, %struct.Reg* %12252, i32 0, i32 0
  %RBP.i929 = bitcast %union.anon* %12253 to i64*
  %12254 = load i64, i64* %RBP.i929
  %12255 = sub i64 %12254, 35396
  %12256 = load i64, i64* %PC.i927
  %12257 = add i64 %12256, 7
  store i64 %12257, i64* %PC.i927
  %12258 = inttoptr i64 %12255 to i32*
  %12259 = load i32, i32* %12258
  %12260 = sext i32 %12259 to i64
  store i64 %12260, i64* %RAX.i928, align 8
  store %struct.Memory* %loadMem_4b104b, %struct.Memory** %MEMORY
  %loadMem_4b1052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12262 = getelementptr inbounds %struct.GPR, %struct.GPR* %12261, i32 0, i32 33
  %12263 = getelementptr inbounds %struct.Reg, %struct.Reg* %12262, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %12263 to i64*
  %12264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12265 = getelementptr inbounds %struct.GPR, %struct.GPR* %12264, i32 0, i32 1
  %12266 = getelementptr inbounds %struct.Reg, %struct.Reg* %12265, i32 0, i32 0
  %RAX.i926 = bitcast %union.anon* %12266 to i64*
  %12267 = load i64, i64* %RAX.i926
  %12268 = mul i64 %12267, 8
  %12269 = add i64 %12268, 7482144
  %12270 = load i64, i64* %PC.i925
  %12271 = add i64 %12270, 8
  store i64 %12271, i64* %PC.i925
  %12272 = inttoptr i64 %12269 to i64*
  %12273 = load i64, i64* %12272
  store i64 %12273, i64* %RAX.i926, align 8
  store %struct.Memory* %loadMem_4b1052, %struct.Memory** %MEMORY
  %loadMem_4b105a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12275 = getelementptr inbounds %struct.GPR, %struct.GPR* %12274, i32 0, i32 33
  %12276 = getelementptr inbounds %struct.Reg, %struct.Reg* %12275, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %12276 to i64*
  %12277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12278 = getelementptr inbounds %struct.GPR, %struct.GPR* %12277, i32 0, i32 5
  %12279 = getelementptr inbounds %struct.Reg, %struct.Reg* %12278, i32 0, i32 0
  %RCX.i923 = bitcast %union.anon* %12279 to i64*
  %12280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12281 = getelementptr inbounds %struct.GPR, %struct.GPR* %12280, i32 0, i32 15
  %12282 = getelementptr inbounds %struct.Reg, %struct.Reg* %12281, i32 0, i32 0
  %RBP.i924 = bitcast %union.anon* %12282 to i64*
  %12283 = load i64, i64* %RBP.i924
  %12284 = sub i64 %12283, 16
  %12285 = load i64, i64* %PC.i922
  %12286 = add i64 %12285, 4
  store i64 %12286, i64* %PC.i922
  %12287 = inttoptr i64 %12284 to i32*
  %12288 = load i32, i32* %12287
  %12289 = sext i32 %12288 to i64
  store i64 %12289, i64* %RCX.i923, align 8
  store %struct.Memory* %loadMem_4b105a, %struct.Memory** %MEMORY
  %loadMem_4b105e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12291 = getelementptr inbounds %struct.GPR, %struct.GPR* %12290, i32 0, i32 33
  %12292 = getelementptr inbounds %struct.Reg, %struct.Reg* %12291, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %12292 to i64*
  %12293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12294 = getelementptr inbounds %struct.GPR, %struct.GPR* %12293, i32 0, i32 1
  %12295 = getelementptr inbounds %struct.Reg, %struct.Reg* %12294, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %12295 to i64*
  %12296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12297 = getelementptr inbounds %struct.GPR, %struct.GPR* %12296, i32 0, i32 5
  %12298 = getelementptr inbounds %struct.Reg, %struct.Reg* %12297, i32 0, i32 0
  %RCX.i921 = bitcast %union.anon* %12298 to i64*
  %12299 = load i64, i64* %RAX.i920
  %12300 = load i64, i64* %RCX.i921
  %12301 = mul i64 %12300, 8
  %12302 = add i64 %12301, %12299
  %12303 = load i64, i64* %PC.i919
  %12304 = add i64 %12303, 4
  store i64 %12304, i64* %PC.i919
  %12305 = inttoptr i64 %12302 to i64*
  %12306 = load i64, i64* %12305
  store i64 %12306, i64* %RAX.i920, align 8
  store %struct.Memory* %loadMem_4b105e, %struct.Memory** %MEMORY
  %loadMem_4b1062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12308 = getelementptr inbounds %struct.GPR, %struct.GPR* %12307, i32 0, i32 33
  %12309 = getelementptr inbounds %struct.Reg, %struct.Reg* %12308, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %12309 to i64*
  %12310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12311 = getelementptr inbounds %struct.GPR, %struct.GPR* %12310, i32 0, i32 1
  %12312 = getelementptr inbounds %struct.Reg, %struct.Reg* %12311, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %12312 to i64*
  %12313 = load i64, i64* %RAX.i918
  %12314 = add i64 %12313, 6432
  %12315 = load i64, i64* %PC.i917
  %12316 = add i64 %12315, 7
  store i64 %12316, i64* %PC.i917
  %12317 = inttoptr i64 %12314 to i64*
  %12318 = load i64, i64* %12317
  store i64 %12318, i64* %RAX.i918, align 8
  store %struct.Memory* %loadMem_4b1062, %struct.Memory** %MEMORY
  %loadMem_4b1069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12320 = getelementptr inbounds %struct.GPR, %struct.GPR* %12319, i32 0, i32 33
  %12321 = getelementptr inbounds %struct.Reg, %struct.Reg* %12320, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %12321 to i64*
  %12322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12323 = getelementptr inbounds %struct.GPR, %struct.GPR* %12322, i32 0, i32 1
  %12324 = getelementptr inbounds %struct.Reg, %struct.Reg* %12323, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %12324 to i64*
  %12325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12326 = getelementptr inbounds %struct.GPR, %struct.GPR* %12325, i32 0, i32 15
  %12327 = getelementptr inbounds %struct.Reg, %struct.Reg* %12326, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %12327 to i64*
  %12328 = load i64, i64* %RBP.i916
  %12329 = sub i64 %12328, 784
  %12330 = load i64, i64* %RAX.i915
  %12331 = load i64, i64* %PC.i914
  %12332 = add i64 %12331, 7
  store i64 %12332, i64* %PC.i914
  %12333 = inttoptr i64 %12329 to i64*
  store i64 %12330, i64* %12333
  store %struct.Memory* %loadMem_4b1069, %struct.Memory** %MEMORY
  %loadMem_4b1070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12335 = getelementptr inbounds %struct.GPR, %struct.GPR* %12334, i32 0, i32 33
  %12336 = getelementptr inbounds %struct.Reg, %struct.Reg* %12335, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %12336 to i64*
  %12337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12338 = getelementptr inbounds %struct.GPR, %struct.GPR* %12337, i32 0, i32 1
  %12339 = getelementptr inbounds %struct.Reg, %struct.Reg* %12338, i32 0, i32 0
  %RAX.i912 = bitcast %union.anon* %12339 to i64*
  %12340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12341 = getelementptr inbounds %struct.GPR, %struct.GPR* %12340, i32 0, i32 15
  %12342 = getelementptr inbounds %struct.Reg, %struct.Reg* %12341, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %12342 to i64*
  %12343 = load i64, i64* %RBP.i913
  %12344 = sub i64 %12343, 35396
  %12345 = load i64, i64* %PC.i911
  %12346 = add i64 %12345, 7
  store i64 %12346, i64* %PC.i911
  %12347 = inttoptr i64 %12344 to i32*
  %12348 = load i32, i32* %12347
  %12349 = sext i32 %12348 to i64
  store i64 %12349, i64* %RAX.i912, align 8
  store %struct.Memory* %loadMem_4b1070, %struct.Memory** %MEMORY
  %loadMem_4b1077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12351 = getelementptr inbounds %struct.GPR, %struct.GPR* %12350, i32 0, i32 33
  %12352 = getelementptr inbounds %struct.Reg, %struct.Reg* %12351, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %12352 to i64*
  %12353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12354 = getelementptr inbounds %struct.GPR, %struct.GPR* %12353, i32 0, i32 1
  %12355 = getelementptr inbounds %struct.Reg, %struct.Reg* %12354, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %12355 to i64*
  %12356 = load i64, i64* %RAX.i910
  %12357 = mul i64 %12356, 8
  %12358 = add i64 %12357, 7482144
  %12359 = load i64, i64* %PC.i909
  %12360 = add i64 %12359, 8
  store i64 %12360, i64* %PC.i909
  %12361 = inttoptr i64 %12358 to i64*
  %12362 = load i64, i64* %12361
  store i64 %12362, i64* %RAX.i910, align 8
  store %struct.Memory* %loadMem_4b1077, %struct.Memory** %MEMORY
  %loadMem_4b107f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12364 = getelementptr inbounds %struct.GPR, %struct.GPR* %12363, i32 0, i32 33
  %12365 = getelementptr inbounds %struct.Reg, %struct.Reg* %12364, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %12365 to i64*
  %12366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12367 = getelementptr inbounds %struct.GPR, %struct.GPR* %12366, i32 0, i32 5
  %12368 = getelementptr inbounds %struct.Reg, %struct.Reg* %12367, i32 0, i32 0
  %RCX.i907 = bitcast %union.anon* %12368 to i64*
  %12369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12370 = getelementptr inbounds %struct.GPR, %struct.GPR* %12369, i32 0, i32 15
  %12371 = getelementptr inbounds %struct.Reg, %struct.Reg* %12370, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %12371 to i64*
  %12372 = load i64, i64* %RBP.i908
  %12373 = sub i64 %12372, 16
  %12374 = load i64, i64* %PC.i906
  %12375 = add i64 %12374, 4
  store i64 %12375, i64* %PC.i906
  %12376 = inttoptr i64 %12373 to i32*
  %12377 = load i32, i32* %12376
  %12378 = sext i32 %12377 to i64
  store i64 %12378, i64* %RCX.i907, align 8
  store %struct.Memory* %loadMem_4b107f, %struct.Memory** %MEMORY
  %loadMem_4b1083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12380 = getelementptr inbounds %struct.GPR, %struct.GPR* %12379, i32 0, i32 33
  %12381 = getelementptr inbounds %struct.Reg, %struct.Reg* %12380, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %12381 to i64*
  %12382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12383 = getelementptr inbounds %struct.GPR, %struct.GPR* %12382, i32 0, i32 1
  %12384 = getelementptr inbounds %struct.Reg, %struct.Reg* %12383, i32 0, i32 0
  %RAX.i904 = bitcast %union.anon* %12384 to i64*
  %12385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12386 = getelementptr inbounds %struct.GPR, %struct.GPR* %12385, i32 0, i32 5
  %12387 = getelementptr inbounds %struct.Reg, %struct.Reg* %12386, i32 0, i32 0
  %RCX.i905 = bitcast %union.anon* %12387 to i64*
  %12388 = load i64, i64* %RAX.i904
  %12389 = load i64, i64* %RCX.i905
  %12390 = mul i64 %12389, 8
  %12391 = add i64 %12390, %12388
  %12392 = load i64, i64* %PC.i903
  %12393 = add i64 %12392, 4
  store i64 %12393, i64* %PC.i903
  %12394 = inttoptr i64 %12391 to i64*
  %12395 = load i64, i64* %12394
  store i64 %12395, i64* %RAX.i904, align 8
  store %struct.Memory* %loadMem_4b1083, %struct.Memory** %MEMORY
  %loadMem_4b1087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12397 = getelementptr inbounds %struct.GPR, %struct.GPR* %12396, i32 0, i32 33
  %12398 = getelementptr inbounds %struct.Reg, %struct.Reg* %12397, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %12398 to i64*
  %12399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12400 = getelementptr inbounds %struct.GPR, %struct.GPR* %12399, i32 0, i32 1
  %12401 = getelementptr inbounds %struct.Reg, %struct.Reg* %12400, i32 0, i32 0
  %RAX.i902 = bitcast %union.anon* %12401 to i64*
  %12402 = load i64, i64* %RAX.i902
  %12403 = add i64 %12402, 6440
  %12404 = load i64, i64* %PC.i901
  %12405 = add i64 %12404, 7
  store i64 %12405, i64* %PC.i901
  %12406 = inttoptr i64 %12403 to i64*
  %12407 = load i64, i64* %12406
  store i64 %12407, i64* %RAX.i902, align 8
  store %struct.Memory* %loadMem_4b1087, %struct.Memory** %MEMORY
  %loadMem_4b108e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 33
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %12410 to i64*
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12412 = getelementptr inbounds %struct.GPR, %struct.GPR* %12411, i32 0, i32 1
  %12413 = getelementptr inbounds %struct.Reg, %struct.Reg* %12412, i32 0, i32 0
  %RAX.i899 = bitcast %union.anon* %12413 to i64*
  %12414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12415 = getelementptr inbounds %struct.GPR, %struct.GPR* %12414, i32 0, i32 15
  %12416 = getelementptr inbounds %struct.Reg, %struct.Reg* %12415, i32 0, i32 0
  %RBP.i900 = bitcast %union.anon* %12416 to i64*
  %12417 = load i64, i64* %RBP.i900
  %12418 = sub i64 %12417, 792
  %12419 = load i64, i64* %RAX.i899
  %12420 = load i64, i64* %PC.i898
  %12421 = add i64 %12420, 7
  store i64 %12421, i64* %PC.i898
  %12422 = inttoptr i64 %12418 to i64*
  store i64 %12419, i64* %12422
  store %struct.Memory* %loadMem_4b108e, %struct.Memory** %MEMORY
  %loadMem_4b1095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12424 = getelementptr inbounds %struct.GPR, %struct.GPR* %12423, i32 0, i32 33
  %12425 = getelementptr inbounds %struct.Reg, %struct.Reg* %12424, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %12425 to i64*
  %12426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12427 = getelementptr inbounds %struct.GPR, %struct.GPR* %12426, i32 0, i32 15
  %12428 = getelementptr inbounds %struct.Reg, %struct.Reg* %12427, i32 0, i32 0
  %RBP.i897 = bitcast %union.anon* %12428 to i64*
  %12429 = load i64, i64* %RBP.i897
  %12430 = sub i64 %12429, 8
  %12431 = load i64, i64* %PC.i896
  %12432 = add i64 %12431, 7
  store i64 %12432, i64* %PC.i896
  %12433 = inttoptr i64 %12430 to i32*
  store i32 0, i32* %12433
  store %struct.Memory* %loadMem_4b1095, %struct.Memory** %MEMORY
  br label %block_.L_4b109c

block_.L_4b109c:                                  ; preds = %block_4b10be, %block_4b102a
  %loadMem_4b109c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12435 = getelementptr inbounds %struct.GPR, %struct.GPR* %12434, i32 0, i32 33
  %12436 = getelementptr inbounds %struct.Reg, %struct.Reg* %12435, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %12436 to i64*
  %12437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12438 = getelementptr inbounds %struct.GPR, %struct.GPR* %12437, i32 0, i32 1
  %12439 = getelementptr inbounds %struct.Reg, %struct.Reg* %12438, i32 0, i32 0
  %RAX.i894 = bitcast %union.anon* %12439 to i64*
  %12440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12441 = getelementptr inbounds %struct.GPR, %struct.GPR* %12440, i32 0, i32 15
  %12442 = getelementptr inbounds %struct.Reg, %struct.Reg* %12441, i32 0, i32 0
  %RBP.i895 = bitcast %union.anon* %12442 to i64*
  %12443 = load i64, i64* %RBP.i895
  %12444 = sub i64 %12443, 8
  %12445 = load i64, i64* %PC.i893
  %12446 = add i64 %12445, 3
  store i64 %12446, i64* %PC.i893
  %12447 = inttoptr i64 %12444 to i32*
  %12448 = load i32, i32* %12447
  %12449 = zext i32 %12448 to i64
  store i64 %12449, i64* %RAX.i894, align 8
  store %struct.Memory* %loadMem_4b109c, %struct.Memory** %MEMORY
  %loadMem_4b109f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12451 = getelementptr inbounds %struct.GPR, %struct.GPR* %12450, i32 0, i32 33
  %12452 = getelementptr inbounds %struct.Reg, %struct.Reg* %12451, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %12452 to i64*
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12454 = getelementptr inbounds %struct.GPR, %struct.GPR* %12453, i32 0, i32 5
  %12455 = getelementptr inbounds %struct.Reg, %struct.Reg* %12454, i32 0, i32 0
  %RCX.i892 = bitcast %union.anon* %12455 to i64*
  %12456 = load i64, i64* %PC.i891
  %12457 = add i64 %12456, 8
  store i64 %12457, i64* %PC.i891
  %12458 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12458, i64* %RCX.i892, align 8
  store %struct.Memory* %loadMem_4b109f, %struct.Memory** %MEMORY
  %loadMem_4b10a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12460 = getelementptr inbounds %struct.GPR, %struct.GPR* %12459, i32 0, i32 33
  %12461 = getelementptr inbounds %struct.Reg, %struct.Reg* %12460, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %12461 to i64*
  %12462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12463 = getelementptr inbounds %struct.GPR, %struct.GPR* %12462, i32 0, i32 5
  %12464 = getelementptr inbounds %struct.Reg, %struct.Reg* %12463, i32 0, i32 0
  %RCX.i889 = bitcast %union.anon* %12464 to i64*
  %12465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12466 = getelementptr inbounds %struct.GPR, %struct.GPR* %12465, i32 0, i32 7
  %12467 = getelementptr inbounds %struct.Reg, %struct.Reg* %12466, i32 0, i32 0
  %RDX.i890 = bitcast %union.anon* %12467 to i64*
  %12468 = load i64, i64* %RCX.i889
  %12469 = add i64 %12468, 60
  %12470 = load i64, i64* %PC.i888
  %12471 = add i64 %12470, 3
  store i64 %12471, i64* %PC.i888
  %12472 = inttoptr i64 %12469 to i32*
  %12473 = load i32, i32* %12472
  %12474 = zext i32 %12473 to i64
  store i64 %12474, i64* %RDX.i890, align 8
  store %struct.Memory* %loadMem_4b10a7, %struct.Memory** %MEMORY
  %loadMem_4b10aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12476 = getelementptr inbounds %struct.GPR, %struct.GPR* %12475, i32 0, i32 33
  %12477 = getelementptr inbounds %struct.Reg, %struct.Reg* %12476, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %12477 to i64*
  %12478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12479 = getelementptr inbounds %struct.GPR, %struct.GPR* %12478, i32 0, i32 5
  %12480 = getelementptr inbounds %struct.Reg, %struct.Reg* %12479, i32 0, i32 0
  %RCX.i887 = bitcast %union.anon* %12480 to i64*
  %12481 = load i64, i64* %PC.i886
  %12482 = add i64 %12481, 8
  store i64 %12482, i64* %PC.i886
  %12483 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %12483, i64* %RCX.i887, align 8
  store %struct.Memory* %loadMem_4b10aa, %struct.Memory** %MEMORY
  %loadMem_4b10b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12485 = getelementptr inbounds %struct.GPR, %struct.GPR* %12484, i32 0, i32 33
  %12486 = getelementptr inbounds %struct.Reg, %struct.Reg* %12485, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %12486 to i64*
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12488 = getelementptr inbounds %struct.GPR, %struct.GPR* %12487, i32 0, i32 5
  %12489 = getelementptr inbounds %struct.Reg, %struct.Reg* %12488, i32 0, i32 0
  %RCX.i884 = bitcast %union.anon* %12489 to i64*
  %12490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12491 = getelementptr inbounds %struct.GPR, %struct.GPR* %12490, i32 0, i32 7
  %12492 = getelementptr inbounds %struct.Reg, %struct.Reg* %12491, i32 0, i32 0
  %RDX.i885 = bitcast %union.anon* %12492 to i64*
  %12493 = load i64, i64* %RDX.i885
  %12494 = load i64, i64* %RCX.i884
  %12495 = add i64 %12494, 52
  %12496 = load i64, i64* %PC.i883
  %12497 = add i64 %12496, 4
  store i64 %12497, i64* %PC.i883
  %12498 = inttoptr i64 %12495 to i32*
  %12499 = load i32, i32* %12498
  %12500 = shl i64 %12493, 32
  %12501 = ashr exact i64 %12500, 32
  %12502 = sext i32 %12499 to i64
  %12503 = mul i64 %12502, %12501
  %12504 = trunc i64 %12503 to i32
  %12505 = and i64 %12503, 4294967295
  store i64 %12505, i64* %RDX.i885, align 8
  %12506 = shl i64 %12503, 32
  %12507 = ashr exact i64 %12506, 32
  %12508 = icmp ne i64 %12507, %12503
  %12509 = zext i1 %12508 to i8
  %12510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12509, i8* %12510, align 1
  %12511 = and i32 %12504, 255
  %12512 = call i32 @llvm.ctpop.i32(i32 %12511)
  %12513 = trunc i32 %12512 to i8
  %12514 = and i8 %12513, 1
  %12515 = xor i8 %12514, 1
  %12516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12515, i8* %12516, align 1
  %12517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12517, align 1
  %12518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12518, align 1
  %12519 = lshr i32 %12504, 31
  %12520 = trunc i32 %12519 to i8
  %12521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12520, i8* %12521, align 1
  %12522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12509, i8* %12522, align 1
  store %struct.Memory* %loadMem_4b10b2, %struct.Memory** %MEMORY
  %loadMem_4b10b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12524 = getelementptr inbounds %struct.GPR, %struct.GPR* %12523, i32 0, i32 33
  %12525 = getelementptr inbounds %struct.Reg, %struct.Reg* %12524, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %12525 to i64*
  %12526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12527 = getelementptr inbounds %struct.GPR, %struct.GPR* %12526, i32 0, i32 1
  %12528 = getelementptr inbounds %struct.Reg, %struct.Reg* %12527, i32 0, i32 0
  %EAX.i881 = bitcast %union.anon* %12528 to i32*
  %12529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12530 = getelementptr inbounds %struct.GPR, %struct.GPR* %12529, i32 0, i32 7
  %12531 = getelementptr inbounds %struct.Reg, %struct.Reg* %12530, i32 0, i32 0
  %EDX.i882 = bitcast %union.anon* %12531 to i32*
  %12532 = load i32, i32* %EAX.i881
  %12533 = zext i32 %12532 to i64
  %12534 = load i32, i32* %EDX.i882
  %12535 = zext i32 %12534 to i64
  %12536 = load i64, i64* %PC.i880
  %12537 = add i64 %12536, 2
  store i64 %12537, i64* %PC.i880
  %12538 = sub i32 %12532, %12534
  %12539 = icmp ult i32 %12532, %12534
  %12540 = zext i1 %12539 to i8
  %12541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12540, i8* %12541, align 1
  %12542 = and i32 %12538, 255
  %12543 = call i32 @llvm.ctpop.i32(i32 %12542)
  %12544 = trunc i32 %12543 to i8
  %12545 = and i8 %12544, 1
  %12546 = xor i8 %12545, 1
  %12547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12546, i8* %12547, align 1
  %12548 = xor i64 %12535, %12533
  %12549 = trunc i64 %12548 to i32
  %12550 = xor i32 %12549, %12538
  %12551 = lshr i32 %12550, 4
  %12552 = trunc i32 %12551 to i8
  %12553 = and i8 %12552, 1
  %12554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12553, i8* %12554, align 1
  %12555 = icmp eq i32 %12538, 0
  %12556 = zext i1 %12555 to i8
  %12557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12556, i8* %12557, align 1
  %12558 = lshr i32 %12538, 31
  %12559 = trunc i32 %12558 to i8
  %12560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12559, i8* %12560, align 1
  %12561 = lshr i32 %12532, 31
  %12562 = lshr i32 %12534, 31
  %12563 = xor i32 %12562, %12561
  %12564 = xor i32 %12558, %12561
  %12565 = add i32 %12564, %12563
  %12566 = icmp eq i32 %12565, 2
  %12567 = zext i1 %12566 to i8
  %12568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12567, i8* %12568, align 1
  store %struct.Memory* %loadMem_4b10b6, %struct.Memory** %MEMORY
  %loadMem_4b10b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12570 = getelementptr inbounds %struct.GPR, %struct.GPR* %12569, i32 0, i32 33
  %12571 = getelementptr inbounds %struct.Reg, %struct.Reg* %12570, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %12571 to i64*
  %12572 = load i64, i64* %PC.i879
  %12573 = add i64 %12572, 74
  %12574 = load i64, i64* %PC.i879
  %12575 = add i64 %12574, 6
  %12576 = load i64, i64* %PC.i879
  %12577 = add i64 %12576, 6
  store i64 %12577, i64* %PC.i879
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12579 = load i8, i8* %12578, align 1
  %12580 = icmp ne i8 %12579, 0
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12582 = load i8, i8* %12581, align 1
  %12583 = icmp ne i8 %12582, 0
  %12584 = xor i1 %12580, %12583
  %12585 = xor i1 %12584, true
  %12586 = zext i1 %12585 to i8
  store i8 %12586, i8* %BRANCH_TAKEN, align 1
  %12587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12588 = select i1 %12584, i64 %12575, i64 %12573
  store i64 %12588, i64* %12587, align 8
  store %struct.Memory* %loadMem_4b10b8, %struct.Memory** %MEMORY
  %loadBr_4b10b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b10b8 = icmp eq i8 %loadBr_4b10b8, 1
  br i1 %cmpBr_4b10b8, label %block_.L_4b1102, label %block_4b10be

block_4b10be:                                     ; preds = %block_.L_4b109c
  %loadMem_4b10be = load %struct.Memory*, %struct.Memory** %MEMORY
  %12589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12590 = getelementptr inbounds %struct.GPR, %struct.GPR* %12589, i32 0, i32 33
  %12591 = getelementptr inbounds %struct.Reg, %struct.Reg* %12590, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %12591 to i64*
  %12592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12593 = getelementptr inbounds %struct.GPR, %struct.GPR* %12592, i32 0, i32 1
  %12594 = getelementptr inbounds %struct.Reg, %struct.Reg* %12593, i32 0, i32 0
  %RAX.i877 = bitcast %union.anon* %12594 to i64*
  %12595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12596 = getelementptr inbounds %struct.GPR, %struct.GPR* %12595, i32 0, i32 15
  %12597 = getelementptr inbounds %struct.Reg, %struct.Reg* %12596, i32 0, i32 0
  %RBP.i878 = bitcast %union.anon* %12597 to i64*
  %12598 = load i64, i64* %RBP.i878
  %12599 = sub i64 %12598, 768
  %12600 = load i64, i64* %PC.i876
  %12601 = add i64 %12600, 7
  store i64 %12601, i64* %PC.i876
  store i64 %12599, i64* %RAX.i877, align 8
  store %struct.Memory* %loadMem_4b10be, %struct.Memory** %MEMORY
  %loadMem_4b10c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12603 = getelementptr inbounds %struct.GPR, %struct.GPR* %12602, i32 0, i32 33
  %12604 = getelementptr inbounds %struct.Reg, %struct.Reg* %12603, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %12604 to i64*
  %12605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12606 = getelementptr inbounds %struct.GPR, %struct.GPR* %12605, i32 0, i32 5
  %12607 = getelementptr inbounds %struct.Reg, %struct.Reg* %12606, i32 0, i32 0
  %RCX.i874 = bitcast %union.anon* %12607 to i64*
  %12608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12609 = getelementptr inbounds %struct.GPR, %struct.GPR* %12608, i32 0, i32 15
  %12610 = getelementptr inbounds %struct.Reg, %struct.Reg* %12609, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %12610 to i64*
  %12611 = load i64, i64* %RBP.i875
  %12612 = sub i64 %12611, 784
  %12613 = load i64, i64* %PC.i873
  %12614 = add i64 %12613, 7
  store i64 %12614, i64* %PC.i873
  %12615 = inttoptr i64 %12612 to i64*
  %12616 = load i64, i64* %12615
  store i64 %12616, i64* %RCX.i874, align 8
  store %struct.Memory* %loadMem_4b10c5, %struct.Memory** %MEMORY
  %loadMem_4b10cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12618 = getelementptr inbounds %struct.GPR, %struct.GPR* %12617, i32 0, i32 33
  %12619 = getelementptr inbounds %struct.Reg, %struct.Reg* %12618, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %12619 to i64*
  %12620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12621 = getelementptr inbounds %struct.GPR, %struct.GPR* %12620, i32 0, i32 7
  %12622 = getelementptr inbounds %struct.Reg, %struct.Reg* %12621, i32 0, i32 0
  %RDX.i871 = bitcast %union.anon* %12622 to i64*
  %12623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12624 = getelementptr inbounds %struct.GPR, %struct.GPR* %12623, i32 0, i32 15
  %12625 = getelementptr inbounds %struct.Reg, %struct.Reg* %12624, i32 0, i32 0
  %RBP.i872 = bitcast %union.anon* %12625 to i64*
  %12626 = load i64, i64* %RBP.i872
  %12627 = sub i64 %12626, 8
  %12628 = load i64, i64* %PC.i870
  %12629 = add i64 %12628, 4
  store i64 %12629, i64* %PC.i870
  %12630 = inttoptr i64 %12627 to i32*
  %12631 = load i32, i32* %12630
  %12632 = sext i32 %12631 to i64
  store i64 %12632, i64* %RDX.i871, align 8
  store %struct.Memory* %loadMem_4b10cc, %struct.Memory** %MEMORY
  %loadMem_4b10d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12634 = getelementptr inbounds %struct.GPR, %struct.GPR* %12633, i32 0, i32 33
  %12635 = getelementptr inbounds %struct.Reg, %struct.Reg* %12634, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %12635 to i64*
  %12636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12637 = getelementptr inbounds %struct.GPR, %struct.GPR* %12636, i32 0, i32 5
  %12638 = getelementptr inbounds %struct.Reg, %struct.Reg* %12637, i32 0, i32 0
  %RCX.i867 = bitcast %union.anon* %12638 to i64*
  %12639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12640 = getelementptr inbounds %struct.GPR, %struct.GPR* %12639, i32 0, i32 7
  %12641 = getelementptr inbounds %struct.Reg, %struct.Reg* %12640, i32 0, i32 0
  %RDX.i868 = bitcast %union.anon* %12641 to i64*
  %12642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12643 = getelementptr inbounds %struct.GPR, %struct.GPR* %12642, i32 0, i32 9
  %12644 = getelementptr inbounds %struct.Reg, %struct.Reg* %12643, i32 0, i32 0
  %RSI.i869 = bitcast %union.anon* %12644 to i64*
  %12645 = load i64, i64* %RCX.i867
  %12646 = load i64, i64* %RDX.i868
  %12647 = mul i64 %12646, 2
  %12648 = add i64 %12647, %12645
  %12649 = load i64, i64* %PC.i866
  %12650 = add i64 %12649, 4
  store i64 %12650, i64* %PC.i866
  %12651 = inttoptr i64 %12648 to i16*
  %12652 = load i16, i16* %12651
  %12653 = zext i16 %12652 to i64
  store i64 %12653, i64* %RSI.i869, align 8
  store %struct.Memory* %loadMem_4b10d0, %struct.Memory** %MEMORY
  %loadMem_4b10d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12655 = getelementptr inbounds %struct.GPR, %struct.GPR* %12654, i32 0, i32 33
  %12656 = getelementptr inbounds %struct.Reg, %struct.Reg* %12655, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %12656 to i64*
  %12657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12658 = getelementptr inbounds %struct.GPR, %struct.GPR* %12657, i32 0, i32 9
  %12659 = getelementptr inbounds %struct.Reg, %struct.Reg* %12658, i32 0, i32 0
  %ESI.i864 = bitcast %union.anon* %12659 to i32*
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12661 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12660, i64 0, i64 0
  %YMM0.i865 = bitcast %union.VectorReg* %12661 to %"class.std::bitset"*
  %12662 = bitcast %"class.std::bitset"* %YMM0.i865 to i8*
  %12663 = load i32, i32* %ESI.i864
  %12664 = zext i32 %12663 to i64
  %12665 = load i64, i64* %PC.i863
  %12666 = add i64 %12665, 4
  store i64 %12666, i64* %PC.i863
  %12667 = sitofp i32 %12663 to double
  %12668 = bitcast i8* %12662 to double*
  store double %12667, double* %12668, align 1
  store %struct.Memory* %loadMem_4b10d4, %struct.Memory** %MEMORY
  %loadMem_4b10d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12670 = getelementptr inbounds %struct.GPR, %struct.GPR* %12669, i32 0, i32 33
  %12671 = getelementptr inbounds %struct.Reg, %struct.Reg* %12670, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %12671 to i64*
  %12672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12673 = getelementptr inbounds %struct.GPR, %struct.GPR* %12672, i32 0, i32 5
  %12674 = getelementptr inbounds %struct.Reg, %struct.Reg* %12673, i32 0, i32 0
  %RCX.i861 = bitcast %union.anon* %12674 to i64*
  %12675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12676 = getelementptr inbounds %struct.GPR, %struct.GPR* %12675, i32 0, i32 15
  %12677 = getelementptr inbounds %struct.Reg, %struct.Reg* %12676, i32 0, i32 0
  %RBP.i862 = bitcast %union.anon* %12677 to i64*
  %12678 = load i64, i64* %RBP.i862
  %12679 = sub i64 %12678, 35396
  %12680 = load i64, i64* %PC.i860
  %12681 = add i64 %12680, 7
  store i64 %12681, i64* %PC.i860
  %12682 = inttoptr i64 %12679 to i32*
  %12683 = load i32, i32* %12682
  %12684 = sext i32 %12683 to i64
  store i64 %12684, i64* %RCX.i861, align 8
  store %struct.Memory* %loadMem_4b10d8, %struct.Memory** %MEMORY
  %loadMem_4b10df = load %struct.Memory*, %struct.Memory** %MEMORY
  %12685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12686 = getelementptr inbounds %struct.GPR, %struct.GPR* %12685, i32 0, i32 33
  %12687 = getelementptr inbounds %struct.Reg, %struct.Reg* %12686, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %12687 to i64*
  %12688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12689 = getelementptr inbounds %struct.GPR, %struct.GPR* %12688, i32 0, i32 5
  %12690 = getelementptr inbounds %struct.Reg, %struct.Reg* %12689, i32 0, i32 0
  %RCX.i859 = bitcast %union.anon* %12690 to i64*
  %12691 = load i64, i64* %RCX.i859
  %12692 = load i64, i64* %PC.i858
  %12693 = add i64 %12692, 4
  store i64 %12693, i64* %PC.i858
  %12694 = sext i64 %12691 to i128
  %12695 = and i128 %12694, -18446744073709551616
  %12696 = zext i64 %12691 to i128
  %12697 = or i128 %12695, %12696
  %12698 = mul i128 120, %12697
  %12699 = trunc i128 %12698 to i64
  store i64 %12699, i64* %RCX.i859, align 8
  %12700 = sext i64 %12699 to i128
  %12701 = icmp ne i128 %12700, %12698
  %12702 = zext i1 %12701 to i8
  %12703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12702, i8* %12703, align 1
  %12704 = trunc i128 %12698 to i32
  %12705 = and i32 %12704, 255
  %12706 = call i32 @llvm.ctpop.i32(i32 %12705)
  %12707 = trunc i32 %12706 to i8
  %12708 = and i8 %12707, 1
  %12709 = xor i8 %12708, 1
  %12710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12709, i8* %12710, align 1
  %12711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12711, align 1
  %12712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12712, align 1
  %12713 = lshr i64 %12699, 63
  %12714 = trunc i64 %12713 to i8
  %12715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12714, i8* %12715, align 1
  %12716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12702, i8* %12716, align 1
  store %struct.Memory* %loadMem_4b10df, %struct.Memory** %MEMORY
  %loadMem_4b10e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12718 = getelementptr inbounds %struct.GPR, %struct.GPR* %12717, i32 0, i32 33
  %12719 = getelementptr inbounds %struct.Reg, %struct.Reg* %12718, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %12719 to i64*
  %12720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12721 = getelementptr inbounds %struct.GPR, %struct.GPR* %12720, i32 0, i32 1
  %12722 = getelementptr inbounds %struct.Reg, %struct.Reg* %12721, i32 0, i32 0
  %RAX.i856 = bitcast %union.anon* %12722 to i64*
  %12723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12724 = getelementptr inbounds %struct.GPR, %struct.GPR* %12723, i32 0, i32 5
  %12725 = getelementptr inbounds %struct.Reg, %struct.Reg* %12724, i32 0, i32 0
  %RCX.i857 = bitcast %union.anon* %12725 to i64*
  %12726 = load i64, i64* %RAX.i856
  %12727 = load i64, i64* %RCX.i857
  %12728 = load i64, i64* %PC.i855
  %12729 = add i64 %12728, 3
  store i64 %12729, i64* %PC.i855
  %12730 = add i64 %12727, %12726
  store i64 %12730, i64* %RAX.i856, align 8
  %12731 = icmp ult i64 %12730, %12726
  %12732 = icmp ult i64 %12730, %12727
  %12733 = or i1 %12731, %12732
  %12734 = zext i1 %12733 to i8
  %12735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12734, i8* %12735, align 1
  %12736 = trunc i64 %12730 to i32
  %12737 = and i32 %12736, 255
  %12738 = call i32 @llvm.ctpop.i32(i32 %12737)
  %12739 = trunc i32 %12738 to i8
  %12740 = and i8 %12739, 1
  %12741 = xor i8 %12740, 1
  %12742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12741, i8* %12742, align 1
  %12743 = xor i64 %12727, %12726
  %12744 = xor i64 %12743, %12730
  %12745 = lshr i64 %12744, 4
  %12746 = trunc i64 %12745 to i8
  %12747 = and i8 %12746, 1
  %12748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12747, i8* %12748, align 1
  %12749 = icmp eq i64 %12730, 0
  %12750 = zext i1 %12749 to i8
  %12751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12750, i8* %12751, align 1
  %12752 = lshr i64 %12730, 63
  %12753 = trunc i64 %12752 to i8
  %12754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12753, i8* %12754, align 1
  %12755 = lshr i64 %12726, 63
  %12756 = lshr i64 %12727, 63
  %12757 = xor i64 %12752, %12755
  %12758 = xor i64 %12752, %12756
  %12759 = add i64 %12757, %12758
  %12760 = icmp eq i64 %12759, 2
  %12761 = zext i1 %12760 to i8
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12761, i8* %12762, align 1
  store %struct.Memory* %loadMem_4b10e3, %struct.Memory** %MEMORY
  %loadMem_4b10e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12764 = getelementptr inbounds %struct.GPR, %struct.GPR* %12763, i32 0, i32 33
  %12765 = getelementptr inbounds %struct.Reg, %struct.Reg* %12764, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %12765 to i64*
  %12766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12767 = getelementptr inbounds %struct.GPR, %struct.GPR* %12766, i32 0, i32 5
  %12768 = getelementptr inbounds %struct.Reg, %struct.Reg* %12767, i32 0, i32 0
  %RCX.i853 = bitcast %union.anon* %12768 to i64*
  %12769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12770 = getelementptr inbounds %struct.GPR, %struct.GPR* %12769, i32 0, i32 15
  %12771 = getelementptr inbounds %struct.Reg, %struct.Reg* %12770, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %12771 to i64*
  %12772 = load i64, i64* %RBP.i854
  %12773 = sub i64 %12772, 16
  %12774 = load i64, i64* %PC.i852
  %12775 = add i64 %12774, 4
  store i64 %12775, i64* %PC.i852
  %12776 = inttoptr i64 %12773 to i32*
  %12777 = load i32, i32* %12776
  %12778 = sext i32 %12777 to i64
  store i64 %12778, i64* %RCX.i853, align 8
  store %struct.Memory* %loadMem_4b10e6, %struct.Memory** %MEMORY
  %loadMem_4b10ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %12779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12780 = getelementptr inbounds %struct.GPR, %struct.GPR* %12779, i32 0, i32 33
  %12781 = getelementptr inbounds %struct.Reg, %struct.Reg* %12780, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %12781 to i64*
  %12782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12783 = getelementptr inbounds %struct.GPR, %struct.GPR* %12782, i32 0, i32 1
  %12784 = getelementptr inbounds %struct.Reg, %struct.Reg* %12783, i32 0, i32 0
  %RAX.i849 = bitcast %union.anon* %12784 to i64*
  %12785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12786 = getelementptr inbounds %struct.GPR, %struct.GPR* %12785, i32 0, i32 5
  %12787 = getelementptr inbounds %struct.Reg, %struct.Reg* %12786, i32 0, i32 0
  %RCX.i850 = bitcast %union.anon* %12787 to i64*
  %12788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12789 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12788, i64 0, i64 0
  %YMM0.i851 = bitcast %union.VectorReg* %12789 to %"class.std::bitset"*
  %12790 = bitcast %"class.std::bitset"* %YMM0.i851 to i8*
  %12791 = bitcast %"class.std::bitset"* %YMM0.i851 to i8*
  %12792 = load i64, i64* %RAX.i849
  %12793 = load i64, i64* %RCX.i850
  %12794 = mul i64 %12793, 8
  %12795 = add i64 %12794, %12792
  %12796 = load i64, i64* %PC.i848
  %12797 = add i64 %12796, 5
  store i64 %12797, i64* %PC.i848
  %12798 = bitcast i8* %12791 to double*
  %12799 = load double, double* %12798, align 1
  %12800 = getelementptr inbounds i8, i8* %12791, i64 8
  %12801 = bitcast i8* %12800 to i64*
  %12802 = load i64, i64* %12801, align 1
  %12803 = inttoptr i64 %12795 to double*
  %12804 = load double, double* %12803
  %12805 = fadd double %12799, %12804
  %12806 = bitcast i8* %12790 to double*
  store double %12805, double* %12806, align 1
  %12807 = getelementptr inbounds i8, i8* %12790, i64 8
  %12808 = bitcast i8* %12807 to i64*
  store i64 %12802, i64* %12808, align 1
  store %struct.Memory* %loadMem_4b10ea, %struct.Memory** %MEMORY
  %loadMem_4b10ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %12809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12810 = getelementptr inbounds %struct.GPR, %struct.GPR* %12809, i32 0, i32 33
  %12811 = getelementptr inbounds %struct.Reg, %struct.Reg* %12810, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %12811 to i64*
  %12812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12813 = getelementptr inbounds %struct.GPR, %struct.GPR* %12812, i32 0, i32 1
  %12814 = getelementptr inbounds %struct.Reg, %struct.Reg* %12813, i32 0, i32 0
  %RAX.i845 = bitcast %union.anon* %12814 to i64*
  %12815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12816 = getelementptr inbounds %struct.GPR, %struct.GPR* %12815, i32 0, i32 5
  %12817 = getelementptr inbounds %struct.Reg, %struct.Reg* %12816, i32 0, i32 0
  %RCX.i846 = bitcast %union.anon* %12817 to i64*
  %12818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12819 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12818, i64 0, i64 0
  %XMM0.i847 = bitcast %union.VectorReg* %12819 to %union.vec128_t*
  %12820 = load i64, i64* %RAX.i845
  %12821 = load i64, i64* %RCX.i846
  %12822 = mul i64 %12821, 8
  %12823 = add i64 %12822, %12820
  %12824 = bitcast %union.vec128_t* %XMM0.i847 to i8*
  %12825 = load i64, i64* %PC.i844
  %12826 = add i64 %12825, 5
  store i64 %12826, i64* %PC.i844
  %12827 = bitcast i8* %12824 to double*
  %12828 = load double, double* %12827, align 1
  %12829 = inttoptr i64 %12823 to double*
  store double %12828, double* %12829
  store %struct.Memory* %loadMem_4b10ef, %struct.Memory** %MEMORY
  %loadMem_4b10f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12831 = getelementptr inbounds %struct.GPR, %struct.GPR* %12830, i32 0, i32 33
  %12832 = getelementptr inbounds %struct.Reg, %struct.Reg* %12831, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %12832 to i64*
  %12833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12834 = getelementptr inbounds %struct.GPR, %struct.GPR* %12833, i32 0, i32 1
  %12835 = getelementptr inbounds %struct.Reg, %struct.Reg* %12834, i32 0, i32 0
  %RAX.i842 = bitcast %union.anon* %12835 to i64*
  %12836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12837 = getelementptr inbounds %struct.GPR, %struct.GPR* %12836, i32 0, i32 15
  %12838 = getelementptr inbounds %struct.Reg, %struct.Reg* %12837, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %12838 to i64*
  %12839 = load i64, i64* %RBP.i843
  %12840 = sub i64 %12839, 8
  %12841 = load i64, i64* %PC.i841
  %12842 = add i64 %12841, 3
  store i64 %12842, i64* %PC.i841
  %12843 = inttoptr i64 %12840 to i32*
  %12844 = load i32, i32* %12843
  %12845 = zext i32 %12844 to i64
  store i64 %12845, i64* %RAX.i842, align 8
  store %struct.Memory* %loadMem_4b10f4, %struct.Memory** %MEMORY
  %loadMem_4b10f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12847 = getelementptr inbounds %struct.GPR, %struct.GPR* %12846, i32 0, i32 33
  %12848 = getelementptr inbounds %struct.Reg, %struct.Reg* %12847, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %12848 to i64*
  %12849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12850 = getelementptr inbounds %struct.GPR, %struct.GPR* %12849, i32 0, i32 1
  %12851 = getelementptr inbounds %struct.Reg, %struct.Reg* %12850, i32 0, i32 0
  %RAX.i840 = bitcast %union.anon* %12851 to i64*
  %12852 = load i64, i64* %RAX.i840
  %12853 = load i64, i64* %PC.i839
  %12854 = add i64 %12853, 3
  store i64 %12854, i64* %PC.i839
  %12855 = trunc i64 %12852 to i32
  %12856 = add i32 1, %12855
  %12857 = zext i32 %12856 to i64
  store i64 %12857, i64* %RAX.i840, align 8
  %12858 = icmp ult i32 %12856, %12855
  %12859 = icmp ult i32 %12856, 1
  %12860 = or i1 %12858, %12859
  %12861 = zext i1 %12860 to i8
  %12862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12861, i8* %12862, align 1
  %12863 = and i32 %12856, 255
  %12864 = call i32 @llvm.ctpop.i32(i32 %12863)
  %12865 = trunc i32 %12864 to i8
  %12866 = and i8 %12865, 1
  %12867 = xor i8 %12866, 1
  %12868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12867, i8* %12868, align 1
  %12869 = xor i64 1, %12852
  %12870 = trunc i64 %12869 to i32
  %12871 = xor i32 %12870, %12856
  %12872 = lshr i32 %12871, 4
  %12873 = trunc i32 %12872 to i8
  %12874 = and i8 %12873, 1
  %12875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12874, i8* %12875, align 1
  %12876 = icmp eq i32 %12856, 0
  %12877 = zext i1 %12876 to i8
  %12878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12877, i8* %12878, align 1
  %12879 = lshr i32 %12856, 31
  %12880 = trunc i32 %12879 to i8
  %12881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12880, i8* %12881, align 1
  %12882 = lshr i32 %12855, 31
  %12883 = xor i32 %12879, %12882
  %12884 = add i32 %12883, %12879
  %12885 = icmp eq i32 %12884, 2
  %12886 = zext i1 %12885 to i8
  %12887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12886, i8* %12887, align 1
  store %struct.Memory* %loadMem_4b10f7, %struct.Memory** %MEMORY
  %loadMem_4b10fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12889 = getelementptr inbounds %struct.GPR, %struct.GPR* %12888, i32 0, i32 33
  %12890 = getelementptr inbounds %struct.Reg, %struct.Reg* %12889, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %12890 to i64*
  %12891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12892 = getelementptr inbounds %struct.GPR, %struct.GPR* %12891, i32 0, i32 1
  %12893 = getelementptr inbounds %struct.Reg, %struct.Reg* %12892, i32 0, i32 0
  %EAX.i837 = bitcast %union.anon* %12893 to i32*
  %12894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12895 = getelementptr inbounds %struct.GPR, %struct.GPR* %12894, i32 0, i32 15
  %12896 = getelementptr inbounds %struct.Reg, %struct.Reg* %12895, i32 0, i32 0
  %RBP.i838 = bitcast %union.anon* %12896 to i64*
  %12897 = load i64, i64* %RBP.i838
  %12898 = sub i64 %12897, 8
  %12899 = load i32, i32* %EAX.i837
  %12900 = zext i32 %12899 to i64
  %12901 = load i64, i64* %PC.i836
  %12902 = add i64 %12901, 3
  store i64 %12902, i64* %PC.i836
  %12903 = inttoptr i64 %12898 to i32*
  store i32 %12899, i32* %12903
  store %struct.Memory* %loadMem_4b10fa, %struct.Memory** %MEMORY
  %loadMem_4b10fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12905 = getelementptr inbounds %struct.GPR, %struct.GPR* %12904, i32 0, i32 33
  %12906 = getelementptr inbounds %struct.Reg, %struct.Reg* %12905, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %12906 to i64*
  %12907 = load i64, i64* %PC.i835
  %12908 = add i64 %12907, -97
  %12909 = load i64, i64* %PC.i835
  %12910 = add i64 %12909, 5
  store i64 %12910, i64* %PC.i835
  %12911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12908, i64* %12911, align 8
  store %struct.Memory* %loadMem_4b10fd, %struct.Memory** %MEMORY
  br label %block_.L_4b109c

block_.L_4b1102:                                  ; preds = %block_.L_4b109c
  %loadMem_4b1102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12913 = getelementptr inbounds %struct.GPR, %struct.GPR* %12912, i32 0, i32 33
  %12914 = getelementptr inbounds %struct.Reg, %struct.Reg* %12913, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %12914 to i64*
  %12915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12916 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12915, i64 0, i64 0
  %YMM0.i833 = bitcast %union.VectorReg* %12916 to %"class.std::bitset"*
  %12917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %12918 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12917, i64 0, i64 0
  %XMM0.i834 = bitcast %union.VectorReg* %12918 to %union.vec128_t*
  %12919 = bitcast %"class.std::bitset"* %YMM0.i833 to i8*
  %12920 = bitcast %"class.std::bitset"* %YMM0.i833 to i8*
  %12921 = bitcast %union.vec128_t* %XMM0.i834 to i8*
  %12922 = load i64, i64* %PC.i832
  %12923 = add i64 %12922, 3
  store i64 %12923, i64* %PC.i832
  %12924 = bitcast i8* %12920 to i64*
  %12925 = load i64, i64* %12924, align 1
  %12926 = getelementptr inbounds i8, i8* %12920, i64 8
  %12927 = bitcast i8* %12926 to i64*
  %12928 = load i64, i64* %12927, align 1
  %12929 = bitcast i8* %12921 to i64*
  %12930 = load i64, i64* %12929, align 1
  %12931 = getelementptr inbounds i8, i8* %12921, i64 8
  %12932 = bitcast i8* %12931 to i64*
  %12933 = load i64, i64* %12932, align 1
  %12934 = xor i64 %12930, %12925
  %12935 = xor i64 %12933, %12928
  %12936 = trunc i64 %12934 to i32
  %12937 = lshr i64 %12934, 32
  %12938 = trunc i64 %12937 to i32
  %12939 = bitcast i8* %12919 to i32*
  store i32 %12936, i32* %12939, align 1
  %12940 = getelementptr inbounds i8, i8* %12919, i64 4
  %12941 = bitcast i8* %12940 to i32*
  store i32 %12938, i32* %12941, align 1
  %12942 = trunc i64 %12935 to i32
  %12943 = getelementptr inbounds i8, i8* %12919, i64 8
  %12944 = bitcast i8* %12943 to i32*
  store i32 %12942, i32* %12944, align 1
  %12945 = lshr i64 %12935, 32
  %12946 = trunc i64 %12945 to i32
  %12947 = getelementptr inbounds i8, i8* %12919, i64 12
  %12948 = bitcast i8* %12947 to i32*
  store i32 %12946, i32* %12948, align 1
  store %struct.Memory* %loadMem_4b1102, %struct.Memory** %MEMORY
  %loadMem_4b1105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12950 = getelementptr inbounds %struct.GPR, %struct.GPR* %12949, i32 0, i32 33
  %12951 = getelementptr inbounds %struct.Reg, %struct.Reg* %12950, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %12951 to i64*
  %12952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12953 = getelementptr inbounds %struct.GPR, %struct.GPR* %12952, i32 0, i32 1
  %12954 = getelementptr inbounds %struct.Reg, %struct.Reg* %12953, i32 0, i32 0
  %RAX.i830 = bitcast %union.anon* %12954 to i64*
  %12955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12956 = getelementptr inbounds %struct.GPR, %struct.GPR* %12955, i32 0, i32 15
  %12957 = getelementptr inbounds %struct.Reg, %struct.Reg* %12956, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %12957 to i64*
  %12958 = load i64, i64* %RBP.i831
  %12959 = sub i64 %12958, 768
  %12960 = load i64, i64* %PC.i829
  %12961 = add i64 %12960, 7
  store i64 %12961, i64* %PC.i829
  store i64 %12959, i64* %RAX.i830, align 8
  store %struct.Memory* %loadMem_4b1105, %struct.Memory** %MEMORY
  %loadMem_4b110c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12963 = getelementptr inbounds %struct.GPR, %struct.GPR* %12962, i32 0, i32 33
  %12964 = getelementptr inbounds %struct.Reg, %struct.Reg* %12963, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %12964 to i64*
  %12965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12966 = getelementptr inbounds %struct.GPR, %struct.GPR* %12965, i32 0, i32 5
  %12967 = getelementptr inbounds %struct.Reg, %struct.Reg* %12966, i32 0, i32 0
  %RCX.i827 = bitcast %union.anon* %12967 to i64*
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12969 = getelementptr inbounds %struct.GPR, %struct.GPR* %12968, i32 0, i32 15
  %12970 = getelementptr inbounds %struct.Reg, %struct.Reg* %12969, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %12970 to i64*
  %12971 = load i64, i64* %RBP.i828
  %12972 = sub i64 %12971, 35396
  %12973 = load i64, i64* %PC.i826
  %12974 = add i64 %12973, 7
  store i64 %12974, i64* %PC.i826
  %12975 = inttoptr i64 %12972 to i32*
  %12976 = load i32, i32* %12975
  %12977 = sext i32 %12976 to i64
  store i64 %12977, i64* %RCX.i827, align 8
  store %struct.Memory* %loadMem_4b110c, %struct.Memory** %MEMORY
  %loadMem_4b1113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12979 = getelementptr inbounds %struct.GPR, %struct.GPR* %12978, i32 0, i32 33
  %12980 = getelementptr inbounds %struct.Reg, %struct.Reg* %12979, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %12980 to i64*
  %12981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12982 = getelementptr inbounds %struct.GPR, %struct.GPR* %12981, i32 0, i32 5
  %12983 = getelementptr inbounds %struct.Reg, %struct.Reg* %12982, i32 0, i32 0
  %RCX.i825 = bitcast %union.anon* %12983 to i64*
  %12984 = load i64, i64* %RCX.i825
  %12985 = load i64, i64* %PC.i824
  %12986 = add i64 %12985, 4
  store i64 %12986, i64* %PC.i824
  %12987 = sext i64 %12984 to i128
  %12988 = and i128 %12987, -18446744073709551616
  %12989 = zext i64 %12984 to i128
  %12990 = or i128 %12988, %12989
  %12991 = mul i128 120, %12990
  %12992 = trunc i128 %12991 to i64
  store i64 %12992, i64* %RCX.i825, align 8
  %12993 = sext i64 %12992 to i128
  %12994 = icmp ne i128 %12993, %12991
  %12995 = zext i1 %12994 to i8
  %12996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12995, i8* %12996, align 1
  %12997 = trunc i128 %12991 to i32
  %12998 = and i32 %12997, 255
  %12999 = call i32 @llvm.ctpop.i32(i32 %12998)
  %13000 = trunc i32 %12999 to i8
  %13001 = and i8 %13000, 1
  %13002 = xor i8 %13001, 1
  %13003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13002, i8* %13003, align 1
  %13004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13004, align 1
  %13005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13005, align 1
  %13006 = lshr i64 %12992, 63
  %13007 = trunc i64 %13006 to i8
  %13008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13007, i8* %13008, align 1
  %13009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12995, i8* %13009, align 1
  store %struct.Memory* %loadMem_4b1113, %struct.Memory** %MEMORY
  %loadMem_4b1117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13011 = getelementptr inbounds %struct.GPR, %struct.GPR* %13010, i32 0, i32 33
  %13012 = getelementptr inbounds %struct.Reg, %struct.Reg* %13011, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %13012 to i64*
  %13013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13014 = getelementptr inbounds %struct.GPR, %struct.GPR* %13013, i32 0, i32 1
  %13015 = getelementptr inbounds %struct.Reg, %struct.Reg* %13014, i32 0, i32 0
  %RAX.i822 = bitcast %union.anon* %13015 to i64*
  %13016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13017 = getelementptr inbounds %struct.GPR, %struct.GPR* %13016, i32 0, i32 5
  %13018 = getelementptr inbounds %struct.Reg, %struct.Reg* %13017, i32 0, i32 0
  %RCX.i823 = bitcast %union.anon* %13018 to i64*
  %13019 = load i64, i64* %RAX.i822
  %13020 = load i64, i64* %RCX.i823
  %13021 = load i64, i64* %PC.i821
  %13022 = add i64 %13021, 3
  store i64 %13022, i64* %PC.i821
  %13023 = add i64 %13020, %13019
  store i64 %13023, i64* %RAX.i822, align 8
  %13024 = icmp ult i64 %13023, %13019
  %13025 = icmp ult i64 %13023, %13020
  %13026 = or i1 %13024, %13025
  %13027 = zext i1 %13026 to i8
  %13028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13027, i8* %13028, align 1
  %13029 = trunc i64 %13023 to i32
  %13030 = and i32 %13029, 255
  %13031 = call i32 @llvm.ctpop.i32(i32 %13030)
  %13032 = trunc i32 %13031 to i8
  %13033 = and i8 %13032, 1
  %13034 = xor i8 %13033, 1
  %13035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13034, i8* %13035, align 1
  %13036 = xor i64 %13020, %13019
  %13037 = xor i64 %13036, %13023
  %13038 = lshr i64 %13037, 4
  %13039 = trunc i64 %13038 to i8
  %13040 = and i8 %13039, 1
  %13041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13040, i8* %13041, align 1
  %13042 = icmp eq i64 %13023, 0
  %13043 = zext i1 %13042 to i8
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13043, i8* %13044, align 1
  %13045 = lshr i64 %13023, 63
  %13046 = trunc i64 %13045 to i8
  %13047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13046, i8* %13047, align 1
  %13048 = lshr i64 %13019, 63
  %13049 = lshr i64 %13020, 63
  %13050 = xor i64 %13045, %13048
  %13051 = xor i64 %13045, %13049
  %13052 = add i64 %13050, %13051
  %13053 = icmp eq i64 %13052, 2
  %13054 = zext i1 %13053 to i8
  %13055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13054, i8* %13055, align 1
  store %struct.Memory* %loadMem_4b1117, %struct.Memory** %MEMORY
  %loadMem_4b111a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13057 = getelementptr inbounds %struct.GPR, %struct.GPR* %13056, i32 0, i32 33
  %13058 = getelementptr inbounds %struct.Reg, %struct.Reg* %13057, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %13058 to i64*
  %13059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13060 = getelementptr inbounds %struct.GPR, %struct.GPR* %13059, i32 0, i32 5
  %13061 = getelementptr inbounds %struct.Reg, %struct.Reg* %13060, i32 0, i32 0
  %RCX.i819 = bitcast %union.anon* %13061 to i64*
  %13062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13063 = getelementptr inbounds %struct.GPR, %struct.GPR* %13062, i32 0, i32 15
  %13064 = getelementptr inbounds %struct.Reg, %struct.Reg* %13063, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %13064 to i64*
  %13065 = load i64, i64* %RBP.i820
  %13066 = sub i64 %13065, 16
  %13067 = load i64, i64* %PC.i818
  %13068 = add i64 %13067, 4
  store i64 %13068, i64* %PC.i818
  %13069 = inttoptr i64 %13066 to i32*
  %13070 = load i32, i32* %13069
  %13071 = sext i32 %13070 to i64
  store i64 %13071, i64* %RCX.i819, align 8
  store %struct.Memory* %loadMem_4b111a, %struct.Memory** %MEMORY
  %loadMem_4b111e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13073 = getelementptr inbounds %struct.GPR, %struct.GPR* %13072, i32 0, i32 33
  %13074 = getelementptr inbounds %struct.Reg, %struct.Reg* %13073, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %13074 to i64*
  %13075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13076 = getelementptr inbounds %struct.GPR, %struct.GPR* %13075, i32 0, i32 1
  %13077 = getelementptr inbounds %struct.Reg, %struct.Reg* %13076, i32 0, i32 0
  %RAX.i815 = bitcast %union.anon* %13077 to i64*
  %13078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13079 = getelementptr inbounds %struct.GPR, %struct.GPR* %13078, i32 0, i32 5
  %13080 = getelementptr inbounds %struct.Reg, %struct.Reg* %13079, i32 0, i32 0
  %RCX.i816 = bitcast %union.anon* %13080 to i64*
  %13081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13082 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13081, i64 0, i64 1
  %YMM1.i817 = bitcast %union.VectorReg* %13082 to %"class.std::bitset"*
  %13083 = bitcast %"class.std::bitset"* %YMM1.i817 to i8*
  %13084 = load i64, i64* %RAX.i815
  %13085 = load i64, i64* %RCX.i816
  %13086 = mul i64 %13085, 8
  %13087 = add i64 %13086, %13084
  %13088 = load i64, i64* %PC.i814
  %13089 = add i64 %13088, 5
  store i64 %13089, i64* %PC.i814
  %13090 = inttoptr i64 %13087 to double*
  %13091 = load double, double* %13090
  %13092 = bitcast i8* %13083 to double*
  store double %13091, double* %13092, align 1
  %13093 = getelementptr inbounds i8, i8* %13083, i64 8
  %13094 = bitcast i8* %13093 to double*
  store double 0.000000e+00, double* %13094, align 1
  store %struct.Memory* %loadMem_4b111e, %struct.Memory** %MEMORY
  %loadMem_4b1123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13096 = getelementptr inbounds %struct.GPR, %struct.GPR* %13095, i32 0, i32 33
  %13097 = getelementptr inbounds %struct.Reg, %struct.Reg* %13096, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %13097 to i64*
  %13098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13099 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13098, i64 0, i64 0
  %XMM0.i809 = bitcast %union.VectorReg* %13099 to %union.vec128_t*
  %13100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13101 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13100, i64 0, i64 1
  %XMM1.i810 = bitcast %union.VectorReg* %13101 to %union.vec128_t*
  %13102 = bitcast %union.vec128_t* %XMM1.i810 to i8*
  %13103 = bitcast %union.vec128_t* %XMM0.i809 to i8*
  %13104 = load i64, i64* %PC.i808
  %13105 = add i64 %13104, 4
  store i64 %13105, i64* %PC.i808
  %13106 = bitcast i8* %13102 to double*
  %13107 = load double, double* %13106, align 1
  %13108 = bitcast i8* %13103 to double*
  %13109 = load double, double* %13108, align 1
  %13110 = fcmp uno double %13107, %13109
  br i1 %13110, label %13111, label %13123

; <label>:13111:                                  ; preds = %block_.L_4b1102
  %13112 = fadd double %13107, %13109
  %13113 = bitcast double %13112 to i64
  %13114 = and i64 %13113, 9221120237041090560
  %13115 = icmp eq i64 %13114, 9218868437227405312
  %13116 = and i64 %13113, 2251799813685247
  %13117 = icmp ne i64 %13116, 0
  %13118 = and i1 %13115, %13117
  br i1 %13118, label %13119, label %13129

; <label>:13119:                                  ; preds = %13111
  %13120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13121 = load i64, i64* %13120, align 8
  %13122 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13121, %struct.Memory* %loadMem_4b1123)
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:13123:                                  ; preds = %block_.L_4b1102
  %13124 = fcmp ogt double %13107, %13109
  br i1 %13124, label %13129, label %13125

; <label>:13125:                                  ; preds = %13123
  %13126 = fcmp olt double %13107, %13109
  br i1 %13126, label %13129, label %13127

; <label>:13127:                                  ; preds = %13125
  %13128 = fcmp oeq double %13107, %13109
  br i1 %13128, label %13129, label %13136

; <label>:13129:                                  ; preds = %13127, %13125, %13123, %13111
  %13130 = phi i8 [ 0, %13123 ], [ 0, %13125 ], [ 1, %13127 ], [ 1, %13111 ]
  %13131 = phi i8 [ 0, %13123 ], [ 0, %13125 ], [ 0, %13127 ], [ 1, %13111 ]
  %13132 = phi i8 [ 0, %13123 ], [ 1, %13125 ], [ 0, %13127 ], [ 1, %13111 ]
  %13133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13130, i8* %13133, align 1
  %13134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13131, i8* %13134, align 1
  %13135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13132, i8* %13135, align 1
  br label %13136

; <label>:13136:                                  ; preds = %13129, %13127
  %13137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13137, align 1
  %13138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13138, align 1
  %13139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13139, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %13119, %13136
  %13140 = phi %struct.Memory* [ %13122, %13119 ], [ %loadMem_4b1123, %13136 ]
  store %struct.Memory* %13140, %struct.Memory** %MEMORY
  %loadMem_4b1127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13142 = getelementptr inbounds %struct.GPR, %struct.GPR* %13141, i32 0, i32 33
  %13143 = getelementptr inbounds %struct.Reg, %struct.Reg* %13142, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %13143 to i64*
  %13144 = load i64, i64* %PC.i807
  %13145 = add i64 %13144, 17
  %13146 = load i64, i64* %PC.i807
  %13147 = add i64 %13146, 6
  %13148 = load i64, i64* %PC.i807
  %13149 = add i64 %13148, 6
  store i64 %13149, i64* %PC.i807
  %13150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13151 = load i8, i8* %13150, align 1
  %13152 = icmp eq i8 %13151, 0
  %13153 = zext i1 %13152 to i8
  store i8 %13153, i8* %BRANCH_TAKEN, align 1
  %13154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13155 = select i1 %13152, i64 %13145, i64 %13147
  store i64 %13155, i64* %13154, align 8
  store %struct.Memory* %loadMem_4b1127, %struct.Memory** %MEMORY
  %loadBr_4b1127 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1127 = icmp eq i8 %loadBr_4b1127, 1
  br i1 %cmpBr_4b1127, label %block_.L_4b1138, label %block_4b112d

block_4b112d:                                     ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_4b112d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13157 = getelementptr inbounds %struct.GPR, %struct.GPR* %13156, i32 0, i32 33
  %13158 = getelementptr inbounds %struct.Reg, %struct.Reg* %13157, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %13158 to i64*
  %13159 = load i64, i64* %PC.i806
  %13160 = add i64 %13159, 11
  %13161 = load i64, i64* %PC.i806
  %13162 = add i64 %13161, 6
  %13163 = load i64, i64* %PC.i806
  %13164 = add i64 %13163, 6
  store i64 %13164, i64* %PC.i806
  %13165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13166 = load i8, i8* %13165, align 1
  store i8 %13166, i8* %BRANCH_TAKEN, align 1
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13168 = icmp ne i8 %13166, 0
  %13169 = select i1 %13168, i64 %13160, i64 %13162
  store i64 %13169, i64* %13167, align 8
  store %struct.Memory* %loadMem_4b112d, %struct.Memory** %MEMORY
  %loadBr_4b112d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b112d = icmp eq i8 %loadBr_4b112d, 1
  br i1 %cmpBr_4b112d, label %block_.L_4b1138, label %block_4b1133

block_4b1133:                                     ; preds = %block_4b112d
  %loadMem_4b1133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13171 = getelementptr inbounds %struct.GPR, %struct.GPR* %13170, i32 0, i32 33
  %13172 = getelementptr inbounds %struct.Reg, %struct.Reg* %13171, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %13172 to i64*
  %13173 = load i64, i64* %PC.i805
  %13174 = add i64 %13173, 75
  %13175 = load i64, i64* %PC.i805
  %13176 = add i64 %13175, 5
  store i64 %13176, i64* %PC.i805
  %13177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13174, i64* %13177, align 8
  store %struct.Memory* %loadMem_4b1133, %struct.Memory** %MEMORY
  br label %block_.L_4b117e

block_.L_4b1138:                                  ; preds = %block_4b112d, %routine_ucomisd__xmm0___xmm1.exit
  %loadMem_4b1138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13179 = getelementptr inbounds %struct.GPR, %struct.GPR* %13178, i32 0, i32 33
  %13180 = getelementptr inbounds %struct.Reg, %struct.Reg* %13179, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %13180 to i64*
  %13181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13182 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13181, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %13182 to %"class.std::bitset"*
  %13183 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %13184 = load i64, i64* %PC.i804
  %13185 = add i64 %13184, ptrtoint (%G_0x748__rip__type* @G_0x748__rip_ to i64)
  %13186 = load i64, i64* %PC.i804
  %13187 = add i64 %13186, 8
  store i64 %13187, i64* %PC.i804
  %13188 = inttoptr i64 %13185 to double*
  %13189 = load double, double* %13188
  %13190 = bitcast i8* %13183 to double*
  store double %13189, double* %13190, align 1
  %13191 = getelementptr inbounds i8, i8* %13183, i64 8
  %13192 = bitcast i8* %13191 to double*
  store double 0.000000e+00, double* %13192, align 1
  store %struct.Memory* %loadMem_4b1138, %struct.Memory** %MEMORY
  %loadMem_4b1140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13194 = getelementptr inbounds %struct.GPR, %struct.GPR* %13193, i32 0, i32 33
  %13195 = getelementptr inbounds %struct.Reg, %struct.Reg* %13194, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %13195 to i64*
  %13196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13197 = getelementptr inbounds %struct.GPR, %struct.GPR* %13196, i32 0, i32 1
  %13198 = getelementptr inbounds %struct.Reg, %struct.Reg* %13197, i32 0, i32 0
  %RAX.i802 = bitcast %union.anon* %13198 to i64*
  %13199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13200 = getelementptr inbounds %struct.GPR, %struct.GPR* %13199, i32 0, i32 15
  %13201 = getelementptr inbounds %struct.Reg, %struct.Reg* %13200, i32 0, i32 0
  %RBP.i803 = bitcast %union.anon* %13201 to i64*
  %13202 = load i64, i64* %RBP.i803
  %13203 = sub i64 %13202, 768
  %13204 = load i64, i64* %PC.i801
  %13205 = add i64 %13204, 7
  store i64 %13205, i64* %PC.i801
  store i64 %13203, i64* %RAX.i802, align 8
  store %struct.Memory* %loadMem_4b1140, %struct.Memory** %MEMORY
  %loadMem_4b1147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13207 = getelementptr inbounds %struct.GPR, %struct.GPR* %13206, i32 0, i32 33
  %13208 = getelementptr inbounds %struct.Reg, %struct.Reg* %13207, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %13208 to i64*
  %13209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13210 = getelementptr inbounds %struct.GPR, %struct.GPR* %13209, i32 0, i32 15
  %13211 = getelementptr inbounds %struct.Reg, %struct.Reg* %13210, i32 0, i32 0
  %RBP.i799 = bitcast %union.anon* %13211 to i64*
  %13212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13213 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13212, i64 0, i64 1
  %YMM1.i800 = bitcast %union.VectorReg* %13213 to %"class.std::bitset"*
  %13214 = bitcast %"class.std::bitset"* %YMM1.i800 to i8*
  %13215 = load i64, i64* %RBP.i799
  %13216 = sub i64 %13215, 796
  %13217 = load i64, i64* %PC.i798
  %13218 = add i64 %13217, 8
  store i64 %13218, i64* %PC.i798
  %13219 = inttoptr i64 %13216 to i32*
  %13220 = load i32, i32* %13219
  %13221 = sitofp i32 %13220 to double
  %13222 = bitcast i8* %13214 to double*
  store double %13221, double* %13222, align 1
  store %struct.Memory* %loadMem_4b1147, %struct.Memory** %MEMORY
  %loadMem_4b114f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13224 = getelementptr inbounds %struct.GPR, %struct.GPR* %13223, i32 0, i32 33
  %13225 = getelementptr inbounds %struct.Reg, %struct.Reg* %13224, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %13225 to i64*
  %13226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13227 = getelementptr inbounds %struct.GPR, %struct.GPR* %13226, i32 0, i32 15
  %13228 = getelementptr inbounds %struct.Reg, %struct.Reg* %13227, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %13228 to i64*
  %13229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13230 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13229, i64 0, i64 1
  %YMM1.i797 = bitcast %union.VectorReg* %13230 to %"class.std::bitset"*
  %13231 = bitcast %"class.std::bitset"* %YMM1.i797 to i8*
  %13232 = bitcast %"class.std::bitset"* %YMM1.i797 to i8*
  %13233 = load i64, i64* %RBP.i796
  %13234 = sub i64 %13233, 32
  %13235 = load i64, i64* %PC.i795
  %13236 = add i64 %13235, 5
  store i64 %13236, i64* %PC.i795
  %13237 = bitcast i8* %13232 to double*
  %13238 = load double, double* %13237, align 1
  %13239 = getelementptr inbounds i8, i8* %13232, i64 8
  %13240 = bitcast i8* %13239 to i64*
  %13241 = load i64, i64* %13240, align 1
  %13242 = inttoptr i64 %13234 to double*
  %13243 = load double, double* %13242
  %13244 = fmul double %13238, %13243
  %13245 = bitcast i8* %13231 to double*
  store double %13244, double* %13245, align 1
  %13246 = getelementptr inbounds i8, i8* %13231, i64 8
  %13247 = bitcast i8* %13246 to i64*
  store i64 %13241, i64* %13247, align 1
  store %struct.Memory* %loadMem_4b114f, %struct.Memory** %MEMORY
  %loadMem_4b1154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13249 = getelementptr inbounds %struct.GPR, %struct.GPR* %13248, i32 0, i32 33
  %13250 = getelementptr inbounds %struct.Reg, %struct.Reg* %13249, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %13250 to i64*
  %13251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13252 = getelementptr inbounds %struct.GPR, %struct.GPR* %13251, i32 0, i32 5
  %13253 = getelementptr inbounds %struct.Reg, %struct.Reg* %13252, i32 0, i32 0
  %RCX.i793 = bitcast %union.anon* %13253 to i64*
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13255 = getelementptr inbounds %struct.GPR, %struct.GPR* %13254, i32 0, i32 15
  %13256 = getelementptr inbounds %struct.Reg, %struct.Reg* %13255, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %13256 to i64*
  %13257 = load i64, i64* %RBP.i794
  %13258 = sub i64 %13257, 35396
  %13259 = load i64, i64* %PC.i792
  %13260 = add i64 %13259, 7
  store i64 %13260, i64* %PC.i792
  %13261 = inttoptr i64 %13258 to i32*
  %13262 = load i32, i32* %13261
  %13263 = sext i32 %13262 to i64
  store i64 %13263, i64* %RCX.i793, align 8
  store %struct.Memory* %loadMem_4b1154, %struct.Memory** %MEMORY
  %loadMem_4b115b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13265 = getelementptr inbounds %struct.GPR, %struct.GPR* %13264, i32 0, i32 33
  %13266 = getelementptr inbounds %struct.Reg, %struct.Reg* %13265, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %13266 to i64*
  %13267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13268 = getelementptr inbounds %struct.GPR, %struct.GPR* %13267, i32 0, i32 5
  %13269 = getelementptr inbounds %struct.Reg, %struct.Reg* %13268, i32 0, i32 0
  %RCX.i791 = bitcast %union.anon* %13269 to i64*
  %13270 = load i64, i64* %RCX.i791
  %13271 = load i64, i64* %PC.i790
  %13272 = add i64 %13271, 4
  store i64 %13272, i64* %PC.i790
  %13273 = sext i64 %13270 to i128
  %13274 = and i128 %13273, -18446744073709551616
  %13275 = zext i64 %13270 to i128
  %13276 = or i128 %13274, %13275
  %13277 = mul i128 120, %13276
  %13278 = trunc i128 %13277 to i64
  store i64 %13278, i64* %RCX.i791, align 8
  %13279 = sext i64 %13278 to i128
  %13280 = icmp ne i128 %13279, %13277
  %13281 = zext i1 %13280 to i8
  %13282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13281, i8* %13282, align 1
  %13283 = trunc i128 %13277 to i32
  %13284 = and i32 %13283, 255
  %13285 = call i32 @llvm.ctpop.i32(i32 %13284)
  %13286 = trunc i32 %13285 to i8
  %13287 = and i8 %13286, 1
  %13288 = xor i8 %13287, 1
  %13289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13288, i8* %13289, align 1
  %13290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13290, align 1
  %13291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13291, align 1
  %13292 = lshr i64 %13278, 63
  %13293 = trunc i64 %13292 to i8
  %13294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13293, i8* %13294, align 1
  %13295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13281, i8* %13295, align 1
  store %struct.Memory* %loadMem_4b115b, %struct.Memory** %MEMORY
  %loadMem_4b115f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13297 = getelementptr inbounds %struct.GPR, %struct.GPR* %13296, i32 0, i32 33
  %13298 = getelementptr inbounds %struct.Reg, %struct.Reg* %13297, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %13298 to i64*
  %13299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13300 = getelementptr inbounds %struct.GPR, %struct.GPR* %13299, i32 0, i32 1
  %13301 = getelementptr inbounds %struct.Reg, %struct.Reg* %13300, i32 0, i32 0
  %RAX.i788 = bitcast %union.anon* %13301 to i64*
  %13302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13303 = getelementptr inbounds %struct.GPR, %struct.GPR* %13302, i32 0, i32 5
  %13304 = getelementptr inbounds %struct.Reg, %struct.Reg* %13303, i32 0, i32 0
  %RCX.i789 = bitcast %union.anon* %13304 to i64*
  %13305 = load i64, i64* %RAX.i788
  %13306 = load i64, i64* %RCX.i789
  %13307 = load i64, i64* %PC.i787
  %13308 = add i64 %13307, 3
  store i64 %13308, i64* %PC.i787
  %13309 = add i64 %13306, %13305
  store i64 %13309, i64* %RAX.i788, align 8
  %13310 = icmp ult i64 %13309, %13305
  %13311 = icmp ult i64 %13309, %13306
  %13312 = or i1 %13310, %13311
  %13313 = zext i1 %13312 to i8
  %13314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13313, i8* %13314, align 1
  %13315 = trunc i64 %13309 to i32
  %13316 = and i32 %13315, 255
  %13317 = call i32 @llvm.ctpop.i32(i32 %13316)
  %13318 = trunc i32 %13317 to i8
  %13319 = and i8 %13318, 1
  %13320 = xor i8 %13319, 1
  %13321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13320, i8* %13321, align 1
  %13322 = xor i64 %13306, %13305
  %13323 = xor i64 %13322, %13309
  %13324 = lshr i64 %13323, 4
  %13325 = trunc i64 %13324 to i8
  %13326 = and i8 %13325, 1
  %13327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13326, i8* %13327, align 1
  %13328 = icmp eq i64 %13309, 0
  %13329 = zext i1 %13328 to i8
  %13330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13329, i8* %13330, align 1
  %13331 = lshr i64 %13309, 63
  %13332 = trunc i64 %13331 to i8
  %13333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13332, i8* %13333, align 1
  %13334 = lshr i64 %13305, 63
  %13335 = lshr i64 %13306, 63
  %13336 = xor i64 %13331, %13334
  %13337 = xor i64 %13331, %13335
  %13338 = add i64 %13336, %13337
  %13339 = icmp eq i64 %13338, 2
  %13340 = zext i1 %13339 to i8
  %13341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13340, i8* %13341, align 1
  store %struct.Memory* %loadMem_4b115f, %struct.Memory** %MEMORY
  %loadMem_4b1162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13343 = getelementptr inbounds %struct.GPR, %struct.GPR* %13342, i32 0, i32 33
  %13344 = getelementptr inbounds %struct.Reg, %struct.Reg* %13343, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %13344 to i64*
  %13345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13346 = getelementptr inbounds %struct.GPR, %struct.GPR* %13345, i32 0, i32 5
  %13347 = getelementptr inbounds %struct.Reg, %struct.Reg* %13346, i32 0, i32 0
  %RCX.i785 = bitcast %union.anon* %13347 to i64*
  %13348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13349 = getelementptr inbounds %struct.GPR, %struct.GPR* %13348, i32 0, i32 15
  %13350 = getelementptr inbounds %struct.Reg, %struct.Reg* %13349, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %13350 to i64*
  %13351 = load i64, i64* %RBP.i786
  %13352 = sub i64 %13351, 16
  %13353 = load i64, i64* %PC.i784
  %13354 = add i64 %13353, 4
  store i64 %13354, i64* %PC.i784
  %13355 = inttoptr i64 %13352 to i32*
  %13356 = load i32, i32* %13355
  %13357 = sext i32 %13356 to i64
  store i64 %13357, i64* %RCX.i785, align 8
  store %struct.Memory* %loadMem_4b1162, %struct.Memory** %MEMORY
  %loadMem_4b1166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13359 = getelementptr inbounds %struct.GPR, %struct.GPR* %13358, i32 0, i32 33
  %13360 = getelementptr inbounds %struct.Reg, %struct.Reg* %13359, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %13360 to i64*
  %13361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13362 = getelementptr inbounds %struct.GPR, %struct.GPR* %13361, i32 0, i32 1
  %13363 = getelementptr inbounds %struct.Reg, %struct.Reg* %13362, i32 0, i32 0
  %RAX.i781 = bitcast %union.anon* %13363 to i64*
  %13364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13365 = getelementptr inbounds %struct.GPR, %struct.GPR* %13364, i32 0, i32 5
  %13366 = getelementptr inbounds %struct.Reg, %struct.Reg* %13365, i32 0, i32 0
  %RCX.i782 = bitcast %union.anon* %13366 to i64*
  %13367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13368 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13367, i64 0, i64 1
  %YMM1.i783 = bitcast %union.VectorReg* %13368 to %"class.std::bitset"*
  %13369 = bitcast %"class.std::bitset"* %YMM1.i783 to i8*
  %13370 = bitcast %"class.std::bitset"* %YMM1.i783 to i8*
  %13371 = load i64, i64* %RAX.i781
  %13372 = load i64, i64* %RCX.i782
  %13373 = mul i64 %13372, 8
  %13374 = add i64 %13373, %13371
  %13375 = load i64, i64* %PC.i780
  %13376 = add i64 %13375, 5
  store i64 %13376, i64* %PC.i780
  %13377 = bitcast i8* %13370 to double*
  %13378 = load double, double* %13377, align 1
  %13379 = getelementptr inbounds i8, i8* %13370, i64 8
  %13380 = bitcast i8* %13379 to i64*
  %13381 = load i64, i64* %13380, align 1
  %13382 = inttoptr i64 %13374 to double*
  %13383 = load double, double* %13382
  %13384 = fdiv double %13378, %13383
  %13385 = bitcast i8* %13369 to double*
  store double %13384, double* %13385, align 1
  %13386 = getelementptr inbounds i8, i8* %13369, i64 8
  %13387 = bitcast i8* %13386 to i64*
  store i64 %13381, i64* %13387, align 1
  store %struct.Memory* %loadMem_4b1166, %struct.Memory** %MEMORY
  %loadMem_4b116b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13389 = getelementptr inbounds %struct.GPR, %struct.GPR* %13388, i32 0, i32 33
  %13390 = getelementptr inbounds %struct.Reg, %struct.Reg* %13389, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %13390 to i64*
  %13391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13392 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13391, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %13392 to %"class.std::bitset"*
  %13393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13394 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13393, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %13394 to %union.vec128_t*
  %13395 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %13396 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %13397 = bitcast %union.vec128_t* %XMM0.i to i8*
  %13398 = load i64, i64* %PC.i779
  %13399 = add i64 %13398, 4
  store i64 %13399, i64* %PC.i779
  %13400 = bitcast i8* %13396 to double*
  %13401 = load double, double* %13400, align 1
  %13402 = getelementptr inbounds i8, i8* %13396, i64 8
  %13403 = bitcast i8* %13402 to i64*
  %13404 = load i64, i64* %13403, align 1
  %13405 = bitcast i8* %13397 to double*
  %13406 = load double, double* %13405, align 1
  %13407 = fadd double %13401, %13406
  %13408 = bitcast i8* %13395 to double*
  store double %13407, double* %13408, align 1
  %13409 = getelementptr inbounds i8, i8* %13395, i64 8
  %13410 = bitcast i8* %13409 to i64*
  store i64 %13404, i64* %13410, align 1
  store %struct.Memory* %loadMem_4b116b, %struct.Memory** %MEMORY
  %loadMem_4b116f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13412 = getelementptr inbounds %struct.GPR, %struct.GPR* %13411, i32 0, i32 33
  %13413 = getelementptr inbounds %struct.Reg, %struct.Reg* %13412, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %13413 to i64*
  %13414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13415 = getelementptr inbounds %struct.GPR, %struct.GPR* %13414, i32 0, i32 7
  %13416 = getelementptr inbounds %struct.Reg, %struct.Reg* %13415, i32 0, i32 0
  %RDX.i778 = bitcast %union.anon* %13416 to i64*
  %13417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13418 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %13417, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %13418 to %union.vec128_t*
  %13419 = bitcast %union.vec128_t* %XMM1.i to i8*
  %13420 = load i64, i64* %PC.i777
  %13421 = add i64 %13420, 4
  store i64 %13421, i64* %PC.i777
  %13422 = bitcast i8* %13419 to double*
  %13423 = load double, double* %13422, align 1
  %13424 = call double @llvm.trunc.f64(double %13423)
  %13425 = call double @llvm.fabs.f64(double %13424)
  %13426 = fcmp ogt double %13425, 0x41DFFFFFFFC00000
  %13427 = fptosi double %13424 to i32
  %13428 = zext i32 %13427 to i64
  %13429 = select i1 %13426, i64 2147483648, i64 %13428
  store i64 %13429, i64* %RDX.i778, align 8
  store %struct.Memory* %loadMem_4b116f, %struct.Memory** %MEMORY
  %loadMem_4b1173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13431 = getelementptr inbounds %struct.GPR, %struct.GPR* %13430, i32 0, i32 33
  %13432 = getelementptr inbounds %struct.Reg, %struct.Reg* %13431, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %13432 to i64*
  %13433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13434 = getelementptr inbounds %struct.GPR, %struct.GPR* %13433, i32 0, i32 7
  %13435 = getelementptr inbounds %struct.Reg, %struct.Reg* %13434, i32 0, i32 0
  %EDX.i775 = bitcast %union.anon* %13435 to i32*
  %13436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13437 = getelementptr inbounds %struct.GPR, %struct.GPR* %13436, i32 0, i32 15
  %13438 = getelementptr inbounds %struct.Reg, %struct.Reg* %13437, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %13438 to i64*
  %13439 = load i64, i64* %RBP.i776
  %13440 = sub i64 %13439, 35400
  %13441 = load i32, i32* %EDX.i775
  %13442 = zext i32 %13441 to i64
  %13443 = load i64, i64* %PC.i774
  %13444 = add i64 %13443, 6
  store i64 %13444, i64* %PC.i774
  %13445 = inttoptr i64 %13440 to i32*
  store i32 %13441, i32* %13445
  store %struct.Memory* %loadMem_4b1173, %struct.Memory** %MEMORY
  %loadMem_4b1179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13447 = getelementptr inbounds %struct.GPR, %struct.GPR* %13446, i32 0, i32 33
  %13448 = getelementptr inbounds %struct.Reg, %struct.Reg* %13447, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %13448 to i64*
  %13449 = load i64, i64* %PC.i773
  %13450 = add i64 %13449, 17
  %13451 = load i64, i64* %PC.i773
  %13452 = add i64 %13451, 5
  store i64 %13452, i64* %PC.i773
  %13453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13450, i64* %13453, align 8
  store %struct.Memory* %loadMem_4b1179, %struct.Memory** %MEMORY
  br label %block_.L_4b118a

block_.L_4b117e:                                  ; preds = %block_4b1133
  %loadMem_4b117e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13455 = getelementptr inbounds %struct.GPR, %struct.GPR* %13454, i32 0, i32 33
  %13456 = getelementptr inbounds %struct.Reg, %struct.Reg* %13455, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %13456 to i64*
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13458 = getelementptr inbounds %struct.GPR, %struct.GPR* %13457, i32 0, i32 1
  %13459 = getelementptr inbounds %struct.Reg, %struct.Reg* %13458, i32 0, i32 0
  %RAX.i771 = bitcast %union.anon* %13459 to i64*
  %13460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13461 = getelementptr inbounds %struct.GPR, %struct.GPR* %13460, i32 0, i32 15
  %13462 = getelementptr inbounds %struct.Reg, %struct.Reg* %13461, i32 0, i32 0
  %RBP.i772 = bitcast %union.anon* %13462 to i64*
  %13463 = load i64, i64* %RBP.i772
  %13464 = sub i64 %13463, 796
  %13465 = load i64, i64* %PC.i770
  %13466 = add i64 %13465, 6
  store i64 %13466, i64* %PC.i770
  %13467 = inttoptr i64 %13464 to i32*
  %13468 = load i32, i32* %13467
  %13469 = zext i32 %13468 to i64
  store i64 %13469, i64* %RAX.i771, align 8
  store %struct.Memory* %loadMem_4b117e, %struct.Memory** %MEMORY
  %loadMem_4b1184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13471 = getelementptr inbounds %struct.GPR, %struct.GPR* %13470, i32 0, i32 33
  %13472 = getelementptr inbounds %struct.Reg, %struct.Reg* %13471, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %13472 to i64*
  %13473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13474 = getelementptr inbounds %struct.GPR, %struct.GPR* %13473, i32 0, i32 1
  %13475 = getelementptr inbounds %struct.Reg, %struct.Reg* %13474, i32 0, i32 0
  %EAX.i768 = bitcast %union.anon* %13475 to i32*
  %13476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13477 = getelementptr inbounds %struct.GPR, %struct.GPR* %13476, i32 0, i32 15
  %13478 = getelementptr inbounds %struct.Reg, %struct.Reg* %13477, i32 0, i32 0
  %RBP.i769 = bitcast %union.anon* %13478 to i64*
  %13479 = load i64, i64* %RBP.i769
  %13480 = sub i64 %13479, 35400
  %13481 = load i32, i32* %EAX.i768
  %13482 = zext i32 %13481 to i64
  %13483 = load i64, i64* %PC.i767
  %13484 = add i64 %13483, 6
  store i64 %13484, i64* %PC.i767
  %13485 = inttoptr i64 %13480 to i32*
  store i32 %13481, i32* %13485
  store %struct.Memory* %loadMem_4b1184, %struct.Memory** %MEMORY
  br label %block_.L_4b118a

block_.L_4b118a:                                  ; preds = %block_.L_4b117e, %block_.L_4b1138
  %loadMem_4b118a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13487 = getelementptr inbounds %struct.GPR, %struct.GPR* %13486, i32 0, i32 33
  %13488 = getelementptr inbounds %struct.Reg, %struct.Reg* %13487, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %13488 to i64*
  %13489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13490 = getelementptr inbounds %struct.GPR, %struct.GPR* %13489, i32 0, i32 15
  %13491 = getelementptr inbounds %struct.Reg, %struct.Reg* %13490, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %13491 to i64*
  %13492 = load i64, i64* %RBP.i766
  %13493 = sub i64 %13492, 35400
  %13494 = load i64, i64* %PC.i765
  %13495 = add i64 %13494, 7
  store i64 %13495, i64* %PC.i765
  %13496 = inttoptr i64 %13493 to i32*
  %13497 = load i32, i32* %13496
  %13498 = sub i32 %13497, -64
  %13499 = icmp ult i32 %13497, -64
  %13500 = zext i1 %13499 to i8
  %13501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13500, i8* %13501, align 1
  %13502 = and i32 %13498, 255
  %13503 = call i32 @llvm.ctpop.i32(i32 %13502)
  %13504 = trunc i32 %13503 to i8
  %13505 = and i8 %13504, 1
  %13506 = xor i8 %13505, 1
  %13507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13506, i8* %13507, align 1
  %13508 = xor i32 %13497, -64
  %13509 = xor i32 %13508, %13498
  %13510 = lshr i32 %13509, 4
  %13511 = trunc i32 %13510 to i8
  %13512 = and i8 %13511, 1
  %13513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13512, i8* %13513, align 1
  %13514 = icmp eq i32 %13498, 0
  %13515 = zext i1 %13514 to i8
  %13516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13515, i8* %13516, align 1
  %13517 = lshr i32 %13498, 31
  %13518 = trunc i32 %13517 to i8
  %13519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13518, i8* %13519, align 1
  %13520 = lshr i32 %13497, 31
  %13521 = xor i32 %13520, 1
  %13522 = xor i32 %13517, %13520
  %13523 = add i32 %13522, %13521
  %13524 = icmp eq i32 %13523, 2
  %13525 = zext i1 %13524 to i8
  %13526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13525, i8* %13526, align 1
  store %struct.Memory* %loadMem_4b118a, %struct.Memory** %MEMORY
  %loadMem_4b1191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13528 = getelementptr inbounds %struct.GPR, %struct.GPR* %13527, i32 0, i32 33
  %13529 = getelementptr inbounds %struct.Reg, %struct.Reg* %13528, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %13529 to i64*
  %13530 = load i64, i64* %PC.i764
  %13531 = add i64 %13530, 19
  %13532 = load i64, i64* %PC.i764
  %13533 = add i64 %13532, 6
  %13534 = load i64, i64* %PC.i764
  %13535 = add i64 %13534, 6
  store i64 %13535, i64* %PC.i764
  %13536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13537 = load i8, i8* %13536, align 1
  %13538 = icmp ne i8 %13537, 0
  %13539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13540 = load i8, i8* %13539, align 1
  %13541 = icmp ne i8 %13540, 0
  %13542 = xor i1 %13538, %13541
  %13543 = zext i1 %13542 to i8
  store i8 %13543, i8* %BRANCH_TAKEN, align 1
  %13544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13545 = select i1 %13542, i64 %13531, i64 %13533
  store i64 %13545, i64* %13544, align 8
  store %struct.Memory* %loadMem_4b1191, %struct.Memory** %MEMORY
  %loadBr_4b1191 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1191 = icmp eq i8 %loadBr_4b1191, 1
  br i1 %cmpBr_4b1191, label %block_.L_4b11a4, label %block_4b1197

block_4b1197:                                     ; preds = %block_.L_4b118a
  %loadMem_4b1197 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13547 = getelementptr inbounds %struct.GPR, %struct.GPR* %13546, i32 0, i32 33
  %13548 = getelementptr inbounds %struct.Reg, %struct.Reg* %13547, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %13548 to i64*
  %13549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13550 = getelementptr inbounds %struct.GPR, %struct.GPR* %13549, i32 0, i32 15
  %13551 = getelementptr inbounds %struct.Reg, %struct.Reg* %13550, i32 0, i32 0
  %RBP.i763 = bitcast %union.anon* %13551 to i64*
  %13552 = load i64, i64* %RBP.i763
  %13553 = sub i64 %13552, 35400
  %13554 = load i64, i64* %PC.i762
  %13555 = add i64 %13554, 7
  store i64 %13555, i64* %PC.i762
  %13556 = inttoptr i64 %13553 to i32*
  %13557 = load i32, i32* %13556
  %13558 = sub i32 %13557, 127
  %13559 = icmp ult i32 %13557, 127
  %13560 = zext i1 %13559 to i8
  %13561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13560, i8* %13561, align 1
  %13562 = and i32 %13558, 255
  %13563 = call i32 @llvm.ctpop.i32(i32 %13562)
  %13564 = trunc i32 %13563 to i8
  %13565 = and i8 %13564, 1
  %13566 = xor i8 %13565, 1
  %13567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13566, i8* %13567, align 1
  %13568 = xor i32 %13557, 127
  %13569 = xor i32 %13568, %13558
  %13570 = lshr i32 %13569, 4
  %13571 = trunc i32 %13570 to i8
  %13572 = and i8 %13571, 1
  %13573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13572, i8* %13573, align 1
  %13574 = icmp eq i32 %13558, 0
  %13575 = zext i1 %13574 to i8
  %13576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13575, i8* %13576, align 1
  %13577 = lshr i32 %13558, 31
  %13578 = trunc i32 %13577 to i8
  %13579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13578, i8* %13579, align 1
  %13580 = lshr i32 %13557, 31
  %13581 = xor i32 %13577, %13580
  %13582 = add i32 %13581, %13580
  %13583 = icmp eq i32 %13582, 2
  %13584 = zext i1 %13583 to i8
  %13585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13584, i8* %13585, align 1
  store %struct.Memory* %loadMem_4b1197, %struct.Memory** %MEMORY
  %loadMem_4b119e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13587 = getelementptr inbounds %struct.GPR, %struct.GPR* %13586, i32 0, i32 33
  %13588 = getelementptr inbounds %struct.Reg, %struct.Reg* %13587, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %13588 to i64*
  %13589 = load i64, i64* %PC.i761
  %13590 = add i64 %13589, 18
  %13591 = load i64, i64* %PC.i761
  %13592 = add i64 %13591, 6
  %13593 = load i64, i64* %PC.i761
  %13594 = add i64 %13593, 6
  store i64 %13594, i64* %PC.i761
  %13595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13596 = load i8, i8* %13595, align 1
  %13597 = icmp ne i8 %13596, 0
  %13598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13599 = load i8, i8* %13598, align 1
  %13600 = icmp ne i8 %13599, 0
  %13601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13602 = load i8, i8* %13601, align 1
  %13603 = icmp ne i8 %13602, 0
  %13604 = xor i1 %13600, %13603
  %13605 = or i1 %13597, %13604
  %13606 = zext i1 %13605 to i8
  store i8 %13606, i8* %BRANCH_TAKEN, align 1
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13608 = select i1 %13605, i64 %13590, i64 %13592
  store i64 %13608, i64* %13607, align 8
  store %struct.Memory* %loadMem_4b119e, %struct.Memory** %MEMORY
  %loadBr_4b119e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b119e = icmp eq i8 %loadBr_4b119e, 1
  br i1 %cmpBr_4b119e, label %block_.L_4b11b0, label %block_.L_4b11a4

block_.L_4b11a4:                                  ; preds = %block_4b1197, %block_.L_4b118a
  %loadMem_4b11a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13610 = getelementptr inbounds %struct.GPR, %struct.GPR* %13609, i32 0, i32 33
  %13611 = getelementptr inbounds %struct.Reg, %struct.Reg* %13610, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %13611 to i64*
  %13612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13613 = getelementptr inbounds %struct.GPR, %struct.GPR* %13612, i32 0, i32 1
  %13614 = getelementptr inbounds %struct.Reg, %struct.Reg* %13613, i32 0, i32 0
  %RAX.i759 = bitcast %union.anon* %13614 to i64*
  %13615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13616 = getelementptr inbounds %struct.GPR, %struct.GPR* %13615, i32 0, i32 15
  %13617 = getelementptr inbounds %struct.Reg, %struct.Reg* %13616, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %13617 to i64*
  %13618 = load i64, i64* %RBP.i760
  %13619 = sub i64 %13618, 796
  %13620 = load i64, i64* %PC.i758
  %13621 = add i64 %13620, 6
  store i64 %13621, i64* %PC.i758
  %13622 = inttoptr i64 %13619 to i32*
  %13623 = load i32, i32* %13622
  %13624 = zext i32 %13623 to i64
  store i64 %13624, i64* %RAX.i759, align 8
  store %struct.Memory* %loadMem_4b11a4, %struct.Memory** %MEMORY
  %loadMem_4b11aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %13625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13626 = getelementptr inbounds %struct.GPR, %struct.GPR* %13625, i32 0, i32 33
  %13627 = getelementptr inbounds %struct.Reg, %struct.Reg* %13626, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %13627 to i64*
  %13628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13629 = getelementptr inbounds %struct.GPR, %struct.GPR* %13628, i32 0, i32 1
  %13630 = getelementptr inbounds %struct.Reg, %struct.Reg* %13629, i32 0, i32 0
  %EAX.i756 = bitcast %union.anon* %13630 to i32*
  %13631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13632 = getelementptr inbounds %struct.GPR, %struct.GPR* %13631, i32 0, i32 15
  %13633 = getelementptr inbounds %struct.Reg, %struct.Reg* %13632, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %13633 to i64*
  %13634 = load i64, i64* %RBP.i757
  %13635 = sub i64 %13634, 35400
  %13636 = load i32, i32* %EAX.i756
  %13637 = zext i32 %13636 to i64
  %13638 = load i64, i64* %PC.i755
  %13639 = add i64 %13638, 6
  store i64 %13639, i64* %PC.i755
  %13640 = inttoptr i64 %13635 to i32*
  store i32 %13636, i32* %13640
  store %struct.Memory* %loadMem_4b11aa, %struct.Memory** %MEMORY
  br label %block_.L_4b11b0

block_.L_4b11b0:                                  ; preds = %block_.L_4b11a4, %block_4b1197
  %loadMem_4b11b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13642 = getelementptr inbounds %struct.GPR, %struct.GPR* %13641, i32 0, i32 33
  %13643 = getelementptr inbounds %struct.Reg, %struct.Reg* %13642, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %13643 to i64*
  %13644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13645 = getelementptr inbounds %struct.GPR, %struct.GPR* %13644, i32 0, i32 1
  %13646 = getelementptr inbounds %struct.Reg, %struct.Reg* %13645, i32 0, i32 0
  %RAX.i753 = bitcast %union.anon* %13646 to i64*
  %13647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13648 = getelementptr inbounds %struct.GPR, %struct.GPR* %13647, i32 0, i32 15
  %13649 = getelementptr inbounds %struct.Reg, %struct.Reg* %13648, i32 0, i32 0
  %RBP.i754 = bitcast %union.anon* %13649 to i64*
  %13650 = load i64, i64* %RBP.i754
  %13651 = sub i64 %13650, 2976
  %13652 = load i64, i64* %PC.i752
  %13653 = add i64 %13652, 7
  store i64 %13653, i64* %PC.i752
  store i64 %13651, i64* %RAX.i753, align 8
  store %struct.Memory* %loadMem_4b11b0, %struct.Memory** %MEMORY
  %loadMem_4b11b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13655 = getelementptr inbounds %struct.GPR, %struct.GPR* %13654, i32 0, i32 33
  %13656 = getelementptr inbounds %struct.Reg, %struct.Reg* %13655, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %13656 to i64*
  %13657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13658 = getelementptr inbounds %struct.GPR, %struct.GPR* %13657, i32 0, i32 5
  %13659 = getelementptr inbounds %struct.Reg, %struct.Reg* %13658, i32 0, i32 0
  %RCX.i750 = bitcast %union.anon* %13659 to i64*
  %13660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13661 = getelementptr inbounds %struct.GPR, %struct.GPR* %13660, i32 0, i32 15
  %13662 = getelementptr inbounds %struct.Reg, %struct.Reg* %13661, i32 0, i32 0
  %RBP.i751 = bitcast %union.anon* %13662 to i64*
  %13663 = load i64, i64* %RBP.i751
  %13664 = sub i64 %13663, 1888
  %13665 = load i64, i64* %PC.i749
  %13666 = add i64 %13665, 7
  store i64 %13666, i64* %PC.i749
  store i64 %13664, i64* %RCX.i750, align 8
  store %struct.Memory* %loadMem_4b11b7, %struct.Memory** %MEMORY
  %loadMem_4b11be = load %struct.Memory*, %struct.Memory** %MEMORY
  %13667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13668 = getelementptr inbounds %struct.GPR, %struct.GPR* %13667, i32 0, i32 33
  %13669 = getelementptr inbounds %struct.Reg, %struct.Reg* %13668, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %13669 to i64*
  %13670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13671 = getelementptr inbounds %struct.GPR, %struct.GPR* %13670, i32 0, i32 15
  %13672 = getelementptr inbounds %struct.Reg, %struct.Reg* %13671, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %13672 to i64*
  %13673 = load i64, i64* %RBP.i748
  %13674 = sub i64 %13673, 35404
  %13675 = load i64, i64* %PC.i747
  %13676 = add i64 %13675, 10
  store i64 %13676, i64* %PC.i747
  %13677 = inttoptr i64 %13674 to i32*
  store i32 0, i32* %13677
  store %struct.Memory* %loadMem_4b11be, %struct.Memory** %MEMORY
  %loadMem_4b11c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13679 = getelementptr inbounds %struct.GPR, %struct.GPR* %13678, i32 0, i32 33
  %13680 = getelementptr inbounds %struct.Reg, %struct.Reg* %13679, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %13680 to i64*
  %13681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13682 = getelementptr inbounds %struct.GPR, %struct.GPR* %13681, i32 0, i32 7
  %13683 = getelementptr inbounds %struct.Reg, %struct.Reg* %13682, i32 0, i32 0
  %RDX.i745 = bitcast %union.anon* %13683 to i64*
  %13684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13685 = getelementptr inbounds %struct.GPR, %struct.GPR* %13684, i32 0, i32 15
  %13686 = getelementptr inbounds %struct.Reg, %struct.Reg* %13685, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %13686 to i64*
  %13687 = load i64, i64* %RBP.i746
  %13688 = sub i64 %13687, 35400
  %13689 = load i64, i64* %PC.i744
  %13690 = add i64 %13689, 6
  store i64 %13690, i64* %PC.i744
  %13691 = inttoptr i64 %13688 to i32*
  %13692 = load i32, i32* %13691
  %13693 = zext i32 %13692 to i64
  store i64 %13693, i64* %RDX.i745, align 8
  store %struct.Memory* %loadMem_4b11c8, %struct.Memory** %MEMORY
  %loadMem_4b11ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %13694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13695 = getelementptr inbounds %struct.GPR, %struct.GPR* %13694, i32 0, i32 33
  %13696 = getelementptr inbounds %struct.Reg, %struct.Reg* %13695, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %13696 to i64*
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13698 = getelementptr inbounds %struct.GPR, %struct.GPR* %13697, i32 0, i32 9
  %13699 = getelementptr inbounds %struct.Reg, %struct.Reg* %13698, i32 0, i32 0
  %RSI.i742 = bitcast %union.anon* %13699 to i64*
  %13700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13701 = getelementptr inbounds %struct.GPR, %struct.GPR* %13700, i32 0, i32 15
  %13702 = getelementptr inbounds %struct.Reg, %struct.Reg* %13701, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %13702 to i64*
  %13703 = load i64, i64* %RBP.i743
  %13704 = sub i64 %13703, 35396
  %13705 = load i64, i64* %PC.i741
  %13706 = add i64 %13705, 7
  store i64 %13706, i64* %PC.i741
  %13707 = inttoptr i64 %13704 to i32*
  %13708 = load i32, i32* %13707
  %13709 = sext i32 %13708 to i64
  store i64 %13709, i64* %RSI.i742, align 8
  store %struct.Memory* %loadMem_4b11ce, %struct.Memory** %MEMORY
  %loadMem_4b11d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13711 = getelementptr inbounds %struct.GPR, %struct.GPR* %13710, i32 0, i32 33
  %13712 = getelementptr inbounds %struct.Reg, %struct.Reg* %13711, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %13712 to i64*
  %13713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13714 = getelementptr inbounds %struct.GPR, %struct.GPR* %13713, i32 0, i32 9
  %13715 = getelementptr inbounds %struct.Reg, %struct.Reg* %13714, i32 0, i32 0
  %RSI.i740 = bitcast %union.anon* %13715 to i64*
  %13716 = load i64, i64* %RSI.i740
  %13717 = load i64, i64* %PC.i739
  %13718 = add i64 %13717, 7
  store i64 %13718, i64* %PC.i739
  %13719 = sext i64 %13716 to i128
  %13720 = and i128 %13719, -18446744073709551616
  %13721 = zext i64 %13716 to i128
  %13722 = or i128 %13720, %13721
  %13723 = mul i128 180, %13722
  %13724 = trunc i128 %13723 to i64
  store i64 %13724, i64* %RSI.i740, align 8
  %13725 = sext i64 %13724 to i128
  %13726 = icmp ne i128 %13725, %13723
  %13727 = zext i1 %13726 to i8
  %13728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13727, i8* %13728, align 1
  %13729 = trunc i128 %13723 to i32
  %13730 = and i32 %13729, 255
  %13731 = call i32 @llvm.ctpop.i32(i32 %13730)
  %13732 = trunc i32 %13731 to i8
  %13733 = and i8 %13732, 1
  %13734 = xor i8 %13733, 1
  %13735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13734, i8* %13735, align 1
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13736, align 1
  %13737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13737, align 1
  %13738 = lshr i64 %13724, 63
  %13739 = trunc i64 %13738 to i8
  %13740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13739, i8* %13740, align 1
  %13741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13727, i8* %13741, align 1
  store %struct.Memory* %loadMem_4b11d5, %struct.Memory** %MEMORY
  %loadMem_4b11dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13743 = getelementptr inbounds %struct.GPR, %struct.GPR* %13742, i32 0, i32 33
  %13744 = getelementptr inbounds %struct.Reg, %struct.Reg* %13743, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %13744 to i64*
  %13745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13746 = getelementptr inbounds %struct.GPR, %struct.GPR* %13745, i32 0, i32 5
  %13747 = getelementptr inbounds %struct.Reg, %struct.Reg* %13746, i32 0, i32 0
  %RCX.i737 = bitcast %union.anon* %13747 to i64*
  %13748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13749 = getelementptr inbounds %struct.GPR, %struct.GPR* %13748, i32 0, i32 11
  %13750 = getelementptr inbounds %struct.Reg, %struct.Reg* %13749, i32 0, i32 0
  %RDI.i738 = bitcast %union.anon* %13750 to i64*
  %13751 = load i64, i64* %RCX.i737
  %13752 = load i64, i64* %PC.i736
  %13753 = add i64 %13752, 3
  store i64 %13753, i64* %PC.i736
  store i64 %13751, i64* %RDI.i738, align 8
  store %struct.Memory* %loadMem_4b11dc, %struct.Memory** %MEMORY
  %loadMem_4b11df = load %struct.Memory*, %struct.Memory** %MEMORY
  %13754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13755 = getelementptr inbounds %struct.GPR, %struct.GPR* %13754, i32 0, i32 33
  %13756 = getelementptr inbounds %struct.Reg, %struct.Reg* %13755, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %13756 to i64*
  %13757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13758 = getelementptr inbounds %struct.GPR, %struct.GPR* %13757, i32 0, i32 9
  %13759 = getelementptr inbounds %struct.Reg, %struct.Reg* %13758, i32 0, i32 0
  %RSI.i734 = bitcast %union.anon* %13759 to i64*
  %13760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13761 = getelementptr inbounds %struct.GPR, %struct.GPR* %13760, i32 0, i32 11
  %13762 = getelementptr inbounds %struct.Reg, %struct.Reg* %13761, i32 0, i32 0
  %RDI.i735 = bitcast %union.anon* %13762 to i64*
  %13763 = load i64, i64* %RDI.i735
  %13764 = load i64, i64* %RSI.i734
  %13765 = load i64, i64* %PC.i733
  %13766 = add i64 %13765, 3
  store i64 %13766, i64* %PC.i733
  %13767 = add i64 %13764, %13763
  store i64 %13767, i64* %RDI.i735, align 8
  %13768 = icmp ult i64 %13767, %13763
  %13769 = icmp ult i64 %13767, %13764
  %13770 = or i1 %13768, %13769
  %13771 = zext i1 %13770 to i8
  %13772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13771, i8* %13772, align 1
  %13773 = trunc i64 %13767 to i32
  %13774 = and i32 %13773, 255
  %13775 = call i32 @llvm.ctpop.i32(i32 %13774)
  %13776 = trunc i32 %13775 to i8
  %13777 = and i8 %13776, 1
  %13778 = xor i8 %13777, 1
  %13779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13778, i8* %13779, align 1
  %13780 = xor i64 %13764, %13763
  %13781 = xor i64 %13780, %13767
  %13782 = lshr i64 %13781, 4
  %13783 = trunc i64 %13782 to i8
  %13784 = and i8 %13783, 1
  %13785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13784, i8* %13785, align 1
  %13786 = icmp eq i64 %13767, 0
  %13787 = zext i1 %13786 to i8
  %13788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13787, i8* %13788, align 1
  %13789 = lshr i64 %13767, 63
  %13790 = trunc i64 %13789 to i8
  %13791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13790, i8* %13791, align 1
  %13792 = lshr i64 %13763, 63
  %13793 = lshr i64 %13764, 63
  %13794 = xor i64 %13789, %13792
  %13795 = xor i64 %13789, %13793
  %13796 = add i64 %13794, %13795
  %13797 = icmp eq i64 %13796, 2
  %13798 = zext i1 %13797 to i8
  %13799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13798, i8* %13799, align 1
  store %struct.Memory* %loadMem_4b11df, %struct.Memory** %MEMORY
  %loadMem_4b11e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13801 = getelementptr inbounds %struct.GPR, %struct.GPR* %13800, i32 0, i32 33
  %13802 = getelementptr inbounds %struct.Reg, %struct.Reg* %13801, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %13802 to i64*
  %13803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13804 = getelementptr inbounds %struct.GPR, %struct.GPR* %13803, i32 0, i32 9
  %13805 = getelementptr inbounds %struct.Reg, %struct.Reg* %13804, i32 0, i32 0
  %RSI.i731 = bitcast %union.anon* %13805 to i64*
  %13806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13807 = getelementptr inbounds %struct.GPR, %struct.GPR* %13806, i32 0, i32 15
  %13808 = getelementptr inbounds %struct.Reg, %struct.Reg* %13807, i32 0, i32 0
  %RBP.i732 = bitcast %union.anon* %13808 to i64*
  %13809 = load i64, i64* %RBP.i732
  %13810 = sub i64 %13809, 16
  %13811 = load i64, i64* %PC.i730
  %13812 = add i64 %13811, 4
  store i64 %13812, i64* %PC.i730
  %13813 = inttoptr i64 %13810 to i32*
  %13814 = load i32, i32* %13813
  %13815 = sext i32 %13814 to i64
  store i64 %13815, i64* %RSI.i731, align 8
  store %struct.Memory* %loadMem_4b11e2, %struct.Memory** %MEMORY
  %loadMem_4b11e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13817 = getelementptr inbounds %struct.GPR, %struct.GPR* %13816, i32 0, i32 33
  %13818 = getelementptr inbounds %struct.Reg, %struct.Reg* %13817, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %13818 to i64*
  %13819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13820 = getelementptr inbounds %struct.GPR, %struct.GPR* %13819, i32 0, i32 9
  %13821 = getelementptr inbounds %struct.Reg, %struct.Reg* %13820, i32 0, i32 0
  %RSI.i729 = bitcast %union.anon* %13821 to i64*
  %13822 = load i64, i64* %RSI.i729
  %13823 = load i64, i64* %PC.i728
  %13824 = add i64 %13823, 4
  store i64 %13824, i64* %PC.i728
  %13825 = sext i64 %13822 to i128
  %13826 = and i128 %13825, -18446744073709551616
  %13827 = zext i64 %13822 to i128
  %13828 = or i128 %13826, %13827
  %13829 = mul i128 12, %13828
  %13830 = trunc i128 %13829 to i64
  store i64 %13830, i64* %RSI.i729, align 8
  %13831 = sext i64 %13830 to i128
  %13832 = icmp ne i128 %13831, %13829
  %13833 = zext i1 %13832 to i8
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13833, i8* %13834, align 1
  %13835 = trunc i128 %13829 to i32
  %13836 = and i32 %13835, 255
  %13837 = call i32 @llvm.ctpop.i32(i32 %13836)
  %13838 = trunc i32 %13837 to i8
  %13839 = and i8 %13838, 1
  %13840 = xor i8 %13839, 1
  %13841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13840, i8* %13841, align 1
  %13842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13842, align 1
  %13843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13843, align 1
  %13844 = lshr i64 %13830, 63
  %13845 = trunc i64 %13844 to i8
  %13846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13845, i8* %13846, align 1
  %13847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13833, i8* %13847, align 1
  store %struct.Memory* %loadMem_4b11e6, %struct.Memory** %MEMORY
  %loadMem_4b11ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %13848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13849 = getelementptr inbounds %struct.GPR, %struct.GPR* %13848, i32 0, i32 33
  %13850 = getelementptr inbounds %struct.Reg, %struct.Reg* %13849, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %13850 to i64*
  %13851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13852 = getelementptr inbounds %struct.GPR, %struct.GPR* %13851, i32 0, i32 9
  %13853 = getelementptr inbounds %struct.Reg, %struct.Reg* %13852, i32 0, i32 0
  %RSI.i726 = bitcast %union.anon* %13853 to i64*
  %13854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13855 = getelementptr inbounds %struct.GPR, %struct.GPR* %13854, i32 0, i32 11
  %13856 = getelementptr inbounds %struct.Reg, %struct.Reg* %13855, i32 0, i32 0
  %RDI.i727 = bitcast %union.anon* %13856 to i64*
  %13857 = load i64, i64* %RDI.i727
  %13858 = load i64, i64* %RSI.i726
  %13859 = load i64, i64* %PC.i725
  %13860 = add i64 %13859, 3
  store i64 %13860, i64* %PC.i725
  %13861 = add i64 %13858, %13857
  store i64 %13861, i64* %RDI.i727, align 8
  %13862 = icmp ult i64 %13861, %13857
  %13863 = icmp ult i64 %13861, %13858
  %13864 = or i1 %13862, %13863
  %13865 = zext i1 %13864 to i8
  %13866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13865, i8* %13866, align 1
  %13867 = trunc i64 %13861 to i32
  %13868 = and i32 %13867, 255
  %13869 = call i32 @llvm.ctpop.i32(i32 %13868)
  %13870 = trunc i32 %13869 to i8
  %13871 = and i8 %13870, 1
  %13872 = xor i8 %13871, 1
  %13873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13872, i8* %13873, align 1
  %13874 = xor i64 %13858, %13857
  %13875 = xor i64 %13874, %13861
  %13876 = lshr i64 %13875, 4
  %13877 = trunc i64 %13876 to i8
  %13878 = and i8 %13877, 1
  %13879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13878, i8* %13879, align 1
  %13880 = icmp eq i64 %13861, 0
  %13881 = zext i1 %13880 to i8
  %13882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13881, i8* %13882, align 1
  %13883 = lshr i64 %13861, 63
  %13884 = trunc i64 %13883 to i8
  %13885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13884, i8* %13885, align 1
  %13886 = lshr i64 %13857, 63
  %13887 = lshr i64 %13858, 63
  %13888 = xor i64 %13883, %13886
  %13889 = xor i64 %13883, %13887
  %13890 = add i64 %13888, %13889
  %13891 = icmp eq i64 %13890, 2
  %13892 = zext i1 %13891 to i8
  %13893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13892, i8* %13893, align 1
  store %struct.Memory* %loadMem_4b11ea, %struct.Memory** %MEMORY
  %loadMem_4b11ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %13894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13895 = getelementptr inbounds %struct.GPR, %struct.GPR* %13894, i32 0, i32 33
  %13896 = getelementptr inbounds %struct.Reg, %struct.Reg* %13895, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %13896 to i64*
  %13897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13898 = getelementptr inbounds %struct.GPR, %struct.GPR* %13897, i32 0, i32 7
  %13899 = getelementptr inbounds %struct.Reg, %struct.Reg* %13898, i32 0, i32 0
  %EDX.i723 = bitcast %union.anon* %13899 to i32*
  %13900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13901 = getelementptr inbounds %struct.GPR, %struct.GPR* %13900, i32 0, i32 11
  %13902 = getelementptr inbounds %struct.Reg, %struct.Reg* %13901, i32 0, i32 0
  %RDI.i724 = bitcast %union.anon* %13902 to i64*
  %13903 = load i64, i64* %RDI.i724
  %13904 = load i32, i32* %EDX.i723
  %13905 = zext i32 %13904 to i64
  %13906 = load i64, i64* %PC.i722
  %13907 = add i64 %13906, 2
  store i64 %13907, i64* %PC.i722
  %13908 = inttoptr i64 %13903 to i32*
  store i32 %13904, i32* %13908
  store %struct.Memory* %loadMem_4b11ed, %struct.Memory** %MEMORY
  %loadMem_4b11ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13910 = getelementptr inbounds %struct.GPR, %struct.GPR* %13909, i32 0, i32 33
  %13911 = getelementptr inbounds %struct.Reg, %struct.Reg* %13910, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %13911 to i64*
  %13912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13913 = getelementptr inbounds %struct.GPR, %struct.GPR* %13912, i32 0, i32 7
  %13914 = getelementptr inbounds %struct.Reg, %struct.Reg* %13913, i32 0, i32 0
  %RDX.i720 = bitcast %union.anon* %13914 to i64*
  %13915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13916 = getelementptr inbounds %struct.GPR, %struct.GPR* %13915, i32 0, i32 15
  %13917 = getelementptr inbounds %struct.Reg, %struct.Reg* %13916, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %13917 to i64*
  %13918 = load i64, i64* %RBP.i721
  %13919 = sub i64 %13918, 800
  %13920 = load i64, i64* %PC.i719
  %13921 = add i64 %13920, 6
  store i64 %13921, i64* %PC.i719
  %13922 = inttoptr i64 %13919 to i32*
  %13923 = load i32, i32* %13922
  %13924 = zext i32 %13923 to i64
  store i64 %13924, i64* %RDX.i720, align 8
  store %struct.Memory* %loadMem_4b11ef, %struct.Memory** %MEMORY
  %loadMem_4b11f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13926 = getelementptr inbounds %struct.GPR, %struct.GPR* %13925, i32 0, i32 33
  %13927 = getelementptr inbounds %struct.Reg, %struct.Reg* %13926, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %13927 to i64*
  %13928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13929 = getelementptr inbounds %struct.GPR, %struct.GPR* %13928, i32 0, i32 9
  %13930 = getelementptr inbounds %struct.Reg, %struct.Reg* %13929, i32 0, i32 0
  %RSI.i717 = bitcast %union.anon* %13930 to i64*
  %13931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13932 = getelementptr inbounds %struct.GPR, %struct.GPR* %13931, i32 0, i32 15
  %13933 = getelementptr inbounds %struct.Reg, %struct.Reg* %13932, i32 0, i32 0
  %RBP.i718 = bitcast %union.anon* %13933 to i64*
  %13934 = load i64, i64* %RBP.i718
  %13935 = sub i64 %13934, 35396
  %13936 = load i64, i64* %PC.i716
  %13937 = add i64 %13936, 7
  store i64 %13937, i64* %PC.i716
  %13938 = inttoptr i64 %13935 to i32*
  %13939 = load i32, i32* %13938
  %13940 = sext i32 %13939 to i64
  store i64 %13940, i64* %RSI.i717, align 8
  store %struct.Memory* %loadMem_4b11f5, %struct.Memory** %MEMORY
  %loadMem_4b11fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13942 = getelementptr inbounds %struct.GPR, %struct.GPR* %13941, i32 0, i32 33
  %13943 = getelementptr inbounds %struct.Reg, %struct.Reg* %13942, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %13943 to i64*
  %13944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13945 = getelementptr inbounds %struct.GPR, %struct.GPR* %13944, i32 0, i32 9
  %13946 = getelementptr inbounds %struct.Reg, %struct.Reg* %13945, i32 0, i32 0
  %RSI.i715 = bitcast %union.anon* %13946 to i64*
  %13947 = load i64, i64* %RSI.i715
  %13948 = load i64, i64* %PC.i714
  %13949 = add i64 %13948, 7
  store i64 %13949, i64* %PC.i714
  %13950 = sext i64 %13947 to i128
  %13951 = and i128 %13950, -18446744073709551616
  %13952 = zext i64 %13947 to i128
  %13953 = or i128 %13951, %13952
  %13954 = mul i128 180, %13953
  %13955 = trunc i128 %13954 to i64
  store i64 %13955, i64* %RSI.i715, align 8
  %13956 = sext i64 %13955 to i128
  %13957 = icmp ne i128 %13956, %13954
  %13958 = zext i1 %13957 to i8
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13958, i8* %13959, align 1
  %13960 = trunc i128 %13954 to i32
  %13961 = and i32 %13960, 255
  %13962 = call i32 @llvm.ctpop.i32(i32 %13961)
  %13963 = trunc i32 %13962 to i8
  %13964 = and i8 %13963, 1
  %13965 = xor i8 %13964, 1
  %13966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13965, i8* %13966, align 1
  %13967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13967, align 1
  %13968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13968, align 1
  %13969 = lshr i64 %13955, 63
  %13970 = trunc i64 %13969 to i8
  %13971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13970, i8* %13971, align 1
  %13972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13958, i8* %13972, align 1
  store %struct.Memory* %loadMem_4b11fc, %struct.Memory** %MEMORY
  %loadMem_4b1203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13974 = getelementptr inbounds %struct.GPR, %struct.GPR* %13973, i32 0, i32 33
  %13975 = getelementptr inbounds %struct.Reg, %struct.Reg* %13974, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %13975 to i64*
  %13976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13977 = getelementptr inbounds %struct.GPR, %struct.GPR* %13976, i32 0, i32 5
  %13978 = getelementptr inbounds %struct.Reg, %struct.Reg* %13977, i32 0, i32 0
  %RCX.i712 = bitcast %union.anon* %13978 to i64*
  %13979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13980 = getelementptr inbounds %struct.GPR, %struct.GPR* %13979, i32 0, i32 11
  %13981 = getelementptr inbounds %struct.Reg, %struct.Reg* %13980, i32 0, i32 0
  %RDI.i713 = bitcast %union.anon* %13981 to i64*
  %13982 = load i64, i64* %RCX.i712
  %13983 = load i64, i64* %PC.i711
  %13984 = add i64 %13983, 3
  store i64 %13984, i64* %PC.i711
  store i64 %13982, i64* %RDI.i713, align 8
  store %struct.Memory* %loadMem_4b1203, %struct.Memory** %MEMORY
  %loadMem_4b1206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13986 = getelementptr inbounds %struct.GPR, %struct.GPR* %13985, i32 0, i32 33
  %13987 = getelementptr inbounds %struct.Reg, %struct.Reg* %13986, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %13987 to i64*
  %13988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13989 = getelementptr inbounds %struct.GPR, %struct.GPR* %13988, i32 0, i32 9
  %13990 = getelementptr inbounds %struct.Reg, %struct.Reg* %13989, i32 0, i32 0
  %RSI.i709 = bitcast %union.anon* %13990 to i64*
  %13991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13992 = getelementptr inbounds %struct.GPR, %struct.GPR* %13991, i32 0, i32 11
  %13993 = getelementptr inbounds %struct.Reg, %struct.Reg* %13992, i32 0, i32 0
  %RDI.i710 = bitcast %union.anon* %13993 to i64*
  %13994 = load i64, i64* %RDI.i710
  %13995 = load i64, i64* %RSI.i709
  %13996 = load i64, i64* %PC.i708
  %13997 = add i64 %13996, 3
  store i64 %13997, i64* %PC.i708
  %13998 = add i64 %13995, %13994
  store i64 %13998, i64* %RDI.i710, align 8
  %13999 = icmp ult i64 %13998, %13994
  %14000 = icmp ult i64 %13998, %13995
  %14001 = or i1 %13999, %14000
  %14002 = zext i1 %14001 to i8
  %14003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14002, i8* %14003, align 1
  %14004 = trunc i64 %13998 to i32
  %14005 = and i32 %14004, 255
  %14006 = call i32 @llvm.ctpop.i32(i32 %14005)
  %14007 = trunc i32 %14006 to i8
  %14008 = and i8 %14007, 1
  %14009 = xor i8 %14008, 1
  %14010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14009, i8* %14010, align 1
  %14011 = xor i64 %13995, %13994
  %14012 = xor i64 %14011, %13998
  %14013 = lshr i64 %14012, 4
  %14014 = trunc i64 %14013 to i8
  %14015 = and i8 %14014, 1
  %14016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14015, i8* %14016, align 1
  %14017 = icmp eq i64 %13998, 0
  %14018 = zext i1 %14017 to i8
  %14019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14018, i8* %14019, align 1
  %14020 = lshr i64 %13998, 63
  %14021 = trunc i64 %14020 to i8
  %14022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14021, i8* %14022, align 1
  %14023 = lshr i64 %13994, 63
  %14024 = lshr i64 %13995, 63
  %14025 = xor i64 %14020, %14023
  %14026 = xor i64 %14020, %14024
  %14027 = add i64 %14025, %14026
  %14028 = icmp eq i64 %14027, 2
  %14029 = zext i1 %14028 to i8
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14029, i8* %14030, align 1
  store %struct.Memory* %loadMem_4b1206, %struct.Memory** %MEMORY
  %loadMem_4b1209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14032 = getelementptr inbounds %struct.GPR, %struct.GPR* %14031, i32 0, i32 33
  %14033 = getelementptr inbounds %struct.Reg, %struct.Reg* %14032, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %14033 to i64*
  %14034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14035 = getelementptr inbounds %struct.GPR, %struct.GPR* %14034, i32 0, i32 9
  %14036 = getelementptr inbounds %struct.Reg, %struct.Reg* %14035, i32 0, i32 0
  %RSI.i706 = bitcast %union.anon* %14036 to i64*
  %14037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14038 = getelementptr inbounds %struct.GPR, %struct.GPR* %14037, i32 0, i32 15
  %14039 = getelementptr inbounds %struct.Reg, %struct.Reg* %14038, i32 0, i32 0
  %RBP.i707 = bitcast %union.anon* %14039 to i64*
  %14040 = load i64, i64* %RBP.i707
  %14041 = sub i64 %14040, 16
  %14042 = load i64, i64* %PC.i705
  %14043 = add i64 %14042, 4
  store i64 %14043, i64* %PC.i705
  %14044 = inttoptr i64 %14041 to i32*
  %14045 = load i32, i32* %14044
  %14046 = sext i32 %14045 to i64
  store i64 %14046, i64* %RSI.i706, align 8
  store %struct.Memory* %loadMem_4b1209, %struct.Memory** %MEMORY
  %loadMem_4b120d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14048 = getelementptr inbounds %struct.GPR, %struct.GPR* %14047, i32 0, i32 33
  %14049 = getelementptr inbounds %struct.Reg, %struct.Reg* %14048, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %14049 to i64*
  %14050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14051 = getelementptr inbounds %struct.GPR, %struct.GPR* %14050, i32 0, i32 9
  %14052 = getelementptr inbounds %struct.Reg, %struct.Reg* %14051, i32 0, i32 0
  %RSI.i704 = bitcast %union.anon* %14052 to i64*
  %14053 = load i64, i64* %RSI.i704
  %14054 = load i64, i64* %PC.i703
  %14055 = add i64 %14054, 4
  store i64 %14055, i64* %PC.i703
  %14056 = sext i64 %14053 to i128
  %14057 = and i128 %14056, -18446744073709551616
  %14058 = zext i64 %14053 to i128
  %14059 = or i128 %14057, %14058
  %14060 = mul i128 12, %14059
  %14061 = trunc i128 %14060 to i64
  store i64 %14061, i64* %RSI.i704, align 8
  %14062 = sext i64 %14061 to i128
  %14063 = icmp ne i128 %14062, %14060
  %14064 = zext i1 %14063 to i8
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14064, i8* %14065, align 1
  %14066 = trunc i128 %14060 to i32
  %14067 = and i32 %14066, 255
  %14068 = call i32 @llvm.ctpop.i32(i32 %14067)
  %14069 = trunc i32 %14068 to i8
  %14070 = and i8 %14069, 1
  %14071 = xor i8 %14070, 1
  %14072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14071, i8* %14072, align 1
  %14073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14073, align 1
  %14074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14074, align 1
  %14075 = lshr i64 %14061, 63
  %14076 = trunc i64 %14075 to i8
  %14077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14076, i8* %14077, align 1
  %14078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14064, i8* %14078, align 1
  store %struct.Memory* %loadMem_4b120d, %struct.Memory** %MEMORY
  %loadMem_4b1211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14080 = getelementptr inbounds %struct.GPR, %struct.GPR* %14079, i32 0, i32 33
  %14081 = getelementptr inbounds %struct.Reg, %struct.Reg* %14080, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %14081 to i64*
  %14082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14083 = getelementptr inbounds %struct.GPR, %struct.GPR* %14082, i32 0, i32 9
  %14084 = getelementptr inbounds %struct.Reg, %struct.Reg* %14083, i32 0, i32 0
  %RSI.i701 = bitcast %union.anon* %14084 to i64*
  %14085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14086 = getelementptr inbounds %struct.GPR, %struct.GPR* %14085, i32 0, i32 11
  %14087 = getelementptr inbounds %struct.Reg, %struct.Reg* %14086, i32 0, i32 0
  %RDI.i702 = bitcast %union.anon* %14087 to i64*
  %14088 = load i64, i64* %RDI.i702
  %14089 = load i64, i64* %RSI.i701
  %14090 = load i64, i64* %PC.i700
  %14091 = add i64 %14090, 3
  store i64 %14091, i64* %PC.i700
  %14092 = add i64 %14089, %14088
  store i64 %14092, i64* %RDI.i702, align 8
  %14093 = icmp ult i64 %14092, %14088
  %14094 = icmp ult i64 %14092, %14089
  %14095 = or i1 %14093, %14094
  %14096 = zext i1 %14095 to i8
  %14097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14096, i8* %14097, align 1
  %14098 = trunc i64 %14092 to i32
  %14099 = and i32 %14098, 255
  %14100 = call i32 @llvm.ctpop.i32(i32 %14099)
  %14101 = trunc i32 %14100 to i8
  %14102 = and i8 %14101, 1
  %14103 = xor i8 %14102, 1
  %14104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14103, i8* %14104, align 1
  %14105 = xor i64 %14089, %14088
  %14106 = xor i64 %14105, %14092
  %14107 = lshr i64 %14106, 4
  %14108 = trunc i64 %14107 to i8
  %14109 = and i8 %14108, 1
  %14110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14109, i8* %14110, align 1
  %14111 = icmp eq i64 %14092, 0
  %14112 = zext i1 %14111 to i8
  %14113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14112, i8* %14113, align 1
  %14114 = lshr i64 %14092, 63
  %14115 = trunc i64 %14114 to i8
  %14116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14115, i8* %14116, align 1
  %14117 = lshr i64 %14088, 63
  %14118 = lshr i64 %14089, 63
  %14119 = xor i64 %14114, %14117
  %14120 = xor i64 %14114, %14118
  %14121 = add i64 %14119, %14120
  %14122 = icmp eq i64 %14121, 2
  %14123 = zext i1 %14122 to i8
  %14124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14123, i8* %14124, align 1
  store %struct.Memory* %loadMem_4b1211, %struct.Memory** %MEMORY
  %loadMem_4b1214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14126 = getelementptr inbounds %struct.GPR, %struct.GPR* %14125, i32 0, i32 33
  %14127 = getelementptr inbounds %struct.Reg, %struct.Reg* %14126, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %14127 to i64*
  %14128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14129 = getelementptr inbounds %struct.GPR, %struct.GPR* %14128, i32 0, i32 7
  %14130 = getelementptr inbounds %struct.Reg, %struct.Reg* %14129, i32 0, i32 0
  %EDX.i698 = bitcast %union.anon* %14130 to i32*
  %14131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14132 = getelementptr inbounds %struct.GPR, %struct.GPR* %14131, i32 0, i32 11
  %14133 = getelementptr inbounds %struct.Reg, %struct.Reg* %14132, i32 0, i32 0
  %RDI.i699 = bitcast %union.anon* %14133 to i64*
  %14134 = load i64, i64* %RDI.i699
  %14135 = add i64 %14134, 4
  %14136 = load i32, i32* %EDX.i698
  %14137 = zext i32 %14136 to i64
  %14138 = load i64, i64* %PC.i697
  %14139 = add i64 %14138, 3
  store i64 %14139, i64* %PC.i697
  %14140 = inttoptr i64 %14135 to i32*
  store i32 %14136, i32* %14140
  store %struct.Memory* %loadMem_4b1214, %struct.Memory** %MEMORY
  %loadMem_4b1217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14142 = getelementptr inbounds %struct.GPR, %struct.GPR* %14141, i32 0, i32 33
  %14143 = getelementptr inbounds %struct.Reg, %struct.Reg* %14142, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %14143 to i64*
  %14144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14145 = getelementptr inbounds %struct.GPR, %struct.GPR* %14144, i32 0, i32 7
  %14146 = getelementptr inbounds %struct.Reg, %struct.Reg* %14145, i32 0, i32 0
  %RDX.i695 = bitcast %union.anon* %14146 to i64*
  %14147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14148 = getelementptr inbounds %struct.GPR, %struct.GPR* %14147, i32 0, i32 15
  %14149 = getelementptr inbounds %struct.Reg, %struct.Reg* %14148, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %14149 to i64*
  %14150 = load i64, i64* %RBP.i696
  %14151 = sub i64 %14150, 800
  %14152 = load i64, i64* %PC.i694
  %14153 = add i64 %14152, 6
  store i64 %14153, i64* %PC.i694
  %14154 = inttoptr i64 %14151 to i32*
  %14155 = load i32, i32* %14154
  %14156 = zext i32 %14155 to i64
  store i64 %14156, i64* %RDX.i695, align 8
  store %struct.Memory* %loadMem_4b1217, %struct.Memory** %MEMORY
  %loadMem_4b121d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14158 = getelementptr inbounds %struct.GPR, %struct.GPR* %14157, i32 0, i32 33
  %14159 = getelementptr inbounds %struct.Reg, %struct.Reg* %14158, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %14159 to i64*
  %14160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14161 = getelementptr inbounds %struct.GPR, %struct.GPR* %14160, i32 0, i32 9
  %14162 = getelementptr inbounds %struct.Reg, %struct.Reg* %14161, i32 0, i32 0
  %RSI.i692 = bitcast %union.anon* %14162 to i64*
  %14163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14164 = getelementptr inbounds %struct.GPR, %struct.GPR* %14163, i32 0, i32 15
  %14165 = getelementptr inbounds %struct.Reg, %struct.Reg* %14164, i32 0, i32 0
  %RBP.i693 = bitcast %union.anon* %14165 to i64*
  %14166 = load i64, i64* %RBP.i693
  %14167 = sub i64 %14166, 35396
  %14168 = load i64, i64* %PC.i691
  %14169 = add i64 %14168, 7
  store i64 %14169, i64* %PC.i691
  %14170 = inttoptr i64 %14167 to i32*
  %14171 = load i32, i32* %14170
  %14172 = sext i32 %14171 to i64
  store i64 %14172, i64* %RSI.i692, align 8
  store %struct.Memory* %loadMem_4b121d, %struct.Memory** %MEMORY
  %loadMem_4b1224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14174 = getelementptr inbounds %struct.GPR, %struct.GPR* %14173, i32 0, i32 33
  %14175 = getelementptr inbounds %struct.Reg, %struct.Reg* %14174, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %14175 to i64*
  %14176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14177 = getelementptr inbounds %struct.GPR, %struct.GPR* %14176, i32 0, i32 9
  %14178 = getelementptr inbounds %struct.Reg, %struct.Reg* %14177, i32 0, i32 0
  %RSI.i690 = bitcast %union.anon* %14178 to i64*
  %14179 = load i64, i64* %RSI.i690
  %14180 = load i64, i64* %PC.i689
  %14181 = add i64 %14180, 7
  store i64 %14181, i64* %PC.i689
  %14182 = sext i64 %14179 to i128
  %14183 = and i128 %14182, -18446744073709551616
  %14184 = zext i64 %14179 to i128
  %14185 = or i128 %14183, %14184
  %14186 = mul i128 180, %14185
  %14187 = trunc i128 %14186 to i64
  store i64 %14187, i64* %RSI.i690, align 8
  %14188 = sext i64 %14187 to i128
  %14189 = icmp ne i128 %14188, %14186
  %14190 = zext i1 %14189 to i8
  %14191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14190, i8* %14191, align 1
  %14192 = trunc i128 %14186 to i32
  %14193 = and i32 %14192, 255
  %14194 = call i32 @llvm.ctpop.i32(i32 %14193)
  %14195 = trunc i32 %14194 to i8
  %14196 = and i8 %14195, 1
  %14197 = xor i8 %14196, 1
  %14198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14197, i8* %14198, align 1
  %14199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14199, align 1
  %14200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14200, align 1
  %14201 = lshr i64 %14187, 63
  %14202 = trunc i64 %14201 to i8
  %14203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14202, i8* %14203, align 1
  %14204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14190, i8* %14204, align 1
  store %struct.Memory* %loadMem_4b1224, %struct.Memory** %MEMORY
  %loadMem_4b122b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14206 = getelementptr inbounds %struct.GPR, %struct.GPR* %14205, i32 0, i32 33
  %14207 = getelementptr inbounds %struct.Reg, %struct.Reg* %14206, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %14207 to i64*
  %14208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14209 = getelementptr inbounds %struct.GPR, %struct.GPR* %14208, i32 0, i32 5
  %14210 = getelementptr inbounds %struct.Reg, %struct.Reg* %14209, i32 0, i32 0
  %RCX.i687 = bitcast %union.anon* %14210 to i64*
  %14211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14212 = getelementptr inbounds %struct.GPR, %struct.GPR* %14211, i32 0, i32 9
  %14213 = getelementptr inbounds %struct.Reg, %struct.Reg* %14212, i32 0, i32 0
  %RSI.i688 = bitcast %union.anon* %14213 to i64*
  %14214 = load i64, i64* %RCX.i687
  %14215 = load i64, i64* %RSI.i688
  %14216 = load i64, i64* %PC.i686
  %14217 = add i64 %14216, 3
  store i64 %14217, i64* %PC.i686
  %14218 = add i64 %14215, %14214
  store i64 %14218, i64* %RCX.i687, align 8
  %14219 = icmp ult i64 %14218, %14214
  %14220 = icmp ult i64 %14218, %14215
  %14221 = or i1 %14219, %14220
  %14222 = zext i1 %14221 to i8
  %14223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14222, i8* %14223, align 1
  %14224 = trunc i64 %14218 to i32
  %14225 = and i32 %14224, 255
  %14226 = call i32 @llvm.ctpop.i32(i32 %14225)
  %14227 = trunc i32 %14226 to i8
  %14228 = and i8 %14227, 1
  %14229 = xor i8 %14228, 1
  %14230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14229, i8* %14230, align 1
  %14231 = xor i64 %14215, %14214
  %14232 = xor i64 %14231, %14218
  %14233 = lshr i64 %14232, 4
  %14234 = trunc i64 %14233 to i8
  %14235 = and i8 %14234, 1
  %14236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14235, i8* %14236, align 1
  %14237 = icmp eq i64 %14218, 0
  %14238 = zext i1 %14237 to i8
  %14239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14238, i8* %14239, align 1
  %14240 = lshr i64 %14218, 63
  %14241 = trunc i64 %14240 to i8
  %14242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14241, i8* %14242, align 1
  %14243 = lshr i64 %14214, 63
  %14244 = lshr i64 %14215, 63
  %14245 = xor i64 %14240, %14243
  %14246 = xor i64 %14240, %14244
  %14247 = add i64 %14245, %14246
  %14248 = icmp eq i64 %14247, 2
  %14249 = zext i1 %14248 to i8
  %14250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14249, i8* %14250, align 1
  store %struct.Memory* %loadMem_4b122b, %struct.Memory** %MEMORY
  %loadMem_4b122e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14252 = getelementptr inbounds %struct.GPR, %struct.GPR* %14251, i32 0, i32 33
  %14253 = getelementptr inbounds %struct.Reg, %struct.Reg* %14252, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %14253 to i64*
  %14254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14255 = getelementptr inbounds %struct.GPR, %struct.GPR* %14254, i32 0, i32 9
  %14256 = getelementptr inbounds %struct.Reg, %struct.Reg* %14255, i32 0, i32 0
  %RSI.i684 = bitcast %union.anon* %14256 to i64*
  %14257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14258 = getelementptr inbounds %struct.GPR, %struct.GPR* %14257, i32 0, i32 15
  %14259 = getelementptr inbounds %struct.Reg, %struct.Reg* %14258, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %14259 to i64*
  %14260 = load i64, i64* %RBP.i685
  %14261 = sub i64 %14260, 16
  %14262 = load i64, i64* %PC.i683
  %14263 = add i64 %14262, 4
  store i64 %14263, i64* %PC.i683
  %14264 = inttoptr i64 %14261 to i32*
  %14265 = load i32, i32* %14264
  %14266 = sext i32 %14265 to i64
  store i64 %14266, i64* %RSI.i684, align 8
  store %struct.Memory* %loadMem_4b122e, %struct.Memory** %MEMORY
  %loadMem_4b1232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14268 = getelementptr inbounds %struct.GPR, %struct.GPR* %14267, i32 0, i32 33
  %14269 = getelementptr inbounds %struct.Reg, %struct.Reg* %14268, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %14269 to i64*
  %14270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14271 = getelementptr inbounds %struct.GPR, %struct.GPR* %14270, i32 0, i32 9
  %14272 = getelementptr inbounds %struct.Reg, %struct.Reg* %14271, i32 0, i32 0
  %RSI.i682 = bitcast %union.anon* %14272 to i64*
  %14273 = load i64, i64* %RSI.i682
  %14274 = load i64, i64* %PC.i681
  %14275 = add i64 %14274, 4
  store i64 %14275, i64* %PC.i681
  %14276 = sext i64 %14273 to i128
  %14277 = and i128 %14276, -18446744073709551616
  %14278 = zext i64 %14273 to i128
  %14279 = or i128 %14277, %14278
  %14280 = mul i128 12, %14279
  %14281 = trunc i128 %14280 to i64
  store i64 %14281, i64* %RSI.i682, align 8
  %14282 = sext i64 %14281 to i128
  %14283 = icmp ne i128 %14282, %14280
  %14284 = zext i1 %14283 to i8
  %14285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14284, i8* %14285, align 1
  %14286 = trunc i128 %14280 to i32
  %14287 = and i32 %14286, 255
  %14288 = call i32 @llvm.ctpop.i32(i32 %14287)
  %14289 = trunc i32 %14288 to i8
  %14290 = and i8 %14289, 1
  %14291 = xor i8 %14290, 1
  %14292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14291, i8* %14292, align 1
  %14293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14293, align 1
  %14294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14294, align 1
  %14295 = lshr i64 %14281, 63
  %14296 = trunc i64 %14295 to i8
  %14297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14296, i8* %14297, align 1
  %14298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14284, i8* %14298, align 1
  store %struct.Memory* %loadMem_4b1232, %struct.Memory** %MEMORY
  %loadMem_4b1236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14300 = getelementptr inbounds %struct.GPR, %struct.GPR* %14299, i32 0, i32 33
  %14301 = getelementptr inbounds %struct.Reg, %struct.Reg* %14300, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %14301 to i64*
  %14302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14303 = getelementptr inbounds %struct.GPR, %struct.GPR* %14302, i32 0, i32 5
  %14304 = getelementptr inbounds %struct.Reg, %struct.Reg* %14303, i32 0, i32 0
  %RCX.i679 = bitcast %union.anon* %14304 to i64*
  %14305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14306 = getelementptr inbounds %struct.GPR, %struct.GPR* %14305, i32 0, i32 9
  %14307 = getelementptr inbounds %struct.Reg, %struct.Reg* %14306, i32 0, i32 0
  %RSI.i680 = bitcast %union.anon* %14307 to i64*
  %14308 = load i64, i64* %RCX.i679
  %14309 = load i64, i64* %RSI.i680
  %14310 = load i64, i64* %PC.i678
  %14311 = add i64 %14310, 3
  store i64 %14311, i64* %PC.i678
  %14312 = add i64 %14309, %14308
  store i64 %14312, i64* %RCX.i679, align 8
  %14313 = icmp ult i64 %14312, %14308
  %14314 = icmp ult i64 %14312, %14309
  %14315 = or i1 %14313, %14314
  %14316 = zext i1 %14315 to i8
  %14317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14316, i8* %14317, align 1
  %14318 = trunc i64 %14312 to i32
  %14319 = and i32 %14318, 255
  %14320 = call i32 @llvm.ctpop.i32(i32 %14319)
  %14321 = trunc i32 %14320 to i8
  %14322 = and i8 %14321, 1
  %14323 = xor i8 %14322, 1
  %14324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14323, i8* %14324, align 1
  %14325 = xor i64 %14309, %14308
  %14326 = xor i64 %14325, %14312
  %14327 = lshr i64 %14326, 4
  %14328 = trunc i64 %14327 to i8
  %14329 = and i8 %14328, 1
  %14330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14329, i8* %14330, align 1
  %14331 = icmp eq i64 %14312, 0
  %14332 = zext i1 %14331 to i8
  %14333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14332, i8* %14333, align 1
  %14334 = lshr i64 %14312, 63
  %14335 = trunc i64 %14334 to i8
  %14336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14335, i8* %14336, align 1
  %14337 = lshr i64 %14308, 63
  %14338 = lshr i64 %14309, 63
  %14339 = xor i64 %14334, %14337
  %14340 = xor i64 %14334, %14338
  %14341 = add i64 %14339, %14340
  %14342 = icmp eq i64 %14341, 2
  %14343 = zext i1 %14342 to i8
  %14344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14343, i8* %14344, align 1
  store %struct.Memory* %loadMem_4b1236, %struct.Memory** %MEMORY
  %loadMem_4b1239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14346 = getelementptr inbounds %struct.GPR, %struct.GPR* %14345, i32 0, i32 33
  %14347 = getelementptr inbounds %struct.Reg, %struct.Reg* %14346, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %14347 to i64*
  %14348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14349 = getelementptr inbounds %struct.GPR, %struct.GPR* %14348, i32 0, i32 7
  %14350 = getelementptr inbounds %struct.Reg, %struct.Reg* %14349, i32 0, i32 0
  %EDX.i676 = bitcast %union.anon* %14350 to i32*
  %14351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14352 = getelementptr inbounds %struct.GPR, %struct.GPR* %14351, i32 0, i32 5
  %14353 = getelementptr inbounds %struct.Reg, %struct.Reg* %14352, i32 0, i32 0
  %RCX.i677 = bitcast %union.anon* %14353 to i64*
  %14354 = load i64, i64* %RCX.i677
  %14355 = add i64 %14354, 8
  %14356 = load i32, i32* %EDX.i676
  %14357 = zext i32 %14356 to i64
  %14358 = load i64, i64* %PC.i675
  %14359 = add i64 %14358, 3
  store i64 %14359, i64* %PC.i675
  %14360 = inttoptr i64 %14355 to i32*
  store i32 %14356, i32* %14360
  store %struct.Memory* %loadMem_4b1239, %struct.Memory** %MEMORY
  %loadMem_4b123c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14362 = getelementptr inbounds %struct.GPR, %struct.GPR* %14361, i32 0, i32 33
  %14363 = getelementptr inbounds %struct.Reg, %struct.Reg* %14362, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %14363 to i64*
  %14364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14365 = getelementptr inbounds %struct.GPR, %struct.GPR* %14364, i32 0, i32 5
  %14366 = getelementptr inbounds %struct.Reg, %struct.Reg* %14365, i32 0, i32 0
  %RCX.i673 = bitcast %union.anon* %14366 to i64*
  %14367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14368 = getelementptr inbounds %struct.GPR, %struct.GPR* %14367, i32 0, i32 15
  %14369 = getelementptr inbounds %struct.Reg, %struct.Reg* %14368, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %14369 to i64*
  %14370 = load i64, i64* %RBP.i674
  %14371 = sub i64 %14370, 35396
  %14372 = load i64, i64* %PC.i672
  %14373 = add i64 %14372, 7
  store i64 %14373, i64* %PC.i672
  %14374 = inttoptr i64 %14371 to i32*
  %14375 = load i32, i32* %14374
  %14376 = sext i32 %14375 to i64
  store i64 %14376, i64* %RCX.i673, align 8
  store %struct.Memory* %loadMem_4b123c, %struct.Memory** %MEMORY
  %loadMem_4b1243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14378 = getelementptr inbounds %struct.GPR, %struct.GPR* %14377, i32 0, i32 33
  %14379 = getelementptr inbounds %struct.Reg, %struct.Reg* %14378, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %14379 to i64*
  %14380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14381 = getelementptr inbounds %struct.GPR, %struct.GPR* %14380, i32 0, i32 5
  %14382 = getelementptr inbounds %struct.Reg, %struct.Reg* %14381, i32 0, i32 0
  %RCX.i671 = bitcast %union.anon* %14382 to i64*
  %14383 = load i64, i64* %RCX.i671
  %14384 = load i64, i64* %PC.i670
  %14385 = add i64 %14384, 7
  store i64 %14385, i64* %PC.i670
  %14386 = sext i64 %14383 to i128
  %14387 = and i128 %14386, -18446744073709551616
  %14388 = zext i64 %14383 to i128
  %14389 = or i128 %14387, %14388
  %14390 = mul i128 180, %14389
  %14391 = trunc i128 %14390 to i64
  store i64 %14391, i64* %RCX.i671, align 8
  %14392 = sext i64 %14391 to i128
  %14393 = icmp ne i128 %14392, %14390
  %14394 = zext i1 %14393 to i8
  %14395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14394, i8* %14395, align 1
  %14396 = trunc i128 %14390 to i32
  %14397 = and i32 %14396, 255
  %14398 = call i32 @llvm.ctpop.i32(i32 %14397)
  %14399 = trunc i32 %14398 to i8
  %14400 = and i8 %14399, 1
  %14401 = xor i8 %14400, 1
  %14402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14401, i8* %14402, align 1
  %14403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14403, align 1
  %14404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14404, align 1
  %14405 = lshr i64 %14391, 63
  %14406 = trunc i64 %14405 to i8
  %14407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14406, i8* %14407, align 1
  %14408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14394, i8* %14408, align 1
  store %struct.Memory* %loadMem_4b1243, %struct.Memory** %MEMORY
  %loadMem_4b124a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14410 = getelementptr inbounds %struct.GPR, %struct.GPR* %14409, i32 0, i32 33
  %14411 = getelementptr inbounds %struct.Reg, %struct.Reg* %14410, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %14411 to i64*
  %14412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14413 = getelementptr inbounds %struct.GPR, %struct.GPR* %14412, i32 0, i32 1
  %14414 = getelementptr inbounds %struct.Reg, %struct.Reg* %14413, i32 0, i32 0
  %RAX.i668 = bitcast %union.anon* %14414 to i64*
  %14415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14416 = getelementptr inbounds %struct.GPR, %struct.GPR* %14415, i32 0, i32 9
  %14417 = getelementptr inbounds %struct.Reg, %struct.Reg* %14416, i32 0, i32 0
  %RSI.i669 = bitcast %union.anon* %14417 to i64*
  %14418 = load i64, i64* %RAX.i668
  %14419 = load i64, i64* %PC.i667
  %14420 = add i64 %14419, 3
  store i64 %14420, i64* %PC.i667
  store i64 %14418, i64* %RSI.i669, align 8
  store %struct.Memory* %loadMem_4b124a, %struct.Memory** %MEMORY
  %loadMem_4b124d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14422 = getelementptr inbounds %struct.GPR, %struct.GPR* %14421, i32 0, i32 33
  %14423 = getelementptr inbounds %struct.Reg, %struct.Reg* %14422, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %14423 to i64*
  %14424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14425 = getelementptr inbounds %struct.GPR, %struct.GPR* %14424, i32 0, i32 5
  %14426 = getelementptr inbounds %struct.Reg, %struct.Reg* %14425, i32 0, i32 0
  %RCX.i665 = bitcast %union.anon* %14426 to i64*
  %14427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14428 = getelementptr inbounds %struct.GPR, %struct.GPR* %14427, i32 0, i32 9
  %14429 = getelementptr inbounds %struct.Reg, %struct.Reg* %14428, i32 0, i32 0
  %RSI.i666 = bitcast %union.anon* %14429 to i64*
  %14430 = load i64, i64* %RSI.i666
  %14431 = load i64, i64* %RCX.i665
  %14432 = load i64, i64* %PC.i664
  %14433 = add i64 %14432, 3
  store i64 %14433, i64* %PC.i664
  %14434 = add i64 %14431, %14430
  store i64 %14434, i64* %RSI.i666, align 8
  %14435 = icmp ult i64 %14434, %14430
  %14436 = icmp ult i64 %14434, %14431
  %14437 = or i1 %14435, %14436
  %14438 = zext i1 %14437 to i8
  %14439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14438, i8* %14439, align 1
  %14440 = trunc i64 %14434 to i32
  %14441 = and i32 %14440, 255
  %14442 = call i32 @llvm.ctpop.i32(i32 %14441)
  %14443 = trunc i32 %14442 to i8
  %14444 = and i8 %14443, 1
  %14445 = xor i8 %14444, 1
  %14446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14445, i8* %14446, align 1
  %14447 = xor i64 %14431, %14430
  %14448 = xor i64 %14447, %14434
  %14449 = lshr i64 %14448, 4
  %14450 = trunc i64 %14449 to i8
  %14451 = and i8 %14450, 1
  %14452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14451, i8* %14452, align 1
  %14453 = icmp eq i64 %14434, 0
  %14454 = zext i1 %14453 to i8
  %14455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14454, i8* %14455, align 1
  %14456 = lshr i64 %14434, 63
  %14457 = trunc i64 %14456 to i8
  %14458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14457, i8* %14458, align 1
  %14459 = lshr i64 %14430, 63
  %14460 = lshr i64 %14431, 63
  %14461 = xor i64 %14456, %14459
  %14462 = xor i64 %14456, %14460
  %14463 = add i64 %14461, %14462
  %14464 = icmp eq i64 %14463, 2
  %14465 = zext i1 %14464 to i8
  %14466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14465, i8* %14466, align 1
  store %struct.Memory* %loadMem_4b124d, %struct.Memory** %MEMORY
  %loadMem_4b1250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14468 = getelementptr inbounds %struct.GPR, %struct.GPR* %14467, i32 0, i32 33
  %14469 = getelementptr inbounds %struct.Reg, %struct.Reg* %14468, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %14469 to i64*
  %14470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14471 = getelementptr inbounds %struct.GPR, %struct.GPR* %14470, i32 0, i32 5
  %14472 = getelementptr inbounds %struct.Reg, %struct.Reg* %14471, i32 0, i32 0
  %RCX.i662 = bitcast %union.anon* %14472 to i64*
  %14473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14474 = getelementptr inbounds %struct.GPR, %struct.GPR* %14473, i32 0, i32 15
  %14475 = getelementptr inbounds %struct.Reg, %struct.Reg* %14474, i32 0, i32 0
  %RBP.i663 = bitcast %union.anon* %14475 to i64*
  %14476 = load i64, i64* %RBP.i663
  %14477 = sub i64 %14476, 16
  %14478 = load i64, i64* %PC.i661
  %14479 = add i64 %14478, 4
  store i64 %14479, i64* %PC.i661
  %14480 = inttoptr i64 %14477 to i32*
  %14481 = load i32, i32* %14480
  %14482 = sext i32 %14481 to i64
  store i64 %14482, i64* %RCX.i662, align 8
  store %struct.Memory* %loadMem_4b1250, %struct.Memory** %MEMORY
  %loadMem_4b1254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14484 = getelementptr inbounds %struct.GPR, %struct.GPR* %14483, i32 0, i32 33
  %14485 = getelementptr inbounds %struct.Reg, %struct.Reg* %14484, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %14485 to i64*
  %14486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14487 = getelementptr inbounds %struct.GPR, %struct.GPR* %14486, i32 0, i32 5
  %14488 = getelementptr inbounds %struct.Reg, %struct.Reg* %14487, i32 0, i32 0
  %RCX.i660 = bitcast %union.anon* %14488 to i64*
  %14489 = load i64, i64* %RCX.i660
  %14490 = load i64, i64* %PC.i659
  %14491 = add i64 %14490, 4
  store i64 %14491, i64* %PC.i659
  %14492 = sext i64 %14489 to i128
  %14493 = and i128 %14492, -18446744073709551616
  %14494 = zext i64 %14489 to i128
  %14495 = or i128 %14493, %14494
  %14496 = mul i128 12, %14495
  %14497 = trunc i128 %14496 to i64
  store i64 %14497, i64* %RCX.i660, align 8
  %14498 = sext i64 %14497 to i128
  %14499 = icmp ne i128 %14498, %14496
  %14500 = zext i1 %14499 to i8
  %14501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14500, i8* %14501, align 1
  %14502 = trunc i128 %14496 to i32
  %14503 = and i32 %14502, 255
  %14504 = call i32 @llvm.ctpop.i32(i32 %14503)
  %14505 = trunc i32 %14504 to i8
  %14506 = and i8 %14505, 1
  %14507 = xor i8 %14506, 1
  %14508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14507, i8* %14508, align 1
  %14509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14509, align 1
  %14510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14510, align 1
  %14511 = lshr i64 %14497, 63
  %14512 = trunc i64 %14511 to i8
  %14513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14512, i8* %14513, align 1
  %14514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14500, i8* %14514, align 1
  store %struct.Memory* %loadMem_4b1254, %struct.Memory** %MEMORY
  %loadMem_4b1258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14516 = getelementptr inbounds %struct.GPR, %struct.GPR* %14515, i32 0, i32 33
  %14517 = getelementptr inbounds %struct.Reg, %struct.Reg* %14516, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %14517 to i64*
  %14518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14519 = getelementptr inbounds %struct.GPR, %struct.GPR* %14518, i32 0, i32 5
  %14520 = getelementptr inbounds %struct.Reg, %struct.Reg* %14519, i32 0, i32 0
  %RCX.i657 = bitcast %union.anon* %14520 to i64*
  %14521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14522 = getelementptr inbounds %struct.GPR, %struct.GPR* %14521, i32 0, i32 9
  %14523 = getelementptr inbounds %struct.Reg, %struct.Reg* %14522, i32 0, i32 0
  %RSI.i658 = bitcast %union.anon* %14523 to i64*
  %14524 = load i64, i64* %RSI.i658
  %14525 = load i64, i64* %RCX.i657
  %14526 = load i64, i64* %PC.i656
  %14527 = add i64 %14526, 3
  store i64 %14527, i64* %PC.i656
  %14528 = add i64 %14525, %14524
  store i64 %14528, i64* %RSI.i658, align 8
  %14529 = icmp ult i64 %14528, %14524
  %14530 = icmp ult i64 %14528, %14525
  %14531 = or i1 %14529, %14530
  %14532 = zext i1 %14531 to i8
  %14533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14532, i8* %14533, align 1
  %14534 = trunc i64 %14528 to i32
  %14535 = and i32 %14534, 255
  %14536 = call i32 @llvm.ctpop.i32(i32 %14535)
  %14537 = trunc i32 %14536 to i8
  %14538 = and i8 %14537, 1
  %14539 = xor i8 %14538, 1
  %14540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14539, i8* %14540, align 1
  %14541 = xor i64 %14525, %14524
  %14542 = xor i64 %14541, %14528
  %14543 = lshr i64 %14542, 4
  %14544 = trunc i64 %14543 to i8
  %14545 = and i8 %14544, 1
  %14546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14545, i8* %14546, align 1
  %14547 = icmp eq i64 %14528, 0
  %14548 = zext i1 %14547 to i8
  %14549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14548, i8* %14549, align 1
  %14550 = lshr i64 %14528, 63
  %14551 = trunc i64 %14550 to i8
  %14552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14551, i8* %14552, align 1
  %14553 = lshr i64 %14524, 63
  %14554 = lshr i64 %14525, 63
  %14555 = xor i64 %14550, %14553
  %14556 = xor i64 %14550, %14554
  %14557 = add i64 %14555, %14556
  %14558 = icmp eq i64 %14557, 2
  %14559 = zext i1 %14558 to i8
  %14560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14559, i8* %14560, align 1
  store %struct.Memory* %loadMem_4b1258, %struct.Memory** %MEMORY
  %loadMem_4b125b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14562 = getelementptr inbounds %struct.GPR, %struct.GPR* %14561, i32 0, i32 33
  %14563 = getelementptr inbounds %struct.Reg, %struct.Reg* %14562, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %14563 to i64*
  %14564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14565 = getelementptr inbounds %struct.GPR, %struct.GPR* %14564, i32 0, i32 9
  %14566 = getelementptr inbounds %struct.Reg, %struct.Reg* %14565, i32 0, i32 0
  %RSI.i655 = bitcast %union.anon* %14566 to i64*
  %14567 = load i64, i64* %RSI.i655
  %14568 = load i64, i64* %PC.i654
  %14569 = add i64 %14568, 6
  store i64 %14569, i64* %PC.i654
  %14570 = inttoptr i64 %14567 to i32*
  store i32 0, i32* %14570
  store %struct.Memory* %loadMem_4b125b, %struct.Memory** %MEMORY
  %loadMem_4b1261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14572 = getelementptr inbounds %struct.GPR, %struct.GPR* %14571, i32 0, i32 33
  %14573 = getelementptr inbounds %struct.Reg, %struct.Reg* %14572, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %14573 to i64*
  %14574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14575 = getelementptr inbounds %struct.GPR, %struct.GPR* %14574, i32 0, i32 5
  %14576 = getelementptr inbounds %struct.Reg, %struct.Reg* %14575, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %14576 to i64*
  %14577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14578 = getelementptr inbounds %struct.GPR, %struct.GPR* %14577, i32 0, i32 15
  %14579 = getelementptr inbounds %struct.Reg, %struct.Reg* %14578, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %14579 to i64*
  %14580 = load i64, i64* %RBP.i653
  %14581 = sub i64 %14580, 35396
  %14582 = load i64, i64* %PC.i651
  %14583 = add i64 %14582, 7
  store i64 %14583, i64* %PC.i651
  %14584 = inttoptr i64 %14581 to i32*
  %14585 = load i32, i32* %14584
  %14586 = sext i32 %14585 to i64
  store i64 %14586, i64* %RCX.i652, align 8
  store %struct.Memory* %loadMem_4b1261, %struct.Memory** %MEMORY
  %loadMem_4b1268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14588 = getelementptr inbounds %struct.GPR, %struct.GPR* %14587, i32 0, i32 33
  %14589 = getelementptr inbounds %struct.Reg, %struct.Reg* %14588, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %14589 to i64*
  %14590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14591 = getelementptr inbounds %struct.GPR, %struct.GPR* %14590, i32 0, i32 5
  %14592 = getelementptr inbounds %struct.Reg, %struct.Reg* %14591, i32 0, i32 0
  %RCX.i650 = bitcast %union.anon* %14592 to i64*
  %14593 = load i64, i64* %RCX.i650
  %14594 = load i64, i64* %PC.i649
  %14595 = add i64 %14594, 7
  store i64 %14595, i64* %PC.i649
  %14596 = sext i64 %14593 to i128
  %14597 = and i128 %14596, -18446744073709551616
  %14598 = zext i64 %14593 to i128
  %14599 = or i128 %14597, %14598
  %14600 = mul i128 180, %14599
  %14601 = trunc i128 %14600 to i64
  store i64 %14601, i64* %RCX.i650, align 8
  %14602 = sext i64 %14601 to i128
  %14603 = icmp ne i128 %14602, %14600
  %14604 = zext i1 %14603 to i8
  %14605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14604, i8* %14605, align 1
  %14606 = trunc i128 %14600 to i32
  %14607 = and i32 %14606, 255
  %14608 = call i32 @llvm.ctpop.i32(i32 %14607)
  %14609 = trunc i32 %14608 to i8
  %14610 = and i8 %14609, 1
  %14611 = xor i8 %14610, 1
  %14612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14611, i8* %14612, align 1
  %14613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14613, align 1
  %14614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14614, align 1
  %14615 = lshr i64 %14601, 63
  %14616 = trunc i64 %14615 to i8
  %14617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14616, i8* %14617, align 1
  %14618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14604, i8* %14618, align 1
  store %struct.Memory* %loadMem_4b1268, %struct.Memory** %MEMORY
  %loadMem_4b126f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14620 = getelementptr inbounds %struct.GPR, %struct.GPR* %14619, i32 0, i32 33
  %14621 = getelementptr inbounds %struct.Reg, %struct.Reg* %14620, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %14621 to i64*
  %14622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14623 = getelementptr inbounds %struct.GPR, %struct.GPR* %14622, i32 0, i32 1
  %14624 = getelementptr inbounds %struct.Reg, %struct.Reg* %14623, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %14624 to i64*
  %14625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14626 = getelementptr inbounds %struct.GPR, %struct.GPR* %14625, i32 0, i32 9
  %14627 = getelementptr inbounds %struct.Reg, %struct.Reg* %14626, i32 0, i32 0
  %RSI.i648 = bitcast %union.anon* %14627 to i64*
  %14628 = load i64, i64* %RAX.i647
  %14629 = load i64, i64* %PC.i646
  %14630 = add i64 %14629, 3
  store i64 %14630, i64* %PC.i646
  store i64 %14628, i64* %RSI.i648, align 8
  store %struct.Memory* %loadMem_4b126f, %struct.Memory** %MEMORY
  %loadMem_4b1272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14632 = getelementptr inbounds %struct.GPR, %struct.GPR* %14631, i32 0, i32 33
  %14633 = getelementptr inbounds %struct.Reg, %struct.Reg* %14632, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %14633 to i64*
  %14634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14635 = getelementptr inbounds %struct.GPR, %struct.GPR* %14634, i32 0, i32 5
  %14636 = getelementptr inbounds %struct.Reg, %struct.Reg* %14635, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %14636 to i64*
  %14637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14638 = getelementptr inbounds %struct.GPR, %struct.GPR* %14637, i32 0, i32 9
  %14639 = getelementptr inbounds %struct.Reg, %struct.Reg* %14638, i32 0, i32 0
  %RSI.i645 = bitcast %union.anon* %14639 to i64*
  %14640 = load i64, i64* %RSI.i645
  %14641 = load i64, i64* %RCX.i644
  %14642 = load i64, i64* %PC.i643
  %14643 = add i64 %14642, 3
  store i64 %14643, i64* %PC.i643
  %14644 = add i64 %14641, %14640
  store i64 %14644, i64* %RSI.i645, align 8
  %14645 = icmp ult i64 %14644, %14640
  %14646 = icmp ult i64 %14644, %14641
  %14647 = or i1 %14645, %14646
  %14648 = zext i1 %14647 to i8
  %14649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14648, i8* %14649, align 1
  %14650 = trunc i64 %14644 to i32
  %14651 = and i32 %14650, 255
  %14652 = call i32 @llvm.ctpop.i32(i32 %14651)
  %14653 = trunc i32 %14652 to i8
  %14654 = and i8 %14653, 1
  %14655 = xor i8 %14654, 1
  %14656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14655, i8* %14656, align 1
  %14657 = xor i64 %14641, %14640
  %14658 = xor i64 %14657, %14644
  %14659 = lshr i64 %14658, 4
  %14660 = trunc i64 %14659 to i8
  %14661 = and i8 %14660, 1
  %14662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14661, i8* %14662, align 1
  %14663 = icmp eq i64 %14644, 0
  %14664 = zext i1 %14663 to i8
  %14665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14664, i8* %14665, align 1
  %14666 = lshr i64 %14644, 63
  %14667 = trunc i64 %14666 to i8
  %14668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14667, i8* %14668, align 1
  %14669 = lshr i64 %14640, 63
  %14670 = lshr i64 %14641, 63
  %14671 = xor i64 %14666, %14669
  %14672 = xor i64 %14666, %14670
  %14673 = add i64 %14671, %14672
  %14674 = icmp eq i64 %14673, 2
  %14675 = zext i1 %14674 to i8
  %14676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14675, i8* %14676, align 1
  store %struct.Memory* %loadMem_4b1272, %struct.Memory** %MEMORY
  %loadMem_4b1275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14678 = getelementptr inbounds %struct.GPR, %struct.GPR* %14677, i32 0, i32 33
  %14679 = getelementptr inbounds %struct.Reg, %struct.Reg* %14678, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %14679 to i64*
  %14680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14681 = getelementptr inbounds %struct.GPR, %struct.GPR* %14680, i32 0, i32 5
  %14682 = getelementptr inbounds %struct.Reg, %struct.Reg* %14681, i32 0, i32 0
  %RCX.i641 = bitcast %union.anon* %14682 to i64*
  %14683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14684 = getelementptr inbounds %struct.GPR, %struct.GPR* %14683, i32 0, i32 15
  %14685 = getelementptr inbounds %struct.Reg, %struct.Reg* %14684, i32 0, i32 0
  %RBP.i642 = bitcast %union.anon* %14685 to i64*
  %14686 = load i64, i64* %RBP.i642
  %14687 = sub i64 %14686, 16
  %14688 = load i64, i64* %PC.i640
  %14689 = add i64 %14688, 4
  store i64 %14689, i64* %PC.i640
  %14690 = inttoptr i64 %14687 to i32*
  %14691 = load i32, i32* %14690
  %14692 = sext i32 %14691 to i64
  store i64 %14692, i64* %RCX.i641, align 8
  store %struct.Memory* %loadMem_4b1275, %struct.Memory** %MEMORY
  %loadMem_4b1279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14694 = getelementptr inbounds %struct.GPR, %struct.GPR* %14693, i32 0, i32 33
  %14695 = getelementptr inbounds %struct.Reg, %struct.Reg* %14694, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %14695 to i64*
  %14696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14697 = getelementptr inbounds %struct.GPR, %struct.GPR* %14696, i32 0, i32 5
  %14698 = getelementptr inbounds %struct.Reg, %struct.Reg* %14697, i32 0, i32 0
  %RCX.i639 = bitcast %union.anon* %14698 to i64*
  %14699 = load i64, i64* %RCX.i639
  %14700 = load i64, i64* %PC.i638
  %14701 = add i64 %14700, 4
  store i64 %14701, i64* %PC.i638
  %14702 = sext i64 %14699 to i128
  %14703 = and i128 %14702, -18446744073709551616
  %14704 = zext i64 %14699 to i128
  %14705 = or i128 %14703, %14704
  %14706 = mul i128 12, %14705
  %14707 = trunc i128 %14706 to i64
  store i64 %14707, i64* %RCX.i639, align 8
  %14708 = sext i64 %14707 to i128
  %14709 = icmp ne i128 %14708, %14706
  %14710 = zext i1 %14709 to i8
  %14711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14710, i8* %14711, align 1
  %14712 = trunc i128 %14706 to i32
  %14713 = and i32 %14712, 255
  %14714 = call i32 @llvm.ctpop.i32(i32 %14713)
  %14715 = trunc i32 %14714 to i8
  %14716 = and i8 %14715, 1
  %14717 = xor i8 %14716, 1
  %14718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14717, i8* %14718, align 1
  %14719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14719, align 1
  %14720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14720, align 1
  %14721 = lshr i64 %14707, 63
  %14722 = trunc i64 %14721 to i8
  %14723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14722, i8* %14723, align 1
  %14724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14710, i8* %14724, align 1
  store %struct.Memory* %loadMem_4b1279, %struct.Memory** %MEMORY
  %loadMem_4b127d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14726 = getelementptr inbounds %struct.GPR, %struct.GPR* %14725, i32 0, i32 33
  %14727 = getelementptr inbounds %struct.Reg, %struct.Reg* %14726, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %14727 to i64*
  %14728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14729 = getelementptr inbounds %struct.GPR, %struct.GPR* %14728, i32 0, i32 5
  %14730 = getelementptr inbounds %struct.Reg, %struct.Reg* %14729, i32 0, i32 0
  %RCX.i636 = bitcast %union.anon* %14730 to i64*
  %14731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14732 = getelementptr inbounds %struct.GPR, %struct.GPR* %14731, i32 0, i32 9
  %14733 = getelementptr inbounds %struct.Reg, %struct.Reg* %14732, i32 0, i32 0
  %RSI.i637 = bitcast %union.anon* %14733 to i64*
  %14734 = load i64, i64* %RSI.i637
  %14735 = load i64, i64* %RCX.i636
  %14736 = load i64, i64* %PC.i635
  %14737 = add i64 %14736, 3
  store i64 %14737, i64* %PC.i635
  %14738 = add i64 %14735, %14734
  store i64 %14738, i64* %RSI.i637, align 8
  %14739 = icmp ult i64 %14738, %14734
  %14740 = icmp ult i64 %14738, %14735
  %14741 = or i1 %14739, %14740
  %14742 = zext i1 %14741 to i8
  %14743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14742, i8* %14743, align 1
  %14744 = trunc i64 %14738 to i32
  %14745 = and i32 %14744, 255
  %14746 = call i32 @llvm.ctpop.i32(i32 %14745)
  %14747 = trunc i32 %14746 to i8
  %14748 = and i8 %14747, 1
  %14749 = xor i8 %14748, 1
  %14750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14749, i8* %14750, align 1
  %14751 = xor i64 %14735, %14734
  %14752 = xor i64 %14751, %14738
  %14753 = lshr i64 %14752, 4
  %14754 = trunc i64 %14753 to i8
  %14755 = and i8 %14754, 1
  %14756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14755, i8* %14756, align 1
  %14757 = icmp eq i64 %14738, 0
  %14758 = zext i1 %14757 to i8
  %14759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14758, i8* %14759, align 1
  %14760 = lshr i64 %14738, 63
  %14761 = trunc i64 %14760 to i8
  %14762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14761, i8* %14762, align 1
  %14763 = lshr i64 %14734, 63
  %14764 = lshr i64 %14735, 63
  %14765 = xor i64 %14760, %14763
  %14766 = xor i64 %14760, %14764
  %14767 = add i64 %14765, %14766
  %14768 = icmp eq i64 %14767, 2
  %14769 = zext i1 %14768 to i8
  %14770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14769, i8* %14770, align 1
  store %struct.Memory* %loadMem_4b127d, %struct.Memory** %MEMORY
  %loadMem_4b1280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14772 = getelementptr inbounds %struct.GPR, %struct.GPR* %14771, i32 0, i32 33
  %14773 = getelementptr inbounds %struct.Reg, %struct.Reg* %14772, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %14773 to i64*
  %14774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14775 = getelementptr inbounds %struct.GPR, %struct.GPR* %14774, i32 0, i32 9
  %14776 = getelementptr inbounds %struct.Reg, %struct.Reg* %14775, i32 0, i32 0
  %RSI.i634 = bitcast %union.anon* %14776 to i64*
  %14777 = load i64, i64* %RSI.i634
  %14778 = add i64 %14777, 4
  %14779 = load i64, i64* %PC.i633
  %14780 = add i64 %14779, 7
  store i64 %14780, i64* %PC.i633
  %14781 = inttoptr i64 %14778 to i32*
  store i32 0, i32* %14781
  store %struct.Memory* %loadMem_4b1280, %struct.Memory** %MEMORY
  %loadMem_4b1287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14783 = getelementptr inbounds %struct.GPR, %struct.GPR* %14782, i32 0, i32 33
  %14784 = getelementptr inbounds %struct.Reg, %struct.Reg* %14783, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %14784 to i64*
  %14785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14786 = getelementptr inbounds %struct.GPR, %struct.GPR* %14785, i32 0, i32 5
  %14787 = getelementptr inbounds %struct.Reg, %struct.Reg* %14786, i32 0, i32 0
  %RCX.i631 = bitcast %union.anon* %14787 to i64*
  %14788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14789 = getelementptr inbounds %struct.GPR, %struct.GPR* %14788, i32 0, i32 15
  %14790 = getelementptr inbounds %struct.Reg, %struct.Reg* %14789, i32 0, i32 0
  %RBP.i632 = bitcast %union.anon* %14790 to i64*
  %14791 = load i64, i64* %RBP.i632
  %14792 = sub i64 %14791, 35396
  %14793 = load i64, i64* %PC.i630
  %14794 = add i64 %14793, 7
  store i64 %14794, i64* %PC.i630
  %14795 = inttoptr i64 %14792 to i32*
  %14796 = load i32, i32* %14795
  %14797 = sext i32 %14796 to i64
  store i64 %14797, i64* %RCX.i631, align 8
  store %struct.Memory* %loadMem_4b1287, %struct.Memory** %MEMORY
  %loadMem_4b128e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14799 = getelementptr inbounds %struct.GPR, %struct.GPR* %14798, i32 0, i32 33
  %14800 = getelementptr inbounds %struct.Reg, %struct.Reg* %14799, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %14800 to i64*
  %14801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14802 = getelementptr inbounds %struct.GPR, %struct.GPR* %14801, i32 0, i32 5
  %14803 = getelementptr inbounds %struct.Reg, %struct.Reg* %14802, i32 0, i32 0
  %RCX.i629 = bitcast %union.anon* %14803 to i64*
  %14804 = load i64, i64* %RCX.i629
  %14805 = load i64, i64* %PC.i628
  %14806 = add i64 %14805, 7
  store i64 %14806, i64* %PC.i628
  %14807 = sext i64 %14804 to i128
  %14808 = and i128 %14807, -18446744073709551616
  %14809 = zext i64 %14804 to i128
  %14810 = or i128 %14808, %14809
  %14811 = mul i128 180, %14810
  %14812 = trunc i128 %14811 to i64
  store i64 %14812, i64* %RCX.i629, align 8
  %14813 = sext i64 %14812 to i128
  %14814 = icmp ne i128 %14813, %14811
  %14815 = zext i1 %14814 to i8
  %14816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14815, i8* %14816, align 1
  %14817 = trunc i128 %14811 to i32
  %14818 = and i32 %14817, 255
  %14819 = call i32 @llvm.ctpop.i32(i32 %14818)
  %14820 = trunc i32 %14819 to i8
  %14821 = and i8 %14820, 1
  %14822 = xor i8 %14821, 1
  %14823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14822, i8* %14823, align 1
  %14824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14824, align 1
  %14825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14825, align 1
  %14826 = lshr i64 %14812, 63
  %14827 = trunc i64 %14826 to i8
  %14828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14827, i8* %14828, align 1
  %14829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14815, i8* %14829, align 1
  store %struct.Memory* %loadMem_4b128e, %struct.Memory** %MEMORY
  %loadMem_4b1295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14831 = getelementptr inbounds %struct.GPR, %struct.GPR* %14830, i32 0, i32 33
  %14832 = getelementptr inbounds %struct.Reg, %struct.Reg* %14831, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %14832 to i64*
  %14833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14834 = getelementptr inbounds %struct.GPR, %struct.GPR* %14833, i32 0, i32 1
  %14835 = getelementptr inbounds %struct.Reg, %struct.Reg* %14834, i32 0, i32 0
  %RAX.i626 = bitcast %union.anon* %14835 to i64*
  %14836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14837 = getelementptr inbounds %struct.GPR, %struct.GPR* %14836, i32 0, i32 5
  %14838 = getelementptr inbounds %struct.Reg, %struct.Reg* %14837, i32 0, i32 0
  %RCX.i627 = bitcast %union.anon* %14838 to i64*
  %14839 = load i64, i64* %RAX.i626
  %14840 = load i64, i64* %RCX.i627
  %14841 = load i64, i64* %PC.i625
  %14842 = add i64 %14841, 3
  store i64 %14842, i64* %PC.i625
  %14843 = add i64 %14840, %14839
  store i64 %14843, i64* %RAX.i626, align 8
  %14844 = icmp ult i64 %14843, %14839
  %14845 = icmp ult i64 %14843, %14840
  %14846 = or i1 %14844, %14845
  %14847 = zext i1 %14846 to i8
  %14848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14847, i8* %14848, align 1
  %14849 = trunc i64 %14843 to i32
  %14850 = and i32 %14849, 255
  %14851 = call i32 @llvm.ctpop.i32(i32 %14850)
  %14852 = trunc i32 %14851 to i8
  %14853 = and i8 %14852, 1
  %14854 = xor i8 %14853, 1
  %14855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14854, i8* %14855, align 1
  %14856 = xor i64 %14840, %14839
  %14857 = xor i64 %14856, %14843
  %14858 = lshr i64 %14857, 4
  %14859 = trunc i64 %14858 to i8
  %14860 = and i8 %14859, 1
  %14861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14860, i8* %14861, align 1
  %14862 = icmp eq i64 %14843, 0
  %14863 = zext i1 %14862 to i8
  %14864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14863, i8* %14864, align 1
  %14865 = lshr i64 %14843, 63
  %14866 = trunc i64 %14865 to i8
  %14867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14866, i8* %14867, align 1
  %14868 = lshr i64 %14839, 63
  %14869 = lshr i64 %14840, 63
  %14870 = xor i64 %14865, %14868
  %14871 = xor i64 %14865, %14869
  %14872 = add i64 %14870, %14871
  %14873 = icmp eq i64 %14872, 2
  %14874 = zext i1 %14873 to i8
  %14875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14874, i8* %14875, align 1
  store %struct.Memory* %loadMem_4b1295, %struct.Memory** %MEMORY
  %loadMem_4b1298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14877 = getelementptr inbounds %struct.GPR, %struct.GPR* %14876, i32 0, i32 33
  %14878 = getelementptr inbounds %struct.Reg, %struct.Reg* %14877, i32 0, i32 0
  %PC.i622 = bitcast %union.anon* %14878 to i64*
  %14879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14880 = getelementptr inbounds %struct.GPR, %struct.GPR* %14879, i32 0, i32 5
  %14881 = getelementptr inbounds %struct.Reg, %struct.Reg* %14880, i32 0, i32 0
  %RCX.i623 = bitcast %union.anon* %14881 to i64*
  %14882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14883 = getelementptr inbounds %struct.GPR, %struct.GPR* %14882, i32 0, i32 15
  %14884 = getelementptr inbounds %struct.Reg, %struct.Reg* %14883, i32 0, i32 0
  %RBP.i624 = bitcast %union.anon* %14884 to i64*
  %14885 = load i64, i64* %RBP.i624
  %14886 = sub i64 %14885, 16
  %14887 = load i64, i64* %PC.i622
  %14888 = add i64 %14887, 4
  store i64 %14888, i64* %PC.i622
  %14889 = inttoptr i64 %14886 to i32*
  %14890 = load i32, i32* %14889
  %14891 = sext i32 %14890 to i64
  store i64 %14891, i64* %RCX.i623, align 8
  store %struct.Memory* %loadMem_4b1298, %struct.Memory** %MEMORY
  %loadMem_4b129c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14893 = getelementptr inbounds %struct.GPR, %struct.GPR* %14892, i32 0, i32 33
  %14894 = getelementptr inbounds %struct.Reg, %struct.Reg* %14893, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %14894 to i64*
  %14895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14896 = getelementptr inbounds %struct.GPR, %struct.GPR* %14895, i32 0, i32 5
  %14897 = getelementptr inbounds %struct.Reg, %struct.Reg* %14896, i32 0, i32 0
  %RCX.i621 = bitcast %union.anon* %14897 to i64*
  %14898 = load i64, i64* %RCX.i621
  %14899 = load i64, i64* %PC.i620
  %14900 = add i64 %14899, 4
  store i64 %14900, i64* %PC.i620
  %14901 = sext i64 %14898 to i128
  %14902 = and i128 %14901, -18446744073709551616
  %14903 = zext i64 %14898 to i128
  %14904 = or i128 %14902, %14903
  %14905 = mul i128 12, %14904
  %14906 = trunc i128 %14905 to i64
  store i64 %14906, i64* %RCX.i621, align 8
  %14907 = sext i64 %14906 to i128
  %14908 = icmp ne i128 %14907, %14905
  %14909 = zext i1 %14908 to i8
  %14910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14909, i8* %14910, align 1
  %14911 = trunc i128 %14905 to i32
  %14912 = and i32 %14911, 255
  %14913 = call i32 @llvm.ctpop.i32(i32 %14912)
  %14914 = trunc i32 %14913 to i8
  %14915 = and i8 %14914, 1
  %14916 = xor i8 %14915, 1
  %14917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14916, i8* %14917, align 1
  %14918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14918, align 1
  %14919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %14919, align 1
  %14920 = lshr i64 %14906, 63
  %14921 = trunc i64 %14920 to i8
  %14922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14921, i8* %14922, align 1
  %14923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14909, i8* %14923, align 1
  store %struct.Memory* %loadMem_4b129c, %struct.Memory** %MEMORY
  %loadMem_4b12a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14925 = getelementptr inbounds %struct.GPR, %struct.GPR* %14924, i32 0, i32 33
  %14926 = getelementptr inbounds %struct.Reg, %struct.Reg* %14925, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %14926 to i64*
  %14927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14928 = getelementptr inbounds %struct.GPR, %struct.GPR* %14927, i32 0, i32 1
  %14929 = getelementptr inbounds %struct.Reg, %struct.Reg* %14928, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %14929 to i64*
  %14930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14931 = getelementptr inbounds %struct.GPR, %struct.GPR* %14930, i32 0, i32 5
  %14932 = getelementptr inbounds %struct.Reg, %struct.Reg* %14931, i32 0, i32 0
  %RCX.i619 = bitcast %union.anon* %14932 to i64*
  %14933 = load i64, i64* %RAX.i618
  %14934 = load i64, i64* %RCX.i619
  %14935 = load i64, i64* %PC.i617
  %14936 = add i64 %14935, 3
  store i64 %14936, i64* %PC.i617
  %14937 = add i64 %14934, %14933
  store i64 %14937, i64* %RAX.i618, align 8
  %14938 = icmp ult i64 %14937, %14933
  %14939 = icmp ult i64 %14937, %14934
  %14940 = or i1 %14938, %14939
  %14941 = zext i1 %14940 to i8
  %14942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14941, i8* %14942, align 1
  %14943 = trunc i64 %14937 to i32
  %14944 = and i32 %14943, 255
  %14945 = call i32 @llvm.ctpop.i32(i32 %14944)
  %14946 = trunc i32 %14945 to i8
  %14947 = and i8 %14946, 1
  %14948 = xor i8 %14947, 1
  %14949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14948, i8* %14949, align 1
  %14950 = xor i64 %14934, %14933
  %14951 = xor i64 %14950, %14937
  %14952 = lshr i64 %14951, 4
  %14953 = trunc i64 %14952 to i8
  %14954 = and i8 %14953, 1
  %14955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14954, i8* %14955, align 1
  %14956 = icmp eq i64 %14937, 0
  %14957 = zext i1 %14956 to i8
  %14958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14957, i8* %14958, align 1
  %14959 = lshr i64 %14937, 63
  %14960 = trunc i64 %14959 to i8
  %14961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14960, i8* %14961, align 1
  %14962 = lshr i64 %14933, 63
  %14963 = lshr i64 %14934, 63
  %14964 = xor i64 %14959, %14962
  %14965 = xor i64 %14959, %14963
  %14966 = add i64 %14964, %14965
  %14967 = icmp eq i64 %14966, 2
  %14968 = zext i1 %14967 to i8
  %14969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14968, i8* %14969, align 1
  store %struct.Memory* %loadMem_4b12a0, %struct.Memory** %MEMORY
  %loadMem_4b12a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14971 = getelementptr inbounds %struct.GPR, %struct.GPR* %14970, i32 0, i32 33
  %14972 = getelementptr inbounds %struct.Reg, %struct.Reg* %14971, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %14972 to i64*
  %14973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14974 = getelementptr inbounds %struct.GPR, %struct.GPR* %14973, i32 0, i32 1
  %14975 = getelementptr inbounds %struct.Reg, %struct.Reg* %14974, i32 0, i32 0
  %RAX.i616 = bitcast %union.anon* %14975 to i64*
  %14976 = load i64, i64* %RAX.i616
  %14977 = add i64 %14976, 8
  %14978 = load i64, i64* %PC.i615
  %14979 = add i64 %14978, 7
  store i64 %14979, i64* %PC.i615
  %14980 = inttoptr i64 %14977 to i32*
  store i32 0, i32* %14980
  store %struct.Memory* %loadMem_4b12a3, %struct.Memory** %MEMORY
  %loadMem_4b12aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %14981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14982 = getelementptr inbounds %struct.GPR, %struct.GPR* %14981, i32 0, i32 33
  %14983 = getelementptr inbounds %struct.Reg, %struct.Reg* %14982, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %14983 to i64*
  %14984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14985 = getelementptr inbounds %struct.GPR, %struct.GPR* %14984, i32 0, i32 1
  %14986 = getelementptr inbounds %struct.Reg, %struct.Reg* %14985, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %14986 to i64*
  %14987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14988 = getelementptr inbounds %struct.GPR, %struct.GPR* %14987, i32 0, i32 15
  %14989 = getelementptr inbounds %struct.Reg, %struct.Reg* %14988, i32 0, i32 0
  %RBP.i614 = bitcast %union.anon* %14989 to i64*
  %14990 = load i64, i64* %RBP.i614
  %14991 = sub i64 %14990, 16
  %14992 = load i64, i64* %PC.i612
  %14993 = add i64 %14992, 3
  store i64 %14993, i64* %PC.i612
  %14994 = inttoptr i64 %14991 to i32*
  %14995 = load i32, i32* %14994
  %14996 = zext i32 %14995 to i64
  store i64 %14996, i64* %RAX.i613, align 8
  store %struct.Memory* %loadMem_4b12aa, %struct.Memory** %MEMORY
  %loadMem_4b12ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %14997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14998 = getelementptr inbounds %struct.GPR, %struct.GPR* %14997, i32 0, i32 33
  %14999 = getelementptr inbounds %struct.Reg, %struct.Reg* %14998, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %14999 to i64*
  %15000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15001 = getelementptr inbounds %struct.GPR, %struct.GPR* %15000, i32 0, i32 1
  %15002 = getelementptr inbounds %struct.Reg, %struct.Reg* %15001, i32 0, i32 0
  %RAX.i611 = bitcast %union.anon* %15002 to i64*
  %15003 = load i64, i64* %RAX.i611
  %15004 = load i64, i64* %PC.i610
  %15005 = add i64 %15004, 3
  store i64 %15005, i64* %PC.i610
  %15006 = trunc i64 %15003 to i32
  %15007 = add i32 1, %15006
  %15008 = zext i32 %15007 to i64
  store i64 %15008, i64* %RAX.i611, align 8
  %15009 = icmp ult i32 %15007, %15006
  %15010 = icmp ult i32 %15007, 1
  %15011 = or i1 %15009, %15010
  %15012 = zext i1 %15011 to i8
  %15013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15012, i8* %15013, align 1
  %15014 = and i32 %15007, 255
  %15015 = call i32 @llvm.ctpop.i32(i32 %15014)
  %15016 = trunc i32 %15015 to i8
  %15017 = and i8 %15016, 1
  %15018 = xor i8 %15017, 1
  %15019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15018, i8* %15019, align 1
  %15020 = xor i64 1, %15003
  %15021 = trunc i64 %15020 to i32
  %15022 = xor i32 %15021, %15007
  %15023 = lshr i32 %15022, 4
  %15024 = trunc i32 %15023 to i8
  %15025 = and i8 %15024, 1
  %15026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15025, i8* %15026, align 1
  %15027 = icmp eq i32 %15007, 0
  %15028 = zext i1 %15027 to i8
  %15029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15028, i8* %15029, align 1
  %15030 = lshr i32 %15007, 31
  %15031 = trunc i32 %15030 to i8
  %15032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15031, i8* %15032, align 1
  %15033 = lshr i32 %15006, 31
  %15034 = xor i32 %15030, %15033
  %15035 = add i32 %15034, %15030
  %15036 = icmp eq i32 %15035, 2
  %15037 = zext i1 %15036 to i8
  %15038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15037, i8* %15038, align 1
  store %struct.Memory* %loadMem_4b12ad, %struct.Memory** %MEMORY
  %loadMem_4b12b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15040 = getelementptr inbounds %struct.GPR, %struct.GPR* %15039, i32 0, i32 33
  %15041 = getelementptr inbounds %struct.Reg, %struct.Reg* %15040, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %15041 to i64*
  %15042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15043 = getelementptr inbounds %struct.GPR, %struct.GPR* %15042, i32 0, i32 1
  %15044 = getelementptr inbounds %struct.Reg, %struct.Reg* %15043, i32 0, i32 0
  %EAX.i608 = bitcast %union.anon* %15044 to i32*
  %15045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15046 = getelementptr inbounds %struct.GPR, %struct.GPR* %15045, i32 0, i32 15
  %15047 = getelementptr inbounds %struct.Reg, %struct.Reg* %15046, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %15047 to i64*
  %15048 = load i64, i64* %RBP.i609
  %15049 = sub i64 %15048, 16
  %15050 = load i32, i32* %EAX.i608
  %15051 = zext i32 %15050 to i64
  %15052 = load i64, i64* %PC.i607
  %15053 = add i64 %15052, 3
  store i64 %15053, i64* %PC.i607
  %15054 = inttoptr i64 %15049 to i32*
  store i32 %15050, i32* %15054
  store %struct.Memory* %loadMem_4b12b0, %struct.Memory** %MEMORY
  %loadMem_4b12b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15056 = getelementptr inbounds %struct.GPR, %struct.GPR* %15055, i32 0, i32 33
  %15057 = getelementptr inbounds %struct.Reg, %struct.Reg* %15056, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %15057 to i64*
  %15058 = load i64, i64* %PC.i606
  %15059 = add i64 %15058, -672
  %15060 = load i64, i64* %PC.i606
  %15061 = add i64 %15060, 5
  store i64 %15061, i64* %PC.i606
  %15062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15059, i64* %15062, align 8
  store %struct.Memory* %loadMem_4b12b3, %struct.Memory** %MEMORY
  br label %block_.L_4b1013

block_.L_4b12b8:                                  ; preds = %block_.L_4b1013
  %loadMem_4b12b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15064 = getelementptr inbounds %struct.GPR, %struct.GPR* %15063, i32 0, i32 33
  %15065 = getelementptr inbounds %struct.Reg, %struct.Reg* %15064, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %15065 to i64*
  %15066 = load i64, i64* %PC.i605
  %15067 = add i64 %15066, 5
  %15068 = load i64, i64* %PC.i605
  %15069 = add i64 %15068, 5
  store i64 %15069, i64* %PC.i605
  %15070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15067, i64* %15070, align 8
  store %struct.Memory* %loadMem_4b12b8, %struct.Memory** %MEMORY
  br label %block_.L_4b12bd

block_.L_4b12bd:                                  ; preds = %block_.L_4b12b8
  %loadMem_4b12bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %15071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15072 = getelementptr inbounds %struct.GPR, %struct.GPR* %15071, i32 0, i32 33
  %15073 = getelementptr inbounds %struct.Reg, %struct.Reg* %15072, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %15073 to i64*
  %15074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15075 = getelementptr inbounds %struct.GPR, %struct.GPR* %15074, i32 0, i32 1
  %15076 = getelementptr inbounds %struct.Reg, %struct.Reg* %15075, i32 0, i32 0
  %RAX.i603 = bitcast %union.anon* %15076 to i64*
  %15077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15078 = getelementptr inbounds %struct.GPR, %struct.GPR* %15077, i32 0, i32 15
  %15079 = getelementptr inbounds %struct.Reg, %struct.Reg* %15078, i32 0, i32 0
  %RBP.i604 = bitcast %union.anon* %15079 to i64*
  %15080 = load i64, i64* %RBP.i604
  %15081 = sub i64 %15080, 35396
  %15082 = load i64, i64* %PC.i602
  %15083 = add i64 %15082, 6
  store i64 %15083, i64* %PC.i602
  %15084 = inttoptr i64 %15081 to i32*
  %15085 = load i32, i32* %15084
  %15086 = zext i32 %15085 to i64
  store i64 %15086, i64* %RAX.i603, align 8
  store %struct.Memory* %loadMem_4b12bd, %struct.Memory** %MEMORY
  %loadMem_4b12c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15088 = getelementptr inbounds %struct.GPR, %struct.GPR* %15087, i32 0, i32 33
  %15089 = getelementptr inbounds %struct.Reg, %struct.Reg* %15088, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %15089 to i64*
  %15090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15091 = getelementptr inbounds %struct.GPR, %struct.GPR* %15090, i32 0, i32 1
  %15092 = getelementptr inbounds %struct.Reg, %struct.Reg* %15091, i32 0, i32 0
  %RAX.i601 = bitcast %union.anon* %15092 to i64*
  %15093 = load i64, i64* %RAX.i601
  %15094 = load i64, i64* %PC.i600
  %15095 = add i64 %15094, 3
  store i64 %15095, i64* %PC.i600
  %15096 = trunc i64 %15093 to i32
  %15097 = add i32 1, %15096
  %15098 = zext i32 %15097 to i64
  store i64 %15098, i64* %RAX.i601, align 8
  %15099 = icmp ult i32 %15097, %15096
  %15100 = icmp ult i32 %15097, 1
  %15101 = or i1 %15099, %15100
  %15102 = zext i1 %15101 to i8
  %15103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15102, i8* %15103, align 1
  %15104 = and i32 %15097, 255
  %15105 = call i32 @llvm.ctpop.i32(i32 %15104)
  %15106 = trunc i32 %15105 to i8
  %15107 = and i8 %15106, 1
  %15108 = xor i8 %15107, 1
  %15109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15108, i8* %15109, align 1
  %15110 = xor i64 1, %15093
  %15111 = trunc i64 %15110 to i32
  %15112 = xor i32 %15111, %15097
  %15113 = lshr i32 %15112, 4
  %15114 = trunc i32 %15113 to i8
  %15115 = and i8 %15114, 1
  %15116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15115, i8* %15116, align 1
  %15117 = icmp eq i32 %15097, 0
  %15118 = zext i1 %15117 to i8
  %15119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15118, i8* %15119, align 1
  %15120 = lshr i32 %15097, 31
  %15121 = trunc i32 %15120 to i8
  %15122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15121, i8* %15122, align 1
  %15123 = lshr i32 %15096, 31
  %15124 = xor i32 %15120, %15123
  %15125 = add i32 %15124, %15120
  %15126 = icmp eq i32 %15125, 2
  %15127 = zext i1 %15126 to i8
  %15128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15127, i8* %15128, align 1
  store %struct.Memory* %loadMem_4b12c3, %struct.Memory** %MEMORY
  %loadMem_4b12c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15130 = getelementptr inbounds %struct.GPR, %struct.GPR* %15129, i32 0, i32 33
  %15131 = getelementptr inbounds %struct.Reg, %struct.Reg* %15130, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %15131 to i64*
  %15132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15133 = getelementptr inbounds %struct.GPR, %struct.GPR* %15132, i32 0, i32 1
  %15134 = getelementptr inbounds %struct.Reg, %struct.Reg* %15133, i32 0, i32 0
  %EAX.i598 = bitcast %union.anon* %15134 to i32*
  %15135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15136 = getelementptr inbounds %struct.GPR, %struct.GPR* %15135, i32 0, i32 15
  %15137 = getelementptr inbounds %struct.Reg, %struct.Reg* %15136, i32 0, i32 0
  %RBP.i599 = bitcast %union.anon* %15137 to i64*
  %15138 = load i64, i64* %RBP.i599
  %15139 = sub i64 %15138, 35396
  %15140 = load i32, i32* %EAX.i598
  %15141 = zext i32 %15140 to i64
  %15142 = load i64, i64* %PC.i597
  %15143 = add i64 %15142, 6
  store i64 %15143, i64* %PC.i597
  %15144 = inttoptr i64 %15139 to i32*
  store i32 %15140, i32* %15144
  store %struct.Memory* %loadMem_4b12c6, %struct.Memory** %MEMORY
  %loadMem_4b12cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15146 = getelementptr inbounds %struct.GPR, %struct.GPR* %15145, i32 0, i32 33
  %15147 = getelementptr inbounds %struct.Reg, %struct.Reg* %15146, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %15147 to i64*
  %15148 = load i64, i64* %PC.i596
  %15149 = add i64 %15148, -727
  %15150 = load i64, i64* %PC.i596
  %15151 = add i64 %15150, 5
  store i64 %15151, i64* %PC.i596
  %15152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15149, i64* %15152, align 8
  store %struct.Memory* %loadMem_4b12cc, %struct.Memory** %MEMORY
  br label %block_.L_4b0ff5

block_.L_4b12d1:                                  ; preds = %block_.L_4b0ff5
  %loadMem_4b12d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15154 = getelementptr inbounds %struct.GPR, %struct.GPR* %15153, i32 0, i32 33
  %15155 = getelementptr inbounds %struct.Reg, %struct.Reg* %15154, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %15155 to i64*
  %15156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15157 = getelementptr inbounds %struct.GPR, %struct.GPR* %15156, i32 0, i32 1
  %15158 = getelementptr inbounds %struct.Reg, %struct.Reg* %15157, i32 0, i32 0
  %RAX.i595 = bitcast %union.anon* %15158 to i64*
  %15159 = load i64, i64* %PC.i594
  %15160 = add i64 %15159, 8
  store i64 %15160, i64* %PC.i594
  %15161 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %15161, i64* %RAX.i595, align 8
  store %struct.Memory* %loadMem_4b12d1, %struct.Memory** %MEMORY
  %loadMem_4b12d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15163 = getelementptr inbounds %struct.GPR, %struct.GPR* %15162, i32 0, i32 33
  %15164 = getelementptr inbounds %struct.Reg, %struct.Reg* %15163, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %15164 to i64*
  %15165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15166 = getelementptr inbounds %struct.GPR, %struct.GPR* %15165, i32 0, i32 1
  %15167 = getelementptr inbounds %struct.Reg, %struct.Reg* %15166, i32 0, i32 0
  %RAX.i593 = bitcast %union.anon* %15167 to i64*
  %15168 = load i64, i64* %RAX.i593
  %15169 = add i64 %15168, 196
  %15170 = load i64, i64* %PC.i592
  %15171 = add i64 %15170, 7
  store i64 %15171, i64* %PC.i592
  %15172 = inttoptr i64 %15169 to i32*
  %15173 = load i32, i32* %15172
  %15174 = sub i32 %15173, 1
  %15175 = icmp ult i32 %15173, 1
  %15176 = zext i1 %15175 to i8
  %15177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15176, i8* %15177, align 1
  %15178 = and i32 %15174, 255
  %15179 = call i32 @llvm.ctpop.i32(i32 %15178)
  %15180 = trunc i32 %15179 to i8
  %15181 = and i8 %15180, 1
  %15182 = xor i8 %15181, 1
  %15183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15182, i8* %15183, align 1
  %15184 = xor i32 %15173, 1
  %15185 = xor i32 %15184, %15174
  %15186 = lshr i32 %15185, 4
  %15187 = trunc i32 %15186 to i8
  %15188 = and i8 %15187, 1
  %15189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15188, i8* %15189, align 1
  %15190 = icmp eq i32 %15174, 0
  %15191 = zext i1 %15190 to i8
  %15192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15191, i8* %15192, align 1
  %15193 = lshr i32 %15174, 31
  %15194 = trunc i32 %15193 to i8
  %15195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15194, i8* %15195, align 1
  %15196 = lshr i32 %15173, 31
  %15197 = xor i32 %15193, %15196
  %15198 = add i32 %15197, %15196
  %15199 = icmp eq i32 %15198, 2
  %15200 = zext i1 %15199 to i8
  %15201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15200, i8* %15201, align 1
  store %struct.Memory* %loadMem_4b12d9, %struct.Memory** %MEMORY
  %loadMem_4b12e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15203 = getelementptr inbounds %struct.GPR, %struct.GPR* %15202, i32 0, i32 33
  %15204 = getelementptr inbounds %struct.Reg, %struct.Reg* %15203, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %15204 to i64*
  %15205 = load i64, i64* %PC.i591
  %15206 = add i64 %15205, 301
  %15207 = load i64, i64* %PC.i591
  %15208 = add i64 %15207, 6
  %15209 = load i64, i64* %PC.i591
  %15210 = add i64 %15209, 6
  store i64 %15210, i64* %PC.i591
  %15211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15212 = load i8, i8* %15211, align 1
  %15213 = icmp eq i8 %15212, 0
  %15214 = zext i1 %15213 to i8
  store i8 %15214, i8* %BRANCH_TAKEN, align 1
  %15215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15216 = select i1 %15213, i64 %15206, i64 %15208
  store i64 %15216, i64* %15215, align 8
  store %struct.Memory* %loadMem_4b12e0, %struct.Memory** %MEMORY
  %loadBr_4b12e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b12e0 = icmp eq i8 %loadBr_4b12e0, 1
  br i1 %cmpBr_4b12e0, label %block_.L_4b140d, label %block_4b12e6

block_4b12e6:                                     ; preds = %block_.L_4b12d1
  %loadMem_4b12e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15218 = getelementptr inbounds %struct.GPR, %struct.GPR* %15217, i32 0, i32 33
  %15219 = getelementptr inbounds %struct.Reg, %struct.Reg* %15218, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %15219 to i64*
  %15220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15221 = getelementptr inbounds %struct.GPR, %struct.GPR* %15220, i32 0, i32 15
  %15222 = getelementptr inbounds %struct.Reg, %struct.Reg* %15221, i32 0, i32 0
  %RBP.i590 = bitcast %union.anon* %15222 to i64*
  %15223 = load i64, i64* %RBP.i590
  %15224 = sub i64 %15223, 35396
  %15225 = load i64, i64* %PC.i589
  %15226 = add i64 %15225, 10
  store i64 %15226, i64* %PC.i589
  %15227 = inttoptr i64 %15224 to i32*
  store i32 0, i32* %15227
  store %struct.Memory* %loadMem_4b12e6, %struct.Memory** %MEMORY
  br label %block_.L_4b12f0

block_.L_4b12f0:                                  ; preds = %block_.L_4b13f4, %block_4b12e6
  %loadMem_4b12f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15229 = getelementptr inbounds %struct.GPR, %struct.GPR* %15228, i32 0, i32 33
  %15230 = getelementptr inbounds %struct.Reg, %struct.Reg* %15229, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %15230 to i64*
  %15231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15232 = getelementptr inbounds %struct.GPR, %struct.GPR* %15231, i32 0, i32 1
  %15233 = getelementptr inbounds %struct.Reg, %struct.Reg* %15232, i32 0, i32 0
  %RAX.i587 = bitcast %union.anon* %15233 to i64*
  %15234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15235 = getelementptr inbounds %struct.GPR, %struct.GPR* %15234, i32 0, i32 15
  %15236 = getelementptr inbounds %struct.Reg, %struct.Reg* %15235, i32 0, i32 0
  %RBP.i588 = bitcast %union.anon* %15236 to i64*
  %15237 = load i64, i64* %RBP.i588
  %15238 = sub i64 %15237, 35396
  %15239 = load i64, i64* %PC.i586
  %15240 = add i64 %15239, 6
  store i64 %15240, i64* %PC.i586
  %15241 = inttoptr i64 %15238 to i32*
  %15242 = load i32, i32* %15241
  %15243 = zext i32 %15242 to i64
  store i64 %15243, i64* %RAX.i587, align 8
  store %struct.Memory* %loadMem_4b12f0, %struct.Memory** %MEMORY
  %loadMem_4b12f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15245 = getelementptr inbounds %struct.GPR, %struct.GPR* %15244, i32 0, i32 33
  %15246 = getelementptr inbounds %struct.Reg, %struct.Reg* %15245, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %15246 to i64*
  %15247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15248 = getelementptr inbounds %struct.GPR, %struct.GPR* %15247, i32 0, i32 5
  %15249 = getelementptr inbounds %struct.Reg, %struct.Reg* %15248, i32 0, i32 0
  %RCX.i584 = bitcast %union.anon* %15249 to i64*
  %15250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15251 = getelementptr inbounds %struct.GPR, %struct.GPR* %15250, i32 0, i32 15
  %15252 = getelementptr inbounds %struct.Reg, %struct.Reg* %15251, i32 0, i32 0
  %RBP.i585 = bitcast %union.anon* %15252 to i64*
  %15253 = load i64, i64* %RBP.i585
  %15254 = sub i64 %15253, 804
  %15255 = load i64, i64* %PC.i583
  %15256 = add i64 %15255, 6
  store i64 %15256, i64* %PC.i583
  %15257 = inttoptr i64 %15254 to i32*
  %15258 = load i32, i32* %15257
  %15259 = zext i32 %15258 to i64
  store i64 %15259, i64* %RCX.i584, align 8
  store %struct.Memory* %loadMem_4b12f6, %struct.Memory** %MEMORY
  %loadMem_4b12fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15261 = getelementptr inbounds %struct.GPR, %struct.GPR* %15260, i32 0, i32 33
  %15262 = getelementptr inbounds %struct.Reg, %struct.Reg* %15261, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %15262 to i64*
  %15263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15264 = getelementptr inbounds %struct.GPR, %struct.GPR* %15263, i32 0, i32 5
  %15265 = getelementptr inbounds %struct.Reg, %struct.Reg* %15264, i32 0, i32 0
  %RCX.i582 = bitcast %union.anon* %15265 to i64*
  %15266 = load i64, i64* %RCX.i582
  %15267 = load i64, i64* %PC.i581
  %15268 = add i64 %15267, 3
  store i64 %15268, i64* %PC.i581
  %15269 = trunc i64 %15266 to i32
  %15270 = add i32 2, %15269
  %15271 = zext i32 %15270 to i64
  store i64 %15271, i64* %RCX.i582, align 8
  %15272 = icmp ult i32 %15270, %15269
  %15273 = icmp ult i32 %15270, 2
  %15274 = or i1 %15272, %15273
  %15275 = zext i1 %15274 to i8
  %15276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15275, i8* %15276, align 1
  %15277 = and i32 %15270, 255
  %15278 = call i32 @llvm.ctpop.i32(i32 %15277)
  %15279 = trunc i32 %15278 to i8
  %15280 = and i8 %15279, 1
  %15281 = xor i8 %15280, 1
  %15282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15281, i8* %15282, align 1
  %15283 = xor i64 2, %15266
  %15284 = trunc i64 %15283 to i32
  %15285 = xor i32 %15284, %15270
  %15286 = lshr i32 %15285, 4
  %15287 = trunc i32 %15286 to i8
  %15288 = and i8 %15287, 1
  %15289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15288, i8* %15289, align 1
  %15290 = icmp eq i32 %15270, 0
  %15291 = zext i1 %15290 to i8
  %15292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15291, i8* %15292, align 1
  %15293 = lshr i32 %15270, 31
  %15294 = trunc i32 %15293 to i8
  %15295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15294, i8* %15295, align 1
  %15296 = lshr i32 %15269, 31
  %15297 = xor i32 %15293, %15296
  %15298 = add i32 %15297, %15293
  %15299 = icmp eq i32 %15298, 2
  %15300 = zext i1 %15299 to i8
  %15301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15300, i8* %15301, align 1
  store %struct.Memory* %loadMem_4b12fc, %struct.Memory** %MEMORY
  %loadMem_4b12ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %15302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15303 = getelementptr inbounds %struct.GPR, %struct.GPR* %15302, i32 0, i32 33
  %15304 = getelementptr inbounds %struct.Reg, %struct.Reg* %15303, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %15304 to i64*
  %15305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15306 = getelementptr inbounds %struct.GPR, %struct.GPR* %15305, i32 0, i32 1
  %15307 = getelementptr inbounds %struct.Reg, %struct.Reg* %15306, i32 0, i32 0
  %EAX.i579 = bitcast %union.anon* %15307 to i32*
  %15308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15309 = getelementptr inbounds %struct.GPR, %struct.GPR* %15308, i32 0, i32 5
  %15310 = getelementptr inbounds %struct.Reg, %struct.Reg* %15309, i32 0, i32 0
  %ECX.i580 = bitcast %union.anon* %15310 to i32*
  %15311 = load i32, i32* %EAX.i579
  %15312 = zext i32 %15311 to i64
  %15313 = load i32, i32* %ECX.i580
  %15314 = zext i32 %15313 to i64
  %15315 = load i64, i64* %PC.i578
  %15316 = add i64 %15315, 2
  store i64 %15316, i64* %PC.i578
  %15317 = sub i32 %15311, %15313
  %15318 = icmp ult i32 %15311, %15313
  %15319 = zext i1 %15318 to i8
  %15320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15319, i8* %15320, align 1
  %15321 = and i32 %15317, 255
  %15322 = call i32 @llvm.ctpop.i32(i32 %15321)
  %15323 = trunc i32 %15322 to i8
  %15324 = and i8 %15323, 1
  %15325 = xor i8 %15324, 1
  %15326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15325, i8* %15326, align 1
  %15327 = xor i64 %15314, %15312
  %15328 = trunc i64 %15327 to i32
  %15329 = xor i32 %15328, %15317
  %15330 = lshr i32 %15329, 4
  %15331 = trunc i32 %15330 to i8
  %15332 = and i8 %15331, 1
  %15333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15332, i8* %15333, align 1
  %15334 = icmp eq i32 %15317, 0
  %15335 = zext i1 %15334 to i8
  %15336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15335, i8* %15336, align 1
  %15337 = lshr i32 %15317, 31
  %15338 = trunc i32 %15337 to i8
  %15339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15338, i8* %15339, align 1
  %15340 = lshr i32 %15311, 31
  %15341 = lshr i32 %15313, 31
  %15342 = xor i32 %15341, %15340
  %15343 = xor i32 %15337, %15340
  %15344 = add i32 %15343, %15342
  %15345 = icmp eq i32 %15344, 2
  %15346 = zext i1 %15345 to i8
  %15347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15346, i8* %15347, align 1
  store %struct.Memory* %loadMem_4b12ff, %struct.Memory** %MEMORY
  %loadMem_4b1301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15349 = getelementptr inbounds %struct.GPR, %struct.GPR* %15348, i32 0, i32 33
  %15350 = getelementptr inbounds %struct.Reg, %struct.Reg* %15349, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %15350 to i64*
  %15351 = load i64, i64* %PC.i577
  %15352 = add i64 %15351, 263
  %15353 = load i64, i64* %PC.i577
  %15354 = add i64 %15353, 6
  %15355 = load i64, i64* %PC.i577
  %15356 = add i64 %15355, 6
  store i64 %15356, i64* %PC.i577
  %15357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15358 = load i8, i8* %15357, align 1
  %15359 = icmp ne i8 %15358, 0
  %15360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15361 = load i8, i8* %15360, align 1
  %15362 = icmp ne i8 %15361, 0
  %15363 = xor i1 %15359, %15362
  %15364 = xor i1 %15363, true
  %15365 = zext i1 %15364 to i8
  store i8 %15365, i8* %BRANCH_TAKEN, align 1
  %15366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15367 = select i1 %15363, i64 %15354, i64 %15352
  store i64 %15367, i64* %15366, align 8
  store %struct.Memory* %loadMem_4b1301, %struct.Memory** %MEMORY
  %loadBr_4b1301 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1301 = icmp eq i8 %loadBr_4b1301, 1
  br i1 %cmpBr_4b1301, label %block_.L_4b1408, label %block_4b1307

block_4b1307:                                     ; preds = %block_.L_4b12f0
  %loadMem_4b1307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15369 = getelementptr inbounds %struct.GPR, %struct.GPR* %15368, i32 0, i32 33
  %15370 = getelementptr inbounds %struct.Reg, %struct.Reg* %15369, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %15370 to i64*
  %15371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15372 = getelementptr inbounds %struct.GPR, %struct.GPR* %15371, i32 0, i32 15
  %15373 = getelementptr inbounds %struct.Reg, %struct.Reg* %15372, i32 0, i32 0
  %RBP.i576 = bitcast %union.anon* %15373 to i64*
  %15374 = load i64, i64* %RBP.i576
  %15375 = sub i64 %15374, 36
  %15376 = load i64, i64* %PC.i575
  %15377 = add i64 %15376, 7
  store i64 %15377, i64* %PC.i575
  %15378 = inttoptr i64 %15375 to i32*
  store i32 0, i32* %15378
  store %struct.Memory* %loadMem_4b1307, %struct.Memory** %MEMORY
  br label %block_.L_4b130e

block_.L_4b130e:                                  ; preds = %block_.L_4b13e1, %block_4b1307
  %loadMem_4b130e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15380 = getelementptr inbounds %struct.GPR, %struct.GPR* %15379, i32 0, i32 33
  %15381 = getelementptr inbounds %struct.Reg, %struct.Reg* %15380, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %15381 to i64*
  %15382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15383 = getelementptr inbounds %struct.GPR, %struct.GPR* %15382, i32 0, i32 1
  %15384 = getelementptr inbounds %struct.Reg, %struct.Reg* %15383, i32 0, i32 0
  %RAX.i573 = bitcast %union.anon* %15384 to i64*
  %15385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15386 = getelementptr inbounds %struct.GPR, %struct.GPR* %15385, i32 0, i32 15
  %15387 = getelementptr inbounds %struct.Reg, %struct.Reg* %15386, i32 0, i32 0
  %RBP.i574 = bitcast %union.anon* %15387 to i64*
  %15388 = load i64, i64* %RBP.i574
  %15389 = sub i64 %15388, 36
  %15390 = load i64, i64* %PC.i572
  %15391 = add i64 %15390, 3
  store i64 %15391, i64* %PC.i572
  %15392 = inttoptr i64 %15389 to i32*
  %15393 = load i32, i32* %15392
  %15394 = zext i32 %15393 to i64
  store i64 %15394, i64* %RAX.i573, align 8
  store %struct.Memory* %loadMem_4b130e, %struct.Memory** %MEMORY
  %loadMem_4b1311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15396 = getelementptr inbounds %struct.GPR, %struct.GPR* %15395, i32 0, i32 33
  %15397 = getelementptr inbounds %struct.Reg, %struct.Reg* %15396, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %15397 to i64*
  %15398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15399 = getelementptr inbounds %struct.GPR, %struct.GPR* %15398, i32 0, i32 5
  %15400 = getelementptr inbounds %struct.Reg, %struct.Reg* %15399, i32 0, i32 0
  %RCX.i570 = bitcast %union.anon* %15400 to i64*
  %15401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15402 = getelementptr inbounds %struct.GPR, %struct.GPR* %15401, i32 0, i32 15
  %15403 = getelementptr inbounds %struct.Reg, %struct.Reg* %15402, i32 0, i32 0
  %RBP.i571 = bitcast %union.anon* %15403 to i64*
  %15404 = load i64, i64* %RBP.i571
  %15405 = sub i64 %15404, 35396
  %15406 = load i64, i64* %PC.i569
  %15407 = add i64 %15406, 7
  store i64 %15407, i64* %PC.i569
  %15408 = inttoptr i64 %15405 to i32*
  %15409 = load i32, i32* %15408
  %15410 = sext i32 %15409 to i64
  store i64 %15410, i64* %RCX.i570, align 8
  store %struct.Memory* %loadMem_4b1311, %struct.Memory** %MEMORY
  %loadMem_4b1318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15412 = getelementptr inbounds %struct.GPR, %struct.GPR* %15411, i32 0, i32 33
  %15413 = getelementptr inbounds %struct.Reg, %struct.Reg* %15412, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %15413 to i64*
  %15414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15415 = getelementptr inbounds %struct.GPR, %struct.GPR* %15414, i32 0, i32 1
  %15416 = getelementptr inbounds %struct.Reg, %struct.Reg* %15415, i32 0, i32 0
  %EAX.i567 = bitcast %union.anon* %15416 to i32*
  %15417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15418 = getelementptr inbounds %struct.GPR, %struct.GPR* %15417, i32 0, i32 5
  %15419 = getelementptr inbounds %struct.Reg, %struct.Reg* %15418, i32 0, i32 0
  %RCX.i568 = bitcast %union.anon* %15419 to i64*
  %15420 = load i32, i32* %EAX.i567
  %15421 = zext i32 %15420 to i64
  %15422 = load i64, i64* %RCX.i568
  %15423 = mul i64 %15422, 4
  %15424 = add i64 %15423, 7489456
  %15425 = load i64, i64* %PC.i566
  %15426 = add i64 %15425, 7
  store i64 %15426, i64* %PC.i566
  %15427 = inttoptr i64 %15424 to i32*
  %15428 = load i32, i32* %15427
  %15429 = sub i32 %15420, %15428
  %15430 = icmp ult i32 %15420, %15428
  %15431 = zext i1 %15430 to i8
  %15432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15431, i8* %15432, align 1
  %15433 = and i32 %15429, 255
  %15434 = call i32 @llvm.ctpop.i32(i32 %15433)
  %15435 = trunc i32 %15434 to i8
  %15436 = and i8 %15435, 1
  %15437 = xor i8 %15436, 1
  %15438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15437, i8* %15438, align 1
  %15439 = xor i32 %15428, %15420
  %15440 = xor i32 %15439, %15429
  %15441 = lshr i32 %15440, 4
  %15442 = trunc i32 %15441 to i8
  %15443 = and i8 %15442, 1
  %15444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15443, i8* %15444, align 1
  %15445 = icmp eq i32 %15429, 0
  %15446 = zext i1 %15445 to i8
  %15447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15446, i8* %15447, align 1
  %15448 = lshr i32 %15429, 31
  %15449 = trunc i32 %15448 to i8
  %15450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15449, i8* %15450, align 1
  %15451 = lshr i32 %15420, 31
  %15452 = lshr i32 %15428, 31
  %15453 = xor i32 %15452, %15451
  %15454 = xor i32 %15448, %15451
  %15455 = add i32 %15454, %15453
  %15456 = icmp eq i32 %15455, 2
  %15457 = zext i1 %15456 to i8
  %15458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15457, i8* %15458, align 1
  store %struct.Memory* %loadMem_4b1318, %struct.Memory** %MEMORY
  %loadMem_4b131f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15460 = getelementptr inbounds %struct.GPR, %struct.GPR* %15459, i32 0, i32 33
  %15461 = getelementptr inbounds %struct.Reg, %struct.Reg* %15460, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %15461 to i64*
  %15462 = load i64, i64* %PC.i565
  %15463 = add i64 %15462, 208
  %15464 = load i64, i64* %PC.i565
  %15465 = add i64 %15464, 6
  %15466 = load i64, i64* %PC.i565
  %15467 = add i64 %15466, 6
  store i64 %15467, i64* %PC.i565
  %15468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15469 = load i8, i8* %15468, align 1
  %15470 = icmp ne i8 %15469, 0
  %15471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15472 = load i8, i8* %15471, align 1
  %15473 = icmp ne i8 %15472, 0
  %15474 = xor i1 %15470, %15473
  %15475 = xor i1 %15474, true
  %15476 = zext i1 %15475 to i8
  store i8 %15476, i8* %BRANCH_TAKEN, align 1
  %15477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15478 = select i1 %15474, i64 %15465, i64 %15463
  store i64 %15478, i64* %15477, align 8
  store %struct.Memory* %loadMem_4b131f, %struct.Memory** %MEMORY
  %loadBr_4b131f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b131f = icmp eq i8 %loadBr_4b131f, 1
  br i1 %cmpBr_4b131f, label %block_.L_4b13ef, label %block_4b1325

block_4b1325:                                     ; preds = %block_.L_4b130e
  %loadMem_4b1325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15480 = getelementptr inbounds %struct.GPR, %struct.GPR* %15479, i32 0, i32 33
  %15481 = getelementptr inbounds %struct.Reg, %struct.Reg* %15480, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %15481 to i64*
  %15482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15483 = getelementptr inbounds %struct.GPR, %struct.GPR* %15482, i32 0, i32 15
  %15484 = getelementptr inbounds %struct.Reg, %struct.Reg* %15483, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %15484 to i64*
  %15485 = load i64, i64* %RBP.i564
  %15486 = sub i64 %15485, 40
  %15487 = load i64, i64* %PC.i563
  %15488 = add i64 %15487, 7
  store i64 %15488, i64* %PC.i563
  %15489 = inttoptr i64 %15486 to i32*
  store i32 0, i32* %15489
  store %struct.Memory* %loadMem_4b1325, %struct.Memory** %MEMORY
  br label %block_.L_4b132c

block_.L_4b132c:                                  ; preds = %block_4b1336, %block_4b1325
  %loadMem_4b132c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15491 = getelementptr inbounds %struct.GPR, %struct.GPR* %15490, i32 0, i32 33
  %15492 = getelementptr inbounds %struct.Reg, %struct.Reg* %15491, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %15492 to i64*
  %15493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15494 = getelementptr inbounds %struct.GPR, %struct.GPR* %15493, i32 0, i32 15
  %15495 = getelementptr inbounds %struct.Reg, %struct.Reg* %15494, i32 0, i32 0
  %RBP.i562 = bitcast %union.anon* %15495 to i64*
  %15496 = load i64, i64* %RBP.i562
  %15497 = sub i64 %15496, 40
  %15498 = load i64, i64* %PC.i561
  %15499 = add i64 %15498, 4
  store i64 %15499, i64* %PC.i561
  %15500 = inttoptr i64 %15497 to i32*
  %15501 = load i32, i32* %15500
  %15502 = sub i32 %15501, 3
  %15503 = icmp ult i32 %15501, 3
  %15504 = zext i1 %15503 to i8
  %15505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15504, i8* %15505, align 1
  %15506 = and i32 %15502, 255
  %15507 = call i32 @llvm.ctpop.i32(i32 %15506)
  %15508 = trunc i32 %15507 to i8
  %15509 = and i8 %15508, 1
  %15510 = xor i8 %15509, 1
  %15511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15510, i8* %15511, align 1
  %15512 = xor i32 %15501, 3
  %15513 = xor i32 %15512, %15502
  %15514 = lshr i32 %15513, 4
  %15515 = trunc i32 %15514 to i8
  %15516 = and i8 %15515, 1
  %15517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15516, i8* %15517, align 1
  %15518 = icmp eq i32 %15502, 0
  %15519 = zext i1 %15518 to i8
  %15520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15519, i8* %15520, align 1
  %15521 = lshr i32 %15502, 31
  %15522 = trunc i32 %15521 to i8
  %15523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15522, i8* %15523, align 1
  %15524 = lshr i32 %15501, 31
  %15525 = xor i32 %15521, %15524
  %15526 = add i32 %15525, %15524
  %15527 = icmp eq i32 %15526, 2
  %15528 = zext i1 %15527 to i8
  %15529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15528, i8* %15529, align 1
  store %struct.Memory* %loadMem_4b132c, %struct.Memory** %MEMORY
  %loadMem_4b1330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15531 = getelementptr inbounds %struct.GPR, %struct.GPR* %15530, i32 0, i32 33
  %15532 = getelementptr inbounds %struct.Reg, %struct.Reg* %15531, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %15532 to i64*
  %15533 = load i64, i64* %PC.i560
  %15534 = add i64 %15533, 172
  %15535 = load i64, i64* %PC.i560
  %15536 = add i64 %15535, 6
  %15537 = load i64, i64* %PC.i560
  %15538 = add i64 %15537, 6
  store i64 %15538, i64* %PC.i560
  %15539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %15540 = load i8, i8* %15539, align 1
  %15541 = icmp ne i8 %15540, 0
  %15542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %15543 = load i8, i8* %15542, align 1
  %15544 = icmp ne i8 %15543, 0
  %15545 = xor i1 %15541, %15544
  %15546 = xor i1 %15545, true
  %15547 = zext i1 %15546 to i8
  store i8 %15547, i8* %BRANCH_TAKEN, align 1
  %15548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15549 = select i1 %15545, i64 %15536, i64 %15534
  store i64 %15549, i64* %15548, align 8
  store %struct.Memory* %loadMem_4b1330, %struct.Memory** %MEMORY
  %loadBr_4b1330 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1330 = icmp eq i8 %loadBr_4b1330, 1
  br i1 %cmpBr_4b1330, label %block_.L_4b13dc, label %block_4b1336

block_4b1336:                                     ; preds = %block_.L_4b132c
  %loadMem_4b1336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15551 = getelementptr inbounds %struct.GPR, %struct.GPR* %15550, i32 0, i32 33
  %15552 = getelementptr inbounds %struct.Reg, %struct.Reg* %15551, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %15552 to i64*
  %15553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15554 = getelementptr inbounds %struct.GPR, %struct.GPR* %15553, i32 0, i32 1
  %15555 = getelementptr inbounds %struct.Reg, %struct.Reg* %15554, i32 0, i32 0
  %RAX.i558 = bitcast %union.anon* %15555 to i64*
  %15556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15557 = getelementptr inbounds %struct.GPR, %struct.GPR* %15556, i32 0, i32 15
  %15558 = getelementptr inbounds %struct.Reg, %struct.Reg* %15557, i32 0, i32 0
  %RBP.i559 = bitcast %union.anon* %15558 to i64*
  %15559 = load i64, i64* %RBP.i559
  %15560 = sub i64 %15559, 2976
  %15561 = load i64, i64* %PC.i557
  %15562 = add i64 %15561, 7
  store i64 %15562, i64* %PC.i557
  store i64 %15560, i64* %RAX.i558, align 8
  store %struct.Memory* %loadMem_4b1336, %struct.Memory** %MEMORY
  %loadMem_4b133d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15564 = getelementptr inbounds %struct.GPR, %struct.GPR* %15563, i32 0, i32 33
  %15565 = getelementptr inbounds %struct.Reg, %struct.Reg* %15564, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %15565 to i64*
  %15566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15567 = getelementptr inbounds %struct.GPR, %struct.GPR* %15566, i32 0, i32 5
  %15568 = getelementptr inbounds %struct.Reg, %struct.Reg* %15567, i32 0, i32 0
  %RCX.i555 = bitcast %union.anon* %15568 to i64*
  %15569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15570 = getelementptr inbounds %struct.GPR, %struct.GPR* %15569, i32 0, i32 15
  %15571 = getelementptr inbounds %struct.Reg, %struct.Reg* %15570, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %15571 to i64*
  %15572 = load i64, i64* %RBP.i556
  %15573 = sub i64 %15572, 1888
  %15574 = load i64, i64* %PC.i554
  %15575 = add i64 %15574, 7
  store i64 %15575, i64* %PC.i554
  store i64 %15573, i64* %RCX.i555, align 8
  store %struct.Memory* %loadMem_4b133d, %struct.Memory** %MEMORY
  %loadMem_4b1344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15577 = getelementptr inbounds %struct.GPR, %struct.GPR* %15576, i32 0, i32 33
  %15578 = getelementptr inbounds %struct.Reg, %struct.Reg* %15577, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %15578 to i64*
  %15579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15580 = getelementptr inbounds %struct.GPR, %struct.GPR* %15579, i32 0, i32 7
  %15581 = getelementptr inbounds %struct.Reg, %struct.Reg* %15580, i32 0, i32 0
  %RDX.i552 = bitcast %union.anon* %15581 to i64*
  %15582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15583 = getelementptr inbounds %struct.GPR, %struct.GPR* %15582, i32 0, i32 15
  %15584 = getelementptr inbounds %struct.Reg, %struct.Reg* %15583, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %15584 to i64*
  %15585 = load i64, i64* %RBP.i553
  %15586 = sub i64 %15585, 35396
  %15587 = load i64, i64* %PC.i551
  %15588 = add i64 %15587, 7
  store i64 %15588, i64* %PC.i551
  %15589 = inttoptr i64 %15586 to i32*
  %15590 = load i32, i32* %15589
  %15591 = sext i32 %15590 to i64
  store i64 %15591, i64* %RDX.i552, align 8
  store %struct.Memory* %loadMem_4b1344, %struct.Memory** %MEMORY
  %loadMem_4b134b = load %struct.Memory*, %struct.Memory** %MEMORY
  %15592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15593 = getelementptr inbounds %struct.GPR, %struct.GPR* %15592, i32 0, i32 33
  %15594 = getelementptr inbounds %struct.Reg, %struct.Reg* %15593, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %15594 to i64*
  %15595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15596 = getelementptr inbounds %struct.GPR, %struct.GPR* %15595, i32 0, i32 7
  %15597 = getelementptr inbounds %struct.Reg, %struct.Reg* %15596, i32 0, i32 0
  %RDX.i550 = bitcast %union.anon* %15597 to i64*
  %15598 = load i64, i64* %RDX.i550
  %15599 = load i64, i64* %PC.i549
  %15600 = add i64 %15599, 7
  store i64 %15600, i64* %PC.i549
  %15601 = sext i64 %15598 to i128
  %15602 = and i128 %15601, -18446744073709551616
  %15603 = zext i64 %15598 to i128
  %15604 = or i128 %15602, %15603
  %15605 = mul i128 180, %15604
  %15606 = trunc i128 %15605 to i64
  store i64 %15606, i64* %RDX.i550, align 8
  %15607 = sext i64 %15606 to i128
  %15608 = icmp ne i128 %15607, %15605
  %15609 = zext i1 %15608 to i8
  %15610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15609, i8* %15610, align 1
  %15611 = trunc i128 %15605 to i32
  %15612 = and i32 %15611, 255
  %15613 = call i32 @llvm.ctpop.i32(i32 %15612)
  %15614 = trunc i32 %15613 to i8
  %15615 = and i8 %15614, 1
  %15616 = xor i8 %15615, 1
  %15617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15616, i8* %15617, align 1
  %15618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15618, align 1
  %15619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15619, align 1
  %15620 = lshr i64 %15606, 63
  %15621 = trunc i64 %15620 to i8
  %15622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15621, i8* %15622, align 1
  %15623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15609, i8* %15623, align 1
  store %struct.Memory* %loadMem_4b134b, %struct.Memory** %MEMORY
  %loadMem_4b1352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15625 = getelementptr inbounds %struct.GPR, %struct.GPR* %15624, i32 0, i32 33
  %15626 = getelementptr inbounds %struct.Reg, %struct.Reg* %15625, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %15626 to i64*
  %15627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15628 = getelementptr inbounds %struct.GPR, %struct.GPR* %15627, i32 0, i32 5
  %15629 = getelementptr inbounds %struct.Reg, %struct.Reg* %15628, i32 0, i32 0
  %RCX.i547 = bitcast %union.anon* %15629 to i64*
  %15630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15631 = getelementptr inbounds %struct.GPR, %struct.GPR* %15630, i32 0, i32 7
  %15632 = getelementptr inbounds %struct.Reg, %struct.Reg* %15631, i32 0, i32 0
  %RDX.i548 = bitcast %union.anon* %15632 to i64*
  %15633 = load i64, i64* %RCX.i547
  %15634 = load i64, i64* %RDX.i548
  %15635 = load i64, i64* %PC.i546
  %15636 = add i64 %15635, 3
  store i64 %15636, i64* %PC.i546
  %15637 = add i64 %15634, %15633
  store i64 %15637, i64* %RCX.i547, align 8
  %15638 = icmp ult i64 %15637, %15633
  %15639 = icmp ult i64 %15637, %15634
  %15640 = or i1 %15638, %15639
  %15641 = zext i1 %15640 to i8
  %15642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15641, i8* %15642, align 1
  %15643 = trunc i64 %15637 to i32
  %15644 = and i32 %15643, 255
  %15645 = call i32 @llvm.ctpop.i32(i32 %15644)
  %15646 = trunc i32 %15645 to i8
  %15647 = and i8 %15646, 1
  %15648 = xor i8 %15647, 1
  %15649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15648, i8* %15649, align 1
  %15650 = xor i64 %15634, %15633
  %15651 = xor i64 %15650, %15637
  %15652 = lshr i64 %15651, 4
  %15653 = trunc i64 %15652 to i8
  %15654 = and i8 %15653, 1
  %15655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15654, i8* %15655, align 1
  %15656 = icmp eq i64 %15637, 0
  %15657 = zext i1 %15656 to i8
  %15658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15657, i8* %15658, align 1
  %15659 = lshr i64 %15637, 63
  %15660 = trunc i64 %15659 to i8
  %15661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15660, i8* %15661, align 1
  %15662 = lshr i64 %15633, 63
  %15663 = lshr i64 %15634, 63
  %15664 = xor i64 %15659, %15662
  %15665 = xor i64 %15659, %15663
  %15666 = add i64 %15664, %15665
  %15667 = icmp eq i64 %15666, 2
  %15668 = zext i1 %15667 to i8
  %15669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15668, i8* %15669, align 1
  store %struct.Memory* %loadMem_4b1352, %struct.Memory** %MEMORY
  %loadMem_4b1355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15671 = getelementptr inbounds %struct.GPR, %struct.GPR* %15670, i32 0, i32 33
  %15672 = getelementptr inbounds %struct.Reg, %struct.Reg* %15671, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %15672 to i64*
  %15673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15674 = getelementptr inbounds %struct.GPR, %struct.GPR* %15673, i32 0, i32 7
  %15675 = getelementptr inbounds %struct.Reg, %struct.Reg* %15674, i32 0, i32 0
  %RDX.i544 = bitcast %union.anon* %15675 to i64*
  %15676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15677 = getelementptr inbounds %struct.GPR, %struct.GPR* %15676, i32 0, i32 15
  %15678 = getelementptr inbounds %struct.Reg, %struct.Reg* %15677, i32 0, i32 0
  %RBP.i545 = bitcast %union.anon* %15678 to i64*
  %15679 = load i64, i64* %RBP.i545
  %15680 = sub i64 %15679, 36
  %15681 = load i64, i64* %PC.i543
  %15682 = add i64 %15681, 4
  store i64 %15682, i64* %PC.i543
  %15683 = inttoptr i64 %15680 to i32*
  %15684 = load i32, i32* %15683
  %15685 = sext i32 %15684 to i64
  store i64 %15685, i64* %RDX.i544, align 8
  store %struct.Memory* %loadMem_4b1355, %struct.Memory** %MEMORY
  %loadMem_4b1359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15687 = getelementptr inbounds %struct.GPR, %struct.GPR* %15686, i32 0, i32 33
  %15688 = getelementptr inbounds %struct.Reg, %struct.Reg* %15687, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %15688 to i64*
  %15689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15690 = getelementptr inbounds %struct.GPR, %struct.GPR* %15689, i32 0, i32 7
  %15691 = getelementptr inbounds %struct.Reg, %struct.Reg* %15690, i32 0, i32 0
  %RDX.i542 = bitcast %union.anon* %15691 to i64*
  %15692 = load i64, i64* %RDX.i542
  %15693 = load i64, i64* %PC.i541
  %15694 = add i64 %15693, 4
  store i64 %15694, i64* %PC.i541
  %15695 = sext i64 %15692 to i128
  %15696 = and i128 %15695, -18446744073709551616
  %15697 = zext i64 %15692 to i128
  %15698 = or i128 %15696, %15697
  %15699 = mul i128 12, %15698
  %15700 = trunc i128 %15699 to i64
  store i64 %15700, i64* %RDX.i542, align 8
  %15701 = sext i64 %15700 to i128
  %15702 = icmp ne i128 %15701, %15699
  %15703 = zext i1 %15702 to i8
  %15704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15703, i8* %15704, align 1
  %15705 = trunc i128 %15699 to i32
  %15706 = and i32 %15705, 255
  %15707 = call i32 @llvm.ctpop.i32(i32 %15706)
  %15708 = trunc i32 %15707 to i8
  %15709 = and i8 %15708, 1
  %15710 = xor i8 %15709, 1
  %15711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15710, i8* %15711, align 1
  %15712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15712, align 1
  %15713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15713, align 1
  %15714 = lshr i64 %15700, 63
  %15715 = trunc i64 %15714 to i8
  %15716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15715, i8* %15716, align 1
  %15717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15703, i8* %15717, align 1
  store %struct.Memory* %loadMem_4b1359, %struct.Memory** %MEMORY
  %loadMem_4b135d = load %struct.Memory*, %struct.Memory** %MEMORY
  %15718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15719 = getelementptr inbounds %struct.GPR, %struct.GPR* %15718, i32 0, i32 33
  %15720 = getelementptr inbounds %struct.Reg, %struct.Reg* %15719, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %15720 to i64*
  %15721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15722 = getelementptr inbounds %struct.GPR, %struct.GPR* %15721, i32 0, i32 5
  %15723 = getelementptr inbounds %struct.Reg, %struct.Reg* %15722, i32 0, i32 0
  %RCX.i539 = bitcast %union.anon* %15723 to i64*
  %15724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15725 = getelementptr inbounds %struct.GPR, %struct.GPR* %15724, i32 0, i32 7
  %15726 = getelementptr inbounds %struct.Reg, %struct.Reg* %15725, i32 0, i32 0
  %RDX.i540 = bitcast %union.anon* %15726 to i64*
  %15727 = load i64, i64* %RCX.i539
  %15728 = load i64, i64* %RDX.i540
  %15729 = load i64, i64* %PC.i538
  %15730 = add i64 %15729, 3
  store i64 %15730, i64* %PC.i538
  %15731 = add i64 %15728, %15727
  store i64 %15731, i64* %RCX.i539, align 8
  %15732 = icmp ult i64 %15731, %15727
  %15733 = icmp ult i64 %15731, %15728
  %15734 = or i1 %15732, %15733
  %15735 = zext i1 %15734 to i8
  %15736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15735, i8* %15736, align 1
  %15737 = trunc i64 %15731 to i32
  %15738 = and i32 %15737, 255
  %15739 = call i32 @llvm.ctpop.i32(i32 %15738)
  %15740 = trunc i32 %15739 to i8
  %15741 = and i8 %15740, 1
  %15742 = xor i8 %15741, 1
  %15743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15742, i8* %15743, align 1
  %15744 = xor i64 %15728, %15727
  %15745 = xor i64 %15744, %15731
  %15746 = lshr i64 %15745, 4
  %15747 = trunc i64 %15746 to i8
  %15748 = and i8 %15747, 1
  %15749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15748, i8* %15749, align 1
  %15750 = icmp eq i64 %15731, 0
  %15751 = zext i1 %15750 to i8
  %15752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15751, i8* %15752, align 1
  %15753 = lshr i64 %15731, 63
  %15754 = trunc i64 %15753 to i8
  %15755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15754, i8* %15755, align 1
  %15756 = lshr i64 %15727, 63
  %15757 = lshr i64 %15728, 63
  %15758 = xor i64 %15753, %15756
  %15759 = xor i64 %15753, %15757
  %15760 = add i64 %15758, %15759
  %15761 = icmp eq i64 %15760, 2
  %15762 = zext i1 %15761 to i8
  %15763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15762, i8* %15763, align 1
  store %struct.Memory* %loadMem_4b135d, %struct.Memory** %MEMORY
  %loadMem_4b1360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15765 = getelementptr inbounds %struct.GPR, %struct.GPR* %15764, i32 0, i32 33
  %15766 = getelementptr inbounds %struct.Reg, %struct.Reg* %15765, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %15766 to i64*
  %15767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15768 = getelementptr inbounds %struct.GPR, %struct.GPR* %15767, i32 0, i32 7
  %15769 = getelementptr inbounds %struct.Reg, %struct.Reg* %15768, i32 0, i32 0
  %RDX.i536 = bitcast %union.anon* %15769 to i64*
  %15770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15771 = getelementptr inbounds %struct.GPR, %struct.GPR* %15770, i32 0, i32 15
  %15772 = getelementptr inbounds %struct.Reg, %struct.Reg* %15771, i32 0, i32 0
  %RBP.i537 = bitcast %union.anon* %15772 to i64*
  %15773 = load i64, i64* %RBP.i537
  %15774 = sub i64 %15773, 40
  %15775 = load i64, i64* %PC.i535
  %15776 = add i64 %15775, 4
  store i64 %15776, i64* %PC.i535
  %15777 = inttoptr i64 %15774 to i32*
  %15778 = load i32, i32* %15777
  %15779 = sext i32 %15778 to i64
  store i64 %15779, i64* %RDX.i536, align 8
  store %struct.Memory* %loadMem_4b1360, %struct.Memory** %MEMORY
  %loadMem_4b1364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15781 = getelementptr inbounds %struct.GPR, %struct.GPR* %15780, i32 0, i32 33
  %15782 = getelementptr inbounds %struct.Reg, %struct.Reg* %15781, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %15782 to i64*
  %15783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15784 = getelementptr inbounds %struct.GPR, %struct.GPR* %15783, i32 0, i32 5
  %15785 = getelementptr inbounds %struct.Reg, %struct.Reg* %15784, i32 0, i32 0
  %RCX.i532 = bitcast %union.anon* %15785 to i64*
  %15786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15787 = getelementptr inbounds %struct.GPR, %struct.GPR* %15786, i32 0, i32 7
  %15788 = getelementptr inbounds %struct.Reg, %struct.Reg* %15787, i32 0, i32 0
  %RDX.i533 = bitcast %union.anon* %15788 to i64*
  %15789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15790 = getelementptr inbounds %struct.GPR, %struct.GPR* %15789, i32 0, i32 9
  %15791 = getelementptr inbounds %struct.Reg, %struct.Reg* %15790, i32 0, i32 0
  %RSI.i534 = bitcast %union.anon* %15791 to i64*
  %15792 = load i64, i64* %RCX.i532
  %15793 = load i64, i64* %RDX.i533
  %15794 = mul i64 %15793, 4
  %15795 = add i64 %15794, %15792
  %15796 = load i64, i64* %PC.i531
  %15797 = add i64 %15796, 3
  store i64 %15797, i64* %PC.i531
  %15798 = inttoptr i64 %15795 to i32*
  %15799 = load i32, i32* %15798
  %15800 = zext i32 %15799 to i64
  store i64 %15800, i64* %RSI.i534, align 8
  store %struct.Memory* %loadMem_4b1364, %struct.Memory** %MEMORY
  %loadMem_4b1367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15802 = getelementptr inbounds %struct.GPR, %struct.GPR* %15801, i32 0, i32 33
  %15803 = getelementptr inbounds %struct.Reg, %struct.Reg* %15802, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %15803 to i64*
  %15804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15805 = getelementptr inbounds %struct.GPR, %struct.GPR* %15804, i32 0, i32 5
  %15806 = getelementptr inbounds %struct.Reg, %struct.Reg* %15805, i32 0, i32 0
  %RCX.i530 = bitcast %union.anon* %15806 to i64*
  %15807 = load i64, i64* %PC.i529
  %15808 = add i64 %15807, 8
  store i64 %15808, i64* %PC.i529
  %15809 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %15809, i64* %RCX.i530, align 8
  store %struct.Memory* %loadMem_4b1367, %struct.Memory** %MEMORY
  %loadMem_4b136f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15811 = getelementptr inbounds %struct.GPR, %struct.GPR* %15810, i32 0, i32 33
  %15812 = getelementptr inbounds %struct.Reg, %struct.Reg* %15811, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %15812 to i64*
  %15813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15814 = getelementptr inbounds %struct.GPR, %struct.GPR* %15813, i32 0, i32 7
  %15815 = getelementptr inbounds %struct.Reg, %struct.Reg* %15814, i32 0, i32 0
  %RDX.i527 = bitcast %union.anon* %15815 to i64*
  %15816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15817 = getelementptr inbounds %struct.GPR, %struct.GPR* %15816, i32 0, i32 15
  %15818 = getelementptr inbounds %struct.Reg, %struct.Reg* %15817, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %15818 to i64*
  %15819 = load i64, i64* %RBP.i528
  %15820 = sub i64 %15819, 35396
  %15821 = load i64, i64* %PC.i526
  %15822 = add i64 %15821, 7
  store i64 %15822, i64* %PC.i526
  %15823 = inttoptr i64 %15820 to i32*
  %15824 = load i32, i32* %15823
  %15825 = sext i32 %15824 to i64
  store i64 %15825, i64* %RDX.i527, align 8
  store %struct.Memory* %loadMem_4b136f, %struct.Memory** %MEMORY
  %loadMem_4b1376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15827 = getelementptr inbounds %struct.GPR, %struct.GPR* %15826, i32 0, i32 33
  %15828 = getelementptr inbounds %struct.Reg, %struct.Reg* %15827, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %15828 to i64*
  %15829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15830 = getelementptr inbounds %struct.GPR, %struct.GPR* %15829, i32 0, i32 5
  %15831 = getelementptr inbounds %struct.Reg, %struct.Reg* %15830, i32 0, i32 0
  %RCX.i524 = bitcast %union.anon* %15831 to i64*
  %15832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15833 = getelementptr inbounds %struct.GPR, %struct.GPR* %15832, i32 0, i32 7
  %15834 = getelementptr inbounds %struct.Reg, %struct.Reg* %15833, i32 0, i32 0
  %RDX.i525 = bitcast %union.anon* %15834 to i64*
  %15835 = load i64, i64* %RCX.i524
  %15836 = load i64, i64* %RDX.i525
  %15837 = mul i64 %15836, 8
  %15838 = add i64 %15837, %15835
  %15839 = load i64, i64* %PC.i523
  %15840 = add i64 %15839, 4
  store i64 %15840, i64* %PC.i523
  %15841 = inttoptr i64 %15838 to i64*
  %15842 = load i64, i64* %15841
  store i64 %15842, i64* %RCX.i524, align 8
  store %struct.Memory* %loadMem_4b1376, %struct.Memory** %MEMORY
  %loadMem_4b137a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15844 = getelementptr inbounds %struct.GPR, %struct.GPR* %15843, i32 0, i32 33
  %15845 = getelementptr inbounds %struct.Reg, %struct.Reg* %15844, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %15845 to i64*
  %15846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15847 = getelementptr inbounds %struct.GPR, %struct.GPR* %15846, i32 0, i32 7
  %15848 = getelementptr inbounds %struct.Reg, %struct.Reg* %15847, i32 0, i32 0
  %RDX.i521 = bitcast %union.anon* %15848 to i64*
  %15849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15850 = getelementptr inbounds %struct.GPR, %struct.GPR* %15849, i32 0, i32 15
  %15851 = getelementptr inbounds %struct.Reg, %struct.Reg* %15850, i32 0, i32 0
  %RBP.i522 = bitcast %union.anon* %15851 to i64*
  %15852 = load i64, i64* %RBP.i522
  %15853 = sub i64 %15852, 36
  %15854 = load i64, i64* %PC.i520
  %15855 = add i64 %15854, 4
  store i64 %15855, i64* %PC.i520
  %15856 = inttoptr i64 %15853 to i32*
  %15857 = load i32, i32* %15856
  %15858 = sext i32 %15857 to i64
  store i64 %15858, i64* %RDX.i521, align 8
  store %struct.Memory* %loadMem_4b137a, %struct.Memory** %MEMORY
  %loadMem_4b137e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15860 = getelementptr inbounds %struct.GPR, %struct.GPR* %15859, i32 0, i32 33
  %15861 = getelementptr inbounds %struct.Reg, %struct.Reg* %15860, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %15861 to i64*
  %15862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15863 = getelementptr inbounds %struct.GPR, %struct.GPR* %15862, i32 0, i32 5
  %15864 = getelementptr inbounds %struct.Reg, %struct.Reg* %15863, i32 0, i32 0
  %RCX.i518 = bitcast %union.anon* %15864 to i64*
  %15865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15866 = getelementptr inbounds %struct.GPR, %struct.GPR* %15865, i32 0, i32 7
  %15867 = getelementptr inbounds %struct.Reg, %struct.Reg* %15866, i32 0, i32 0
  %RDX.i519 = bitcast %union.anon* %15867 to i64*
  %15868 = load i64, i64* %RCX.i518
  %15869 = load i64, i64* %RDX.i519
  %15870 = mul i64 %15869, 8
  %15871 = add i64 %15870, %15868
  %15872 = load i64, i64* %PC.i517
  %15873 = add i64 %15872, 4
  store i64 %15873, i64* %PC.i517
  %15874 = inttoptr i64 %15871 to i64*
  %15875 = load i64, i64* %15874
  store i64 %15875, i64* %RCX.i518, align 8
  store %struct.Memory* %loadMem_4b137e, %struct.Memory** %MEMORY
  %loadMem_4b1382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15877 = getelementptr inbounds %struct.GPR, %struct.GPR* %15876, i32 0, i32 33
  %15878 = getelementptr inbounds %struct.Reg, %struct.Reg* %15877, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %15878 to i64*
  %15879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15880 = getelementptr inbounds %struct.GPR, %struct.GPR* %15879, i32 0, i32 7
  %15881 = getelementptr inbounds %struct.Reg, %struct.Reg* %15880, i32 0, i32 0
  %RDX.i515 = bitcast %union.anon* %15881 to i64*
  %15882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15883 = getelementptr inbounds %struct.GPR, %struct.GPR* %15882, i32 0, i32 15
  %15884 = getelementptr inbounds %struct.Reg, %struct.Reg* %15883, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %15884 to i64*
  %15885 = load i64, i64* %RBP.i516
  %15886 = sub i64 %15885, 40
  %15887 = load i64, i64* %PC.i514
  %15888 = add i64 %15887, 4
  store i64 %15888, i64* %PC.i514
  %15889 = inttoptr i64 %15886 to i32*
  %15890 = load i32, i32* %15889
  %15891 = sext i32 %15890 to i64
  store i64 %15891, i64* %RDX.i515, align 8
  store %struct.Memory* %loadMem_4b1382, %struct.Memory** %MEMORY
  %loadMem_4b1386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15893 = getelementptr inbounds %struct.GPR, %struct.GPR* %15892, i32 0, i32 33
  %15894 = getelementptr inbounds %struct.Reg, %struct.Reg* %15893, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %15894 to i64*
  %15895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15896 = getelementptr inbounds %struct.GPR, %struct.GPR* %15895, i32 0, i32 9
  %15897 = getelementptr inbounds %struct.Reg, %struct.Reg* %15896, i32 0, i32 0
  %ESI.i511 = bitcast %union.anon* %15897 to i32*
  %15898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15899 = getelementptr inbounds %struct.GPR, %struct.GPR* %15898, i32 0, i32 5
  %15900 = getelementptr inbounds %struct.Reg, %struct.Reg* %15899, i32 0, i32 0
  %RCX.i512 = bitcast %union.anon* %15900 to i64*
  %15901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15902 = getelementptr inbounds %struct.GPR, %struct.GPR* %15901, i32 0, i32 7
  %15903 = getelementptr inbounds %struct.Reg, %struct.Reg* %15902, i32 0, i32 0
  %RDX.i513 = bitcast %union.anon* %15903 to i64*
  %15904 = load i64, i64* %RCX.i512
  %15905 = load i64, i64* %RDX.i513
  %15906 = mul i64 %15905, 4
  %15907 = add i64 %15906, %15904
  %15908 = load i32, i32* %ESI.i511
  %15909 = zext i32 %15908 to i64
  %15910 = load i64, i64* %PC.i510
  %15911 = add i64 %15910, 3
  store i64 %15911, i64* %PC.i510
  %15912 = inttoptr i64 %15907 to i32*
  store i32 %15908, i32* %15912
  store %struct.Memory* %loadMem_4b1386, %struct.Memory** %MEMORY
  %loadMem_4b1389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15914 = getelementptr inbounds %struct.GPR, %struct.GPR* %15913, i32 0, i32 33
  %15915 = getelementptr inbounds %struct.Reg, %struct.Reg* %15914, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %15915 to i64*
  %15916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15917 = getelementptr inbounds %struct.GPR, %struct.GPR* %15916, i32 0, i32 5
  %15918 = getelementptr inbounds %struct.Reg, %struct.Reg* %15917, i32 0, i32 0
  %RCX.i508 = bitcast %union.anon* %15918 to i64*
  %15919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15920 = getelementptr inbounds %struct.GPR, %struct.GPR* %15919, i32 0, i32 15
  %15921 = getelementptr inbounds %struct.Reg, %struct.Reg* %15920, i32 0, i32 0
  %RBP.i509 = bitcast %union.anon* %15921 to i64*
  %15922 = load i64, i64* %RBP.i509
  %15923 = sub i64 %15922, 35396
  %15924 = load i64, i64* %PC.i507
  %15925 = add i64 %15924, 7
  store i64 %15925, i64* %PC.i507
  %15926 = inttoptr i64 %15923 to i32*
  %15927 = load i32, i32* %15926
  %15928 = sext i32 %15927 to i64
  store i64 %15928, i64* %RCX.i508, align 8
  store %struct.Memory* %loadMem_4b1389, %struct.Memory** %MEMORY
  %loadMem_4b1390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15930 = getelementptr inbounds %struct.GPR, %struct.GPR* %15929, i32 0, i32 33
  %15931 = getelementptr inbounds %struct.Reg, %struct.Reg* %15930, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %15931 to i64*
  %15932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15933 = getelementptr inbounds %struct.GPR, %struct.GPR* %15932, i32 0, i32 5
  %15934 = getelementptr inbounds %struct.Reg, %struct.Reg* %15933, i32 0, i32 0
  %RCX.i506 = bitcast %union.anon* %15934 to i64*
  %15935 = load i64, i64* %RCX.i506
  %15936 = load i64, i64* %PC.i505
  %15937 = add i64 %15936, 7
  store i64 %15937, i64* %PC.i505
  %15938 = sext i64 %15935 to i128
  %15939 = and i128 %15938, -18446744073709551616
  %15940 = zext i64 %15935 to i128
  %15941 = or i128 %15939, %15940
  %15942 = mul i128 180, %15941
  %15943 = trunc i128 %15942 to i64
  store i64 %15943, i64* %RCX.i506, align 8
  %15944 = sext i64 %15943 to i128
  %15945 = icmp ne i128 %15944, %15942
  %15946 = zext i1 %15945 to i8
  %15947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15946, i8* %15947, align 1
  %15948 = trunc i128 %15942 to i32
  %15949 = and i32 %15948, 255
  %15950 = call i32 @llvm.ctpop.i32(i32 %15949)
  %15951 = trunc i32 %15950 to i8
  %15952 = and i8 %15951, 1
  %15953 = xor i8 %15952, 1
  %15954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15953, i8* %15954, align 1
  %15955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15955, align 1
  %15956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %15956, align 1
  %15957 = lshr i64 %15943, 63
  %15958 = trunc i64 %15957 to i8
  %15959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15958, i8* %15959, align 1
  %15960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15946, i8* %15960, align 1
  store %struct.Memory* %loadMem_4b1390, %struct.Memory** %MEMORY
  %loadMem_4b1397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15962 = getelementptr inbounds %struct.GPR, %struct.GPR* %15961, i32 0, i32 33
  %15963 = getelementptr inbounds %struct.Reg, %struct.Reg* %15962, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %15963 to i64*
  %15964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15965 = getelementptr inbounds %struct.GPR, %struct.GPR* %15964, i32 0, i32 1
  %15966 = getelementptr inbounds %struct.Reg, %struct.Reg* %15965, i32 0, i32 0
  %RAX.i503 = bitcast %union.anon* %15966 to i64*
  %15967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15968 = getelementptr inbounds %struct.GPR, %struct.GPR* %15967, i32 0, i32 5
  %15969 = getelementptr inbounds %struct.Reg, %struct.Reg* %15968, i32 0, i32 0
  %RCX.i504 = bitcast %union.anon* %15969 to i64*
  %15970 = load i64, i64* %RAX.i503
  %15971 = load i64, i64* %RCX.i504
  %15972 = load i64, i64* %PC.i502
  %15973 = add i64 %15972, 3
  store i64 %15973, i64* %PC.i502
  %15974 = add i64 %15971, %15970
  store i64 %15974, i64* %RAX.i503, align 8
  %15975 = icmp ult i64 %15974, %15970
  %15976 = icmp ult i64 %15974, %15971
  %15977 = or i1 %15975, %15976
  %15978 = zext i1 %15977 to i8
  %15979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15978, i8* %15979, align 1
  %15980 = trunc i64 %15974 to i32
  %15981 = and i32 %15980, 255
  %15982 = call i32 @llvm.ctpop.i32(i32 %15981)
  %15983 = trunc i32 %15982 to i8
  %15984 = and i8 %15983, 1
  %15985 = xor i8 %15984, 1
  %15986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15985, i8* %15986, align 1
  %15987 = xor i64 %15971, %15970
  %15988 = xor i64 %15987, %15974
  %15989 = lshr i64 %15988, 4
  %15990 = trunc i64 %15989 to i8
  %15991 = and i8 %15990, 1
  %15992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15991, i8* %15992, align 1
  %15993 = icmp eq i64 %15974, 0
  %15994 = zext i1 %15993 to i8
  %15995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15994, i8* %15995, align 1
  %15996 = lshr i64 %15974, 63
  %15997 = trunc i64 %15996 to i8
  %15998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15997, i8* %15998, align 1
  %15999 = lshr i64 %15970, 63
  %16000 = lshr i64 %15971, 63
  %16001 = xor i64 %15996, %15999
  %16002 = xor i64 %15996, %16000
  %16003 = add i64 %16001, %16002
  %16004 = icmp eq i64 %16003, 2
  %16005 = zext i1 %16004 to i8
  %16006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16005, i8* %16006, align 1
  store %struct.Memory* %loadMem_4b1397, %struct.Memory** %MEMORY
  %loadMem_4b139a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16008 = getelementptr inbounds %struct.GPR, %struct.GPR* %16007, i32 0, i32 33
  %16009 = getelementptr inbounds %struct.Reg, %struct.Reg* %16008, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %16009 to i64*
  %16010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16011 = getelementptr inbounds %struct.GPR, %struct.GPR* %16010, i32 0, i32 5
  %16012 = getelementptr inbounds %struct.Reg, %struct.Reg* %16011, i32 0, i32 0
  %RCX.i500 = bitcast %union.anon* %16012 to i64*
  %16013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16014 = getelementptr inbounds %struct.GPR, %struct.GPR* %16013, i32 0, i32 15
  %16015 = getelementptr inbounds %struct.Reg, %struct.Reg* %16014, i32 0, i32 0
  %RBP.i501 = bitcast %union.anon* %16015 to i64*
  %16016 = load i64, i64* %RBP.i501
  %16017 = sub i64 %16016, 36
  %16018 = load i64, i64* %PC.i499
  %16019 = add i64 %16018, 4
  store i64 %16019, i64* %PC.i499
  %16020 = inttoptr i64 %16017 to i32*
  %16021 = load i32, i32* %16020
  %16022 = sext i32 %16021 to i64
  store i64 %16022, i64* %RCX.i500, align 8
  store %struct.Memory* %loadMem_4b139a, %struct.Memory** %MEMORY
  %loadMem_4b139e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16024 = getelementptr inbounds %struct.GPR, %struct.GPR* %16023, i32 0, i32 33
  %16025 = getelementptr inbounds %struct.Reg, %struct.Reg* %16024, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %16025 to i64*
  %16026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16027 = getelementptr inbounds %struct.GPR, %struct.GPR* %16026, i32 0, i32 5
  %16028 = getelementptr inbounds %struct.Reg, %struct.Reg* %16027, i32 0, i32 0
  %RCX.i498 = bitcast %union.anon* %16028 to i64*
  %16029 = load i64, i64* %RCX.i498
  %16030 = load i64, i64* %PC.i497
  %16031 = add i64 %16030, 4
  store i64 %16031, i64* %PC.i497
  %16032 = sext i64 %16029 to i128
  %16033 = and i128 %16032, -18446744073709551616
  %16034 = zext i64 %16029 to i128
  %16035 = or i128 %16033, %16034
  %16036 = mul i128 12, %16035
  %16037 = trunc i128 %16036 to i64
  store i64 %16037, i64* %RCX.i498, align 8
  %16038 = sext i64 %16037 to i128
  %16039 = icmp ne i128 %16038, %16036
  %16040 = zext i1 %16039 to i8
  %16041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16040, i8* %16041, align 1
  %16042 = trunc i128 %16036 to i32
  %16043 = and i32 %16042, 255
  %16044 = call i32 @llvm.ctpop.i32(i32 %16043)
  %16045 = trunc i32 %16044 to i8
  %16046 = and i8 %16045, 1
  %16047 = xor i8 %16046, 1
  %16048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16047, i8* %16048, align 1
  %16049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16049, align 1
  %16050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %16050, align 1
  %16051 = lshr i64 %16037, 63
  %16052 = trunc i64 %16051 to i8
  %16053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16052, i8* %16053, align 1
  %16054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16040, i8* %16054, align 1
  store %struct.Memory* %loadMem_4b139e, %struct.Memory** %MEMORY
  %loadMem_4b13a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16056 = getelementptr inbounds %struct.GPR, %struct.GPR* %16055, i32 0, i32 33
  %16057 = getelementptr inbounds %struct.Reg, %struct.Reg* %16056, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %16057 to i64*
  %16058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16059 = getelementptr inbounds %struct.GPR, %struct.GPR* %16058, i32 0, i32 1
  %16060 = getelementptr inbounds %struct.Reg, %struct.Reg* %16059, i32 0, i32 0
  %RAX.i495 = bitcast %union.anon* %16060 to i64*
  %16061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16062 = getelementptr inbounds %struct.GPR, %struct.GPR* %16061, i32 0, i32 5
  %16063 = getelementptr inbounds %struct.Reg, %struct.Reg* %16062, i32 0, i32 0
  %RCX.i496 = bitcast %union.anon* %16063 to i64*
  %16064 = load i64, i64* %RAX.i495
  %16065 = load i64, i64* %RCX.i496
  %16066 = load i64, i64* %PC.i494
  %16067 = add i64 %16066, 3
  store i64 %16067, i64* %PC.i494
  %16068 = add i64 %16065, %16064
  store i64 %16068, i64* %RAX.i495, align 8
  %16069 = icmp ult i64 %16068, %16064
  %16070 = icmp ult i64 %16068, %16065
  %16071 = or i1 %16069, %16070
  %16072 = zext i1 %16071 to i8
  %16073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16072, i8* %16073, align 1
  %16074 = trunc i64 %16068 to i32
  %16075 = and i32 %16074, 255
  %16076 = call i32 @llvm.ctpop.i32(i32 %16075)
  %16077 = trunc i32 %16076 to i8
  %16078 = and i8 %16077, 1
  %16079 = xor i8 %16078, 1
  %16080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16079, i8* %16080, align 1
  %16081 = xor i64 %16065, %16064
  %16082 = xor i64 %16081, %16068
  %16083 = lshr i64 %16082, 4
  %16084 = trunc i64 %16083 to i8
  %16085 = and i8 %16084, 1
  %16086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16085, i8* %16086, align 1
  %16087 = icmp eq i64 %16068, 0
  %16088 = zext i1 %16087 to i8
  %16089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16088, i8* %16089, align 1
  %16090 = lshr i64 %16068, 63
  %16091 = trunc i64 %16090 to i8
  %16092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16091, i8* %16092, align 1
  %16093 = lshr i64 %16064, 63
  %16094 = lshr i64 %16065, 63
  %16095 = xor i64 %16090, %16093
  %16096 = xor i64 %16090, %16094
  %16097 = add i64 %16095, %16096
  %16098 = icmp eq i64 %16097, 2
  %16099 = zext i1 %16098 to i8
  %16100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16099, i8* %16100, align 1
  store %struct.Memory* %loadMem_4b13a2, %struct.Memory** %MEMORY
  %loadMem_4b13a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16102 = getelementptr inbounds %struct.GPR, %struct.GPR* %16101, i32 0, i32 33
  %16103 = getelementptr inbounds %struct.Reg, %struct.Reg* %16102, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %16103 to i64*
  %16104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16105 = getelementptr inbounds %struct.GPR, %struct.GPR* %16104, i32 0, i32 5
  %16106 = getelementptr inbounds %struct.Reg, %struct.Reg* %16105, i32 0, i32 0
  %RCX.i492 = bitcast %union.anon* %16106 to i64*
  %16107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16108 = getelementptr inbounds %struct.GPR, %struct.GPR* %16107, i32 0, i32 15
  %16109 = getelementptr inbounds %struct.Reg, %struct.Reg* %16108, i32 0, i32 0
  %RBP.i493 = bitcast %union.anon* %16109 to i64*
  %16110 = load i64, i64* %RBP.i493
  %16111 = sub i64 %16110, 40
  %16112 = load i64, i64* %PC.i491
  %16113 = add i64 %16112, 4
  store i64 %16113, i64* %PC.i491
  %16114 = inttoptr i64 %16111 to i32*
  %16115 = load i32, i32* %16114
  %16116 = sext i32 %16115 to i64
  store i64 %16116, i64* %RCX.i492, align 8
  store %struct.Memory* %loadMem_4b13a5, %struct.Memory** %MEMORY
  %loadMem_4b13a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16118 = getelementptr inbounds %struct.GPR, %struct.GPR* %16117, i32 0, i32 33
  %16119 = getelementptr inbounds %struct.Reg, %struct.Reg* %16118, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %16119 to i64*
  %16120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16121 = getelementptr inbounds %struct.GPR, %struct.GPR* %16120, i32 0, i32 1
  %16122 = getelementptr inbounds %struct.Reg, %struct.Reg* %16121, i32 0, i32 0
  %RAX.i488 = bitcast %union.anon* %16122 to i64*
  %16123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16124 = getelementptr inbounds %struct.GPR, %struct.GPR* %16123, i32 0, i32 5
  %16125 = getelementptr inbounds %struct.Reg, %struct.Reg* %16124, i32 0, i32 0
  %RCX.i489 = bitcast %union.anon* %16125 to i64*
  %16126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16127 = getelementptr inbounds %struct.GPR, %struct.GPR* %16126, i32 0, i32 9
  %16128 = getelementptr inbounds %struct.Reg, %struct.Reg* %16127, i32 0, i32 0
  %RSI.i490 = bitcast %union.anon* %16128 to i64*
  %16129 = load i64, i64* %RAX.i488
  %16130 = load i64, i64* %RCX.i489
  %16131 = mul i64 %16130, 4
  %16132 = add i64 %16131, %16129
  %16133 = load i64, i64* %PC.i487
  %16134 = add i64 %16133, 3
  store i64 %16134, i64* %PC.i487
  %16135 = inttoptr i64 %16132 to i32*
  %16136 = load i32, i32* %16135
  %16137 = zext i32 %16136 to i64
  store i64 %16137, i64* %RSI.i490, align 8
  store %struct.Memory* %loadMem_4b13a9, %struct.Memory** %MEMORY
  %loadMem_4b13ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %16138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16139 = getelementptr inbounds %struct.GPR, %struct.GPR* %16138, i32 0, i32 33
  %16140 = getelementptr inbounds %struct.Reg, %struct.Reg* %16139, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %16140 to i64*
  %16141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16142 = getelementptr inbounds %struct.GPR, %struct.GPR* %16141, i32 0, i32 1
  %16143 = getelementptr inbounds %struct.Reg, %struct.Reg* %16142, i32 0, i32 0
  %RAX.i486 = bitcast %union.anon* %16143 to i64*
  %16144 = load i64, i64* %PC.i485
  %16145 = add i64 %16144, 8
  store i64 %16145, i64* %PC.i485
  %16146 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %16146, i64* %RAX.i486, align 8
  store %struct.Memory* %loadMem_4b13ac, %struct.Memory** %MEMORY
  %loadMem_4b13b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16148 = getelementptr inbounds %struct.GPR, %struct.GPR* %16147, i32 0, i32 33
  %16149 = getelementptr inbounds %struct.Reg, %struct.Reg* %16148, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %16149 to i64*
  %16150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16151 = getelementptr inbounds %struct.GPR, %struct.GPR* %16150, i32 0, i32 5
  %16152 = getelementptr inbounds %struct.Reg, %struct.Reg* %16151, i32 0, i32 0
  %RCX.i483 = bitcast %union.anon* %16152 to i64*
  %16153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16154 = getelementptr inbounds %struct.GPR, %struct.GPR* %16153, i32 0, i32 15
  %16155 = getelementptr inbounds %struct.Reg, %struct.Reg* %16154, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %16155 to i64*
  %16156 = load i64, i64* %RBP.i484
  %16157 = sub i64 %16156, 35396
  %16158 = load i64, i64* %PC.i482
  %16159 = add i64 %16158, 7
  store i64 %16159, i64* %PC.i482
  %16160 = inttoptr i64 %16157 to i32*
  %16161 = load i32, i32* %16160
  %16162 = sext i32 %16161 to i64
  store i64 %16162, i64* %RCX.i483, align 8
  store %struct.Memory* %loadMem_4b13b4, %struct.Memory** %MEMORY
  %loadMem_4b13bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16164 = getelementptr inbounds %struct.GPR, %struct.GPR* %16163, i32 0, i32 33
  %16165 = getelementptr inbounds %struct.Reg, %struct.Reg* %16164, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %16165 to i64*
  %16166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16167 = getelementptr inbounds %struct.GPR, %struct.GPR* %16166, i32 0, i32 1
  %16168 = getelementptr inbounds %struct.Reg, %struct.Reg* %16167, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %16168 to i64*
  %16169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16170 = getelementptr inbounds %struct.GPR, %struct.GPR* %16169, i32 0, i32 5
  %16171 = getelementptr inbounds %struct.Reg, %struct.Reg* %16170, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %16171 to i64*
  %16172 = load i64, i64* %RAX.i480
  %16173 = load i64, i64* %RCX.i481
  %16174 = mul i64 %16173, 8
  %16175 = add i64 %16174, %16172
  %16176 = load i64, i64* %PC.i479
  %16177 = add i64 %16176, 4
  store i64 %16177, i64* %PC.i479
  %16178 = inttoptr i64 %16175 to i64*
  %16179 = load i64, i64* %16178
  store i64 %16179, i64* %RAX.i480, align 8
  store %struct.Memory* %loadMem_4b13bb, %struct.Memory** %MEMORY
  %loadMem_4b13bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %16180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16181 = getelementptr inbounds %struct.GPR, %struct.GPR* %16180, i32 0, i32 33
  %16182 = getelementptr inbounds %struct.Reg, %struct.Reg* %16181, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %16182 to i64*
  %16183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16184 = getelementptr inbounds %struct.GPR, %struct.GPR* %16183, i32 0, i32 5
  %16185 = getelementptr inbounds %struct.Reg, %struct.Reg* %16184, i32 0, i32 0
  %RCX.i477 = bitcast %union.anon* %16185 to i64*
  %16186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16187 = getelementptr inbounds %struct.GPR, %struct.GPR* %16186, i32 0, i32 15
  %16188 = getelementptr inbounds %struct.Reg, %struct.Reg* %16187, i32 0, i32 0
  %RBP.i478 = bitcast %union.anon* %16188 to i64*
  %16189 = load i64, i64* %RBP.i478
  %16190 = sub i64 %16189, 36
  %16191 = load i64, i64* %PC.i476
  %16192 = add i64 %16191, 4
  store i64 %16192, i64* %PC.i476
  %16193 = inttoptr i64 %16190 to i32*
  %16194 = load i32, i32* %16193
  %16195 = sext i32 %16194 to i64
  store i64 %16195, i64* %RCX.i477, align 8
  store %struct.Memory* %loadMem_4b13bf, %struct.Memory** %MEMORY
  %loadMem_4b13c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16197 = getelementptr inbounds %struct.GPR, %struct.GPR* %16196, i32 0, i32 33
  %16198 = getelementptr inbounds %struct.Reg, %struct.Reg* %16197, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %16198 to i64*
  %16199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16200 = getelementptr inbounds %struct.GPR, %struct.GPR* %16199, i32 0, i32 1
  %16201 = getelementptr inbounds %struct.Reg, %struct.Reg* %16200, i32 0, i32 0
  %RAX.i474 = bitcast %union.anon* %16201 to i64*
  %16202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16203 = getelementptr inbounds %struct.GPR, %struct.GPR* %16202, i32 0, i32 5
  %16204 = getelementptr inbounds %struct.Reg, %struct.Reg* %16203, i32 0, i32 0
  %RCX.i475 = bitcast %union.anon* %16204 to i64*
  %16205 = load i64, i64* %RAX.i474
  %16206 = load i64, i64* %RCX.i475
  %16207 = mul i64 %16206, 8
  %16208 = add i64 %16207, %16205
  %16209 = load i64, i64* %PC.i473
  %16210 = add i64 %16209, 4
  store i64 %16210, i64* %PC.i473
  %16211 = inttoptr i64 %16208 to i64*
  %16212 = load i64, i64* %16211
  store i64 %16212, i64* %RAX.i474, align 8
  store %struct.Memory* %loadMem_4b13c3, %struct.Memory** %MEMORY
  %loadMem_4b13c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16214 = getelementptr inbounds %struct.GPR, %struct.GPR* %16213, i32 0, i32 33
  %16215 = getelementptr inbounds %struct.Reg, %struct.Reg* %16214, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %16215 to i64*
  %16216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16217 = getelementptr inbounds %struct.GPR, %struct.GPR* %16216, i32 0, i32 5
  %16218 = getelementptr inbounds %struct.Reg, %struct.Reg* %16217, i32 0, i32 0
  %RCX.i471 = bitcast %union.anon* %16218 to i64*
  %16219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16220 = getelementptr inbounds %struct.GPR, %struct.GPR* %16219, i32 0, i32 15
  %16221 = getelementptr inbounds %struct.Reg, %struct.Reg* %16220, i32 0, i32 0
  %RBP.i472 = bitcast %union.anon* %16221 to i64*
  %16222 = load i64, i64* %RBP.i472
  %16223 = sub i64 %16222, 40
  %16224 = load i64, i64* %PC.i470
  %16225 = add i64 %16224, 4
  store i64 %16225, i64* %PC.i470
  %16226 = inttoptr i64 %16223 to i32*
  %16227 = load i32, i32* %16226
  %16228 = sext i32 %16227 to i64
  store i64 %16228, i64* %RCX.i471, align 8
  store %struct.Memory* %loadMem_4b13c7, %struct.Memory** %MEMORY
  %loadMem_4b13cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %16229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16230 = getelementptr inbounds %struct.GPR, %struct.GPR* %16229, i32 0, i32 33
  %16231 = getelementptr inbounds %struct.Reg, %struct.Reg* %16230, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %16231 to i64*
  %16232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16233 = getelementptr inbounds %struct.GPR, %struct.GPR* %16232, i32 0, i32 9
  %16234 = getelementptr inbounds %struct.Reg, %struct.Reg* %16233, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %16234 to i32*
  %16235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16236 = getelementptr inbounds %struct.GPR, %struct.GPR* %16235, i32 0, i32 1
  %16237 = getelementptr inbounds %struct.Reg, %struct.Reg* %16236, i32 0, i32 0
  %RAX.i468 = bitcast %union.anon* %16237 to i64*
  %16238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16239 = getelementptr inbounds %struct.GPR, %struct.GPR* %16238, i32 0, i32 5
  %16240 = getelementptr inbounds %struct.Reg, %struct.Reg* %16239, i32 0, i32 0
  %RCX.i469 = bitcast %union.anon* %16240 to i64*
  %16241 = load i64, i64* %RAX.i468
  %16242 = load i64, i64* %RCX.i469
  %16243 = mul i64 %16242, 4
  %16244 = add i64 %16243, %16241
  %16245 = load i32, i32* %ESI.i
  %16246 = zext i32 %16245 to i64
  %16247 = load i64, i64* %PC.i467
  %16248 = add i64 %16247, 3
  store i64 %16248, i64* %PC.i467
  %16249 = inttoptr i64 %16244 to i32*
  store i32 %16245, i32* %16249
  store %struct.Memory* %loadMem_4b13cb, %struct.Memory** %MEMORY
  %loadMem_4b13ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %16250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16251 = getelementptr inbounds %struct.GPR, %struct.GPR* %16250, i32 0, i32 33
  %16252 = getelementptr inbounds %struct.Reg, %struct.Reg* %16251, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %16252 to i64*
  %16253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16254 = getelementptr inbounds %struct.GPR, %struct.GPR* %16253, i32 0, i32 1
  %16255 = getelementptr inbounds %struct.Reg, %struct.Reg* %16254, i32 0, i32 0
  %RAX.i465 = bitcast %union.anon* %16255 to i64*
  %16256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16257 = getelementptr inbounds %struct.GPR, %struct.GPR* %16256, i32 0, i32 15
  %16258 = getelementptr inbounds %struct.Reg, %struct.Reg* %16257, i32 0, i32 0
  %RBP.i466 = bitcast %union.anon* %16258 to i64*
  %16259 = load i64, i64* %RBP.i466
  %16260 = sub i64 %16259, 40
  %16261 = load i64, i64* %PC.i464
  %16262 = add i64 %16261, 3
  store i64 %16262, i64* %PC.i464
  %16263 = inttoptr i64 %16260 to i32*
  %16264 = load i32, i32* %16263
  %16265 = zext i32 %16264 to i64
  store i64 %16265, i64* %RAX.i465, align 8
  store %struct.Memory* %loadMem_4b13ce, %struct.Memory** %MEMORY
  %loadMem_4b13d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16267 = getelementptr inbounds %struct.GPR, %struct.GPR* %16266, i32 0, i32 33
  %16268 = getelementptr inbounds %struct.Reg, %struct.Reg* %16267, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %16268 to i64*
  %16269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16270 = getelementptr inbounds %struct.GPR, %struct.GPR* %16269, i32 0, i32 1
  %16271 = getelementptr inbounds %struct.Reg, %struct.Reg* %16270, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %16271 to i64*
  %16272 = load i64, i64* %RAX.i463
  %16273 = load i64, i64* %PC.i462
  %16274 = add i64 %16273, 3
  store i64 %16274, i64* %PC.i462
  %16275 = trunc i64 %16272 to i32
  %16276 = add i32 1, %16275
  %16277 = zext i32 %16276 to i64
  store i64 %16277, i64* %RAX.i463, align 8
  %16278 = icmp ult i32 %16276, %16275
  %16279 = icmp ult i32 %16276, 1
  %16280 = or i1 %16278, %16279
  %16281 = zext i1 %16280 to i8
  %16282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16281, i8* %16282, align 1
  %16283 = and i32 %16276, 255
  %16284 = call i32 @llvm.ctpop.i32(i32 %16283)
  %16285 = trunc i32 %16284 to i8
  %16286 = and i8 %16285, 1
  %16287 = xor i8 %16286, 1
  %16288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16287, i8* %16288, align 1
  %16289 = xor i64 1, %16272
  %16290 = trunc i64 %16289 to i32
  %16291 = xor i32 %16290, %16276
  %16292 = lshr i32 %16291, 4
  %16293 = trunc i32 %16292 to i8
  %16294 = and i8 %16293, 1
  %16295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16294, i8* %16295, align 1
  %16296 = icmp eq i32 %16276, 0
  %16297 = zext i1 %16296 to i8
  %16298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16297, i8* %16298, align 1
  %16299 = lshr i32 %16276, 31
  %16300 = trunc i32 %16299 to i8
  %16301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16300, i8* %16301, align 1
  %16302 = lshr i32 %16275, 31
  %16303 = xor i32 %16299, %16302
  %16304 = add i32 %16303, %16299
  %16305 = icmp eq i32 %16304, 2
  %16306 = zext i1 %16305 to i8
  %16307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16306, i8* %16307, align 1
  store %struct.Memory* %loadMem_4b13d1, %struct.Memory** %MEMORY
  %loadMem_4b13d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16309 = getelementptr inbounds %struct.GPR, %struct.GPR* %16308, i32 0, i32 33
  %16310 = getelementptr inbounds %struct.Reg, %struct.Reg* %16309, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %16310 to i64*
  %16311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16312 = getelementptr inbounds %struct.GPR, %struct.GPR* %16311, i32 0, i32 1
  %16313 = getelementptr inbounds %struct.Reg, %struct.Reg* %16312, i32 0, i32 0
  %EAX.i460 = bitcast %union.anon* %16313 to i32*
  %16314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16315 = getelementptr inbounds %struct.GPR, %struct.GPR* %16314, i32 0, i32 15
  %16316 = getelementptr inbounds %struct.Reg, %struct.Reg* %16315, i32 0, i32 0
  %RBP.i461 = bitcast %union.anon* %16316 to i64*
  %16317 = load i64, i64* %RBP.i461
  %16318 = sub i64 %16317, 40
  %16319 = load i32, i32* %EAX.i460
  %16320 = zext i32 %16319 to i64
  %16321 = load i64, i64* %PC.i459
  %16322 = add i64 %16321, 3
  store i64 %16322, i64* %PC.i459
  %16323 = inttoptr i64 %16318 to i32*
  store i32 %16319, i32* %16323
  store %struct.Memory* %loadMem_4b13d4, %struct.Memory** %MEMORY
  %loadMem_4b13d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16325 = getelementptr inbounds %struct.GPR, %struct.GPR* %16324, i32 0, i32 33
  %16326 = getelementptr inbounds %struct.Reg, %struct.Reg* %16325, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %16326 to i64*
  %16327 = load i64, i64* %PC.i458
  %16328 = add i64 %16327, -171
  %16329 = load i64, i64* %PC.i458
  %16330 = add i64 %16329, 5
  store i64 %16330, i64* %PC.i458
  %16331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16328, i64* %16331, align 8
  store %struct.Memory* %loadMem_4b13d7, %struct.Memory** %MEMORY
  br label %block_.L_4b132c

block_.L_4b13dc:                                  ; preds = %block_.L_4b132c
  %loadMem_4b13dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %16332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16333 = getelementptr inbounds %struct.GPR, %struct.GPR* %16332, i32 0, i32 33
  %16334 = getelementptr inbounds %struct.Reg, %struct.Reg* %16333, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %16334 to i64*
  %16335 = load i64, i64* %PC.i457
  %16336 = add i64 %16335, 5
  %16337 = load i64, i64* %PC.i457
  %16338 = add i64 %16337, 5
  store i64 %16338, i64* %PC.i457
  %16339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16336, i64* %16339, align 8
  store %struct.Memory* %loadMem_4b13dc, %struct.Memory** %MEMORY
  br label %block_.L_4b13e1

block_.L_4b13e1:                                  ; preds = %block_.L_4b13dc
  %loadMem_4b13e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16341 = getelementptr inbounds %struct.GPR, %struct.GPR* %16340, i32 0, i32 33
  %16342 = getelementptr inbounds %struct.Reg, %struct.Reg* %16341, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %16342 to i64*
  %16343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16344 = getelementptr inbounds %struct.GPR, %struct.GPR* %16343, i32 0, i32 1
  %16345 = getelementptr inbounds %struct.Reg, %struct.Reg* %16344, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %16345 to i64*
  %16346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16347 = getelementptr inbounds %struct.GPR, %struct.GPR* %16346, i32 0, i32 15
  %16348 = getelementptr inbounds %struct.Reg, %struct.Reg* %16347, i32 0, i32 0
  %RBP.i456 = bitcast %union.anon* %16348 to i64*
  %16349 = load i64, i64* %RBP.i456
  %16350 = sub i64 %16349, 36
  %16351 = load i64, i64* %PC.i454
  %16352 = add i64 %16351, 3
  store i64 %16352, i64* %PC.i454
  %16353 = inttoptr i64 %16350 to i32*
  %16354 = load i32, i32* %16353
  %16355 = zext i32 %16354 to i64
  store i64 %16355, i64* %RAX.i455, align 8
  store %struct.Memory* %loadMem_4b13e1, %struct.Memory** %MEMORY
  %loadMem_4b13e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16357 = getelementptr inbounds %struct.GPR, %struct.GPR* %16356, i32 0, i32 33
  %16358 = getelementptr inbounds %struct.Reg, %struct.Reg* %16357, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %16358 to i64*
  %16359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16360 = getelementptr inbounds %struct.GPR, %struct.GPR* %16359, i32 0, i32 1
  %16361 = getelementptr inbounds %struct.Reg, %struct.Reg* %16360, i32 0, i32 0
  %RAX.i453 = bitcast %union.anon* %16361 to i64*
  %16362 = load i64, i64* %RAX.i453
  %16363 = load i64, i64* %PC.i452
  %16364 = add i64 %16363, 3
  store i64 %16364, i64* %PC.i452
  %16365 = trunc i64 %16362 to i32
  %16366 = add i32 1, %16365
  %16367 = zext i32 %16366 to i64
  store i64 %16367, i64* %RAX.i453, align 8
  %16368 = icmp ult i32 %16366, %16365
  %16369 = icmp ult i32 %16366, 1
  %16370 = or i1 %16368, %16369
  %16371 = zext i1 %16370 to i8
  %16372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16371, i8* %16372, align 1
  %16373 = and i32 %16366, 255
  %16374 = call i32 @llvm.ctpop.i32(i32 %16373)
  %16375 = trunc i32 %16374 to i8
  %16376 = and i8 %16375, 1
  %16377 = xor i8 %16376, 1
  %16378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16377, i8* %16378, align 1
  %16379 = xor i64 1, %16362
  %16380 = trunc i64 %16379 to i32
  %16381 = xor i32 %16380, %16366
  %16382 = lshr i32 %16381, 4
  %16383 = trunc i32 %16382 to i8
  %16384 = and i8 %16383, 1
  %16385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16384, i8* %16385, align 1
  %16386 = icmp eq i32 %16366, 0
  %16387 = zext i1 %16386 to i8
  %16388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16387, i8* %16388, align 1
  %16389 = lshr i32 %16366, 31
  %16390 = trunc i32 %16389 to i8
  %16391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16390, i8* %16391, align 1
  %16392 = lshr i32 %16365, 31
  %16393 = xor i32 %16389, %16392
  %16394 = add i32 %16393, %16389
  %16395 = icmp eq i32 %16394, 2
  %16396 = zext i1 %16395 to i8
  %16397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16396, i8* %16397, align 1
  store %struct.Memory* %loadMem_4b13e4, %struct.Memory** %MEMORY
  %loadMem_4b13e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16399 = getelementptr inbounds %struct.GPR, %struct.GPR* %16398, i32 0, i32 33
  %16400 = getelementptr inbounds %struct.Reg, %struct.Reg* %16399, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %16400 to i64*
  %16401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16402 = getelementptr inbounds %struct.GPR, %struct.GPR* %16401, i32 0, i32 1
  %16403 = getelementptr inbounds %struct.Reg, %struct.Reg* %16402, i32 0, i32 0
  %EAX.i450 = bitcast %union.anon* %16403 to i32*
  %16404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16405 = getelementptr inbounds %struct.GPR, %struct.GPR* %16404, i32 0, i32 15
  %16406 = getelementptr inbounds %struct.Reg, %struct.Reg* %16405, i32 0, i32 0
  %RBP.i451 = bitcast %union.anon* %16406 to i64*
  %16407 = load i64, i64* %RBP.i451
  %16408 = sub i64 %16407, 36
  %16409 = load i32, i32* %EAX.i450
  %16410 = zext i32 %16409 to i64
  %16411 = load i64, i64* %PC.i449
  %16412 = add i64 %16411, 3
  store i64 %16412, i64* %PC.i449
  %16413 = inttoptr i64 %16408 to i32*
  store i32 %16409, i32* %16413
  store %struct.Memory* %loadMem_4b13e7, %struct.Memory** %MEMORY
  %loadMem_4b13ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %16414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16415 = getelementptr inbounds %struct.GPR, %struct.GPR* %16414, i32 0, i32 33
  %16416 = getelementptr inbounds %struct.Reg, %struct.Reg* %16415, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %16416 to i64*
  %16417 = load i64, i64* %PC.i448
  %16418 = add i64 %16417, -220
  %16419 = load i64, i64* %PC.i448
  %16420 = add i64 %16419, 5
  store i64 %16420, i64* %PC.i448
  %16421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16418, i64* %16421, align 8
  store %struct.Memory* %loadMem_4b13ea, %struct.Memory** %MEMORY
  br label %block_.L_4b130e

block_.L_4b13ef:                                  ; preds = %block_.L_4b130e
  %loadMem_4b13ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %16422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16423 = getelementptr inbounds %struct.GPR, %struct.GPR* %16422, i32 0, i32 33
  %16424 = getelementptr inbounds %struct.Reg, %struct.Reg* %16423, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %16424 to i64*
  %16425 = load i64, i64* %PC.i447
  %16426 = add i64 %16425, 5
  %16427 = load i64, i64* %PC.i447
  %16428 = add i64 %16427, 5
  store i64 %16428, i64* %PC.i447
  %16429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16426, i64* %16429, align 8
  store %struct.Memory* %loadMem_4b13ef, %struct.Memory** %MEMORY
  br label %block_.L_4b13f4

block_.L_4b13f4:                                  ; preds = %block_.L_4b13ef
  %loadMem_4b13f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16431 = getelementptr inbounds %struct.GPR, %struct.GPR* %16430, i32 0, i32 33
  %16432 = getelementptr inbounds %struct.Reg, %struct.Reg* %16431, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %16432 to i64*
  %16433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16434 = getelementptr inbounds %struct.GPR, %struct.GPR* %16433, i32 0, i32 1
  %16435 = getelementptr inbounds %struct.Reg, %struct.Reg* %16434, i32 0, i32 0
  %RAX.i445 = bitcast %union.anon* %16435 to i64*
  %16436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16437 = getelementptr inbounds %struct.GPR, %struct.GPR* %16436, i32 0, i32 15
  %16438 = getelementptr inbounds %struct.Reg, %struct.Reg* %16437, i32 0, i32 0
  %RBP.i446 = bitcast %union.anon* %16438 to i64*
  %16439 = load i64, i64* %RBP.i446
  %16440 = sub i64 %16439, 35396
  %16441 = load i64, i64* %PC.i444
  %16442 = add i64 %16441, 6
  store i64 %16442, i64* %PC.i444
  %16443 = inttoptr i64 %16440 to i32*
  %16444 = load i32, i32* %16443
  %16445 = zext i32 %16444 to i64
  store i64 %16445, i64* %RAX.i445, align 8
  store %struct.Memory* %loadMem_4b13f4, %struct.Memory** %MEMORY
  %loadMem_4b13fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %16446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16447 = getelementptr inbounds %struct.GPR, %struct.GPR* %16446, i32 0, i32 33
  %16448 = getelementptr inbounds %struct.Reg, %struct.Reg* %16447, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %16448 to i64*
  %16449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16450 = getelementptr inbounds %struct.GPR, %struct.GPR* %16449, i32 0, i32 1
  %16451 = getelementptr inbounds %struct.Reg, %struct.Reg* %16450, i32 0, i32 0
  %RAX.i443 = bitcast %union.anon* %16451 to i64*
  %16452 = load i64, i64* %RAX.i443
  %16453 = load i64, i64* %PC.i442
  %16454 = add i64 %16453, 3
  store i64 %16454, i64* %PC.i442
  %16455 = trunc i64 %16452 to i32
  %16456 = add i32 1, %16455
  %16457 = zext i32 %16456 to i64
  store i64 %16457, i64* %RAX.i443, align 8
  %16458 = icmp ult i32 %16456, %16455
  %16459 = icmp ult i32 %16456, 1
  %16460 = or i1 %16458, %16459
  %16461 = zext i1 %16460 to i8
  %16462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16461, i8* %16462, align 1
  %16463 = and i32 %16456, 255
  %16464 = call i32 @llvm.ctpop.i32(i32 %16463)
  %16465 = trunc i32 %16464 to i8
  %16466 = and i8 %16465, 1
  %16467 = xor i8 %16466, 1
  %16468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16467, i8* %16468, align 1
  %16469 = xor i64 1, %16452
  %16470 = trunc i64 %16469 to i32
  %16471 = xor i32 %16470, %16456
  %16472 = lshr i32 %16471, 4
  %16473 = trunc i32 %16472 to i8
  %16474 = and i8 %16473, 1
  %16475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16474, i8* %16475, align 1
  %16476 = icmp eq i32 %16456, 0
  %16477 = zext i1 %16476 to i8
  %16478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16477, i8* %16478, align 1
  %16479 = lshr i32 %16456, 31
  %16480 = trunc i32 %16479 to i8
  %16481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16480, i8* %16481, align 1
  %16482 = lshr i32 %16455, 31
  %16483 = xor i32 %16479, %16482
  %16484 = add i32 %16483, %16479
  %16485 = icmp eq i32 %16484, 2
  %16486 = zext i1 %16485 to i8
  %16487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16486, i8* %16487, align 1
  store %struct.Memory* %loadMem_4b13fa, %struct.Memory** %MEMORY
  %loadMem_4b13fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %16488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16489 = getelementptr inbounds %struct.GPR, %struct.GPR* %16488, i32 0, i32 33
  %16490 = getelementptr inbounds %struct.Reg, %struct.Reg* %16489, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %16490 to i64*
  %16491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16492 = getelementptr inbounds %struct.GPR, %struct.GPR* %16491, i32 0, i32 1
  %16493 = getelementptr inbounds %struct.Reg, %struct.Reg* %16492, i32 0, i32 0
  %EAX.i440 = bitcast %union.anon* %16493 to i32*
  %16494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16495 = getelementptr inbounds %struct.GPR, %struct.GPR* %16494, i32 0, i32 15
  %16496 = getelementptr inbounds %struct.Reg, %struct.Reg* %16495, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %16496 to i64*
  %16497 = load i64, i64* %RBP.i441
  %16498 = sub i64 %16497, 35396
  %16499 = load i32, i32* %EAX.i440
  %16500 = zext i32 %16499 to i64
  %16501 = load i64, i64* %PC.i439
  %16502 = add i64 %16501, 6
  store i64 %16502, i64* %PC.i439
  %16503 = inttoptr i64 %16498 to i32*
  store i32 %16499, i32* %16503
  store %struct.Memory* %loadMem_4b13fd, %struct.Memory** %MEMORY
  %loadMem_4b1403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16505 = getelementptr inbounds %struct.GPR, %struct.GPR* %16504, i32 0, i32 33
  %16506 = getelementptr inbounds %struct.Reg, %struct.Reg* %16505, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %16506 to i64*
  %16507 = load i64, i64* %PC.i438
  %16508 = add i64 %16507, -275
  %16509 = load i64, i64* %PC.i438
  %16510 = add i64 %16509, 5
  store i64 %16510, i64* %PC.i438
  %16511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16508, i64* %16511, align 8
  store %struct.Memory* %loadMem_4b1403, %struct.Memory** %MEMORY
  br label %block_.L_4b12f0

block_.L_4b1408:                                  ; preds = %block_.L_4b12f0
  %loadMem_4b1408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16513 = getelementptr inbounds %struct.GPR, %struct.GPR* %16512, i32 0, i32 33
  %16514 = getelementptr inbounds %struct.Reg, %struct.Reg* %16513, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %16514 to i64*
  %16515 = load i64, i64* %PC.i437
  %16516 = add i64 %16515, 338
  %16517 = load i64, i64* %PC.i437
  %16518 = add i64 %16517, 5
  store i64 %16518, i64* %PC.i437
  %16519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %16516, i64* %16519, align 8
  store %struct.Memory* %loadMem_4b1408, %struct.Memory** %MEMORY
  br label %block_.L_4b155a

block_.L_4b140d:                                  ; preds = %block_.L_4b12d1
  %loadMem_4b140d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16521 = getelementptr inbounds %struct.GPR, %struct.GPR* %16520, i32 0, i32 33
  %16522 = getelementptr inbounds %struct.Reg, %struct.Reg* %16521, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %16522 to i64*
  %16523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16524 = getelementptr inbounds %struct.GPR, %struct.GPR* %16523, i32 0, i32 15
  %16525 = getelementptr inbounds %struct.Reg, %struct.Reg* %16524, i32 0, i32 0
  %RBP.i436 = bitcast %union.anon* %16525 to i64*
  %16526 = load i64, i64* %RBP.i436
  %16527 = sub i64 %16526, 35396
  %16528 = load i64, i64* %PC.i435
  %16529 = add i64 %16528, 10
  store i64 %16529, i64* %PC.i435
  %16530 = inttoptr i64 %16527 to i32*
  store i32 0, i32* %16530
  store %struct.Memory* %loadMem_4b140d, %struct.Memory** %MEMORY
  br label %block_.L_4b1417

block_.L_4b1417:                                  ; preds = %block_.L_4b1541, %block_.L_4b140d
  %loadMem_4b1417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16532 = getelementptr inbounds %struct.GPR, %struct.GPR* %16531, i32 0, i32 33
  %16533 = getelementptr inbounds %struct.Reg, %struct.Reg* %16532, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %16533 to i64*
  %16534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16535 = getelementptr inbounds %struct.GPR, %struct.GPR* %16534, i32 0, i32 1
  %16536 = getelementptr inbounds %struct.Reg, %struct.Reg* %16535, i32 0, i32 0
  %RAX.i433 = bitcast %union.anon* %16536 to i64*
  %16537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16538 = getelementptr inbounds %struct.GPR, %struct.GPR* %16537, i32 0, i32 15
  %16539 = getelementptr inbounds %struct.Reg, %struct.Reg* %16538, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %16539 to i64*
  %16540 = load i64, i64* %RBP.i434
  %16541 = sub i64 %16540, 35396
  %16542 = load i64, i64* %PC.i432
  %16543 = add i64 %16542, 6
  store i64 %16543, i64* %PC.i432
  %16544 = inttoptr i64 %16541 to i32*
  %16545 = load i32, i32* %16544
  %16546 = zext i32 %16545 to i64
  store i64 %16546, i64* %RAX.i433, align 8
  store %struct.Memory* %loadMem_4b1417, %struct.Memory** %MEMORY
  %loadMem_4b141d = load %struct.Memory*, %struct.Memory** %MEMORY
  %16547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16548 = getelementptr inbounds %struct.GPR, %struct.GPR* %16547, i32 0, i32 33
  %16549 = getelementptr inbounds %struct.Reg, %struct.Reg* %16548, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %16549 to i64*
  %16550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16551 = getelementptr inbounds %struct.GPR, %struct.GPR* %16550, i32 0, i32 5
  %16552 = getelementptr inbounds %struct.Reg, %struct.Reg* %16551, i32 0, i32 0
  %RCX.i430 = bitcast %union.anon* %16552 to i64*
  %16553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16554 = getelementptr inbounds %struct.GPR, %struct.GPR* %16553, i32 0, i32 15
  %16555 = getelementptr inbounds %struct.Reg, %struct.Reg* %16554, i32 0, i32 0
  %RBP.i431 = bitcast %union.anon* %16555 to i64*
  %16556 = load i64, i64* %RBP.i431
  %16557 = sub i64 %16556, 804
  %16558 = load i64, i64* %PC.i429
  %16559 = add i64 %16558, 6
  store i64 %16559, i64* %PC.i429
  %16560 = inttoptr i64 %16557 to i32*
  %16561 = load i32, i32* %16560
  %16562 = zext i32 %16561 to i64
  store i64 %16562, i64* %RCX.i430, align 8
  store %struct.Memory* %loadMem_4b141d, %struct.Memory** %MEMORY
  %loadMem_4b1423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16564 = getelementptr inbounds %struct.GPR, %struct.GPR* %16563, i32 0, i32 33
  %16565 = getelementptr inbounds %struct.Reg, %struct.Reg* %16564, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %16565 to i64*
  %16566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16567 = getelementptr inbounds %struct.GPR, %struct.GPR* %16566, i32 0, i32 5
  %16568 = getelementptr inbounds %struct.Reg, %struct.Reg* %16567, i32 0, i32 0
  %RCX.i428 = bitcast %union.anon* %16568 to i64*
  %16569 = load i64, i64* %RCX.i428
  %16570 = load i64, i64* %PC.i427
  %16571 = add i64 %16570, 3
  store i64 %16571, i64* %PC.i427
  %16572 = trunc i64 %16569 to i32
  %16573 = add i32 2, %16572
  %16574 = zext i32 %16573 to i64
  store i64 %16574, i64* %RCX.i428, align 8
  %16575 = icmp ult i32 %16573, %16572
  %16576 = icmp ult i32 %16573, 2
  %16577 = or i1 %16575, %16576
  %16578 = zext i1 %16577 to i8
  %16579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16578, i8* %16579, align 1
  %16580 = and i32 %16573, 255
  %16581 = call i32 @llvm.ctpop.i32(i32 %16580)
  %16582 = trunc i32 %16581 to i8
  %16583 = and i8 %16582, 1
  %16584 = xor i8 %16583, 1
  %16585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16584, i8* %16585, align 1
  %16586 = xor i64 2, %16569
  %16587 = trunc i64 %16586 to i32
  %16588 = xor i32 %16587, %16573
  %16589 = lshr i32 %16588, 4
  %16590 = trunc i32 %16589 to i8
  %16591 = and i8 %16590, 1
  %16592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16591, i8* %16592, align 1
  %16593 = icmp eq i32 %16573, 0
  %16594 = zext i1 %16593 to i8
  %16595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16594, i8* %16595, align 1
  %16596 = lshr i32 %16573, 31
  %16597 = trunc i32 %16596 to i8
  %16598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16597, i8* %16598, align 1
  %16599 = lshr i32 %16572, 31
  %16600 = xor i32 %16596, %16599
  %16601 = add i32 %16600, %16596
  %16602 = icmp eq i32 %16601, 2
  %16603 = zext i1 %16602 to i8
  %16604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16603, i8* %16604, align 1
  store %struct.Memory* %loadMem_4b1423, %struct.Memory** %MEMORY
  %loadMem_4b1426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16606 = getelementptr inbounds %struct.GPR, %struct.GPR* %16605, i32 0, i32 33
  %16607 = getelementptr inbounds %struct.Reg, %struct.Reg* %16606, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %16607 to i64*
  %16608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16609 = getelementptr inbounds %struct.GPR, %struct.GPR* %16608, i32 0, i32 1
  %16610 = getelementptr inbounds %struct.Reg, %struct.Reg* %16609, i32 0, i32 0
  %EAX.i425 = bitcast %union.anon* %16610 to i32*
  %16611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16612 = getelementptr inbounds %struct.GPR, %struct.GPR* %16611, i32 0, i32 5
  %16613 = getelementptr inbounds %struct.Reg, %struct.Reg* %16612, i32 0, i32 0
  %ECX.i426 = bitcast %union.anon* %16613 to i32*
  %16614 = load i32, i32* %EAX.i425
  %16615 = zext i32 %16614 to i64
  %16616 = load i32, i32* %ECX.i426
  %16617 = zext i32 %16616 to i64
  %16618 = load i64, i64* %PC.i424
  %16619 = add i64 %16618, 2
  store i64 %16619, i64* %PC.i424
  %16620 = sub i32 %16614, %16616
  %16621 = icmp ult i32 %16614, %16616
  %16622 = zext i1 %16621 to i8
  %16623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16622, i8* %16623, align 1
  %16624 = and i32 %16620, 255
  %16625 = call i32 @llvm.ctpop.i32(i32 %16624)
  %16626 = trunc i32 %16625 to i8
  %16627 = and i8 %16626, 1
  %16628 = xor i8 %16627, 1
  %16629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16628, i8* %16629, align 1
  %16630 = xor i64 %16617, %16615
  %16631 = trunc i64 %16630 to i32
  %16632 = xor i32 %16631, %16620
  %16633 = lshr i32 %16632, 4
  %16634 = trunc i32 %16633 to i8
  %16635 = and i8 %16634, 1
  %16636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16635, i8* %16636, align 1
  %16637 = icmp eq i32 %16620, 0
  %16638 = zext i1 %16637 to i8
  %16639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16638, i8* %16639, align 1
  %16640 = lshr i32 %16620, 31
  %16641 = trunc i32 %16640 to i8
  %16642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16641, i8* %16642, align 1
  %16643 = lshr i32 %16614, 31
  %16644 = lshr i32 %16616, 31
  %16645 = xor i32 %16644, %16643
  %16646 = xor i32 %16640, %16643
  %16647 = add i32 %16646, %16645
  %16648 = icmp eq i32 %16647, 2
  %16649 = zext i1 %16648 to i8
  %16650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16649, i8* %16650, align 1
  store %struct.Memory* %loadMem_4b1426, %struct.Memory** %MEMORY
  %loadMem_4b1428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16652 = getelementptr inbounds %struct.GPR, %struct.GPR* %16651, i32 0, i32 33
  %16653 = getelementptr inbounds %struct.Reg, %struct.Reg* %16652, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %16653 to i64*
  %16654 = load i64, i64* %PC.i423
  %16655 = add i64 %16654, 301
  %16656 = load i64, i64* %PC.i423
  %16657 = add i64 %16656, 6
  %16658 = load i64, i64* %PC.i423
  %16659 = add i64 %16658, 6
  store i64 %16659, i64* %PC.i423
  %16660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16661 = load i8, i8* %16660, align 1
  %16662 = icmp ne i8 %16661, 0
  %16663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16664 = load i8, i8* %16663, align 1
  %16665 = icmp ne i8 %16664, 0
  %16666 = xor i1 %16662, %16665
  %16667 = xor i1 %16666, true
  %16668 = zext i1 %16667 to i8
  store i8 %16668, i8* %BRANCH_TAKEN, align 1
  %16669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16670 = select i1 %16666, i64 %16657, i64 %16655
  store i64 %16670, i64* %16669, align 8
  store %struct.Memory* %loadMem_4b1428, %struct.Memory** %MEMORY
  %loadBr_4b1428 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1428 = icmp eq i8 %loadBr_4b1428, 1
  br i1 %cmpBr_4b1428, label %block_.L_4b1555, label %block_4b142e

block_4b142e:                                     ; preds = %block_.L_4b1417
  %loadMem_4b142e = load %struct.Memory*, %struct.Memory** %MEMORY
  %16671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16672 = getelementptr inbounds %struct.GPR, %struct.GPR* %16671, i32 0, i32 33
  %16673 = getelementptr inbounds %struct.Reg, %struct.Reg* %16672, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %16673 to i64*
  %16674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16675 = getelementptr inbounds %struct.GPR, %struct.GPR* %16674, i32 0, i32 15
  %16676 = getelementptr inbounds %struct.Reg, %struct.Reg* %16675, i32 0, i32 0
  %RBP.i422 = bitcast %union.anon* %16676 to i64*
  %16677 = load i64, i64* %RBP.i422
  %16678 = sub i64 %16677, 36
  %16679 = load i64, i64* %PC.i421
  %16680 = add i64 %16679, 7
  store i64 %16680, i64* %PC.i421
  %16681 = inttoptr i64 %16678 to i32*
  store i32 0, i32* %16681
  store %struct.Memory* %loadMem_4b142e, %struct.Memory** %MEMORY
  br label %block_.L_4b1435

block_.L_4b1435:                                  ; preds = %routine_shll__cl___eax.exit, %block_4b142e
  %loadMem_4b1435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16683 = getelementptr inbounds %struct.GPR, %struct.GPR* %16682, i32 0, i32 33
  %16684 = getelementptr inbounds %struct.Reg, %struct.Reg* %16683, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %16684 to i64*
  %16685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16686 = getelementptr inbounds %struct.GPR, %struct.GPR* %16685, i32 0, i32 1
  %16687 = getelementptr inbounds %struct.Reg, %struct.Reg* %16686, i32 0, i32 0
  %RAX.i419 = bitcast %union.anon* %16687 to i64*
  %16688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16689 = getelementptr inbounds %struct.GPR, %struct.GPR* %16688, i32 0, i32 15
  %16690 = getelementptr inbounds %struct.Reg, %struct.Reg* %16689, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %16690 to i64*
  %16691 = load i64, i64* %RBP.i420
  %16692 = sub i64 %16691, 36
  %16693 = load i64, i64* %PC.i418
  %16694 = add i64 %16693, 3
  store i64 %16694, i64* %PC.i418
  %16695 = inttoptr i64 %16692 to i32*
  %16696 = load i32, i32* %16695
  %16697 = zext i32 %16696 to i64
  store i64 %16697, i64* %RAX.i419, align 8
  store %struct.Memory* %loadMem_4b1435, %struct.Memory** %MEMORY
  %loadMem_4b1438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16699 = getelementptr inbounds %struct.GPR, %struct.GPR* %16698, i32 0, i32 33
  %16700 = getelementptr inbounds %struct.Reg, %struct.Reg* %16699, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %16700 to i64*
  %16701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16702 = getelementptr inbounds %struct.GPR, %struct.GPR* %16701, i32 0, i32 5
  %16703 = getelementptr inbounds %struct.Reg, %struct.Reg* %16702, i32 0, i32 0
  %RCX.i416 = bitcast %union.anon* %16703 to i64*
  %16704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16705 = getelementptr inbounds %struct.GPR, %struct.GPR* %16704, i32 0, i32 15
  %16706 = getelementptr inbounds %struct.Reg, %struct.Reg* %16705, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %16706 to i64*
  %16707 = load i64, i64* %RBP.i417
  %16708 = sub i64 %16707, 35396
  %16709 = load i64, i64* %PC.i415
  %16710 = add i64 %16709, 7
  store i64 %16710, i64* %PC.i415
  %16711 = inttoptr i64 %16708 to i32*
  %16712 = load i32, i32* %16711
  %16713 = sext i32 %16712 to i64
  store i64 %16713, i64* %RCX.i416, align 8
  store %struct.Memory* %loadMem_4b1438, %struct.Memory** %MEMORY
  %loadMem_4b143f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16715 = getelementptr inbounds %struct.GPR, %struct.GPR* %16714, i32 0, i32 33
  %16716 = getelementptr inbounds %struct.Reg, %struct.Reg* %16715, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %16716 to i64*
  %16717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16718 = getelementptr inbounds %struct.GPR, %struct.GPR* %16717, i32 0, i32 1
  %16719 = getelementptr inbounds %struct.Reg, %struct.Reg* %16718, i32 0, i32 0
  %EAX.i413 = bitcast %union.anon* %16719 to i32*
  %16720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16721 = getelementptr inbounds %struct.GPR, %struct.GPR* %16720, i32 0, i32 5
  %16722 = getelementptr inbounds %struct.Reg, %struct.Reg* %16721, i32 0, i32 0
  %RCX.i414 = bitcast %union.anon* %16722 to i64*
  %16723 = load i32, i32* %EAX.i413
  %16724 = zext i32 %16723 to i64
  %16725 = load i64, i64* %RCX.i414
  %16726 = mul i64 %16725, 4
  %16727 = add i64 %16726, 7489456
  %16728 = load i64, i64* %PC.i412
  %16729 = add i64 %16728, 7
  store i64 %16729, i64* %PC.i412
  %16730 = inttoptr i64 %16727 to i32*
  %16731 = load i32, i32* %16730
  %16732 = sub i32 %16723, %16731
  %16733 = icmp ult i32 %16723, %16731
  %16734 = zext i1 %16733 to i8
  %16735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16734, i8* %16735, align 1
  %16736 = and i32 %16732, 255
  %16737 = call i32 @llvm.ctpop.i32(i32 %16736)
  %16738 = trunc i32 %16737 to i8
  %16739 = and i8 %16738, 1
  %16740 = xor i8 %16739, 1
  %16741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16740, i8* %16741, align 1
  %16742 = xor i32 %16731, %16723
  %16743 = xor i32 %16742, %16732
  %16744 = lshr i32 %16743, 4
  %16745 = trunc i32 %16744 to i8
  %16746 = and i8 %16745, 1
  %16747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %16746, i8* %16747, align 1
  %16748 = icmp eq i32 %16732, 0
  %16749 = zext i1 %16748 to i8
  %16750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16749, i8* %16750, align 1
  %16751 = lshr i32 %16732, 31
  %16752 = trunc i32 %16751 to i8
  %16753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %16752, i8* %16753, align 1
  %16754 = lshr i32 %16723, 31
  %16755 = lshr i32 %16731, 31
  %16756 = xor i32 %16755, %16754
  %16757 = xor i32 %16751, %16754
  %16758 = add i32 %16757, %16756
  %16759 = icmp eq i32 %16758, 2
  %16760 = zext i1 %16759 to i8
  %16761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %16760, i8* %16761, align 1
  store %struct.Memory* %loadMem_4b143f, %struct.Memory** %MEMORY
  %loadMem_4b1446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16763 = getelementptr inbounds %struct.GPR, %struct.GPR* %16762, i32 0, i32 33
  %16764 = getelementptr inbounds %struct.Reg, %struct.Reg* %16763, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %16764 to i64*
  %16765 = load i64, i64* %PC.i411
  %16766 = add i64 %16765, 246
  %16767 = load i64, i64* %PC.i411
  %16768 = add i64 %16767, 6
  %16769 = load i64, i64* %PC.i411
  %16770 = add i64 %16769, 6
  store i64 %16770, i64* %PC.i411
  %16771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16772 = load i8, i8* %16771, align 1
  %16773 = icmp ne i8 %16772, 0
  %16774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16775 = load i8, i8* %16774, align 1
  %16776 = icmp ne i8 %16775, 0
  %16777 = xor i1 %16773, %16776
  %16778 = xor i1 %16777, true
  %16779 = zext i1 %16778 to i8
  store i8 %16779, i8* %BRANCH_TAKEN, align 1
  %16780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %16781 = select i1 %16777, i64 %16768, i64 %16766
  store i64 %16781, i64* %16780, align 8
  store %struct.Memory* %loadMem_4b1446, %struct.Memory** %MEMORY
  %loadBr_4b1446 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1446 = icmp eq i8 %loadBr_4b1446, 1
  br i1 %cmpBr_4b1446, label %block_.L_4b153c, label %block_4b144c

block_4b144c:                                     ; preds = %block_.L_4b1435
  %loadMem_4b144c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16783 = getelementptr inbounds %struct.GPR, %struct.GPR* %16782, i32 0, i32 33
  %16784 = getelementptr inbounds %struct.Reg, %struct.Reg* %16783, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %16784 to i64*
  %16785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16786 = getelementptr inbounds %struct.GPR, %struct.GPR* %16785, i32 0, i32 1
  %16787 = getelementptr inbounds %struct.Reg, %struct.Reg* %16786, i32 0, i32 0
  %RAX.i410 = bitcast %union.anon* %16787 to i64*
  %16788 = load i64, i64* %PC.i409
  %16789 = add i64 %16788, 5
  store i64 %16789, i64* %PC.i409
  store i64 1, i64* %RAX.i410, align 8
  store %struct.Memory* %loadMem_4b144c, %struct.Memory** %MEMORY
  %loadMem_4b1451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16791 = getelementptr inbounds %struct.GPR, %struct.GPR* %16790, i32 0, i32 33
  %16792 = getelementptr inbounds %struct.Reg, %struct.Reg* %16791, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %16792 to i64*
  %16793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16794 = getelementptr inbounds %struct.GPR, %struct.GPR* %16793, i32 0, i32 5
  %16795 = getelementptr inbounds %struct.Reg, %struct.Reg* %16794, i32 0, i32 0
  %RCX.i408 = bitcast %union.anon* %16795 to i64*
  %16796 = load i64, i64* %PC.i407
  %16797 = add i64 %16796, 7
  store i64 %16797, i64* %PC.i407
  %16798 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %16799 = zext i32 %16798 to i64
  store i64 %16799, i64* %RCX.i408, align 8
  store %struct.Memory* %loadMem_4b1451, %struct.Memory** %MEMORY
  %loadMem_4b1458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16801 = getelementptr inbounds %struct.GPR, %struct.GPR* %16800, i32 0, i32 33
  %16802 = getelementptr inbounds %struct.Reg, %struct.Reg* %16801, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %16802 to i64*
  %16803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16804 = getelementptr inbounds %struct.GPR, %struct.GPR* %16803, i32 0, i32 1
  %16805 = getelementptr inbounds %struct.Reg, %struct.Reg* %16804, i32 0, i32 0
  %EAX.i405 = bitcast %union.anon* %16805 to i32*
  %16806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16807 = getelementptr inbounds %struct.GPR, %struct.GPR* %16806, i32 0, i32 7
  %16808 = getelementptr inbounds %struct.Reg, %struct.Reg* %16807, i32 0, i32 0
  %RDX.i406 = bitcast %union.anon* %16808 to i64*
  %16809 = load i32, i32* %EAX.i405
  %16810 = zext i32 %16809 to i64
  %16811 = load i64, i64* %PC.i404
  %16812 = add i64 %16811, 2
  store i64 %16812, i64* %PC.i404
  %16813 = and i64 %16810, 4294967295
  store i64 %16813, i64* %RDX.i406, align 8
  store %struct.Memory* %loadMem_4b1458, %struct.Memory** %MEMORY
  %loadMem_4b145a = load %struct.Memory*, %struct.Memory** %MEMORY
  %16814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16815 = getelementptr inbounds %struct.GPR, %struct.GPR* %16814, i32 0, i32 33
  %16816 = getelementptr inbounds %struct.Reg, %struct.Reg* %16815, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %16816 to i64*
  %16817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16818 = getelementptr inbounds %struct.GPR, %struct.GPR* %16817, i32 0, i32 5
  %16819 = getelementptr inbounds %struct.Reg, %struct.Reg* %16818, i32 0, i32 0
  %16820 = bitcast %union.anon* %16819 to %struct.anon.2*
  %CL.i401 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %16820, i32 0, i32 0
  %16821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16822 = getelementptr inbounds %struct.GPR, %struct.GPR* %16821, i32 0, i32 7
  %16823 = getelementptr inbounds %struct.Reg, %struct.Reg* %16822, i32 0, i32 0
  %RDX.i402 = bitcast %union.anon* %16823 to i64*
  %16824 = load i64, i64* %RDX.i402
  %16825 = load i8, i8* %CL.i401
  %16826 = zext i8 %16825 to i64
  %16827 = load i64, i64* %PC.i400
  %16828 = add i64 %16827, 2
  store i64 %16828, i64* %PC.i400
  %16829 = trunc i64 %16826 to i5
  switch i5 %16829, label %16836 [
    i5 0, label %routine_shll__cl___edx.exit403
    i5 1, label %16830
  ]

; <label>:16830:                                  ; preds = %block_4b144c
  %16831 = trunc i64 %16824 to i32
  %16832 = shl i32 %16831, 1
  %16833 = icmp slt i32 %16831, 0
  %16834 = icmp slt i32 %16832, 0
  %16835 = xor i1 %16833, %16834
  br label %16845

; <label>:16836:                                  ; preds = %block_4b144c
  %16837 = and i64 %16826, 31
  %16838 = add i64 %16837, 4294967295
  %16839 = and i64 %16824, 4294967295
  %16840 = and i64 %16838, 4294967295
  %16841 = shl i64 %16839, %16840
  %16842 = trunc i64 %16841 to i32
  %16843 = icmp slt i32 %16842, 0
  %16844 = shl i32 %16842, 1
  br label %16845

; <label>:16845:                                  ; preds = %16836, %16830
  %16846 = phi i1 [ %16833, %16830 ], [ %16843, %16836 ]
  %16847 = phi i1 [ %16835, %16830 ], [ false, %16836 ]
  %16848 = phi i32 [ %16832, %16830 ], [ %16844, %16836 ]
  %16849 = zext i32 %16848 to i64
  store i64 %16849, i64* %RDX.i402, align 8
  %16850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16851 = zext i1 %16846 to i8
  store i8 %16851, i8* %16850, align 1
  %16852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %16853 = and i32 %16848, 254
  %16854 = call i32 @llvm.ctpop.i32(i32 %16853)
  %16855 = trunc i32 %16854 to i8
  %16856 = and i8 %16855, 1
  %16857 = xor i8 %16856, 1
  store i8 %16857, i8* %16852, align 1
  %16858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16858, align 1
  %16859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %16860 = icmp eq i32 %16848, 0
  %16861 = zext i1 %16860 to i8
  store i8 %16861, i8* %16859, align 1
  %16862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16863 = lshr i32 %16848, 31
  %16864 = trunc i32 %16863 to i8
  store i8 %16864, i8* %16862, align 1
  %16865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16866 = zext i1 %16847 to i8
  store i8 %16866, i8* %16865, align 1
  br label %routine_shll__cl___edx.exit403

routine_shll__cl___edx.exit403:                   ; preds = %block_4b144c, %16845
  store %struct.Memory* %loadMem_4b145a, %struct.Memory** %MEMORY
  %loadMem_4b145c = load %struct.Memory*, %struct.Memory** %MEMORY
  %16867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16868 = getelementptr inbounds %struct.GPR, %struct.GPR* %16867, i32 0, i32 33
  %16869 = getelementptr inbounds %struct.Reg, %struct.Reg* %16868, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %16869 to i64*
  %16870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16871 = getelementptr inbounds %struct.GPR, %struct.GPR* %16870, i32 0, i32 9
  %16872 = getelementptr inbounds %struct.Reg, %struct.Reg* %16871, i32 0, i32 0
  %RSI.i399 = bitcast %union.anon* %16872 to i64*
  %16873 = load i64, i64* %PC.i398
  %16874 = add i64 %16873, 8
  store i64 %16874, i64* %PC.i398
  %16875 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %16875, i64* %RSI.i399, align 8
  store %struct.Memory* %loadMem_4b145c, %struct.Memory** %MEMORY
  %loadMem_4b1464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16877 = getelementptr inbounds %struct.GPR, %struct.GPR* %16876, i32 0, i32 33
  %16878 = getelementptr inbounds %struct.Reg, %struct.Reg* %16877, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %16878 to i64*
  %16879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16880 = getelementptr inbounds %struct.GPR, %struct.GPR* %16879, i32 0, i32 11
  %16881 = getelementptr inbounds %struct.Reg, %struct.Reg* %16880, i32 0, i32 0
  %RDI.i396 = bitcast %union.anon* %16881 to i64*
  %16882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16883 = getelementptr inbounds %struct.GPR, %struct.GPR* %16882, i32 0, i32 15
  %16884 = getelementptr inbounds %struct.Reg, %struct.Reg* %16883, i32 0, i32 0
  %RBP.i397 = bitcast %union.anon* %16884 to i64*
  %16885 = load i64, i64* %RBP.i397
  %16886 = sub i64 %16885, 35396
  %16887 = load i64, i64* %PC.i395
  %16888 = add i64 %16887, 7
  store i64 %16888, i64* %PC.i395
  %16889 = inttoptr i64 %16886 to i32*
  %16890 = load i32, i32* %16889
  %16891 = sext i32 %16890 to i64
  store i64 %16891, i64* %RDI.i396, align 8
  store %struct.Memory* %loadMem_4b1464, %struct.Memory** %MEMORY
  %loadMem_4b146b = load %struct.Memory*, %struct.Memory** %MEMORY
  %16892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16893 = getelementptr inbounds %struct.GPR, %struct.GPR* %16892, i32 0, i32 33
  %16894 = getelementptr inbounds %struct.Reg, %struct.Reg* %16893, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %16894 to i64*
  %16895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16896 = getelementptr inbounds %struct.GPR, %struct.GPR* %16895, i32 0, i32 9
  %16897 = getelementptr inbounds %struct.Reg, %struct.Reg* %16896, i32 0, i32 0
  %RSI.i393 = bitcast %union.anon* %16897 to i64*
  %16898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16899 = getelementptr inbounds %struct.GPR, %struct.GPR* %16898, i32 0, i32 11
  %16900 = getelementptr inbounds %struct.Reg, %struct.Reg* %16899, i32 0, i32 0
  %RDI.i394 = bitcast %union.anon* %16900 to i64*
  %16901 = load i64, i64* %RSI.i393
  %16902 = load i64, i64* %RDI.i394
  %16903 = mul i64 %16902, 8
  %16904 = add i64 %16903, %16901
  %16905 = load i64, i64* %PC.i392
  %16906 = add i64 %16905, 4
  store i64 %16906, i64* %PC.i392
  %16907 = inttoptr i64 %16904 to i64*
  %16908 = load i64, i64* %16907
  store i64 %16908, i64* %RSI.i393, align 8
  store %struct.Memory* %loadMem_4b146b, %struct.Memory** %MEMORY
  %loadMem_4b146f = load %struct.Memory*, %struct.Memory** %MEMORY
  %16909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16910 = getelementptr inbounds %struct.GPR, %struct.GPR* %16909, i32 0, i32 33
  %16911 = getelementptr inbounds %struct.Reg, %struct.Reg* %16910, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %16911 to i64*
  %16912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16913 = getelementptr inbounds %struct.GPR, %struct.GPR* %16912, i32 0, i32 11
  %16914 = getelementptr inbounds %struct.Reg, %struct.Reg* %16913, i32 0, i32 0
  %RDI.i390 = bitcast %union.anon* %16914 to i64*
  %16915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16916 = getelementptr inbounds %struct.GPR, %struct.GPR* %16915, i32 0, i32 15
  %16917 = getelementptr inbounds %struct.Reg, %struct.Reg* %16916, i32 0, i32 0
  %RBP.i391 = bitcast %union.anon* %16917 to i64*
  %16918 = load i64, i64* %RBP.i391
  %16919 = sub i64 %16918, 36
  %16920 = load i64, i64* %PC.i389
  %16921 = add i64 %16920, 4
  store i64 %16921, i64* %PC.i389
  %16922 = inttoptr i64 %16919 to i32*
  %16923 = load i32, i32* %16922
  %16924 = sext i32 %16923 to i64
  store i64 %16924, i64* %RDI.i390, align 8
  store %struct.Memory* %loadMem_4b146f, %struct.Memory** %MEMORY
  %loadMem_4b1473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16926 = getelementptr inbounds %struct.GPR, %struct.GPR* %16925, i32 0, i32 33
  %16927 = getelementptr inbounds %struct.Reg, %struct.Reg* %16926, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %16927 to i64*
  %16928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16929 = getelementptr inbounds %struct.GPR, %struct.GPR* %16928, i32 0, i32 9
  %16930 = getelementptr inbounds %struct.Reg, %struct.Reg* %16929, i32 0, i32 0
  %RSI.i387 = bitcast %union.anon* %16930 to i64*
  %16931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16932 = getelementptr inbounds %struct.GPR, %struct.GPR* %16931, i32 0, i32 11
  %16933 = getelementptr inbounds %struct.Reg, %struct.Reg* %16932, i32 0, i32 0
  %RDI.i388 = bitcast %union.anon* %16933 to i64*
  %16934 = load i64, i64* %RSI.i387
  %16935 = load i64, i64* %RDI.i388
  %16936 = mul i64 %16935, 8
  %16937 = add i64 %16936, %16934
  %16938 = load i64, i64* %PC.i386
  %16939 = add i64 %16938, 4
  store i64 %16939, i64* %PC.i386
  %16940 = inttoptr i64 %16937 to i64*
  %16941 = load i64, i64* %16940
  store i64 %16941, i64* %RSI.i387, align 8
  store %struct.Memory* %loadMem_4b1473, %struct.Memory** %MEMORY
  %loadMem_4b1477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16943 = getelementptr inbounds %struct.GPR, %struct.GPR* %16942, i32 0, i32 33
  %16944 = getelementptr inbounds %struct.Reg, %struct.Reg* %16943, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %16944 to i64*
  %16945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16946 = getelementptr inbounds %struct.GPR, %struct.GPR* %16945, i32 0, i32 7
  %16947 = getelementptr inbounds %struct.Reg, %struct.Reg* %16946, i32 0, i32 0
  %EDX.i384 = bitcast %union.anon* %16947 to i32*
  %16948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16949 = getelementptr inbounds %struct.GPR, %struct.GPR* %16948, i32 0, i32 9
  %16950 = getelementptr inbounds %struct.Reg, %struct.Reg* %16949, i32 0, i32 0
  %RSI.i385 = bitcast %union.anon* %16950 to i64*
  %16951 = load i64, i64* %RSI.i385
  %16952 = load i32, i32* %EDX.i384
  %16953 = zext i32 %16952 to i64
  %16954 = load i64, i64* %PC.i383
  %16955 = add i64 %16954, 2
  store i64 %16955, i64* %PC.i383
  %16956 = inttoptr i64 %16951 to i32*
  store i32 %16952, i32* %16956
  store %struct.Memory* %loadMem_4b1477, %struct.Memory** %MEMORY
  %loadMem_4b1479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16958 = getelementptr inbounds %struct.GPR, %struct.GPR* %16957, i32 0, i32 33
  %16959 = getelementptr inbounds %struct.Reg, %struct.Reg* %16958, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %16959 to i64*
  %16960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16961 = getelementptr inbounds %struct.GPR, %struct.GPR* %16960, i32 0, i32 5
  %16962 = getelementptr inbounds %struct.Reg, %struct.Reg* %16961, i32 0, i32 0
  %RCX.i382 = bitcast %union.anon* %16962 to i64*
  %16963 = load i64, i64* %PC.i381
  %16964 = add i64 %16963, 7
  store i64 %16964, i64* %PC.i381
  %16965 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %16966 = zext i32 %16965 to i64
  store i64 %16966, i64* %RCX.i382, align 8
  store %struct.Memory* %loadMem_4b1479, %struct.Memory** %MEMORY
  %loadMem_4b1480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16968 = getelementptr inbounds %struct.GPR, %struct.GPR* %16967, i32 0, i32 33
  %16969 = getelementptr inbounds %struct.Reg, %struct.Reg* %16968, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %16969 to i64*
  %16970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16971 = getelementptr inbounds %struct.GPR, %struct.GPR* %16970, i32 0, i32 1
  %16972 = getelementptr inbounds %struct.Reg, %struct.Reg* %16971, i32 0, i32 0
  %EAX.i379 = bitcast %union.anon* %16972 to i32*
  %16973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16974 = getelementptr inbounds %struct.GPR, %struct.GPR* %16973, i32 0, i32 7
  %16975 = getelementptr inbounds %struct.Reg, %struct.Reg* %16974, i32 0, i32 0
  %RDX.i380 = bitcast %union.anon* %16975 to i64*
  %16976 = load i32, i32* %EAX.i379
  %16977 = zext i32 %16976 to i64
  %16978 = load i64, i64* %PC.i378
  %16979 = add i64 %16978, 2
  store i64 %16979, i64* %PC.i378
  %16980 = and i64 %16977, 4294967295
  store i64 %16980, i64* %RDX.i380, align 8
  store %struct.Memory* %loadMem_4b1480, %struct.Memory** %MEMORY
  %loadMem_4b1482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %16981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16982 = getelementptr inbounds %struct.GPR, %struct.GPR* %16981, i32 0, i32 33
  %16983 = getelementptr inbounds %struct.Reg, %struct.Reg* %16982, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %16983 to i64*
  %16984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16985 = getelementptr inbounds %struct.GPR, %struct.GPR* %16984, i32 0, i32 5
  %16986 = getelementptr inbounds %struct.Reg, %struct.Reg* %16985, i32 0, i32 0
  %16987 = bitcast %union.anon* %16986 to %struct.anon.2*
  %CL.i376 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %16987, i32 0, i32 0
  %16988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16989 = getelementptr inbounds %struct.GPR, %struct.GPR* %16988, i32 0, i32 7
  %16990 = getelementptr inbounds %struct.Reg, %struct.Reg* %16989, i32 0, i32 0
  %RDX.i377 = bitcast %union.anon* %16990 to i64*
  %16991 = load i64, i64* %RDX.i377
  %16992 = load i8, i8* %CL.i376
  %16993 = zext i8 %16992 to i64
  %16994 = load i64, i64* %PC.i375
  %16995 = add i64 %16994, 2
  store i64 %16995, i64* %PC.i375
  %16996 = trunc i64 %16993 to i5
  switch i5 %16996, label %17003 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %16997
  ]

; <label>:16997:                                  ; preds = %routine_shll__cl___edx.exit403
  %16998 = trunc i64 %16991 to i32
  %16999 = shl i32 %16998, 1
  %17000 = icmp slt i32 %16998, 0
  %17001 = icmp slt i32 %16999, 0
  %17002 = xor i1 %17000, %17001
  br label %17012

; <label>:17003:                                  ; preds = %routine_shll__cl___edx.exit403
  %17004 = and i64 %16993, 31
  %17005 = add i64 %17004, 4294967295
  %17006 = and i64 %16991, 4294967295
  %17007 = and i64 %17005, 4294967295
  %17008 = shl i64 %17006, %17007
  %17009 = trunc i64 %17008 to i32
  %17010 = icmp slt i32 %17009, 0
  %17011 = shl i32 %17009, 1
  br label %17012

; <label>:17012:                                  ; preds = %17003, %16997
  %17013 = phi i1 [ %17000, %16997 ], [ %17010, %17003 ]
  %17014 = phi i1 [ %17002, %16997 ], [ false, %17003 ]
  %17015 = phi i32 [ %16999, %16997 ], [ %17011, %17003 ]
  %17016 = zext i32 %17015 to i64
  store i64 %17016, i64* %RDX.i377, align 8
  %17017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17018 = zext i1 %17013 to i8
  store i8 %17018, i8* %17017, align 1
  %17019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17020 = and i32 %17015, 254
  %17021 = call i32 @llvm.ctpop.i32(i32 %17020)
  %17022 = trunc i32 %17021 to i8
  %17023 = and i8 %17022, 1
  %17024 = xor i8 %17023, 1
  store i8 %17024, i8* %17019, align 1
  %17025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17025, align 1
  %17026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17027 = icmp eq i32 %17015, 0
  %17028 = zext i1 %17027 to i8
  store i8 %17028, i8* %17026, align 1
  %17029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17030 = lshr i32 %17015, 31
  %17031 = trunc i32 %17030 to i8
  store i8 %17031, i8* %17029, align 1
  %17032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17033 = zext i1 %17014 to i8
  store i8 %17033, i8* %17032, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %routine_shll__cl___edx.exit403, %17012
  store %struct.Memory* %loadMem_4b1482, %struct.Memory** %MEMORY
  %loadMem_4b1484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17035 = getelementptr inbounds %struct.GPR, %struct.GPR* %17034, i32 0, i32 33
  %17036 = getelementptr inbounds %struct.Reg, %struct.Reg* %17035, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %17036 to i64*
  %17037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17038 = getelementptr inbounds %struct.GPR, %struct.GPR* %17037, i32 0, i32 9
  %17039 = getelementptr inbounds %struct.Reg, %struct.Reg* %17038, i32 0, i32 0
  %RSI.i374 = bitcast %union.anon* %17039 to i64*
  %17040 = load i64, i64* %PC.i373
  %17041 = add i64 %17040, 8
  store i64 %17041, i64* %PC.i373
  %17042 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %17042, i64* %RSI.i374, align 8
  store %struct.Memory* %loadMem_4b1484, %struct.Memory** %MEMORY
  %loadMem_4b148c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17044 = getelementptr inbounds %struct.GPR, %struct.GPR* %17043, i32 0, i32 33
  %17045 = getelementptr inbounds %struct.Reg, %struct.Reg* %17044, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %17045 to i64*
  %17046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17047 = getelementptr inbounds %struct.GPR, %struct.GPR* %17046, i32 0, i32 11
  %17048 = getelementptr inbounds %struct.Reg, %struct.Reg* %17047, i32 0, i32 0
  %RDI.i371 = bitcast %union.anon* %17048 to i64*
  %17049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17050 = getelementptr inbounds %struct.GPR, %struct.GPR* %17049, i32 0, i32 15
  %17051 = getelementptr inbounds %struct.Reg, %struct.Reg* %17050, i32 0, i32 0
  %RBP.i372 = bitcast %union.anon* %17051 to i64*
  %17052 = load i64, i64* %RBP.i372
  %17053 = sub i64 %17052, 35396
  %17054 = load i64, i64* %PC.i370
  %17055 = add i64 %17054, 7
  store i64 %17055, i64* %PC.i370
  %17056 = inttoptr i64 %17053 to i32*
  %17057 = load i32, i32* %17056
  %17058 = sext i32 %17057 to i64
  store i64 %17058, i64* %RDI.i371, align 8
  store %struct.Memory* %loadMem_4b148c, %struct.Memory** %MEMORY
  %loadMem_4b1493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17060 = getelementptr inbounds %struct.GPR, %struct.GPR* %17059, i32 0, i32 33
  %17061 = getelementptr inbounds %struct.Reg, %struct.Reg* %17060, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %17061 to i64*
  %17062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17063 = getelementptr inbounds %struct.GPR, %struct.GPR* %17062, i32 0, i32 9
  %17064 = getelementptr inbounds %struct.Reg, %struct.Reg* %17063, i32 0, i32 0
  %RSI.i368 = bitcast %union.anon* %17064 to i64*
  %17065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17066 = getelementptr inbounds %struct.GPR, %struct.GPR* %17065, i32 0, i32 11
  %17067 = getelementptr inbounds %struct.Reg, %struct.Reg* %17066, i32 0, i32 0
  %RDI.i369 = bitcast %union.anon* %17067 to i64*
  %17068 = load i64, i64* %RSI.i368
  %17069 = load i64, i64* %RDI.i369
  %17070 = mul i64 %17069, 8
  %17071 = add i64 %17070, %17068
  %17072 = load i64, i64* %PC.i367
  %17073 = add i64 %17072, 4
  store i64 %17073, i64* %PC.i367
  %17074 = inttoptr i64 %17071 to i64*
  %17075 = load i64, i64* %17074
  store i64 %17075, i64* %RSI.i368, align 8
  store %struct.Memory* %loadMem_4b1493, %struct.Memory** %MEMORY
  %loadMem_4b1497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17077 = getelementptr inbounds %struct.GPR, %struct.GPR* %17076, i32 0, i32 33
  %17078 = getelementptr inbounds %struct.Reg, %struct.Reg* %17077, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %17078 to i64*
  %17079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17080 = getelementptr inbounds %struct.GPR, %struct.GPR* %17079, i32 0, i32 11
  %17081 = getelementptr inbounds %struct.Reg, %struct.Reg* %17080, i32 0, i32 0
  %RDI.i365 = bitcast %union.anon* %17081 to i64*
  %17082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17083 = getelementptr inbounds %struct.GPR, %struct.GPR* %17082, i32 0, i32 15
  %17084 = getelementptr inbounds %struct.Reg, %struct.Reg* %17083, i32 0, i32 0
  %RBP.i366 = bitcast %union.anon* %17084 to i64*
  %17085 = load i64, i64* %RBP.i366
  %17086 = sub i64 %17085, 36
  %17087 = load i64, i64* %PC.i364
  %17088 = add i64 %17087, 4
  store i64 %17088, i64* %PC.i364
  %17089 = inttoptr i64 %17086 to i32*
  %17090 = load i32, i32* %17089
  %17091 = sext i32 %17090 to i64
  store i64 %17091, i64* %RDI.i365, align 8
  store %struct.Memory* %loadMem_4b1497, %struct.Memory** %MEMORY
  %loadMem_4b149b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17093 = getelementptr inbounds %struct.GPR, %struct.GPR* %17092, i32 0, i32 33
  %17094 = getelementptr inbounds %struct.Reg, %struct.Reg* %17093, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %17094 to i64*
  %17095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17096 = getelementptr inbounds %struct.GPR, %struct.GPR* %17095, i32 0, i32 9
  %17097 = getelementptr inbounds %struct.Reg, %struct.Reg* %17096, i32 0, i32 0
  %RSI.i362 = bitcast %union.anon* %17097 to i64*
  %17098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17099 = getelementptr inbounds %struct.GPR, %struct.GPR* %17098, i32 0, i32 11
  %17100 = getelementptr inbounds %struct.Reg, %struct.Reg* %17099, i32 0, i32 0
  %RDI.i363 = bitcast %union.anon* %17100 to i64*
  %17101 = load i64, i64* %RSI.i362
  %17102 = load i64, i64* %RDI.i363
  %17103 = mul i64 %17102, 8
  %17104 = add i64 %17103, %17101
  %17105 = load i64, i64* %PC.i361
  %17106 = add i64 %17105, 4
  store i64 %17106, i64* %PC.i361
  %17107 = inttoptr i64 %17104 to i64*
  %17108 = load i64, i64* %17107
  store i64 %17108, i64* %RSI.i362, align 8
  store %struct.Memory* %loadMem_4b149b, %struct.Memory** %MEMORY
  %loadMem_4b149f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17110 = getelementptr inbounds %struct.GPR, %struct.GPR* %17109, i32 0, i32 33
  %17111 = getelementptr inbounds %struct.Reg, %struct.Reg* %17110, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %17111 to i64*
  %17112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17113 = getelementptr inbounds %struct.GPR, %struct.GPR* %17112, i32 0, i32 7
  %17114 = getelementptr inbounds %struct.Reg, %struct.Reg* %17113, i32 0, i32 0
  %EDX.i359 = bitcast %union.anon* %17114 to i32*
  %17115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17116 = getelementptr inbounds %struct.GPR, %struct.GPR* %17115, i32 0, i32 9
  %17117 = getelementptr inbounds %struct.Reg, %struct.Reg* %17116, i32 0, i32 0
  %RSI.i360 = bitcast %union.anon* %17117 to i64*
  %17118 = load i64, i64* %RSI.i360
  %17119 = add i64 %17118, 4
  %17120 = load i32, i32* %EDX.i359
  %17121 = zext i32 %17120 to i64
  %17122 = load i64, i64* %PC.i358
  %17123 = add i64 %17122, 3
  store i64 %17123, i64* %PC.i358
  %17124 = inttoptr i64 %17119 to i32*
  store i32 %17120, i32* %17124
  store %struct.Memory* %loadMem_4b149f, %struct.Memory** %MEMORY
  %loadMem_4b14a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17126 = getelementptr inbounds %struct.GPR, %struct.GPR* %17125, i32 0, i32 33
  %17127 = getelementptr inbounds %struct.Reg, %struct.Reg* %17126, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %17127 to i64*
  %17128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17129 = getelementptr inbounds %struct.GPR, %struct.GPR* %17128, i32 0, i32 5
  %17130 = getelementptr inbounds %struct.Reg, %struct.Reg* %17129, i32 0, i32 0
  %RCX.i357 = bitcast %union.anon* %17130 to i64*
  %17131 = load i64, i64* %PC.i356
  %17132 = add i64 %17131, 7
  store i64 %17132, i64* %PC.i356
  %17133 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %17134 = zext i32 %17133 to i64
  store i64 %17134, i64* %RCX.i357, align 8
  store %struct.Memory* %loadMem_4b14a2, %struct.Memory** %MEMORY
  %loadMem_4b14a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17136 = getelementptr inbounds %struct.GPR, %struct.GPR* %17135, i32 0, i32 33
  %17137 = getelementptr inbounds %struct.Reg, %struct.Reg* %17136, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %17137 to i64*
  %17138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17139 = getelementptr inbounds %struct.GPR, %struct.GPR* %17138, i32 0, i32 5
  %17140 = getelementptr inbounds %struct.Reg, %struct.Reg* %17139, i32 0, i32 0
  %17141 = bitcast %union.anon* %17140 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %17141, i32 0, i32 0
  %17142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17143 = getelementptr inbounds %struct.GPR, %struct.GPR* %17142, i32 0, i32 1
  %17144 = getelementptr inbounds %struct.Reg, %struct.Reg* %17143, i32 0, i32 0
  %RAX.i355 = bitcast %union.anon* %17144 to i64*
  %17145 = load i64, i64* %RAX.i355
  %17146 = load i8, i8* %CL.i
  %17147 = zext i8 %17146 to i64
  %17148 = load i64, i64* %PC.i354
  %17149 = add i64 %17148, 2
  store i64 %17149, i64* %PC.i354
  %17150 = trunc i64 %17147 to i5
  switch i5 %17150, label %17157 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %17151
  ]

; <label>:17151:                                  ; preds = %routine_shll__cl___edx.exit
  %17152 = trunc i64 %17145 to i32
  %17153 = shl i32 %17152, 1
  %17154 = icmp slt i32 %17152, 0
  %17155 = icmp slt i32 %17153, 0
  %17156 = xor i1 %17154, %17155
  br label %17166

; <label>:17157:                                  ; preds = %routine_shll__cl___edx.exit
  %17158 = and i64 %17147, 31
  %17159 = add i64 %17158, 4294967295
  %17160 = and i64 %17145, 4294967295
  %17161 = and i64 %17159, 4294967295
  %17162 = shl i64 %17160, %17161
  %17163 = trunc i64 %17162 to i32
  %17164 = icmp slt i32 %17163, 0
  %17165 = shl i32 %17163, 1
  br label %17166

; <label>:17166:                                  ; preds = %17157, %17151
  %17167 = phi i1 [ %17154, %17151 ], [ %17164, %17157 ]
  %17168 = phi i1 [ %17156, %17151 ], [ false, %17157 ]
  %17169 = phi i32 [ %17153, %17151 ], [ %17165, %17157 ]
  %17170 = zext i32 %17169 to i64
  store i64 %17170, i64* %RAX.i355, align 8
  %17171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %17172 = zext i1 %17167 to i8
  store i8 %17172, i8* %17171, align 1
  %17173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %17174 = and i32 %17169, 254
  %17175 = call i32 @llvm.ctpop.i32(i32 %17174)
  %17176 = trunc i32 %17175 to i8
  %17177 = and i8 %17176, 1
  %17178 = xor i8 %17177, 1
  store i8 %17178, i8* %17173, align 1
  %17179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17179, align 1
  %17180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17181 = icmp eq i32 %17169, 0
  %17182 = zext i1 %17181 to i8
  store i8 %17182, i8* %17180, align 1
  %17183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17184 = lshr i32 %17169, 31
  %17185 = trunc i32 %17184 to i8
  store i8 %17185, i8* %17183, align 1
  %17186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17187 = zext i1 %17168 to i8
  store i8 %17187, i8* %17186, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %routine_shll__cl___edx.exit, %17166
  store %struct.Memory* %loadMem_4b14a9, %struct.Memory** %MEMORY
  %loadMem_4b14ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %17188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17189 = getelementptr inbounds %struct.GPR, %struct.GPR* %17188, i32 0, i32 33
  %17190 = getelementptr inbounds %struct.Reg, %struct.Reg* %17189, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %17190 to i64*
  %17191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17192 = getelementptr inbounds %struct.GPR, %struct.GPR* %17191, i32 0, i32 9
  %17193 = getelementptr inbounds %struct.Reg, %struct.Reg* %17192, i32 0, i32 0
  %RSI.i353 = bitcast %union.anon* %17193 to i64*
  %17194 = load i64, i64* %PC.i352
  %17195 = add i64 %17194, 8
  store i64 %17195, i64* %PC.i352
  %17196 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %17196, i64* %RSI.i353, align 8
  store %struct.Memory* %loadMem_4b14ab, %struct.Memory** %MEMORY
  %loadMem_4b14b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17198 = getelementptr inbounds %struct.GPR, %struct.GPR* %17197, i32 0, i32 33
  %17199 = getelementptr inbounds %struct.Reg, %struct.Reg* %17198, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %17199 to i64*
  %17200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17201 = getelementptr inbounds %struct.GPR, %struct.GPR* %17200, i32 0, i32 11
  %17202 = getelementptr inbounds %struct.Reg, %struct.Reg* %17201, i32 0, i32 0
  %RDI.i350 = bitcast %union.anon* %17202 to i64*
  %17203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17204 = getelementptr inbounds %struct.GPR, %struct.GPR* %17203, i32 0, i32 15
  %17205 = getelementptr inbounds %struct.Reg, %struct.Reg* %17204, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %17205 to i64*
  %17206 = load i64, i64* %RBP.i351
  %17207 = sub i64 %17206, 35396
  %17208 = load i64, i64* %PC.i349
  %17209 = add i64 %17208, 7
  store i64 %17209, i64* %PC.i349
  %17210 = inttoptr i64 %17207 to i32*
  %17211 = load i32, i32* %17210
  %17212 = sext i32 %17211 to i64
  store i64 %17212, i64* %RDI.i350, align 8
  store %struct.Memory* %loadMem_4b14b3, %struct.Memory** %MEMORY
  %loadMem_4b14ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %17213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17214 = getelementptr inbounds %struct.GPR, %struct.GPR* %17213, i32 0, i32 33
  %17215 = getelementptr inbounds %struct.Reg, %struct.Reg* %17214, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %17215 to i64*
  %17216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17217 = getelementptr inbounds %struct.GPR, %struct.GPR* %17216, i32 0, i32 9
  %17218 = getelementptr inbounds %struct.Reg, %struct.Reg* %17217, i32 0, i32 0
  %RSI.i347 = bitcast %union.anon* %17218 to i64*
  %17219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17220 = getelementptr inbounds %struct.GPR, %struct.GPR* %17219, i32 0, i32 11
  %17221 = getelementptr inbounds %struct.Reg, %struct.Reg* %17220, i32 0, i32 0
  %RDI.i348 = bitcast %union.anon* %17221 to i64*
  %17222 = load i64, i64* %RSI.i347
  %17223 = load i64, i64* %RDI.i348
  %17224 = mul i64 %17223, 8
  %17225 = add i64 %17224, %17222
  %17226 = load i64, i64* %PC.i346
  %17227 = add i64 %17226, 4
  store i64 %17227, i64* %PC.i346
  %17228 = inttoptr i64 %17225 to i64*
  %17229 = load i64, i64* %17228
  store i64 %17229, i64* %RSI.i347, align 8
  store %struct.Memory* %loadMem_4b14ba, %struct.Memory** %MEMORY
  %loadMem_4b14be = load %struct.Memory*, %struct.Memory** %MEMORY
  %17230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17231 = getelementptr inbounds %struct.GPR, %struct.GPR* %17230, i32 0, i32 33
  %17232 = getelementptr inbounds %struct.Reg, %struct.Reg* %17231, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %17232 to i64*
  %17233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17234 = getelementptr inbounds %struct.GPR, %struct.GPR* %17233, i32 0, i32 11
  %17235 = getelementptr inbounds %struct.Reg, %struct.Reg* %17234, i32 0, i32 0
  %RDI.i344 = bitcast %union.anon* %17235 to i64*
  %17236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17237 = getelementptr inbounds %struct.GPR, %struct.GPR* %17236, i32 0, i32 15
  %17238 = getelementptr inbounds %struct.Reg, %struct.Reg* %17237, i32 0, i32 0
  %RBP.i345 = bitcast %union.anon* %17238 to i64*
  %17239 = load i64, i64* %RBP.i345
  %17240 = sub i64 %17239, 36
  %17241 = load i64, i64* %PC.i343
  %17242 = add i64 %17241, 4
  store i64 %17242, i64* %PC.i343
  %17243 = inttoptr i64 %17240 to i32*
  %17244 = load i32, i32* %17243
  %17245 = sext i32 %17244 to i64
  store i64 %17245, i64* %RDI.i344, align 8
  store %struct.Memory* %loadMem_4b14be, %struct.Memory** %MEMORY
  %loadMem_4b14c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17247 = getelementptr inbounds %struct.GPR, %struct.GPR* %17246, i32 0, i32 33
  %17248 = getelementptr inbounds %struct.Reg, %struct.Reg* %17247, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %17248 to i64*
  %17249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17250 = getelementptr inbounds %struct.GPR, %struct.GPR* %17249, i32 0, i32 9
  %17251 = getelementptr inbounds %struct.Reg, %struct.Reg* %17250, i32 0, i32 0
  %RSI.i341 = bitcast %union.anon* %17251 to i64*
  %17252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17253 = getelementptr inbounds %struct.GPR, %struct.GPR* %17252, i32 0, i32 11
  %17254 = getelementptr inbounds %struct.Reg, %struct.Reg* %17253, i32 0, i32 0
  %RDI.i342 = bitcast %union.anon* %17254 to i64*
  %17255 = load i64, i64* %RSI.i341
  %17256 = load i64, i64* %RDI.i342
  %17257 = mul i64 %17256, 8
  %17258 = add i64 %17257, %17255
  %17259 = load i64, i64* %PC.i340
  %17260 = add i64 %17259, 4
  store i64 %17260, i64* %PC.i340
  %17261 = inttoptr i64 %17258 to i64*
  %17262 = load i64, i64* %17261
  store i64 %17262, i64* %RSI.i341, align 8
  store %struct.Memory* %loadMem_4b14c2, %struct.Memory** %MEMORY
  %loadMem_4b14c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17264 = getelementptr inbounds %struct.GPR, %struct.GPR* %17263, i32 0, i32 33
  %17265 = getelementptr inbounds %struct.Reg, %struct.Reg* %17264, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %17265 to i64*
  %17266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17267 = getelementptr inbounds %struct.GPR, %struct.GPR* %17266, i32 0, i32 1
  %17268 = getelementptr inbounds %struct.Reg, %struct.Reg* %17267, i32 0, i32 0
  %EAX.i338 = bitcast %union.anon* %17268 to i32*
  %17269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17270 = getelementptr inbounds %struct.GPR, %struct.GPR* %17269, i32 0, i32 9
  %17271 = getelementptr inbounds %struct.Reg, %struct.Reg* %17270, i32 0, i32 0
  %RSI.i339 = bitcast %union.anon* %17271 to i64*
  %17272 = load i64, i64* %RSI.i339
  %17273 = add i64 %17272, 8
  %17274 = load i32, i32* %EAX.i338
  %17275 = zext i32 %17274 to i64
  %17276 = load i64, i64* %PC.i337
  %17277 = add i64 %17276, 3
  store i64 %17277, i64* %PC.i337
  %17278 = inttoptr i64 %17273 to i32*
  store i32 %17274, i32* %17278
  store %struct.Memory* %loadMem_4b14c6, %struct.Memory** %MEMORY
  %loadMem_4b14c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17280 = getelementptr inbounds %struct.GPR, %struct.GPR* %17279, i32 0, i32 33
  %17281 = getelementptr inbounds %struct.Reg, %struct.Reg* %17280, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %17281 to i64*
  %17282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17283 = getelementptr inbounds %struct.GPR, %struct.GPR* %17282, i32 0, i32 9
  %17284 = getelementptr inbounds %struct.Reg, %struct.Reg* %17283, i32 0, i32 0
  %RSI.i336 = bitcast %union.anon* %17284 to i64*
  %17285 = load i64, i64* %PC.i335
  %17286 = add i64 %17285, 8
  store i64 %17286, i64* %PC.i335
  %17287 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %17287, i64* %RSI.i336, align 8
  store %struct.Memory* %loadMem_4b14c9, %struct.Memory** %MEMORY
  %loadMem_4b14d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17289 = getelementptr inbounds %struct.GPR, %struct.GPR* %17288, i32 0, i32 33
  %17290 = getelementptr inbounds %struct.Reg, %struct.Reg* %17289, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %17290 to i64*
  %17291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17292 = getelementptr inbounds %struct.GPR, %struct.GPR* %17291, i32 0, i32 11
  %17293 = getelementptr inbounds %struct.Reg, %struct.Reg* %17292, i32 0, i32 0
  %RDI.i333 = bitcast %union.anon* %17293 to i64*
  %17294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17295 = getelementptr inbounds %struct.GPR, %struct.GPR* %17294, i32 0, i32 15
  %17296 = getelementptr inbounds %struct.Reg, %struct.Reg* %17295, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %17296 to i64*
  %17297 = load i64, i64* %RBP.i334
  %17298 = sub i64 %17297, 35396
  %17299 = load i64, i64* %PC.i332
  %17300 = add i64 %17299, 7
  store i64 %17300, i64* %PC.i332
  %17301 = inttoptr i64 %17298 to i32*
  %17302 = load i32, i32* %17301
  %17303 = sext i32 %17302 to i64
  store i64 %17303, i64* %RDI.i333, align 8
  store %struct.Memory* %loadMem_4b14d1, %struct.Memory** %MEMORY
  %loadMem_4b14d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17305 = getelementptr inbounds %struct.GPR, %struct.GPR* %17304, i32 0, i32 33
  %17306 = getelementptr inbounds %struct.Reg, %struct.Reg* %17305, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %17306 to i64*
  %17307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17308 = getelementptr inbounds %struct.GPR, %struct.GPR* %17307, i32 0, i32 9
  %17309 = getelementptr inbounds %struct.Reg, %struct.Reg* %17308, i32 0, i32 0
  %RSI.i330 = bitcast %union.anon* %17309 to i64*
  %17310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17311 = getelementptr inbounds %struct.GPR, %struct.GPR* %17310, i32 0, i32 11
  %17312 = getelementptr inbounds %struct.Reg, %struct.Reg* %17311, i32 0, i32 0
  %RDI.i331 = bitcast %union.anon* %17312 to i64*
  %17313 = load i64, i64* %RSI.i330
  %17314 = load i64, i64* %RDI.i331
  %17315 = mul i64 %17314, 8
  %17316 = add i64 %17315, %17313
  %17317 = load i64, i64* %PC.i329
  %17318 = add i64 %17317, 4
  store i64 %17318, i64* %PC.i329
  %17319 = inttoptr i64 %17316 to i64*
  %17320 = load i64, i64* %17319
  store i64 %17320, i64* %RSI.i330, align 8
  store %struct.Memory* %loadMem_4b14d8, %struct.Memory** %MEMORY
  %loadMem_4b14dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %17321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17322 = getelementptr inbounds %struct.GPR, %struct.GPR* %17321, i32 0, i32 33
  %17323 = getelementptr inbounds %struct.Reg, %struct.Reg* %17322, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %17323 to i64*
  %17324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17325 = getelementptr inbounds %struct.GPR, %struct.GPR* %17324, i32 0, i32 11
  %17326 = getelementptr inbounds %struct.Reg, %struct.Reg* %17325, i32 0, i32 0
  %RDI.i327 = bitcast %union.anon* %17326 to i64*
  %17327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17328 = getelementptr inbounds %struct.GPR, %struct.GPR* %17327, i32 0, i32 15
  %17329 = getelementptr inbounds %struct.Reg, %struct.Reg* %17328, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %17329 to i64*
  %17330 = load i64, i64* %RBP.i328
  %17331 = sub i64 %17330, 36
  %17332 = load i64, i64* %PC.i326
  %17333 = add i64 %17332, 4
  store i64 %17333, i64* %PC.i326
  %17334 = inttoptr i64 %17331 to i32*
  %17335 = load i32, i32* %17334
  %17336 = sext i32 %17335 to i64
  store i64 %17336, i64* %RDI.i327, align 8
  store %struct.Memory* %loadMem_4b14dc, %struct.Memory** %MEMORY
  %loadMem_4b14e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17338 = getelementptr inbounds %struct.GPR, %struct.GPR* %17337, i32 0, i32 33
  %17339 = getelementptr inbounds %struct.Reg, %struct.Reg* %17338, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %17339 to i64*
  %17340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17341 = getelementptr inbounds %struct.GPR, %struct.GPR* %17340, i32 0, i32 9
  %17342 = getelementptr inbounds %struct.Reg, %struct.Reg* %17341, i32 0, i32 0
  %RSI.i324 = bitcast %union.anon* %17342 to i64*
  %17343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17344 = getelementptr inbounds %struct.GPR, %struct.GPR* %17343, i32 0, i32 11
  %17345 = getelementptr inbounds %struct.Reg, %struct.Reg* %17344, i32 0, i32 0
  %RDI.i325 = bitcast %union.anon* %17345 to i64*
  %17346 = load i64, i64* %RSI.i324
  %17347 = load i64, i64* %RDI.i325
  %17348 = mul i64 %17347, 8
  %17349 = add i64 %17348, %17346
  %17350 = load i64, i64* %PC.i323
  %17351 = add i64 %17350, 4
  store i64 %17351, i64* %PC.i323
  %17352 = inttoptr i64 %17349 to i64*
  %17353 = load i64, i64* %17352
  store i64 %17353, i64* %RSI.i324, align 8
  store %struct.Memory* %loadMem_4b14e0, %struct.Memory** %MEMORY
  %loadMem_4b14e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17355 = getelementptr inbounds %struct.GPR, %struct.GPR* %17354, i32 0, i32 33
  %17356 = getelementptr inbounds %struct.Reg, %struct.Reg* %17355, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %17356 to i64*
  %17357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17358 = getelementptr inbounds %struct.GPR, %struct.GPR* %17357, i32 0, i32 9
  %17359 = getelementptr inbounds %struct.Reg, %struct.Reg* %17358, i32 0, i32 0
  %RSI.i322 = bitcast %union.anon* %17359 to i64*
  %17360 = load i64, i64* %RSI.i322
  %17361 = load i64, i64* %PC.i321
  %17362 = add i64 %17361, 6
  store i64 %17362, i64* %PC.i321
  %17363 = inttoptr i64 %17360 to i32*
  store i32 0, i32* %17363
  store %struct.Memory* %loadMem_4b14e4, %struct.Memory** %MEMORY
  %loadMem_4b14ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %17364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17365 = getelementptr inbounds %struct.GPR, %struct.GPR* %17364, i32 0, i32 33
  %17366 = getelementptr inbounds %struct.Reg, %struct.Reg* %17365, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %17366 to i64*
  %17367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17368 = getelementptr inbounds %struct.GPR, %struct.GPR* %17367, i32 0, i32 9
  %17369 = getelementptr inbounds %struct.Reg, %struct.Reg* %17368, i32 0, i32 0
  %RSI.i320 = bitcast %union.anon* %17369 to i64*
  %17370 = load i64, i64* %PC.i319
  %17371 = add i64 %17370, 8
  store i64 %17371, i64* %PC.i319
  %17372 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %17372, i64* %RSI.i320, align 8
  store %struct.Memory* %loadMem_4b14ea, %struct.Memory** %MEMORY
  %loadMem_4b14f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17374 = getelementptr inbounds %struct.GPR, %struct.GPR* %17373, i32 0, i32 33
  %17375 = getelementptr inbounds %struct.Reg, %struct.Reg* %17374, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %17375 to i64*
  %17376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17377 = getelementptr inbounds %struct.GPR, %struct.GPR* %17376, i32 0, i32 11
  %17378 = getelementptr inbounds %struct.Reg, %struct.Reg* %17377, i32 0, i32 0
  %RDI.i317 = bitcast %union.anon* %17378 to i64*
  %17379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17380 = getelementptr inbounds %struct.GPR, %struct.GPR* %17379, i32 0, i32 15
  %17381 = getelementptr inbounds %struct.Reg, %struct.Reg* %17380, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %17381 to i64*
  %17382 = load i64, i64* %RBP.i318
  %17383 = sub i64 %17382, 35396
  %17384 = load i64, i64* %PC.i316
  %17385 = add i64 %17384, 7
  store i64 %17385, i64* %PC.i316
  %17386 = inttoptr i64 %17383 to i32*
  %17387 = load i32, i32* %17386
  %17388 = sext i32 %17387 to i64
  store i64 %17388, i64* %RDI.i317, align 8
  store %struct.Memory* %loadMem_4b14f2, %struct.Memory** %MEMORY
  %loadMem_4b14f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17390 = getelementptr inbounds %struct.GPR, %struct.GPR* %17389, i32 0, i32 33
  %17391 = getelementptr inbounds %struct.Reg, %struct.Reg* %17390, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %17391 to i64*
  %17392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17393 = getelementptr inbounds %struct.GPR, %struct.GPR* %17392, i32 0, i32 9
  %17394 = getelementptr inbounds %struct.Reg, %struct.Reg* %17393, i32 0, i32 0
  %RSI.i314 = bitcast %union.anon* %17394 to i64*
  %17395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17396 = getelementptr inbounds %struct.GPR, %struct.GPR* %17395, i32 0, i32 11
  %17397 = getelementptr inbounds %struct.Reg, %struct.Reg* %17396, i32 0, i32 0
  %RDI.i315 = bitcast %union.anon* %17397 to i64*
  %17398 = load i64, i64* %RSI.i314
  %17399 = load i64, i64* %RDI.i315
  %17400 = mul i64 %17399, 8
  %17401 = add i64 %17400, %17398
  %17402 = load i64, i64* %PC.i313
  %17403 = add i64 %17402, 4
  store i64 %17403, i64* %PC.i313
  %17404 = inttoptr i64 %17401 to i64*
  %17405 = load i64, i64* %17404
  store i64 %17405, i64* %RSI.i314, align 8
  store %struct.Memory* %loadMem_4b14f9, %struct.Memory** %MEMORY
  %loadMem_4b14fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %17406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17407 = getelementptr inbounds %struct.GPR, %struct.GPR* %17406, i32 0, i32 33
  %17408 = getelementptr inbounds %struct.Reg, %struct.Reg* %17407, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %17408 to i64*
  %17409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17410 = getelementptr inbounds %struct.GPR, %struct.GPR* %17409, i32 0, i32 11
  %17411 = getelementptr inbounds %struct.Reg, %struct.Reg* %17410, i32 0, i32 0
  %RDI.i311 = bitcast %union.anon* %17411 to i64*
  %17412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17413 = getelementptr inbounds %struct.GPR, %struct.GPR* %17412, i32 0, i32 15
  %17414 = getelementptr inbounds %struct.Reg, %struct.Reg* %17413, i32 0, i32 0
  %RBP.i312 = bitcast %union.anon* %17414 to i64*
  %17415 = load i64, i64* %RBP.i312
  %17416 = sub i64 %17415, 36
  %17417 = load i64, i64* %PC.i310
  %17418 = add i64 %17417, 4
  store i64 %17418, i64* %PC.i310
  %17419 = inttoptr i64 %17416 to i32*
  %17420 = load i32, i32* %17419
  %17421 = sext i32 %17420 to i64
  store i64 %17421, i64* %RDI.i311, align 8
  store %struct.Memory* %loadMem_4b14fd, %struct.Memory** %MEMORY
  %loadMem_4b1501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17423 = getelementptr inbounds %struct.GPR, %struct.GPR* %17422, i32 0, i32 33
  %17424 = getelementptr inbounds %struct.Reg, %struct.Reg* %17423, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %17424 to i64*
  %17425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17426 = getelementptr inbounds %struct.GPR, %struct.GPR* %17425, i32 0, i32 9
  %17427 = getelementptr inbounds %struct.Reg, %struct.Reg* %17426, i32 0, i32 0
  %RSI.i308 = bitcast %union.anon* %17427 to i64*
  %17428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17429 = getelementptr inbounds %struct.GPR, %struct.GPR* %17428, i32 0, i32 11
  %17430 = getelementptr inbounds %struct.Reg, %struct.Reg* %17429, i32 0, i32 0
  %RDI.i309 = bitcast %union.anon* %17430 to i64*
  %17431 = load i64, i64* %RSI.i308
  %17432 = load i64, i64* %RDI.i309
  %17433 = mul i64 %17432, 8
  %17434 = add i64 %17433, %17431
  %17435 = load i64, i64* %PC.i307
  %17436 = add i64 %17435, 4
  store i64 %17436, i64* %PC.i307
  %17437 = inttoptr i64 %17434 to i64*
  %17438 = load i64, i64* %17437
  store i64 %17438, i64* %RSI.i308, align 8
  store %struct.Memory* %loadMem_4b1501, %struct.Memory** %MEMORY
  %loadMem_4b1505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17440 = getelementptr inbounds %struct.GPR, %struct.GPR* %17439, i32 0, i32 33
  %17441 = getelementptr inbounds %struct.Reg, %struct.Reg* %17440, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %17441 to i64*
  %17442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17443 = getelementptr inbounds %struct.GPR, %struct.GPR* %17442, i32 0, i32 9
  %17444 = getelementptr inbounds %struct.Reg, %struct.Reg* %17443, i32 0, i32 0
  %RSI.i306 = bitcast %union.anon* %17444 to i64*
  %17445 = load i64, i64* %RSI.i306
  %17446 = add i64 %17445, 4
  %17447 = load i64, i64* %PC.i305
  %17448 = add i64 %17447, 7
  store i64 %17448, i64* %PC.i305
  %17449 = inttoptr i64 %17446 to i32*
  store i32 0, i32* %17449
  store %struct.Memory* %loadMem_4b1505, %struct.Memory** %MEMORY
  %loadMem_4b150c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17451 = getelementptr inbounds %struct.GPR, %struct.GPR* %17450, i32 0, i32 33
  %17452 = getelementptr inbounds %struct.Reg, %struct.Reg* %17451, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %17452 to i64*
  %17453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17454 = getelementptr inbounds %struct.GPR, %struct.GPR* %17453, i32 0, i32 9
  %17455 = getelementptr inbounds %struct.Reg, %struct.Reg* %17454, i32 0, i32 0
  %RSI.i304 = bitcast %union.anon* %17455 to i64*
  %17456 = load i64, i64* %PC.i303
  %17457 = add i64 %17456, 8
  store i64 %17457, i64* %PC.i303
  %17458 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %17458, i64* %RSI.i304, align 8
  store %struct.Memory* %loadMem_4b150c, %struct.Memory** %MEMORY
  %loadMem_4b1514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17460 = getelementptr inbounds %struct.GPR, %struct.GPR* %17459, i32 0, i32 33
  %17461 = getelementptr inbounds %struct.Reg, %struct.Reg* %17460, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %17461 to i64*
  %17462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17463 = getelementptr inbounds %struct.GPR, %struct.GPR* %17462, i32 0, i32 11
  %17464 = getelementptr inbounds %struct.Reg, %struct.Reg* %17463, i32 0, i32 0
  %RDI.i301 = bitcast %union.anon* %17464 to i64*
  %17465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17466 = getelementptr inbounds %struct.GPR, %struct.GPR* %17465, i32 0, i32 15
  %17467 = getelementptr inbounds %struct.Reg, %struct.Reg* %17466, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %17467 to i64*
  %17468 = load i64, i64* %RBP.i302
  %17469 = sub i64 %17468, 35396
  %17470 = load i64, i64* %PC.i300
  %17471 = add i64 %17470, 7
  store i64 %17471, i64* %PC.i300
  %17472 = inttoptr i64 %17469 to i32*
  %17473 = load i32, i32* %17472
  %17474 = sext i32 %17473 to i64
  store i64 %17474, i64* %RDI.i301, align 8
  store %struct.Memory* %loadMem_4b1514, %struct.Memory** %MEMORY
  %loadMem_4b151b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17476 = getelementptr inbounds %struct.GPR, %struct.GPR* %17475, i32 0, i32 33
  %17477 = getelementptr inbounds %struct.Reg, %struct.Reg* %17476, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %17477 to i64*
  %17478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17479 = getelementptr inbounds %struct.GPR, %struct.GPR* %17478, i32 0, i32 9
  %17480 = getelementptr inbounds %struct.Reg, %struct.Reg* %17479, i32 0, i32 0
  %RSI.i298 = bitcast %union.anon* %17480 to i64*
  %17481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17482 = getelementptr inbounds %struct.GPR, %struct.GPR* %17481, i32 0, i32 11
  %17483 = getelementptr inbounds %struct.Reg, %struct.Reg* %17482, i32 0, i32 0
  %RDI.i299 = bitcast %union.anon* %17483 to i64*
  %17484 = load i64, i64* %RSI.i298
  %17485 = load i64, i64* %RDI.i299
  %17486 = mul i64 %17485, 8
  %17487 = add i64 %17486, %17484
  %17488 = load i64, i64* %PC.i297
  %17489 = add i64 %17488, 4
  store i64 %17489, i64* %PC.i297
  %17490 = inttoptr i64 %17487 to i64*
  %17491 = load i64, i64* %17490
  store i64 %17491, i64* %RSI.i298, align 8
  store %struct.Memory* %loadMem_4b151b, %struct.Memory** %MEMORY
  %loadMem_4b151f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17493 = getelementptr inbounds %struct.GPR, %struct.GPR* %17492, i32 0, i32 33
  %17494 = getelementptr inbounds %struct.Reg, %struct.Reg* %17493, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %17494 to i64*
  %17495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17496 = getelementptr inbounds %struct.GPR, %struct.GPR* %17495, i32 0, i32 11
  %17497 = getelementptr inbounds %struct.Reg, %struct.Reg* %17496, i32 0, i32 0
  %RDI.i295 = bitcast %union.anon* %17497 to i64*
  %17498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17499 = getelementptr inbounds %struct.GPR, %struct.GPR* %17498, i32 0, i32 15
  %17500 = getelementptr inbounds %struct.Reg, %struct.Reg* %17499, i32 0, i32 0
  %RBP.i296 = bitcast %union.anon* %17500 to i64*
  %17501 = load i64, i64* %RBP.i296
  %17502 = sub i64 %17501, 36
  %17503 = load i64, i64* %PC.i294
  %17504 = add i64 %17503, 4
  store i64 %17504, i64* %PC.i294
  %17505 = inttoptr i64 %17502 to i32*
  %17506 = load i32, i32* %17505
  %17507 = sext i32 %17506 to i64
  store i64 %17507, i64* %RDI.i295, align 8
  store %struct.Memory* %loadMem_4b151f, %struct.Memory** %MEMORY
  %loadMem_4b1523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17509 = getelementptr inbounds %struct.GPR, %struct.GPR* %17508, i32 0, i32 33
  %17510 = getelementptr inbounds %struct.Reg, %struct.Reg* %17509, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %17510 to i64*
  %17511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17512 = getelementptr inbounds %struct.GPR, %struct.GPR* %17511, i32 0, i32 9
  %17513 = getelementptr inbounds %struct.Reg, %struct.Reg* %17512, i32 0, i32 0
  %RSI.i293 = bitcast %union.anon* %17513 to i64*
  %17514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17515 = getelementptr inbounds %struct.GPR, %struct.GPR* %17514, i32 0, i32 11
  %17516 = getelementptr inbounds %struct.Reg, %struct.Reg* %17515, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %17516 to i64*
  %17517 = load i64, i64* %RSI.i293
  %17518 = load i64, i64* %RDI.i
  %17519 = mul i64 %17518, 8
  %17520 = add i64 %17519, %17517
  %17521 = load i64, i64* %PC.i292
  %17522 = add i64 %17521, 4
  store i64 %17522, i64* %PC.i292
  %17523 = inttoptr i64 %17520 to i64*
  %17524 = load i64, i64* %17523
  store i64 %17524, i64* %RSI.i293, align 8
  store %struct.Memory* %loadMem_4b1523, %struct.Memory** %MEMORY
  %loadMem_4b1527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17526 = getelementptr inbounds %struct.GPR, %struct.GPR* %17525, i32 0, i32 33
  %17527 = getelementptr inbounds %struct.Reg, %struct.Reg* %17526, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %17527 to i64*
  %17528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17529 = getelementptr inbounds %struct.GPR, %struct.GPR* %17528, i32 0, i32 9
  %17530 = getelementptr inbounds %struct.Reg, %struct.Reg* %17529, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %17530 to i64*
  %17531 = load i64, i64* %RSI.i
  %17532 = add i64 %17531, 8
  %17533 = load i64, i64* %PC.i291
  %17534 = add i64 %17533, 7
  store i64 %17534, i64* %PC.i291
  %17535 = inttoptr i64 %17532 to i32*
  store i32 0, i32* %17535
  store %struct.Memory* %loadMem_4b1527, %struct.Memory** %MEMORY
  %loadMem_4b152e = load %struct.Memory*, %struct.Memory** %MEMORY
  %17536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17537 = getelementptr inbounds %struct.GPR, %struct.GPR* %17536, i32 0, i32 33
  %17538 = getelementptr inbounds %struct.Reg, %struct.Reg* %17537, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %17538 to i64*
  %17539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17540 = getelementptr inbounds %struct.GPR, %struct.GPR* %17539, i32 0, i32 1
  %17541 = getelementptr inbounds %struct.Reg, %struct.Reg* %17540, i32 0, i32 0
  %RAX.i289 = bitcast %union.anon* %17541 to i64*
  %17542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17543 = getelementptr inbounds %struct.GPR, %struct.GPR* %17542, i32 0, i32 15
  %17544 = getelementptr inbounds %struct.Reg, %struct.Reg* %17543, i32 0, i32 0
  %RBP.i290 = bitcast %union.anon* %17544 to i64*
  %17545 = load i64, i64* %RBP.i290
  %17546 = sub i64 %17545, 36
  %17547 = load i64, i64* %PC.i288
  %17548 = add i64 %17547, 3
  store i64 %17548, i64* %PC.i288
  %17549 = inttoptr i64 %17546 to i32*
  %17550 = load i32, i32* %17549
  %17551 = zext i32 %17550 to i64
  store i64 %17551, i64* %RAX.i289, align 8
  store %struct.Memory* %loadMem_4b152e, %struct.Memory** %MEMORY
  %loadMem_4b1531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17553 = getelementptr inbounds %struct.GPR, %struct.GPR* %17552, i32 0, i32 33
  %17554 = getelementptr inbounds %struct.Reg, %struct.Reg* %17553, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %17554 to i64*
  %17555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17556 = getelementptr inbounds %struct.GPR, %struct.GPR* %17555, i32 0, i32 1
  %17557 = getelementptr inbounds %struct.Reg, %struct.Reg* %17556, i32 0, i32 0
  %RAX.i287 = bitcast %union.anon* %17557 to i64*
  %17558 = load i64, i64* %RAX.i287
  %17559 = load i64, i64* %PC.i286
  %17560 = add i64 %17559, 3
  store i64 %17560, i64* %PC.i286
  %17561 = trunc i64 %17558 to i32
  %17562 = add i32 1, %17561
  %17563 = zext i32 %17562 to i64
  store i64 %17563, i64* %RAX.i287, align 8
  %17564 = icmp ult i32 %17562, %17561
  %17565 = icmp ult i32 %17562, 1
  %17566 = or i1 %17564, %17565
  %17567 = zext i1 %17566 to i8
  %17568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17567, i8* %17568, align 1
  %17569 = and i32 %17562, 255
  %17570 = call i32 @llvm.ctpop.i32(i32 %17569)
  %17571 = trunc i32 %17570 to i8
  %17572 = and i8 %17571, 1
  %17573 = xor i8 %17572, 1
  %17574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17573, i8* %17574, align 1
  %17575 = xor i64 1, %17558
  %17576 = trunc i64 %17575 to i32
  %17577 = xor i32 %17576, %17562
  %17578 = lshr i32 %17577, 4
  %17579 = trunc i32 %17578 to i8
  %17580 = and i8 %17579, 1
  %17581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17580, i8* %17581, align 1
  %17582 = icmp eq i32 %17562, 0
  %17583 = zext i1 %17582 to i8
  %17584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17583, i8* %17584, align 1
  %17585 = lshr i32 %17562, 31
  %17586 = trunc i32 %17585 to i8
  %17587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17586, i8* %17587, align 1
  %17588 = lshr i32 %17561, 31
  %17589 = xor i32 %17585, %17588
  %17590 = add i32 %17589, %17585
  %17591 = icmp eq i32 %17590, 2
  %17592 = zext i1 %17591 to i8
  %17593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17592, i8* %17593, align 1
  store %struct.Memory* %loadMem_4b1531, %struct.Memory** %MEMORY
  %loadMem_4b1534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17595 = getelementptr inbounds %struct.GPR, %struct.GPR* %17594, i32 0, i32 33
  %17596 = getelementptr inbounds %struct.Reg, %struct.Reg* %17595, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %17596 to i64*
  %17597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17598 = getelementptr inbounds %struct.GPR, %struct.GPR* %17597, i32 0, i32 1
  %17599 = getelementptr inbounds %struct.Reg, %struct.Reg* %17598, i32 0, i32 0
  %EAX.i284 = bitcast %union.anon* %17599 to i32*
  %17600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17601 = getelementptr inbounds %struct.GPR, %struct.GPR* %17600, i32 0, i32 15
  %17602 = getelementptr inbounds %struct.Reg, %struct.Reg* %17601, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %17602 to i64*
  %17603 = load i64, i64* %RBP.i285
  %17604 = sub i64 %17603, 36
  %17605 = load i32, i32* %EAX.i284
  %17606 = zext i32 %17605 to i64
  %17607 = load i64, i64* %PC.i283
  %17608 = add i64 %17607, 3
  store i64 %17608, i64* %PC.i283
  %17609 = inttoptr i64 %17604 to i32*
  store i32 %17605, i32* %17609
  store %struct.Memory* %loadMem_4b1534, %struct.Memory** %MEMORY
  %loadMem_4b1537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17611 = getelementptr inbounds %struct.GPR, %struct.GPR* %17610, i32 0, i32 33
  %17612 = getelementptr inbounds %struct.Reg, %struct.Reg* %17611, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %17612 to i64*
  %17613 = load i64, i64* %PC.i282
  %17614 = add i64 %17613, -258
  %17615 = load i64, i64* %PC.i282
  %17616 = add i64 %17615, 5
  store i64 %17616, i64* %PC.i282
  %17617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17614, i64* %17617, align 8
  store %struct.Memory* %loadMem_4b1537, %struct.Memory** %MEMORY
  br label %block_.L_4b1435

block_.L_4b153c:                                  ; preds = %block_.L_4b1435
  %loadMem_4b153c = load %struct.Memory*, %struct.Memory** %MEMORY
  %17618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17619 = getelementptr inbounds %struct.GPR, %struct.GPR* %17618, i32 0, i32 33
  %17620 = getelementptr inbounds %struct.Reg, %struct.Reg* %17619, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %17620 to i64*
  %17621 = load i64, i64* %PC.i281
  %17622 = add i64 %17621, 5
  %17623 = load i64, i64* %PC.i281
  %17624 = add i64 %17623, 5
  store i64 %17624, i64* %PC.i281
  %17625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17622, i64* %17625, align 8
  store %struct.Memory* %loadMem_4b153c, %struct.Memory** %MEMORY
  br label %block_.L_4b1541

block_.L_4b1541:                                  ; preds = %block_.L_4b153c
  %loadMem_4b1541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17627 = getelementptr inbounds %struct.GPR, %struct.GPR* %17626, i32 0, i32 33
  %17628 = getelementptr inbounds %struct.Reg, %struct.Reg* %17627, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %17628 to i64*
  %17629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17630 = getelementptr inbounds %struct.GPR, %struct.GPR* %17629, i32 0, i32 1
  %17631 = getelementptr inbounds %struct.Reg, %struct.Reg* %17630, i32 0, i32 0
  %RAX.i279 = bitcast %union.anon* %17631 to i64*
  %17632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17633 = getelementptr inbounds %struct.GPR, %struct.GPR* %17632, i32 0, i32 15
  %17634 = getelementptr inbounds %struct.Reg, %struct.Reg* %17633, i32 0, i32 0
  %RBP.i280 = bitcast %union.anon* %17634 to i64*
  %17635 = load i64, i64* %RBP.i280
  %17636 = sub i64 %17635, 35396
  %17637 = load i64, i64* %PC.i278
  %17638 = add i64 %17637, 6
  store i64 %17638, i64* %PC.i278
  %17639 = inttoptr i64 %17636 to i32*
  %17640 = load i32, i32* %17639
  %17641 = zext i32 %17640 to i64
  store i64 %17641, i64* %RAX.i279, align 8
  store %struct.Memory* %loadMem_4b1541, %struct.Memory** %MEMORY
  %loadMem_4b1547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17643 = getelementptr inbounds %struct.GPR, %struct.GPR* %17642, i32 0, i32 33
  %17644 = getelementptr inbounds %struct.Reg, %struct.Reg* %17643, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %17644 to i64*
  %17645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17646 = getelementptr inbounds %struct.GPR, %struct.GPR* %17645, i32 0, i32 1
  %17647 = getelementptr inbounds %struct.Reg, %struct.Reg* %17646, i32 0, i32 0
  %RAX.i277 = bitcast %union.anon* %17647 to i64*
  %17648 = load i64, i64* %RAX.i277
  %17649 = load i64, i64* %PC.i276
  %17650 = add i64 %17649, 3
  store i64 %17650, i64* %PC.i276
  %17651 = trunc i64 %17648 to i32
  %17652 = add i32 1, %17651
  %17653 = zext i32 %17652 to i64
  store i64 %17653, i64* %RAX.i277, align 8
  %17654 = icmp ult i32 %17652, %17651
  %17655 = icmp ult i32 %17652, 1
  %17656 = or i1 %17654, %17655
  %17657 = zext i1 %17656 to i8
  %17658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17657, i8* %17658, align 1
  %17659 = and i32 %17652, 255
  %17660 = call i32 @llvm.ctpop.i32(i32 %17659)
  %17661 = trunc i32 %17660 to i8
  %17662 = and i8 %17661, 1
  %17663 = xor i8 %17662, 1
  %17664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17663, i8* %17664, align 1
  %17665 = xor i64 1, %17648
  %17666 = trunc i64 %17665 to i32
  %17667 = xor i32 %17666, %17652
  %17668 = lshr i32 %17667, 4
  %17669 = trunc i32 %17668 to i8
  %17670 = and i8 %17669, 1
  %17671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17670, i8* %17671, align 1
  %17672 = icmp eq i32 %17652, 0
  %17673 = zext i1 %17672 to i8
  %17674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17673, i8* %17674, align 1
  %17675 = lshr i32 %17652, 31
  %17676 = trunc i32 %17675 to i8
  %17677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17676, i8* %17677, align 1
  %17678 = lshr i32 %17651, 31
  %17679 = xor i32 %17675, %17678
  %17680 = add i32 %17679, %17675
  %17681 = icmp eq i32 %17680, 2
  %17682 = zext i1 %17681 to i8
  %17683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17682, i8* %17683, align 1
  store %struct.Memory* %loadMem_4b1547, %struct.Memory** %MEMORY
  %loadMem_4b154a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17685 = getelementptr inbounds %struct.GPR, %struct.GPR* %17684, i32 0, i32 33
  %17686 = getelementptr inbounds %struct.Reg, %struct.Reg* %17685, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %17686 to i64*
  %17687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17688 = getelementptr inbounds %struct.GPR, %struct.GPR* %17687, i32 0, i32 1
  %17689 = getelementptr inbounds %struct.Reg, %struct.Reg* %17688, i32 0, i32 0
  %EAX.i274 = bitcast %union.anon* %17689 to i32*
  %17690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17691 = getelementptr inbounds %struct.GPR, %struct.GPR* %17690, i32 0, i32 15
  %17692 = getelementptr inbounds %struct.Reg, %struct.Reg* %17691, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %17692 to i64*
  %17693 = load i64, i64* %RBP.i275
  %17694 = sub i64 %17693, 35396
  %17695 = load i32, i32* %EAX.i274
  %17696 = zext i32 %17695 to i64
  %17697 = load i64, i64* %PC.i273
  %17698 = add i64 %17697, 6
  store i64 %17698, i64* %PC.i273
  %17699 = inttoptr i64 %17694 to i32*
  store i32 %17695, i32* %17699
  store %struct.Memory* %loadMem_4b154a, %struct.Memory** %MEMORY
  %loadMem_4b1550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17701 = getelementptr inbounds %struct.GPR, %struct.GPR* %17700, i32 0, i32 33
  %17702 = getelementptr inbounds %struct.Reg, %struct.Reg* %17701, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %17702 to i64*
  %17703 = load i64, i64* %PC.i272
  %17704 = add i64 %17703, -313
  %17705 = load i64, i64* %PC.i272
  %17706 = add i64 %17705, 5
  store i64 %17706, i64* %PC.i272
  %17707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17704, i64* %17707, align 8
  store %struct.Memory* %loadMem_4b1550, %struct.Memory** %MEMORY
  br label %block_.L_4b1417

block_.L_4b1555:                                  ; preds = %block_.L_4b1417
  %loadMem_4b1555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17709 = getelementptr inbounds %struct.GPR, %struct.GPR* %17708, i32 0, i32 33
  %17710 = getelementptr inbounds %struct.Reg, %struct.Reg* %17709, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %17710 to i64*
  %17711 = load i64, i64* %PC.i271
  %17712 = add i64 %17711, 5
  %17713 = load i64, i64* %PC.i271
  %17714 = add i64 %17713, 5
  store i64 %17714, i64* %PC.i271
  %17715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %17712, i64* %17715, align 8
  store %struct.Memory* %loadMem_4b1555, %struct.Memory** %MEMORY
  br label %block_.L_4b155a

block_.L_4b155a:                                  ; preds = %block_.L_4b1555, %block_.L_4b1408
  %loadMem_4b155a = load %struct.Memory*, %struct.Memory** %MEMORY
  %17716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17717 = getelementptr inbounds %struct.GPR, %struct.GPR* %17716, i32 0, i32 33
  %17718 = getelementptr inbounds %struct.Reg, %struct.Reg* %17717, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %17718 to i64*
  %17719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17720 = getelementptr inbounds %struct.GPR, %struct.GPR* %17719, i32 0, i32 15
  %17721 = getelementptr inbounds %struct.Reg, %struct.Reg* %17720, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %17721 to i64*
  %17722 = load i64, i64* %RBP.i270
  %17723 = sub i64 %17722, 8
  %17724 = load i64, i64* %PC.i269
  %17725 = add i64 %17724, 7
  store i64 %17725, i64* %PC.i269
  %17726 = inttoptr i64 %17723 to i32*
  store i32 0, i32* %17726
  store %struct.Memory* %loadMem_4b155a, %struct.Memory** %MEMORY
  br label %block_.L_4b1561

block_.L_4b1561:                                  ; preds = %block_.L_4b166e, %block_.L_4b155a
  %loadMem_4b1561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17728 = getelementptr inbounds %struct.GPR, %struct.GPR* %17727, i32 0, i32 33
  %17729 = getelementptr inbounds %struct.Reg, %struct.Reg* %17728, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %17729 to i64*
  %17730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17731 = getelementptr inbounds %struct.GPR, %struct.GPR* %17730, i32 0, i32 1
  %17732 = getelementptr inbounds %struct.Reg, %struct.Reg* %17731, i32 0, i32 0
  %RAX.i267 = bitcast %union.anon* %17732 to i64*
  %17733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17734 = getelementptr inbounds %struct.GPR, %struct.GPR* %17733, i32 0, i32 15
  %17735 = getelementptr inbounds %struct.Reg, %struct.Reg* %17734, i32 0, i32 0
  %RBP.i268 = bitcast %union.anon* %17735 to i64*
  %17736 = load i64, i64* %RBP.i268
  %17737 = sub i64 %17736, 8
  %17738 = load i64, i64* %PC.i266
  %17739 = add i64 %17738, 3
  store i64 %17739, i64* %PC.i266
  %17740 = inttoptr i64 %17737 to i32*
  %17741 = load i32, i32* %17740
  %17742 = zext i32 %17741 to i64
  store i64 %17742, i64* %RAX.i267, align 8
  store %struct.Memory* %loadMem_4b1561, %struct.Memory** %MEMORY
  %loadMem_4b1564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17744 = getelementptr inbounds %struct.GPR, %struct.GPR* %17743, i32 0, i32 33
  %17745 = getelementptr inbounds %struct.Reg, %struct.Reg* %17744, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %17745 to i64*
  %17746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17747 = getelementptr inbounds %struct.GPR, %struct.GPR* %17746, i32 0, i32 1
  %17748 = getelementptr inbounds %struct.Reg, %struct.Reg* %17747, i32 0, i32 0
  %EAX.i265 = bitcast %union.anon* %17748 to i32*
  %17749 = load i32, i32* %EAX.i265
  %17750 = zext i32 %17749 to i64
  %17751 = load i64, i64* %PC.i264
  %17752 = add i64 %17751, 7
  store i64 %17752, i64* %PC.i264
  %17753 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %17754 = sub i32 %17749, %17753
  %17755 = icmp ult i32 %17749, %17753
  %17756 = zext i1 %17755 to i8
  %17757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17756, i8* %17757, align 1
  %17758 = and i32 %17754, 255
  %17759 = call i32 @llvm.ctpop.i32(i32 %17758)
  %17760 = trunc i32 %17759 to i8
  %17761 = and i8 %17760, 1
  %17762 = xor i8 %17761, 1
  %17763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17762, i8* %17763, align 1
  %17764 = xor i32 %17753, %17749
  %17765 = xor i32 %17764, %17754
  %17766 = lshr i32 %17765, 4
  %17767 = trunc i32 %17766 to i8
  %17768 = and i8 %17767, 1
  %17769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17768, i8* %17769, align 1
  %17770 = icmp eq i32 %17754, 0
  %17771 = zext i1 %17770 to i8
  %17772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17771, i8* %17772, align 1
  %17773 = lshr i32 %17754, 31
  %17774 = trunc i32 %17773 to i8
  %17775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17774, i8* %17775, align 1
  %17776 = lshr i32 %17749, 31
  %17777 = lshr i32 %17753, 31
  %17778 = xor i32 %17777, %17776
  %17779 = xor i32 %17773, %17776
  %17780 = add i32 %17779, %17778
  %17781 = icmp eq i32 %17780, 2
  %17782 = zext i1 %17781 to i8
  %17783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17782, i8* %17783, align 1
  store %struct.Memory* %loadMem_4b1564, %struct.Memory** %MEMORY
  %loadMem_4b156b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17785 = getelementptr inbounds %struct.GPR, %struct.GPR* %17784, i32 0, i32 33
  %17786 = getelementptr inbounds %struct.Reg, %struct.Reg* %17785, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %17786 to i64*
  %17787 = load i64, i64* %PC.i263
  %17788 = add i64 %17787, 273
  %17789 = load i64, i64* %PC.i263
  %17790 = add i64 %17789, 6
  %17791 = load i64, i64* %PC.i263
  %17792 = add i64 %17791, 6
  store i64 %17792, i64* %PC.i263
  %17793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17794 = load i8, i8* %17793, align 1
  %17795 = icmp ne i8 %17794, 0
  %17796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17797 = load i8, i8* %17796, align 1
  %17798 = icmp ne i8 %17797, 0
  %17799 = xor i1 %17795, %17798
  %17800 = xor i1 %17799, true
  %17801 = zext i1 %17800 to i8
  store i8 %17801, i8* %BRANCH_TAKEN, align 1
  %17802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17803 = select i1 %17799, i64 %17790, i64 %17788
  store i64 %17803, i64* %17802, align 8
  store %struct.Memory* %loadMem_4b156b, %struct.Memory** %MEMORY
  %loadBr_4b156b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b156b = icmp eq i8 %loadBr_4b156b, 1
  br i1 %cmpBr_4b156b, label %block_.L_4b167c, label %block_4b1571

block_4b1571:                                     ; preds = %block_.L_4b1561
  %loadMem_4b1571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17805 = getelementptr inbounds %struct.GPR, %struct.GPR* %17804, i32 0, i32 33
  %17806 = getelementptr inbounds %struct.Reg, %struct.Reg* %17805, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %17806 to i64*
  %17807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17808 = getelementptr inbounds %struct.GPR, %struct.GPR* %17807, i32 0, i32 15
  %17809 = getelementptr inbounds %struct.Reg, %struct.Reg* %17808, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %17809 to i64*
  %17810 = load i64, i64* %RBP.i262
  %17811 = sub i64 %17810, 12
  %17812 = load i64, i64* %PC.i261
  %17813 = add i64 %17812, 7
  store i64 %17813, i64* %PC.i261
  %17814 = inttoptr i64 %17811 to i32*
  store i32 0, i32* %17814
  store %struct.Memory* %loadMem_4b1571, %struct.Memory** %MEMORY
  br label %block_.L_4b1578

block_.L_4b1578:                                  ; preds = %block_.L_4b165b, %block_4b1571
  %loadMem_4b1578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17816 = getelementptr inbounds %struct.GPR, %struct.GPR* %17815, i32 0, i32 33
  %17817 = getelementptr inbounds %struct.Reg, %struct.Reg* %17816, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %17817 to i64*
  %17818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17819 = getelementptr inbounds %struct.GPR, %struct.GPR* %17818, i32 0, i32 1
  %17820 = getelementptr inbounds %struct.Reg, %struct.Reg* %17819, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %17820 to i64*
  %17821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17822 = getelementptr inbounds %struct.GPR, %struct.GPR* %17821, i32 0, i32 15
  %17823 = getelementptr inbounds %struct.Reg, %struct.Reg* %17822, i32 0, i32 0
  %RBP.i260 = bitcast %union.anon* %17823 to i64*
  %17824 = load i64, i64* %RBP.i260
  %17825 = sub i64 %17824, 12
  %17826 = load i64, i64* %PC.i258
  %17827 = add i64 %17826, 3
  store i64 %17827, i64* %PC.i258
  %17828 = inttoptr i64 %17825 to i32*
  %17829 = load i32, i32* %17828
  %17830 = zext i32 %17829 to i64
  store i64 %17830, i64* %RAX.i259, align 8
  store %struct.Memory* %loadMem_4b1578, %struct.Memory** %MEMORY
  %loadMem_4b157b = load %struct.Memory*, %struct.Memory** %MEMORY
  %17831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17832 = getelementptr inbounds %struct.GPR, %struct.GPR* %17831, i32 0, i32 33
  %17833 = getelementptr inbounds %struct.Reg, %struct.Reg* %17832, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %17833 to i64*
  %17834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17835 = getelementptr inbounds %struct.GPR, %struct.GPR* %17834, i32 0, i32 1
  %17836 = getelementptr inbounds %struct.Reg, %struct.Reg* %17835, i32 0, i32 0
  %EAX.i257 = bitcast %union.anon* %17836 to i32*
  %17837 = load i32, i32* %EAX.i257
  %17838 = zext i32 %17837 to i64
  %17839 = load i64, i64* %PC.i256
  %17840 = add i64 %17839, 7
  store i64 %17840, i64* %PC.i256
  %17841 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %17842 = sub i32 %17837, %17841
  %17843 = icmp ult i32 %17837, %17841
  %17844 = zext i1 %17843 to i8
  %17845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17844, i8* %17845, align 1
  %17846 = and i32 %17842, 255
  %17847 = call i32 @llvm.ctpop.i32(i32 %17846)
  %17848 = trunc i32 %17847 to i8
  %17849 = and i8 %17848, 1
  %17850 = xor i8 %17849, 1
  %17851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17850, i8* %17851, align 1
  %17852 = xor i32 %17841, %17837
  %17853 = xor i32 %17852, %17842
  %17854 = lshr i32 %17853, 4
  %17855 = trunc i32 %17854 to i8
  %17856 = and i8 %17855, 1
  %17857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17856, i8* %17857, align 1
  %17858 = icmp eq i32 %17842, 0
  %17859 = zext i1 %17858 to i8
  %17860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17859, i8* %17860, align 1
  %17861 = lshr i32 %17842, 31
  %17862 = trunc i32 %17861 to i8
  %17863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17862, i8* %17863, align 1
  %17864 = lshr i32 %17837, 31
  %17865 = lshr i32 %17841, 31
  %17866 = xor i32 %17865, %17864
  %17867 = xor i32 %17861, %17864
  %17868 = add i32 %17867, %17866
  %17869 = icmp eq i32 %17868, 2
  %17870 = zext i1 %17869 to i8
  %17871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17870, i8* %17871, align 1
  store %struct.Memory* %loadMem_4b157b, %struct.Memory** %MEMORY
  %loadMem_4b1582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17873 = getelementptr inbounds %struct.GPR, %struct.GPR* %17872, i32 0, i32 33
  %17874 = getelementptr inbounds %struct.Reg, %struct.Reg* %17873, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %17874 to i64*
  %17875 = load i64, i64* %PC.i255
  %17876 = add i64 %17875, 231
  %17877 = load i64, i64* %PC.i255
  %17878 = add i64 %17877, 6
  %17879 = load i64, i64* %PC.i255
  %17880 = add i64 %17879, 6
  store i64 %17880, i64* %PC.i255
  %17881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17882 = load i8, i8* %17881, align 1
  %17883 = icmp ne i8 %17882, 0
  %17884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17885 = load i8, i8* %17884, align 1
  %17886 = icmp ne i8 %17885, 0
  %17887 = xor i1 %17883, %17886
  %17888 = xor i1 %17887, true
  %17889 = zext i1 %17888 to i8
  store i8 %17889, i8* %BRANCH_TAKEN, align 1
  %17890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17891 = select i1 %17887, i64 %17878, i64 %17876
  store i64 %17891, i64* %17890, align 8
  store %struct.Memory* %loadMem_4b1582, %struct.Memory** %MEMORY
  %loadBr_4b1582 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1582 = icmp eq i8 %loadBr_4b1582, 1
  br i1 %cmpBr_4b1582, label %block_.L_4b1669, label %block_4b1588

block_4b1588:                                     ; preds = %block_.L_4b1578
  %loadMem_4b1588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17893 = getelementptr inbounds %struct.GPR, %struct.GPR* %17892, i32 0, i32 33
  %17894 = getelementptr inbounds %struct.Reg, %struct.Reg* %17893, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %17894 to i64*
  %17895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17896 = getelementptr inbounds %struct.GPR, %struct.GPR* %17895, i32 0, i32 15
  %17897 = getelementptr inbounds %struct.Reg, %struct.Reg* %17896, i32 0, i32 0
  %RBP.i254 = bitcast %union.anon* %17897 to i64*
  %17898 = load i64, i64* %RBP.i254
  %17899 = sub i64 %17898, 40
  %17900 = load i64, i64* %PC.i253
  %17901 = add i64 %17900, 7
  store i64 %17901, i64* %PC.i253
  %17902 = inttoptr i64 %17899 to i32*
  store i32 0, i32* %17902
  store %struct.Memory* %loadMem_4b1588, %struct.Memory** %MEMORY
  br label %block_.L_4b158f

block_.L_4b158f:                                  ; preds = %block_.L_4b15c2, %block_4b1588
  %loadMem_4b158f = load %struct.Memory*, %struct.Memory** %MEMORY
  %17903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17904 = getelementptr inbounds %struct.GPR, %struct.GPR* %17903, i32 0, i32 33
  %17905 = getelementptr inbounds %struct.Reg, %struct.Reg* %17904, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %17905 to i64*
  %17906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17907 = getelementptr inbounds %struct.GPR, %struct.GPR* %17906, i32 0, i32 15
  %17908 = getelementptr inbounds %struct.Reg, %struct.Reg* %17907, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %17908 to i64*
  %17909 = load i64, i64* %RBP.i252
  %17910 = sub i64 %17909, 40
  %17911 = load i64, i64* %PC.i251
  %17912 = add i64 %17911, 4
  store i64 %17912, i64* %PC.i251
  %17913 = inttoptr i64 %17910 to i32*
  %17914 = load i32, i32* %17913
  %17915 = sub i32 %17914, 3
  %17916 = icmp ult i32 %17914, 3
  %17917 = zext i1 %17916 to i8
  %17918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17917, i8* %17918, align 1
  %17919 = and i32 %17915, 255
  %17920 = call i32 @llvm.ctpop.i32(i32 %17919)
  %17921 = trunc i32 %17920 to i8
  %17922 = and i8 %17921, 1
  %17923 = xor i8 %17922, 1
  %17924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17923, i8* %17924, align 1
  %17925 = xor i32 %17914, 3
  %17926 = xor i32 %17925, %17915
  %17927 = lshr i32 %17926, 4
  %17928 = trunc i32 %17927 to i8
  %17929 = and i8 %17928, 1
  %17930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %17929, i8* %17930, align 1
  %17931 = icmp eq i32 %17915, 0
  %17932 = zext i1 %17931 to i8
  %17933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17932, i8* %17933, align 1
  %17934 = lshr i32 %17915, 31
  %17935 = trunc i32 %17934 to i8
  %17936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17935, i8* %17936, align 1
  %17937 = lshr i32 %17914, 31
  %17938 = xor i32 %17934, %17937
  %17939 = add i32 %17938, %17937
  %17940 = icmp eq i32 %17939, 2
  %17941 = zext i1 %17940 to i8
  %17942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17941, i8* %17942, align 1
  store %struct.Memory* %loadMem_4b158f, %struct.Memory** %MEMORY
  %loadMem_4b1593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17944 = getelementptr inbounds %struct.GPR, %struct.GPR* %17943, i32 0, i32 33
  %17945 = getelementptr inbounds %struct.Reg, %struct.Reg* %17944, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %17945 to i64*
  %17946 = load i64, i64* %PC.i250
  %17947 = add i64 %17946, 195
  %17948 = load i64, i64* %PC.i250
  %17949 = add i64 %17948, 6
  %17950 = load i64, i64* %PC.i250
  %17951 = add i64 %17950, 6
  store i64 %17951, i64* %PC.i250
  %17952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %17953 = load i8, i8* %17952, align 1
  %17954 = icmp ne i8 %17953, 0
  %17955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %17956 = load i8, i8* %17955, align 1
  %17957 = icmp ne i8 %17956, 0
  %17958 = xor i1 %17954, %17957
  %17959 = xor i1 %17958, true
  %17960 = zext i1 %17959 to i8
  store i8 %17960, i8* %BRANCH_TAKEN, align 1
  %17961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17962 = select i1 %17958, i64 %17949, i64 %17947
  store i64 %17962, i64* %17961, align 8
  store %struct.Memory* %loadMem_4b1593, %struct.Memory** %MEMORY
  %loadBr_4b1593 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1593 = icmp eq i8 %loadBr_4b1593, 1
  br i1 %cmpBr_4b1593, label %block_.L_4b1656, label %block_4b1599

block_4b1599:                                     ; preds = %block_.L_4b158f
  %loadMem_4b1599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17964 = getelementptr inbounds %struct.GPR, %struct.GPR* %17963, i32 0, i32 33
  %17965 = getelementptr inbounds %struct.Reg, %struct.Reg* %17964, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %17965 to i64*
  %17966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17967 = getelementptr inbounds %struct.GPR, %struct.GPR* %17966, i32 0, i32 15
  %17968 = getelementptr inbounds %struct.Reg, %struct.Reg* %17967, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %17968 to i64*
  %17969 = load i64, i64* %RBP.i249
  %17970 = sub i64 %17969, 40
  %17971 = load i64, i64* %PC.i248
  %17972 = add i64 %17971, 4
  store i64 %17972, i64* %PC.i248
  %17973 = inttoptr i64 %17970 to i32*
  %17974 = load i32, i32* %17973
  %17975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17975, align 1
  %17976 = and i32 %17974, 255
  %17977 = call i32 @llvm.ctpop.i32(i32 %17976)
  %17978 = trunc i32 %17977 to i8
  %17979 = and i8 %17978, 1
  %17980 = xor i8 %17979, 1
  %17981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17980, i8* %17981, align 1
  %17982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %17982, align 1
  %17983 = icmp eq i32 %17974, 0
  %17984 = zext i1 %17983 to i8
  %17985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17984, i8* %17985, align 1
  %17986 = lshr i32 %17974, 31
  %17987 = trunc i32 %17986 to i8
  %17988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %17987, i8* %17988, align 1
  %17989 = lshr i32 %17974, 31
  %17990 = xor i32 %17986, %17989
  %17991 = add i32 %17990, %17989
  %17992 = icmp eq i32 %17991, 2
  %17993 = zext i1 %17992 to i8
  %17994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %17993, i8* %17994, align 1
  store %struct.Memory* %loadMem_4b1599, %struct.Memory** %MEMORY
  %loadMem_4b159d = load %struct.Memory*, %struct.Memory** %MEMORY
  %17995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17996 = getelementptr inbounds %struct.GPR, %struct.GPR* %17995, i32 0, i32 33
  %17997 = getelementptr inbounds %struct.Reg, %struct.Reg* %17996, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %17997 to i64*
  %17998 = load i64, i64* %PC.i247
  %17999 = add i64 %17998, 24
  %18000 = load i64, i64* %PC.i247
  %18001 = add i64 %18000, 6
  %18002 = load i64, i64* %PC.i247
  %18003 = add i64 %18002, 6
  store i64 %18003, i64* %PC.i247
  %18004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %18005 = load i8, i8* %18004, align 1
  %18006 = icmp eq i8 %18005, 0
  %18007 = zext i1 %18006 to i8
  store i8 %18007, i8* %BRANCH_TAKEN, align 1
  %18008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18009 = select i1 %18006, i64 %17999, i64 %18001
  store i64 %18009, i64* %18008, align 8
  store %struct.Memory* %loadMem_4b159d, %struct.Memory** %MEMORY
  %loadBr_4b159d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b159d = icmp eq i8 %loadBr_4b159d, 1
  br i1 %cmpBr_4b159d, label %block_.L_4b15b5, label %block_4b15a3

block_4b15a3:                                     ; preds = %block_4b1599
  %loadMem_4b15a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18011 = getelementptr inbounds %struct.GPR, %struct.GPR* %18010, i32 0, i32 33
  %18012 = getelementptr inbounds %struct.Reg, %struct.Reg* %18011, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %18012 to i64*
  %18013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18014 = getelementptr inbounds %struct.GPR, %struct.GPR* %18013, i32 0, i32 1
  %18015 = getelementptr inbounds %struct.Reg, %struct.Reg* %18014, i32 0, i32 0
  %RAX.i246 = bitcast %union.anon* %18015 to i64*
  %18016 = load i64, i64* %PC.i245
  %18017 = add i64 %18016, 7
  store i64 %18017, i64* %PC.i245
  %18018 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %18019 = zext i32 %18018 to i64
  store i64 %18019, i64* %RAX.i246, align 8
  store %struct.Memory* %loadMem_4b15a3, %struct.Memory** %MEMORY
  %loadMem_4b15aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %18020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18021 = getelementptr inbounds %struct.GPR, %struct.GPR* %18020, i32 0, i32 33
  %18022 = getelementptr inbounds %struct.Reg, %struct.Reg* %18021, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %18022 to i64*
  %18023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18024 = getelementptr inbounds %struct.GPR, %struct.GPR* %18023, i32 0, i32 1
  %18025 = getelementptr inbounds %struct.Reg, %struct.Reg* %18024, i32 0, i32 0
  %EAX.i243 = bitcast %union.anon* %18025 to i32*
  %18026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18027 = getelementptr inbounds %struct.GPR, %struct.GPR* %18026, i32 0, i32 15
  %18028 = getelementptr inbounds %struct.Reg, %struct.Reg* %18027, i32 0, i32 0
  %RBP.i244 = bitcast %union.anon* %18028 to i64*
  %18029 = load i64, i64* %RBP.i244
  %18030 = sub i64 %18029, 35464
  %18031 = load i32, i32* %EAX.i243
  %18032 = zext i32 %18031 to i64
  %18033 = load i64, i64* %PC.i242
  %18034 = add i64 %18033, 6
  store i64 %18034, i64* %PC.i242
  %18035 = inttoptr i64 %18030 to i32*
  store i32 %18031, i32* %18035
  store %struct.Memory* %loadMem_4b15aa, %struct.Memory** %MEMORY
  %loadMem_4b15b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18037 = getelementptr inbounds %struct.GPR, %struct.GPR* %18036, i32 0, i32 33
  %18038 = getelementptr inbounds %struct.Reg, %struct.Reg* %18037, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %18038 to i64*
  %18039 = load i64, i64* %PC.i241
  %18040 = add i64 %18039, 18
  %18041 = load i64, i64* %PC.i241
  %18042 = add i64 %18041, 5
  store i64 %18042, i64* %PC.i241
  %18043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18040, i64* %18043, align 8
  store %struct.Memory* %loadMem_4b15b0, %struct.Memory** %MEMORY
  br label %block_.L_4b15c2

block_.L_4b15b5:                                  ; preds = %block_4b1599
  %loadMem_4b15b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18045 = getelementptr inbounds %struct.GPR, %struct.GPR* %18044, i32 0, i32 33
  %18046 = getelementptr inbounds %struct.Reg, %struct.Reg* %18045, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %18046 to i64*
  %18047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18048 = getelementptr inbounds %struct.GPR, %struct.GPR* %18047, i32 0, i32 1
  %18049 = getelementptr inbounds %struct.Reg, %struct.Reg* %18048, i32 0, i32 0
  %RAX.i240 = bitcast %union.anon* %18049 to i64*
  %18050 = load i64, i64* %PC.i239
  %18051 = add i64 %18050, 7
  store i64 %18051, i64* %PC.i239
  %18052 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %18053 = zext i32 %18052 to i64
  store i64 %18053, i64* %RAX.i240, align 8
  store %struct.Memory* %loadMem_4b15b5, %struct.Memory** %MEMORY
  %loadMem_4b15bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %18054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18055 = getelementptr inbounds %struct.GPR, %struct.GPR* %18054, i32 0, i32 33
  %18056 = getelementptr inbounds %struct.Reg, %struct.Reg* %18055, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %18056 to i64*
  %18057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18058 = getelementptr inbounds %struct.GPR, %struct.GPR* %18057, i32 0, i32 1
  %18059 = getelementptr inbounds %struct.Reg, %struct.Reg* %18058, i32 0, i32 0
  %EAX.i237 = bitcast %union.anon* %18059 to i32*
  %18060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18061 = getelementptr inbounds %struct.GPR, %struct.GPR* %18060, i32 0, i32 15
  %18062 = getelementptr inbounds %struct.Reg, %struct.Reg* %18061, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %18062 to i64*
  %18063 = load i64, i64* %RBP.i238
  %18064 = sub i64 %18063, 35464
  %18065 = load i32, i32* %EAX.i237
  %18066 = zext i32 %18065 to i64
  %18067 = load i64, i64* %PC.i236
  %18068 = add i64 %18067, 6
  store i64 %18068, i64* %PC.i236
  %18069 = inttoptr i64 %18064 to i32*
  store i32 %18065, i32* %18069
  store %struct.Memory* %loadMem_4b15bc, %struct.Memory** %MEMORY
  br label %block_.L_4b15c2

block_.L_4b15c2:                                  ; preds = %block_.L_4b15b5, %block_4b15a3
  %loadMem_4b15c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18071 = getelementptr inbounds %struct.GPR, %struct.GPR* %18070, i32 0, i32 33
  %18072 = getelementptr inbounds %struct.Reg, %struct.Reg* %18071, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %18072 to i64*
  %18073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18074 = getelementptr inbounds %struct.GPR, %struct.GPR* %18073, i32 0, i32 1
  %18075 = getelementptr inbounds %struct.Reg, %struct.Reg* %18074, i32 0, i32 0
  %RAX.i234 = bitcast %union.anon* %18075 to i64*
  %18076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18077 = getelementptr inbounds %struct.GPR, %struct.GPR* %18076, i32 0, i32 15
  %18078 = getelementptr inbounds %struct.Reg, %struct.Reg* %18077, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %18078 to i64*
  %18079 = load i64, i64* %RBP.i235
  %18080 = sub i64 %18079, 35464
  %18081 = load i64, i64* %PC.i233
  %18082 = add i64 %18081, 6
  store i64 %18082, i64* %PC.i233
  %18083 = inttoptr i64 %18080 to i32*
  %18084 = load i32, i32* %18083
  %18085 = zext i32 %18084 to i64
  store i64 %18085, i64* %RAX.i234, align 8
  store %struct.Memory* %loadMem_4b15c2, %struct.Memory** %MEMORY
  %loadMem_4b15c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18087 = getelementptr inbounds %struct.GPR, %struct.GPR* %18086, i32 0, i32 33
  %18088 = getelementptr inbounds %struct.Reg, %struct.Reg* %18087, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %18088 to i64*
  %18089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18090 = getelementptr inbounds %struct.GPR, %struct.GPR* %18089, i32 0, i32 1
  %18091 = getelementptr inbounds %struct.Reg, %struct.Reg* %18090, i32 0, i32 0
  %EAX.i231 = bitcast %union.anon* %18091 to i32*
  %18092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18093 = getelementptr inbounds %struct.GPR, %struct.GPR* %18092, i32 0, i32 15
  %18094 = getelementptr inbounds %struct.Reg, %struct.Reg* %18093, i32 0, i32 0
  %RBP.i232 = bitcast %union.anon* %18094 to i64*
  %18095 = load i64, i64* %RBP.i232
  %18096 = sub i64 %18095, 772
  %18097 = load i32, i32* %EAX.i231
  %18098 = zext i32 %18097 to i64
  %18099 = load i64, i64* %PC.i230
  %18100 = add i64 %18099, 6
  store i64 %18100, i64* %PC.i230
  %18101 = inttoptr i64 %18096 to i32*
  store i32 %18097, i32* %18101
  store %struct.Memory* %loadMem_4b15c8, %struct.Memory** %MEMORY
  %loadMem_4b15ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %18102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18103 = getelementptr inbounds %struct.GPR, %struct.GPR* %18102, i32 0, i32 33
  %18104 = getelementptr inbounds %struct.Reg, %struct.Reg* %18103, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %18104 to i64*
  %18105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18106 = getelementptr inbounds %struct.GPR, %struct.GPR* %18105, i32 0, i32 5
  %18107 = getelementptr inbounds %struct.Reg, %struct.Reg* %18106, i32 0, i32 0
  %RCX.i229 = bitcast %union.anon* %18107 to i64*
  %18108 = load i64, i64* %PC.i228
  %18109 = add i64 %18108, 8
  store i64 %18109, i64* %PC.i228
  %18110 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %18110, i64* %RCX.i229, align 8
  store %struct.Memory* %loadMem_4b15ce, %struct.Memory** %MEMORY
  %loadMem_4b15d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18112 = getelementptr inbounds %struct.GPR, %struct.GPR* %18111, i32 0, i32 33
  %18113 = getelementptr inbounds %struct.Reg, %struct.Reg* %18112, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %18113 to i64*
  %18114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18115 = getelementptr inbounds %struct.GPR, %struct.GPR* %18114, i32 0, i32 5
  %18116 = getelementptr inbounds %struct.Reg, %struct.Reg* %18115, i32 0, i32 0
  %RCX.i227 = bitcast %union.anon* %18116 to i64*
  %18117 = load i64, i64* %RCX.i227
  %18118 = load i64, i64* %PC.i226
  %18119 = add i64 %18118, 3
  store i64 %18119, i64* %PC.i226
  %18120 = inttoptr i64 %18117 to i64*
  %18121 = load i64, i64* %18120
  store i64 %18121, i64* %RCX.i227, align 8
  store %struct.Memory* %loadMem_4b15d6, %struct.Memory** %MEMORY
  %loadMem_4b15d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18123 = getelementptr inbounds %struct.GPR, %struct.GPR* %18122, i32 0, i32 33
  %18124 = getelementptr inbounds %struct.Reg, %struct.Reg* %18123, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %18124 to i64*
  %18125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18126 = getelementptr inbounds %struct.GPR, %struct.GPR* %18125, i32 0, i32 7
  %18127 = getelementptr inbounds %struct.Reg, %struct.Reg* %18126, i32 0, i32 0
  %RDX.i224 = bitcast %union.anon* %18127 to i64*
  %18128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18129 = getelementptr inbounds %struct.GPR, %struct.GPR* %18128, i32 0, i32 15
  %18130 = getelementptr inbounds %struct.Reg, %struct.Reg* %18129, i32 0, i32 0
  %RBP.i225 = bitcast %union.anon* %18130 to i64*
  %18131 = load i64, i64* %RBP.i225
  %18132 = sub i64 %18131, 8
  %18133 = load i64, i64* %PC.i223
  %18134 = add i64 %18133, 4
  store i64 %18134, i64* %PC.i223
  %18135 = inttoptr i64 %18132 to i32*
  %18136 = load i32, i32* %18135
  %18137 = sext i32 %18136 to i64
  store i64 %18137, i64* %RDX.i224, align 8
  store %struct.Memory* %loadMem_4b15d9, %struct.Memory** %MEMORY
  %loadMem_4b15dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %18138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18139 = getelementptr inbounds %struct.GPR, %struct.GPR* %18138, i32 0, i32 33
  %18140 = getelementptr inbounds %struct.Reg, %struct.Reg* %18139, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %18140 to i64*
  %18141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18142 = getelementptr inbounds %struct.GPR, %struct.GPR* %18141, i32 0, i32 5
  %18143 = getelementptr inbounds %struct.Reg, %struct.Reg* %18142, i32 0, i32 0
  %RCX.i221 = bitcast %union.anon* %18143 to i64*
  %18144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18145 = getelementptr inbounds %struct.GPR, %struct.GPR* %18144, i32 0, i32 7
  %18146 = getelementptr inbounds %struct.Reg, %struct.Reg* %18145, i32 0, i32 0
  %RDX.i222 = bitcast %union.anon* %18146 to i64*
  %18147 = load i64, i64* %RCX.i221
  %18148 = load i64, i64* %RDX.i222
  %18149 = mul i64 %18148, 8
  %18150 = add i64 %18149, %18147
  %18151 = load i64, i64* %PC.i220
  %18152 = add i64 %18151, 4
  store i64 %18152, i64* %PC.i220
  %18153 = inttoptr i64 %18150 to i64*
  %18154 = load i64, i64* %18153
  store i64 %18154, i64* %RCX.i221, align 8
  store %struct.Memory* %loadMem_4b15dd, %struct.Memory** %MEMORY
  %loadMem_4b15e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18156 = getelementptr inbounds %struct.GPR, %struct.GPR* %18155, i32 0, i32 33
  %18157 = getelementptr inbounds %struct.Reg, %struct.Reg* %18156, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %18157 to i64*
  %18158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18159 = getelementptr inbounds %struct.GPR, %struct.GPR* %18158, i32 0, i32 7
  %18160 = getelementptr inbounds %struct.Reg, %struct.Reg* %18159, i32 0, i32 0
  %RDX.i218 = bitcast %union.anon* %18160 to i64*
  %18161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18162 = getelementptr inbounds %struct.GPR, %struct.GPR* %18161, i32 0, i32 15
  %18163 = getelementptr inbounds %struct.Reg, %struct.Reg* %18162, i32 0, i32 0
  %RBP.i219 = bitcast %union.anon* %18163 to i64*
  %18164 = load i64, i64* %RBP.i219
  %18165 = sub i64 %18164, 40
  %18166 = load i64, i64* %PC.i217
  %18167 = add i64 %18166, 4
  store i64 %18167, i64* %PC.i217
  %18168 = inttoptr i64 %18165 to i32*
  %18169 = load i32, i32* %18168
  %18170 = sext i32 %18169 to i64
  store i64 %18170, i64* %RDX.i218, align 8
  store %struct.Memory* %loadMem_4b15e1, %struct.Memory** %MEMORY
  %loadMem_4b15e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18172 = getelementptr inbounds %struct.GPR, %struct.GPR* %18171, i32 0, i32 33
  %18173 = getelementptr inbounds %struct.Reg, %struct.Reg* %18172, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %18173 to i64*
  %18174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18175 = getelementptr inbounds %struct.GPR, %struct.GPR* %18174, i32 0, i32 1
  %18176 = getelementptr inbounds %struct.Reg, %struct.Reg* %18175, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %18176 to i64*
  %18177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18178 = getelementptr inbounds %struct.GPR, %struct.GPR* %18177, i32 0, i32 5
  %18179 = getelementptr inbounds %struct.Reg, %struct.Reg* %18178, i32 0, i32 0
  %RCX.i215 = bitcast %union.anon* %18179 to i64*
  %18180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18181 = getelementptr inbounds %struct.GPR, %struct.GPR* %18180, i32 0, i32 7
  %18182 = getelementptr inbounds %struct.Reg, %struct.Reg* %18181, i32 0, i32 0
  %RDX.i216 = bitcast %union.anon* %18182 to i64*
  %18183 = load i64, i64* %RCX.i215
  %18184 = load i64, i64* %RDX.i216
  %18185 = mul i64 %18184, 4
  %18186 = add i64 %18185, %18183
  %18187 = load i64, i64* %PC.i213
  %18188 = add i64 %18187, 3
  store i64 %18188, i64* %PC.i213
  %18189 = inttoptr i64 %18186 to i32*
  %18190 = load i32, i32* %18189
  %18191 = zext i32 %18190 to i64
  store i64 %18191, i64* %RAX.i214, align 8
  store %struct.Memory* %loadMem_4b15e5, %struct.Memory** %MEMORY
  %loadMem_4b15e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18193 = getelementptr inbounds %struct.GPR, %struct.GPR* %18192, i32 0, i32 33
  %18194 = getelementptr inbounds %struct.Reg, %struct.Reg* %18193, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %18194 to i64*
  %18195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18196 = getelementptr inbounds %struct.GPR, %struct.GPR* %18195, i32 0, i32 5
  %18197 = getelementptr inbounds %struct.Reg, %struct.Reg* %18196, i32 0, i32 0
  %RCX.i212 = bitcast %union.anon* %18197 to i64*
  %18198 = load i64, i64* %PC.i211
  %18199 = add i64 %18198, 8
  store i64 %18199, i64* %PC.i211
  %18200 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %18200, i64* %RCX.i212, align 8
  store %struct.Memory* %loadMem_4b15e8, %struct.Memory** %MEMORY
  %loadMem_4b15f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18202 = getelementptr inbounds %struct.GPR, %struct.GPR* %18201, i32 0, i32 33
  %18203 = getelementptr inbounds %struct.Reg, %struct.Reg* %18202, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %18203 to i64*
  %18204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18205 = getelementptr inbounds %struct.GPR, %struct.GPR* %18204, i32 0, i32 5
  %18206 = getelementptr inbounds %struct.Reg, %struct.Reg* %18205, i32 0, i32 0
  %RCX.i210 = bitcast %union.anon* %18206 to i64*
  %18207 = load i64, i64* %RCX.i210
  %18208 = load i64, i64* %PC.i209
  %18209 = add i64 %18208, 3
  store i64 %18209, i64* %PC.i209
  %18210 = inttoptr i64 %18207 to i64*
  %18211 = load i64, i64* %18210
  store i64 %18211, i64* %RCX.i210, align 8
  store %struct.Memory* %loadMem_4b15f0, %struct.Memory** %MEMORY
  %loadMem_4b15f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18213 = getelementptr inbounds %struct.GPR, %struct.GPR* %18212, i32 0, i32 33
  %18214 = getelementptr inbounds %struct.Reg, %struct.Reg* %18213, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %18214 to i64*
  %18215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18216 = getelementptr inbounds %struct.GPR, %struct.GPR* %18215, i32 0, i32 7
  %18217 = getelementptr inbounds %struct.Reg, %struct.Reg* %18216, i32 0, i32 0
  %RDX.i207 = bitcast %union.anon* %18217 to i64*
  %18218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18219 = getelementptr inbounds %struct.GPR, %struct.GPR* %18218, i32 0, i32 15
  %18220 = getelementptr inbounds %struct.Reg, %struct.Reg* %18219, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %18220 to i64*
  %18221 = load i64, i64* %RBP.i208
  %18222 = sub i64 %18221, 8
  %18223 = load i64, i64* %PC.i206
  %18224 = add i64 %18223, 4
  store i64 %18224, i64* %PC.i206
  %18225 = inttoptr i64 %18222 to i32*
  %18226 = load i32, i32* %18225
  %18227 = sext i32 %18226 to i64
  store i64 %18227, i64* %RDX.i207, align 8
  store %struct.Memory* %loadMem_4b15f3, %struct.Memory** %MEMORY
  %loadMem_4b15f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18229 = getelementptr inbounds %struct.GPR, %struct.GPR* %18228, i32 0, i32 33
  %18230 = getelementptr inbounds %struct.Reg, %struct.Reg* %18229, i32 0, i32 0
  %PC.i203 = bitcast %union.anon* %18230 to i64*
  %18231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18232 = getelementptr inbounds %struct.GPR, %struct.GPR* %18231, i32 0, i32 5
  %18233 = getelementptr inbounds %struct.Reg, %struct.Reg* %18232, i32 0, i32 0
  %RCX.i204 = bitcast %union.anon* %18233 to i64*
  %18234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18235 = getelementptr inbounds %struct.GPR, %struct.GPR* %18234, i32 0, i32 7
  %18236 = getelementptr inbounds %struct.Reg, %struct.Reg* %18235, i32 0, i32 0
  %RDX.i205 = bitcast %union.anon* %18236 to i64*
  %18237 = load i64, i64* %RCX.i204
  %18238 = load i64, i64* %RDX.i205
  %18239 = mul i64 %18238, 8
  %18240 = add i64 %18239, %18237
  %18241 = load i64, i64* %PC.i203
  %18242 = add i64 %18241, 4
  store i64 %18242, i64* %PC.i203
  %18243 = inttoptr i64 %18240 to i64*
  %18244 = load i64, i64* %18243
  store i64 %18244, i64* %RCX.i204, align 8
  store %struct.Memory* %loadMem_4b15f7, %struct.Memory** %MEMORY
  %loadMem_4b15fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %18245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18246 = getelementptr inbounds %struct.GPR, %struct.GPR* %18245, i32 0, i32 33
  %18247 = getelementptr inbounds %struct.Reg, %struct.Reg* %18246, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %18247 to i64*
  %18248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18249 = getelementptr inbounds %struct.GPR, %struct.GPR* %18248, i32 0, i32 7
  %18250 = getelementptr inbounds %struct.Reg, %struct.Reg* %18249, i32 0, i32 0
  %RDX.i201 = bitcast %union.anon* %18250 to i64*
  %18251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18252 = getelementptr inbounds %struct.GPR, %struct.GPR* %18251, i32 0, i32 15
  %18253 = getelementptr inbounds %struct.Reg, %struct.Reg* %18252, i32 0, i32 0
  %RBP.i202 = bitcast %union.anon* %18253 to i64*
  %18254 = load i64, i64* %RBP.i202
  %18255 = sub i64 %18254, 12
  %18256 = load i64, i64* %PC.i200
  %18257 = add i64 %18256, 4
  store i64 %18257, i64* %PC.i200
  %18258 = inttoptr i64 %18255 to i32*
  %18259 = load i32, i32* %18258
  %18260 = sext i32 %18259 to i64
  store i64 %18260, i64* %RDX.i201, align 8
  store %struct.Memory* %loadMem_4b15fb, %struct.Memory** %MEMORY
  %loadMem_4b15ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %18261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18262 = getelementptr inbounds %struct.GPR, %struct.GPR* %18261, i32 0, i32 33
  %18263 = getelementptr inbounds %struct.Reg, %struct.Reg* %18262, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %18263 to i64*
  %18264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18265 = getelementptr inbounds %struct.GPR, %struct.GPR* %18264, i32 0, i32 5
  %18266 = getelementptr inbounds %struct.Reg, %struct.Reg* %18265, i32 0, i32 0
  %RCX.i198 = bitcast %union.anon* %18266 to i64*
  %18267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18268 = getelementptr inbounds %struct.GPR, %struct.GPR* %18267, i32 0, i32 7
  %18269 = getelementptr inbounds %struct.Reg, %struct.Reg* %18268, i32 0, i32 0
  %RDX.i199 = bitcast %union.anon* %18269 to i64*
  %18270 = load i64, i64* %RCX.i198
  %18271 = load i64, i64* %RDX.i199
  %18272 = mul i64 %18271, 8
  %18273 = add i64 %18272, %18270
  %18274 = load i64, i64* %PC.i197
  %18275 = add i64 %18274, 4
  store i64 %18275, i64* %PC.i197
  %18276 = inttoptr i64 %18273 to i64*
  %18277 = load i64, i64* %18276
  store i64 %18277, i64* %RCX.i198, align 8
  store %struct.Memory* %loadMem_4b15ff, %struct.Memory** %MEMORY
  %loadMem_4b1603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18279 = getelementptr inbounds %struct.GPR, %struct.GPR* %18278, i32 0, i32 33
  %18280 = getelementptr inbounds %struct.Reg, %struct.Reg* %18279, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %18280 to i64*
  %18281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18282 = getelementptr inbounds %struct.GPR, %struct.GPR* %18281, i32 0, i32 7
  %18283 = getelementptr inbounds %struct.Reg, %struct.Reg* %18282, i32 0, i32 0
  %RDX.i195 = bitcast %union.anon* %18283 to i64*
  %18284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18285 = getelementptr inbounds %struct.GPR, %struct.GPR* %18284, i32 0, i32 15
  %18286 = getelementptr inbounds %struct.Reg, %struct.Reg* %18285, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %18286 to i64*
  %18287 = load i64, i64* %RBP.i196
  %18288 = sub i64 %18287, 40
  %18289 = load i64, i64* %PC.i194
  %18290 = add i64 %18289, 4
  store i64 %18290, i64* %PC.i194
  %18291 = inttoptr i64 %18288 to i32*
  %18292 = load i32, i32* %18291
  %18293 = sext i32 %18292 to i64
  store i64 %18293, i64* %RDX.i195, align 8
  store %struct.Memory* %loadMem_4b1603, %struct.Memory** %MEMORY
  %loadMem_4b1607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18295 = getelementptr inbounds %struct.GPR, %struct.GPR* %18294, i32 0, i32 33
  %18296 = getelementptr inbounds %struct.Reg, %struct.Reg* %18295, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %18296 to i64*
  %18297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18298 = getelementptr inbounds %struct.GPR, %struct.GPR* %18297, i32 0, i32 1
  %18299 = getelementptr inbounds %struct.Reg, %struct.Reg* %18298, i32 0, i32 0
  %EAX.i191 = bitcast %union.anon* %18299 to i32*
  %18300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18301 = getelementptr inbounds %struct.GPR, %struct.GPR* %18300, i32 0, i32 5
  %18302 = getelementptr inbounds %struct.Reg, %struct.Reg* %18301, i32 0, i32 0
  %RCX.i192 = bitcast %union.anon* %18302 to i64*
  %18303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18304 = getelementptr inbounds %struct.GPR, %struct.GPR* %18303, i32 0, i32 7
  %18305 = getelementptr inbounds %struct.Reg, %struct.Reg* %18304, i32 0, i32 0
  %RDX.i193 = bitcast %union.anon* %18305 to i64*
  %18306 = load i64, i64* %RCX.i192
  %18307 = load i64, i64* %RDX.i193
  %18308 = mul i64 %18307, 4
  %18309 = add i64 %18308, %18306
  %18310 = load i32, i32* %EAX.i191
  %18311 = zext i32 %18310 to i64
  %18312 = load i64, i64* %PC.i190
  %18313 = add i64 %18312, 3
  store i64 %18313, i64* %PC.i190
  %18314 = inttoptr i64 %18309 to i32*
  store i32 %18310, i32* %18314
  store %struct.Memory* %loadMem_4b1607, %struct.Memory** %MEMORY
  %loadMem_4b160a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18316 = getelementptr inbounds %struct.GPR, %struct.GPR* %18315, i32 0, i32 33
  %18317 = getelementptr inbounds %struct.Reg, %struct.Reg* %18316, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %18317 to i64*
  %18318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18319 = getelementptr inbounds %struct.GPR, %struct.GPR* %18318, i32 0, i32 5
  %18320 = getelementptr inbounds %struct.Reg, %struct.Reg* %18319, i32 0, i32 0
  %RCX.i189 = bitcast %union.anon* %18320 to i64*
  %18321 = load i64, i64* %PC.i188
  %18322 = add i64 %18321, 8
  store i64 %18322, i64* %PC.i188
  %18323 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %18323, i64* %RCX.i189, align 8
  store %struct.Memory* %loadMem_4b160a, %struct.Memory** %MEMORY
  %loadMem_4b1612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18325 = getelementptr inbounds %struct.GPR, %struct.GPR* %18324, i32 0, i32 33
  %18326 = getelementptr inbounds %struct.Reg, %struct.Reg* %18325, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %18326 to i64*
  %18327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18328 = getelementptr inbounds %struct.GPR, %struct.GPR* %18327, i32 0, i32 5
  %18329 = getelementptr inbounds %struct.Reg, %struct.Reg* %18328, i32 0, i32 0
  %RCX.i187 = bitcast %union.anon* %18329 to i64*
  %18330 = load i64, i64* %RCX.i187
  %18331 = add i64 %18330, 8
  %18332 = load i64, i64* %PC.i186
  %18333 = add i64 %18332, 4
  store i64 %18333, i64* %PC.i186
  %18334 = inttoptr i64 %18331 to i64*
  %18335 = load i64, i64* %18334
  store i64 %18335, i64* %RCX.i187, align 8
  store %struct.Memory* %loadMem_4b1612, %struct.Memory** %MEMORY
  %loadMem_4b1616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18337 = getelementptr inbounds %struct.GPR, %struct.GPR* %18336, i32 0, i32 33
  %18338 = getelementptr inbounds %struct.Reg, %struct.Reg* %18337, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %18338 to i64*
  %18339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18340 = getelementptr inbounds %struct.GPR, %struct.GPR* %18339, i32 0, i32 7
  %18341 = getelementptr inbounds %struct.Reg, %struct.Reg* %18340, i32 0, i32 0
  %RDX.i184 = bitcast %union.anon* %18341 to i64*
  %18342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18343 = getelementptr inbounds %struct.GPR, %struct.GPR* %18342, i32 0, i32 15
  %18344 = getelementptr inbounds %struct.Reg, %struct.Reg* %18343, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %18344 to i64*
  %18345 = load i64, i64* %RBP.i185
  %18346 = sub i64 %18345, 12
  %18347 = load i64, i64* %PC.i183
  %18348 = add i64 %18347, 4
  store i64 %18348, i64* %PC.i183
  %18349 = inttoptr i64 %18346 to i32*
  %18350 = load i32, i32* %18349
  %18351 = sext i32 %18350 to i64
  store i64 %18351, i64* %RDX.i184, align 8
  store %struct.Memory* %loadMem_4b1616, %struct.Memory** %MEMORY
  %loadMem_4b161a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18353 = getelementptr inbounds %struct.GPR, %struct.GPR* %18352, i32 0, i32 33
  %18354 = getelementptr inbounds %struct.Reg, %struct.Reg* %18353, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %18354 to i64*
  %18355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18356 = getelementptr inbounds %struct.GPR, %struct.GPR* %18355, i32 0, i32 5
  %18357 = getelementptr inbounds %struct.Reg, %struct.Reg* %18356, i32 0, i32 0
  %RCX.i181 = bitcast %union.anon* %18357 to i64*
  %18358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18359 = getelementptr inbounds %struct.GPR, %struct.GPR* %18358, i32 0, i32 7
  %18360 = getelementptr inbounds %struct.Reg, %struct.Reg* %18359, i32 0, i32 0
  %RDX.i182 = bitcast %union.anon* %18360 to i64*
  %18361 = load i64, i64* %RCX.i181
  %18362 = load i64, i64* %RDX.i182
  %18363 = mul i64 %18362, 8
  %18364 = add i64 %18363, %18361
  %18365 = load i64, i64* %PC.i180
  %18366 = add i64 %18365, 4
  store i64 %18366, i64* %PC.i180
  %18367 = inttoptr i64 %18364 to i64*
  %18368 = load i64, i64* %18367
  store i64 %18368, i64* %RCX.i181, align 8
  store %struct.Memory* %loadMem_4b161a, %struct.Memory** %MEMORY
  %loadMem_4b161e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18370 = getelementptr inbounds %struct.GPR, %struct.GPR* %18369, i32 0, i32 33
  %18371 = getelementptr inbounds %struct.Reg, %struct.Reg* %18370, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %18371 to i64*
  %18372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18373 = getelementptr inbounds %struct.GPR, %struct.GPR* %18372, i32 0, i32 7
  %18374 = getelementptr inbounds %struct.Reg, %struct.Reg* %18373, i32 0, i32 0
  %RDX.i178 = bitcast %union.anon* %18374 to i64*
  %18375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18376 = getelementptr inbounds %struct.GPR, %struct.GPR* %18375, i32 0, i32 15
  %18377 = getelementptr inbounds %struct.Reg, %struct.Reg* %18376, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %18377 to i64*
  %18378 = load i64, i64* %RBP.i179
  %18379 = sub i64 %18378, 40
  %18380 = load i64, i64* %PC.i177
  %18381 = add i64 %18380, 4
  store i64 %18381, i64* %PC.i177
  %18382 = inttoptr i64 %18379 to i32*
  %18383 = load i32, i32* %18382
  %18384 = sext i32 %18383 to i64
  store i64 %18384, i64* %RDX.i178, align 8
  store %struct.Memory* %loadMem_4b161e, %struct.Memory** %MEMORY
  %loadMem_4b1622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18386 = getelementptr inbounds %struct.GPR, %struct.GPR* %18385, i32 0, i32 33
  %18387 = getelementptr inbounds %struct.Reg, %struct.Reg* %18386, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %18387 to i64*
  %18388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18389 = getelementptr inbounds %struct.GPR, %struct.GPR* %18388, i32 0, i32 1
  %18390 = getelementptr inbounds %struct.Reg, %struct.Reg* %18389, i32 0, i32 0
  %RAX.i174 = bitcast %union.anon* %18390 to i64*
  %18391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18392 = getelementptr inbounds %struct.GPR, %struct.GPR* %18391, i32 0, i32 5
  %18393 = getelementptr inbounds %struct.Reg, %struct.Reg* %18392, i32 0, i32 0
  %RCX.i175 = bitcast %union.anon* %18393 to i64*
  %18394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18395 = getelementptr inbounds %struct.GPR, %struct.GPR* %18394, i32 0, i32 7
  %18396 = getelementptr inbounds %struct.Reg, %struct.Reg* %18395, i32 0, i32 0
  %RDX.i176 = bitcast %union.anon* %18396 to i64*
  %18397 = load i64, i64* %RCX.i175
  %18398 = load i64, i64* %RDX.i176
  %18399 = mul i64 %18398, 4
  %18400 = add i64 %18399, %18397
  %18401 = load i64, i64* %PC.i173
  %18402 = add i64 %18401, 3
  store i64 %18402, i64* %PC.i173
  %18403 = inttoptr i64 %18400 to i32*
  %18404 = load i32, i32* %18403
  %18405 = zext i32 %18404 to i64
  store i64 %18405, i64* %RAX.i174, align 8
  store %struct.Memory* %loadMem_4b1622, %struct.Memory** %MEMORY
  %loadMem_4b1625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18407 = getelementptr inbounds %struct.GPR, %struct.GPR* %18406, i32 0, i32 33
  %18408 = getelementptr inbounds %struct.Reg, %struct.Reg* %18407, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %18408 to i64*
  %18409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18410 = getelementptr inbounds %struct.GPR, %struct.GPR* %18409, i32 0, i32 5
  %18411 = getelementptr inbounds %struct.Reg, %struct.Reg* %18410, i32 0, i32 0
  %RCX.i172 = bitcast %union.anon* %18411 to i64*
  %18412 = load i64, i64* %PC.i171
  %18413 = add i64 %18412, 8
  store i64 %18413, i64* %PC.i171
  %18414 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %18414, i64* %RCX.i172, align 8
  store %struct.Memory* %loadMem_4b1625, %struct.Memory** %MEMORY
  %loadMem_4b162d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18416 = getelementptr inbounds %struct.GPR, %struct.GPR* %18415, i32 0, i32 33
  %18417 = getelementptr inbounds %struct.Reg, %struct.Reg* %18416, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %18417 to i64*
  %18418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18419 = getelementptr inbounds %struct.GPR, %struct.GPR* %18418, i32 0, i32 5
  %18420 = getelementptr inbounds %struct.Reg, %struct.Reg* %18419, i32 0, i32 0
  %RCX.i170 = bitcast %union.anon* %18420 to i64*
  %18421 = load i64, i64* %RCX.i170
  %18422 = add i64 %18421, 8
  %18423 = load i64, i64* %PC.i169
  %18424 = add i64 %18423, 4
  store i64 %18424, i64* %PC.i169
  %18425 = inttoptr i64 %18422 to i64*
  %18426 = load i64, i64* %18425
  store i64 %18426, i64* %RCX.i170, align 8
  store %struct.Memory* %loadMem_4b162d, %struct.Memory** %MEMORY
  %loadMem_4b1631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18428 = getelementptr inbounds %struct.GPR, %struct.GPR* %18427, i32 0, i32 33
  %18429 = getelementptr inbounds %struct.Reg, %struct.Reg* %18428, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %18429 to i64*
  %18430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18431 = getelementptr inbounds %struct.GPR, %struct.GPR* %18430, i32 0, i32 7
  %18432 = getelementptr inbounds %struct.Reg, %struct.Reg* %18431, i32 0, i32 0
  %RDX.i167 = bitcast %union.anon* %18432 to i64*
  %18433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18434 = getelementptr inbounds %struct.GPR, %struct.GPR* %18433, i32 0, i32 15
  %18435 = getelementptr inbounds %struct.Reg, %struct.Reg* %18434, i32 0, i32 0
  %RBP.i168 = bitcast %union.anon* %18435 to i64*
  %18436 = load i64, i64* %RBP.i168
  %18437 = sub i64 %18436, 8
  %18438 = load i64, i64* %PC.i166
  %18439 = add i64 %18438, 4
  store i64 %18439, i64* %PC.i166
  %18440 = inttoptr i64 %18437 to i32*
  %18441 = load i32, i32* %18440
  %18442 = sext i32 %18441 to i64
  store i64 %18442, i64* %RDX.i167, align 8
  store %struct.Memory* %loadMem_4b1631, %struct.Memory** %MEMORY
  %loadMem_4b1635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18444 = getelementptr inbounds %struct.GPR, %struct.GPR* %18443, i32 0, i32 33
  %18445 = getelementptr inbounds %struct.Reg, %struct.Reg* %18444, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %18445 to i64*
  %18446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18447 = getelementptr inbounds %struct.GPR, %struct.GPR* %18446, i32 0, i32 5
  %18448 = getelementptr inbounds %struct.Reg, %struct.Reg* %18447, i32 0, i32 0
  %RCX.i164 = bitcast %union.anon* %18448 to i64*
  %18449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18450 = getelementptr inbounds %struct.GPR, %struct.GPR* %18449, i32 0, i32 7
  %18451 = getelementptr inbounds %struct.Reg, %struct.Reg* %18450, i32 0, i32 0
  %RDX.i165 = bitcast %union.anon* %18451 to i64*
  %18452 = load i64, i64* %RCX.i164
  %18453 = load i64, i64* %RDX.i165
  %18454 = mul i64 %18453, 8
  %18455 = add i64 %18454, %18452
  %18456 = load i64, i64* %PC.i163
  %18457 = add i64 %18456, 4
  store i64 %18457, i64* %PC.i163
  %18458 = inttoptr i64 %18455 to i64*
  %18459 = load i64, i64* %18458
  store i64 %18459, i64* %RCX.i164, align 8
  store %struct.Memory* %loadMem_4b1635, %struct.Memory** %MEMORY
  %loadMem_4b1639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18461 = getelementptr inbounds %struct.GPR, %struct.GPR* %18460, i32 0, i32 33
  %18462 = getelementptr inbounds %struct.Reg, %struct.Reg* %18461, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %18462 to i64*
  %18463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18464 = getelementptr inbounds %struct.GPR, %struct.GPR* %18463, i32 0, i32 7
  %18465 = getelementptr inbounds %struct.Reg, %struct.Reg* %18464, i32 0, i32 0
  %RDX.i161 = bitcast %union.anon* %18465 to i64*
  %18466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18467 = getelementptr inbounds %struct.GPR, %struct.GPR* %18466, i32 0, i32 15
  %18468 = getelementptr inbounds %struct.Reg, %struct.Reg* %18467, i32 0, i32 0
  %RBP.i162 = bitcast %union.anon* %18468 to i64*
  %18469 = load i64, i64* %RBP.i162
  %18470 = sub i64 %18469, 12
  %18471 = load i64, i64* %PC.i160
  %18472 = add i64 %18471, 4
  store i64 %18472, i64* %PC.i160
  %18473 = inttoptr i64 %18470 to i32*
  %18474 = load i32, i32* %18473
  %18475 = sext i32 %18474 to i64
  store i64 %18475, i64* %RDX.i161, align 8
  store %struct.Memory* %loadMem_4b1639, %struct.Memory** %MEMORY
  %loadMem_4b163d = load %struct.Memory*, %struct.Memory** %MEMORY
  %18476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18477 = getelementptr inbounds %struct.GPR, %struct.GPR* %18476, i32 0, i32 33
  %18478 = getelementptr inbounds %struct.Reg, %struct.Reg* %18477, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %18478 to i64*
  %18479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18480 = getelementptr inbounds %struct.GPR, %struct.GPR* %18479, i32 0, i32 5
  %18481 = getelementptr inbounds %struct.Reg, %struct.Reg* %18480, i32 0, i32 0
  %RCX.i158 = bitcast %union.anon* %18481 to i64*
  %18482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18483 = getelementptr inbounds %struct.GPR, %struct.GPR* %18482, i32 0, i32 7
  %18484 = getelementptr inbounds %struct.Reg, %struct.Reg* %18483, i32 0, i32 0
  %RDX.i159 = bitcast %union.anon* %18484 to i64*
  %18485 = load i64, i64* %RCX.i158
  %18486 = load i64, i64* %RDX.i159
  %18487 = mul i64 %18486, 8
  %18488 = add i64 %18487, %18485
  %18489 = load i64, i64* %PC.i157
  %18490 = add i64 %18489, 4
  store i64 %18490, i64* %PC.i157
  %18491 = inttoptr i64 %18488 to i64*
  %18492 = load i64, i64* %18491
  store i64 %18492, i64* %RCX.i158, align 8
  store %struct.Memory* %loadMem_4b163d, %struct.Memory** %MEMORY
  %loadMem_4b1641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18494 = getelementptr inbounds %struct.GPR, %struct.GPR* %18493, i32 0, i32 33
  %18495 = getelementptr inbounds %struct.Reg, %struct.Reg* %18494, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %18495 to i64*
  %18496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18497 = getelementptr inbounds %struct.GPR, %struct.GPR* %18496, i32 0, i32 7
  %18498 = getelementptr inbounds %struct.Reg, %struct.Reg* %18497, i32 0, i32 0
  %RDX.i155 = bitcast %union.anon* %18498 to i64*
  %18499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18500 = getelementptr inbounds %struct.GPR, %struct.GPR* %18499, i32 0, i32 15
  %18501 = getelementptr inbounds %struct.Reg, %struct.Reg* %18500, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %18501 to i64*
  %18502 = load i64, i64* %RBP.i156
  %18503 = sub i64 %18502, 40
  %18504 = load i64, i64* %PC.i154
  %18505 = add i64 %18504, 4
  store i64 %18505, i64* %PC.i154
  %18506 = inttoptr i64 %18503 to i32*
  %18507 = load i32, i32* %18506
  %18508 = sext i32 %18507 to i64
  store i64 %18508, i64* %RDX.i155, align 8
  store %struct.Memory* %loadMem_4b1641, %struct.Memory** %MEMORY
  %loadMem_4b1645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18510 = getelementptr inbounds %struct.GPR, %struct.GPR* %18509, i32 0, i32 33
  %18511 = getelementptr inbounds %struct.Reg, %struct.Reg* %18510, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %18511 to i64*
  %18512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18513 = getelementptr inbounds %struct.GPR, %struct.GPR* %18512, i32 0, i32 1
  %18514 = getelementptr inbounds %struct.Reg, %struct.Reg* %18513, i32 0, i32 0
  %EAX.i151 = bitcast %union.anon* %18514 to i32*
  %18515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18516 = getelementptr inbounds %struct.GPR, %struct.GPR* %18515, i32 0, i32 5
  %18517 = getelementptr inbounds %struct.Reg, %struct.Reg* %18516, i32 0, i32 0
  %RCX.i152 = bitcast %union.anon* %18517 to i64*
  %18518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18519 = getelementptr inbounds %struct.GPR, %struct.GPR* %18518, i32 0, i32 7
  %18520 = getelementptr inbounds %struct.Reg, %struct.Reg* %18519, i32 0, i32 0
  %RDX.i153 = bitcast %union.anon* %18520 to i64*
  %18521 = load i64, i64* %RCX.i152
  %18522 = load i64, i64* %RDX.i153
  %18523 = mul i64 %18522, 4
  %18524 = add i64 %18523, %18521
  %18525 = load i32, i32* %EAX.i151
  %18526 = zext i32 %18525 to i64
  %18527 = load i64, i64* %PC.i150
  %18528 = add i64 %18527, 3
  store i64 %18528, i64* %PC.i150
  %18529 = inttoptr i64 %18524 to i32*
  store i32 %18525, i32* %18529
  store %struct.Memory* %loadMem_4b1645, %struct.Memory** %MEMORY
  %loadMem_4b1648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18531 = getelementptr inbounds %struct.GPR, %struct.GPR* %18530, i32 0, i32 33
  %18532 = getelementptr inbounds %struct.Reg, %struct.Reg* %18531, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %18532 to i64*
  %18533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18534 = getelementptr inbounds %struct.GPR, %struct.GPR* %18533, i32 0, i32 1
  %18535 = getelementptr inbounds %struct.Reg, %struct.Reg* %18534, i32 0, i32 0
  %RAX.i148 = bitcast %union.anon* %18535 to i64*
  %18536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18537 = getelementptr inbounds %struct.GPR, %struct.GPR* %18536, i32 0, i32 15
  %18538 = getelementptr inbounds %struct.Reg, %struct.Reg* %18537, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %18538 to i64*
  %18539 = load i64, i64* %RBP.i149
  %18540 = sub i64 %18539, 40
  %18541 = load i64, i64* %PC.i147
  %18542 = add i64 %18541, 3
  store i64 %18542, i64* %PC.i147
  %18543 = inttoptr i64 %18540 to i32*
  %18544 = load i32, i32* %18543
  %18545 = zext i32 %18544 to i64
  store i64 %18545, i64* %RAX.i148, align 8
  store %struct.Memory* %loadMem_4b1648, %struct.Memory** %MEMORY
  %loadMem_4b164b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18547 = getelementptr inbounds %struct.GPR, %struct.GPR* %18546, i32 0, i32 33
  %18548 = getelementptr inbounds %struct.Reg, %struct.Reg* %18547, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %18548 to i64*
  %18549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18550 = getelementptr inbounds %struct.GPR, %struct.GPR* %18549, i32 0, i32 1
  %18551 = getelementptr inbounds %struct.Reg, %struct.Reg* %18550, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %18551 to i64*
  %18552 = load i64, i64* %RAX.i146
  %18553 = load i64, i64* %PC.i145
  %18554 = add i64 %18553, 3
  store i64 %18554, i64* %PC.i145
  %18555 = trunc i64 %18552 to i32
  %18556 = add i32 1, %18555
  %18557 = zext i32 %18556 to i64
  store i64 %18557, i64* %RAX.i146, align 8
  %18558 = icmp ult i32 %18556, %18555
  %18559 = icmp ult i32 %18556, 1
  %18560 = or i1 %18558, %18559
  %18561 = zext i1 %18560 to i8
  %18562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18561, i8* %18562, align 1
  %18563 = and i32 %18556, 255
  %18564 = call i32 @llvm.ctpop.i32(i32 %18563)
  %18565 = trunc i32 %18564 to i8
  %18566 = and i8 %18565, 1
  %18567 = xor i8 %18566, 1
  %18568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18567, i8* %18568, align 1
  %18569 = xor i64 1, %18552
  %18570 = trunc i64 %18569 to i32
  %18571 = xor i32 %18570, %18556
  %18572 = lshr i32 %18571, 4
  %18573 = trunc i32 %18572 to i8
  %18574 = and i8 %18573, 1
  %18575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18574, i8* %18575, align 1
  %18576 = icmp eq i32 %18556, 0
  %18577 = zext i1 %18576 to i8
  %18578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18577, i8* %18578, align 1
  %18579 = lshr i32 %18556, 31
  %18580 = trunc i32 %18579 to i8
  %18581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18580, i8* %18581, align 1
  %18582 = lshr i32 %18555, 31
  %18583 = xor i32 %18579, %18582
  %18584 = add i32 %18583, %18579
  %18585 = icmp eq i32 %18584, 2
  %18586 = zext i1 %18585 to i8
  %18587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18586, i8* %18587, align 1
  store %struct.Memory* %loadMem_4b164b, %struct.Memory** %MEMORY
  %loadMem_4b164e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18589 = getelementptr inbounds %struct.GPR, %struct.GPR* %18588, i32 0, i32 33
  %18590 = getelementptr inbounds %struct.Reg, %struct.Reg* %18589, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %18590 to i64*
  %18591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18592 = getelementptr inbounds %struct.GPR, %struct.GPR* %18591, i32 0, i32 1
  %18593 = getelementptr inbounds %struct.Reg, %struct.Reg* %18592, i32 0, i32 0
  %EAX.i143 = bitcast %union.anon* %18593 to i32*
  %18594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18595 = getelementptr inbounds %struct.GPR, %struct.GPR* %18594, i32 0, i32 15
  %18596 = getelementptr inbounds %struct.Reg, %struct.Reg* %18595, i32 0, i32 0
  %RBP.i144 = bitcast %union.anon* %18596 to i64*
  %18597 = load i64, i64* %RBP.i144
  %18598 = sub i64 %18597, 40
  %18599 = load i32, i32* %EAX.i143
  %18600 = zext i32 %18599 to i64
  %18601 = load i64, i64* %PC.i142
  %18602 = add i64 %18601, 3
  store i64 %18602, i64* %PC.i142
  %18603 = inttoptr i64 %18598 to i32*
  store i32 %18599, i32* %18603
  store %struct.Memory* %loadMem_4b164e, %struct.Memory** %MEMORY
  %loadMem_4b1651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18605 = getelementptr inbounds %struct.GPR, %struct.GPR* %18604, i32 0, i32 33
  %18606 = getelementptr inbounds %struct.Reg, %struct.Reg* %18605, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %18606 to i64*
  %18607 = load i64, i64* %PC.i141
  %18608 = add i64 %18607, -194
  %18609 = load i64, i64* %PC.i141
  %18610 = add i64 %18609, 5
  store i64 %18610, i64* %PC.i141
  %18611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18608, i64* %18611, align 8
  store %struct.Memory* %loadMem_4b1651, %struct.Memory** %MEMORY
  br label %block_.L_4b158f

block_.L_4b1656:                                  ; preds = %block_.L_4b158f
  %loadMem_4b1656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18613 = getelementptr inbounds %struct.GPR, %struct.GPR* %18612, i32 0, i32 33
  %18614 = getelementptr inbounds %struct.Reg, %struct.Reg* %18613, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %18614 to i64*
  %18615 = load i64, i64* %PC.i140
  %18616 = add i64 %18615, 5
  %18617 = load i64, i64* %PC.i140
  %18618 = add i64 %18617, 5
  store i64 %18618, i64* %PC.i140
  %18619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18616, i64* %18619, align 8
  store %struct.Memory* %loadMem_4b1656, %struct.Memory** %MEMORY
  br label %block_.L_4b165b

block_.L_4b165b:                                  ; preds = %block_.L_4b1656
  %loadMem_4b165b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18621 = getelementptr inbounds %struct.GPR, %struct.GPR* %18620, i32 0, i32 33
  %18622 = getelementptr inbounds %struct.Reg, %struct.Reg* %18621, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %18622 to i64*
  %18623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18624 = getelementptr inbounds %struct.GPR, %struct.GPR* %18623, i32 0, i32 1
  %18625 = getelementptr inbounds %struct.Reg, %struct.Reg* %18624, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %18625 to i64*
  %18626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18627 = getelementptr inbounds %struct.GPR, %struct.GPR* %18626, i32 0, i32 15
  %18628 = getelementptr inbounds %struct.Reg, %struct.Reg* %18627, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %18628 to i64*
  %18629 = load i64, i64* %RBP.i139
  %18630 = sub i64 %18629, 12
  %18631 = load i64, i64* %PC.i137
  %18632 = add i64 %18631, 3
  store i64 %18632, i64* %PC.i137
  %18633 = inttoptr i64 %18630 to i32*
  %18634 = load i32, i32* %18633
  %18635 = zext i32 %18634 to i64
  store i64 %18635, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_4b165b, %struct.Memory** %MEMORY
  %loadMem_4b165e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18637 = getelementptr inbounds %struct.GPR, %struct.GPR* %18636, i32 0, i32 33
  %18638 = getelementptr inbounds %struct.Reg, %struct.Reg* %18637, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %18638 to i64*
  %18639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18640 = getelementptr inbounds %struct.GPR, %struct.GPR* %18639, i32 0, i32 1
  %18641 = getelementptr inbounds %struct.Reg, %struct.Reg* %18640, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %18641 to i64*
  %18642 = load i64, i64* %RAX.i136
  %18643 = load i64, i64* %PC.i135
  %18644 = add i64 %18643, 3
  store i64 %18644, i64* %PC.i135
  %18645 = trunc i64 %18642 to i32
  %18646 = add i32 1, %18645
  %18647 = zext i32 %18646 to i64
  store i64 %18647, i64* %RAX.i136, align 8
  %18648 = icmp ult i32 %18646, %18645
  %18649 = icmp ult i32 %18646, 1
  %18650 = or i1 %18648, %18649
  %18651 = zext i1 %18650 to i8
  %18652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18651, i8* %18652, align 1
  %18653 = and i32 %18646, 255
  %18654 = call i32 @llvm.ctpop.i32(i32 %18653)
  %18655 = trunc i32 %18654 to i8
  %18656 = and i8 %18655, 1
  %18657 = xor i8 %18656, 1
  %18658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18657, i8* %18658, align 1
  %18659 = xor i64 1, %18642
  %18660 = trunc i64 %18659 to i32
  %18661 = xor i32 %18660, %18646
  %18662 = lshr i32 %18661, 4
  %18663 = trunc i32 %18662 to i8
  %18664 = and i8 %18663, 1
  %18665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18664, i8* %18665, align 1
  %18666 = icmp eq i32 %18646, 0
  %18667 = zext i1 %18666 to i8
  %18668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18667, i8* %18668, align 1
  %18669 = lshr i32 %18646, 31
  %18670 = trunc i32 %18669 to i8
  %18671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18670, i8* %18671, align 1
  %18672 = lshr i32 %18645, 31
  %18673 = xor i32 %18669, %18672
  %18674 = add i32 %18673, %18669
  %18675 = icmp eq i32 %18674, 2
  %18676 = zext i1 %18675 to i8
  %18677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18676, i8* %18677, align 1
  store %struct.Memory* %loadMem_4b165e, %struct.Memory** %MEMORY
  %loadMem_4b1661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18679 = getelementptr inbounds %struct.GPR, %struct.GPR* %18678, i32 0, i32 33
  %18680 = getelementptr inbounds %struct.Reg, %struct.Reg* %18679, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %18680 to i64*
  %18681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18682 = getelementptr inbounds %struct.GPR, %struct.GPR* %18681, i32 0, i32 1
  %18683 = getelementptr inbounds %struct.Reg, %struct.Reg* %18682, i32 0, i32 0
  %EAX.i133 = bitcast %union.anon* %18683 to i32*
  %18684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18685 = getelementptr inbounds %struct.GPR, %struct.GPR* %18684, i32 0, i32 15
  %18686 = getelementptr inbounds %struct.Reg, %struct.Reg* %18685, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %18686 to i64*
  %18687 = load i64, i64* %RBP.i134
  %18688 = sub i64 %18687, 12
  %18689 = load i32, i32* %EAX.i133
  %18690 = zext i32 %18689 to i64
  %18691 = load i64, i64* %PC.i132
  %18692 = add i64 %18691, 3
  store i64 %18692, i64* %PC.i132
  %18693 = inttoptr i64 %18688 to i32*
  store i32 %18689, i32* %18693
  store %struct.Memory* %loadMem_4b1661, %struct.Memory** %MEMORY
  %loadMem_4b1664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18695 = getelementptr inbounds %struct.GPR, %struct.GPR* %18694, i32 0, i32 33
  %18696 = getelementptr inbounds %struct.Reg, %struct.Reg* %18695, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %18696 to i64*
  %18697 = load i64, i64* %PC.i131
  %18698 = add i64 %18697, -236
  %18699 = load i64, i64* %PC.i131
  %18700 = add i64 %18699, 5
  store i64 %18700, i64* %PC.i131
  %18701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18698, i64* %18701, align 8
  store %struct.Memory* %loadMem_4b1664, %struct.Memory** %MEMORY
  br label %block_.L_4b1578

block_.L_4b1669:                                  ; preds = %block_.L_4b1578
  %loadMem_4b1669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18703 = getelementptr inbounds %struct.GPR, %struct.GPR* %18702, i32 0, i32 33
  %18704 = getelementptr inbounds %struct.Reg, %struct.Reg* %18703, i32 0, i32 0
  %PC.i130 = bitcast %union.anon* %18704 to i64*
  %18705 = load i64, i64* %PC.i130
  %18706 = add i64 %18705, 5
  %18707 = load i64, i64* %PC.i130
  %18708 = add i64 %18707, 5
  store i64 %18708, i64* %PC.i130
  %18709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18706, i64* %18709, align 8
  store %struct.Memory* %loadMem_4b1669, %struct.Memory** %MEMORY
  br label %block_.L_4b166e

block_.L_4b166e:                                  ; preds = %block_.L_4b1669
  %loadMem_4b166e = load %struct.Memory*, %struct.Memory** %MEMORY
  %18710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18711 = getelementptr inbounds %struct.GPR, %struct.GPR* %18710, i32 0, i32 33
  %18712 = getelementptr inbounds %struct.Reg, %struct.Reg* %18711, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %18712 to i64*
  %18713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18714 = getelementptr inbounds %struct.GPR, %struct.GPR* %18713, i32 0, i32 1
  %18715 = getelementptr inbounds %struct.Reg, %struct.Reg* %18714, i32 0, i32 0
  %RAX.i128 = bitcast %union.anon* %18715 to i64*
  %18716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18717 = getelementptr inbounds %struct.GPR, %struct.GPR* %18716, i32 0, i32 15
  %18718 = getelementptr inbounds %struct.Reg, %struct.Reg* %18717, i32 0, i32 0
  %RBP.i129 = bitcast %union.anon* %18718 to i64*
  %18719 = load i64, i64* %RBP.i129
  %18720 = sub i64 %18719, 8
  %18721 = load i64, i64* %PC.i127
  %18722 = add i64 %18721, 3
  store i64 %18722, i64* %PC.i127
  %18723 = inttoptr i64 %18720 to i32*
  %18724 = load i32, i32* %18723
  %18725 = zext i32 %18724 to i64
  store i64 %18725, i64* %RAX.i128, align 8
  store %struct.Memory* %loadMem_4b166e, %struct.Memory** %MEMORY
  %loadMem_4b1671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18727 = getelementptr inbounds %struct.GPR, %struct.GPR* %18726, i32 0, i32 33
  %18728 = getelementptr inbounds %struct.Reg, %struct.Reg* %18727, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %18728 to i64*
  %18729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18730 = getelementptr inbounds %struct.GPR, %struct.GPR* %18729, i32 0, i32 1
  %18731 = getelementptr inbounds %struct.Reg, %struct.Reg* %18730, i32 0, i32 0
  %RAX.i126 = bitcast %union.anon* %18731 to i64*
  %18732 = load i64, i64* %RAX.i126
  %18733 = load i64, i64* %PC.i125
  %18734 = add i64 %18733, 3
  store i64 %18734, i64* %PC.i125
  %18735 = trunc i64 %18732 to i32
  %18736 = add i32 1, %18735
  %18737 = zext i32 %18736 to i64
  store i64 %18737, i64* %RAX.i126, align 8
  %18738 = icmp ult i32 %18736, %18735
  %18739 = icmp ult i32 %18736, 1
  %18740 = or i1 %18738, %18739
  %18741 = zext i1 %18740 to i8
  %18742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18741, i8* %18742, align 1
  %18743 = and i32 %18736, 255
  %18744 = call i32 @llvm.ctpop.i32(i32 %18743)
  %18745 = trunc i32 %18744 to i8
  %18746 = and i8 %18745, 1
  %18747 = xor i8 %18746, 1
  %18748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18747, i8* %18748, align 1
  %18749 = xor i64 1, %18732
  %18750 = trunc i64 %18749 to i32
  %18751 = xor i32 %18750, %18736
  %18752 = lshr i32 %18751, 4
  %18753 = trunc i32 %18752 to i8
  %18754 = and i8 %18753, 1
  %18755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18754, i8* %18755, align 1
  %18756 = icmp eq i32 %18736, 0
  %18757 = zext i1 %18756 to i8
  %18758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18757, i8* %18758, align 1
  %18759 = lshr i32 %18736, 31
  %18760 = trunc i32 %18759 to i8
  %18761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18760, i8* %18761, align 1
  %18762 = lshr i32 %18735, 31
  %18763 = xor i32 %18759, %18762
  %18764 = add i32 %18763, %18759
  %18765 = icmp eq i32 %18764, 2
  %18766 = zext i1 %18765 to i8
  %18767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18766, i8* %18767, align 1
  store %struct.Memory* %loadMem_4b1671, %struct.Memory** %MEMORY
  %loadMem_4b1674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18769 = getelementptr inbounds %struct.GPR, %struct.GPR* %18768, i32 0, i32 33
  %18770 = getelementptr inbounds %struct.Reg, %struct.Reg* %18769, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %18770 to i64*
  %18771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18772 = getelementptr inbounds %struct.GPR, %struct.GPR* %18771, i32 0, i32 1
  %18773 = getelementptr inbounds %struct.Reg, %struct.Reg* %18772, i32 0, i32 0
  %EAX.i123 = bitcast %union.anon* %18773 to i32*
  %18774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18775 = getelementptr inbounds %struct.GPR, %struct.GPR* %18774, i32 0, i32 15
  %18776 = getelementptr inbounds %struct.Reg, %struct.Reg* %18775, i32 0, i32 0
  %RBP.i124 = bitcast %union.anon* %18776 to i64*
  %18777 = load i64, i64* %RBP.i124
  %18778 = sub i64 %18777, 8
  %18779 = load i32, i32* %EAX.i123
  %18780 = zext i32 %18779 to i64
  %18781 = load i64, i64* %PC.i122
  %18782 = add i64 %18781, 3
  store i64 %18782, i64* %PC.i122
  %18783 = inttoptr i64 %18778 to i32*
  store i32 %18779, i32* %18783
  store %struct.Memory* %loadMem_4b1674, %struct.Memory** %MEMORY
  %loadMem_4b1677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18785 = getelementptr inbounds %struct.GPR, %struct.GPR* %18784, i32 0, i32 33
  %18786 = getelementptr inbounds %struct.Reg, %struct.Reg* %18785, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %18786 to i64*
  %18787 = load i64, i64* %PC.i121
  %18788 = add i64 %18787, -278
  %18789 = load i64, i64* %PC.i121
  %18790 = add i64 %18789, 5
  store i64 %18790, i64* %PC.i121
  %18791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18788, i64* %18791, align 8
  store %struct.Memory* %loadMem_4b1677, %struct.Memory** %MEMORY
  br label %block_.L_4b1561

block_.L_4b167c:                                  ; preds = %block_.L_4b1561
  %loadMem_4b167c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18793 = getelementptr inbounds %struct.GPR, %struct.GPR* %18792, i32 0, i32 33
  %18794 = getelementptr inbounds %struct.Reg, %struct.Reg* %18793, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %18794 to i64*
  %18795 = load i64, i64* %PC.i120
  %18796 = add i64 %18795, 5
  %18797 = load i64, i64* %PC.i120
  %18798 = add i64 %18797, 5
  store i64 %18798, i64* %PC.i120
  %18799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %18796, i64* %18799, align 8
  store %struct.Memory* %loadMem_4b167c, %struct.Memory** %MEMORY
  br label %block_.L_4b1681

block_.L_4b1681:                                  ; preds = %block_.L_4b167c, %block_.L_4b0f6a
  %loadMem_4b1681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18801 = getelementptr inbounds %struct.GPR, %struct.GPR* %18800, i32 0, i32 33
  %18802 = getelementptr inbounds %struct.Reg, %struct.Reg* %18801, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %18802 to i64*
  %18803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18804 = getelementptr inbounds %struct.GPR, %struct.GPR* %18803, i32 0, i32 15
  %18805 = getelementptr inbounds %struct.Reg, %struct.Reg* %18804, i32 0, i32 0
  %RBP.i119 = bitcast %union.anon* %18805 to i64*
  %18806 = load i64, i64* %RBP.i119
  %18807 = sub i64 %18806, 35396
  %18808 = load i64, i64* %PC.i118
  %18809 = add i64 %18808, 10
  store i64 %18809, i64* %PC.i118
  %18810 = inttoptr i64 %18807 to i32*
  store i32 0, i32* %18810
  store %struct.Memory* %loadMem_4b1681, %struct.Memory** %MEMORY
  br label %block_.L_4b168b

block_.L_4b168b:                                  ; preds = %block_.L_4b1786, %block_.L_4b1681
  %loadMem_4b168b = load %struct.Memory*, %struct.Memory** %MEMORY
  %18811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18812 = getelementptr inbounds %struct.GPR, %struct.GPR* %18811, i32 0, i32 33
  %18813 = getelementptr inbounds %struct.Reg, %struct.Reg* %18812, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %18813 to i64*
  %18814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18815 = getelementptr inbounds %struct.GPR, %struct.GPR* %18814, i32 0, i32 1
  %18816 = getelementptr inbounds %struct.Reg, %struct.Reg* %18815, i32 0, i32 0
  %RAX.i116 = bitcast %union.anon* %18816 to i64*
  %18817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18818 = getelementptr inbounds %struct.GPR, %struct.GPR* %18817, i32 0, i32 15
  %18819 = getelementptr inbounds %struct.Reg, %struct.Reg* %18818, i32 0, i32 0
  %RBP.i117 = bitcast %union.anon* %18819 to i64*
  %18820 = load i64, i64* %RBP.i117
  %18821 = sub i64 %18820, 35396
  %18822 = load i64, i64* %PC.i115
  %18823 = add i64 %18822, 6
  store i64 %18823, i64* %PC.i115
  %18824 = inttoptr i64 %18821 to i32*
  %18825 = load i32, i32* %18824
  %18826 = zext i32 %18825 to i64
  store i64 %18826, i64* %RAX.i116, align 8
  store %struct.Memory* %loadMem_4b168b, %struct.Memory** %MEMORY
  %loadMem_4b1691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18828 = getelementptr inbounds %struct.GPR, %struct.GPR* %18827, i32 0, i32 33
  %18829 = getelementptr inbounds %struct.Reg, %struct.Reg* %18828, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %18829 to i64*
  %18830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18831 = getelementptr inbounds %struct.GPR, %struct.GPR* %18830, i32 0, i32 5
  %18832 = getelementptr inbounds %struct.Reg, %struct.Reg* %18831, i32 0, i32 0
  %RCX.i113 = bitcast %union.anon* %18832 to i64*
  %18833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18834 = getelementptr inbounds %struct.GPR, %struct.GPR* %18833, i32 0, i32 15
  %18835 = getelementptr inbounds %struct.Reg, %struct.Reg* %18834, i32 0, i32 0
  %RBP.i114 = bitcast %union.anon* %18835 to i64*
  %18836 = load i64, i64* %RBP.i114
  %18837 = sub i64 %18836, 804
  %18838 = load i64, i64* %PC.i112
  %18839 = add i64 %18838, 6
  store i64 %18839, i64* %PC.i112
  %18840 = inttoptr i64 %18837 to i32*
  %18841 = load i32, i32* %18840
  %18842 = zext i32 %18841 to i64
  store i64 %18842, i64* %RCX.i113, align 8
  store %struct.Memory* %loadMem_4b1691, %struct.Memory** %MEMORY
  %loadMem_4b1697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18844 = getelementptr inbounds %struct.GPR, %struct.GPR* %18843, i32 0, i32 33
  %18845 = getelementptr inbounds %struct.Reg, %struct.Reg* %18844, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %18845 to i64*
  %18846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18847 = getelementptr inbounds %struct.GPR, %struct.GPR* %18846, i32 0, i32 5
  %18848 = getelementptr inbounds %struct.Reg, %struct.Reg* %18847, i32 0, i32 0
  %RCX.i111 = bitcast %union.anon* %18848 to i64*
  %18849 = load i64, i64* %RCX.i111
  %18850 = load i64, i64* %PC.i110
  %18851 = add i64 %18850, 3
  store i64 %18851, i64* %PC.i110
  %18852 = trunc i64 %18849 to i32
  %18853 = add i32 2, %18852
  %18854 = zext i32 %18853 to i64
  store i64 %18854, i64* %RCX.i111, align 8
  %18855 = icmp ult i32 %18853, %18852
  %18856 = icmp ult i32 %18853, 2
  %18857 = or i1 %18855, %18856
  %18858 = zext i1 %18857 to i8
  %18859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18858, i8* %18859, align 1
  %18860 = and i32 %18853, 255
  %18861 = call i32 @llvm.ctpop.i32(i32 %18860)
  %18862 = trunc i32 %18861 to i8
  %18863 = and i8 %18862, 1
  %18864 = xor i8 %18863, 1
  %18865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18864, i8* %18865, align 1
  %18866 = xor i64 2, %18849
  %18867 = trunc i64 %18866 to i32
  %18868 = xor i32 %18867, %18853
  %18869 = lshr i32 %18868, 4
  %18870 = trunc i32 %18869 to i8
  %18871 = and i8 %18870, 1
  %18872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18871, i8* %18872, align 1
  %18873 = icmp eq i32 %18853, 0
  %18874 = zext i1 %18873 to i8
  %18875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18874, i8* %18875, align 1
  %18876 = lshr i32 %18853, 31
  %18877 = trunc i32 %18876 to i8
  %18878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18877, i8* %18878, align 1
  %18879 = lshr i32 %18852, 31
  %18880 = xor i32 %18876, %18879
  %18881 = add i32 %18880, %18876
  %18882 = icmp eq i32 %18881, 2
  %18883 = zext i1 %18882 to i8
  %18884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18883, i8* %18884, align 1
  store %struct.Memory* %loadMem_4b1697, %struct.Memory** %MEMORY
  %loadMem_4b169a = load %struct.Memory*, %struct.Memory** %MEMORY
  %18885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18886 = getelementptr inbounds %struct.GPR, %struct.GPR* %18885, i32 0, i32 33
  %18887 = getelementptr inbounds %struct.Reg, %struct.Reg* %18886, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %18887 to i64*
  %18888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18889 = getelementptr inbounds %struct.GPR, %struct.GPR* %18888, i32 0, i32 1
  %18890 = getelementptr inbounds %struct.Reg, %struct.Reg* %18889, i32 0, i32 0
  %EAX.i109 = bitcast %union.anon* %18890 to i32*
  %18891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18892 = getelementptr inbounds %struct.GPR, %struct.GPR* %18891, i32 0, i32 5
  %18893 = getelementptr inbounds %struct.Reg, %struct.Reg* %18892, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %18893 to i32*
  %18894 = load i32, i32* %EAX.i109
  %18895 = zext i32 %18894 to i64
  %18896 = load i32, i32* %ECX.i
  %18897 = zext i32 %18896 to i64
  %18898 = load i64, i64* %PC.i108
  %18899 = add i64 %18898, 2
  store i64 %18899, i64* %PC.i108
  %18900 = sub i32 %18894, %18896
  %18901 = icmp ult i32 %18894, %18896
  %18902 = zext i1 %18901 to i8
  %18903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18902, i8* %18903, align 1
  %18904 = and i32 %18900, 255
  %18905 = call i32 @llvm.ctpop.i32(i32 %18904)
  %18906 = trunc i32 %18905 to i8
  %18907 = and i8 %18906, 1
  %18908 = xor i8 %18907, 1
  %18909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18908, i8* %18909, align 1
  %18910 = xor i64 %18897, %18895
  %18911 = trunc i64 %18910 to i32
  %18912 = xor i32 %18911, %18900
  %18913 = lshr i32 %18912, 4
  %18914 = trunc i32 %18913 to i8
  %18915 = and i8 %18914, 1
  %18916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18915, i8* %18916, align 1
  %18917 = icmp eq i32 %18900, 0
  %18918 = zext i1 %18917 to i8
  %18919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18918, i8* %18919, align 1
  %18920 = lshr i32 %18900, 31
  %18921 = trunc i32 %18920 to i8
  %18922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18921, i8* %18922, align 1
  %18923 = lshr i32 %18894, 31
  %18924 = lshr i32 %18896, 31
  %18925 = xor i32 %18924, %18923
  %18926 = xor i32 %18920, %18923
  %18927 = add i32 %18926, %18925
  %18928 = icmp eq i32 %18927, 2
  %18929 = zext i1 %18928 to i8
  %18930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %18929, i8* %18930, align 1
  store %struct.Memory* %loadMem_4b169a, %struct.Memory** %MEMORY
  %loadMem_4b169c = load %struct.Memory*, %struct.Memory** %MEMORY
  %18931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18932 = getelementptr inbounds %struct.GPR, %struct.GPR* %18931, i32 0, i32 33
  %18933 = getelementptr inbounds %struct.Reg, %struct.Reg* %18932, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %18933 to i64*
  %18934 = load i64, i64* %PC.i107
  %18935 = add i64 %18934, 254
  %18936 = load i64, i64* %PC.i107
  %18937 = add i64 %18936, 6
  %18938 = load i64, i64* %PC.i107
  %18939 = add i64 %18938, 6
  store i64 %18939, i64* %PC.i107
  %18940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %18941 = load i8, i8* %18940, align 1
  %18942 = icmp ne i8 %18941, 0
  %18943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %18944 = load i8, i8* %18943, align 1
  %18945 = icmp ne i8 %18944, 0
  %18946 = xor i1 %18942, %18945
  %18947 = xor i1 %18946, true
  %18948 = zext i1 %18947 to i8
  store i8 %18948, i8* %BRANCH_TAKEN, align 1
  %18949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %18950 = select i1 %18946, i64 %18937, i64 %18935
  store i64 %18950, i64* %18949, align 8
  store %struct.Memory* %loadMem_4b169c, %struct.Memory** %MEMORY
  %loadBr_4b169c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b169c = icmp eq i8 %loadBr_4b169c, 1
  br i1 %cmpBr_4b169c, label %block_.L_4b179a, label %block_4b16a2

block_4b16a2:                                     ; preds = %block_.L_4b168b
  %loadMem_4b16a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18952 = getelementptr inbounds %struct.GPR, %struct.GPR* %18951, i32 0, i32 33
  %18953 = getelementptr inbounds %struct.Reg, %struct.Reg* %18952, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %18953 to i64*
  %18954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18955 = getelementptr inbounds %struct.GPR, %struct.GPR* %18954, i32 0, i32 15
  %18956 = getelementptr inbounds %struct.Reg, %struct.Reg* %18955, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %18956 to i64*
  %18957 = load i64, i64* %RBP.i106
  %18958 = sub i64 %18957, 36
  %18959 = load i64, i64* %PC.i105
  %18960 = add i64 %18959, 7
  store i64 %18960, i64* %PC.i105
  %18961 = inttoptr i64 %18958 to i32*
  store i32 0, i32* %18961
  store %struct.Memory* %loadMem_4b16a2, %struct.Memory** %MEMORY
  br label %block_.L_4b16a9

block_.L_4b16a9:                                  ; preds = %block_.L_4b1761, %block_4b16a2
  %loadMem_4b16a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18963 = getelementptr inbounds %struct.GPR, %struct.GPR* %18962, i32 0, i32 33
  %18964 = getelementptr inbounds %struct.Reg, %struct.Reg* %18963, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %18964 to i64*
  %18965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18966 = getelementptr inbounds %struct.GPR, %struct.GPR* %18965, i32 0, i32 1
  %18967 = getelementptr inbounds %struct.Reg, %struct.Reg* %18966, i32 0, i32 0
  %RAX.i103 = bitcast %union.anon* %18967 to i64*
  %18968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18969 = getelementptr inbounds %struct.GPR, %struct.GPR* %18968, i32 0, i32 15
  %18970 = getelementptr inbounds %struct.Reg, %struct.Reg* %18969, i32 0, i32 0
  %RBP.i104 = bitcast %union.anon* %18970 to i64*
  %18971 = load i64, i64* %RBP.i104
  %18972 = sub i64 %18971, 36
  %18973 = load i64, i64* %PC.i102
  %18974 = add i64 %18973, 3
  store i64 %18974, i64* %PC.i102
  %18975 = inttoptr i64 %18972 to i32*
  %18976 = load i32, i32* %18975
  %18977 = zext i32 %18976 to i64
  store i64 %18977, i64* %RAX.i103, align 8
  store %struct.Memory* %loadMem_4b16a9, %struct.Memory** %MEMORY
  %loadMem_4b16ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %18978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18979 = getelementptr inbounds %struct.GPR, %struct.GPR* %18978, i32 0, i32 33
  %18980 = getelementptr inbounds %struct.Reg, %struct.Reg* %18979, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %18980 to i64*
  %18981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18982 = getelementptr inbounds %struct.GPR, %struct.GPR* %18981, i32 0, i32 5
  %18983 = getelementptr inbounds %struct.Reg, %struct.Reg* %18982, i32 0, i32 0
  %RCX.i100 = bitcast %union.anon* %18983 to i64*
  %18984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18985 = getelementptr inbounds %struct.GPR, %struct.GPR* %18984, i32 0, i32 15
  %18986 = getelementptr inbounds %struct.Reg, %struct.Reg* %18985, i32 0, i32 0
  %RBP.i101 = bitcast %union.anon* %18986 to i64*
  %18987 = load i64, i64* %RBP.i101
  %18988 = sub i64 %18987, 35396
  %18989 = load i64, i64* %PC.i99
  %18990 = add i64 %18989, 7
  store i64 %18990, i64* %PC.i99
  %18991 = inttoptr i64 %18988 to i32*
  %18992 = load i32, i32* %18991
  %18993 = sext i32 %18992 to i64
  store i64 %18993, i64* %RCX.i100, align 8
  store %struct.Memory* %loadMem_4b16ac, %struct.Memory** %MEMORY
  %loadMem_4b16b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %18994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18995 = getelementptr inbounds %struct.GPR, %struct.GPR* %18994, i32 0, i32 33
  %18996 = getelementptr inbounds %struct.Reg, %struct.Reg* %18995, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %18996 to i64*
  %18997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18998 = getelementptr inbounds %struct.GPR, %struct.GPR* %18997, i32 0, i32 1
  %18999 = getelementptr inbounds %struct.Reg, %struct.Reg* %18998, i32 0, i32 0
  %EAX.i97 = bitcast %union.anon* %18999 to i32*
  %19000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19001 = getelementptr inbounds %struct.GPR, %struct.GPR* %19000, i32 0, i32 5
  %19002 = getelementptr inbounds %struct.Reg, %struct.Reg* %19001, i32 0, i32 0
  %RCX.i98 = bitcast %union.anon* %19002 to i64*
  %19003 = load i32, i32* %EAX.i97
  %19004 = zext i32 %19003 to i64
  %19005 = load i64, i64* %RCX.i98
  %19006 = mul i64 %19005, 4
  %19007 = add i64 %19006, 7489456
  %19008 = load i64, i64* %PC.i96
  %19009 = add i64 %19008, 7
  store i64 %19009, i64* %PC.i96
  %19010 = inttoptr i64 %19007 to i32*
  %19011 = load i32, i32* %19010
  %19012 = sub i32 %19003, %19011
  %19013 = icmp ult i32 %19003, %19011
  %19014 = zext i1 %19013 to i8
  %19015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19014, i8* %19015, align 1
  %19016 = and i32 %19012, 255
  %19017 = call i32 @llvm.ctpop.i32(i32 %19016)
  %19018 = trunc i32 %19017 to i8
  %19019 = and i8 %19018, 1
  %19020 = xor i8 %19019, 1
  %19021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19020, i8* %19021, align 1
  %19022 = xor i32 %19011, %19003
  %19023 = xor i32 %19022, %19012
  %19024 = lshr i32 %19023, 4
  %19025 = trunc i32 %19024 to i8
  %19026 = and i8 %19025, 1
  %19027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19026, i8* %19027, align 1
  %19028 = icmp eq i32 %19012, 0
  %19029 = zext i1 %19028 to i8
  %19030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19029, i8* %19030, align 1
  %19031 = lshr i32 %19012, 31
  %19032 = trunc i32 %19031 to i8
  %19033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19032, i8* %19033, align 1
  %19034 = lshr i32 %19003, 31
  %19035 = lshr i32 %19011, 31
  %19036 = xor i32 %19035, %19034
  %19037 = xor i32 %19031, %19034
  %19038 = add i32 %19037, %19036
  %19039 = icmp eq i32 %19038, 2
  %19040 = zext i1 %19039 to i8
  %19041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19040, i8* %19041, align 1
  store %struct.Memory* %loadMem_4b16b3, %struct.Memory** %MEMORY
  %loadMem_4b16ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %19042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19043 = getelementptr inbounds %struct.GPR, %struct.GPR* %19042, i32 0, i32 33
  %19044 = getelementptr inbounds %struct.Reg, %struct.Reg* %19043, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %19044 to i64*
  %19045 = load i64, i64* %PC.i95
  %19046 = add i64 %19045, 181
  %19047 = load i64, i64* %PC.i95
  %19048 = add i64 %19047, 6
  %19049 = load i64, i64* %PC.i95
  %19050 = add i64 %19049, 6
  store i64 %19050, i64* %PC.i95
  %19051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19052 = load i8, i8* %19051, align 1
  %19053 = icmp ne i8 %19052, 0
  %19054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19055 = load i8, i8* %19054, align 1
  %19056 = icmp ne i8 %19055, 0
  %19057 = xor i1 %19053, %19056
  %19058 = xor i1 %19057, true
  %19059 = zext i1 %19058 to i8
  store i8 %19059, i8* %BRANCH_TAKEN, align 1
  %19060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19061 = select i1 %19057, i64 %19048, i64 %19046
  store i64 %19061, i64* %19060, align 8
  store %struct.Memory* %loadMem_4b16ba, %struct.Memory** %MEMORY
  %loadBr_4b16ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b16ba = icmp eq i8 %loadBr_4b16ba, 1
  br i1 %cmpBr_4b16ba, label %block_.L_4b176f, label %block_4b16c0

block_4b16c0:                                     ; preds = %block_.L_4b16a9
  %loadMem_4b16c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19063 = getelementptr inbounds %struct.GPR, %struct.GPR* %19062, i32 0, i32 33
  %19064 = getelementptr inbounds %struct.Reg, %struct.Reg* %19063, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %19064 to i64*
  %19065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19066 = getelementptr inbounds %struct.GPR, %struct.GPR* %19065, i32 0, i32 15
  %19067 = getelementptr inbounds %struct.Reg, %struct.Reg* %19066, i32 0, i32 0
  %RBP.i94 = bitcast %union.anon* %19067 to i64*
  %19068 = load i64, i64* %RBP.i94
  %19069 = sub i64 %19068, 40
  %19070 = load i64, i64* %PC.i93
  %19071 = add i64 %19070, 7
  store i64 %19071, i64* %PC.i93
  %19072 = inttoptr i64 %19069 to i32*
  store i32 0, i32* %19072
  store %struct.Memory* %loadMem_4b16c0, %struct.Memory** %MEMORY
  br label %block_.L_4b16c7

block_.L_4b16c7:                                  ; preds = %block_.L_4b173c, %block_4b16c0
  %loadMem_4b16c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19074 = getelementptr inbounds %struct.GPR, %struct.GPR* %19073, i32 0, i32 33
  %19075 = getelementptr inbounds %struct.Reg, %struct.Reg* %19074, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %19075 to i64*
  %19076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19077 = getelementptr inbounds %struct.GPR, %struct.GPR* %19076, i32 0, i32 15
  %19078 = getelementptr inbounds %struct.Reg, %struct.Reg* %19077, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %19078 to i64*
  %19079 = load i64, i64* %RBP.i92
  %19080 = sub i64 %19079, 40
  %19081 = load i64, i64* %PC.i91
  %19082 = add i64 %19081, 4
  store i64 %19082, i64* %PC.i91
  %19083 = inttoptr i64 %19080 to i32*
  %19084 = load i32, i32* %19083
  %19085 = sub i32 %19084, 3
  %19086 = icmp ult i32 %19084, 3
  %19087 = zext i1 %19086 to i8
  %19088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19087, i8* %19088, align 1
  %19089 = and i32 %19085, 255
  %19090 = call i32 @llvm.ctpop.i32(i32 %19089)
  %19091 = trunc i32 %19090 to i8
  %19092 = and i8 %19091, 1
  %19093 = xor i8 %19092, 1
  %19094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19093, i8* %19094, align 1
  %19095 = xor i32 %19084, 3
  %19096 = xor i32 %19095, %19085
  %19097 = lshr i32 %19096, 4
  %19098 = trunc i32 %19097 to i8
  %19099 = and i8 %19098, 1
  %19100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19099, i8* %19100, align 1
  %19101 = icmp eq i32 %19085, 0
  %19102 = zext i1 %19101 to i8
  %19103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19102, i8* %19103, align 1
  %19104 = lshr i32 %19085, 31
  %19105 = trunc i32 %19104 to i8
  %19106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19105, i8* %19106, align 1
  %19107 = lshr i32 %19084, 31
  %19108 = xor i32 %19104, %19107
  %19109 = add i32 %19108, %19107
  %19110 = icmp eq i32 %19109, 2
  %19111 = zext i1 %19110 to i8
  %19112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19111, i8* %19112, align 1
  store %struct.Memory* %loadMem_4b16c7, %struct.Memory** %MEMORY
  %loadMem_4b16cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %19113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19114 = getelementptr inbounds %struct.GPR, %struct.GPR* %19113, i32 0, i32 33
  %19115 = getelementptr inbounds %struct.Reg, %struct.Reg* %19114, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %19115 to i64*
  %19116 = load i64, i64* %PC.i90
  %19117 = add i64 %19116, 127
  %19118 = load i64, i64* %PC.i90
  %19119 = add i64 %19118, 6
  %19120 = load i64, i64* %PC.i90
  %19121 = add i64 %19120, 6
  store i64 %19121, i64* %PC.i90
  %19122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %19123 = load i8, i8* %19122, align 1
  %19124 = icmp ne i8 %19123, 0
  %19125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19126 = load i8, i8* %19125, align 1
  %19127 = icmp ne i8 %19126, 0
  %19128 = xor i1 %19124, %19127
  %19129 = xor i1 %19128, true
  %19130 = zext i1 %19129 to i8
  store i8 %19130, i8* %BRANCH_TAKEN, align 1
  %19131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19132 = select i1 %19128, i64 %19119, i64 %19117
  store i64 %19132, i64* %19131, align 8
  store %struct.Memory* %loadMem_4b16cb, %struct.Memory** %MEMORY
  %loadBr_4b16cb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b16cb = icmp eq i8 %loadBr_4b16cb, 1
  br i1 %cmpBr_4b16cb, label %block_.L_4b174a, label %block_4b16d1

block_4b16d1:                                     ; preds = %block_.L_4b16c7
  %loadMem_4b16d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19134 = getelementptr inbounds %struct.GPR, %struct.GPR* %19133, i32 0, i32 33
  %19135 = getelementptr inbounds %struct.Reg, %struct.Reg* %19134, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %19135 to i64*
  %19136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19137 = getelementptr inbounds %struct.GPR, %struct.GPR* %19136, i32 0, i32 1
  %19138 = getelementptr inbounds %struct.Reg, %struct.Reg* %19137, i32 0, i32 0
  %RAX.i89 = bitcast %union.anon* %19138 to i64*
  %19139 = load i64, i64* %PC.i88
  %19140 = add i64 %19139, 8
  store i64 %19140, i64* %PC.i88
  %19141 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %19141, i64* %RAX.i89, align 8
  store %struct.Memory* %loadMem_4b16d1, %struct.Memory** %MEMORY
  %loadMem_4b16d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19143 = getelementptr inbounds %struct.GPR, %struct.GPR* %19142, i32 0, i32 33
  %19144 = getelementptr inbounds %struct.Reg, %struct.Reg* %19143, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %19144 to i64*
  %19145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19146 = getelementptr inbounds %struct.GPR, %struct.GPR* %19145, i32 0, i32 5
  %19147 = getelementptr inbounds %struct.Reg, %struct.Reg* %19146, i32 0, i32 0
  %RCX.i86 = bitcast %union.anon* %19147 to i64*
  %19148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19149 = getelementptr inbounds %struct.GPR, %struct.GPR* %19148, i32 0, i32 15
  %19150 = getelementptr inbounds %struct.Reg, %struct.Reg* %19149, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %19150 to i64*
  %19151 = load i64, i64* %RBP.i87
  %19152 = sub i64 %19151, 35396
  %19153 = load i64, i64* %PC.i85
  %19154 = add i64 %19153, 7
  store i64 %19154, i64* %PC.i85
  %19155 = inttoptr i64 %19152 to i32*
  %19156 = load i32, i32* %19155
  %19157 = sext i32 %19156 to i64
  store i64 %19157, i64* %RCX.i86, align 8
  store %struct.Memory* %loadMem_4b16d9, %struct.Memory** %MEMORY
  %loadMem_4b16e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19159 = getelementptr inbounds %struct.GPR, %struct.GPR* %19158, i32 0, i32 33
  %19160 = getelementptr inbounds %struct.Reg, %struct.Reg* %19159, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %19160 to i64*
  %19161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19162 = getelementptr inbounds %struct.GPR, %struct.GPR* %19161, i32 0, i32 1
  %19163 = getelementptr inbounds %struct.Reg, %struct.Reg* %19162, i32 0, i32 0
  %RAX.i83 = bitcast %union.anon* %19163 to i64*
  %19164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19165 = getelementptr inbounds %struct.GPR, %struct.GPR* %19164, i32 0, i32 5
  %19166 = getelementptr inbounds %struct.Reg, %struct.Reg* %19165, i32 0, i32 0
  %RCX.i84 = bitcast %union.anon* %19166 to i64*
  %19167 = load i64, i64* %RAX.i83
  %19168 = load i64, i64* %RCX.i84
  %19169 = mul i64 %19168, 8
  %19170 = add i64 %19169, %19167
  %19171 = load i64, i64* %PC.i82
  %19172 = add i64 %19171, 4
  store i64 %19172, i64* %PC.i82
  %19173 = inttoptr i64 %19170 to i64*
  %19174 = load i64, i64* %19173
  store i64 %19174, i64* %RAX.i83, align 8
  store %struct.Memory* %loadMem_4b16e0, %struct.Memory** %MEMORY
  %loadMem_4b16e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19176 = getelementptr inbounds %struct.GPR, %struct.GPR* %19175, i32 0, i32 33
  %19177 = getelementptr inbounds %struct.Reg, %struct.Reg* %19176, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %19177 to i64*
  %19178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19179 = getelementptr inbounds %struct.GPR, %struct.GPR* %19178, i32 0, i32 5
  %19180 = getelementptr inbounds %struct.Reg, %struct.Reg* %19179, i32 0, i32 0
  %RCX.i80 = bitcast %union.anon* %19180 to i64*
  %19181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19182 = getelementptr inbounds %struct.GPR, %struct.GPR* %19181, i32 0, i32 15
  %19183 = getelementptr inbounds %struct.Reg, %struct.Reg* %19182, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %19183 to i64*
  %19184 = load i64, i64* %RBP.i81
  %19185 = sub i64 %19184, 36
  %19186 = load i64, i64* %PC.i79
  %19187 = add i64 %19186, 4
  store i64 %19187, i64* %PC.i79
  %19188 = inttoptr i64 %19185 to i32*
  %19189 = load i32, i32* %19188
  %19190 = sext i32 %19189 to i64
  store i64 %19190, i64* %RCX.i80, align 8
  store %struct.Memory* %loadMem_4b16e4, %struct.Memory** %MEMORY
  %loadMem_4b16e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19192 = getelementptr inbounds %struct.GPR, %struct.GPR* %19191, i32 0, i32 33
  %19193 = getelementptr inbounds %struct.Reg, %struct.Reg* %19192, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %19193 to i64*
  %19194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19195 = getelementptr inbounds %struct.GPR, %struct.GPR* %19194, i32 0, i32 1
  %19196 = getelementptr inbounds %struct.Reg, %struct.Reg* %19195, i32 0, i32 0
  %RAX.i77 = bitcast %union.anon* %19196 to i64*
  %19197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19198 = getelementptr inbounds %struct.GPR, %struct.GPR* %19197, i32 0, i32 5
  %19199 = getelementptr inbounds %struct.Reg, %struct.Reg* %19198, i32 0, i32 0
  %RCX.i78 = bitcast %union.anon* %19199 to i64*
  %19200 = load i64, i64* %RAX.i77
  %19201 = load i64, i64* %RCX.i78
  %19202 = mul i64 %19201, 8
  %19203 = add i64 %19202, %19200
  %19204 = load i64, i64* %PC.i76
  %19205 = add i64 %19204, 4
  store i64 %19205, i64* %PC.i76
  %19206 = inttoptr i64 %19203 to i64*
  %19207 = load i64, i64* %19206
  store i64 %19207, i64* %RAX.i77, align 8
  store %struct.Memory* %loadMem_4b16e8, %struct.Memory** %MEMORY
  %loadMem_4b16ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %19208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19209 = getelementptr inbounds %struct.GPR, %struct.GPR* %19208, i32 0, i32 33
  %19210 = getelementptr inbounds %struct.Reg, %struct.Reg* %19209, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %19210 to i64*
  %19211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19212 = getelementptr inbounds %struct.GPR, %struct.GPR* %19211, i32 0, i32 5
  %19213 = getelementptr inbounds %struct.Reg, %struct.Reg* %19212, i32 0, i32 0
  %RCX.i74 = bitcast %union.anon* %19213 to i64*
  %19214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19215 = getelementptr inbounds %struct.GPR, %struct.GPR* %19214, i32 0, i32 15
  %19216 = getelementptr inbounds %struct.Reg, %struct.Reg* %19215, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %19216 to i64*
  %19217 = load i64, i64* %RBP.i75
  %19218 = sub i64 %19217, 40
  %19219 = load i64, i64* %PC.i73
  %19220 = add i64 %19219, 4
  store i64 %19220, i64* %PC.i73
  %19221 = inttoptr i64 %19218 to i32*
  %19222 = load i32, i32* %19221
  %19223 = sext i32 %19222 to i64
  store i64 %19223, i64* %RCX.i74, align 8
  store %struct.Memory* %loadMem_4b16ec, %struct.Memory** %MEMORY
  %loadMem_4b16f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19225 = getelementptr inbounds %struct.GPR, %struct.GPR* %19224, i32 0, i32 33
  %19226 = getelementptr inbounds %struct.Reg, %struct.Reg* %19225, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %19226 to i64*
  %19227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19228 = getelementptr inbounds %struct.GPR, %struct.GPR* %19227, i32 0, i32 1
  %19229 = getelementptr inbounds %struct.Reg, %struct.Reg* %19228, i32 0, i32 0
  %RAX.i71 = bitcast %union.anon* %19229 to i64*
  %19230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19231 = getelementptr inbounds %struct.GPR, %struct.GPR* %19230, i32 0, i32 5
  %19232 = getelementptr inbounds %struct.Reg, %struct.Reg* %19231, i32 0, i32 0
  %RCX.i72 = bitcast %union.anon* %19232 to i64*
  %19233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19234 = getelementptr inbounds %struct.GPR, %struct.GPR* %19233, i32 0, i32 7
  %19235 = getelementptr inbounds %struct.Reg, %struct.Reg* %19234, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %19235 to i64*
  %19236 = load i64, i64* %RAX.i71
  %19237 = load i64, i64* %RCX.i72
  %19238 = mul i64 %19237, 4
  %19239 = add i64 %19238, %19236
  %19240 = load i64, i64* %PC.i70
  %19241 = add i64 %19240, 3
  store i64 %19241, i64* %PC.i70
  %19242 = inttoptr i64 %19239 to i32*
  %19243 = load i32, i32* %19242
  %19244 = zext i32 %19243 to i64
  store i64 %19244, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_4b16f0, %struct.Memory** %MEMORY
  %loadMem_4b16f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19246 = getelementptr inbounds %struct.GPR, %struct.GPR* %19245, i32 0, i32 33
  %19247 = getelementptr inbounds %struct.Reg, %struct.Reg* %19246, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %19247 to i64*
  %19248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19249 = getelementptr inbounds %struct.GPR, %struct.GPR* %19248, i32 0, i32 7
  %19250 = getelementptr inbounds %struct.Reg, %struct.Reg* %19249, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %19250 to i32*
  %19251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19252 = getelementptr inbounds %struct.GPR, %struct.GPR* %19251, i32 0, i32 15
  %19253 = getelementptr inbounds %struct.Reg, %struct.Reg* %19252, i32 0, i32 0
  %RBP.i69 = bitcast %union.anon* %19253 to i64*
  %19254 = load i32, i32* %EDX.i
  %19255 = zext i32 %19254 to i64
  %19256 = load i64, i64* %RBP.i69
  %19257 = sub i64 %19256, 796
  %19258 = load i64, i64* %PC.i68
  %19259 = add i64 %19258, 6
  store i64 %19259, i64* %PC.i68
  %19260 = inttoptr i64 %19257 to i32*
  %19261 = load i32, i32* %19260
  %19262 = sub i32 %19254, %19261
  %19263 = icmp ult i32 %19254, %19261
  %19264 = zext i1 %19263 to i8
  %19265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19264, i8* %19265, align 1
  %19266 = and i32 %19262, 255
  %19267 = call i32 @llvm.ctpop.i32(i32 %19266)
  %19268 = trunc i32 %19267 to i8
  %19269 = and i8 %19268, 1
  %19270 = xor i8 %19269, 1
  %19271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19270, i8* %19271, align 1
  %19272 = xor i32 %19261, %19254
  %19273 = xor i32 %19272, %19262
  %19274 = lshr i32 %19273, 4
  %19275 = trunc i32 %19274 to i8
  %19276 = and i8 %19275, 1
  %19277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19276, i8* %19277, align 1
  %19278 = icmp eq i32 %19262, 0
  %19279 = zext i1 %19278 to i8
  %19280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19279, i8* %19280, align 1
  %19281 = lshr i32 %19262, 31
  %19282 = trunc i32 %19281 to i8
  %19283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19282, i8* %19283, align 1
  %19284 = lshr i32 %19254, 31
  %19285 = lshr i32 %19261, 31
  %19286 = xor i32 %19285, %19284
  %19287 = xor i32 %19281, %19284
  %19288 = add i32 %19287, %19286
  %19289 = icmp eq i32 %19288, 2
  %19290 = zext i1 %19289 to i8
  %19291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19290, i8* %19291, align 1
  store %struct.Memory* %loadMem_4b16f3, %struct.Memory** %MEMORY
  %loadMem_4b16f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19293 = getelementptr inbounds %struct.GPR, %struct.GPR* %19292, i32 0, i32 33
  %19294 = getelementptr inbounds %struct.Reg, %struct.Reg* %19293, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %19294 to i64*
  %19295 = load i64, i64* %PC.i67
  %19296 = add i64 %19295, 47
  %19297 = load i64, i64* %PC.i67
  %19298 = add i64 %19297, 6
  %19299 = load i64, i64* %PC.i67
  %19300 = add i64 %19299, 6
  store i64 %19300, i64* %PC.i67
  %19301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19302 = load i8, i8* %19301, align 1
  %19303 = icmp eq i8 %19302, 0
  %19304 = zext i1 %19303 to i8
  store i8 %19304, i8* %BRANCH_TAKEN, align 1
  %19305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19306 = select i1 %19303, i64 %19296, i64 %19298
  store i64 %19306, i64* %19305, align 8
  store %struct.Memory* %loadMem_4b16f9, %struct.Memory** %MEMORY
  %loadBr_4b16f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b16f9 = icmp eq i8 %loadBr_4b16f9, 1
  br i1 %cmpBr_4b16f9, label %block_.L_4b1728, label %block_4b16ff

block_4b16ff:                                     ; preds = %block_4b16d1
  %loadMem_4b16ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %19307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19308 = getelementptr inbounds %struct.GPR, %struct.GPR* %19307, i32 0, i32 33
  %19309 = getelementptr inbounds %struct.Reg, %struct.Reg* %19308, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %19309 to i64*
  %19310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19311 = getelementptr inbounds %struct.GPR, %struct.GPR* %19310, i32 0, i32 1
  %19312 = getelementptr inbounds %struct.Reg, %struct.Reg* %19311, i32 0, i32 0
  %RAX.i66 = bitcast %union.anon* %19312 to i64*
  %19313 = load i64, i64* %PC.i65
  %19314 = add i64 %19313, 8
  store i64 %19314, i64* %PC.i65
  %19315 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %19315, i64* %RAX.i66, align 8
  store %struct.Memory* %loadMem_4b16ff, %struct.Memory** %MEMORY
  %loadMem_4b1707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19317 = getelementptr inbounds %struct.GPR, %struct.GPR* %19316, i32 0, i32 33
  %19318 = getelementptr inbounds %struct.Reg, %struct.Reg* %19317, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %19318 to i64*
  %19319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19320 = getelementptr inbounds %struct.GPR, %struct.GPR* %19319, i32 0, i32 5
  %19321 = getelementptr inbounds %struct.Reg, %struct.Reg* %19320, i32 0, i32 0
  %RCX.i63 = bitcast %union.anon* %19321 to i64*
  %19322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19323 = getelementptr inbounds %struct.GPR, %struct.GPR* %19322, i32 0, i32 15
  %19324 = getelementptr inbounds %struct.Reg, %struct.Reg* %19323, i32 0, i32 0
  %RBP.i64 = bitcast %union.anon* %19324 to i64*
  %19325 = load i64, i64* %RBP.i64
  %19326 = sub i64 %19325, 35396
  %19327 = load i64, i64* %PC.i62
  %19328 = add i64 %19327, 7
  store i64 %19328, i64* %PC.i62
  %19329 = inttoptr i64 %19326 to i32*
  %19330 = load i32, i32* %19329
  %19331 = sext i32 %19330 to i64
  store i64 %19331, i64* %RCX.i63, align 8
  store %struct.Memory* %loadMem_4b1707, %struct.Memory** %MEMORY
  %loadMem_4b170e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19333 = getelementptr inbounds %struct.GPR, %struct.GPR* %19332, i32 0, i32 33
  %19334 = getelementptr inbounds %struct.Reg, %struct.Reg* %19333, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %19334 to i64*
  %19335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19336 = getelementptr inbounds %struct.GPR, %struct.GPR* %19335, i32 0, i32 1
  %19337 = getelementptr inbounds %struct.Reg, %struct.Reg* %19336, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %19337 to i64*
  %19338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19339 = getelementptr inbounds %struct.GPR, %struct.GPR* %19338, i32 0, i32 5
  %19340 = getelementptr inbounds %struct.Reg, %struct.Reg* %19339, i32 0, i32 0
  %RCX.i61 = bitcast %union.anon* %19340 to i64*
  %19341 = load i64, i64* %RAX.i60
  %19342 = load i64, i64* %RCX.i61
  %19343 = mul i64 %19342, 8
  %19344 = add i64 %19343, %19341
  %19345 = load i64, i64* %PC.i59
  %19346 = add i64 %19345, 4
  store i64 %19346, i64* %PC.i59
  %19347 = inttoptr i64 %19344 to i64*
  %19348 = load i64, i64* %19347
  store i64 %19348, i64* %RAX.i60, align 8
  store %struct.Memory* %loadMem_4b170e, %struct.Memory** %MEMORY
  %loadMem_4b1712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19350 = getelementptr inbounds %struct.GPR, %struct.GPR* %19349, i32 0, i32 33
  %19351 = getelementptr inbounds %struct.Reg, %struct.Reg* %19350, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %19351 to i64*
  %19352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19353 = getelementptr inbounds %struct.GPR, %struct.GPR* %19352, i32 0, i32 5
  %19354 = getelementptr inbounds %struct.Reg, %struct.Reg* %19353, i32 0, i32 0
  %RCX.i57 = bitcast %union.anon* %19354 to i64*
  %19355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19356 = getelementptr inbounds %struct.GPR, %struct.GPR* %19355, i32 0, i32 15
  %19357 = getelementptr inbounds %struct.Reg, %struct.Reg* %19356, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %19357 to i64*
  %19358 = load i64, i64* %RBP.i58
  %19359 = sub i64 %19358, 36
  %19360 = load i64, i64* %PC.i56
  %19361 = add i64 %19360, 4
  store i64 %19361, i64* %PC.i56
  %19362 = inttoptr i64 %19359 to i32*
  %19363 = load i32, i32* %19362
  %19364 = sext i32 %19363 to i64
  store i64 %19364, i64* %RCX.i57, align 8
  store %struct.Memory* %loadMem_4b1712, %struct.Memory** %MEMORY
  %loadMem_4b1716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19366 = getelementptr inbounds %struct.GPR, %struct.GPR* %19365, i32 0, i32 33
  %19367 = getelementptr inbounds %struct.Reg, %struct.Reg* %19366, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %19367 to i64*
  %19368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19369 = getelementptr inbounds %struct.GPR, %struct.GPR* %19368, i32 0, i32 1
  %19370 = getelementptr inbounds %struct.Reg, %struct.Reg* %19369, i32 0, i32 0
  %RAX.i54 = bitcast %union.anon* %19370 to i64*
  %19371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19372 = getelementptr inbounds %struct.GPR, %struct.GPR* %19371, i32 0, i32 5
  %19373 = getelementptr inbounds %struct.Reg, %struct.Reg* %19372, i32 0, i32 0
  %RCX.i55 = bitcast %union.anon* %19373 to i64*
  %19374 = load i64, i64* %RAX.i54
  %19375 = load i64, i64* %RCX.i55
  %19376 = mul i64 %19375, 8
  %19377 = add i64 %19376, %19374
  %19378 = load i64, i64* %PC.i53
  %19379 = add i64 %19378, 4
  store i64 %19379, i64* %PC.i53
  %19380 = inttoptr i64 %19377 to i64*
  %19381 = load i64, i64* %19380
  store i64 %19381, i64* %RAX.i54, align 8
  store %struct.Memory* %loadMem_4b1716, %struct.Memory** %MEMORY
  %loadMem_4b171a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19383 = getelementptr inbounds %struct.GPR, %struct.GPR* %19382, i32 0, i32 33
  %19384 = getelementptr inbounds %struct.Reg, %struct.Reg* %19383, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %19384 to i64*
  %19385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19386 = getelementptr inbounds %struct.GPR, %struct.GPR* %19385, i32 0, i32 5
  %19387 = getelementptr inbounds %struct.Reg, %struct.Reg* %19386, i32 0, i32 0
  %RCX.i51 = bitcast %union.anon* %19387 to i64*
  %19388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19389 = getelementptr inbounds %struct.GPR, %struct.GPR* %19388, i32 0, i32 15
  %19390 = getelementptr inbounds %struct.Reg, %struct.Reg* %19389, i32 0, i32 0
  %RBP.i52 = bitcast %union.anon* %19390 to i64*
  %19391 = load i64, i64* %RBP.i52
  %19392 = sub i64 %19391, 40
  %19393 = load i64, i64* %PC.i50
  %19394 = add i64 %19393, 4
  store i64 %19394, i64* %PC.i50
  %19395 = inttoptr i64 %19392 to i32*
  %19396 = load i32, i32* %19395
  %19397 = sext i32 %19396 to i64
  store i64 %19397, i64* %RCX.i51, align 8
  store %struct.Memory* %loadMem_4b171a, %struct.Memory** %MEMORY
  %loadMem_4b171e = load %struct.Memory*, %struct.Memory** %MEMORY
  %19398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19399 = getelementptr inbounds %struct.GPR, %struct.GPR* %19398, i32 0, i32 33
  %19400 = getelementptr inbounds %struct.Reg, %struct.Reg* %19399, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %19400 to i64*
  %19401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19402 = getelementptr inbounds %struct.GPR, %struct.GPR* %19401, i32 0, i32 1
  %19403 = getelementptr inbounds %struct.Reg, %struct.Reg* %19402, i32 0, i32 0
  %RAX.i49 = bitcast %union.anon* %19403 to i64*
  %19404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19405 = getelementptr inbounds %struct.GPR, %struct.GPR* %19404, i32 0, i32 5
  %19406 = getelementptr inbounds %struct.Reg, %struct.Reg* %19405, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %19406 to i64*
  %19407 = load i64, i64* %RAX.i49
  %19408 = load i64, i64* %RCX.i
  %19409 = mul i64 %19408, 4
  %19410 = add i64 %19409, %19407
  %19411 = load i64, i64* %PC.i48
  %19412 = add i64 %19411, 4
  store i64 %19412, i64* %PC.i48
  %19413 = inttoptr i64 %19410 to i32*
  %19414 = load i32, i32* %19413
  %19415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19415, align 1
  %19416 = and i32 %19414, 255
  %19417 = call i32 @llvm.ctpop.i32(i32 %19416)
  %19418 = trunc i32 %19417 to i8
  %19419 = and i8 %19418, 1
  %19420 = xor i8 %19419, 1
  %19421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19420, i8* %19421, align 1
  %19422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19422, align 1
  %19423 = icmp eq i32 %19414, 0
  %19424 = zext i1 %19423 to i8
  %19425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19424, i8* %19425, align 1
  %19426 = lshr i32 %19414, 31
  %19427 = trunc i32 %19426 to i8
  %19428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19427, i8* %19428, align 1
  %19429 = lshr i32 %19414, 31
  %19430 = xor i32 %19426, %19429
  %19431 = add i32 %19430, %19429
  %19432 = icmp eq i32 %19431, 2
  %19433 = zext i1 %19432 to i8
  %19434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19433, i8* %19434, align 1
  store %struct.Memory* %loadMem_4b171e, %struct.Memory** %MEMORY
  %loadMem_4b1722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19436 = getelementptr inbounds %struct.GPR, %struct.GPR* %19435, i32 0, i32 33
  %19437 = getelementptr inbounds %struct.Reg, %struct.Reg* %19436, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %19437 to i64*
  %19438 = load i64, i64* %PC.i47
  %19439 = add i64 %19438, 21
  %19440 = load i64, i64* %PC.i47
  %19441 = add i64 %19440, 6
  %19442 = load i64, i64* %PC.i47
  %19443 = add i64 %19442, 6
  store i64 %19443, i64* %PC.i47
  %19444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19445 = load i8, i8* %19444, align 1
  store i8 %19445, i8* %BRANCH_TAKEN, align 1
  %19446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19447 = icmp ne i8 %19445, 0
  %19448 = select i1 %19447, i64 %19439, i64 %19441
  store i64 %19448, i64* %19446, align 8
  store %struct.Memory* %loadMem_4b1722, %struct.Memory** %MEMORY
  %loadBr_4b1722 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1722 = icmp eq i8 %loadBr_4b1722, 1
  br i1 %cmpBr_4b1722, label %block_.L_4b1737, label %block_.L_4b1728

block_.L_4b1728:                                  ; preds = %block_4b16ff, %block_4b16d1
  %loadMem_4b1728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19450 = getelementptr inbounds %struct.GPR, %struct.GPR* %19449, i32 0, i32 33
  %19451 = getelementptr inbounds %struct.Reg, %struct.Reg* %19450, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %19451 to i64*
  %19452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19453 = getelementptr inbounds %struct.GPR, %struct.GPR* %19452, i32 0, i32 15
  %19454 = getelementptr inbounds %struct.Reg, %struct.Reg* %19453, i32 0, i32 0
  %RBP.i46 = bitcast %union.anon* %19454 to i64*
  %19455 = load i64, i64* %RBP.i46
  %19456 = sub i64 %19455, 35408
  %19457 = load i64, i64* %PC.i45
  %19458 = add i64 %19457, 10
  store i64 %19458, i64* %PC.i45
  %19459 = inttoptr i64 %19456 to i32*
  store i32 1, i32* %19459
  store %struct.Memory* %loadMem_4b1728, %struct.Memory** %MEMORY
  %loadMem_4b1732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19461 = getelementptr inbounds %struct.GPR, %struct.GPR* %19460, i32 0, i32 33
  %19462 = getelementptr inbounds %struct.Reg, %struct.Reg* %19461, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %19462 to i64*
  %19463 = load i64, i64* %PC.i44
  %19464 = add i64 %19463, 24
  %19465 = load i64, i64* %PC.i44
  %19466 = add i64 %19465, 5
  store i64 %19466, i64* %PC.i44
  %19467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19464, i64* %19467, align 8
  store %struct.Memory* %loadMem_4b1732, %struct.Memory** %MEMORY
  br label %block_.L_4b174a

block_.L_4b1737:                                  ; preds = %block_4b16ff
  %loadMem_4b1737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19469 = getelementptr inbounds %struct.GPR, %struct.GPR* %19468, i32 0, i32 33
  %19470 = getelementptr inbounds %struct.Reg, %struct.Reg* %19469, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %19470 to i64*
  %19471 = load i64, i64* %PC.i43
  %19472 = add i64 %19471, 5
  %19473 = load i64, i64* %PC.i43
  %19474 = add i64 %19473, 5
  store i64 %19474, i64* %PC.i43
  %19475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19472, i64* %19475, align 8
  store %struct.Memory* %loadMem_4b1737, %struct.Memory** %MEMORY
  br label %block_.L_4b173c

block_.L_4b173c:                                  ; preds = %block_.L_4b1737
  %loadMem_4b173c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19477 = getelementptr inbounds %struct.GPR, %struct.GPR* %19476, i32 0, i32 33
  %19478 = getelementptr inbounds %struct.Reg, %struct.Reg* %19477, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %19478 to i64*
  %19479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19480 = getelementptr inbounds %struct.GPR, %struct.GPR* %19479, i32 0, i32 1
  %19481 = getelementptr inbounds %struct.Reg, %struct.Reg* %19480, i32 0, i32 0
  %RAX.i41 = bitcast %union.anon* %19481 to i64*
  %19482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19483 = getelementptr inbounds %struct.GPR, %struct.GPR* %19482, i32 0, i32 15
  %19484 = getelementptr inbounds %struct.Reg, %struct.Reg* %19483, i32 0, i32 0
  %RBP.i42 = bitcast %union.anon* %19484 to i64*
  %19485 = load i64, i64* %RBP.i42
  %19486 = sub i64 %19485, 40
  %19487 = load i64, i64* %PC.i40
  %19488 = add i64 %19487, 3
  store i64 %19488, i64* %PC.i40
  %19489 = inttoptr i64 %19486 to i32*
  %19490 = load i32, i32* %19489
  %19491 = zext i32 %19490 to i64
  store i64 %19491, i64* %RAX.i41, align 8
  store %struct.Memory* %loadMem_4b173c, %struct.Memory** %MEMORY
  %loadMem_4b173f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19493 = getelementptr inbounds %struct.GPR, %struct.GPR* %19492, i32 0, i32 33
  %19494 = getelementptr inbounds %struct.Reg, %struct.Reg* %19493, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %19494 to i64*
  %19495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19496 = getelementptr inbounds %struct.GPR, %struct.GPR* %19495, i32 0, i32 1
  %19497 = getelementptr inbounds %struct.Reg, %struct.Reg* %19496, i32 0, i32 0
  %RAX.i39 = bitcast %union.anon* %19497 to i64*
  %19498 = load i64, i64* %RAX.i39
  %19499 = load i64, i64* %PC.i38
  %19500 = add i64 %19499, 3
  store i64 %19500, i64* %PC.i38
  %19501 = trunc i64 %19498 to i32
  %19502 = add i32 1, %19501
  %19503 = zext i32 %19502 to i64
  store i64 %19503, i64* %RAX.i39, align 8
  %19504 = icmp ult i32 %19502, %19501
  %19505 = icmp ult i32 %19502, 1
  %19506 = or i1 %19504, %19505
  %19507 = zext i1 %19506 to i8
  %19508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19507, i8* %19508, align 1
  %19509 = and i32 %19502, 255
  %19510 = call i32 @llvm.ctpop.i32(i32 %19509)
  %19511 = trunc i32 %19510 to i8
  %19512 = and i8 %19511, 1
  %19513 = xor i8 %19512, 1
  %19514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19513, i8* %19514, align 1
  %19515 = xor i64 1, %19498
  %19516 = trunc i64 %19515 to i32
  %19517 = xor i32 %19516, %19502
  %19518 = lshr i32 %19517, 4
  %19519 = trunc i32 %19518 to i8
  %19520 = and i8 %19519, 1
  %19521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19520, i8* %19521, align 1
  %19522 = icmp eq i32 %19502, 0
  %19523 = zext i1 %19522 to i8
  %19524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19523, i8* %19524, align 1
  %19525 = lshr i32 %19502, 31
  %19526 = trunc i32 %19525 to i8
  %19527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19526, i8* %19527, align 1
  %19528 = lshr i32 %19501, 31
  %19529 = xor i32 %19525, %19528
  %19530 = add i32 %19529, %19525
  %19531 = icmp eq i32 %19530, 2
  %19532 = zext i1 %19531 to i8
  %19533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19532, i8* %19533, align 1
  store %struct.Memory* %loadMem_4b173f, %struct.Memory** %MEMORY
  %loadMem_4b1742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19535 = getelementptr inbounds %struct.GPR, %struct.GPR* %19534, i32 0, i32 33
  %19536 = getelementptr inbounds %struct.Reg, %struct.Reg* %19535, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %19536 to i64*
  %19537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19538 = getelementptr inbounds %struct.GPR, %struct.GPR* %19537, i32 0, i32 1
  %19539 = getelementptr inbounds %struct.Reg, %struct.Reg* %19538, i32 0, i32 0
  %EAX.i36 = bitcast %union.anon* %19539 to i32*
  %19540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19541 = getelementptr inbounds %struct.GPR, %struct.GPR* %19540, i32 0, i32 15
  %19542 = getelementptr inbounds %struct.Reg, %struct.Reg* %19541, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %19542 to i64*
  %19543 = load i64, i64* %RBP.i37
  %19544 = sub i64 %19543, 40
  %19545 = load i32, i32* %EAX.i36
  %19546 = zext i32 %19545 to i64
  %19547 = load i64, i64* %PC.i35
  %19548 = add i64 %19547, 3
  store i64 %19548, i64* %PC.i35
  %19549 = inttoptr i64 %19544 to i32*
  store i32 %19545, i32* %19549
  store %struct.Memory* %loadMem_4b1742, %struct.Memory** %MEMORY
  %loadMem_4b1745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19551 = getelementptr inbounds %struct.GPR, %struct.GPR* %19550, i32 0, i32 33
  %19552 = getelementptr inbounds %struct.Reg, %struct.Reg* %19551, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %19552 to i64*
  %19553 = load i64, i64* %PC.i34
  %19554 = add i64 %19553, -126
  %19555 = load i64, i64* %PC.i34
  %19556 = add i64 %19555, 5
  store i64 %19556, i64* %PC.i34
  %19557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19554, i64* %19557, align 8
  store %struct.Memory* %loadMem_4b1745, %struct.Memory** %MEMORY
  br label %block_.L_4b16c7

block_.L_4b174a:                                  ; preds = %block_.L_4b1728, %block_.L_4b16c7
  %loadMem_4b174a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19559 = getelementptr inbounds %struct.GPR, %struct.GPR* %19558, i32 0, i32 33
  %19560 = getelementptr inbounds %struct.Reg, %struct.Reg* %19559, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %19560 to i64*
  %19561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19562 = getelementptr inbounds %struct.GPR, %struct.GPR* %19561, i32 0, i32 15
  %19563 = getelementptr inbounds %struct.Reg, %struct.Reg* %19562, i32 0, i32 0
  %RBP.i33 = bitcast %union.anon* %19563 to i64*
  %19564 = load i64, i64* %RBP.i33
  %19565 = sub i64 %19564, 35408
  %19566 = load i64, i64* %PC.i32
  %19567 = add i64 %19566, 7
  store i64 %19567, i64* %PC.i32
  %19568 = inttoptr i64 %19565 to i32*
  %19569 = load i32, i32* %19568
  %19570 = sub i32 %19569, 1
  %19571 = icmp ult i32 %19569, 1
  %19572 = zext i1 %19571 to i8
  %19573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19572, i8* %19573, align 1
  %19574 = and i32 %19570, 255
  %19575 = call i32 @llvm.ctpop.i32(i32 %19574)
  %19576 = trunc i32 %19575 to i8
  %19577 = and i8 %19576, 1
  %19578 = xor i8 %19577, 1
  %19579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19578, i8* %19579, align 1
  %19580 = xor i32 %19569, 1
  %19581 = xor i32 %19580, %19570
  %19582 = lshr i32 %19581, 4
  %19583 = trunc i32 %19582 to i8
  %19584 = and i8 %19583, 1
  %19585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19584, i8* %19585, align 1
  %19586 = icmp eq i32 %19570, 0
  %19587 = zext i1 %19586 to i8
  %19588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19587, i8* %19588, align 1
  %19589 = lshr i32 %19570, 31
  %19590 = trunc i32 %19589 to i8
  %19591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19590, i8* %19591, align 1
  %19592 = lshr i32 %19569, 31
  %19593 = xor i32 %19589, %19592
  %19594 = add i32 %19593, %19592
  %19595 = icmp eq i32 %19594, 2
  %19596 = zext i1 %19595 to i8
  %19597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19596, i8* %19597, align 1
  store %struct.Memory* %loadMem_4b174a, %struct.Memory** %MEMORY
  %loadMem_4b1751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19599 = getelementptr inbounds %struct.GPR, %struct.GPR* %19598, i32 0, i32 33
  %19600 = getelementptr inbounds %struct.Reg, %struct.Reg* %19599, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %19600 to i64*
  %19601 = load i64, i64* %PC.i31
  %19602 = add i64 %19601, 11
  %19603 = load i64, i64* %PC.i31
  %19604 = add i64 %19603, 6
  %19605 = load i64, i64* %PC.i31
  %19606 = add i64 %19605, 6
  store i64 %19606, i64* %PC.i31
  %19607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19608 = load i8, i8* %19607, align 1
  %19609 = icmp eq i8 %19608, 0
  %19610 = zext i1 %19609 to i8
  store i8 %19610, i8* %BRANCH_TAKEN, align 1
  %19611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19612 = select i1 %19609, i64 %19602, i64 %19604
  store i64 %19612, i64* %19611, align 8
  store %struct.Memory* %loadMem_4b1751, %struct.Memory** %MEMORY
  %loadBr_4b1751 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1751 = icmp eq i8 %loadBr_4b1751, 1
  br i1 %cmpBr_4b1751, label %block_.L_4b175c, label %block_4b1757

block_4b1757:                                     ; preds = %block_.L_4b174a
  %loadMem_4b1757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19614 = getelementptr inbounds %struct.GPR, %struct.GPR* %19613, i32 0, i32 33
  %19615 = getelementptr inbounds %struct.Reg, %struct.Reg* %19614, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %19615 to i64*
  %19616 = load i64, i64* %PC.i30
  %19617 = add i64 %19616, 24
  %19618 = load i64, i64* %PC.i30
  %19619 = add i64 %19618, 5
  store i64 %19619, i64* %PC.i30
  %19620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19617, i64* %19620, align 8
  store %struct.Memory* %loadMem_4b1757, %struct.Memory** %MEMORY
  br label %block_.L_4b176f

block_.L_4b175c:                                  ; preds = %block_.L_4b174a
  %loadMem_4b175c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19622 = getelementptr inbounds %struct.GPR, %struct.GPR* %19621, i32 0, i32 33
  %19623 = getelementptr inbounds %struct.Reg, %struct.Reg* %19622, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %19623 to i64*
  %19624 = load i64, i64* %PC.i29
  %19625 = add i64 %19624, 5
  %19626 = load i64, i64* %PC.i29
  %19627 = add i64 %19626, 5
  store i64 %19627, i64* %PC.i29
  %19628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19625, i64* %19628, align 8
  store %struct.Memory* %loadMem_4b175c, %struct.Memory** %MEMORY
  br label %block_.L_4b1761

block_.L_4b1761:                                  ; preds = %block_.L_4b175c
  %loadMem_4b1761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19630 = getelementptr inbounds %struct.GPR, %struct.GPR* %19629, i32 0, i32 33
  %19631 = getelementptr inbounds %struct.Reg, %struct.Reg* %19630, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %19631 to i64*
  %19632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19633 = getelementptr inbounds %struct.GPR, %struct.GPR* %19632, i32 0, i32 1
  %19634 = getelementptr inbounds %struct.Reg, %struct.Reg* %19633, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %19634 to i64*
  %19635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19636 = getelementptr inbounds %struct.GPR, %struct.GPR* %19635, i32 0, i32 15
  %19637 = getelementptr inbounds %struct.Reg, %struct.Reg* %19636, i32 0, i32 0
  %RBP.i28 = bitcast %union.anon* %19637 to i64*
  %19638 = load i64, i64* %RBP.i28
  %19639 = sub i64 %19638, 36
  %19640 = load i64, i64* %PC.i26
  %19641 = add i64 %19640, 3
  store i64 %19641, i64* %PC.i26
  %19642 = inttoptr i64 %19639 to i32*
  %19643 = load i32, i32* %19642
  %19644 = zext i32 %19643 to i64
  store i64 %19644, i64* %RAX.i27, align 8
  store %struct.Memory* %loadMem_4b1761, %struct.Memory** %MEMORY
  %loadMem_4b1764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19646 = getelementptr inbounds %struct.GPR, %struct.GPR* %19645, i32 0, i32 33
  %19647 = getelementptr inbounds %struct.Reg, %struct.Reg* %19646, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %19647 to i64*
  %19648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19649 = getelementptr inbounds %struct.GPR, %struct.GPR* %19648, i32 0, i32 1
  %19650 = getelementptr inbounds %struct.Reg, %struct.Reg* %19649, i32 0, i32 0
  %RAX.i25 = bitcast %union.anon* %19650 to i64*
  %19651 = load i64, i64* %RAX.i25
  %19652 = load i64, i64* %PC.i24
  %19653 = add i64 %19652, 3
  store i64 %19653, i64* %PC.i24
  %19654 = trunc i64 %19651 to i32
  %19655 = add i32 1, %19654
  %19656 = zext i32 %19655 to i64
  store i64 %19656, i64* %RAX.i25, align 8
  %19657 = icmp ult i32 %19655, %19654
  %19658 = icmp ult i32 %19655, 1
  %19659 = or i1 %19657, %19658
  %19660 = zext i1 %19659 to i8
  %19661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19660, i8* %19661, align 1
  %19662 = and i32 %19655, 255
  %19663 = call i32 @llvm.ctpop.i32(i32 %19662)
  %19664 = trunc i32 %19663 to i8
  %19665 = and i8 %19664, 1
  %19666 = xor i8 %19665, 1
  %19667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19666, i8* %19667, align 1
  %19668 = xor i64 1, %19651
  %19669 = trunc i64 %19668 to i32
  %19670 = xor i32 %19669, %19655
  %19671 = lshr i32 %19670, 4
  %19672 = trunc i32 %19671 to i8
  %19673 = and i8 %19672, 1
  %19674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19673, i8* %19674, align 1
  %19675 = icmp eq i32 %19655, 0
  %19676 = zext i1 %19675 to i8
  %19677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19676, i8* %19677, align 1
  %19678 = lshr i32 %19655, 31
  %19679 = trunc i32 %19678 to i8
  %19680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19679, i8* %19680, align 1
  %19681 = lshr i32 %19654, 31
  %19682 = xor i32 %19678, %19681
  %19683 = add i32 %19682, %19678
  %19684 = icmp eq i32 %19683, 2
  %19685 = zext i1 %19684 to i8
  %19686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19685, i8* %19686, align 1
  store %struct.Memory* %loadMem_4b1764, %struct.Memory** %MEMORY
  %loadMem_4b1767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19688 = getelementptr inbounds %struct.GPR, %struct.GPR* %19687, i32 0, i32 33
  %19689 = getelementptr inbounds %struct.Reg, %struct.Reg* %19688, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %19689 to i64*
  %19690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19691 = getelementptr inbounds %struct.GPR, %struct.GPR* %19690, i32 0, i32 1
  %19692 = getelementptr inbounds %struct.Reg, %struct.Reg* %19691, i32 0, i32 0
  %EAX.i22 = bitcast %union.anon* %19692 to i32*
  %19693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19694 = getelementptr inbounds %struct.GPR, %struct.GPR* %19693, i32 0, i32 15
  %19695 = getelementptr inbounds %struct.Reg, %struct.Reg* %19694, i32 0, i32 0
  %RBP.i23 = bitcast %union.anon* %19695 to i64*
  %19696 = load i64, i64* %RBP.i23
  %19697 = sub i64 %19696, 36
  %19698 = load i32, i32* %EAX.i22
  %19699 = zext i32 %19698 to i64
  %19700 = load i64, i64* %PC.i21
  %19701 = add i64 %19700, 3
  store i64 %19701, i64* %PC.i21
  %19702 = inttoptr i64 %19697 to i32*
  store i32 %19698, i32* %19702
  store %struct.Memory* %loadMem_4b1767, %struct.Memory** %MEMORY
  %loadMem_4b176a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19704 = getelementptr inbounds %struct.GPR, %struct.GPR* %19703, i32 0, i32 33
  %19705 = getelementptr inbounds %struct.Reg, %struct.Reg* %19704, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %19705 to i64*
  %19706 = load i64, i64* %PC.i20
  %19707 = add i64 %19706, -193
  %19708 = load i64, i64* %PC.i20
  %19709 = add i64 %19708, 5
  store i64 %19709, i64* %PC.i20
  %19710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19707, i64* %19710, align 8
  store %struct.Memory* %loadMem_4b176a, %struct.Memory** %MEMORY
  br label %block_.L_4b16a9

block_.L_4b176f:                                  ; preds = %block_4b1757, %block_.L_4b16a9
  %loadMem_4b176f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19712 = getelementptr inbounds %struct.GPR, %struct.GPR* %19711, i32 0, i32 33
  %19713 = getelementptr inbounds %struct.Reg, %struct.Reg* %19712, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %19713 to i64*
  %19714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19715 = getelementptr inbounds %struct.GPR, %struct.GPR* %19714, i32 0, i32 15
  %19716 = getelementptr inbounds %struct.Reg, %struct.Reg* %19715, i32 0, i32 0
  %RBP.i19 = bitcast %union.anon* %19716 to i64*
  %19717 = load i64, i64* %RBP.i19
  %19718 = sub i64 %19717, 35408
  %19719 = load i64, i64* %PC.i18
  %19720 = add i64 %19719, 7
  store i64 %19720, i64* %PC.i18
  %19721 = inttoptr i64 %19718 to i32*
  %19722 = load i32, i32* %19721
  %19723 = sub i32 %19722, 1
  %19724 = icmp ult i32 %19722, 1
  %19725 = zext i1 %19724 to i8
  %19726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19725, i8* %19726, align 1
  %19727 = and i32 %19723, 255
  %19728 = call i32 @llvm.ctpop.i32(i32 %19727)
  %19729 = trunc i32 %19728 to i8
  %19730 = and i8 %19729, 1
  %19731 = xor i8 %19730, 1
  %19732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19731, i8* %19732, align 1
  %19733 = xor i32 %19722, 1
  %19734 = xor i32 %19733, %19723
  %19735 = lshr i32 %19734, 4
  %19736 = trunc i32 %19735 to i8
  %19737 = and i8 %19736, 1
  %19738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19737, i8* %19738, align 1
  %19739 = icmp eq i32 %19723, 0
  %19740 = zext i1 %19739 to i8
  %19741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19740, i8* %19741, align 1
  %19742 = lshr i32 %19723, 31
  %19743 = trunc i32 %19742 to i8
  %19744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19743, i8* %19744, align 1
  %19745 = lshr i32 %19722, 31
  %19746 = xor i32 %19742, %19745
  %19747 = add i32 %19746, %19745
  %19748 = icmp eq i32 %19747, 2
  %19749 = zext i1 %19748 to i8
  %19750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19749, i8* %19750, align 1
  store %struct.Memory* %loadMem_4b176f, %struct.Memory** %MEMORY
  %loadMem_4b1776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19752 = getelementptr inbounds %struct.GPR, %struct.GPR* %19751, i32 0, i32 33
  %19753 = getelementptr inbounds %struct.Reg, %struct.Reg* %19752, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %19753 to i64*
  %19754 = load i64, i64* %PC.i17
  %19755 = add i64 %19754, 11
  %19756 = load i64, i64* %PC.i17
  %19757 = add i64 %19756, 6
  %19758 = load i64, i64* %PC.i17
  %19759 = add i64 %19758, 6
  store i64 %19759, i64* %PC.i17
  %19760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %19761 = load i8, i8* %19760, align 1
  %19762 = icmp eq i8 %19761, 0
  %19763 = zext i1 %19762 to i8
  store i8 %19763, i8* %BRANCH_TAKEN, align 1
  %19764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19765 = select i1 %19762, i64 %19755, i64 %19757
  store i64 %19765, i64* %19764, align 8
  store %struct.Memory* %loadMem_4b1776, %struct.Memory** %MEMORY
  %loadBr_4b1776 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4b1776 = icmp eq i8 %loadBr_4b1776, 1
  br i1 %cmpBr_4b1776, label %block_.L_4b1781, label %block_4b177c

block_4b177c:                                     ; preds = %block_.L_4b176f
  %loadMem_4b177c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19767 = getelementptr inbounds %struct.GPR, %struct.GPR* %19766, i32 0, i32 33
  %19768 = getelementptr inbounds %struct.Reg, %struct.Reg* %19767, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %19768 to i64*
  %19769 = load i64, i64* %PC.i16
  %19770 = add i64 %19769, 30
  %19771 = load i64, i64* %PC.i16
  %19772 = add i64 %19771, 5
  store i64 %19772, i64* %PC.i16
  %19773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19770, i64* %19773, align 8
  store %struct.Memory* %loadMem_4b177c, %struct.Memory** %MEMORY
  br label %block_.L_4b179a

block_.L_4b1781:                                  ; preds = %block_.L_4b176f
  %loadMem_4b1781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19775 = getelementptr inbounds %struct.GPR, %struct.GPR* %19774, i32 0, i32 33
  %19776 = getelementptr inbounds %struct.Reg, %struct.Reg* %19775, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %19776 to i64*
  %19777 = load i64, i64* %PC.i15
  %19778 = add i64 %19777, 5
  %19779 = load i64, i64* %PC.i15
  %19780 = add i64 %19779, 5
  store i64 %19780, i64* %PC.i15
  %19781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19778, i64* %19781, align 8
  store %struct.Memory* %loadMem_4b1781, %struct.Memory** %MEMORY
  br label %block_.L_4b1786

block_.L_4b1786:                                  ; preds = %block_.L_4b1781
  %loadMem_4b1786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19783 = getelementptr inbounds %struct.GPR, %struct.GPR* %19782, i32 0, i32 33
  %19784 = getelementptr inbounds %struct.Reg, %struct.Reg* %19783, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %19784 to i64*
  %19785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19786 = getelementptr inbounds %struct.GPR, %struct.GPR* %19785, i32 0, i32 1
  %19787 = getelementptr inbounds %struct.Reg, %struct.Reg* %19786, i32 0, i32 0
  %RAX.i13 = bitcast %union.anon* %19787 to i64*
  %19788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19789 = getelementptr inbounds %struct.GPR, %struct.GPR* %19788, i32 0, i32 15
  %19790 = getelementptr inbounds %struct.Reg, %struct.Reg* %19789, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %19790 to i64*
  %19791 = load i64, i64* %RBP.i14
  %19792 = sub i64 %19791, 35396
  %19793 = load i64, i64* %PC.i12
  %19794 = add i64 %19793, 6
  store i64 %19794, i64* %PC.i12
  %19795 = inttoptr i64 %19792 to i32*
  %19796 = load i32, i32* %19795
  %19797 = zext i32 %19796 to i64
  store i64 %19797, i64* %RAX.i13, align 8
  store %struct.Memory* %loadMem_4b1786, %struct.Memory** %MEMORY
  %loadMem_4b178c = load %struct.Memory*, %struct.Memory** %MEMORY
  %19798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19799 = getelementptr inbounds %struct.GPR, %struct.GPR* %19798, i32 0, i32 33
  %19800 = getelementptr inbounds %struct.Reg, %struct.Reg* %19799, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %19800 to i64*
  %19801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19802 = getelementptr inbounds %struct.GPR, %struct.GPR* %19801, i32 0, i32 1
  %19803 = getelementptr inbounds %struct.Reg, %struct.Reg* %19802, i32 0, i32 0
  %RAX.i11 = bitcast %union.anon* %19803 to i64*
  %19804 = load i64, i64* %RAX.i11
  %19805 = load i64, i64* %PC.i10
  %19806 = add i64 %19805, 3
  store i64 %19806, i64* %PC.i10
  %19807 = trunc i64 %19804 to i32
  %19808 = add i32 1, %19807
  %19809 = zext i32 %19808 to i64
  store i64 %19809, i64* %RAX.i11, align 8
  %19810 = icmp ult i32 %19808, %19807
  %19811 = icmp ult i32 %19808, 1
  %19812 = or i1 %19810, %19811
  %19813 = zext i1 %19812 to i8
  %19814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19813, i8* %19814, align 1
  %19815 = and i32 %19808, 255
  %19816 = call i32 @llvm.ctpop.i32(i32 %19815)
  %19817 = trunc i32 %19816 to i8
  %19818 = and i8 %19817, 1
  %19819 = xor i8 %19818, 1
  %19820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19819, i8* %19820, align 1
  %19821 = xor i64 1, %19804
  %19822 = trunc i64 %19821 to i32
  %19823 = xor i32 %19822, %19808
  %19824 = lshr i32 %19823, 4
  %19825 = trunc i32 %19824 to i8
  %19826 = and i8 %19825, 1
  %19827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19826, i8* %19827, align 1
  %19828 = icmp eq i32 %19808, 0
  %19829 = zext i1 %19828 to i8
  %19830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19829, i8* %19830, align 1
  %19831 = lshr i32 %19808, 31
  %19832 = trunc i32 %19831 to i8
  %19833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19832, i8* %19833, align 1
  %19834 = lshr i32 %19807, 31
  %19835 = xor i32 %19831, %19834
  %19836 = add i32 %19835, %19831
  %19837 = icmp eq i32 %19836, 2
  %19838 = zext i1 %19837 to i8
  %19839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19838, i8* %19839, align 1
  store %struct.Memory* %loadMem_4b178c, %struct.Memory** %MEMORY
  %loadMem_4b178f = load %struct.Memory*, %struct.Memory** %MEMORY
  %19840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19841 = getelementptr inbounds %struct.GPR, %struct.GPR* %19840, i32 0, i32 33
  %19842 = getelementptr inbounds %struct.Reg, %struct.Reg* %19841, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %19842 to i64*
  %19843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19844 = getelementptr inbounds %struct.GPR, %struct.GPR* %19843, i32 0, i32 1
  %19845 = getelementptr inbounds %struct.Reg, %struct.Reg* %19844, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %19845 to i32*
  %19846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19847 = getelementptr inbounds %struct.GPR, %struct.GPR* %19846, i32 0, i32 15
  %19848 = getelementptr inbounds %struct.Reg, %struct.Reg* %19847, i32 0, i32 0
  %RBP.i9 = bitcast %union.anon* %19848 to i64*
  %19849 = load i64, i64* %RBP.i9
  %19850 = sub i64 %19849, 35396
  %19851 = load i32, i32* %EAX.i
  %19852 = zext i32 %19851 to i64
  %19853 = load i64, i64* %PC.i8
  %19854 = add i64 %19853, 6
  store i64 %19854, i64* %PC.i8
  %19855 = inttoptr i64 %19850 to i32*
  store i32 %19851, i32* %19855
  store %struct.Memory* %loadMem_4b178f, %struct.Memory** %MEMORY
  %loadMem_4b1795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19857 = getelementptr inbounds %struct.GPR, %struct.GPR* %19856, i32 0, i32 33
  %19858 = getelementptr inbounds %struct.Reg, %struct.Reg* %19857, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %19858 to i64*
  %19859 = load i64, i64* %PC.i7
  %19860 = add i64 %19859, -266
  %19861 = load i64, i64* %PC.i7
  %19862 = add i64 %19861, 5
  store i64 %19862, i64* %PC.i7
  %19863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %19860, i64* %19863, align 8
  store %struct.Memory* %loadMem_4b1795, %struct.Memory** %MEMORY
  br label %block_.L_4b168b

block_.L_4b179a:                                  ; preds = %block_4b177c, %block_.L_4b168b
  %loadMem_4b179a = load %struct.Memory*, %struct.Memory** %MEMORY
  %19864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19865 = getelementptr inbounds %struct.GPR, %struct.GPR* %19864, i32 0, i32 33
  %19866 = getelementptr inbounds %struct.Reg, %struct.Reg* %19865, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %19866 to i64*
  %19867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19868 = getelementptr inbounds %struct.GPR, %struct.GPR* %19867, i32 0, i32 1
  %19869 = getelementptr inbounds %struct.Reg, %struct.Reg* %19868, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %19869 to i64*
  %19870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19871 = getelementptr inbounds %struct.GPR, %struct.GPR* %19870, i32 0, i32 15
  %19872 = getelementptr inbounds %struct.Reg, %struct.Reg* %19871, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %19872 to i64*
  %19873 = load i64, i64* %RBP.i6
  %19874 = sub i64 %19873, 35408
  %19875 = load i64, i64* %PC.i5
  %19876 = add i64 %19875, 6
  store i64 %19876, i64* %PC.i5
  %19877 = inttoptr i64 %19874 to i32*
  %19878 = load i32, i32* %19877
  %19879 = zext i32 %19878 to i64
  store i64 %19879, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_4b179a, %struct.Memory** %MEMORY
  %loadMem_4b17a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19881 = getelementptr inbounds %struct.GPR, %struct.GPR* %19880, i32 0, i32 33
  %19882 = getelementptr inbounds %struct.Reg, %struct.Reg* %19881, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %19882 to i64*
  %19883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19884 = getelementptr inbounds %struct.GPR, %struct.GPR* %19883, i32 0, i32 13
  %19885 = getelementptr inbounds %struct.Reg, %struct.Reg* %19884, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %19885 to i64*
  %19886 = load i64, i64* %RSP.i
  %19887 = load i64, i64* %PC.i4
  %19888 = add i64 %19887, 7
  store i64 %19888, i64* %PC.i4
  %19889 = add i64 35472, %19886
  store i64 %19889, i64* %RSP.i, align 8
  %19890 = icmp ult i64 %19889, %19886
  %19891 = icmp ult i64 %19889, 35472
  %19892 = or i1 %19890, %19891
  %19893 = zext i1 %19892 to i8
  %19894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19893, i8* %19894, align 1
  %19895 = trunc i64 %19889 to i32
  %19896 = and i32 %19895, 255
  %19897 = call i32 @llvm.ctpop.i32(i32 %19896)
  %19898 = trunc i32 %19897 to i8
  %19899 = and i8 %19898, 1
  %19900 = xor i8 %19899, 1
  %19901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19900, i8* %19901, align 1
  %19902 = xor i64 35472, %19886
  %19903 = xor i64 %19902, %19889
  %19904 = lshr i64 %19903, 4
  %19905 = trunc i64 %19904 to i8
  %19906 = and i8 %19905, 1
  %19907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19906, i8* %19907, align 1
  %19908 = icmp eq i64 %19889, 0
  %19909 = zext i1 %19908 to i8
  %19910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %19909, i8* %19910, align 1
  %19911 = lshr i64 %19889, 63
  %19912 = trunc i64 %19911 to i8
  %19913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19912, i8* %19913, align 1
  %19914 = lshr i64 %19886, 63
  %19915 = xor i64 %19911, %19914
  %19916 = add i64 %19915, %19911
  %19917 = icmp eq i64 %19916, 2
  %19918 = zext i1 %19917 to i8
  %19919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19918, i8* %19919, align 1
  store %struct.Memory* %loadMem_4b17a0, %struct.Memory** %MEMORY
  %loadMem_4b17a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19921 = getelementptr inbounds %struct.GPR, %struct.GPR* %19920, i32 0, i32 33
  %19922 = getelementptr inbounds %struct.Reg, %struct.Reg* %19921, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %19922 to i64*
  %19923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19924 = getelementptr inbounds %struct.GPR, %struct.GPR* %19923, i32 0, i32 15
  %19925 = getelementptr inbounds %struct.Reg, %struct.Reg* %19924, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %19925 to i64*
  %19926 = load i64, i64* %PC.i2
  %19927 = add i64 %19926, 1
  store i64 %19927, i64* %PC.i2
  %19928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19929 = load i64, i64* %19928, align 8
  %19930 = add i64 %19929, 8
  %19931 = inttoptr i64 %19929 to i64*
  %19932 = load i64, i64* %19931
  store i64 %19932, i64* %RBP.i3, align 8
  store i64 %19930, i64* %19928, align 8
  store %struct.Memory* %loadMem_4b17a7, %struct.Memory** %MEMORY
  %loadMem_4b17a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %19933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19934 = getelementptr inbounds %struct.GPR, %struct.GPR* %19933, i32 0, i32 33
  %19935 = getelementptr inbounds %struct.Reg, %struct.Reg* %19934, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %19935 to i64*
  %19936 = load i64, i64* %PC.i1
  %19937 = add i64 %19936, 1
  store i64 %19937, i64* %PC.i1
  %19938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %19939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %19940 = load i64, i64* %19939, align 8
  %19941 = inttoptr i64 %19940 to i64*
  %19942 = load i64, i64* %19941
  store i64 %19942, i64* %19938, align 8
  %19943 = add i64 %19940, 8
  store i64 %19943, i64* %19939, align 8
  store %struct.Memory* %loadMem_4b17a8, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4b17a8
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x8a90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 35472
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 35472
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 35472, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 32
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11ad0__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4b0644(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xc__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x214__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35420
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a5c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35420
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RSI, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8a60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35424
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0651(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35424
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a60__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x324__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8a50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__0x70f6d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 5, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__0x7242a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 5, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x70f6d0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x8a64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35428
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x7107a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x7107a0_type* @G_0x7107a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x710790(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x710790_type* @G_0x710790 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x70f6d0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x70f6d0_type* @G_0x70f6d0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x31c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 796
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x7242a0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x7242a0_type* @G_0x7242a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x320__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x324__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x2___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 2, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 2
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 2, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0803(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7247b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = mul i64 %14, 4
  %16 = add i64 %15, 7489456
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sub i32 %12, %20
  %22 = icmp ult i32 %12, %20
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %21, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %20, %12
  %32 = xor i32 %31, %21
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %21, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %21, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %12, 31
  %44 = lshr i32 %20, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b07f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b07dd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x760__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1888
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xba0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2976
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x31c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 796
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rsi__rdi_8____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rsi__rdi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rsi__rdi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rcx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0725(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b07e2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b070a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b07f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b06ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7247b0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x7247b0_type* @G_0x7247b0 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0cda(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x7247b4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x7247b4_type* @G_0x7247b4 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0cc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b28___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722b28_type* @G_0x722b28 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffff80___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, -128
  %14 = icmp ult i32 %9, -128
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 -128, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 1, %36
  %38 = xor i32 %33, %36
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0870(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffff80___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967168, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35432
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b08e7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7f___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 127
  %14 = icmp ult i32 %9, 127
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 127, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4b08af(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x7f___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 127, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b08db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8a6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35436
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a6c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x722b20_type* @G_0x722b20 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffff80___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, -128
  %14 = icmp ult i32 %9, -128
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 -128, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 1, %36
  %38 = xor i32 %33, %36
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b092a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35440
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0991(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf0_type* @G_0x70fcf0 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7f___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 127
  %14 = icmp ult i32 %9, 127
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 127, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4b0961(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35444
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0985(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x8a74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35444
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a74__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35444
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a70__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35416
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0cb4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8a54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35412
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4b0a72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x8a40__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x4af0__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 19184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa8c___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2700, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2700
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2700, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x20____rdx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 32, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x20____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 32, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa8c___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2700, %9
  store i64 %12, i64* %RCX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2700
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2700, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 0, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0ca1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a54__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35412
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35448
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a78__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4000___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 16384, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 16384
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 16384, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_MINUS0x8a54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35412
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_MINUS0x8a58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 35416
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RAX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x20___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 32, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 32
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 32, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x6___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 5
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xfffffc00___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = sub i32 %9, -1024
  %14 = icmp ult i32 %9, -1024
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 -1024, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 1, %36
  %38 = xor i32 %33, %36
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0acf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xfffffc00___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294966272, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a7c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35452
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0b1c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3ff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 1023
  %14 = icmp ult i32 %9, 1023
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1023, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4b0afa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3ff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1023, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35456
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0b10(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35452
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rdx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffc0____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %19, -64
  %21 = icmp ult i32 %19, -64
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, -64
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = xor i32 %42, 1
  %44 = xor i32 %39, %42
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4b0bc1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x4af0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 19184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa8c___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = add i64 2700, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2700
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2700, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x80____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %19, 128
  %21 = icmp ult i32 %19, 128
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, 128
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %19, 31
  %43 = xor i32 %39, %42
  %44 = add i32 %43, %42
  %45 = icmp eq i32 %44, 2
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %46, i8* %47, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4b0bf2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x20____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  store i32 32, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x40___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 64, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xa8c___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 2700, %9
  store i64 %12, i64* %RSI, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 2700
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 2700, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xb4___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 180, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 12, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rsi__rdi_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RDX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rcx__rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0ca6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b09a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0cb9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0821(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0ccc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b080a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4b0f6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0e22(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0e0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0dfc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4b0d3f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35460
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0d4c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a84__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35460
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x304__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 772
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rsi_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rdx__rsi_8____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x70fcf8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x70fcf8_type* @G_0x70fcf8 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0d19(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0e01(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0d02(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0e14(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0ceb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8a44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35396
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0f6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0f51(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0e4a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0f56(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0e2c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1681(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x3c__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 60
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0feb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x34__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 52
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b0fd8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x27546c__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x27546c__rip__type* @G_0x27546c__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rax__rcx_2____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__edx___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x20__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0f91(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0fdd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0f76(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b12d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b12b8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x300__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x78___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 120, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0____rax__rcx_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %RCX
  %16 = mul i64 %15, 8
  %17 = add i64 %16, %14
  %18 = bitcast %union.vec128_t* %XMM0 to i8*
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = bitcast i8* %18 to double*
  %22 = load double, double* %21, align 1
  %23 = inttoptr i64 %17 to double*
  store double %22, double* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x722b20___rax_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 8
  %11 = add i64 %10, 7482144
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1920__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6432
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x310__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1928__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6440
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x318__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 792
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x3c__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x34__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = shl i64 %12, 32
  %20 = ashr exact i64 %19, 32
  %21 = sext i32 %18 to i64
  %22 = mul i64 %21, %20
  %23 = trunc i64 %22 to i32
  %24 = and i64 %22, 4294967295
  store i64 %24, i64* %RDX, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = icmp ne i64 %26, %22
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %23, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %37, align 1
  %38 = lshr i32 %23, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b1102(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x310__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 784
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i16*
  %22 = load i16, i16* %21
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__esi___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd___rax__rcx_8____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = bitcast i8* %15 to double*
  %23 = load double, double* %22, align 1
  %24 = getelementptr inbounds i8, i8* %15, i64 8
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 1
  %27 = inttoptr i64 %19 to double*
  %28 = load double, double* %27
  %29 = fadd double %23, %28
  %30 = bitcast i8* %14 to double*
  store double %29, double* %30, align 1
  %31 = getelementptr inbounds i8, i8* %14, i64 8
  %32 = bitcast i8* %31 to i64*
  store i64 %26, i64* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b109c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd___rax__rcx_8____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to double*
  %22 = load double, double* %21
  %23 = bitcast i8* %14 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %14, i64 8
  %25 = bitcast i8* %24 to double*
  store double 0.000000e+00, double* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jne_.L_4b1138(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_4b1138(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b117e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x748__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x748__rip__type* @G_0x748__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x31c__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 796
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_MINUS0x20__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fmul double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd___rax__rcx_8____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 5
  store i64 %21, i64* %PC
  %22 = bitcast i8* %15 to double*
  %23 = load double, double* %22, align 1
  %24 = getelementptr inbounds i8, i8* %15, i64 8
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 1
  %27 = inttoptr i64 %19 to double*
  %28 = load double, double* %27
  %29 = fdiv double %23, %28
  %30 = bitcast i8* %14 to double*
  store double %29, double* %30, align 1
  %31 = getelementptr inbounds i8, i8* %14, i64 8
  %32 = bitcast i8* %31 to i64*
  store i64 %26, i64* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8a48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35400
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b118a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x31c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 796
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35400
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffc0__MINUS0x8a48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -64
  %16 = icmp ult i32 %14, -64
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -64
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4b11a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7f__MINUS0x8a48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35400
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 127
  %16 = icmp ult i32 %14, 127
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 127
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4b11b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xba0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2976
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x760__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1888
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8a4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x320__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x4__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1013(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b12bd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b0ff5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4690___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4690_type* @G_0x6d4690 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0xc4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4b140d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b1408(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b13ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b13dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x8a44__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9728___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9728_type* @G_0x6f9728 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b132c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b13e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b130e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b13f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b12f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b155a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b1555(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b153c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1435(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1541(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1417(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b167c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b1669(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b1656(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4b15b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x8a88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35464
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b15c2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b158f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b165b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1578(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b166e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1561(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b179a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b176f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4b174a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d4740___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d4740_type* @G_0x6d4740 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x31c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 796
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4b1728(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %19, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = xor i32 %31, %34
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4b1737(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x8a50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b174a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b173c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b16c7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x8a50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 35408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4b175c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b176f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1761(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b16a9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4b1781(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b179a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b1786(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4b168b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8a50__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 35408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x8a90___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 35472, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 35472
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 35472, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
