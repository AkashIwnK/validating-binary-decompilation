; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_475150.sign(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x6cb8f8_type = type <{ [8 x i8] }>
@G_0x6cb8f8= global %G_0x6cb8f8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6cb900_type = type <{ [8 x i8] }>
@G_0x6cb900= global %G_0x6cb900_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x6d4750_type = type <{ [1 x i8] }>
@G_0x6d4750= global %G_0x6d4750_type <{ [1 x i8] c"\00" }>
%G_0x70fcf0_type = type <{ [8 x i8] }>
@G_0x70fcf0= global %G_0x70fcf0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x726418_type = type <{ [8 x i8] }>
@G_0x726418= global %G_0x726418_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x70d010_type = type <{ [8 x i8] }>
@G__0x70d010= global %G__0x70d010_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x70e8f0_type = type <{ [8 x i8] }>
@G__0x70e8f0= global %G__0x70e8f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @dct_luma_16x16(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .dct_luma_16x16:	 RIP: 4043e0	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 4043e0	 Bytes: 1
  %loadMem_4043e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4043e0 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4043e0)
  store %struct.Memory* %call_4043e0, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 4043e1	 Bytes: 3
  %loadMem_4043e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4043e1 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4043e1)
  store %struct.Memory* %call_4043e1, %struct.Memory** %MEMORY

  ; Code: subq $0x940, %rsp	 RIP: 4043e4	 Bytes: 7
  %loadMem_4043e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4043e4 = call %struct.Memory* @routine_subq__0x940___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4043e4)
  store %struct.Memory* %call_4043e4, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 4043eb	 Bytes: 2
  %loadMem_4043eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4043eb = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4043eb)
  store %struct.Memory* %call_4043eb, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 4043ed	 Bytes: 2
  %loadMem_4043ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4043ed = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4043ed)
  store %struct.Memory* %call_4043ed, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x4(%rbp)	 RIP: 4043ef	 Bytes: 3
  %loadMem_4043ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4043ef = call %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4043ef)
  store %struct.Memory* %call_4043ef, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x8a0(%rbp)	 RIP: 4043f2	 Bytes: 10
  %loadMem_4043f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4043f2 = call %struct.Memory* @routine_movl__0x0__MINUS0x8a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4043f2)
  store %struct.Memory* %call_4043f2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4043fc	 Bytes: 8
  %loadMem_4043fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4043fc = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4043fc)
  store %struct.Memory* %call_4043fc, %struct.Memory** %MEMORY

  ; Code: movq 0x3758(%rdx), %rdx	 RIP: 404404	 Bytes: 7
  %loadMem_404404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404404 = call %struct.Memory* @routine_movq_0x3758__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404404)
  store %struct.Memory* %call_404404, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 40440b	 Bytes: 8
  %loadMem_40440b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40440b = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40440b)
  store %struct.Memory* %call_40440b, %struct.Memory** %MEMORY

  ; Code: movslq 0xc(%rsi), %rsi	 RIP: 404413	 Bytes: 4
  %loadMem_404413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404413 = call %struct.Memory* @routine_movslq_0xc__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404413)
  store %struct.Memory* %call_404413, %struct.Memory** %MEMORY

  ; Code: imulq $0x278, %rsi, %rsi	 RIP: 404417	 Bytes: 7
  %loadMem_404417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404417 = call %struct.Memory* @routine_imulq__0x278___rsi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404417)
  store %struct.Memory* %call_404417, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 40441e	 Bytes: 3
  %loadMem_40441e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40441e = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40441e)
  store %struct.Memory* %call_40441e, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x8a8(%rbp)	 RIP: 404421	 Bytes: 7
  %loadMem_404421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404421 = call %struct.Memory* @routine_movq__rdx__MINUS0x8a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404421)
  store %struct.Memory* %call_404421, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 404428	 Bytes: 8
  %loadMem_404428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404428 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404428)
  store %struct.Memory* %call_404428, %struct.Memory** %MEMORY

  ; Code: movq 0x3740(%rdx), %rdx	 RIP: 404430	 Bytes: 7
  %loadMem_404430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404430 = call %struct.Memory* @routine_movq_0x3740__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404430)
  store %struct.Memory* %call_404430, %struct.Memory** %MEMORY

  ; Code: movq (%rdx), %rdx	 RIP: 404437	 Bytes: 3
  %loadMem_404437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404437 = call %struct.Memory* @routine_movq___rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404437)
  store %struct.Memory* %call_404437, %struct.Memory** %MEMORY

  ; Code: movq (%rdx), %rdx	 RIP: 40443a	 Bytes: 3
  %loadMem_40443a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40443a = call %struct.Memory* @routine_movq___rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40443a)
  store %struct.Memory* %call_40443a, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x8b8(%rbp)	 RIP: 40443d	 Bytes: 7
  %loadMem_40443d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40443d = call %struct.Memory* @routine_movq__rdx__MINUS0x8b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40443d)
  store %struct.Memory* %call_40443d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 404444	 Bytes: 8
  %loadMem_404444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404444 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404444)
  store %struct.Memory* %call_404444, %struct.Memory** %MEMORY

  ; Code: movq 0x3740(%rdx), %rdx	 RIP: 40444c	 Bytes: 7
  %loadMem_40444c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40444c = call %struct.Memory* @routine_movq_0x3740__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40444c)
  store %struct.Memory* %call_40444c, %struct.Memory** %MEMORY

  ; Code: movq (%rdx), %rdx	 RIP: 404453	 Bytes: 3
  %loadMem_404453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404453 = call %struct.Memory* @routine_movq___rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404453)
  store %struct.Memory* %call_404453, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdx), %rdx	 RIP: 404456	 Bytes: 4
  %loadMem_404456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404456 = call %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404456)
  store %struct.Memory* %call_404456, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x8c0(%rbp)	 RIP: 40445a	 Bytes: 7
  %loadMem_40445a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40445a = call %struct.Memory* @routine_movq__rdx__MINUS0x8c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40445a)
  store %struct.Memory* %call_40445a, %struct.Memory** %MEMORY

  ; Code: movq -0x8a8(%rbp), %rdx	 RIP: 404461	 Bytes: 7
  %loadMem_404461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404461 = call %struct.Memory* @routine_movq_MINUS0x8a8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404461)
  store %struct.Memory* %call_404461, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rdx), %eax	 RIP: 404468	 Bytes: 3
  %loadMem_404468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404468 = call %struct.Memory* @routine_movl_0xc__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404468)
  store %struct.Memory* %call_404468, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 40446b	 Bytes: 8
  %loadMem_40446b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40446b = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40446b)
  store %struct.Memory* %call_40446b, %struct.Memory** %MEMORY

  ; Code: addl 0x11bdc(%rdx), %eax	 RIP: 404473	 Bytes: 6
  %loadMem_404473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404473 = call %struct.Memory* @routine_addl_0x11bdc__rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404473)
  store %struct.Memory* %call_404473, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 404479	 Bytes: 3
  %loadMem_404479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404479 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404479)
  store %struct.Memory* %call_404479, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x8d5(%rbp)	 RIP: 40447c	 Bytes: 6
  %loadMem_40447c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40447c = call %struct.Memory* @routine_movb__cl__MINUS0x8d5__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40447c)
  store %struct.Memory* %call_40447c, %struct.Memory** %MEMORY

  ; Code: jne .L_4044a0	 RIP: 404482	 Bytes: 6
  %loadMem_404482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404482 = call %struct.Memory* @routine_jne_.L_4044a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404482, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_404482, %struct.Memory** %MEMORY

  %loadBr_404482 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404482 = icmp eq i8 %loadBr_404482, 1
  br i1 %cmpBr_404482, label %block_.L_4044a0, label %block_404488

block_404488:
  ; Code: movq 0x6cb900, %rax	 RIP: 404488	 Bytes: 8
  %loadMem_404488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404488 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404488)
  store %struct.Memory* %call_404488, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, 0x11c00(%rax)	 RIP: 404490	 Bytes: 7
  %loadMem_404490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404490 = call %struct.Memory* @routine_cmpl__0x1__0x11c00__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404490)
  store %struct.Memory* %call_404490, %struct.Memory** %MEMORY

  ; Code: sete %cl	 RIP: 404497	 Bytes: 3
  %loadMem_404497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404497 = call %struct.Memory* @routine_sete__cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404497)
  store %struct.Memory* %call_404497, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x8d5(%rbp)	 RIP: 40449a	 Bytes: 6
  %loadMem_40449a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40449a = call %struct.Memory* @routine_movb__cl__MINUS0x8d5__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40449a)
  store %struct.Memory* %call_40449a, %struct.Memory** %MEMORY

  ; Code: .L_4044a0:	 RIP: 4044a0	 Bytes: 0
  br label %block_.L_4044a0
block_.L_4044a0:

  ; Code: movb -0x8d5(%rbp), %al	 RIP: 4044a0	 Bytes: 6
  %loadMem_4044a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044a0 = call %struct.Memory* @routine_movb_MINUS0x8d5__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044a0)
  store %struct.Memory* %call_4044a0, %struct.Memory** %MEMORY

  ; Code: movl $0x6, %ecx	 RIP: 4044a6	 Bytes: 5
  %loadMem_4044a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044a6 = call %struct.Memory* @routine_movl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044a6)
  store %struct.Memory* %call_4044a6, %struct.Memory** %MEMORY

  ; Code: andb $0x1, %al	 RIP: 4044ab	 Bytes: 2
  %loadMem_4044ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044ab = call %struct.Memory* @routine_andb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044ab)
  store %struct.Memory* %call_4044ab, %struct.Memory** %MEMORY

  ; Code: movzbl %al, %edx	 RIP: 4044ad	 Bytes: 3
  %loadMem_4044ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044ad = call %struct.Memory* @routine_movzbl__al___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044ad)
  store %struct.Memory* %call_4044ad, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x8d4(%rbp)	 RIP: 4044b0	 Bytes: 6
  %loadMem_4044b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044b0 = call %struct.Memory* @routine_movl__edx__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044b0)
  store %struct.Memory* %call_4044b0, %struct.Memory** %MEMORY

  ; Code: movq -0x8a8(%rbp), %rsi	 RIP: 4044b6	 Bytes: 7
  %loadMem_4044b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044b6 = call %struct.Memory* @routine_movq_MINUS0x8a8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044b6)
  store %struct.Memory* %call_4044b6, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rsi), %edx	 RIP: 4044bd	 Bytes: 3
  %loadMem_4044bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044bd = call %struct.Memory* @routine_movl_0xc__rsi____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044bd)
  store %struct.Memory* %call_4044bd, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4044c0	 Bytes: 8
  %loadMem_4044c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044c0 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044c0)
  store %struct.Memory* %call_4044c0, %struct.Memory** %MEMORY

  ; Code: addl 0x11bdc(%rsi), %edx	 RIP: 4044c8	 Bytes: 6
  %loadMem_4044c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044c8 = call %struct.Memory* @routine_addl_0x11bdc__rsi____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044c8)
  store %struct.Memory* %call_4044c8, %struct.Memory** %MEMORY

  ; Code: subl $0x0, %edx	 RIP: 4044ce	 Bytes: 3
  %loadMem_4044ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044ce = call %struct.Memory* @routine_subl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044ce)
  store %struct.Memory* %call_4044ce, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 4044d1	 Bytes: 2
  %loadMem_4044d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044d1 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044d1)
  store %struct.Memory* %call_4044d1, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4044d3	 Bytes: 1
  %loadMem_4044d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044d3 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044d3)
  store %struct.Memory* %call_4044d3, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4044d4	 Bytes: 2
  %loadMem_4044d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044d4 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044d4)
  store %struct.Memory* %call_4044d4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x894(%rbp)	 RIP: 4044d6	 Bytes: 6
  %loadMem_4044d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044d6 = call %struct.Memory* @routine_movl__eax__MINUS0x894__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044d6)
  store %struct.Memory* %call_4044d6, %struct.Memory** %MEMORY

  ; Code: movq -0x8a8(%rbp), %rsi	 RIP: 4044dc	 Bytes: 7
  %loadMem_4044dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044dc = call %struct.Memory* @routine_movq_MINUS0x8a8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044dc)
  store %struct.Memory* %call_4044dc, %struct.Memory** %MEMORY

  ; Code: movl 0xc(%rsi), %eax	 RIP: 4044e3	 Bytes: 3
  %loadMem_4044e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044e3 = call %struct.Memory* @routine_movl_0xc__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044e3)
  store %struct.Memory* %call_4044e3, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 4044e6	 Bytes: 8
  %loadMem_4044e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044e6 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044e6)
  store %struct.Memory* %call_4044e6, %struct.Memory** %MEMORY

  ; Code: addl 0x11bdc(%rsi), %eax	 RIP: 4044ee	 Bytes: 6
  %loadMem_4044ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044ee = call %struct.Memory* @routine_addl_0x11bdc__rsi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044ee)
  store %struct.Memory* %call_4044ee, %struct.Memory** %MEMORY

  ; Code: subl $0x0, %eax	 RIP: 4044f4	 Bytes: 3
  %loadMem_4044f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044f4 = call %struct.Memory* @routine_subl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044f4)
  store %struct.Memory* %call_4044f4, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4044f7	 Bytes: 1
  %loadMem_4044f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044f7 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044f7)
  store %struct.Memory* %call_4044f7, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4044f8	 Bytes: 2
  %loadMem_4044f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044f8 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044f8)
  store %struct.Memory* %call_4044f8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x898(%rbp)	 RIP: 4044fa	 Bytes: 6
  %loadMem_4044fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4044fa = call %struct.Memory* @routine_movl__edx__MINUS0x898__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4044fa)
  store %struct.Memory* %call_4044fa, %struct.Memory** %MEMORY

  ; Code: movl -0x894(%rbp), %ecx	 RIP: 404500	 Bytes: 6
  %loadMem_404500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404500 = call %struct.Memory* @routine_movl_MINUS0x894__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404500)
  store %struct.Memory* %call_404500, %struct.Memory** %MEMORY

  ; Code: addl $0xf, %ecx	 RIP: 404506	 Bytes: 3
  %loadMem_404506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404506 = call %struct.Memory* @routine_addl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404506)
  store %struct.Memory* %call_404506, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x89c(%rbp)	 RIP: 404509	 Bytes: 6
  %loadMem_404509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404509 = call %struct.Memory* @routine_movl__ecx__MINUS0x89c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404509)
  store %struct.Memory* %call_404509, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 40450f	 Bytes: 7
  %loadMem_40450f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40450f = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40450f)
  store %struct.Memory* %call_40450f, %struct.Memory** %MEMORY

  ; Code: .L_404516:	 RIP: 404516	 Bytes: 0
  br label %block_.L_404516
block_.L_404516:

  ; Code: cmpl $0x10, -0xc(%rbp)	 RIP: 404516	 Bytes: 4
  %loadMem_404516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404516 = call %struct.Memory* @routine_cmpl__0x10__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404516)
  store %struct.Memory* %call_404516, %struct.Memory** %MEMORY

  ; Code: jge .L_4046a0	 RIP: 40451a	 Bytes: 6
  %loadMem_40451a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40451a = call %struct.Memory* @routine_jge_.L_4046a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40451a, i8* %BRANCH_TAKEN, i64 390, i64 6, i64 6)
  store %struct.Memory* %call_40451a, %struct.Memory** %MEMORY

  %loadBr_40451a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40451a = icmp eq i8 %loadBr_40451a, 1
  br i1 %cmpBr_40451a, label %block_.L_4046a0, label %block_404520

block_404520:
  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 404520	 Bytes: 7
  %loadMem_404520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404520 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404520)
  store %struct.Memory* %call_404520, %struct.Memory** %MEMORY

  ; Code: .L_404527:	 RIP: 404527	 Bytes: 0
  br label %block_.L_404527
block_.L_404527:

  ; Code: cmpl $0x10, -0x8(%rbp)	 RIP: 404527	 Bytes: 4
  %loadMem_404527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404527 = call %struct.Memory* @routine_cmpl__0x10__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404527)
  store %struct.Memory* %call_404527, %struct.Memory** %MEMORY

  ; Code: jge .L_40468d	 RIP: 40452b	 Bytes: 6
  %loadMem_40452b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40452b = call %struct.Memory* @routine_jge_.L_40468d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40452b, i8* %BRANCH_TAKEN, i64 354, i64 6, i64 6)
  store %struct.Memory* %call_40452b, %struct.Memory** %MEMORY

  %loadBr_40452b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40452b = icmp eq i8 %loadBr_40452b, 1
  br i1 %cmpBr_40452b, label %block_.L_40468d, label %block_404531

block_404531:
  ; Code: movq 0x6cb900, %rax	 RIP: 404531	 Bytes: 8
  %loadMem_404531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404531 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404531)
  store %struct.Memory* %call_404531, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 404539	 Bytes: 7
  %loadMem_404539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404539 = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404539)
  store %struct.Memory* %call_404539, %struct.Memory** %MEMORY

  ; Code: jne .L_4045cb	 RIP: 404540	 Bytes: 6
  %loadMem_404540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404540 = call %struct.Memory* @routine_jne_.L_4045cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404540, i8* %BRANCH_TAKEN, i64 139, i64 6, i64 6)
  store %struct.Memory* %call_404540, %struct.Memory** %MEMORY

  %loadBr_404540 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404540 = icmp eq i8 %loadBr_404540, 1
  br i1 %cmpBr_404540, label %block_.L_4045cb, label %block_404546

block_404546:
  ; Code: leaq -0x420(%rbp), %rax	 RIP: 404546	 Bytes: 7
  %loadMem_404546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404546 = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404546)
  store %struct.Memory* %call_404546, %struct.Memory** %MEMORY

  ; Code: movq 0x726418, %rcx	 RIP: 40454d	 Bytes: 8
  %loadMem_40454d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40454d = call %struct.Memory* @routine_movq_0x726418___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40454d)
  store %struct.Memory* %call_40454d, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 404555	 Bytes: 8
  %loadMem_404555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404555 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404555)
  store %struct.Memory* %call_404555, %struct.Memory** %MEMORY

  ; Code: movl 0xac(%rdx), %esi	 RIP: 40455d	 Bytes: 6
  %loadMem_40455d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40455d = call %struct.Memory* @routine_movl_0xac__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40455d)
  store %struct.Memory* %call_40455d, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %esi	 RIP: 404563	 Bytes: 3
  %loadMem_404563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404563 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404563)
  store %struct.Memory* %call_404563, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 404566	 Bytes: 3
  %loadMem_404566 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404566 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404566)
  store %struct.Memory* %call_404566, %struct.Memory** %MEMORY

  ; Code: movq (%rcx,%rdx,8), %rcx	 RIP: 404569	 Bytes: 4
  %loadMem_404569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404569 = call %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404569)
  store %struct.Memory* %call_404569, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 40456d	 Bytes: 8
  %loadMem_40456d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40456d = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40456d)
  store %struct.Memory* %call_40456d, %struct.Memory** %MEMORY

  ; Code: movl 0xa8(%rdx), %esi	 RIP: 404575	 Bytes: 6
  %loadMem_404575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404575 = call %struct.Memory* @routine_movl_0xa8__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404575)
  store %struct.Memory* %call_404575, %struct.Memory** %MEMORY

  ; Code: addl -0x8(%rbp), %esi	 RIP: 40457b	 Bytes: 3
  %loadMem_40457b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40457b = call %struct.Memory* @routine_addl_MINUS0x8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40457b)
  store %struct.Memory* %call_40457b, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40457e	 Bytes: 3
  %loadMem_40457e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40457e = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40457e)
  store %struct.Memory* %call_40457e, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 404581	 Bytes: 4
  %loadMem_404581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404581 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404581)
  store %struct.Memory* %call_404581, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 404585	 Bytes: 8
  %loadMem_404585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404585 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404585)
  store %struct.Memory* %call_404585, %struct.Memory** %MEMORY

  ; Code: addq $0x12b8, %rcx	 RIP: 40458d	 Bytes: 7
  %loadMem_40458d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40458d = call %struct.Memory* @routine_addq__0x12b8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40458d)
  store %struct.Memory* %call_40458d, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 404594	 Bytes: 4
  %loadMem_404594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404594 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404594)
  store %struct.Memory* %call_404594, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 404598	 Bytes: 4
  %loadMem_404598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404598 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404598)
  store %struct.Memory* %call_404598, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40459c	 Bytes: 3
  %loadMem_40459c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40459c = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40459c)
  store %struct.Memory* %call_40459c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40459f	 Bytes: 4
  %loadMem_40459f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40459f = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40459f)
  store %struct.Memory* %call_40459f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 4045a3	 Bytes: 4
  %loadMem_4045a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045a3 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045a3)
  store %struct.Memory* %call_4045a3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4045a7	 Bytes: 3
  %loadMem_4045a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045a7 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045a7)
  store %struct.Memory* %call_4045a7, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 4045aa	 Bytes: 4
  %loadMem_4045aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045aa = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045aa)
  store %struct.Memory* %call_4045aa, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %edi	 RIP: 4045ae	 Bytes: 4
  %loadMem_4045ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045ae = call %struct.Memory* @routine_movzwl___rcx__rdx_2____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045ae)
  store %struct.Memory* %call_4045ae, %struct.Memory** %MEMORY

  ; Code: subl %edi, %esi	 RIP: 4045b2	 Bytes: 2
  %loadMem_4045b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045b2 = call %struct.Memory* @routine_subl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045b2)
  store %struct.Memory* %call_4045b2, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 4045b4	 Bytes: 4
  %loadMem_4045b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045b4 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045b4)
  store %struct.Memory* %call_4045b4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4045b8	 Bytes: 4
  %loadMem_4045b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045b8 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045b8)
  store %struct.Memory* %call_4045b8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4045bc	 Bytes: 3
  %loadMem_4045bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045bc = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045bc)
  store %struct.Memory* %call_4045bc, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4045bf	 Bytes: 4
  %loadMem_4045bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045bf = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045bf)
  store %struct.Memory* %call_4045bf, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 4045c3	 Bytes: 3
  %loadMem_4045c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045c3 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045c3)
  store %struct.Memory* %call_4045c3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404605	 RIP: 4045c6	 Bytes: 5
  %loadMem_4045c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045c6 = call %struct.Memory* @routine_jmpq_.L_404605(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045c6, i64 63, i64 5)
  store %struct.Memory* %call_4045c6, %struct.Memory** %MEMORY

  br label %block_.L_404605

  ; Code: .L_4045cb:	 RIP: 4045cb	 Bytes: 0
block_.L_4045cb:

  ; Code: leaq -0x420(%rbp), %rax	 RIP: 4045cb	 Bytes: 7
  %loadMem_4045cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045cb = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045cb)
  store %struct.Memory* %call_4045cb, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 4045d2	 Bytes: 8
  %loadMem_4045d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045d2 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045d2)
  store %struct.Memory* %call_4045d2, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 4045da	 Bytes: 7
  %loadMem_4045da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045da = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045da)
  store %struct.Memory* %call_4045da, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 4045e1	 Bytes: 4
  %loadMem_4045e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045e1 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045e1)
  store %struct.Memory* %call_4045e1, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4045e5	 Bytes: 4
  %loadMem_4045e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045e5 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045e5)
  store %struct.Memory* %call_4045e5, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4045e9	 Bytes: 3
  %loadMem_4045e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045e9 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045e9)
  store %struct.Memory* %call_4045e9, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 4045ec	 Bytes: 4
  %loadMem_4045ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045ec = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045ec)
  store %struct.Memory* %call_4045ec, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 4045f0	 Bytes: 3
  %loadMem_4045f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045f0 = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045f0)
  store %struct.Memory* %call_4045f0, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 4045f3	 Bytes: 4
  %loadMem_4045f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045f3 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045f3)
  store %struct.Memory* %call_4045f3, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4045f7	 Bytes: 4
  %loadMem_4045f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045f7 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045f7)
  store %struct.Memory* %call_4045f7, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4045fb	 Bytes: 3
  %loadMem_4045fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045fb = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045fb)
  store %struct.Memory* %call_4045fb, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4045fe	 Bytes: 4
  %loadMem_4045fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4045fe = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4045fe)
  store %struct.Memory* %call_4045fe, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 404602	 Bytes: 3
  %loadMem_404602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404602 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404602)
  store %struct.Memory* %call_404602, %struct.Memory** %MEMORY

  ; Code: .L_404605:	 RIP: 404605	 Bytes: 0
  br label %block_.L_404605
block_.L_404605:

  ; Code: movl $0x4, %eax	 RIP: 404605	 Bytes: 5
  %loadMem_404605 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404605 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404605)
  store %struct.Memory* %call_404605, %struct.Memory** %MEMORY

  ; Code: leaq -0x880(%rbp), %rcx	 RIP: 40460a	 Bytes: 7
  %loadMem_40460a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40460a = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40460a)
  store %struct.Memory* %call_40460a, %struct.Memory** %MEMORY

  ; Code: leaq -0x420(%rbp), %rdx	 RIP: 404611	 Bytes: 7
  %loadMem_404611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404611 = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404611)
  store %struct.Memory* %call_404611, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rsi	 RIP: 404618	 Bytes: 4
  %loadMem_404618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404618 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404618)
  store %struct.Memory* %call_404618, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 40461c	 Bytes: 4
  %loadMem_40461c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40461c = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40461c)
  store %struct.Memory* %call_40461c, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 404620	 Bytes: 3
  %loadMem_404620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404620 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404620)
  store %struct.Memory* %call_404620, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 404623	 Bytes: 4
  %loadMem_404623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404623 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404623)
  store %struct.Memory* %call_404623, %struct.Memory** %MEMORY

  ; Code: movl (%rdx,%rsi,4), %edi	 RIP: 404627	 Bytes: 3
  %loadMem_404627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404627 = call %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404627)
  store %struct.Memory* %call_404627, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %r8d	 RIP: 40462a	 Bytes: 4
  %loadMem_40462a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40462a = call %struct.Memory* @routine_movl_MINUS0x8__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40462a)
  store %struct.Memory* %call_40462a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8dc(%rbp)	 RIP: 40462e	 Bytes: 6
  %loadMem_40462e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40462e = call %struct.Memory* @routine_movl__eax__MINUS0x8dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40462e)
  store %struct.Memory* %call_40462e, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %eax	 RIP: 404634	 Bytes: 3
  %loadMem_404634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404634 = call %struct.Memory* @routine_movl__r8d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404634)
  store %struct.Memory* %call_404634, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 404637	 Bytes: 1
  %loadMem_404637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404637 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404637)
  store %struct.Memory* %call_404637, %struct.Memory** %MEMORY

  ; Code: movl -0x8dc(%rbp), %r8d	 RIP: 404638	 Bytes: 7
  %loadMem_404638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404638 = call %struct.Memory* @routine_movl_MINUS0x8dc__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404638)
  store %struct.Memory* %call_404638, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 40463f	 Bytes: 3
  %loadMem_40463f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40463f = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40463f)
  store %struct.Memory* %call_40463f, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 404642	 Bytes: 3
  %loadMem_404642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404642 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404642)
  store %struct.Memory* %call_404642, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rsi	 RIP: 404645	 Bytes: 4
  %loadMem_404645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404645 = call %struct.Memory* @routine_shlq__0x8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404645)
  store %struct.Memory* %call_404645, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 404649	 Bytes: 3
  %loadMem_404649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404649 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404649)
  store %struct.Memory* %call_404649, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %edx	 RIP: 40464c	 Bytes: 3
  %loadMem_40464c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40464c = call %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40464c)
  store %struct.Memory* %call_40464c, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 40464f	 Bytes: 2
  %loadMem_40464f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40464f = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40464f)
  store %struct.Memory* %call_40464f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 404651	 Bytes: 1
  %loadMem_404651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404651 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404651)
  store %struct.Memory* %call_404651, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 404652	 Bytes: 3
  %loadMem_404652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404652 = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404652)
  store %struct.Memory* %call_404652, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 404655	 Bytes: 3
  %loadMem_404655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404655 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404655)
  store %struct.Memory* %call_404655, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 404658	 Bytes: 4
  %loadMem_404658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404658 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404658)
  store %struct.Memory* %call_404658, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 40465c	 Bytes: 3
  %loadMem_40465c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40465c = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40465c)
  store %struct.Memory* %call_40465c, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40465f	 Bytes: 3
  %loadMem_40465f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40465f = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40465f)
  store %struct.Memory* %call_40465f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 404662	 Bytes: 1
  %loadMem_404662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404662 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404662)
  store %struct.Memory* %call_404662, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 404663	 Bytes: 3
  %loadMem_404663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404663 = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404663)
  store %struct.Memory* %call_404663, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rsi	 RIP: 404666	 Bytes: 3
  %loadMem_404666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404666 = call %struct.Memory* @routine_movslq__edx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404666)
  store %struct.Memory* %call_404666, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 404669	 Bytes: 4
  %loadMem_404669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404669 = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404669)
  store %struct.Memory* %call_404669, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 40466d	 Bytes: 3
  %loadMem_40466d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40466d = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40466d)
  store %struct.Memory* %call_40466d, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 404670	 Bytes: 3
  %loadMem_404670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404670 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404670)
  store %struct.Memory* %call_404670, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 404673	 Bytes: 2
  %loadMem_404673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404673 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404673)
  store %struct.Memory* %call_404673, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 404675	 Bytes: 1
  %loadMem_404675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404675 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404675)
  store %struct.Memory* %call_404675, %struct.Memory** %MEMORY

  ; Code: idivl %r8d	 RIP: 404676	 Bytes: 3
  %loadMem_404676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404676 = call %struct.Memory* @routine_idivl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404676)
  store %struct.Memory* %call_404676, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rsi	 RIP: 404679	 Bytes: 3
  %loadMem_404679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404679 = call %struct.Memory* @routine_movslq__eax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404679)
  store %struct.Memory* %call_404679, %struct.Memory** %MEMORY

  ; Code: movl %edi, (%rcx,%rsi,4)	 RIP: 40467c	 Bytes: 3
  %loadMem_40467c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40467c = call %struct.Memory* @routine_movl__edi____rcx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40467c)
  store %struct.Memory* %call_40467c, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 40467f	 Bytes: 3
  %loadMem_40467f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40467f = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40467f)
  store %struct.Memory* %call_40467f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404682	 Bytes: 3
  %loadMem_404682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404682 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404682)
  store %struct.Memory* %call_404682, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 404685	 Bytes: 3
  %loadMem_404685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404685 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404685)
  store %struct.Memory* %call_404685, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404527	 RIP: 404688	 Bytes: 5
  %loadMem_404688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404688 = call %struct.Memory* @routine_jmpq_.L_404527(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404688, i64 -353, i64 5)
  store %struct.Memory* %call_404688, %struct.Memory** %MEMORY

  br label %block_.L_404527

  ; Code: .L_40468d:	 RIP: 40468d	 Bytes: 0
block_.L_40468d:

  ; Code: jmpq .L_404692	 RIP: 40468d	 Bytes: 5
  %loadMem_40468d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40468d = call %struct.Memory* @routine_jmpq_.L_404692(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40468d, i64 5, i64 5)
  store %struct.Memory* %call_40468d, %struct.Memory** %MEMORY

  br label %block_.L_404692

  ; Code: .L_404692:	 RIP: 404692	 Bytes: 0
block_.L_404692:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 404692	 Bytes: 3
  %loadMem_404692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404692 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404692)
  store %struct.Memory* %call_404692, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404695	 Bytes: 3
  %loadMem_404695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404695 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404695)
  store %struct.Memory* %call_404695, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 404698	 Bytes: 3
  %loadMem_404698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404698 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404698)
  store %struct.Memory* %call_404698, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404516	 RIP: 40469b	 Bytes: 5
  %loadMem_40469b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40469b = call %struct.Memory* @routine_jmpq_.L_404516(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40469b, i64 -389, i64 5)
  store %struct.Memory* %call_40469b, %struct.Memory** %MEMORY

  br label %block_.L_404516

  ; Code: .L_4046a0:	 RIP: 4046a0	 Bytes: 0
block_.L_4046a0:

  ; Code: movl $0x0, -0x14(%rbp)	 RIP: 4046a0	 Bytes: 7
  %loadMem_4046a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046a0 = call %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046a0)
  store %struct.Memory* %call_4046a0, %struct.Memory** %MEMORY

  ; Code: .L_4046a7:	 RIP: 4046a7	 Bytes: 0
  br label %block_.L_4046a7
block_.L_4046a7:

  ; Code: xorl %eax, %eax	 RIP: 4046a7	 Bytes: 2
  %loadMem_4046a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046a7 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046a7)
  store %struct.Memory* %call_4046a7, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 4046a9	 Bytes: 2
  %loadMem_4046a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046a9 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046a9)
  store %struct.Memory* %call_4046a9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0x14(%rbp)	 RIP: 4046ab	 Bytes: 4
  %loadMem_4046ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046ab = call %struct.Memory* @routine_cmpl__0x4__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046ab)
  store %struct.Memory* %call_4046ab, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x8dd(%rbp)	 RIP: 4046af	 Bytes: 6
  %loadMem_4046af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046af = call %struct.Memory* @routine_movb__cl__MINUS0x8dd__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046af)
  store %struct.Memory* %call_4046af, %struct.Memory** %MEMORY

  ; Code: jge .L_4046cd	 RIP: 4046b5	 Bytes: 6
  %loadMem_4046b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046b5 = call %struct.Memory* @routine_jge_.L_4046cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046b5, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_4046b5, %struct.Memory** %MEMORY

  %loadBr_4046b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4046b5 = icmp eq i8 %loadBr_4046b5, 1
  br i1 %cmpBr_4046b5, label %block_.L_4046cd, label %block_4046bb

block_4046bb:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 4046bb	 Bytes: 7
  %loadMem_4046bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046bb = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046bb)
  store %struct.Memory* %call_4046bb, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 4046c2	 Bytes: 3
  %loadMem_4046c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046c2 = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046c2)
  store %struct.Memory* %call_4046c2, %struct.Memory** %MEMORY

  ; Code: xorb $0xff, %al	 RIP: 4046c5	 Bytes: 2
  %loadMem_4046c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046c5 = call %struct.Memory* @routine_xorb__0xff___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046c5)
  store %struct.Memory* %call_4046c5, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x8dd(%rbp)	 RIP: 4046c7	 Bytes: 6
  %loadMem_4046c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046c7 = call %struct.Memory* @routine_movb__al__MINUS0x8dd__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046c7)
  store %struct.Memory* %call_4046c7, %struct.Memory** %MEMORY

  ; Code: .L_4046cd:	 RIP: 4046cd	 Bytes: 0
  br label %block_.L_4046cd
block_.L_4046cd:

  ; Code: movb -0x8dd(%rbp), %al	 RIP: 4046cd	 Bytes: 6
  %loadMem_4046cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046cd = call %struct.Memory* @routine_movb_MINUS0x8dd__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046cd)
  store %struct.Memory* %call_4046cd, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 4046d3	 Bytes: 2
  %loadMem_4046d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046d3 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046d3)
  store %struct.Memory* %call_4046d3, %struct.Memory** %MEMORY

  ; Code: jne .L_4046e0	 RIP: 4046d5	 Bytes: 6
  %loadMem_4046d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046d5 = call %struct.Memory* @routine_jne_.L_4046e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046d5, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4046d5, %struct.Memory** %MEMORY

  %loadBr_4046d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4046d5 = icmp eq i8 %loadBr_4046d5, 1
  br i1 %cmpBr_4046d5, label %block_.L_4046e0, label %block_4046db

block_4046db:
  ; Code: jmpq .L_404ac4	 RIP: 4046db	 Bytes: 5
  %loadMem_4046db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046db = call %struct.Memory* @routine_jmpq_.L_404ac4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046db, i64 1001, i64 5)
  store %struct.Memory* %call_4046db, %struct.Memory** %MEMORY

  br label %block_.L_404ac4

  ; Code: .L_4046e0:	 RIP: 4046e0	 Bytes: 0
block_.L_4046e0:

  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 4046e0	 Bytes: 7
  %loadMem_4046e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046e0 = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046e0)
  store %struct.Memory* %call_4046e0, %struct.Memory** %MEMORY

  ; Code: .L_4046e7:	 RIP: 4046e7	 Bytes: 0
  br label %block_.L_4046e7
block_.L_4046e7:

  ; Code: cmpl $0x4, -0x10(%rbp)	 RIP: 4046e7	 Bytes: 4
  %loadMem_4046e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046e7 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046e7)
  store %struct.Memory* %call_4046e7, %struct.Memory** %MEMORY

  ; Code: jge .L_404ab1	 RIP: 4046eb	 Bytes: 6
  %loadMem_4046eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046eb = call %struct.Memory* @routine_jge_.L_404ab1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046eb, i8* %BRANCH_TAKEN, i64 966, i64 6, i64 6)
  store %struct.Memory* %call_4046eb, %struct.Memory** %MEMORY

  %loadBr_4046eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4046eb = icmp eq i8 %loadBr_4046eb, 1
  br i1 %cmpBr_4046eb, label %block_.L_404ab1, label %block_4046f1

block_4046f1:
  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 4046f1	 Bytes: 7
  %loadMem_4046f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046f1 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046f1)
  store %struct.Memory* %call_4046f1, %struct.Memory** %MEMORY

  ; Code: .L_4046f8:	 RIP: 4046f8	 Bytes: 0
  br label %block_.L_4046f8
block_.L_4046f8:

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 4046f8	 Bytes: 4
  %loadMem_4046f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046f8 = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046f8)
  store %struct.Memory* %call_4046f8, %struct.Memory** %MEMORY

  ; Code: jge .L_4048d0	 RIP: 4046fc	 Bytes: 6
  %loadMem_4046fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4046fc = call %struct.Memory* @routine_jge_.L_4048d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4046fc, i8* %BRANCH_TAKEN, i64 468, i64 6, i64 6)
  store %struct.Memory* %call_4046fc, %struct.Memory** %MEMORY

  %loadBr_4046fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4046fc = icmp eq i8 %loadBr_4046fc, 1
  br i1 %cmpBr_4046fc, label %block_.L_4048d0, label %block_404702

block_404702:
  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 404702	 Bytes: 7
  %loadMem_404702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404702 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404702)
  store %struct.Memory* %call_404702, %struct.Memory** %MEMORY

  ; Code: .L_404709:	 RIP: 404709	 Bytes: 0
  br label %block_.L_404709
block_.L_404709:

  ; Code: cmpl $0x2, -0x8(%rbp)	 RIP: 404709	 Bytes: 4
  %loadMem_404709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404709 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404709)
  store %struct.Memory* %call_404709, %struct.Memory** %MEMORY

  ; Code: jge .L_4047f2	 RIP: 40470d	 Bytes: 6
  %loadMem_40470d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40470d = call %struct.Memory* @routine_jge_.L_4047f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40470d, i8* %BRANCH_TAKEN, i64 229, i64 6, i64 6)
  store %struct.Memory* %call_40470d, %struct.Memory** %MEMORY

  %loadBr_40470d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40470d = icmp eq i8 %loadBr_40470d, 1
  br i1 %cmpBr_40470d, label %block_.L_4047f2, label %block_404713

block_404713:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 404713	 Bytes: 7
  %loadMem_404713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404713 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404713)
  store %struct.Memory* %call_404713, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 40471a	 Bytes: 5
  %loadMem_40471a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40471a = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40471a)
  store %struct.Memory* %call_40471a, %struct.Memory** %MEMORY

  ; Code: subl -0x8(%rbp), %ecx	 RIP: 40471f	 Bytes: 3
  %loadMem_40471f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40471f = call %struct.Memory* @routine_subl_MINUS0x8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40471f)
  store %struct.Memory* %call_40471f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 404722	 Bytes: 3
  %loadMem_404722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404722 = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404722)
  store %struct.Memory* %call_404722, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404725	 Bytes: 4
  %loadMem_404725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404725 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404725)
  store %struct.Memory* %call_404725, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404729	 Bytes: 4
  %loadMem_404729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404729 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404729)
  store %struct.Memory* %call_404729, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40472d	 Bytes: 3
  %loadMem_40472d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40472d = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40472d)
  store %struct.Memory* %call_40472d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404730	 Bytes: 3
  %loadMem_404730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404730 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404730)
  store %struct.Memory* %call_404730, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 404733	 Bytes: 4
  %loadMem_404733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404733 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404733)
  store %struct.Memory* %call_404733, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404737	 Bytes: 4
  %loadMem_404737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404737 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404737)
  store %struct.Memory* %call_404737, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40473b	 Bytes: 3
  %loadMem_40473b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40473b = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40473b)
  store %struct.Memory* %call_40473b, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40473e	 Bytes: 4
  %loadMem_40473e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40473e = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40473e)
  store %struct.Memory* %call_40473e, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404742	 Bytes: 4
  %loadMem_404742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404742 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404742)
  store %struct.Memory* %call_404742, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404746	 Bytes: 3
  %loadMem_404746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404746 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404746)
  store %struct.Memory* %call_404746, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 404749	 Bytes: 4
  %loadMem_404749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404749 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404749)
  store %struct.Memory* %call_404749, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 40474d	 Bytes: 3
  %loadMem_40474d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40474d = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40474d)
  store %struct.Memory* %call_40474d, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 404750	 Bytes: 4
  %loadMem_404750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404750 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404750)
  store %struct.Memory* %call_404750, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404754	 Bytes: 4
  %loadMem_404754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404754 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404754)
  store %struct.Memory* %call_404754, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404758	 Bytes: 3
  %loadMem_404758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404758 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404758)
  store %struct.Memory* %call_404758, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40475b	 Bytes: 3
  %loadMem_40475b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40475b = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40475b)
  store %struct.Memory* %call_40475b, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40475e	 Bytes: 4
  %loadMem_40475e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40475e = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40475e)
  store %struct.Memory* %call_40475e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404762	 Bytes: 4
  %loadMem_404762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404762 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404762)
  store %struct.Memory* %call_404762, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404766	 Bytes: 3
  %loadMem_404766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404766 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404766)
  store %struct.Memory* %call_404766, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404769	 Bytes: 4
  %loadMem_404769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404769 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404769)
  store %struct.Memory* %call_404769, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 40476d	 Bytes: 4
  %loadMem_40476d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40476d = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40476d)
  store %struct.Memory* %call_40476d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404771	 Bytes: 3
  %loadMem_404771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404771 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404771)
  store %struct.Memory* %call_404771, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 404774	 Bytes: 4
  %loadMem_404774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404774 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404774)
  store %struct.Memory* %call_404774, %struct.Memory** %MEMORY

  ; Code: addl (%rsi,%rdx,4), %ecx	 RIP: 404778	 Bytes: 3
  %loadMem_404778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404778 = call %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404778)
  store %struct.Memory* %call_404778, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 40477b	 Bytes: 4
  %loadMem_40477b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40477b = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40477b)
  store %struct.Memory* %call_40477b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x470(%rbp,%rdx,4)	 RIP: 40477f	 Bytes: 7
  %loadMem_40477f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40477f = call %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40477f)
  store %struct.Memory* %call_40477f, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404786	 Bytes: 4
  %loadMem_404786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404786 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404786)
  store %struct.Memory* %call_404786, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 40478a	 Bytes: 4
  %loadMem_40478a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40478a = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40478a)
  store %struct.Memory* %call_40478a, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40478e	 Bytes: 3
  %loadMem_40478e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40478e = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40478e)
  store %struct.Memory* %call_40478e, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404791	 Bytes: 3
  %loadMem_404791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404791 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404791)
  store %struct.Memory* %call_404791, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 404794	 Bytes: 4
  %loadMem_404794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404794 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404794)
  store %struct.Memory* %call_404794, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404798	 Bytes: 4
  %loadMem_404798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404798 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404798)
  store %struct.Memory* %call_404798, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40479c	 Bytes: 3
  %loadMem_40479c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40479c = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40479c)
  store %struct.Memory* %call_40479c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40479f	 Bytes: 4
  %loadMem_40479f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40479f = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40479f)
  store %struct.Memory* %call_40479f, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4047a3	 Bytes: 4
  %loadMem_4047a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047a3 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047a3)
  store %struct.Memory* %call_4047a3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4047a7	 Bytes: 3
  %loadMem_4047a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047a7 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047a7)
  store %struct.Memory* %call_4047a7, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 4047aa	 Bytes: 4
  %loadMem_4047aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047aa = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047aa)
  store %struct.Memory* %call_4047aa, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 4047ae	 Bytes: 3
  %loadMem_4047ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047ae = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047ae)
  store %struct.Memory* %call_4047ae, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 4047b1	 Bytes: 4
  %loadMem_4047b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047b1 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047b1)
  store %struct.Memory* %call_4047b1, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 4047b5	 Bytes: 4
  %loadMem_4047b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047b5 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047b5)
  store %struct.Memory* %call_4047b5, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4047b9	 Bytes: 3
  %loadMem_4047b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047b9 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047b9)
  store %struct.Memory* %call_4047b9, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 4047bc	 Bytes: 4
  %loadMem_4047bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047bc = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047bc)
  store %struct.Memory* %call_4047bc, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4047c0	 Bytes: 4
  %loadMem_4047c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047c0 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047c0)
  store %struct.Memory* %call_4047c0, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4047c4	 Bytes: 3
  %loadMem_4047c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047c4 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047c4)
  store %struct.Memory* %call_4047c4, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 4047c7	 Bytes: 4
  %loadMem_4047c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047c7 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047c7)
  store %struct.Memory* %call_4047c7, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4047cb	 Bytes: 4
  %loadMem_4047cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047cb = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047cb)
  store %struct.Memory* %call_4047cb, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4047cf	 Bytes: 3
  %loadMem_4047cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047cf = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047cf)
  store %struct.Memory* %call_4047cf, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 4047d2	 Bytes: 4
  %loadMem_4047d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047d2 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047d2)
  store %struct.Memory* %call_4047d2, %struct.Memory** %MEMORY

  ; Code: subl (%rax,%rdx,4), %ecx	 RIP: 4047d6	 Bytes: 3
  %loadMem_4047d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047d6 = call %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047d6)
  store %struct.Memory* %call_4047d6, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 4047d9	 Bytes: 4
  %loadMem_4047d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047d9 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047d9)
  store %struct.Memory* %call_4047d9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x470(%rbp,%rax,4)	 RIP: 4047dd	 Bytes: 7
  %loadMem_4047dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047dd = call %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047dd)
  store %struct.Memory* %call_4047dd, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 4047e4	 Bytes: 3
  %loadMem_4047e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047e4 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047e4)
  store %struct.Memory* %call_4047e4, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4047e7	 Bytes: 3
  %loadMem_4047e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047e7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047e7)
  store %struct.Memory* %call_4047e7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 4047ea	 Bytes: 3
  %loadMem_4047ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047ea = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047ea)
  store %struct.Memory* %call_4047ea, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404709	 RIP: 4047ed	 Bytes: 5
  %loadMem_4047ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047ed = call %struct.Memory* @routine_jmpq_.L_404709(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047ed, i64 -228, i64 5)
  store %struct.Memory* %call_4047ed, %struct.Memory** %MEMORY

  br label %block_.L_404709

  ; Code: .L_4047f2:	 RIP: 4047f2	 Bytes: 0
block_.L_4047f2:

  ; Code: leaq -0x880(%rbp), %rax	 RIP: 4047f2	 Bytes: 7
  %loadMem_4047f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047f2 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047f2)
  store %struct.Memory* %call_4047f2, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %ecx	 RIP: 4047f9	 Bytes: 6
  %loadMem_4047f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047f9 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047f9)
  store %struct.Memory* %call_4047f9, %struct.Memory** %MEMORY

  ; Code: addl -0x46c(%rbp), %ecx	 RIP: 4047ff	 Bytes: 6
  %loadMem_4047ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4047ff = call %struct.Memory* @routine_addl_MINUS0x46c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4047ff)
  store %struct.Memory* %call_4047ff, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 404805	 Bytes: 4
  %loadMem_404805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404805 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404805)
  store %struct.Memory* %call_404805, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404809	 Bytes: 4
  %loadMem_404809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404809 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404809)
  store %struct.Memory* %call_404809, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40480d	 Bytes: 3
  %loadMem_40480d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40480d = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40480d)
  store %struct.Memory* %call_40480d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404810	 Bytes: 3
  %loadMem_404810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404810 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404810)
  store %struct.Memory* %call_404810, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404813	 Bytes: 4
  %loadMem_404813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404813 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404813)
  store %struct.Memory* %call_404813, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404817	 Bytes: 4
  %loadMem_404817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404817 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404817)
  store %struct.Memory* %call_404817, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40481b	 Bytes: 3
  %loadMem_40481b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40481b = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40481b)
  store %struct.Memory* %call_40481b, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 40481e	 Bytes: 4
  %loadMem_40481e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40481e = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40481e)
  store %struct.Memory* %call_40481e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 404822	 Bytes: 3
  %loadMem_404822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404822 = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404822)
  store %struct.Memory* %call_404822, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %ecx	 RIP: 404825	 Bytes: 6
  %loadMem_404825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404825 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404825)
  store %struct.Memory* %call_404825, %struct.Memory** %MEMORY

  ; Code: subl -0x46c(%rbp), %ecx	 RIP: 40482b	 Bytes: 6
  %loadMem_40482b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40482b = call %struct.Memory* @routine_subl_MINUS0x46c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40482b)
  store %struct.Memory* %call_40482b, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 404831	 Bytes: 3
  %loadMem_404831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404831 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404831)
  store %struct.Memory* %call_404831, %struct.Memory** %MEMORY

  ; Code: addq $0x200, %rdx	 RIP: 404834	 Bytes: 7
  %loadMem_404834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404834 = call %struct.Memory* @routine_addq__0x200___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404834)
  store %struct.Memory* %call_404834, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 40483b	 Bytes: 4
  %loadMem_40483b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40483b = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40483b)
  store %struct.Memory* %call_40483b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 40483f	 Bytes: 4
  %loadMem_40483f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40483f = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40483f)
  store %struct.Memory* %call_40483f, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 404843	 Bytes: 3
  %loadMem_404843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404843 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404843)
  store %struct.Memory* %call_404843, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 404846	 Bytes: 4
  %loadMem_404846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404846 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404846)
  store %struct.Memory* %call_404846, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 40484a	 Bytes: 4
  %loadMem_40484a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40484a = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40484a)
  store %struct.Memory* %call_40484a, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 40484e	 Bytes: 3
  %loadMem_40484e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40484e = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40484e)
  store %struct.Memory* %call_40484e, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rsi	 RIP: 404851	 Bytes: 4
  %loadMem_404851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404851 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404851)
  store %struct.Memory* %call_404851, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rdx,%rsi,4)	 RIP: 404855	 Bytes: 3
  %loadMem_404855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404855 = call %struct.Memory* @routine_movl__ecx____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404855)
  store %struct.Memory* %call_404855, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 404858	 Bytes: 6
  %loadMem_404858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404858 = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404858)
  store %struct.Memory* %call_404858, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %ecx	 RIP: 40485e	 Bytes: 3
  %loadMem_40485e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40485e = call %struct.Memory* @routine_shll__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40485e)
  store %struct.Memory* %call_40485e, %struct.Memory** %MEMORY

  ; Code: addl -0x468(%rbp), %ecx	 RIP: 404861	 Bytes: 6
  %loadMem_404861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404861 = call %struct.Memory* @routine_addl_MINUS0x468__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404861)
  store %struct.Memory* %call_404861, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 404867	 Bytes: 3
  %loadMem_404867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404867 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404867)
  store %struct.Memory* %call_404867, %struct.Memory** %MEMORY

  ; Code: addq $0x100, %rdx	 RIP: 40486a	 Bytes: 7
  %loadMem_40486a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40486a = call %struct.Memory* @routine_addq__0x100___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40486a)
  store %struct.Memory* %call_40486a, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 404871	 Bytes: 4
  %loadMem_404871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404871 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404871)
  store %struct.Memory* %call_404871, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 404875	 Bytes: 4
  %loadMem_404875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404875 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404875)
  store %struct.Memory* %call_404875, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 404879	 Bytes: 3
  %loadMem_404879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404879 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404879)
  store %struct.Memory* %call_404879, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 40487c	 Bytes: 4
  %loadMem_40487c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40487c = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40487c)
  store %struct.Memory* %call_40487c, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 404880	 Bytes: 4
  %loadMem_404880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404880 = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404880)
  store %struct.Memory* %call_404880, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 404884	 Bytes: 3
  %loadMem_404884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404884 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404884)
  store %struct.Memory* %call_404884, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rsi	 RIP: 404887	 Bytes: 4
  %loadMem_404887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404887 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404887)
  store %struct.Memory* %call_404887, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rdx,%rsi,4)	 RIP: 40488b	 Bytes: 3
  %loadMem_40488b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40488b = call %struct.Memory* @routine_movl__ecx____rdx__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40488b)
  store %struct.Memory* %call_40488b, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 40488e	 Bytes: 6
  %loadMem_40488e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40488e = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40488e)
  store %struct.Memory* %call_40488e, %struct.Memory** %MEMORY

  ; Code: movl -0x468(%rbp), %edi	 RIP: 404894	 Bytes: 6
  %loadMem_404894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404894 = call %struct.Memory* @routine_movl_MINUS0x468__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404894)
  store %struct.Memory* %call_404894, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edi	 RIP: 40489a	 Bytes: 3
  %loadMem_40489a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40489a = call %struct.Memory* @routine_shll__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40489a)
  store %struct.Memory* %call_40489a, %struct.Memory** %MEMORY

  ; Code: subl %edi, %ecx	 RIP: 40489d	 Bytes: 2
  %loadMem_40489d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40489d = call %struct.Memory* @routine_subl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40489d)
  store %struct.Memory* %call_40489d, %struct.Memory** %MEMORY

  ; Code: addq $0x300, %rax	 RIP: 40489f	 Bytes: 6
  %loadMem_40489f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40489f = call %struct.Memory* @routine_addq__0x300___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40489f)
  store %struct.Memory* %call_40489f, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 4048a5	 Bytes: 4
  %loadMem_4048a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048a5 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048a5)
  store %struct.Memory* %call_4048a5, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4048a9	 Bytes: 4
  %loadMem_4048a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048a9 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048a9)
  store %struct.Memory* %call_4048a9, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4048ad	 Bytes: 3
  %loadMem_4048ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048ad = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048ad)
  store %struct.Memory* %call_4048ad, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 4048b0	 Bytes: 4
  %loadMem_4048b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048b0 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048b0)
  store %struct.Memory* %call_4048b0, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4048b4	 Bytes: 4
  %loadMem_4048b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048b4 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048b4)
  store %struct.Memory* %call_4048b4, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4048b8	 Bytes: 3
  %loadMem_4048b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048b8 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048b8)
  store %struct.Memory* %call_4048b8, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 4048bb	 Bytes: 4
  %loadMem_4048bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048bb = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048bb)
  store %struct.Memory* %call_4048bb, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax,%rdx,4)	 RIP: 4048bf	 Bytes: 3
  %loadMem_4048bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048bf = call %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048bf)
  store %struct.Memory* %call_4048bf, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4048c2	 Bytes: 3
  %loadMem_4048c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048c2 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048c2)
  store %struct.Memory* %call_4048c2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4048c5	 Bytes: 3
  %loadMem_4048c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048c5 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048c5)
  store %struct.Memory* %call_4048c5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 4048c8	 Bytes: 3
  %loadMem_4048c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048c8 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048c8)
  store %struct.Memory* %call_4048c8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4046f8	 RIP: 4048cb	 Bytes: 5
  %loadMem_4048cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048cb = call %struct.Memory* @routine_jmpq_.L_4046f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048cb, i64 -467, i64 5)
  store %struct.Memory* %call_4048cb, %struct.Memory** %MEMORY

  br label %block_.L_4046f8

  ; Code: .L_4048d0:	 RIP: 4048d0	 Bytes: 0
block_.L_4048d0:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 4048d0	 Bytes: 7
  %loadMem_4048d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048d0 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048d0)
  store %struct.Memory* %call_4048d0, %struct.Memory** %MEMORY

  ; Code: .L_4048d7:	 RIP: 4048d7	 Bytes: 0
  br label %block_.L_4048d7
block_.L_4048d7:

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 4048d7	 Bytes: 4
  %loadMem_4048d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048d7 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048d7)
  store %struct.Memory* %call_4048d7, %struct.Memory** %MEMORY

  ; Code: jge .L_404a9e	 RIP: 4048db	 Bytes: 6
  %loadMem_4048db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048db = call %struct.Memory* @routine_jge_.L_404a9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048db, i8* %BRANCH_TAKEN, i64 451, i64 6, i64 6)
  store %struct.Memory* %call_4048db, %struct.Memory** %MEMORY

  %loadBr_4048db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4048db = icmp eq i8 %loadBr_4048db, 1
  br i1 %cmpBr_4048db, label %block_.L_404a9e, label %block_4048e1

block_4048e1:
  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 4048e1	 Bytes: 7
  %loadMem_4048e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048e1 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048e1)
  store %struct.Memory* %call_4048e1, %struct.Memory** %MEMORY

  ; Code: .L_4048e8:	 RIP: 4048e8	 Bytes: 0
  br label %block_.L_4048e8
block_.L_4048e8:

  ; Code: cmpl $0x2, -0xc(%rbp)	 RIP: 4048e8	 Bytes: 4
  %loadMem_4048e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048e8 = call %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048e8)
  store %struct.Memory* %call_4048e8, %struct.Memory** %MEMORY

  ; Code: jge .L_4049d1	 RIP: 4048ec	 Bytes: 6
  %loadMem_4048ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048ec = call %struct.Memory* @routine_jge_.L_4049d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048ec, i8* %BRANCH_TAKEN, i64 229, i64 6, i64 6)
  store %struct.Memory* %call_4048ec, %struct.Memory** %MEMORY

  %loadBr_4048ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4048ec = icmp eq i8 %loadBr_4048ec, 1
  br i1 %cmpBr_4048ec, label %block_.L_4049d1, label %block_4048f2

block_4048f2:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 4048f2	 Bytes: 7
  %loadMem_4048f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048f2 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048f2)
  store %struct.Memory* %call_4048f2, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 4048f9	 Bytes: 5
  %loadMem_4048f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048f9 = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048f9)
  store %struct.Memory* %call_4048f9, %struct.Memory** %MEMORY

  ; Code: subl -0xc(%rbp), %ecx	 RIP: 4048fe	 Bytes: 3
  %loadMem_4048fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4048fe = call %struct.Memory* @routine_subl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4048fe)
  store %struct.Memory* %call_4048fe, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1c(%rbp)	 RIP: 404901	 Bytes: 3
  %loadMem_404901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404901 = call %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404901)
  store %struct.Memory* %call_404901, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404904	 Bytes: 4
  %loadMem_404904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404904 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404904)
  store %struct.Memory* %call_404904, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404908	 Bytes: 4
  %loadMem_404908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404908 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404908)
  store %struct.Memory* %call_404908, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40490c	 Bytes: 3
  %loadMem_40490c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40490c = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40490c)
  store %struct.Memory* %call_40490c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40490f	 Bytes: 3
  %loadMem_40490f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40490f = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40490f)
  store %struct.Memory* %call_40490f, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 404912	 Bytes: 4
  %loadMem_404912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404912 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404912)
  store %struct.Memory* %call_404912, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404916	 Bytes: 4
  %loadMem_404916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404916 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404916)
  store %struct.Memory* %call_404916, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40491a	 Bytes: 3
  %loadMem_40491a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40491a = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40491a)
  store %struct.Memory* %call_40491a, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40491d	 Bytes: 4
  %loadMem_40491d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40491d = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40491d)
  store %struct.Memory* %call_40491d, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404921	 Bytes: 4
  %loadMem_404921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404921 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404921)
  store %struct.Memory* %call_404921, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404925	 Bytes: 3
  %loadMem_404925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404925 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404925)
  store %struct.Memory* %call_404925, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 404928	 Bytes: 4
  %loadMem_404928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404928 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404928)
  store %struct.Memory* %call_404928, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 40492c	 Bytes: 3
  %loadMem_40492c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40492c = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40492c)
  store %struct.Memory* %call_40492c, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 40492f	 Bytes: 4
  %loadMem_40492f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40492f = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40492f)
  store %struct.Memory* %call_40492f, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404933	 Bytes: 4
  %loadMem_404933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404933 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404933)
  store %struct.Memory* %call_404933, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404937	 Bytes: 3
  %loadMem_404937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404937 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404937)
  store %struct.Memory* %call_404937, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40493a	 Bytes: 3
  %loadMem_40493a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40493a = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40493a)
  store %struct.Memory* %call_40493a, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40493d	 Bytes: 4
  %loadMem_40493d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40493d = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40493d)
  store %struct.Memory* %call_40493d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404941	 Bytes: 4
  %loadMem_404941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404941 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404941)
  store %struct.Memory* %call_404941, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404945	 Bytes: 3
  %loadMem_404945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404945 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404945)
  store %struct.Memory* %call_404945, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 404948	 Bytes: 4
  %loadMem_404948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404948 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404948)
  store %struct.Memory* %call_404948, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 40494c	 Bytes: 4
  %loadMem_40494c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40494c = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40494c)
  store %struct.Memory* %call_40494c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404950	 Bytes: 3
  %loadMem_404950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404950 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404950)
  store %struct.Memory* %call_404950, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 404953	 Bytes: 4
  %loadMem_404953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404953 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404953)
  store %struct.Memory* %call_404953, %struct.Memory** %MEMORY

  ; Code: addl (%rsi,%rdx,4), %ecx	 RIP: 404957	 Bytes: 3
  %loadMem_404957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404957 = call %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404957)
  store %struct.Memory* %call_404957, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40495a	 Bytes: 4
  %loadMem_40495a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40495a = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40495a)
  store %struct.Memory* %call_40495a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x470(%rbp,%rdx,4)	 RIP: 40495e	 Bytes: 7
  %loadMem_40495e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40495e = call %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40495e)
  store %struct.Memory* %call_40495e, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404965	 Bytes: 4
  %loadMem_404965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404965 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404965)
  store %struct.Memory* %call_404965, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404969	 Bytes: 4
  %loadMem_404969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404969 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404969)
  store %struct.Memory* %call_404969, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 40496d	 Bytes: 3
  %loadMem_40496d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40496d = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40496d)
  store %struct.Memory* %call_40496d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404970	 Bytes: 3
  %loadMem_404970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404970 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404970)
  store %struct.Memory* %call_404970, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 404973	 Bytes: 4
  %loadMem_404973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404973 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404973)
  store %struct.Memory* %call_404973, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404977	 Bytes: 4
  %loadMem_404977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404977 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404977)
  store %struct.Memory* %call_404977, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 40497b	 Bytes: 3
  %loadMem_40497b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40497b = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40497b)
  store %struct.Memory* %call_40497b, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40497e	 Bytes: 4
  %loadMem_40497e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40497e = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40497e)
  store %struct.Memory* %call_40497e, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404982	 Bytes: 4
  %loadMem_404982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404982 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404982)
  store %struct.Memory* %call_404982, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404986	 Bytes: 3
  %loadMem_404986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404986 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404986)
  store %struct.Memory* %call_404986, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 404989	 Bytes: 4
  %loadMem_404989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404989 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404989)
  store %struct.Memory* %call_404989, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 40498d	 Bytes: 3
  %loadMem_40498d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40498d = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40498d)
  store %struct.Memory* %call_40498d, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404990	 Bytes: 4
  %loadMem_404990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404990 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404990)
  store %struct.Memory* %call_404990, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404994	 Bytes: 4
  %loadMem_404994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404994 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404994)
  store %struct.Memory* %call_404994, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 404998	 Bytes: 3
  %loadMem_404998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404998 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404998)
  store %struct.Memory* %call_404998, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 40499b	 Bytes: 4
  %loadMem_40499b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40499b = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40499b)
  store %struct.Memory* %call_40499b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 40499f	 Bytes: 4
  %loadMem_40499f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40499f = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40499f)
  store %struct.Memory* %call_40499f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4049a3	 Bytes: 3
  %loadMem_4049a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049a3 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049a3)
  store %struct.Memory* %call_4049a3, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 4049a6	 Bytes: 4
  %loadMem_4049a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049a6 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049a6)
  store %struct.Memory* %call_4049a6, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4049aa	 Bytes: 4
  %loadMem_4049aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049aa = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049aa)
  store %struct.Memory* %call_4049aa, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4049ae	 Bytes: 3
  %loadMem_4049ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049ae = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049ae)
  store %struct.Memory* %call_4049ae, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 4049b1	 Bytes: 4
  %loadMem_4049b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049b1 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049b1)
  store %struct.Memory* %call_4049b1, %struct.Memory** %MEMORY

  ; Code: subl (%rax,%rdx,4), %ecx	 RIP: 4049b5	 Bytes: 3
  %loadMem_4049b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049b5 = call %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049b5)
  store %struct.Memory* %call_4049b5, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rax	 RIP: 4049b8	 Bytes: 4
  %loadMem_4049b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049b8 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049b8)
  store %struct.Memory* %call_4049b8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x470(%rbp,%rax,4)	 RIP: 4049bc	 Bytes: 7
  %loadMem_4049bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049bc = call %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049bc)
  store %struct.Memory* %call_4049bc, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4049c3	 Bytes: 3
  %loadMem_4049c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049c3 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049c3)
  store %struct.Memory* %call_4049c3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4049c6	 Bytes: 3
  %loadMem_4049c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049c6 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049c6)
  store %struct.Memory* %call_4049c6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 4049c9	 Bytes: 3
  %loadMem_4049c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049c9 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049c9)
  store %struct.Memory* %call_4049c9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4048e8	 RIP: 4049cc	 Bytes: 5
  %loadMem_4049cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049cc = call %struct.Memory* @routine_jmpq_.L_4048e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049cc, i64 -228, i64 5)
  store %struct.Memory* %call_4049cc, %struct.Memory** %MEMORY

  br label %block_.L_4048e8

  ; Code: .L_4049d1:	 RIP: 4049d1	 Bytes: 0
block_.L_4049d1:

  ; Code: leaq -0x880(%rbp), %rax	 RIP: 4049d1	 Bytes: 7
  %loadMem_4049d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049d1 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049d1)
  store %struct.Memory* %call_4049d1, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %ecx	 RIP: 4049d8	 Bytes: 6
  %loadMem_4049d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049d8 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049d8)
  store %struct.Memory* %call_4049d8, %struct.Memory** %MEMORY

  ; Code: addl -0x46c(%rbp), %ecx	 RIP: 4049de	 Bytes: 6
  %loadMem_4049de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049de = call %struct.Memory* @routine_addl_MINUS0x46c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049de)
  store %struct.Memory* %call_4049de, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 4049e4	 Bytes: 4
  %loadMem_4049e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049e4 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049e4)
  store %struct.Memory* %call_4049e4, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 4049e8	 Bytes: 4
  %loadMem_4049e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049e8 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049e8)
  store %struct.Memory* %call_4049e8, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 4049ec	 Bytes: 3
  %loadMem_4049ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049ec = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049ec)
  store %struct.Memory* %call_4049ec, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4049ef	 Bytes: 3
  %loadMem_4049ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049ef = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049ef)
  store %struct.Memory* %call_4049ef, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 4049f2	 Bytes: 4
  %loadMem_4049f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049f2 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049f2)
  store %struct.Memory* %call_4049f2, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4049f6	 Bytes: 4
  %loadMem_4049f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049f6 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049f6)
  store %struct.Memory* %call_4049f6, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 4049fa	 Bytes: 3
  %loadMem_4049fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049fa = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049fa)
  store %struct.Memory* %call_4049fa, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 4049fd	 Bytes: 4
  %loadMem_4049fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4049fd = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4049fd)
  store %struct.Memory* %call_4049fd, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 404a01	 Bytes: 3
  %loadMem_404a01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a01 = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a01)
  store %struct.Memory* %call_404a01, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %ecx	 RIP: 404a04	 Bytes: 6
  %loadMem_404a04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a04 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a04)
  store %struct.Memory* %call_404a04, %struct.Memory** %MEMORY

  ; Code: subl -0x46c(%rbp), %ecx	 RIP: 404a0a	 Bytes: 6
  %loadMem_404a0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a0a = call %struct.Memory* @routine_subl_MINUS0x46c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a0a)
  store %struct.Memory* %call_404a0a, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404a10	 Bytes: 4
  %loadMem_404a10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a10 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a10)
  store %struct.Memory* %call_404a10, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404a14	 Bytes: 4
  %loadMem_404a14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a14 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a14)
  store %struct.Memory* %call_404a14, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404a18	 Bytes: 3
  %loadMem_404a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a18 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a18)
  store %struct.Memory* %call_404a18, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404a1b	 Bytes: 3
  %loadMem_404a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a1b = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a1b)
  store %struct.Memory* %call_404a1b, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 404a1e	 Bytes: 4
  %loadMem_404a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a1e = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a1e)
  store %struct.Memory* %call_404a1e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404a22	 Bytes: 4
  %loadMem_404a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a22 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a22)
  store %struct.Memory* %call_404a22, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404a26	 Bytes: 3
  %loadMem_404a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a26 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a26)
  store %struct.Memory* %call_404a26, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 404a29	 Bytes: 4
  %loadMem_404a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a29 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a29)
  store %struct.Memory* %call_404a29, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x20(%rsi,%rdx,4)	 RIP: 404a2d	 Bytes: 4
  %loadMem_404a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a2d = call %struct.Memory* @routine_movl__ecx__0x20__rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a2d)
  store %struct.Memory* %call_404a2d, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 404a31	 Bytes: 6
  %loadMem_404a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a31 = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a31)
  store %struct.Memory* %call_404a31, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %ecx	 RIP: 404a37	 Bytes: 3
  %loadMem_404a37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a37 = call %struct.Memory* @routine_shll__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a37)
  store %struct.Memory* %call_404a37, %struct.Memory** %MEMORY

  ; Code: addl -0x468(%rbp), %ecx	 RIP: 404a3a	 Bytes: 6
  %loadMem_404a3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a3a = call %struct.Memory* @routine_addl_MINUS0x468__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a3a)
  store %struct.Memory* %call_404a3a, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404a40	 Bytes: 4
  %loadMem_404a40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a40 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a40)
  store %struct.Memory* %call_404a40, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404a44	 Bytes: 4
  %loadMem_404a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a44 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a44)
  store %struct.Memory* %call_404a44, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404a48	 Bytes: 3
  %loadMem_404a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a48 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a48)
  store %struct.Memory* %call_404a48, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404a4b	 Bytes: 3
  %loadMem_404a4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a4b = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a4b)
  store %struct.Memory* %call_404a4b, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 404a4e	 Bytes: 4
  %loadMem_404a4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a4e = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a4e)
  store %struct.Memory* %call_404a4e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404a52	 Bytes: 4
  %loadMem_404a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a52 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a52)
  store %struct.Memory* %call_404a52, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404a56	 Bytes: 3
  %loadMem_404a56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a56 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a56)
  store %struct.Memory* %call_404a56, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 404a59	 Bytes: 4
  %loadMem_404a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a59 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a59)
  store %struct.Memory* %call_404a59, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x10(%rsi,%rdx,4)	 RIP: 404a5d	 Bytes: 4
  %loadMem_404a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a5d = call %struct.Memory* @routine_movl__ecx__0x10__rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a5d)
  store %struct.Memory* %call_404a5d, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 404a61	 Bytes: 6
  %loadMem_404a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a61 = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a61)
  store %struct.Memory* %call_404a61, %struct.Memory** %MEMORY

  ; Code: movl -0x468(%rbp), %edi	 RIP: 404a67	 Bytes: 6
  %loadMem_404a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a67 = call %struct.Memory* @routine_movl_MINUS0x468__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a67)
  store %struct.Memory* %call_404a67, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edi	 RIP: 404a6d	 Bytes: 3
  %loadMem_404a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a6d = call %struct.Memory* @routine_shll__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a6d)
  store %struct.Memory* %call_404a6d, %struct.Memory** %MEMORY

  ; Code: subl %edi, %ecx	 RIP: 404a70	 Bytes: 2
  %loadMem_404a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a70 = call %struct.Memory* @routine_subl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a70)
  store %struct.Memory* %call_404a70, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404a72	 Bytes: 4
  %loadMem_404a72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a72 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a72)
  store %struct.Memory* %call_404a72, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 404a76	 Bytes: 4
  %loadMem_404a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a76 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a76)
  store %struct.Memory* %call_404a76, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 404a7a	 Bytes: 3
  %loadMem_404a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a7a = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a7a)
  store %struct.Memory* %call_404a7a, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 404a7d	 Bytes: 4
  %loadMem_404a7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a7d = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a7d)
  store %struct.Memory* %call_404a7d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404a81	 Bytes: 4
  %loadMem_404a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a81 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a81)
  store %struct.Memory* %call_404a81, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 404a85	 Bytes: 3
  %loadMem_404a85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a85 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a85)
  store %struct.Memory* %call_404a85, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 404a88	 Bytes: 4
  %loadMem_404a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a88 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a88)
  store %struct.Memory* %call_404a88, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x30(%rax,%rdx,4)	 RIP: 404a8c	 Bytes: 4
  %loadMem_404a8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a8c = call %struct.Memory* @routine_movl__ecx__0x30__rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a8c)
  store %struct.Memory* %call_404a8c, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 404a90	 Bytes: 3
  %loadMem_404a90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a90 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a90)
  store %struct.Memory* %call_404a90, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404a93	 Bytes: 3
  %loadMem_404a93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a93 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a93)
  store %struct.Memory* %call_404a93, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 404a96	 Bytes: 3
  %loadMem_404a96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a96 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a96)
  store %struct.Memory* %call_404a96, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4048d7	 RIP: 404a99	 Bytes: 5
  %loadMem_404a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a99 = call %struct.Memory* @routine_jmpq_.L_4048d7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a99, i64 -450, i64 5)
  store %struct.Memory* %call_404a99, %struct.Memory** %MEMORY

  br label %block_.L_4048d7

  ; Code: .L_404a9e:	 RIP: 404a9e	 Bytes: 0
block_.L_404a9e:

  ; Code: jmpq .L_404aa3	 RIP: 404a9e	 Bytes: 5
  %loadMem_404a9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404a9e = call %struct.Memory* @routine_jmpq_.L_404aa3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404a9e, i64 5, i64 5)
  store %struct.Memory* %call_404a9e, %struct.Memory** %MEMORY

  br label %block_.L_404aa3

  ; Code: .L_404aa3:	 RIP: 404aa3	 Bytes: 0
block_.L_404aa3:

  ; Code: movl -0x10(%rbp), %eax	 RIP: 404aa3	 Bytes: 3
  %loadMem_404aa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aa3 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aa3)
  store %struct.Memory* %call_404aa3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404aa6	 Bytes: 3
  %loadMem_404aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aa6 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aa6)
  store %struct.Memory* %call_404aa6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 404aa9	 Bytes: 3
  %loadMem_404aa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aa9 = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aa9)
  store %struct.Memory* %call_404aa9, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4046e7	 RIP: 404aac	 Bytes: 5
  %loadMem_404aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aac = call %struct.Memory* @routine_jmpq_.L_4046e7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aac, i64 -965, i64 5)
  store %struct.Memory* %call_404aac, %struct.Memory** %MEMORY

  br label %block_.L_4046e7

  ; Code: .L_404ab1:	 RIP: 404ab1	 Bytes: 0
block_.L_404ab1:

  ; Code: jmpq .L_404ab6	 RIP: 404ab1	 Bytes: 5
  %loadMem_404ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ab1 = call %struct.Memory* @routine_jmpq_.L_404ab6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ab1, i64 5, i64 5)
  store %struct.Memory* %call_404ab1, %struct.Memory** %MEMORY

  br label %block_.L_404ab6

  ; Code: .L_404ab6:	 RIP: 404ab6	 Bytes: 0
block_.L_404ab6:

  ; Code: movl -0x14(%rbp), %eax	 RIP: 404ab6	 Bytes: 3
  %loadMem_404ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ab6 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ab6)
  store %struct.Memory* %call_404ab6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404ab9	 Bytes: 3
  %loadMem_404ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ab9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ab9)
  store %struct.Memory* %call_404ab9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 404abc	 Bytes: 3
  %loadMem_404abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404abc = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404abc)
  store %struct.Memory* %call_404abc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4046a7	 RIP: 404abf	 Bytes: 5
  %loadMem_404abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404abf = call %struct.Memory* @routine_jmpq_.L_4046a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404abf, i64 -1048, i64 5)
  store %struct.Memory* %call_404abf, %struct.Memory** %MEMORY

  br label %block_.L_4046a7

  ; Code: .L_404ac4:	 RIP: 404ac4	 Bytes: 0
block_.L_404ac4:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 404ac4	 Bytes: 7
  %loadMem_404ac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ac4 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ac4)
  store %struct.Memory* %call_404ac4, %struct.Memory** %MEMORY

  ; Code: .L_404acb:	 RIP: 404acb	 Bytes: 0
  br label %block_.L_404acb
block_.L_404acb:

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 404acb	 Bytes: 4
  %loadMem_404acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404acb = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404acb)
  store %struct.Memory* %call_404acb, %struct.Memory** %MEMORY

  ; Code: jge .L_404b39	 RIP: 404acf	 Bytes: 6
  %loadMem_404acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404acf = call %struct.Memory* @routine_jge_.L_404b39(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404acf, i8* %BRANCH_TAKEN, i64 106, i64 6, i64 6)
  store %struct.Memory* %call_404acf, %struct.Memory** %MEMORY

  %loadBr_404acf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404acf = icmp eq i8 %loadBr_404acf, 1
  br i1 %cmpBr_404acf, label %block_.L_404b39, label %block_404ad5

block_404ad5:
  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 404ad5	 Bytes: 7
  %loadMem_404ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ad5 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ad5)
  store %struct.Memory* %call_404ad5, %struct.Memory** %MEMORY

  ; Code: .L_404adc:	 RIP: 404adc	 Bytes: 0
  br label %block_.L_404adc
block_.L_404adc:

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 404adc	 Bytes: 4
  %loadMem_404adc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404adc = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404adc)
  store %struct.Memory* %call_404adc, %struct.Memory** %MEMORY

  ; Code: jge .L_404b26	 RIP: 404ae0	 Bytes: 6
  %loadMem_404ae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ae0 = call %struct.Memory* @routine_jge_.L_404b26(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ae0, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_404ae0, %struct.Memory** %MEMORY

  %loadBr_404ae0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404ae0 = icmp eq i8 %loadBr_404ae0, 1
  br i1 %cmpBr_404ae0, label %block_.L_404b26, label %block_404ae6

block_404ae6:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 404ae6	 Bytes: 7
  %loadMem_404ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ae6 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ae6)
  store %struct.Memory* %call_404ae6, %struct.Memory** %MEMORY

  ; Code: leaq -0x880(%rbp), %rcx	 RIP: 404aed	 Bytes: 7
  %loadMem_404aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aed = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aed)
  store %struct.Memory* %call_404aed, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404af4	 Bytes: 4
  %loadMem_404af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404af4 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404af4)
  store %struct.Memory* %call_404af4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404af8	 Bytes: 4
  %loadMem_404af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404af8 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404af8)
  store %struct.Memory* %call_404af8, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 404afc	 Bytes: 3
  %loadMem_404afc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404afc = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404afc)
  store %struct.Memory* %call_404afc, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404aff	 Bytes: 4
  %loadMem_404aff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404aff = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404aff)
  store %struct.Memory* %call_404aff, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdx,4), %esi	 RIP: 404b03	 Bytes: 3
  %loadMem_404b03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b03 = call %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b03)
  store %struct.Memory* %call_404b03, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 404b06	 Bytes: 4
  %loadMem_404b06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b06 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b06)
  store %struct.Memory* %call_404b06, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 404b0a	 Bytes: 4
  %loadMem_404b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b0a = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b0a)
  store %struct.Memory* %call_404b0a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 404b0e	 Bytes: 3
  %loadMem_404b0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b0e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b0e)
  store %struct.Memory* %call_404b0e, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 404b11	 Bytes: 4
  %loadMem_404b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b11 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b11)
  store %struct.Memory* %call_404b11, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rcx,4)	 RIP: 404b15	 Bytes: 3
  %loadMem_404b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b15 = call %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b15)
  store %struct.Memory* %call_404b15, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 404b18	 Bytes: 3
  %loadMem_404b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b18 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b18)
  store %struct.Memory* %call_404b18, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404b1b	 Bytes: 3
  %loadMem_404b1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b1b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b1b)
  store %struct.Memory* %call_404b1b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 404b1e	 Bytes: 3
  %loadMem_404b1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b1e = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b1e)
  store %struct.Memory* %call_404b1e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404adc	 RIP: 404b21	 Bytes: 5
  %loadMem_404b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b21 = call %struct.Memory* @routine_jmpq_.L_404adc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b21, i64 -69, i64 5)
  store %struct.Memory* %call_404b21, %struct.Memory** %MEMORY

  br label %block_.L_404adc

  ; Code: .L_404b26:	 RIP: 404b26	 Bytes: 0
block_.L_404b26:

  ; Code: jmpq .L_404b2b	 RIP: 404b26	 Bytes: 5
  %loadMem_404b26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b26 = call %struct.Memory* @routine_jmpq_.L_404b2b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b26, i64 5, i64 5)
  store %struct.Memory* %call_404b26, %struct.Memory** %MEMORY

  br label %block_.L_404b2b

  ; Code: .L_404b2b:	 RIP: 404b2b	 Bytes: 0
block_.L_404b2b:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 404b2b	 Bytes: 3
  %loadMem_404b2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b2b = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b2b)
  store %struct.Memory* %call_404b2b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404b2e	 Bytes: 3
  %loadMem_404b2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b2e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b2e)
  store %struct.Memory* %call_404b2e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 404b31	 Bytes: 3
  %loadMem_404b31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b31 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b31)
  store %struct.Memory* %call_404b31, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404acb	 RIP: 404b34	 Bytes: 5
  %loadMem_404b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b34 = call %struct.Memory* @routine_jmpq_.L_404acb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b34, i64 -105, i64 5)
  store %struct.Memory* %call_404b34, %struct.Memory** %MEMORY

  br label %block_.L_404acb

  ; Code: .L_404b39:	 RIP: 404b39	 Bytes: 0
block_.L_404b39:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 404b39	 Bytes: 7
  %loadMem_404b39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b39 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b39)
  store %struct.Memory* %call_404b39, %struct.Memory** %MEMORY

  ; Code: .L_404b40:	 RIP: 404b40	 Bytes: 0
  br label %block_.L_404b40
block_.L_404b40:

  ; Code: xorl %eax, %eax	 RIP: 404b40	 Bytes: 2
  %loadMem_404b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b40 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b40)
  store %struct.Memory* %call_404b40, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 404b42	 Bytes: 2
  %loadMem_404b42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b42 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b42)
  store %struct.Memory* %call_404b42, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 404b44	 Bytes: 4
  %loadMem_404b44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b44 = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b44)
  store %struct.Memory* %call_404b44, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x8de(%rbp)	 RIP: 404b48	 Bytes: 6
  %loadMem_404b48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b48 = call %struct.Memory* @routine_movb__cl__MINUS0x8de__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b48)
  store %struct.Memory* %call_404b48, %struct.Memory** %MEMORY

  ; Code: jge .L_404b66	 RIP: 404b4e	 Bytes: 6
  %loadMem_404b4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b4e = call %struct.Memory* @routine_jge_.L_404b66(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b4e, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_404b4e, %struct.Memory** %MEMORY

  %loadBr_404b4e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404b4e = icmp eq i8 %loadBr_404b4e, 1
  br i1 %cmpBr_404b4e, label %block_.L_404b66, label %block_404b54

block_404b54:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 404b54	 Bytes: 7
  %loadMem_404b54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b54 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b54)
  store %struct.Memory* %call_404b54, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 404b5b	 Bytes: 3
  %loadMem_404b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b5b = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b5b)
  store %struct.Memory* %call_404b5b, %struct.Memory** %MEMORY

  ; Code: xorb $0xff, %al	 RIP: 404b5e	 Bytes: 2
  %loadMem_404b5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b5e = call %struct.Memory* @routine_xorb__0xff___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b5e)
  store %struct.Memory* %call_404b5e, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x8de(%rbp)	 RIP: 404b60	 Bytes: 6
  %loadMem_404b60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b60 = call %struct.Memory* @routine_movb__al__MINUS0x8de__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b60)
  store %struct.Memory* %call_404b60, %struct.Memory** %MEMORY

  ; Code: .L_404b66:	 RIP: 404b66	 Bytes: 0
  br label %block_.L_404b66
block_.L_404b66:

  ; Code: movb -0x8de(%rbp), %al	 RIP: 404b66	 Bytes: 6
  %loadMem_404b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b66 = call %struct.Memory* @routine_movb_MINUS0x8de__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b66)
  store %struct.Memory* %call_404b66, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 404b6c	 Bytes: 2
  %loadMem_404b6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b6c = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b6c)
  store %struct.Memory* %call_404b6c, %struct.Memory** %MEMORY

  ; Code: jne .L_404b79	 RIP: 404b6e	 Bytes: 6
  %loadMem_404b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b6e = call %struct.Memory* @routine_jne_.L_404b79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b6e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_404b6e, %struct.Memory** %MEMORY

  %loadBr_404b6e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404b6e = icmp eq i8 %loadBr_404b6e, 1
  br i1 %cmpBr_404b6e, label %block_.L_404b79, label %block_404b74

block_404b74:
  ; Code: jmpq .L_404c7b	 RIP: 404b74	 Bytes: 5
  %loadMem_404b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b74 = call %struct.Memory* @routine_jmpq_.L_404c7b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b74, i64 263, i64 5)
  store %struct.Memory* %call_404b74, %struct.Memory** %MEMORY

  br label %block_.L_404c7b

  ; Code: .L_404b79:	 RIP: 404b79	 Bytes: 0
block_.L_404b79:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 404b79	 Bytes: 7
  %loadMem_404b79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b79 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b79)
  store %struct.Memory* %call_404b79, %struct.Memory** %MEMORY

  ; Code: .L_404b80:	 RIP: 404b80	 Bytes: 0
  br label %block_.L_404b80
block_.L_404b80:

  ; Code: cmpl $0x2, -0x8(%rbp)	 RIP: 404b80	 Bytes: 4
  %loadMem_404b80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b80 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b80)
  store %struct.Memory* %call_404b80, %struct.Memory** %MEMORY

  ; Code: jge .L_404c11	 RIP: 404b84	 Bytes: 6
  %loadMem_404b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b84 = call %struct.Memory* @routine_jge_.L_404c11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b84, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_404b84, %struct.Memory** %MEMORY

  %loadBr_404b84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404b84 = icmp eq i8 %loadBr_404b84, 1
  br i1 %cmpBr_404b84, label %block_.L_404c11, label %block_404b8a

block_404b8a:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 404b8a	 Bytes: 7
  %loadMem_404b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b8a = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b8a)
  store %struct.Memory* %call_404b8a, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 404b91	 Bytes: 5
  %loadMem_404b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b91 = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b91)
  store %struct.Memory* %call_404b91, %struct.Memory** %MEMORY

  ; Code: subl -0x8(%rbp), %ecx	 RIP: 404b96	 Bytes: 3
  %loadMem_404b96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b96 = call %struct.Memory* @routine_subl_MINUS0x8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b96)
  store %struct.Memory* %call_404b96, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 404b99	 Bytes: 3
  %loadMem_404b99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b99 = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b99)
  store %struct.Memory* %call_404b99, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404b9c	 Bytes: 4
  %loadMem_404b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404b9c = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404b9c)
  store %struct.Memory* %call_404b9c, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404ba0	 Bytes: 4
  %loadMem_404ba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ba0 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ba0)
  store %struct.Memory* %call_404ba0, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404ba4	 Bytes: 3
  %loadMem_404ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ba4 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ba4)
  store %struct.Memory* %call_404ba4, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404ba7	 Bytes: 3
  %loadMem_404ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ba7 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ba7)
  store %struct.Memory* %call_404ba7, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404baa	 Bytes: 4
  %loadMem_404baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404baa = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404baa)
  store %struct.Memory* %call_404baa, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 404bae	 Bytes: 3
  %loadMem_404bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bae = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bae)
  store %struct.Memory* %call_404bae, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 404bb1	 Bytes: 4
  %loadMem_404bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bb1 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bb1)
  store %struct.Memory* %call_404bb1, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404bb5	 Bytes: 4
  %loadMem_404bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bb5 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bb5)
  store %struct.Memory* %call_404bb5, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404bb9	 Bytes: 3
  %loadMem_404bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bb9 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bb9)
  store %struct.Memory* %call_404bb9, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404bbc	 Bytes: 3
  %loadMem_404bbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bbc = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bbc)
  store %struct.Memory* %call_404bbc, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404bbf	 Bytes: 4
  %loadMem_404bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bbf = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bbf)
  store %struct.Memory* %call_404bbf, %struct.Memory** %MEMORY

  ; Code: addl (%rsi,%rdx,4), %ecx	 RIP: 404bc3	 Bytes: 3
  %loadMem_404bc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bc3 = call %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bc3)
  store %struct.Memory* %call_404bc3, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404bc6	 Bytes: 4
  %loadMem_404bc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bc6 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bc6)
  store %struct.Memory* %call_404bc6, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x470(%rbp,%rdx,4)	 RIP: 404bca	 Bytes: 7
  %loadMem_404bca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bca = call %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bca)
  store %struct.Memory* %call_404bca, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404bd1	 Bytes: 4
  %loadMem_404bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bd1 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bd1)
  store %struct.Memory* %call_404bd1, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404bd5	 Bytes: 4
  %loadMem_404bd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bd5 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bd5)
  store %struct.Memory* %call_404bd5, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404bd9	 Bytes: 3
  %loadMem_404bd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bd9 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bd9)
  store %struct.Memory* %call_404bd9, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404bdc	 Bytes: 3
  %loadMem_404bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bdc = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bdc)
  store %struct.Memory* %call_404bdc, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404bdf	 Bytes: 4
  %loadMem_404bdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bdf = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bdf)
  store %struct.Memory* %call_404bdf, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 404be3	 Bytes: 3
  %loadMem_404be3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404be3 = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404be3)
  store %struct.Memory* %call_404be3, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 404be6	 Bytes: 4
  %loadMem_404be6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404be6 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404be6)
  store %struct.Memory* %call_404be6, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404bea	 Bytes: 4
  %loadMem_404bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bea = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bea)
  store %struct.Memory* %call_404bea, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 404bee	 Bytes: 3
  %loadMem_404bee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bee = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bee)
  store %struct.Memory* %call_404bee, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404bf1	 Bytes: 4
  %loadMem_404bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bf1 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bf1)
  store %struct.Memory* %call_404bf1, %struct.Memory** %MEMORY

  ; Code: subl (%rax,%rdx,4), %ecx	 RIP: 404bf5	 Bytes: 3
  %loadMem_404bf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bf5 = call %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bf5)
  store %struct.Memory* %call_404bf5, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rax	 RIP: 404bf8	 Bytes: 4
  %loadMem_404bf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bf8 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bf8)
  store %struct.Memory* %call_404bf8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x470(%rbp,%rax,4)	 RIP: 404bfc	 Bytes: 7
  %loadMem_404bfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404bfc = call %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404bfc)
  store %struct.Memory* %call_404bfc, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 404c03	 Bytes: 3
  %loadMem_404c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c03 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c03)
  store %struct.Memory* %call_404c03, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404c06	 Bytes: 3
  %loadMem_404c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c06 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c06)
  store %struct.Memory* %call_404c06, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 404c09	 Bytes: 3
  %loadMem_404c09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c09 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c09)
  store %struct.Memory* %call_404c09, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404b80	 RIP: 404c0c	 Bytes: 5
  %loadMem_404c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c0c = call %struct.Memory* @routine_jmpq_.L_404b80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c0c, i64 -140, i64 5)
  store %struct.Memory* %call_404c0c, %struct.Memory** %MEMORY

  br label %block_.L_404b80

  ; Code: .L_404c11:	 RIP: 404c11	 Bytes: 0
block_.L_404c11:

  ; Code: movl -0x470(%rbp), %eax	 RIP: 404c11	 Bytes: 6
  %loadMem_404c11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c11 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c11)
  store %struct.Memory* %call_404c11, %struct.Memory** %MEMORY

  ; Code: addl -0x46c(%rbp), %eax	 RIP: 404c17	 Bytes: 6
  %loadMem_404c17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c17 = call %struct.Memory* @routine_addl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c17)
  store %struct.Memory* %call_404c17, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 404c1d	 Bytes: 4
  %loadMem_404c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c1d = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c1d)
  store %struct.Memory* %call_404c1d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x460(%rbp,%rcx,4)	 RIP: 404c21	 Bytes: 7
  %loadMem_404c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c21 = call %struct.Memory* @routine_movl__eax__MINUS0x460__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c21)
  store %struct.Memory* %call_404c21, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %eax	 RIP: 404c28	 Bytes: 6
  %loadMem_404c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c28 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c28)
  store %struct.Memory* %call_404c28, %struct.Memory** %MEMORY

  ; Code: subl -0x46c(%rbp), %eax	 RIP: 404c2e	 Bytes: 6
  %loadMem_404c2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c2e = call %struct.Memory* @routine_subl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c2e)
  store %struct.Memory* %call_404c2e, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 404c34	 Bytes: 4
  %loadMem_404c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c34 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c34)
  store %struct.Memory* %call_404c34, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x440(%rbp,%rcx,4)	 RIP: 404c38	 Bytes: 7
  %loadMem_404c38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c38 = call %struct.Memory* @routine_movl__eax__MINUS0x440__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c38)
  store %struct.Memory* %call_404c38, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %eax	 RIP: 404c3f	 Bytes: 6
  %loadMem_404c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c3f = call %struct.Memory* @routine_movl_MINUS0x464__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c3f)
  store %struct.Memory* %call_404c3f, %struct.Memory** %MEMORY

  ; Code: addl -0x468(%rbp), %eax	 RIP: 404c45	 Bytes: 6
  %loadMem_404c45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c45 = call %struct.Memory* @routine_addl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c45)
  store %struct.Memory* %call_404c45, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 404c4b	 Bytes: 4
  %loadMem_404c4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c4b = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c4b)
  store %struct.Memory* %call_404c4b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x450(%rbp,%rcx,4)	 RIP: 404c4f	 Bytes: 7
  %loadMem_404c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c4f = call %struct.Memory* @routine_movl__eax__MINUS0x450__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c4f)
  store %struct.Memory* %call_404c4f, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %eax	 RIP: 404c56	 Bytes: 6
  %loadMem_404c56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c56 = call %struct.Memory* @routine_movl_MINUS0x464__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c56)
  store %struct.Memory* %call_404c56, %struct.Memory** %MEMORY

  ; Code: subl -0x468(%rbp), %eax	 RIP: 404c5c	 Bytes: 6
  %loadMem_404c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c5c = call %struct.Memory* @routine_subl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c5c)
  store %struct.Memory* %call_404c5c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 404c62	 Bytes: 4
  %loadMem_404c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c62 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c62)
  store %struct.Memory* %call_404c62, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x430(%rbp,%rcx,4)	 RIP: 404c66	 Bytes: 7
  %loadMem_404c66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c66 = call %struct.Memory* @routine_movl__eax__MINUS0x430__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c66)
  store %struct.Memory* %call_404c66, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 404c6d	 Bytes: 3
  %loadMem_404c6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c6d = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c6d)
  store %struct.Memory* %call_404c6d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404c70	 Bytes: 3
  %loadMem_404c70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c70 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c70)
  store %struct.Memory* %call_404c70, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 404c73	 Bytes: 3
  %loadMem_404c73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c73 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c73)
  store %struct.Memory* %call_404c73, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404b40	 RIP: 404c76	 Bytes: 5
  %loadMem_404c76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c76 = call %struct.Memory* @routine_jmpq_.L_404b40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c76, i64 -310, i64 5)
  store %struct.Memory* %call_404c76, %struct.Memory** %MEMORY

  br label %block_.L_404b40

  ; Code: .L_404c7b:	 RIP: 404c7b	 Bytes: 0
block_.L_404c7b:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 404c7b	 Bytes: 7
  %loadMem_404c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c7b = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c7b)
  store %struct.Memory* %call_404c7b, %struct.Memory** %MEMORY

  ; Code: .L_404c82:	 RIP: 404c82	 Bytes: 0
  br label %block_.L_404c82
block_.L_404c82:

  ; Code: xorl %eax, %eax	 RIP: 404c82	 Bytes: 2
  %loadMem_404c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c82 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c82)
  store %struct.Memory* %call_404c82, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 404c84	 Bytes: 2
  %loadMem_404c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c84 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c84)
  store %struct.Memory* %call_404c84, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 404c86	 Bytes: 4
  %loadMem_404c86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c86 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c86)
  store %struct.Memory* %call_404c86, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x8df(%rbp)	 RIP: 404c8a	 Bytes: 6
  %loadMem_404c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c8a = call %struct.Memory* @routine_movb__cl__MINUS0x8df__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c8a)
  store %struct.Memory* %call_404c8a, %struct.Memory** %MEMORY

  ; Code: jge .L_404ca8	 RIP: 404c90	 Bytes: 6
  %loadMem_404c90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c90 = call %struct.Memory* @routine_jge_.L_404ca8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c90, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_404c90, %struct.Memory** %MEMORY

  %loadBr_404c90 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404c90 = icmp eq i8 %loadBr_404c90, 1
  br i1 %cmpBr_404c90, label %block_.L_404ca8, label %block_404c96

block_404c96:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 404c96	 Bytes: 7
  %loadMem_404c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c96 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c96)
  store %struct.Memory* %call_404c96, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 404c9d	 Bytes: 3
  %loadMem_404c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404c9d = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404c9d)
  store %struct.Memory* %call_404c9d, %struct.Memory** %MEMORY

  ; Code: xorb $0xff, %al	 RIP: 404ca0	 Bytes: 2
  %loadMem_404ca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ca0 = call %struct.Memory* @routine_xorb__0xff___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ca0)
  store %struct.Memory* %call_404ca0, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x8df(%rbp)	 RIP: 404ca2	 Bytes: 6
  %loadMem_404ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ca2 = call %struct.Memory* @routine_movb__al__MINUS0x8df__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ca2)
  store %struct.Memory* %call_404ca2, %struct.Memory** %MEMORY

  ; Code: .L_404ca8:	 RIP: 404ca8	 Bytes: 0
  br label %block_.L_404ca8
block_.L_404ca8:

  ; Code: movb -0x8df(%rbp), %al	 RIP: 404ca8	 Bytes: 6
  %loadMem_404ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ca8 = call %struct.Memory* @routine_movb_MINUS0x8df__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ca8)
  store %struct.Memory* %call_404ca8, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 404cae	 Bytes: 2
  %loadMem_404cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cae = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cae)
  store %struct.Memory* %call_404cae, %struct.Memory** %MEMORY

  ; Code: jne .L_404cbb	 RIP: 404cb0	 Bytes: 6
  %loadMem_404cb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cb0 = call %struct.Memory* @routine_jne_.L_404cbb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cb0, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_404cb0, %struct.Memory** %MEMORY

  %loadBr_404cb0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404cb0 = icmp eq i8 %loadBr_404cb0, 1
  br i1 %cmpBr_404cb0, label %block_.L_404cbb, label %block_404cb6

block_404cb6:
  ; Code: jmpq .L_404de4	 RIP: 404cb6	 Bytes: 5
  %loadMem_404cb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cb6 = call %struct.Memory* @routine_jmpq_.L_404de4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cb6, i64 302, i64 5)
  store %struct.Memory* %call_404cb6, %struct.Memory** %MEMORY

  br label %block_.L_404de4

  ; Code: .L_404cbb:	 RIP: 404cbb	 Bytes: 0
block_.L_404cbb:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 404cbb	 Bytes: 7
  %loadMem_404cbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cbb = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cbb)
  store %struct.Memory* %call_404cbb, %struct.Memory** %MEMORY

  ; Code: .L_404cc2:	 RIP: 404cc2	 Bytes: 0
  br label %block_.L_404cc2
block_.L_404cc2:

  ; Code: cmpl $0x2, -0xc(%rbp)	 RIP: 404cc2	 Bytes: 4
  %loadMem_404cc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cc2 = call %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cc2)
  store %struct.Memory* %call_404cc2, %struct.Memory** %MEMORY

  ; Code: jge .L_404d53	 RIP: 404cc6	 Bytes: 6
  %loadMem_404cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cc6 = call %struct.Memory* @routine_jge_.L_404d53(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cc6, i8* %BRANCH_TAKEN, i64 141, i64 6, i64 6)
  store %struct.Memory* %call_404cc6, %struct.Memory** %MEMORY

  %loadBr_404cc6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404cc6 = icmp eq i8 %loadBr_404cc6, 1
  br i1 %cmpBr_404cc6, label %block_.L_404d53, label %block_404ccc

block_404ccc:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 404ccc	 Bytes: 7
  %loadMem_404ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ccc = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ccc)
  store %struct.Memory* %call_404ccc, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 404cd3	 Bytes: 5
  %loadMem_404cd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cd3 = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cd3)
  store %struct.Memory* %call_404cd3, %struct.Memory** %MEMORY

  ; Code: subl -0xc(%rbp), %ecx	 RIP: 404cd8	 Bytes: 3
  %loadMem_404cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cd8 = call %struct.Memory* @routine_subl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cd8)
  store %struct.Memory* %call_404cd8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1c(%rbp)	 RIP: 404cdb	 Bytes: 3
  %loadMem_404cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cdb = call %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cdb)
  store %struct.Memory* %call_404cdb, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404cde	 Bytes: 4
  %loadMem_404cde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cde = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cde)
  store %struct.Memory* %call_404cde, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404ce2	 Bytes: 4
  %loadMem_404ce2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ce2 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ce2)
  store %struct.Memory* %call_404ce2, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404ce6	 Bytes: 3
  %loadMem_404ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ce6 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ce6)
  store %struct.Memory* %call_404ce6, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404ce9	 Bytes: 3
  %loadMem_404ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ce9 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ce9)
  store %struct.Memory* %call_404ce9, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404cec	 Bytes: 4
  %loadMem_404cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cec = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cec)
  store %struct.Memory* %call_404cec, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 404cf0	 Bytes: 3
  %loadMem_404cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cf0 = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cf0)
  store %struct.Memory* %call_404cf0, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404cf3	 Bytes: 4
  %loadMem_404cf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cf3 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cf3)
  store %struct.Memory* %call_404cf3, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404cf7	 Bytes: 4
  %loadMem_404cf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cf7 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cf7)
  store %struct.Memory* %call_404cf7, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404cfb	 Bytes: 3
  %loadMem_404cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cfb = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cfb)
  store %struct.Memory* %call_404cfb, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404cfe	 Bytes: 3
  %loadMem_404cfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404cfe = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404cfe)
  store %struct.Memory* %call_404cfe, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 404d01	 Bytes: 4
  %loadMem_404d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d01 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d01)
  store %struct.Memory* %call_404d01, %struct.Memory** %MEMORY

  ; Code: addl (%rsi,%rdx,4), %ecx	 RIP: 404d05	 Bytes: 3
  %loadMem_404d05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d05 = call %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d05)
  store %struct.Memory* %call_404d05, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404d08	 Bytes: 4
  %loadMem_404d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d08 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d08)
  store %struct.Memory* %call_404d08, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x470(%rbp,%rdx,4)	 RIP: 404d0c	 Bytes: 7
  %loadMem_404d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d0c = call %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d0c)
  store %struct.Memory* %call_404d0c, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404d13	 Bytes: 4
  %loadMem_404d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d13 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d13)
  store %struct.Memory* %call_404d13, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404d17	 Bytes: 4
  %loadMem_404d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d17 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d17)
  store %struct.Memory* %call_404d17, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404d1b	 Bytes: 3
  %loadMem_404d1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d1b = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d1b)
  store %struct.Memory* %call_404d1b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404d1e	 Bytes: 3
  %loadMem_404d1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d1e = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d1e)
  store %struct.Memory* %call_404d1e, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 404d21	 Bytes: 4
  %loadMem_404d21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d21 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d21)
  store %struct.Memory* %call_404d21, %struct.Memory** %MEMORY

  ; Code: movl (%rsi,%rdx,4), %ecx	 RIP: 404d25	 Bytes: 3
  %loadMem_404d25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d25 = call %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d25)
  store %struct.Memory* %call_404d25, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404d28	 Bytes: 4
  %loadMem_404d28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d28 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d28)
  store %struct.Memory* %call_404d28, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404d2c	 Bytes: 4
  %loadMem_404d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d2c = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d2c)
  store %struct.Memory* %call_404d2c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 404d30	 Bytes: 3
  %loadMem_404d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d30 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d30)
  store %struct.Memory* %call_404d30, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 404d33	 Bytes: 4
  %loadMem_404d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d33 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d33)
  store %struct.Memory* %call_404d33, %struct.Memory** %MEMORY

  ; Code: subl (%rax,%rdx,4), %ecx	 RIP: 404d37	 Bytes: 3
  %loadMem_404d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d37 = call %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d37)
  store %struct.Memory* %call_404d37, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rax	 RIP: 404d3a	 Bytes: 4
  %loadMem_404d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d3a = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d3a)
  store %struct.Memory* %call_404d3a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x470(%rbp,%rax,4)	 RIP: 404d3e	 Bytes: 7
  %loadMem_404d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d3e = call %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d3e)
  store %struct.Memory* %call_404d3e, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 404d45	 Bytes: 3
  %loadMem_404d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d45 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d45)
  store %struct.Memory* %call_404d45, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404d48	 Bytes: 3
  %loadMem_404d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d48 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d48)
  store %struct.Memory* %call_404d48, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 404d4b	 Bytes: 3
  %loadMem_404d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d4b = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d4b)
  store %struct.Memory* %call_404d4b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404cc2	 RIP: 404d4e	 Bytes: 5
  %loadMem_404d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d4e = call %struct.Memory* @routine_jmpq_.L_404cc2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d4e, i64 -140, i64 5)
  store %struct.Memory* %call_404d4e, %struct.Memory** %MEMORY

  br label %block_.L_404cc2

  ; Code: .L_404d53:	 RIP: 404d53	 Bytes: 0
block_.L_404d53:

  ; Code: leaq -0x460(%rbp), %rax	 RIP: 404d53	 Bytes: 7
  %loadMem_404d53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d53 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d53)
  store %struct.Memory* %call_404d53, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %ecx	 RIP: 404d5a	 Bytes: 6
  %loadMem_404d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d5a = call %struct.Memory* @routine_movl_MINUS0x470__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d5a)
  store %struct.Memory* %call_404d5a, %struct.Memory** %MEMORY

  ; Code: addl -0x46c(%rbp), %ecx	 RIP: 404d60	 Bytes: 6
  %loadMem_404d60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d60 = call %struct.Memory* @routine_addl_MINUS0x46c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d60)
  store %struct.Memory* %call_404d60, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %ecx	 RIP: 404d66	 Bytes: 3
  %loadMem_404d66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d66 = call %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d66)
  store %struct.Memory* %call_404d66, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404d69	 Bytes: 4
  %loadMem_404d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d69 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d69)
  store %struct.Memory* %call_404d69, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404d6d	 Bytes: 4
  %loadMem_404d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d6d = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d6d)
  store %struct.Memory* %call_404d6d, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404d71	 Bytes: 3
  %loadMem_404d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d71 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d71)
  store %struct.Memory* %call_404d71, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404d74	 Bytes: 3
  %loadMem_404d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d74 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d74)
  store %struct.Memory* %call_404d74, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi)	 RIP: 404d77	 Bytes: 2
  %loadMem_404d77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d77 = call %struct.Memory* @routine_movl__ecx____rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d77)
  store %struct.Memory* %call_404d77, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %ecx	 RIP: 404d79	 Bytes: 6
  %loadMem_404d79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d79 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d79)
  store %struct.Memory* %call_404d79, %struct.Memory** %MEMORY

  ; Code: subl -0x46c(%rbp), %ecx	 RIP: 404d7f	 Bytes: 6
  %loadMem_404d7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d7f = call %struct.Memory* @routine_subl_MINUS0x46c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d7f)
  store %struct.Memory* %call_404d7f, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %ecx	 RIP: 404d85	 Bytes: 3
  %loadMem_404d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d85 = call %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d85)
  store %struct.Memory* %call_404d85, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404d88	 Bytes: 4
  %loadMem_404d88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d88 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d88)
  store %struct.Memory* %call_404d88, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404d8c	 Bytes: 4
  %loadMem_404d8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d8c = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d8c)
  store %struct.Memory* %call_404d8c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404d90	 Bytes: 3
  %loadMem_404d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d90 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d90)
  store %struct.Memory* %call_404d90, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404d93	 Bytes: 3
  %loadMem_404d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d93 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d93)
  store %struct.Memory* %call_404d93, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x8(%rsi)	 RIP: 404d96	 Bytes: 3
  %loadMem_404d96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d96 = call %struct.Memory* @routine_movl__ecx__0x8__rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d96)
  store %struct.Memory* %call_404d96, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 404d99	 Bytes: 6
  %loadMem_404d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d99 = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d99)
  store %struct.Memory* %call_404d99, %struct.Memory** %MEMORY

  ; Code: addl -0x468(%rbp), %ecx	 RIP: 404d9f	 Bytes: 6
  %loadMem_404d9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404d9f = call %struct.Memory* @routine_addl_MINUS0x468__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404d9f)
  store %struct.Memory* %call_404d9f, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %ecx	 RIP: 404da5	 Bytes: 3
  %loadMem_404da5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404da5 = call %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404da5)
  store %struct.Memory* %call_404da5, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404da8	 Bytes: 4
  %loadMem_404da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404da8 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404da8)
  store %struct.Memory* %call_404da8, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404dac	 Bytes: 4
  %loadMem_404dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dac = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dac)
  store %struct.Memory* %call_404dac, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 404db0	 Bytes: 3
  %loadMem_404db0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404db0 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404db0)
  store %struct.Memory* %call_404db0, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 404db3	 Bytes: 3
  %loadMem_404db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404db3 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404db3)
  store %struct.Memory* %call_404db3, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rsi)	 RIP: 404db6	 Bytes: 3
  %loadMem_404db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404db6 = call %struct.Memory* @routine_movl__ecx__0x4__rsi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404db6)
  store %struct.Memory* %call_404db6, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 404db9	 Bytes: 6
  %loadMem_404db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404db9 = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404db9)
  store %struct.Memory* %call_404db9, %struct.Memory** %MEMORY

  ; Code: subl -0x468(%rbp), %ecx	 RIP: 404dbf	 Bytes: 6
  %loadMem_404dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dbf = call %struct.Memory* @routine_subl_MINUS0x468__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dbf)
  store %struct.Memory* %call_404dbf, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %ecx	 RIP: 404dc5	 Bytes: 3
  %loadMem_404dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dc5 = call %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dc5)
  store %struct.Memory* %call_404dc5, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 404dc8	 Bytes: 4
  %loadMem_404dc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dc8 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dc8)
  store %struct.Memory* %call_404dc8, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 404dcc	 Bytes: 4
  %loadMem_404dcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dcc = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dcc)
  store %struct.Memory* %call_404dcc, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 404dd0	 Bytes: 3
  %loadMem_404dd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dd0 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dd0)
  store %struct.Memory* %call_404dd0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xc(%rax)	 RIP: 404dd3	 Bytes: 3
  %loadMem_404dd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dd3 = call %struct.Memory* @routine_movl__ecx__0xc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dd3)
  store %struct.Memory* %call_404dd3, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 404dd6	 Bytes: 3
  %loadMem_404dd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dd6 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dd6)
  store %struct.Memory* %call_404dd6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404dd9	 Bytes: 3
  %loadMem_404dd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dd9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dd9)
  store %struct.Memory* %call_404dd9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 404ddc	 Bytes: 3
  %loadMem_404ddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ddc = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ddc)
  store %struct.Memory* %call_404ddc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404c82	 RIP: 404ddf	 Bytes: 5
  %loadMem_404ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ddf = call %struct.Memory* @routine_jmpq_.L_404c82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ddf, i64 -349, i64 5)
  store %struct.Memory* %call_404ddf, %struct.Memory** %MEMORY

  br label %block_.L_404c82

  ; Code: .L_404de4:	 RIP: 404de4	 Bytes: 0
block_.L_404de4:

  ; Code: movl $0xffffffff, -0x884(%rbp)	 RIP: 404de4	 Bytes: 10
  %loadMem_404de4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404de4 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x884__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404de4)
  store %struct.Memory* %call_404de4, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x888(%rbp)	 RIP: 404dee	 Bytes: 10
  %loadMem_404dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404dee = call %struct.Memory* @routine_movl__0x0__MINUS0x888__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404dee)
  store %struct.Memory* %call_404dee, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x88c(%rbp)	 RIP: 404df8	 Bytes: 10
  %loadMem_404df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404df8 = call %struct.Memory* @routine_movl__0x0__MINUS0x88c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404df8)
  store %struct.Memory* %call_404df8, %struct.Memory** %MEMORY

  ; Code: .L_404e02:	 RIP: 404e02	 Bytes: 0
  br label %block_.L_404e02
block_.L_404e02:

  ; Code: cmpl $0x10, -0x88c(%rbp)	 RIP: 404e02	 Bytes: 7
  %loadMem_404e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e02 = call %struct.Memory* @routine_cmpl__0x10__MINUS0x88c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e02)
  store %struct.Memory* %call_404e02, %struct.Memory** %MEMORY

  ; Code: jge .L_40505f	 RIP: 404e09	 Bytes: 6
  %loadMem_404e09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e09 = call %struct.Memory* @routine_jge_.L_40505f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e09, i8* %BRANCH_TAKEN, i64 598, i64 6, i64 6)
  store %struct.Memory* %call_404e09, %struct.Memory** %MEMORY

  %loadBr_404e09 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404e09 = icmp eq i8 %loadBr_404e09, 1
  br i1 %cmpBr_404e09, label %block_.L_40505f, label %block_404e0f

block_404e0f:
  ; Code: movq 0x6cb900, %rax	 RIP: 404e0f	 Bytes: 8
  %loadMem_404e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e0f = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e0f)
  store %struct.Memory* %call_404e0f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11afc(%rax)	 RIP: 404e17	 Bytes: 7
  %loadMem_404e17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e17 = call %struct.Memory* @routine_cmpl__0x0__0x11afc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e17)
  store %struct.Memory* %call_404e17, %struct.Memory** %MEMORY

  ; Code: jne .L_404e47	 RIP: 404e1e	 Bytes: 6
  %loadMem_404e1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e1e = call %struct.Memory* @routine_jne_.L_404e47(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e1e, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_404e1e, %struct.Memory** %MEMORY

  %loadBr_404e1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404e1e = icmp eq i8 %loadBr_404e1e, 1
  br i1 %cmpBr_404e1e, label %block_.L_404e47, label %block_404e24

block_404e24:
  ; Code: cmpl $0x0, 0x6d4750	 RIP: 404e24	 Bytes: 8
  %loadMem_404e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e24 = call %struct.Memory* @routine_cmpl__0x0__0x6d4750(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e24)
  store %struct.Memory* %call_404e24, %struct.Memory** %MEMORY

  ; Code: je .L_404e70	 RIP: 404e2c	 Bytes: 6
  %loadMem_404e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e2c = call %struct.Memory* @routine_je_.L_404e70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e2c, i8* %BRANCH_TAKEN, i64 68, i64 6, i64 6)
  store %struct.Memory* %call_404e2c, %struct.Memory** %MEMORY

  %loadBr_404e2c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404e2c = icmp eq i8 %loadBr_404e2c, 1
  br i1 %cmpBr_404e2c, label %block_.L_404e70, label %block_404e32

block_404e32:
  ; Code: movq 0x6cb900, %rax	 RIP: 404e32	 Bytes: 8
  %loadMem_404e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e32 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e32)
  store %struct.Memory* %call_404e32, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11948(%rax)	 RIP: 404e3a	 Bytes: 7
  %loadMem_404e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e3a = call %struct.Memory* @routine_cmpl__0x0__0x11948__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e3a)
  store %struct.Memory* %call_404e3a, %struct.Memory** %MEMORY

  ; Code: je .L_404e70	 RIP: 404e41	 Bytes: 6
  %loadMem_404e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e41 = call %struct.Memory* @routine_je_.L_404e70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e41, i8* %BRANCH_TAKEN, i64 47, i64 6, i64 6)
  store %struct.Memory* %call_404e41, %struct.Memory** %MEMORY

  %loadBr_404e41 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404e41 = icmp eq i8 %loadBr_404e41, 1
  br i1 %cmpBr_404e41, label %block_.L_404e70, label %block_.L_404e47

  ; Code: .L_404e47:	 RIP: 404e47	 Bytes: 0
block_.L_404e47:

  ; Code: movslq -0x88c(%rbp), %rax	 RIP: 404e47	 Bytes: 7
  %loadMem_404e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e47 = call %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e47)
  store %struct.Memory* %call_404e47, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2380(,%rax,2), %ecx	 RIP: 404e4e	 Bytes: 8
  %loadMem_404e4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e4e = call %struct.Memory* @routine_movzbl_0x4b2380___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e4e)
  store %struct.Memory* %call_404e4e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x8(%rbp)	 RIP: 404e56	 Bytes: 3
  %loadMem_404e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e56 = call %struct.Memory* @routine_movl__ecx__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e56)
  store %struct.Memory* %call_404e56, %struct.Memory** %MEMORY

  ; Code: movslq -0x88c(%rbp), %rax	 RIP: 404e59	 Bytes: 7
  %loadMem_404e59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e59 = call %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e59)
  store %struct.Memory* %call_404e59, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2381(,%rax,2), %ecx	 RIP: 404e60	 Bytes: 8
  %loadMem_404e60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e60 = call %struct.Memory* @routine_movzbl_0x4b2381___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e60)
  store %struct.Memory* %call_404e60, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc(%rbp)	 RIP: 404e68	 Bytes: 3
  %loadMem_404e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e68 = call %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e68)
  store %struct.Memory* %call_404e68, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404e94	 RIP: 404e6b	 Bytes: 5
  %loadMem_404e6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e6b = call %struct.Memory* @routine_jmpq_.L_404e94(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e6b, i64 41, i64 5)
  store %struct.Memory* %call_404e6b, %struct.Memory** %MEMORY

  br label %block_.L_404e94

  ; Code: .L_404e70:	 RIP: 404e70	 Bytes: 0
block_.L_404e70:

  ; Code: movslq -0x88c(%rbp), %rax	 RIP: 404e70	 Bytes: 7
  %loadMem_404e70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e70 = call %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e70)
  store %struct.Memory* %call_404e70, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2360(,%rax,2), %ecx	 RIP: 404e77	 Bytes: 8
  %loadMem_404e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e77 = call %struct.Memory* @routine_movzbl_0x4b2360___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e77)
  store %struct.Memory* %call_404e77, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x8(%rbp)	 RIP: 404e7f	 Bytes: 3
  %loadMem_404e7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e7f = call %struct.Memory* @routine_movl__ecx__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e7f)
  store %struct.Memory* %call_404e7f, %struct.Memory** %MEMORY

  ; Code: movslq -0x88c(%rbp), %rax	 RIP: 404e82	 Bytes: 7
  %loadMem_404e82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e82 = call %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e82)
  store %struct.Memory* %call_404e82, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2361(,%rax,2), %ecx	 RIP: 404e89	 Bytes: 8
  %loadMem_404e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e89 = call %struct.Memory* @routine_movzbl_0x4b2361___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e89)
  store %struct.Memory* %call_404e89, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc(%rbp)	 RIP: 404e91	 Bytes: 3
  %loadMem_404e91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e91 = call %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e91)
  store %struct.Memory* %call_404e91, %struct.Memory** %MEMORY

  ; Code: .L_404e94:	 RIP: 404e94	 Bytes: 0
  br label %block_.L_404e94
block_.L_404e94:

  ; Code: movl -0x884(%rbp), %eax	 RIP: 404e94	 Bytes: 6
  %loadMem_404e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e94 = call %struct.Memory* @routine_movl_MINUS0x884__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e94)
  store %struct.Memory* %call_404e94, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404e9a	 Bytes: 3
  %loadMem_404e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e9a = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e9a)
  store %struct.Memory* %call_404e9a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x884(%rbp)	 RIP: 404e9d	 Bytes: 6
  %loadMem_404e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404e9d = call %struct.Memory* @routine_movl__eax__MINUS0x884__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404e9d)
  store %struct.Memory* %call_404e9d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 404ea3	 Bytes: 7
  %loadMem_404ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ea3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ea3)
  store %struct.Memory* %call_404ea3, %struct.Memory** %MEMORY

  ; Code: je .L_404ed9	 RIP: 404eaa	 Bytes: 6
  %loadMem_404eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eaa = call %struct.Memory* @routine_je_.L_404ed9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eaa, i8* %BRANCH_TAKEN, i64 47, i64 6, i64 6)
  store %struct.Memory* %call_404eaa, %struct.Memory** %MEMORY

  %loadBr_404eaa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404eaa = icmp eq i8 %loadBr_404eaa, 1
  br i1 %cmpBr_404eaa, label %block_.L_404ed9, label %block_404eb0

block_404eb0:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 404eb0	 Bytes: 7
  %loadMem_404eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eb0 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eb0)
  store %struct.Memory* %call_404eb0, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 404eb7	 Bytes: 4
  %loadMem_404eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eb7 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eb7)
  store %struct.Memory* %call_404eb7, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 404ebb	 Bytes: 4
  %loadMem_404ebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ebb = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ebb)
  store %struct.Memory* %call_404ebb, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 404ebf	 Bytes: 3
  %loadMem_404ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ebf = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ebf)
  store %struct.Memory* %call_404ebf, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 404ec2	 Bytes: 4
  %loadMem_404ec2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ec2 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ec2)
  store %struct.Memory* %call_404ec2, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 404ec6	 Bytes: 3
  %loadMem_404ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ec6 = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ec6)
  store %struct.Memory* %call_404ec6, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 404ec9	 Bytes: 5
  %loadMem1_404ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404ec9 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404ec9, i64 -16073, i64 5, i64 5)
  store %struct.Memory* %call1_404ec9, %struct.Memory** %MEMORY

  %loadMem2_404ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404ec9 = load i64, i64* %3
  %call2_404ec9 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_404ec9, %struct.Memory* %loadMem2_404ec9)
  store %struct.Memory* %call2_404ec9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x890(%rbp)	 RIP: 404ece	 Bytes: 6
  %loadMem_404ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ece = call %struct.Memory* @routine_movl__eax__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ece)
  store %struct.Memory* %call_404ece, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404f44	 RIP: 404ed4	 Bytes: 5
  %loadMem_404ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ed4 = call %struct.Memory* @routine_jmpq_.L_404f44(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ed4, i64 112, i64 5)
  store %struct.Memory* %call_404ed4, %struct.Memory** %MEMORY

  br label %block_.L_404f44

  ; Code: .L_404ed9:	 RIP: 404ed9	 Bytes: 0
block_.L_404ed9:

  ; Code: leaq -0x460(%rbp), %rax	 RIP: 404ed9	 Bytes: 7
  %loadMem_404ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ed9 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ed9)
  store %struct.Memory* %call_404ed9, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 404ee0	 Bytes: 4
  %loadMem_404ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ee0 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ee0)
  store %struct.Memory* %call_404ee0, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 404ee4	 Bytes: 4
  %loadMem_404ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ee4 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ee4)
  store %struct.Memory* %call_404ee4, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 404ee8	 Bytes: 3
  %loadMem_404ee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ee8 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ee8)
  store %struct.Memory* %call_404ee8, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 404eeb	 Bytes: 4
  %loadMem_404eeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eeb = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eeb)
  store %struct.Memory* %call_404eeb, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 404eef	 Bytes: 3
  %loadMem_404eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404eef = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404eef)
  store %struct.Memory* %call_404eef, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 404ef2	 Bytes: 5
  %loadMem1_404ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404ef2 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404ef2, i64 -16114, i64 5, i64 5)
  store %struct.Memory* %call1_404ef2, %struct.Memory** %MEMORY

  %loadMem2_404ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404ef2 = load i64, i64* %3
  %call2_404ef2 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_404ef2, %struct.Memory* %loadMem2_404ef2)
  store %struct.Memory* %call2_404ef2, %struct.Memory** %MEMORY

  ; Code: movq $0x710020, %rcx	 RIP: 404ef7	 Bytes: 10
  %loadMem_404ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ef7 = call %struct.Memory* @routine_movq__0x710020___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ef7)
  store %struct.Memory* %call_404ef7, %struct.Memory** %MEMORY

  ; Code: movq $0x70e8f0, %rdx	 RIP: 404f01	 Bytes: 10
  %loadMem_404f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f01 = call %struct.Memory* @routine_movq__0x70e8f0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f01)
  store %struct.Memory* %call_404f01, %struct.Memory** %MEMORY

  ; Code: movslq -0x898(%rbp), %rsi	 RIP: 404f0b	 Bytes: 7
  %loadMem_404f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f0b = call %struct.Memory* @routine_movslq_MINUS0x898__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f0b)
  store %struct.Memory* %call_404f0b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 404f12	 Bytes: 4
  %loadMem_404f12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f12 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f12)
  store %struct.Memory* %call_404f12, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 404f16	 Bytes: 3
  %loadMem_404f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f16 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f16)
  store %struct.Memory* %call_404f16, %struct.Memory** %MEMORY

  ; Code: imull (%rdx), %eax	 RIP: 404f19	 Bytes: 3
  %loadMem_404f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f19 = call %struct.Memory* @routine_imull___rdx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f19)
  store %struct.Memory* %call_404f19, %struct.Memory** %MEMORY

  ; Code: movslq -0x894(%rbp), %rdx	 RIP: 404f1c	 Bytes: 7
  %loadMem_404f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f1c = call %struct.Memory* @routine_movslq_MINUS0x894__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f1c)
  store %struct.Memory* %call_404f1c, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 404f23	 Bytes: 4
  %loadMem_404f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f23 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f23)
  store %struct.Memory* %call_404f23, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 404f27	 Bytes: 3
  %loadMem_404f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f27 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f27)
  store %struct.Memory* %call_404f27, %struct.Memory** %MEMORY

  ; Code: movl (%rcx), %edi	 RIP: 404f2a	 Bytes: 2
  %loadMem_404f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f2a = call %struct.Memory* @routine_movl___rcx____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f2a)
  store %struct.Memory* %call_404f2a, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edi	 RIP: 404f2c	 Bytes: 3
  %loadMem_404f2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f2c = call %struct.Memory* @routine_shll__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f2c)
  store %struct.Memory* %call_404f2c, %struct.Memory** %MEMORY

  ; Code: addl %edi, %eax	 RIP: 404f2f	 Bytes: 2
  %loadMem_404f2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f2f = call %struct.Memory* @routine_addl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f2f)
  store %struct.Memory* %call_404f2f, %struct.Memory** %MEMORY

  ; Code: movl -0x89c(%rbp), %edi	 RIP: 404f31	 Bytes: 6
  %loadMem_404f31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f31 = call %struct.Memory* @routine_movl_MINUS0x89c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f31)
  store %struct.Memory* %call_404f31, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edi	 RIP: 404f37	 Bytes: 3
  %loadMem_404f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f37 = call %struct.Memory* @routine_addl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f37)
  store %struct.Memory* %call_404f37, %struct.Memory** %MEMORY

  ; Code: movl %edi, %ecx	 RIP: 404f3a	 Bytes: 2
  %loadMem_404f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f3a = call %struct.Memory* @routine_movl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f3a)
  store %struct.Memory* %call_404f3a, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 404f3c	 Bytes: 2
  %loadMem_404f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f3c = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f3c)
  store %struct.Memory* %call_404f3c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x890(%rbp)	 RIP: 404f3e	 Bytes: 6
  %loadMem_404f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f3e = call %struct.Memory* @routine_movl__eax__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f3e)
  store %struct.Memory* %call_404f3e, %struct.Memory** %MEMORY

  ; Code: .L_404f44:	 RIP: 404f44	 Bytes: 0
  br label %block_.L_404f44
block_.L_404f44:

  ; Code: movq 0x6cb8f8, %rax	 RIP: 404f44	 Bytes: 8
  %loadMem_404f44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f44 = call %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f44)
  store %struct.Memory* %call_404f44, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x934(%rax)	 RIP: 404f4c	 Bytes: 7
  %loadMem_404f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f4c = call %struct.Memory* @routine_cmpl__0x0__0x934__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f4c)
  store %struct.Memory* %call_404f4c, %struct.Memory** %MEMORY

  ; Code: jne .L_404f8a	 RIP: 404f53	 Bytes: 6
  %loadMem_404f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f53 = call %struct.Memory* @routine_jne_.L_404f8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f53, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_404f53, %struct.Memory** %MEMORY

  %loadBr_404f53 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404f53 = icmp eq i8 %loadBr_404f53, 1
  br i1 %cmpBr_404f53, label %block_.L_404f8a, label %block_404f59

block_404f59:
  ; Code: movq 0x6cb900, %rax	 RIP: 404f59	 Bytes: 8
  %loadMem_404f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f59 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f59)
  store %struct.Memory* %call_404f59, %struct.Memory** %MEMORY

  ; Code: cmpl $0xa, 0x28(%rax)	 RIP: 404f61	 Bytes: 4
  %loadMem_404f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f61 = call %struct.Memory* @routine_cmpl__0xa__0x28__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f61)
  store %struct.Memory* %call_404f61, %struct.Memory** %MEMORY

  ; Code: jge .L_404f8a	 RIP: 404f65	 Bytes: 6
  %loadMem_404f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f65 = call %struct.Memory* @routine_jge_.L_404f8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f65, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_404f65, %struct.Memory** %MEMORY

  %loadBr_404f65 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404f65 = icmp eq i8 %loadBr_404f65, 1
  br i1 %cmpBr_404f65, label %block_.L_404f8a, label %block_404f6b

block_404f6b:
  ; Code: cmpl $0x80f, -0x890(%rbp)	 RIP: 404f6b	 Bytes: 10
  %loadMem_404f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f6b = call %struct.Memory* @routine_cmpl__0x80f__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f6b)
  store %struct.Memory* %call_404f6b, %struct.Memory** %MEMORY

  ; Code: jle .L_404f85	 RIP: 404f75	 Bytes: 6
  %loadMem_404f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f75 = call %struct.Memory* @routine_jle_.L_404f85(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f75, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_404f75, %struct.Memory** %MEMORY

  %loadBr_404f75 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404f75 = icmp eq i8 %loadBr_404f75, 1
  br i1 %cmpBr_404f75, label %block_.L_404f85, label %block_404f7b

block_404f7b:
  ; Code: movl $0x80f, -0x890(%rbp)	 RIP: 404f7b	 Bytes: 10
  %loadMem_404f7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f7b = call %struct.Memory* @routine_movl__0x80f__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f7b)
  store %struct.Memory* %call_404f7b, %struct.Memory** %MEMORY

  ; Code: .L_404f85:	 RIP: 404f85	 Bytes: 0
  br label %block_.L_404f85
block_.L_404f85:

  ; Code: jmpq .L_404f8a	 RIP: 404f85	 Bytes: 5
  %loadMem_404f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f85 = call %struct.Memory* @routine_jmpq_.L_404f8a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f85, i64 5, i64 5)
  store %struct.Memory* %call_404f85, %struct.Memory** %MEMORY

  br label %block_.L_404f8a

  ; Code: .L_404f8a:	 RIP: 404f8a	 Bytes: 0
block_.L_404f8a:

  ; Code: cmpl $0x0, -0x890(%rbp)	 RIP: 404f8a	 Bytes: 7
  %loadMem_404f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f8a = call %struct.Memory* @routine_cmpl__0x0__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f8a)
  store %struct.Memory* %call_404f8a, %struct.Memory** %MEMORY

  ; Code: je .L_404ffc	 RIP: 404f91	 Bytes: 6
  %loadMem_404f91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f91 = call %struct.Memory* @routine_je_.L_404ffc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f91, i8* %BRANCH_TAKEN, i64 107, i64 6, i64 6)
  store %struct.Memory* %call_404f91, %struct.Memory** %MEMORY

  %loadBr_404f91 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_404f91 = icmp eq i8 %loadBr_404f91, 1
  br i1 %cmpBr_404f91, label %block_.L_404ffc, label %block_404f97

block_404f97:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 404f97	 Bytes: 7
  %loadMem_404f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f97 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f97)
  store %struct.Memory* %call_404f97, %struct.Memory** %MEMORY

  ; Code: movl -0x890(%rbp), %edi	 RIP: 404f9e	 Bytes: 6
  %loadMem_404f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404f9e = call %struct.Memory* @routine_movl_MINUS0x890__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404f9e)
  store %struct.Memory* %call_404f9e, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 404fa4	 Bytes: 4
  %loadMem_404fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fa4 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fa4)
  store %struct.Memory* %call_404fa4, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 404fa8	 Bytes: 4
  %loadMem_404fa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fa8 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fa8)
  store %struct.Memory* %call_404fa8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 404fac	 Bytes: 3
  %loadMem_404fac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fac = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fac)
  store %struct.Memory* %call_404fac, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 404faf	 Bytes: 4
  %loadMem_404faf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404faf = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404faf)
  store %struct.Memory* %call_404faf, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %esi	 RIP: 404fb3	 Bytes: 3
  %loadMem_404fb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fb3 = call %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fb3)
  store %struct.Memory* %call_404fb3, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 404fb6	 Bytes: 5
  %loadMem1_404fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_404fb6 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_404fb6, i64 459162, i64 5, i64 5)
  store %struct.Memory* %call1_404fb6, %struct.Memory** %MEMORY

  %loadMem2_404fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_404fb6 = load i64, i64* %3
  %call2_404fb6 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_404fb6, %struct.Memory* %loadMem2_404fb6)
  store %struct.Memory* %call2_404fb6, %struct.Memory** %MEMORY

  ; Code: movq -0x8b8(%rbp), %rcx	 RIP: 404fbb	 Bytes: 7
  %loadMem_404fbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fbb = call %struct.Memory* @routine_movq_MINUS0x8b8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fbb)
  store %struct.Memory* %call_404fbb, %struct.Memory** %MEMORY

  ; Code: movslq -0x888(%rbp), %rdx	 RIP: 404fc2	 Bytes: 7
  %loadMem_404fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fc2 = call %struct.Memory* @routine_movslq_MINUS0x888__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fc2)
  store %struct.Memory* %call_404fc2, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 404fc9	 Bytes: 3
  %loadMem_404fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fc9 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fc9)
  store %struct.Memory* %call_404fc9, %struct.Memory** %MEMORY

  ; Code: movl -0x884(%rbp), %eax	 RIP: 404fcc	 Bytes: 6
  %loadMem_404fcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fcc = call %struct.Memory* @routine_movl_MINUS0x884__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fcc)
  store %struct.Memory* %call_404fcc, %struct.Memory** %MEMORY

  ; Code: movq -0x8c0(%rbp), %rcx	 RIP: 404fd2	 Bytes: 7
  %loadMem_404fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fd2 = call %struct.Memory* @routine_movq_MINUS0x8c0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fd2)
  store %struct.Memory* %call_404fd2, %struct.Memory** %MEMORY

  ; Code: movslq -0x888(%rbp), %rdx	 RIP: 404fd9	 Bytes: 7
  %loadMem_404fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fd9 = call %struct.Memory* @routine_movslq_MINUS0x888__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fd9)
  store %struct.Memory* %call_404fd9, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 404fe0	 Bytes: 3
  %loadMem_404fe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fe0 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fe0)
  store %struct.Memory* %call_404fe0, %struct.Memory** %MEMORY

  ; Code: movl -0x888(%rbp), %eax	 RIP: 404fe3	 Bytes: 6
  %loadMem_404fe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fe3 = call %struct.Memory* @routine_movl_MINUS0x888__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fe3)
  store %struct.Memory* %call_404fe3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 404fe9	 Bytes: 3
  %loadMem_404fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fe9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fe9)
  store %struct.Memory* %call_404fe9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x888(%rbp)	 RIP: 404fec	 Bytes: 6
  %loadMem_404fec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404fec = call %struct.Memory* @routine_movl__eax__MINUS0x888__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404fec)
  store %struct.Memory* %call_404fec, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x884(%rbp)	 RIP: 404ff2	 Bytes: 10
  %loadMem_404ff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ff2 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x884__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ff2)
  store %struct.Memory* %call_404ff2, %struct.Memory** %MEMORY

  ; Code: .L_404ffc:	 RIP: 404ffc	 Bytes: 0
  br label %block_.L_404ffc
block_.L_404ffc:

  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 404ffc	 Bytes: 7
  %loadMem_404ffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_404ffc = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_404ffc)
  store %struct.Memory* %call_404ffc, %struct.Memory** %MEMORY

  ; Code: jne .L_405046	 RIP: 405003	 Bytes: 6
  %loadMem_405003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405003 = call %struct.Memory* @routine_jne_.L_405046(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405003, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_405003, %struct.Memory** %MEMORY

  %loadBr_405003 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405003 = icmp eq i8 %loadBr_405003, 1
  br i1 %cmpBr_405003, label %block_.L_405046, label %block_405009

block_405009:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 405009	 Bytes: 7
  %loadMem_405009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405009 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405009)
  store %struct.Memory* %call_405009, %struct.Memory** %MEMORY

  ; Code: movl -0x890(%rbp), %edi	 RIP: 405010	 Bytes: 6
  %loadMem_405010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405010 = call %struct.Memory* @routine_movl_MINUS0x890__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405010)
  store %struct.Memory* %call_405010, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 405016	 Bytes: 4
  %loadMem_405016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405016 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405016)
  store %struct.Memory* %call_405016, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 40501a	 Bytes: 4
  %loadMem_40501a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40501a = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40501a)
  store %struct.Memory* %call_40501a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40501e	 Bytes: 3
  %loadMem_40501e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40501e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40501e)
  store %struct.Memory* %call_40501e, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 405021	 Bytes: 4
  %loadMem_405021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405021 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405021)
  store %struct.Memory* %call_405021, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %esi	 RIP: 405025	 Bytes: 3
  %loadMem_405025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405025 = call %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405025)
  store %struct.Memory* %call_405025, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 405028	 Bytes: 5
  %loadMem1_405028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405028 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405028, i64 459048, i64 5, i64 5)
  store %struct.Memory* %call1_405028, %struct.Memory** %MEMORY

  %loadMem2_405028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405028 = load i64, i64* %3
  %call2_405028 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_405028, %struct.Memory* %loadMem2_405028)
  store %struct.Memory* %call2_405028, %struct.Memory** %MEMORY

  ; Code: leaq -0x460(%rbp), %rcx	 RIP: 40502d	 Bytes: 7
  %loadMem_40502d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40502d = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40502d)
  store %struct.Memory* %call_40502d, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405034	 Bytes: 4
  %loadMem_405034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405034 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405034)
  store %struct.Memory* %call_405034, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 405038	 Bytes: 4
  %loadMem_405038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405038 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405038)
  store %struct.Memory* %call_405038, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40503c	 Bytes: 3
  %loadMem_40503c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40503c = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40503c)
  store %struct.Memory* %call_40503c, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40503f	 Bytes: 4
  %loadMem_40503f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40503f = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40503f)
  store %struct.Memory* %call_40503f, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 405043	 Bytes: 3
  %loadMem_405043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405043 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405043)
  store %struct.Memory* %call_405043, %struct.Memory** %MEMORY

  ; Code: .L_405046:	 RIP: 405046	 Bytes: 0
  br label %block_.L_405046
block_.L_405046:

  ; Code: jmpq .L_40504b	 RIP: 405046	 Bytes: 5
  %loadMem_405046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405046 = call %struct.Memory* @routine_jmpq_.L_40504b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405046, i64 5, i64 5)
  store %struct.Memory* %call_405046, %struct.Memory** %MEMORY

  br label %block_.L_40504b

  ; Code: .L_40504b:	 RIP: 40504b	 Bytes: 0
block_.L_40504b:

  ; Code: movl -0x88c(%rbp), %eax	 RIP: 40504b	 Bytes: 6
  %loadMem_40504b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40504b = call %struct.Memory* @routine_movl_MINUS0x88c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40504b)
  store %struct.Memory* %call_40504b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405051	 Bytes: 3
  %loadMem_405051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405051 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405051)
  store %struct.Memory* %call_405051, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x88c(%rbp)	 RIP: 405054	 Bytes: 6
  %loadMem_405054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405054 = call %struct.Memory* @routine_movl__eax__MINUS0x88c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405054)
  store %struct.Memory* %call_405054, %struct.Memory** %MEMORY

  ; Code: jmpq .L_404e02	 RIP: 40505a	 Bytes: 5
  %loadMem_40505a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40505a = call %struct.Memory* @routine_jmpq_.L_404e02(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40505a, i64 -600, i64 5)
  store %struct.Memory* %call_40505a, %struct.Memory** %MEMORY

  br label %block_.L_404e02

  ; Code: .L_40505f:	 RIP: 40505f	 Bytes: 0
block_.L_40505f:

  ; Code: movq -0x8b8(%rbp), %rax	 RIP: 40505f	 Bytes: 7
  %loadMem_40505f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40505f = call %struct.Memory* @routine_movq_MINUS0x8b8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40505f)
  store %struct.Memory* %call_40505f, %struct.Memory** %MEMORY

  ; Code: movslq -0x888(%rbp), %rcx	 RIP: 405066	 Bytes: 7
  %loadMem_405066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405066 = call %struct.Memory* @routine_movslq_MINUS0x888__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405066)
  store %struct.Memory* %call_405066, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax,%rcx,4)	 RIP: 40506d	 Bytes: 7
  %loadMem_40506d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40506d = call %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40506d)
  store %struct.Memory* %call_40506d, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 405074	 Bytes: 7
  %loadMem_405074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405074 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405074)
  store %struct.Memory* %call_405074, %struct.Memory** %MEMORY

  ; Code: .L_40507b:	 RIP: 40507b	 Bytes: 0
  br label %block_.L_40507b
block_.L_40507b:

  ; Code: xorl %eax, %eax	 RIP: 40507b	 Bytes: 2
  %loadMem_40507b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40507b = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40507b)
  store %struct.Memory* %call_40507b, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 40507d	 Bytes: 2
  %loadMem_40507d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40507d = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40507d)
  store %struct.Memory* %call_40507d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 40507f	 Bytes: 4
  %loadMem_40507f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40507f = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40507f)
  store %struct.Memory* %call_40507f, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x8e0(%rbp)	 RIP: 405083	 Bytes: 6
  %loadMem_405083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405083 = call %struct.Memory* @routine_movb__cl__MINUS0x8e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405083)
  store %struct.Memory* %call_405083, %struct.Memory** %MEMORY

  ; Code: jge .L_4050a1	 RIP: 405089	 Bytes: 6
  %loadMem_405089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405089 = call %struct.Memory* @routine_jge_.L_4050a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405089, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_405089, %struct.Memory** %MEMORY

  %loadBr_405089 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405089 = icmp eq i8 %loadBr_405089, 1
  br i1 %cmpBr_405089, label %block_.L_4050a1, label %block_40508f

block_40508f:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 40508f	 Bytes: 7
  %loadMem_40508f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40508f = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40508f)
  store %struct.Memory* %call_40508f, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 405096	 Bytes: 3
  %loadMem_405096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405096 = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405096)
  store %struct.Memory* %call_405096, %struct.Memory** %MEMORY

  ; Code: xorb $0xff, %al	 RIP: 405099	 Bytes: 2
  %loadMem_405099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405099 = call %struct.Memory* @routine_xorb__0xff___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405099)
  store %struct.Memory* %call_405099, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x8e0(%rbp)	 RIP: 40509b	 Bytes: 6
  %loadMem_40509b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40509b = call %struct.Memory* @routine_movb__al__MINUS0x8e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40509b)
  store %struct.Memory* %call_40509b, %struct.Memory** %MEMORY

  ; Code: .L_4050a1:	 RIP: 4050a1	 Bytes: 0
  br label %block_.L_4050a1
block_.L_4050a1:

  ; Code: movb -0x8e0(%rbp), %al	 RIP: 4050a1	 Bytes: 6
  %loadMem_4050a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050a1 = call %struct.Memory* @routine_movb_MINUS0x8e0__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050a1)
  store %struct.Memory* %call_4050a1, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 4050a7	 Bytes: 2
  %loadMem_4050a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050a7 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050a7)
  store %struct.Memory* %call_4050a7, %struct.Memory** %MEMORY

  ; Code: jne .L_4050b4	 RIP: 4050a9	 Bytes: 6
  %loadMem_4050a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050a9 = call %struct.Memory* @routine_jne_.L_4050b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050a9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4050a9, %struct.Memory** %MEMORY

  %loadBr_4050a9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4050a9 = icmp eq i8 %loadBr_4050a9, 1
  br i1 %cmpBr_4050a9, label %block_.L_4050b4, label %block_4050af

block_4050af:
  ; Code: jmpq .L_4051d6	 RIP: 4050af	 Bytes: 5
  %loadMem_4050af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050af = call %struct.Memory* @routine_jmpq_.L_4051d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050af, i64 295, i64 5)
  store %struct.Memory* %call_4050af, %struct.Memory** %MEMORY

  br label %block_.L_4051d6

  ; Code: .L_4050b4:	 RIP: 4050b4	 Bytes: 0
block_.L_4050b4:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 4050b4	 Bytes: 7
  %loadMem_4050b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050b4 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050b4)
  store %struct.Memory* %call_4050b4, %struct.Memory** %MEMORY

  ; Code: .L_4050bb:	 RIP: 4050bb	 Bytes: 0
  br label %block_.L_4050bb
block_.L_4050bb:

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 4050bb	 Bytes: 4
  %loadMem_4050bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050bb = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050bb)
  store %struct.Memory* %call_4050bb, %struct.Memory** %MEMORY

  ; Code: jge .L_4050f7	 RIP: 4050bf	 Bytes: 6
  %loadMem_4050bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050bf = call %struct.Memory* @routine_jge_.L_4050f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050bf, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_4050bf, %struct.Memory** %MEMORY

  %loadBr_4050bf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4050bf = icmp eq i8 %loadBr_4050bf, 1
  br i1 %cmpBr_4050bf, label %block_.L_4050f7, label %block_4050c5

block_4050c5:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 4050c5	 Bytes: 7
  %loadMem_4050c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050c5 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050c5)
  store %struct.Memory* %call_4050c5, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 4050cc	 Bytes: 4
  %loadMem_4050cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050cc = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050cc)
  store %struct.Memory* %call_4050cc, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4050d0	 Bytes: 4
  %loadMem_4050d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050d0 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050d0)
  store %struct.Memory* %call_4050d0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4050d4	 Bytes: 3
  %loadMem_4050d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050d4 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050d4)
  store %struct.Memory* %call_4050d4, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4050d7	 Bytes: 4
  %loadMem_4050d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050d7 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050d7)
  store %struct.Memory* %call_4050d7, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4050db	 Bytes: 3
  %loadMem_4050db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050db = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050db)
  store %struct.Memory* %call_4050db, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rax	 RIP: 4050de	 Bytes: 4
  %loadMem_4050de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050de = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050de)
  store %struct.Memory* %call_4050de, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x470(%rbp,%rax,4)	 RIP: 4050e2	 Bytes: 7
  %loadMem_4050e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050e2 = call %struct.Memory* @routine_movl__edx__MINUS0x470__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050e2)
  store %struct.Memory* %call_4050e2, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 4050e9	 Bytes: 3
  %loadMem_4050e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050e9 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050e9)
  store %struct.Memory* %call_4050e9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4050ec	 Bytes: 3
  %loadMem_4050ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050ec = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050ec)
  store %struct.Memory* %call_4050ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 4050ef	 Bytes: 3
  %loadMem_4050ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050ef = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050ef)
  store %struct.Memory* %call_4050ef, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4050bb	 RIP: 4050f2	 Bytes: 5
  %loadMem_4050f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050f2 = call %struct.Memory* @routine_jmpq_.L_4050bb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050f2, i64 -55, i64 5)
  store %struct.Memory* %call_4050f2, %struct.Memory** %MEMORY

  br label %block_.L_4050bb

  ; Code: .L_4050f7:	 RIP: 4050f7	 Bytes: 0
block_.L_4050f7:

  ; Code: movl -0x470(%rbp), %eax	 RIP: 4050f7	 Bytes: 6
  %loadMem_4050f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050f7 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050f7)
  store %struct.Memory* %call_4050f7, %struct.Memory** %MEMORY

  ; Code: addl -0x468(%rbp), %eax	 RIP: 4050fd	 Bytes: 6
  %loadMem_4050fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4050fd = call %struct.Memory* @routine_addl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4050fd)
  store %struct.Memory* %call_4050fd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x480(%rbp)	 RIP: 405103	 Bytes: 6
  %loadMem_405103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405103 = call %struct.Memory* @routine_movl__eax__MINUS0x480__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405103)
  store %struct.Memory* %call_405103, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %eax	 RIP: 405109	 Bytes: 6
  %loadMem_405109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405109 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405109)
  store %struct.Memory* %call_405109, %struct.Memory** %MEMORY

  ; Code: subl -0x468(%rbp), %eax	 RIP: 40510f	 Bytes: 6
  %loadMem_40510f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40510f = call %struct.Memory* @routine_subl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40510f)
  store %struct.Memory* %call_40510f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x47c(%rbp)	 RIP: 405115	 Bytes: 6
  %loadMem_405115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405115 = call %struct.Memory* @routine_movl__eax__MINUS0x47c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405115)
  store %struct.Memory* %call_405115, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %eax	 RIP: 40511b	 Bytes: 6
  %loadMem_40511b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40511b = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40511b)
  store %struct.Memory* %call_40511b, %struct.Memory** %MEMORY

  ; Code: subl -0x464(%rbp), %eax	 RIP: 405121	 Bytes: 6
  %loadMem_405121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405121 = call %struct.Memory* @routine_subl_MINUS0x464__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405121)
  store %struct.Memory* %call_405121, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x478(%rbp)	 RIP: 405127	 Bytes: 6
  %loadMem_405127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405127 = call %struct.Memory* @routine_movl__eax__MINUS0x478__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405127)
  store %struct.Memory* %call_405127, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %eax	 RIP: 40512d	 Bytes: 6
  %loadMem_40512d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40512d = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40512d)
  store %struct.Memory* %call_40512d, %struct.Memory** %MEMORY

  ; Code: addl -0x464(%rbp), %eax	 RIP: 405133	 Bytes: 6
  %loadMem_405133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405133 = call %struct.Memory* @routine_addl_MINUS0x464__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405133)
  store %struct.Memory* %call_405133, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x474(%rbp)	 RIP: 405139	 Bytes: 6
  %loadMem_405139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405139 = call %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405139)
  store %struct.Memory* %call_405139, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 40513f	 Bytes: 7
  %loadMem_40513f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40513f = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40513f)
  store %struct.Memory* %call_40513f, %struct.Memory** %MEMORY

  ; Code: .L_405146:	 RIP: 405146	 Bytes: 0
  br label %block_.L_405146
block_.L_405146:

  ; Code: cmpl $0x2, -0x8(%rbp)	 RIP: 405146	 Bytes: 4
  %loadMem_405146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405146 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405146)
  store %struct.Memory* %call_405146, %struct.Memory** %MEMORY

  ; Code: jge .L_4051c3	 RIP: 40514a	 Bytes: 6
  %loadMem_40514a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40514a = call %struct.Memory* @routine_jge_.L_4051c3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40514a, i8* %BRANCH_TAKEN, i64 121, i64 6, i64 6)
  store %struct.Memory* %call_40514a, %struct.Memory** %MEMORY

  %loadBr_40514a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40514a = icmp eq i8 %loadBr_40514a, 1
  br i1 %cmpBr_40514a, label %block_.L_4051c3, label %block_405150

block_405150:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 405150	 Bytes: 7
  %loadMem_405150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405150 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405150)
  store %struct.Memory* %call_405150, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 405157	 Bytes: 5
  %loadMem_405157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405157 = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405157)
  store %struct.Memory* %call_405157, %struct.Memory** %MEMORY

  ; Code: subl -0x8(%rbp), %ecx	 RIP: 40515c	 Bytes: 3
  %loadMem_40515c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40515c = call %struct.Memory* @routine_subl_MINUS0x8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40515c)
  store %struct.Memory* %call_40515c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 40515f	 Bytes: 3
  %loadMem_40515f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40515f = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40515f)
  store %struct.Memory* %call_40515f, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405162	 Bytes: 4
  %loadMem_405162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405162 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405162)
  store %struct.Memory* %call_405162, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405166	 Bytes: 7
  %loadMem_405166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405166 = call %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405166)
  store %struct.Memory* %call_405166, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 40516d	 Bytes: 4
  %loadMem_40516d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40516d = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40516d)
  store %struct.Memory* %call_40516d, %struct.Memory** %MEMORY

  ; Code: addl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405171	 Bytes: 7
  %loadMem_405171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405171 = call %struct.Memory* @routine_addl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405171)
  store %struct.Memory* %call_405171, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405178	 Bytes: 4
  %loadMem_405178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405178 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405178)
  store %struct.Memory* %call_405178, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 40517c	 Bytes: 4
  %loadMem_40517c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40517c = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40517c)
  store %struct.Memory* %call_40517c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 405180	 Bytes: 3
  %loadMem_405180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405180 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405180)
  store %struct.Memory* %call_405180, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 405183	 Bytes: 3
  %loadMem_405183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405183 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405183)
  store %struct.Memory* %call_405183, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 405186	 Bytes: 4
  %loadMem_405186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405186 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405186)
  store %struct.Memory* %call_405186, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 40518a	 Bytes: 3
  %loadMem_40518a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40518a = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40518a)
  store %struct.Memory* %call_40518a, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 40518d	 Bytes: 4
  %loadMem_40518d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40518d = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40518d)
  store %struct.Memory* %call_40518d, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405191	 Bytes: 7
  %loadMem_405191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405191 = call %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405191)
  store %struct.Memory* %call_405191, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 405198	 Bytes: 4
  %loadMem_405198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405198 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405198)
  store %struct.Memory* %call_405198, %struct.Memory** %MEMORY

  ; Code: subl -0x480(%rbp,%rdx,4), %ecx	 RIP: 40519c	 Bytes: 7
  %loadMem_40519c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40519c = call %struct.Memory* @routine_subl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40519c)
  store %struct.Memory* %call_40519c, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 4051a3	 Bytes: 4
  %loadMem_4051a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051a3 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051a3)
  store %struct.Memory* %call_4051a3, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4051a7	 Bytes: 4
  %loadMem_4051a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051a7 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051a7)
  store %struct.Memory* %call_4051a7, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 4051ab	 Bytes: 3
  %loadMem_4051ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051ab = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051ab)
  store %struct.Memory* %call_4051ab, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 4051ae	 Bytes: 4
  %loadMem_4051ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051ae = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051ae)
  store %struct.Memory* %call_4051ae, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax,%rdx,4)	 RIP: 4051b2	 Bytes: 3
  %loadMem_4051b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051b2 = call %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051b2)
  store %struct.Memory* %call_4051b2, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 4051b5	 Bytes: 3
  %loadMem_4051b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051b5 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051b5)
  store %struct.Memory* %call_4051b5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4051b8	 Bytes: 3
  %loadMem_4051b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051b8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051b8)
  store %struct.Memory* %call_4051b8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 4051bb	 Bytes: 3
  %loadMem_4051bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051bb = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051bb)
  store %struct.Memory* %call_4051bb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405146	 RIP: 4051be	 Bytes: 5
  %loadMem_4051be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051be = call %struct.Memory* @routine_jmpq_.L_405146(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051be, i64 -120, i64 5)
  store %struct.Memory* %call_4051be, %struct.Memory** %MEMORY

  br label %block_.L_405146

  ; Code: .L_4051c3:	 RIP: 4051c3	 Bytes: 0
block_.L_4051c3:

  ; Code: jmpq .L_4051c8	 RIP: 4051c3	 Bytes: 5
  %loadMem_4051c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051c3 = call %struct.Memory* @routine_jmpq_.L_4051c8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051c3, i64 5, i64 5)
  store %struct.Memory* %call_4051c3, %struct.Memory** %MEMORY

  br label %block_.L_4051c8

  ; Code: .L_4051c8:	 RIP: 4051c8	 Bytes: 0
block_.L_4051c8:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 4051c8	 Bytes: 3
  %loadMem_4051c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051c8 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051c8)
  store %struct.Memory* %call_4051c8, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4051cb	 Bytes: 3
  %loadMem_4051cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051cb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051cb)
  store %struct.Memory* %call_4051cb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 4051ce	 Bytes: 3
  %loadMem_4051ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051ce = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051ce)
  store %struct.Memory* %call_4051ce, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40507b	 RIP: 4051d1	 Bytes: 5
  %loadMem_4051d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051d1 = call %struct.Memory* @routine_jmpq_.L_40507b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051d1, i64 -342, i64 5)
  store %struct.Memory* %call_4051d1, %struct.Memory** %MEMORY

  br label %block_.L_40507b

  ; Code: .L_4051d6:	 RIP: 4051d6	 Bytes: 0
block_.L_4051d6:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 4051d6	 Bytes: 7
  %loadMem_4051d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051d6 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051d6)
  store %struct.Memory* %call_4051d6, %struct.Memory** %MEMORY

  ; Code: .L_4051dd:	 RIP: 4051dd	 Bytes: 0
  br label %block_.L_4051dd
block_.L_4051dd:

  ; Code: xorl %eax, %eax	 RIP: 4051dd	 Bytes: 2
  %loadMem_4051dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051dd = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051dd)
  store %struct.Memory* %call_4051dd, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 4051df	 Bytes: 2
  %loadMem_4051df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051df = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051df)
  store %struct.Memory* %call_4051df, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 4051e1	 Bytes: 4
  %loadMem_4051e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051e1 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051e1)
  store %struct.Memory* %call_4051e1, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x8e1(%rbp)	 RIP: 4051e5	 Bytes: 6
  %loadMem_4051e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051e5 = call %struct.Memory* @routine_movb__cl__MINUS0x8e1__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051e5)
  store %struct.Memory* %call_4051e5, %struct.Memory** %MEMORY

  ; Code: jge .L_405203	 RIP: 4051eb	 Bytes: 6
  %loadMem_4051eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051eb = call %struct.Memory* @routine_jge_.L_405203(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051eb, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_4051eb, %struct.Memory** %MEMORY

  %loadBr_4051eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4051eb = icmp eq i8 %loadBr_4051eb, 1
  br i1 %cmpBr_4051eb, label %block_.L_405203, label %block_4051f1

block_4051f1:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 4051f1	 Bytes: 7
  %loadMem_4051f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051f1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051f1)
  store %struct.Memory* %call_4051f1, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 4051f8	 Bytes: 3
  %loadMem_4051f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051f8 = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051f8)
  store %struct.Memory* %call_4051f8, %struct.Memory** %MEMORY

  ; Code: xorb $0xff, %al	 RIP: 4051fb	 Bytes: 2
  %loadMem_4051fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051fb = call %struct.Memory* @routine_xorb__0xff___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051fb)
  store %struct.Memory* %call_4051fb, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x8e1(%rbp)	 RIP: 4051fd	 Bytes: 6
  %loadMem_4051fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4051fd = call %struct.Memory* @routine_movb__al__MINUS0x8e1__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4051fd)
  store %struct.Memory* %call_4051fd, %struct.Memory** %MEMORY

  ; Code: .L_405203:	 RIP: 405203	 Bytes: 0
  br label %block_.L_405203
block_.L_405203:

  ; Code: movb -0x8e1(%rbp), %al	 RIP: 405203	 Bytes: 6
  %loadMem_405203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405203 = call %struct.Memory* @routine_movb_MINUS0x8e1__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405203)
  store %struct.Memory* %call_405203, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 405209	 Bytes: 2
  %loadMem_405209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405209 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405209)
  store %struct.Memory* %call_405209, %struct.Memory** %MEMORY

  ; Code: jne .L_405216	 RIP: 40520b	 Bytes: 6
  %loadMem_40520b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40520b = call %struct.Memory* @routine_jne_.L_405216(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40520b, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_40520b, %struct.Memory** %MEMORY

  %loadBr_40520b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40520b = icmp eq i8 %loadBr_40520b, 1
  br i1 %cmpBr_40520b, label %block_.L_405216, label %block_405211

block_405211:
  ; Code: jmpq .L_40549a	 RIP: 405211	 Bytes: 5
  %loadMem_405211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405211 = call %struct.Memory* @routine_jmpq_.L_40549a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405211, i64 649, i64 5)
  store %struct.Memory* %call_405211, %struct.Memory** %MEMORY

  br label %block_.L_40549a

  ; Code: .L_405216:	 RIP: 405216	 Bytes: 0
block_.L_405216:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 405216	 Bytes: 7
  %loadMem_405216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405216 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405216)
  store %struct.Memory* %call_405216, %struct.Memory** %MEMORY

  ; Code: .L_40521d:	 RIP: 40521d	 Bytes: 0
  br label %block_.L_40521d
block_.L_40521d:

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 40521d	 Bytes: 4
  %loadMem_40521d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40521d = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40521d)
  store %struct.Memory* %call_40521d, %struct.Memory** %MEMORY

  ; Code: jge .L_405259	 RIP: 405221	 Bytes: 6
  %loadMem_405221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405221 = call %struct.Memory* @routine_jge_.L_405259(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405221, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_405221, %struct.Memory** %MEMORY

  %loadBr_405221 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405221 = icmp eq i8 %loadBr_405221, 1
  br i1 %cmpBr_405221, label %block_.L_405259, label %block_405227

block_405227:
  ; Code: leaq -0x460(%rbp), %rax	 RIP: 405227	 Bytes: 7
  %loadMem_405227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405227 = call %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405227)
  store %struct.Memory* %call_405227, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 40522e	 Bytes: 4
  %loadMem_40522e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40522e = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40522e)
  store %struct.Memory* %call_40522e, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 405232	 Bytes: 4
  %loadMem_405232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405232 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405232)
  store %struct.Memory* %call_405232, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405236	 Bytes: 3
  %loadMem_405236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405236 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405236)
  store %struct.Memory* %call_405236, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 405239	 Bytes: 4
  %loadMem_405239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405239 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405239)
  store %struct.Memory* %call_405239, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 40523d	 Bytes: 3
  %loadMem_40523d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40523d = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40523d)
  store %struct.Memory* %call_40523d, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rax	 RIP: 405240	 Bytes: 4
  %loadMem_405240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405240 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405240)
  store %struct.Memory* %call_405240, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x470(%rbp,%rax,4)	 RIP: 405244	 Bytes: 7
  %loadMem_405244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405244 = call %struct.Memory* @routine_movl__edx__MINUS0x470__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405244)
  store %struct.Memory* %call_405244, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40524b	 Bytes: 3
  %loadMem_40524b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40524b = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40524b)
  store %struct.Memory* %call_40524b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40524e	 Bytes: 3
  %loadMem_40524e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40524e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40524e)
  store %struct.Memory* %call_40524e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 405251	 Bytes: 3
  %loadMem_405251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405251 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405251)
  store %struct.Memory* %call_405251, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40521d	 RIP: 405254	 Bytes: 5
  %loadMem_405254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405254 = call %struct.Memory* @routine_jmpq_.L_40521d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405254, i64 -55, i64 5)
  store %struct.Memory* %call_405254, %struct.Memory** %MEMORY

  br label %block_.L_40521d

  ; Code: .L_405259:	 RIP: 405259	 Bytes: 0
block_.L_405259:

  ; Code: movl -0x470(%rbp), %eax	 RIP: 405259	 Bytes: 6
  %loadMem_405259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405259 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405259)
  store %struct.Memory* %call_405259, %struct.Memory** %MEMORY

  ; Code: addl -0x468(%rbp), %eax	 RIP: 40525f	 Bytes: 6
  %loadMem_40525f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40525f = call %struct.Memory* @routine_addl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40525f)
  store %struct.Memory* %call_40525f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x480(%rbp)	 RIP: 405265	 Bytes: 6
  %loadMem_405265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405265 = call %struct.Memory* @routine_movl__eax__MINUS0x480__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405265)
  store %struct.Memory* %call_405265, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %eax	 RIP: 40526b	 Bytes: 6
  %loadMem_40526b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40526b = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40526b)
  store %struct.Memory* %call_40526b, %struct.Memory** %MEMORY

  ; Code: subl -0x468(%rbp), %eax	 RIP: 405271	 Bytes: 6
  %loadMem_405271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405271 = call %struct.Memory* @routine_subl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405271)
  store %struct.Memory* %call_405271, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x47c(%rbp)	 RIP: 405277	 Bytes: 6
  %loadMem_405277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405277 = call %struct.Memory* @routine_movl__eax__MINUS0x47c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405277)
  store %struct.Memory* %call_405277, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %eax	 RIP: 40527d	 Bytes: 6
  %loadMem_40527d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40527d = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40527d)
  store %struct.Memory* %call_40527d, %struct.Memory** %MEMORY

  ; Code: subl -0x464(%rbp), %eax	 RIP: 405283	 Bytes: 6
  %loadMem_405283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405283 = call %struct.Memory* @routine_subl_MINUS0x464__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405283)
  store %struct.Memory* %call_405283, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x478(%rbp)	 RIP: 405289	 Bytes: 6
  %loadMem_405289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405289 = call %struct.Memory* @routine_movl__eax__MINUS0x478__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405289)
  store %struct.Memory* %call_405289, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %eax	 RIP: 40528f	 Bytes: 6
  %loadMem_40528f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40528f = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40528f)
  store %struct.Memory* %call_40528f, %struct.Memory** %MEMORY

  ; Code: addl -0x464(%rbp), %eax	 RIP: 405295	 Bytes: 6
  %loadMem_405295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405295 = call %struct.Memory* @routine_addl_MINUS0x464__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405295)
  store %struct.Memory* %call_405295, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x474(%rbp)	 RIP: 40529b	 Bytes: 6
  %loadMem_40529b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40529b = call %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40529b)
  store %struct.Memory* %call_40529b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 4052a1	 Bytes: 7
  %loadMem_4052a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052a1 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052a1)
  store %struct.Memory* %call_4052a1, %struct.Memory** %MEMORY

  ; Code: .L_4052a8:	 RIP: 4052a8	 Bytes: 0
  br label %block_.L_4052a8
block_.L_4052a8:

  ; Code: cmpl $0x2, -0xc(%rbp)	 RIP: 4052a8	 Bytes: 4
  %loadMem_4052a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052a8 = call %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052a8)
  store %struct.Memory* %call_4052a8, %struct.Memory** %MEMORY

  ; Code: jge .L_405487	 RIP: 4052ac	 Bytes: 6
  %loadMem_4052ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052ac = call %struct.Memory* @routine_jge_.L_405487(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052ac, i8* %BRANCH_TAKEN, i64 475, i64 6, i64 6)
  store %struct.Memory* %call_4052ac, %struct.Memory** %MEMORY

  %loadBr_4052ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4052ac = icmp eq i8 %loadBr_4052ac, 1
  br i1 %cmpBr_4052ac, label %block_.L_405487, label %block_4052b2

block_4052b2:
  ; Code: movl $0x3, %eax	 RIP: 4052b2	 Bytes: 5
  %loadMem_4052b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052b2 = call %struct.Memory* @routine_movl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052b2)
  store %struct.Memory* %call_4052b2, %struct.Memory** %MEMORY

  ; Code: subl -0xc(%rbp), %eax	 RIP: 4052b7	 Bytes: 3
  %loadMem_4052b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052b7 = call %struct.Memory* @routine_subl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052b7)
  store %struct.Memory* %call_4052b7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x1c(%rbp)	 RIP: 4052ba	 Bytes: 3
  %loadMem_4052ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052ba = call %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052ba)
  store %struct.Memory* %call_4052ba, %struct.Memory** %MEMORY

  ; Code: cmpl $0x6, -0x894(%rbp)	 RIP: 4052bd	 Bytes: 7
  %loadMem_4052bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052bd = call %struct.Memory* @routine_cmpl__0x6__MINUS0x894__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052bd)
  store %struct.Memory* %call_4052bd, %struct.Memory** %MEMORY

  ; Code: jge .L_4053bd	 RIP: 4052c4	 Bytes: 6
  %loadMem_4052c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052c4 = call %struct.Memory* @routine_jge_.L_4053bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052c4, i8* %BRANCH_TAKEN, i64 249, i64 6, i64 6)
  store %struct.Memory* %call_4052c4, %struct.Memory** %MEMORY

  %loadBr_4052c4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4052c4 = icmp eq i8 %loadBr_4052c4, 1
  br i1 %cmpBr_4052c4, label %block_.L_4053bd, label %block_4052ca

block_4052ca:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 4052ca	 Bytes: 7
  %loadMem_4052ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052ca = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052ca)
  store %struct.Memory* %call_4052ca, %struct.Memory** %MEMORY

  ; Code: movl $0x6, %ecx	 RIP: 4052d1	 Bytes: 5
  %loadMem_4052d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052d1 = call %struct.Memory* @routine_movl__0x6___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052d1)
  store %struct.Memory* %call_4052d1, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 4052d6	 Bytes: 5
  %loadMem_4052d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052d6 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052d6)
  store %struct.Memory* %call_4052d6, %struct.Memory** %MEMORY

  ; Code: movl $0x5, %esi	 RIP: 4052db	 Bytes: 5
  %loadMem_4052db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052db = call %struct.Memory* @routine_movl__0x5___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052db)
  store %struct.Memory* %call_4052db, %struct.Memory** %MEMORY

  ; Code: movq $0x70d010, %rdi	 RIP: 4052e0	 Bytes: 10
  %loadMem_4052e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052e0 = call %struct.Memory* @routine_movq__0x70d010___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052e0)
  store %struct.Memory* %call_4052e0, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r8	 RIP: 4052ea	 Bytes: 4
  %loadMem_4052ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052ea = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052ea)
  store %struct.Memory* %call_4052ea, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%r8,4), %r9d	 RIP: 4052ee	 Bytes: 8
  %loadMem_4052ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052ee = call %struct.Memory* @routine_movl_MINUS0x480__rbp__r8_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052ee)
  store %struct.Memory* %call_4052ee, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %r8	 RIP: 4052f6	 Bytes: 4
  %loadMem_4052f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052f6 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052f6)
  store %struct.Memory* %call_4052f6, %struct.Memory** %MEMORY

  ; Code: addl -0x480(%rbp,%r8,4), %r9d	 RIP: 4052fa	 Bytes: 8
  %loadMem_4052fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4052fa = call %struct.Memory* @routine_addl_MINUS0x480__rbp__r8_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4052fa)
  store %struct.Memory* %call_4052fa, %struct.Memory** %MEMORY

  ; Code: movslq -0x898(%rbp), %r8	 RIP: 405302	 Bytes: 7
  %loadMem_405302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405302 = call %struct.Memory* @routine_movslq_MINUS0x898__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405302)
  store %struct.Memory* %call_405302, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 405309	 Bytes: 4
  %loadMem_405309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405309 = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405309)
  store %struct.Memory* %call_405309, %struct.Memory** %MEMORY

  ; Code: movq %rdi, %r10	 RIP: 40530d	 Bytes: 3
  %loadMem_40530d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40530d = call %struct.Memory* @routine_movq__rdi___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40530d)
  store %struct.Memory* %call_40530d, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r10	 RIP: 405310	 Bytes: 3
  %loadMem_405310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405310 = call %struct.Memory* @routine_addq__r8___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405310)
  store %struct.Memory* %call_405310, %struct.Memory** %MEMORY

  ; Code: imull (%r10), %r9d	 RIP: 405313	 Bytes: 4
  %loadMem_405313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405313 = call %struct.Memory* @routine_imull___r10____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405313)
  store %struct.Memory* %call_405313, %struct.Memory** %MEMORY

  ; Code: movl %esi, %r11d	 RIP: 405317	 Bytes: 3
  %loadMem_405317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405317 = call %struct.Memory* @routine_movl__esi___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405317)
  store %struct.Memory* %call_405317, %struct.Memory** %MEMORY

  ; Code: subl -0x894(%rbp), %r11d	 RIP: 40531a	 Bytes: 7
  %loadMem_40531a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40531a = call %struct.Memory* @routine_subl_MINUS0x894__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40531a)
  store %struct.Memory* %call_40531a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x8e8(%rbp)	 RIP: 405321	 Bytes: 6
  %loadMem_405321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405321 = call %struct.Memory* @routine_movl__ecx__MINUS0x8e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405321)
  store %struct.Memory* %call_405321, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %ecx	 RIP: 405327	 Bytes: 3
  %loadMem_405327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405327 = call %struct.Memory* @routine_movl__r11d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405327)
  store %struct.Memory* %call_405327, %struct.Memory** %MEMORY

  ; Code: movl %edx, %r11d	 RIP: 40532a	 Bytes: 3
  %loadMem_40532a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40532a = call %struct.Memory* @routine_movl__edx___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40532a)
  store %struct.Memory* %call_40532a, %struct.Memory** %MEMORY

  ; Code: shll %cl, %r11d	 RIP: 40532d	 Bytes: 3
  %loadMem_40532d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40532d = call %struct.Memory* @routine_shll__cl___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40532d)
  store %struct.Memory* %call_40532d, %struct.Memory** %MEMORY

  ; Code: addl %r11d, %r9d	 RIP: 405330	 Bytes: 3
  %loadMem_405330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405330 = call %struct.Memory* @routine_addl__r11d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405330)
  store %struct.Memory* %call_405330, %struct.Memory** %MEMORY

  ; Code: movl -0x8e8(%rbp), %r11d	 RIP: 405333	 Bytes: 7
  %loadMem_405333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405333 = call %struct.Memory* @routine_movl_MINUS0x8e8__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405333)
  store %struct.Memory* %call_405333, %struct.Memory** %MEMORY

  ; Code: subl -0x894(%rbp), %r11d	 RIP: 40533a	 Bytes: 7
  %loadMem_40533a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40533a = call %struct.Memory* @routine_subl_MINUS0x894__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40533a)
  store %struct.Memory* %call_40533a, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %ecx	 RIP: 405341	 Bytes: 3
  %loadMem_405341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405341 = call %struct.Memory* @routine_movl__r11d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405341)
  store %struct.Memory* %call_405341, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %r9d	 RIP: 405344	 Bytes: 3
  %loadMem_405344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405344 = call %struct.Memory* @routine_sarl__cl___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405344)
  store %struct.Memory* %call_405344, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %r8	 RIP: 405347	 Bytes: 4
  %loadMem_405347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405347 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405347)
  store %struct.Memory* %call_405347, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40534b	 Bytes: 4
  %loadMem_40534b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40534b = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40534b)
  store %struct.Memory* %call_40534b, %struct.Memory** %MEMORY

  ; Code: movq %rax, %r10	 RIP: 40534f	 Bytes: 3
  %loadMem_40534f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40534f = call %struct.Memory* @routine_movq__rax___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40534f)
  store %struct.Memory* %call_40534f, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r10	 RIP: 405352	 Bytes: 3
  %loadMem_405352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405352 = call %struct.Memory* @routine_addq__r8___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405352)
  store %struct.Memory* %call_405352, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r8	 RIP: 405355	 Bytes: 4
  %loadMem_405355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405355 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405355)
  store %struct.Memory* %call_405355, %struct.Memory** %MEMORY

  ; Code: movl %r9d, (%r10,%r8,4)	 RIP: 405359	 Bytes: 4
  %loadMem_405359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405359 = call %struct.Memory* @routine_movl__r9d____r10__r8_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405359)
  store %struct.Memory* %call_405359, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r8	 RIP: 40535d	 Bytes: 4
  %loadMem_40535d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40535d = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40535d)
  store %struct.Memory* %call_40535d, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%r8,4), %r9d	 RIP: 405361	 Bytes: 8
  %loadMem_405361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405361 = call %struct.Memory* @routine_movl_MINUS0x480__rbp__r8_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405361)
  store %struct.Memory* %call_405361, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %r8	 RIP: 405369	 Bytes: 4
  %loadMem_405369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405369 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405369)
  store %struct.Memory* %call_405369, %struct.Memory** %MEMORY

  ; Code: subl -0x480(%rbp,%r8,4), %r9d	 RIP: 40536d	 Bytes: 8
  %loadMem_40536d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40536d = call %struct.Memory* @routine_subl_MINUS0x480__rbp__r8_4____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40536d)
  store %struct.Memory* %call_40536d, %struct.Memory** %MEMORY

  ; Code: movslq -0x898(%rbp), %r8	 RIP: 405375	 Bytes: 7
  %loadMem_405375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405375 = call %struct.Memory* @routine_movslq_MINUS0x898__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405375)
  store %struct.Memory* %call_405375, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r8	 RIP: 40537c	 Bytes: 4
  %loadMem_40537c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40537c = call %struct.Memory* @routine_shlq__0x6___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40537c)
  store %struct.Memory* %call_40537c, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdi	 RIP: 405380	 Bytes: 3
  %loadMem_405380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405380 = call %struct.Memory* @routine_addq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405380)
  store %struct.Memory* %call_405380, %struct.Memory** %MEMORY

  ; Code: imull (%rdi), %r9d	 RIP: 405383	 Bytes: 4
  %loadMem_405383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405383 = call %struct.Memory* @routine_imull___rdi____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405383)
  store %struct.Memory* %call_405383, %struct.Memory** %MEMORY

  ; Code: subl -0x894(%rbp), %esi	 RIP: 405387	 Bytes: 6
  %loadMem_405387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405387 = call %struct.Memory* @routine_subl_MINUS0x894__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405387)
  store %struct.Memory* %call_405387, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 40538d	 Bytes: 2
  %loadMem_40538d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40538d = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40538d)
  store %struct.Memory* %call_40538d, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 40538f	 Bytes: 2
  %loadMem_40538f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40538f = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40538f)
  store %struct.Memory* %call_40538f, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r9d	 RIP: 405391	 Bytes: 3
  %loadMem_405391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405391 = call %struct.Memory* @routine_addl__edx___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405391)
  store %struct.Memory* %call_405391, %struct.Memory** %MEMORY

  ; Code: movl -0x8e8(%rbp), %edx	 RIP: 405394	 Bytes: 6
  %loadMem_405394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405394 = call %struct.Memory* @routine_movl_MINUS0x8e8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405394)
  store %struct.Memory* %call_405394, %struct.Memory** %MEMORY

  ; Code: subl -0x894(%rbp), %edx	 RIP: 40539a	 Bytes: 6
  %loadMem_40539a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40539a = call %struct.Memory* @routine_subl_MINUS0x894__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40539a)
  store %struct.Memory* %call_40539a, %struct.Memory** %MEMORY

  ; Code: movl %edx, %ecx	 RIP: 4053a0	 Bytes: 2
  %loadMem_4053a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053a0 = call %struct.Memory* @routine_movl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053a0)
  store %struct.Memory* %call_4053a0, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %r9d	 RIP: 4053a2	 Bytes: 3
  %loadMem_4053a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053a2 = call %struct.Memory* @routine_sarl__cl___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053a2)
  store %struct.Memory* %call_4053a2, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdi	 RIP: 4053a5	 Bytes: 4
  %loadMem_4053a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053a5 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053a5)
  store %struct.Memory* %call_4053a5, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 4053a9	 Bytes: 4
  %loadMem_4053a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053a9 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053a9)
  store %struct.Memory* %call_4053a9, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rax	 RIP: 4053ad	 Bytes: 3
  %loadMem_4053ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053ad = call %struct.Memory* @routine_addq__rdi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053ad)
  store %struct.Memory* %call_4053ad, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdi	 RIP: 4053b0	 Bytes: 4
  %loadMem_4053b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053b0 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053b0)
  store %struct.Memory* %call_4053b0, %struct.Memory** %MEMORY

  ; Code: movl %r9d, (%rax,%rdi,4)	 RIP: 4053b4	 Bytes: 4
  %loadMem_4053b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053b4 = call %struct.Memory* @routine_movl__r9d____rax__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053b4)
  store %struct.Memory* %call_4053b4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405474	 RIP: 4053b8	 Bytes: 5
  %loadMem_4053b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053b8 = call %struct.Memory* @routine_jmpq_.L_405474(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053b8, i64 188, i64 5)
  store %struct.Memory* %call_4053b8, %struct.Memory** %MEMORY

  br label %block_.L_405474

  ; Code: .L_4053bd:	 RIP: 4053bd	 Bytes: 0
block_.L_4053bd:

  ; Code: leaq -0x880(%rbp), %rax	 RIP: 4053bd	 Bytes: 7
  %loadMem_4053bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053bd = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053bd)
  store %struct.Memory* %call_4053bd, %struct.Memory** %MEMORY

  ; Code: movq $0x70d010, %rcx	 RIP: 4053c4	 Bytes: 10
  %loadMem_4053c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053c4 = call %struct.Memory* @routine_movq__0x70d010___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053c4)
  store %struct.Memory* %call_4053c4, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 4053ce	 Bytes: 4
  %loadMem_4053ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053ce = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053ce)
  store %struct.Memory* %call_4053ce, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%rdx,4), %esi	 RIP: 4053d2	 Bytes: 7
  %loadMem_4053d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053d2 = call %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053d2)
  store %struct.Memory* %call_4053d2, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 4053d9	 Bytes: 4
  %loadMem_4053d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053d9 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053d9)
  store %struct.Memory* %call_4053d9, %struct.Memory** %MEMORY

  ; Code: addl -0x480(%rbp,%rdx,4), %esi	 RIP: 4053dd	 Bytes: 7
  %loadMem_4053dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053dd = call %struct.Memory* @routine_addl_MINUS0x480__rbp__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053dd)
  store %struct.Memory* %call_4053dd, %struct.Memory** %MEMORY

  ; Code: movslq -0x898(%rbp), %rdx	 RIP: 4053e4	 Bytes: 7
  %loadMem_4053e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053e4 = call %struct.Memory* @routine_movslq_MINUS0x898__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053e4)
  store %struct.Memory* %call_4053e4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4053eb	 Bytes: 4
  %loadMem_4053eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053eb = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053eb)
  store %struct.Memory* %call_4053eb, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 4053ef	 Bytes: 3
  %loadMem_4053ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053ef = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053ef)
  store %struct.Memory* %call_4053ef, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rdi	 RIP: 4053f2	 Bytes: 3
  %loadMem_4053f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053f2 = call %struct.Memory* @routine_addq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053f2)
  store %struct.Memory* %call_4053f2, %struct.Memory** %MEMORY

  ; Code: imull (%rdi), %esi	 RIP: 4053f5	 Bytes: 3
  %loadMem_4053f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053f5 = call %struct.Memory* @routine_imull___rdi____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053f5)
  store %struct.Memory* %call_4053f5, %struct.Memory** %MEMORY

  ; Code: movl -0x894(%rbp), %r8d	 RIP: 4053f8	 Bytes: 7
  %loadMem_4053f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053f8 = call %struct.Memory* @routine_movl_MINUS0x894__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053f8)
  store %struct.Memory* %call_4053f8, %struct.Memory** %MEMORY

  ; Code: subl $0x6, %r8d	 RIP: 4053ff	 Bytes: 4
  %loadMem_4053ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4053ff = call %struct.Memory* @routine_subl__0x6___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4053ff)
  store %struct.Memory* %call_4053ff, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x8f0(%rbp)	 RIP: 405403	 Bytes: 7
  %loadMem_405403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405403 = call %struct.Memory* @routine_movq__rcx__MINUS0x8f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405403)
  store %struct.Memory* %call_405403, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 40540a	 Bytes: 3
  %loadMem_40540a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40540a = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40540a)
  store %struct.Memory* %call_40540a, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 40540d	 Bytes: 2
  %loadMem_40540d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40540d = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40540d)
  store %struct.Memory* %call_40540d, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 40540f	 Bytes: 4
  %loadMem_40540f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40540f = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40540f)
  store %struct.Memory* %call_40540f, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 405413	 Bytes: 4
  %loadMem_405413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405413 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405413)
  store %struct.Memory* %call_405413, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 405417	 Bytes: 3
  %loadMem_405417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405417 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405417)
  store %struct.Memory* %call_405417, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rdi	 RIP: 40541a	 Bytes: 3
  %loadMem_40541a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40541a = call %struct.Memory* @routine_addq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40541a)
  store %struct.Memory* %call_40541a, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40541d	 Bytes: 4
  %loadMem_40541d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40541d = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40541d)
  store %struct.Memory* %call_40541d, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rdi,%rdx,4)	 RIP: 405421	 Bytes: 3
  %loadMem_405421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405421 = call %struct.Memory* @routine_movl__esi____rdi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405421)
  store %struct.Memory* %call_405421, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 405424	 Bytes: 4
  %loadMem_405424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405424 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405424)
  store %struct.Memory* %call_405424, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%rdx,4), %esi	 RIP: 405428	 Bytes: 7
  %loadMem_405428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405428 = call %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405428)
  store %struct.Memory* %call_405428, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 40542f	 Bytes: 4
  %loadMem_40542f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40542f = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40542f)
  store %struct.Memory* %call_40542f, %struct.Memory** %MEMORY

  ; Code: subl -0x480(%rbp,%rdx,4), %esi	 RIP: 405433	 Bytes: 7
  %loadMem_405433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405433 = call %struct.Memory* @routine_subl_MINUS0x480__rbp__rdx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405433)
  store %struct.Memory* %call_405433, %struct.Memory** %MEMORY

  ; Code: movslq -0x898(%rbp), %rdx	 RIP: 40543a	 Bytes: 7
  %loadMem_40543a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40543a = call %struct.Memory* @routine_movslq_MINUS0x898__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40543a)
  store %struct.Memory* %call_40543a, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 405441	 Bytes: 4
  %loadMem_405441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405441 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405441)
  store %struct.Memory* %call_405441, %struct.Memory** %MEMORY

  ; Code: movq -0x8f0(%rbp), %rdi	 RIP: 405445	 Bytes: 7
  %loadMem_405445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405445 = call %struct.Memory* @routine_movq_MINUS0x8f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405445)
  store %struct.Memory* %call_405445, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rdi	 RIP: 40544c	 Bytes: 3
  %loadMem_40544c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40544c = call %struct.Memory* @routine_addq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40544c)
  store %struct.Memory* %call_40544c, %struct.Memory** %MEMORY

  ; Code: imull (%rdi), %esi	 RIP: 40544f	 Bytes: 3
  %loadMem_40544f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40544f = call %struct.Memory* @routine_imull___rdi____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40544f)
  store %struct.Memory* %call_40544f, %struct.Memory** %MEMORY

  ; Code: movl -0x894(%rbp), %r8d	 RIP: 405452	 Bytes: 7
  %loadMem_405452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405452 = call %struct.Memory* @routine_movl_MINUS0x894__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405452)
  store %struct.Memory* %call_405452, %struct.Memory** %MEMORY

  ; Code: subl $0x6, %r8d	 RIP: 405459	 Bytes: 4
  %loadMem_405459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405459 = call %struct.Memory* @routine_subl__0x6___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405459)
  store %struct.Memory* %call_405459, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %ecx	 RIP: 40545d	 Bytes: 3
  %loadMem_40545d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40545d = call %struct.Memory* @routine_movl__r8d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40545d)
  store %struct.Memory* %call_40545d, %struct.Memory** %MEMORY

  ; Code: shll %cl, %esi	 RIP: 405460	 Bytes: 2
  %loadMem_405460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405460 = call %struct.Memory* @routine_shll__cl___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405460)
  store %struct.Memory* %call_405460, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405462	 Bytes: 4
  %loadMem_405462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405462 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405462)
  store %struct.Memory* %call_405462, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 405466	 Bytes: 4
  %loadMem_405466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405466 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405466)
  store %struct.Memory* %call_405466, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 40546a	 Bytes: 3
  %loadMem_40546a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40546a = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40546a)
  store %struct.Memory* %call_40546a, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 40546d	 Bytes: 4
  %loadMem_40546d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40546d = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40546d)
  store %struct.Memory* %call_40546d, %struct.Memory** %MEMORY

  ; Code: movl %esi, (%rax,%rdx,4)	 RIP: 405471	 Bytes: 3
  %loadMem_405471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405471 = call %struct.Memory* @routine_movl__esi____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405471)
  store %struct.Memory* %call_405471, %struct.Memory** %MEMORY

  ; Code: .L_405474:	 RIP: 405474	 Bytes: 0
  br label %block_.L_405474
block_.L_405474:

  ; Code: jmpq .L_405479	 RIP: 405474	 Bytes: 5
  %loadMem_405474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405474 = call %struct.Memory* @routine_jmpq_.L_405479(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405474, i64 5, i64 5)
  store %struct.Memory* %call_405474, %struct.Memory** %MEMORY

  br label %block_.L_405479

  ; Code: .L_405479:	 RIP: 405479	 Bytes: 0
block_.L_405479:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405479	 Bytes: 3
  %loadMem_405479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405479 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405479)
  store %struct.Memory* %call_405479, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40547c	 Bytes: 3
  %loadMem_40547c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40547c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40547c)
  store %struct.Memory* %call_40547c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 40547f	 Bytes: 3
  %loadMem_40547f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40547f = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40547f)
  store %struct.Memory* %call_40547f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4052a8	 RIP: 405482	 Bytes: 5
  %loadMem_405482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405482 = call %struct.Memory* @routine_jmpq_.L_4052a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405482, i64 -474, i64 5)
  store %struct.Memory* %call_405482, %struct.Memory** %MEMORY

  br label %block_.L_4052a8

  ; Code: .L_405487:	 RIP: 405487	 Bytes: 0
block_.L_405487:

  ; Code: jmpq .L_40548c	 RIP: 405487	 Bytes: 5
  %loadMem_405487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405487 = call %struct.Memory* @routine_jmpq_.L_40548c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405487, i64 5, i64 5)
  store %struct.Memory* %call_405487, %struct.Memory** %MEMORY

  br label %block_.L_40548c

  ; Code: .L_40548c:	 RIP: 40548c	 Bytes: 0
block_.L_40548c:

  ; Code: movl -0x8(%rbp), %eax	 RIP: 40548c	 Bytes: 3
  %loadMem_40548c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40548c = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40548c)
  store %struct.Memory* %call_40548c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40548f	 Bytes: 3
  %loadMem_40548f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40548f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40548f)
  store %struct.Memory* %call_40548f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 405492	 Bytes: 3
  %loadMem_405492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405492 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405492)
  store %struct.Memory* %call_405492, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4051dd	 RIP: 405495	 Bytes: 5
  %loadMem_405495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405495 = call %struct.Memory* @routine_jmpq_.L_4051dd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405495, i64 -696, i64 5)
  store %struct.Memory* %call_405495, %struct.Memory** %MEMORY

  br label %block_.L_4051dd

  ; Code: .L_40549a:	 RIP: 40549a	 Bytes: 0
block_.L_40549a:

  ; Code: movl $0x0, -0x14(%rbp)	 RIP: 40549a	 Bytes: 7
  %loadMem_40549a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40549a = call %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40549a)
  store %struct.Memory* %call_40549a, %struct.Memory** %MEMORY

  ; Code: .L_4054a1:	 RIP: 4054a1	 Bytes: 0
  br label %block_.L_4054a1
block_.L_4054a1:

  ; Code: cmpl $0x4, -0x14(%rbp)	 RIP: 4054a1	 Bytes: 4
  %loadMem_4054a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054a1 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054a1)
  store %struct.Memory* %call_4054a1, %struct.Memory** %MEMORY

  ; Code: jge .L_405cbf	 RIP: 4054a5	 Bytes: 6
  %loadMem_4054a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054a5 = call %struct.Memory* @routine_jge_.L_405cbf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054a5, i8* %BRANCH_TAKEN, i64 2074, i64 6, i64 6)
  store %struct.Memory* %call_4054a5, %struct.Memory** %MEMORY

  %loadBr_4054a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4054a5 = icmp eq i8 %loadBr_4054a5, 1
  br i1 %cmpBr_4054a5, label %block_.L_405cbf, label %block_4054ab

block_4054ab:
  ; Code: movl $0x0, -0x10(%rbp)	 RIP: 4054ab	 Bytes: 7
  %loadMem_4054ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054ab = call %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054ab)
  store %struct.Memory* %call_4054ab, %struct.Memory** %MEMORY

  ; Code: .L_4054b2:	 RIP: 4054b2	 Bytes: 0
  br label %block_.L_4054b2
block_.L_4054b2:

  ; Code: cmpl $0x4, -0x10(%rbp)	 RIP: 4054b2	 Bytes: 4
  %loadMem_4054b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054b2 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054b2)
  store %struct.Memory* %call_4054b2, %struct.Memory** %MEMORY

  ; Code: jge .L_405cac	 RIP: 4054b6	 Bytes: 6
  %loadMem_4054b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054b6 = call %struct.Memory* @routine_jge_.L_405cac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054b6, i8* %BRANCH_TAKEN, i64 2038, i64 6, i64 6)
  store %struct.Memory* %call_4054b6, %struct.Memory** %MEMORY

  %loadBr_4054b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4054b6 = icmp eq i8 %loadBr_4054b6, 1
  br i1 %cmpBr_4054b6, label %block_.L_405cac, label %block_4054bc

block_4054bc:
  ; Code: movl $0x2, %eax	 RIP: 4054bc	 Bytes: 5
  %loadMem_4054bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054bc = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054bc)
  store %struct.Memory* %call_4054bc, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x884(%rbp)	 RIP: 4054c1	 Bytes: 10
  %loadMem_4054c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054c1 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x884__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054c1)
  store %struct.Memory* %call_4054c1, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x888(%rbp)	 RIP: 4054cb	 Bytes: 10
  %loadMem_4054cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054cb = call %struct.Memory* @routine_movl__0x0__MINUS0x888__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054cb)
  store %struct.Memory* %call_4054cb, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %ecx	 RIP: 4054d5	 Bytes: 3
  %loadMem_4054d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054d5 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054d5)
  store %struct.Memory* %call_4054d5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8f4(%rbp)	 RIP: 4054d8	 Bytes: 6
  %loadMem_4054d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054d8 = call %struct.Memory* @routine_movl__eax__MINUS0x8f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054d8)
  store %struct.Memory* %call_4054d8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4054de	 Bytes: 2
  %loadMem_4054de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054de = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054de)
  store %struct.Memory* %call_4054de, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4054e0	 Bytes: 1
  %loadMem_4054e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054e0 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054e0)
  store %struct.Memory* %call_4054e0, %struct.Memory** %MEMORY

  ; Code: movl -0x8f4(%rbp), %ecx	 RIP: 4054e1	 Bytes: 6
  %loadMem_4054e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054e1 = call %struct.Memory* @routine_movl_MINUS0x8f4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054e1)
  store %struct.Memory* %call_4054e1, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4054e7	 Bytes: 2
  %loadMem_4054e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054e7 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054e7)
  store %struct.Memory* %call_4054e7, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %eax	 RIP: 4054e9	 Bytes: 3
  %loadMem_4054e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054e9 = call %struct.Memory* @routine_shll__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054e9)
  store %struct.Memory* %call_4054e9, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %esi	 RIP: 4054ec	 Bytes: 3
  %loadMem_4054ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054ec = call %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054ec)
  store %struct.Memory* %call_4054ec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8f8(%rbp)	 RIP: 4054ef	 Bytes: 6
  %loadMem_4054ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054ef = call %struct.Memory* @routine_movl__eax__MINUS0x8f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054ef)
  store %struct.Memory* %call_4054ef, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 4054f5	 Bytes: 2
  %loadMem_4054f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054f5 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054f5)
  store %struct.Memory* %call_4054f5, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4054f7	 Bytes: 1
  %loadMem_4054f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054f7 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054f7)
  store %struct.Memory* %call_4054f7, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 4054f8	 Bytes: 2
  %loadMem_4054f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054f8 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054f8)
  store %struct.Memory* %call_4054f8, %struct.Memory** %MEMORY

  ; Code: movl -0x8f8(%rbp), %esi	 RIP: 4054fa	 Bytes: 6
  %loadMem_4054fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4054fa = call %struct.Memory* @routine_movl_MINUS0x8f8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4054fa)
  store %struct.Memory* %call_4054fa, %struct.Memory** %MEMORY

  ; Code: addl %eax, %esi	 RIP: 405500	 Bytes: 2
  %loadMem_405500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405500 = call %struct.Memory* @routine_addl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405500)
  store %struct.Memory* %call_405500, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x8ac(%rbp)	 RIP: 405502	 Bytes: 6
  %loadMem_405502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405502 = call %struct.Memory* @routine_movl__esi__MINUS0x8ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405502)
  store %struct.Memory* %call_405502, %struct.Memory** %MEMORY

  ; Code: movl -0x14(%rbp), %eax	 RIP: 405508	 Bytes: 3
  %loadMem_405508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405508 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405508)
  store %struct.Memory* %call_405508, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40550b	 Bytes: 1
  %loadMem_40550b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40550b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40550b)
  store %struct.Memory* %call_40550b, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 40550c	 Bytes: 2
  %loadMem_40550c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40550c = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40550c)
  store %struct.Memory* %call_40550c, %struct.Memory** %MEMORY

  ; Code: shll $0x1, %edx	 RIP: 40550e	 Bytes: 3
  %loadMem_40550e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40550e = call %struct.Memory* @routine_shll__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40550e)
  store %struct.Memory* %call_40550e, %struct.Memory** %MEMORY

  ; Code: movl -0x10(%rbp), %esi	 RIP: 405511	 Bytes: 3
  %loadMem_405511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405511 = call %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405511)
  store %struct.Memory* %call_405511, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 405514	 Bytes: 2
  %loadMem_405514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405514 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405514)
  store %struct.Memory* %call_405514, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x8fc(%rbp)	 RIP: 405516	 Bytes: 6
  %loadMem_405516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405516 = call %struct.Memory* @routine_movl__edx__MINUS0x8fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405516)
  store %struct.Memory* %call_405516, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 40551c	 Bytes: 1
  %loadMem_40551c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40551c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40551c)
  store %struct.Memory* %call_40551c, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 40551d	 Bytes: 2
  %loadMem_40551d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40551d = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40551d)
  store %struct.Memory* %call_40551d, %struct.Memory** %MEMORY

  ; Code: movl -0x8fc(%rbp), %esi	 RIP: 40551f	 Bytes: 6
  %loadMem_40551f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40551f = call %struct.Memory* @routine_movl_MINUS0x8fc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40551f)
  store %struct.Memory* %call_40551f, %struct.Memory** %MEMORY

  ; Code: addl %edx, %esi	 RIP: 405525	 Bytes: 2
  %loadMem_405525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405525 = call %struct.Memory* @routine_addl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405525)
  store %struct.Memory* %call_405525, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x8b0(%rbp)	 RIP: 405527	 Bytes: 6
  %loadMem_405527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405527 = call %struct.Memory* @routine_movl__esi__MINUS0x8b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405527)
  store %struct.Memory* %call_405527, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdi	 RIP: 40552d	 Bytes: 8
  %loadMem_40552d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40552d = call %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40552d)
  store %struct.Memory* %call_40552d, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rdi), %rdi	 RIP: 405535	 Bytes: 7
  %loadMem_405535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405535 = call %struct.Memory* @routine_movq_0x3738__rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405535)
  store %struct.Memory* %call_405535, %struct.Memory** %MEMORY

  ; Code: movslq -0x8ac(%rbp), %r8	 RIP: 40553c	 Bytes: 7
  %loadMem_40553c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40553c = call %struct.Memory* @routine_movslq_MINUS0x8ac__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40553c)
  store %struct.Memory* %call_40553c, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%r8,8), %rdi	 RIP: 405543	 Bytes: 4
  %loadMem_405543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405543 = call %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405543)
  store %struct.Memory* %call_405543, %struct.Memory** %MEMORY

  ; Code: movslq -0x8b0(%rbp), %r8	 RIP: 405547	 Bytes: 7
  %loadMem_405547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405547 = call %struct.Memory* @routine_movslq_MINUS0x8b0__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405547)
  store %struct.Memory* %call_405547, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%r8,8), %rdi	 RIP: 40554e	 Bytes: 4
  %loadMem_40554e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40554e = call %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40554e)
  store %struct.Memory* %call_40554e, %struct.Memory** %MEMORY

  ; Code: movq (%rdi), %rdi	 RIP: 405552	 Bytes: 3
  %loadMem_405552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405552 = call %struct.Memory* @routine_movq___rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405552)
  store %struct.Memory* %call_405552, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x8c8(%rbp)	 RIP: 405555	 Bytes: 7
  %loadMem_405555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405555 = call %struct.Memory* @routine_movq__rdi__MINUS0x8c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405555)
  store %struct.Memory* %call_405555, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdi	 RIP: 40555c	 Bytes: 8
  %loadMem_40555c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40555c = call %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40555c)
  store %struct.Memory* %call_40555c, %struct.Memory** %MEMORY

  ; Code: movq 0x3738(%rdi), %rdi	 RIP: 405564	 Bytes: 7
  %loadMem_405564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405564 = call %struct.Memory* @routine_movq_0x3738__rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405564)
  store %struct.Memory* %call_405564, %struct.Memory** %MEMORY

  ; Code: movslq -0x8ac(%rbp), %r8	 RIP: 40556b	 Bytes: 7
  %loadMem_40556b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40556b = call %struct.Memory* @routine_movslq_MINUS0x8ac__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40556b)
  store %struct.Memory* %call_40556b, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%r8,8), %rdi	 RIP: 405572	 Bytes: 4
  %loadMem_405572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405572 = call %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405572)
  store %struct.Memory* %call_405572, %struct.Memory** %MEMORY

  ; Code: movslq -0x8b0(%rbp), %r8	 RIP: 405576	 Bytes: 7
  %loadMem_405576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405576 = call %struct.Memory* @routine_movslq_MINUS0x8b0__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405576)
  store %struct.Memory* %call_405576, %struct.Memory** %MEMORY

  ; Code: movq (%rdi,%r8,8), %rdi	 RIP: 40557d	 Bytes: 4
  %loadMem_40557d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40557d = call %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40557d)
  store %struct.Memory* %call_40557d, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdi), %rdi	 RIP: 405581	 Bytes: 4
  %loadMem_405581 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405581 = call %struct.Memory* @routine_movq_0x8__rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405581)
  store %struct.Memory* %call_405581, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x8d0(%rbp)	 RIP: 405585	 Bytes: 7
  %loadMem_405585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405585 = call %struct.Memory* @routine_movq__rdi__MINUS0x8d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405585)
  store %struct.Memory* %call_405585, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x88c(%rbp)	 RIP: 40558c	 Bytes: 10
  %loadMem_40558c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40558c = call %struct.Memory* @routine_movl__0x1__MINUS0x88c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40558c)
  store %struct.Memory* %call_40558c, %struct.Memory** %MEMORY

  ; Code: .L_405596:	 RIP: 405596	 Bytes: 0
  br label %block_.L_405596
block_.L_405596:

  ; Code: cmpl $0x10, -0x88c(%rbp)	 RIP: 405596	 Bytes: 7
  %loadMem_405596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405596 = call %struct.Memory* @routine_cmpl__0x10__MINUS0x88c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405596)
  store %struct.Memory* %call_405596, %struct.Memory** %MEMORY

  ; Code: jge .L_40592c	 RIP: 40559d	 Bytes: 6
  %loadMem_40559d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40559d = call %struct.Memory* @routine_jge_.L_40592c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40559d, i8* %BRANCH_TAKEN, i64 911, i64 6, i64 6)
  store %struct.Memory* %call_40559d, %struct.Memory** %MEMORY

  %loadBr_40559d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40559d = icmp eq i8 %loadBr_40559d, 1
  br i1 %cmpBr_40559d, label %block_.L_40592c, label %block_4055a3

block_4055a3:
  ; Code: movq 0x6cb900, %rax	 RIP: 4055a3	 Bytes: 8
  %loadMem_4055a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055a3 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055a3)
  store %struct.Memory* %call_4055a3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11afc(%rax)	 RIP: 4055ab	 Bytes: 7
  %loadMem_4055ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ab = call %struct.Memory* @routine_cmpl__0x0__0x11afc__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ab)
  store %struct.Memory* %call_4055ab, %struct.Memory** %MEMORY

  ; Code: jne .L_4055db	 RIP: 4055b2	 Bytes: 6
  %loadMem_4055b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055b2 = call %struct.Memory* @routine_jne_.L_4055db(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055b2, i8* %BRANCH_TAKEN, i64 41, i64 6, i64 6)
  store %struct.Memory* %call_4055b2, %struct.Memory** %MEMORY

  %loadBr_4055b2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4055b2 = icmp eq i8 %loadBr_4055b2, 1
  br i1 %cmpBr_4055b2, label %block_.L_4055db, label %block_4055b8

block_4055b8:
  ; Code: cmpl $0x0, 0x6d4750	 RIP: 4055b8	 Bytes: 8
  %loadMem_4055b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055b8 = call %struct.Memory* @routine_cmpl__0x0__0x6d4750(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055b8)
  store %struct.Memory* %call_4055b8, %struct.Memory** %MEMORY

  ; Code: je .L_405604	 RIP: 4055c0	 Bytes: 6
  %loadMem_4055c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055c0 = call %struct.Memory* @routine_je_.L_405604(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055c0, i8* %BRANCH_TAKEN, i64 68, i64 6, i64 6)
  store %struct.Memory* %call_4055c0, %struct.Memory** %MEMORY

  %loadBr_4055c0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4055c0 = icmp eq i8 %loadBr_4055c0, 1
  br i1 %cmpBr_4055c0, label %block_.L_405604, label %block_4055c6

block_4055c6:
  ; Code: movq 0x6cb900, %rax	 RIP: 4055c6	 Bytes: 8
  %loadMem_4055c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055c6 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055c6)
  store %struct.Memory* %call_4055c6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11948(%rax)	 RIP: 4055ce	 Bytes: 7
  %loadMem_4055ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ce = call %struct.Memory* @routine_cmpl__0x0__0x11948__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ce)
  store %struct.Memory* %call_4055ce, %struct.Memory** %MEMORY

  ; Code: je .L_405604	 RIP: 4055d5	 Bytes: 6
  %loadMem_4055d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055d5 = call %struct.Memory* @routine_je_.L_405604(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055d5, i8* %BRANCH_TAKEN, i64 47, i64 6, i64 6)
  store %struct.Memory* %call_4055d5, %struct.Memory** %MEMORY

  %loadBr_4055d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4055d5 = icmp eq i8 %loadBr_4055d5, 1
  br i1 %cmpBr_4055d5, label %block_.L_405604, label %block_.L_4055db

  ; Code: .L_4055db:	 RIP: 4055db	 Bytes: 0
block_.L_4055db:

  ; Code: movslq -0x88c(%rbp), %rax	 RIP: 4055db	 Bytes: 7
  %loadMem_4055db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055db = call %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055db)
  store %struct.Memory* %call_4055db, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2380(,%rax,2), %ecx	 RIP: 4055e2	 Bytes: 8
  %loadMem_4055e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055e2 = call %struct.Memory* @routine_movzbl_0x4b2380___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055e2)
  store %struct.Memory* %call_4055e2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x8(%rbp)	 RIP: 4055ea	 Bytes: 3
  %loadMem_4055ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ea = call %struct.Memory* @routine_movl__ecx__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ea)
  store %struct.Memory* %call_4055ea, %struct.Memory** %MEMORY

  ; Code: movslq -0x88c(%rbp), %rax	 RIP: 4055ed	 Bytes: 7
  %loadMem_4055ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ed = call %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ed)
  store %struct.Memory* %call_4055ed, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2381(,%rax,2), %ecx	 RIP: 4055f4	 Bytes: 8
  %loadMem_4055f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055f4 = call %struct.Memory* @routine_movzbl_0x4b2381___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055f4)
  store %struct.Memory* %call_4055f4, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc(%rbp)	 RIP: 4055fc	 Bytes: 3
  %loadMem_4055fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055fc = call %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055fc)
  store %struct.Memory* %call_4055fc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405628	 RIP: 4055ff	 Bytes: 5
  %loadMem_4055ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4055ff = call %struct.Memory* @routine_jmpq_.L_405628(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4055ff, i64 41, i64 5)
  store %struct.Memory* %call_4055ff, %struct.Memory** %MEMORY

  br label %block_.L_405628

  ; Code: .L_405604:	 RIP: 405604	 Bytes: 0
block_.L_405604:

  ; Code: movslq -0x88c(%rbp), %rax	 RIP: 405604	 Bytes: 7
  %loadMem_405604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405604 = call %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405604)
  store %struct.Memory* %call_405604, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2360(,%rax,2), %ecx	 RIP: 40560b	 Bytes: 8
  %loadMem_40560b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40560b = call %struct.Memory* @routine_movzbl_0x4b2360___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40560b)
  store %struct.Memory* %call_40560b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x8(%rbp)	 RIP: 405613	 Bytes: 3
  %loadMem_405613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405613 = call %struct.Memory* @routine_movl__ecx__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405613)
  store %struct.Memory* %call_405613, %struct.Memory** %MEMORY

  ; Code: movslq -0x88c(%rbp), %rax	 RIP: 405616	 Bytes: 7
  %loadMem_405616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405616 = call %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405616)
  store %struct.Memory* %call_405616, %struct.Memory** %MEMORY

  ; Code: movzbl 0x4b2361(,%rax,2), %ecx	 RIP: 40561d	 Bytes: 8
  %loadMem_40561d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40561d = call %struct.Memory* @routine_movzbl_0x4b2361___rax_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40561d)
  store %struct.Memory* %call_40561d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xc(%rbp)	 RIP: 405625	 Bytes: 3
  %loadMem_405625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405625 = call %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405625)
  store %struct.Memory* %call_405625, %struct.Memory** %MEMORY

  ; Code: .L_405628:	 RIP: 405628	 Bytes: 0
  br label %block_.L_405628
block_.L_405628:

  ; Code: movl -0x884(%rbp), %eax	 RIP: 405628	 Bytes: 6
  %loadMem_405628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405628 = call %struct.Memory* @routine_movl_MINUS0x884__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405628)
  store %struct.Memory* %call_405628, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40562e	 Bytes: 3
  %loadMem_40562e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40562e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40562e)
  store %struct.Memory* %call_40562e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x884(%rbp)	 RIP: 405631	 Bytes: 6
  %loadMem_405631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405631 = call %struct.Memory* @routine_movl__eax__MINUS0x884__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405631)
  store %struct.Memory* %call_405631, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 405637	 Bytes: 7
  %loadMem_405637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405637 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405637)
  store %struct.Memory* %call_405637, %struct.Memory** %MEMORY

  ; Code: je .L_405683	 RIP: 40563e	 Bytes: 6
  %loadMem_40563e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40563e = call %struct.Memory* @routine_je_.L_405683(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40563e, i8* %BRANCH_TAKEN, i64 69, i64 6, i64 6)
  store %struct.Memory* %call_40563e, %struct.Memory** %MEMORY

  %loadBr_40563e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40563e = icmp eq i8 %loadBr_40563e, 1
  br i1 %cmpBr_40563e, label %block_.L_405683, label %block_405644

block_405644:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 405644	 Bytes: 7
  %loadMem_405644 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405644 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405644)
  store %struct.Memory* %call_405644, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 40564b	 Bytes: 4
  %loadMem_40564b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40564b = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40564b)
  store %struct.Memory* %call_40564b, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rcx	 RIP: 40564f	 Bytes: 4
  %loadMem_40564f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40564f = call %struct.Memory* @routine_shlq__0x8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40564f)
  store %struct.Memory* %call_40564f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405653	 Bytes: 3
  %loadMem_405653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405653 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405653)
  store %struct.Memory* %call_405653, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 405656	 Bytes: 4
  %loadMem_405656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405656 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405656)
  store %struct.Memory* %call_405656, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 40565a	 Bytes: 4
  %loadMem_40565a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40565a = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40565a)
  store %struct.Memory* %call_40565a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40565e	 Bytes: 3
  %loadMem_40565e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40565e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40565e)
  store %struct.Memory* %call_40565e, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 405661	 Bytes: 4
  %loadMem_405661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405661 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405661)
  store %struct.Memory* %call_405661, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 405665	 Bytes: 4
  %loadMem_405665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405665 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405665)
  store %struct.Memory* %call_405665, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405669	 Bytes: 3
  %loadMem_405669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405669 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405669)
  store %struct.Memory* %call_405669, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 40566c	 Bytes: 4
  %loadMem_40566c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40566c = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40566c)
  store %struct.Memory* %call_40566c, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 405670	 Bytes: 3
  %loadMem_405670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405670 = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405670)
  store %struct.Memory* %call_405670, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 405673	 Bytes: 5
  %loadMem1_405673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405673 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405673, i64 -18035, i64 5, i64 5)
  store %struct.Memory* %call1_405673, %struct.Memory** %MEMORY

  %loadMem2_405673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405673 = load i64, i64* %3
  %call2_405673 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_405673, %struct.Memory* %loadMem2_405673)
  store %struct.Memory* %call2_405673, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x890(%rbp)	 RIP: 405678	 Bytes: 6
  %loadMem_405678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405678 = call %struct.Memory* @routine_movl__eax__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405678)
  store %struct.Memory* %call_405678, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40571a	 RIP: 40567e	 Bytes: 5
  %loadMem_40567e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40567e = call %struct.Memory* @routine_jmpq_.L_40571a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40567e, i64 156, i64 5)
  store %struct.Memory* %call_40567e, %struct.Memory** %MEMORY

  br label %block_.L_40571a

  ; Code: .L_405683:	 RIP: 405683	 Bytes: 0
block_.L_405683:

  ; Code: leaq -0x880(%rbp), %rax	 RIP: 405683	 Bytes: 7
  %loadMem_405683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405683 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405683)
  store %struct.Memory* %call_405683, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 40568a	 Bytes: 4
  %loadMem_40568a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40568a = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40568a)
  store %struct.Memory* %call_40568a, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rcx	 RIP: 40568e	 Bytes: 4
  %loadMem_40568e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40568e = call %struct.Memory* @routine_shlq__0x8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40568e)
  store %struct.Memory* %call_40568e, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405692	 Bytes: 3
  %loadMem_405692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405692 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405692)
  store %struct.Memory* %call_405692, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 405695	 Bytes: 4
  %loadMem_405695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405695 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405695)
  store %struct.Memory* %call_405695, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 405699	 Bytes: 4
  %loadMem_405699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405699 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405699)
  store %struct.Memory* %call_405699, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40569d	 Bytes: 3
  %loadMem_40569d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40569d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40569d)
  store %struct.Memory* %call_40569d, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4056a0	 Bytes: 4
  %loadMem_4056a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056a0 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056a0)
  store %struct.Memory* %call_4056a0, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4056a4	 Bytes: 4
  %loadMem_4056a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056a4 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056a4)
  store %struct.Memory* %call_4056a4, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4056a8	 Bytes: 3
  %loadMem_4056a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056a8 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056a8)
  store %struct.Memory* %call_4056a8, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 4056ab	 Bytes: 4
  %loadMem_4056ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056ab = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056ab)
  store %struct.Memory* %call_4056ab, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edi	 RIP: 4056af	 Bytes: 3
  %loadMem_4056af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056af = call %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056af)
  store %struct.Memory* %call_4056af, %struct.Memory** %MEMORY

  ; Code: callq .abs_plt	 RIP: 4056b2	 Bytes: 5
  %loadMem1_4056b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4056b2 = call %struct.Memory* @routine_callq_.abs_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4056b2, i64 -18098, i64 5, i64 5)
  store %struct.Memory* %call1_4056b2, %struct.Memory** %MEMORY

  %loadMem2_4056b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4056b2 = load i64, i64* %3
  %call2_4056b2 = call %struct.Memory* @ext_abs(%struct.State* %0, i64  %loadPC_4056b2, %struct.Memory* %loadMem2_4056b2)
  store %struct.Memory* %call2_4056b2, %struct.Memory** %MEMORY

  ; Code: movq $0x710020, %rcx	 RIP: 4056b7	 Bytes: 10
  %loadMem_4056b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056b7 = call %struct.Memory* @routine_movq__0x710020___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056b7)
  store %struct.Memory* %call_4056b7, %struct.Memory** %MEMORY

  ; Code: movq $0x70e8f0, %rdx	 RIP: 4056c1	 Bytes: 10
  %loadMem_4056c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056c1 = call %struct.Memory* @routine_movq__0x70e8f0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056c1)
  store %struct.Memory* %call_4056c1, %struct.Memory** %MEMORY

  ; Code: movslq -0x898(%rbp), %rsi	 RIP: 4056cb	 Bytes: 7
  %loadMem_4056cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056cb = call %struct.Memory* @routine_movslq_MINUS0x898__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056cb)
  store %struct.Memory* %call_4056cb, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4056d2	 Bytes: 4
  %loadMem_4056d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056d2 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056d2)
  store %struct.Memory* %call_4056d2, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4056d6	 Bytes: 3
  %loadMem_4056d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056d6 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056d6)
  store %struct.Memory* %call_4056d6, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rsi	 RIP: 4056d9	 Bytes: 4
  %loadMem_4056d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056d9 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056d9)
  store %struct.Memory* %call_4056d9, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 4056dd	 Bytes: 4
  %loadMem_4056dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056dd = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056dd)
  store %struct.Memory* %call_4056dd, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4056e1	 Bytes: 3
  %loadMem_4056e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056e1 = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056e1)
  store %struct.Memory* %call_4056e1, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 4056e4	 Bytes: 4
  %loadMem_4056e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056e4 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056e4)
  store %struct.Memory* %call_4056e4, %struct.Memory** %MEMORY

  ; Code: imull (%rdx,%rsi,4), %eax	 RIP: 4056e8	 Bytes: 4
  %loadMem_4056e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056e8 = call %struct.Memory* @routine_imull___rdx__rsi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056e8)
  store %struct.Memory* %call_4056e8, %struct.Memory** %MEMORY

  ; Code: movslq -0x894(%rbp), %rdx	 RIP: 4056ec	 Bytes: 7
  %loadMem_4056ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056ec = call %struct.Memory* @routine_movslq_MINUS0x894__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056ec)
  store %struct.Memory* %call_4056ec, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 4056f3	 Bytes: 4
  %loadMem_4056f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056f3 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056f3)
  store %struct.Memory* %call_4056f3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 4056f7	 Bytes: 3
  %loadMem_4056f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056f7 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056f7)
  store %struct.Memory* %call_4056f7, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 4056fa	 Bytes: 4
  %loadMem_4056fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056fa = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056fa)
  store %struct.Memory* %call_4056fa, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 4056fe	 Bytes: 4
  %loadMem_4056fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4056fe = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4056fe)
  store %struct.Memory* %call_4056fe, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 405702	 Bytes: 3
  %loadMem_405702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405702 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405702)
  store %struct.Memory* %call_405702, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 405705	 Bytes: 4
  %loadMem_405705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405705 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405705)
  store %struct.Memory* %call_405705, %struct.Memory** %MEMORY

  ; Code: addl (%rcx,%rdx,4), %eax	 RIP: 405709	 Bytes: 3
  %loadMem_405709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405709 = call %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405709)
  store %struct.Memory* %call_405709, %struct.Memory** %MEMORY

  ; Code: movl -0x89c(%rbp), %ecx	 RIP: 40570c	 Bytes: 6
  %loadMem_40570c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40570c = call %struct.Memory* @routine_movl_MINUS0x89c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40570c)
  store %struct.Memory* %call_40570c, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %eax	 RIP: 405712	 Bytes: 2
  %loadMem_405712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405712 = call %struct.Memory* @routine_sarl__cl___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405712)
  store %struct.Memory* %call_405712, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x890(%rbp)	 RIP: 405714	 Bytes: 6
  %loadMem_405714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405714 = call %struct.Memory* @routine_movl__eax__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405714)
  store %struct.Memory* %call_405714, %struct.Memory** %MEMORY

  ; Code: .L_40571a:	 RIP: 40571a	 Bytes: 0
  br label %block_.L_40571a
block_.L_40571a:

  ; Code: cmpl $0x0, -0x890(%rbp)	 RIP: 40571a	 Bytes: 7
  %loadMem_40571a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40571a = call %struct.Memory* @routine_cmpl__0x0__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40571a)
  store %struct.Memory* %call_40571a, %struct.Memory** %MEMORY

  ; Code: je .L_4057ac	 RIP: 405721	 Bytes: 6
  %loadMem_405721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405721 = call %struct.Memory* @routine_je_.L_4057ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405721, i8* %BRANCH_TAKEN, i64 139, i64 6, i64 6)
  store %struct.Memory* %call_405721, %struct.Memory** %MEMORY

  %loadBr_405721 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405721 = icmp eq i8 %loadBr_405721, 1
  br i1 %cmpBr_405721, label %block_.L_4057ac, label %block_405727

block_405727:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 405727	 Bytes: 7
  %loadMem_405727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405727 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405727)
  store %struct.Memory* %call_405727, %struct.Memory** %MEMORY

  ; Code: movl $0xf, -0x8a0(%rbp)	 RIP: 40572e	 Bytes: 10
  %loadMem_40572e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40572e = call %struct.Memory* @routine_movl__0xf__MINUS0x8a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40572e)
  store %struct.Memory* %call_40572e, %struct.Memory** %MEMORY

  ; Code: movl -0x890(%rbp), %edi	 RIP: 405738	 Bytes: 6
  %loadMem_405738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405738 = call %struct.Memory* @routine_movl_MINUS0x890__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405738)
  store %struct.Memory* %call_405738, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 40573e	 Bytes: 4
  %loadMem_40573e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40573e = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40573e)
  store %struct.Memory* %call_40573e, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rcx	 RIP: 405742	 Bytes: 4
  %loadMem_405742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405742 = call %struct.Memory* @routine_shlq__0x8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405742)
  store %struct.Memory* %call_405742, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405746	 Bytes: 3
  %loadMem_405746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405746 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405746)
  store %struct.Memory* %call_405746, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 405749	 Bytes: 4
  %loadMem_405749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405749 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405749)
  store %struct.Memory* %call_405749, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 40574d	 Bytes: 4
  %loadMem_40574d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40574d = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40574d)
  store %struct.Memory* %call_40574d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405751	 Bytes: 3
  %loadMem_405751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405751 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405751)
  store %struct.Memory* %call_405751, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 405754	 Bytes: 4
  %loadMem_405754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405754 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405754)
  store %struct.Memory* %call_405754, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 405758	 Bytes: 4
  %loadMem_405758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405758 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405758)
  store %struct.Memory* %call_405758, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40575c	 Bytes: 3
  %loadMem_40575c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40575c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40575c)
  store %struct.Memory* %call_40575c, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 40575f	 Bytes: 4
  %loadMem_40575f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40575f = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40575f)
  store %struct.Memory* %call_40575f, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %esi	 RIP: 405763	 Bytes: 3
  %loadMem_405763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405763 = call %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405763)
  store %struct.Memory* %call_405763, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 405766	 Bytes: 5
  %loadMem1_405766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_405766 = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_405766, i64 457194, i64 5, i64 5)
  store %struct.Memory* %call1_405766, %struct.Memory** %MEMORY

  %loadMem2_405766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_405766 = load i64, i64* %3
  %call2_405766 = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_405766, %struct.Memory* %loadMem2_405766)
  store %struct.Memory* %call2_405766, %struct.Memory** %MEMORY

  ; Code: movq -0x8c8(%rbp), %rcx	 RIP: 40576b	 Bytes: 7
  %loadMem_40576b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40576b = call %struct.Memory* @routine_movq_MINUS0x8c8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40576b)
  store %struct.Memory* %call_40576b, %struct.Memory** %MEMORY

  ; Code: movslq -0x888(%rbp), %rdx	 RIP: 405772	 Bytes: 7
  %loadMem_405772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405772 = call %struct.Memory* @routine_movslq_MINUS0x888__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405772)
  store %struct.Memory* %call_405772, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 405779	 Bytes: 3
  %loadMem_405779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405779 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405779)
  store %struct.Memory* %call_405779, %struct.Memory** %MEMORY

  ; Code: movl -0x884(%rbp), %eax	 RIP: 40577c	 Bytes: 6
  %loadMem_40577c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40577c = call %struct.Memory* @routine_movl_MINUS0x884__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40577c)
  store %struct.Memory* %call_40577c, %struct.Memory** %MEMORY

  ; Code: movq -0x8d0(%rbp), %rcx	 RIP: 405782	 Bytes: 7
  %loadMem_405782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405782 = call %struct.Memory* @routine_movq_MINUS0x8d0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405782)
  store %struct.Memory* %call_405782, %struct.Memory** %MEMORY

  ; Code: movslq -0x888(%rbp), %rdx	 RIP: 405789	 Bytes: 7
  %loadMem_405789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405789 = call %struct.Memory* @routine_movslq_MINUS0x888__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405789)
  store %struct.Memory* %call_405789, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdx,4)	 RIP: 405790	 Bytes: 3
  %loadMem_405790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405790 = call %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405790)
  store %struct.Memory* %call_405790, %struct.Memory** %MEMORY

  ; Code: movl -0x888(%rbp), %eax	 RIP: 405793	 Bytes: 6
  %loadMem_405793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405793 = call %struct.Memory* @routine_movl_MINUS0x888__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405793)
  store %struct.Memory* %call_405793, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405799	 Bytes: 3
  %loadMem_405799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405799 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405799)
  store %struct.Memory* %call_405799, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x888(%rbp)	 RIP: 40579c	 Bytes: 6
  %loadMem_40579c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40579c = call %struct.Memory* @routine_movl__eax__MINUS0x888__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40579c)
  store %struct.Memory* %call_40579c, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x884(%rbp)	 RIP: 4057a2	 Bytes: 10
  %loadMem_4057a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057a2 = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x884__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057a2)
  store %struct.Memory* %call_4057a2, %struct.Memory** %MEMORY

  ; Code: .L_4057ac:	 RIP: 4057ac	 Bytes: 0
  br label %block_.L_4057ac
block_.L_4057ac:

  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 4057ac	 Bytes: 7
  %loadMem_4057ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057ac = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057ac)
  store %struct.Memory* %call_4057ac, %struct.Memory** %MEMORY

  ; Code: jne .L_405913	 RIP: 4057b3	 Bytes: 6
  %loadMem_4057b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057b3 = call %struct.Memory* @routine_jne_.L_405913(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057b3, i8* %BRANCH_TAKEN, i64 352, i64 6, i64 6)
  store %struct.Memory* %call_4057b3, %struct.Memory** %MEMORY

  %loadBr_4057b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4057b3 = icmp eq i8 %loadBr_4057b3, 1
  br i1 %cmpBr_4057b3, label %block_.L_405913, label %block_4057b9

block_4057b9:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 4057b9	 Bytes: 7
  %loadMem_4057b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057b9 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057b9)
  store %struct.Memory* %call_4057b9, %struct.Memory** %MEMORY

  ; Code: movl -0x890(%rbp), %edi	 RIP: 4057c0	 Bytes: 6
  %loadMem_4057c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057c0 = call %struct.Memory* @routine_movl_MINUS0x890__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057c0)
  store %struct.Memory* %call_4057c0, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 4057c6	 Bytes: 4
  %loadMem_4057c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057c6 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057c6)
  store %struct.Memory* %call_4057c6, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rcx	 RIP: 4057ca	 Bytes: 4
  %loadMem_4057ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057ca = call %struct.Memory* @routine_shlq__0x8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057ca)
  store %struct.Memory* %call_4057ca, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4057ce	 Bytes: 3
  %loadMem_4057ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057ce = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057ce)
  store %struct.Memory* %call_4057ce, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4057d1	 Bytes: 4
  %loadMem_4057d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057d1 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057d1)
  store %struct.Memory* %call_4057d1, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4057d5	 Bytes: 4
  %loadMem_4057d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057d5 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057d5)
  store %struct.Memory* %call_4057d5, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4057d9	 Bytes: 3
  %loadMem_4057d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057d9 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057d9)
  store %struct.Memory* %call_4057d9, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4057dc	 Bytes: 4
  %loadMem_4057dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057dc = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057dc)
  store %struct.Memory* %call_4057dc, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4057e0	 Bytes: 4
  %loadMem_4057e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057e0 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057e0)
  store %struct.Memory* %call_4057e0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4057e4	 Bytes: 3
  %loadMem_4057e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057e4 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057e4)
  store %struct.Memory* %call_4057e4, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 4057e7	 Bytes: 4
  %loadMem_4057e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057e7 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057e7)
  store %struct.Memory* %call_4057e7, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %esi	 RIP: 4057eb	 Bytes: 3
  %loadMem_4057eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057eb = call %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057eb)
  store %struct.Memory* %call_4057eb, %struct.Memory** %MEMORY

  ; Code: callq .sign	 RIP: 4057ee	 Bytes: 5
  %loadMem1_4057ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4057ee = call %struct.Memory* @routine_callq_.sign(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4057ee, i64 457058, i64 5, i64 5)
  store %struct.Memory* %call1_4057ee, %struct.Memory** %MEMORY

  %loadMem2_4057ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4057ee = load i64, i64* %3
  %call2_4057ee = call %struct.Memory* @sub_475150.sign(%struct.State* %0, i64  %loadPC_4057ee, %struct.Memory* %loadMem2_4057ee)
  store %struct.Memory* %call2_4057ee, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x890(%rbp)	 RIP: 4057f3	 Bytes: 6
  %loadMem_4057f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057f3 = call %struct.Memory* @routine_movl__eax__MINUS0x890__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057f3)
  store %struct.Memory* %call_4057f3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0x894(%rbp)	 RIP: 4057f9	 Bytes: 7
  %loadMem_4057f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4057f9 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x894__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4057f9)
  store %struct.Memory* %call_4057f9, %struct.Memory** %MEMORY

  ; Code: jge .L_4058a1	 RIP: 405800	 Bytes: 6
  %loadMem_405800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405800 = call %struct.Memory* @routine_jge_.L_4058a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405800, i8* %BRANCH_TAKEN, i64 161, i64 6, i64 6)
  store %struct.Memory* %call_405800, %struct.Memory** %MEMORY

  %loadBr_405800 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405800 = icmp eq i8 %loadBr_405800, 1
  br i1 %cmpBr_405800, label %block_.L_4058a1, label %block_405806

block_405806:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 405806	 Bytes: 7
  %loadMem_405806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405806 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405806)
  store %struct.Memory* %call_405806, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %ecx	 RIP: 40580d	 Bytes: 5
  %loadMem_40580d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40580d = call %struct.Memory* @routine_movl__0x4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40580d)
  store %struct.Memory* %call_40580d, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %edx	 RIP: 405812	 Bytes: 5
  %loadMem_405812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405812 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405812)
  store %struct.Memory* %call_405812, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %esi	 RIP: 405817	 Bytes: 5
  %loadMem_405817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405817 = call %struct.Memory* @routine_movl__0x3___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405817)
  store %struct.Memory* %call_405817, %struct.Memory** %MEMORY

  ; Code: movq $0x70d010, %rdi	 RIP: 40581c	 Bytes: 10
  %loadMem_40581c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40581c = call %struct.Memory* @routine_movq__0x70d010___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40581c)
  store %struct.Memory* %call_40581c, %struct.Memory** %MEMORY

  ; Code: movl -0x890(%rbp), %r8d	 RIP: 405826	 Bytes: 7
  %loadMem_405826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405826 = call %struct.Memory* @routine_movl_MINUS0x890__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405826)
  store %struct.Memory* %call_405826, %struct.Memory** %MEMORY

  ; Code: movslq -0x898(%rbp), %r9	 RIP: 40582d	 Bytes: 7
  %loadMem_40582d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40582d = call %struct.Memory* @routine_movslq_MINUS0x898__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40582d)
  store %struct.Memory* %call_40582d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %r9	 RIP: 405834	 Bytes: 4
  %loadMem_405834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405834 = call %struct.Memory* @routine_shlq__0x6___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405834)
  store %struct.Memory* %call_405834, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rdi	 RIP: 405838	 Bytes: 3
  %loadMem_405838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405838 = call %struct.Memory* @routine_addq__r9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405838)
  store %struct.Memory* %call_405838, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %r9	 RIP: 40583b	 Bytes: 4
  %loadMem_40583b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40583b = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40583b)
  store %struct.Memory* %call_40583b, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %r9	 RIP: 40583f	 Bytes: 4
  %loadMem_40583f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40583f = call %struct.Memory* @routine_shlq__0x4___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40583f)
  store %struct.Memory* %call_40583f, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rdi	 RIP: 405843	 Bytes: 3
  %loadMem_405843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405843 = call %struct.Memory* @routine_addq__r9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405843)
  store %struct.Memory* %call_405843, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r9	 RIP: 405846	 Bytes: 4
  %loadMem_405846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405846 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405846)
  store %struct.Memory* %call_405846, %struct.Memory** %MEMORY

  ; Code: imull (%rdi,%r9,4), %r8d	 RIP: 40584a	 Bytes: 5
  %loadMem_40584a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40584a = call %struct.Memory* @routine_imull___rdi__r9_4____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40584a)
  store %struct.Memory* %call_40584a, %struct.Memory** %MEMORY

  ; Code: subl -0x894(%rbp), %esi	 RIP: 40584f	 Bytes: 6
  %loadMem_40584f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40584f = call %struct.Memory* @routine_subl_MINUS0x894__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40584f)
  store %struct.Memory* %call_40584f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x900(%rbp)	 RIP: 405855	 Bytes: 6
  %loadMem_405855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405855 = call %struct.Memory* @routine_movl__ecx__MINUS0x900__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405855)
  store %struct.Memory* %call_405855, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 40585b	 Bytes: 2
  %loadMem_40585b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40585b = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40585b)
  store %struct.Memory* %call_40585b, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 40585d	 Bytes: 2
  %loadMem_40585d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40585d = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40585d)
  store %struct.Memory* %call_40585d, %struct.Memory** %MEMORY

  ; Code: addl %edx, %r8d	 RIP: 40585f	 Bytes: 3
  %loadMem_40585f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40585f = call %struct.Memory* @routine_addl__edx___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40585f)
  store %struct.Memory* %call_40585f, %struct.Memory** %MEMORY

  ; Code: movl -0x900(%rbp), %edx	 RIP: 405862	 Bytes: 6
  %loadMem_405862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405862 = call %struct.Memory* @routine_movl_MINUS0x900__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405862)
  store %struct.Memory* %call_405862, %struct.Memory** %MEMORY

  ; Code: subl -0x894(%rbp), %edx	 RIP: 405868	 Bytes: 6
  %loadMem_405868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405868 = call %struct.Memory* @routine_subl_MINUS0x894__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405868)
  store %struct.Memory* %call_405868, %struct.Memory** %MEMORY

  ; Code: movl %edx, %ecx	 RIP: 40586e	 Bytes: 2
  %loadMem_40586e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40586e = call %struct.Memory* @routine_movl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40586e)
  store %struct.Memory* %call_40586e, %struct.Memory** %MEMORY

  ; Code: sarl %cl, %r8d	 RIP: 405870	 Bytes: 3
  %loadMem_405870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405870 = call %struct.Memory* @routine_sarl__cl___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405870)
  store %struct.Memory* %call_405870, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdi	 RIP: 405873	 Bytes: 4
  %loadMem_405873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405873 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405873)
  store %struct.Memory* %call_405873, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdi	 RIP: 405877	 Bytes: 4
  %loadMem_405877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405877 = call %struct.Memory* @routine_shlq__0x8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405877)
  store %struct.Memory* %call_405877, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rax	 RIP: 40587b	 Bytes: 3
  %loadMem_40587b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40587b = call %struct.Memory* @routine_addq__rdi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40587b)
  store %struct.Memory* %call_40587b, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdi	 RIP: 40587e	 Bytes: 4
  %loadMem_40587e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40587e = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40587e)
  store %struct.Memory* %call_40587e, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 405882	 Bytes: 4
  %loadMem_405882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405882 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405882)
  store %struct.Memory* %call_405882, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rax	 RIP: 405886	 Bytes: 3
  %loadMem_405886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405886 = call %struct.Memory* @routine_addq__rdi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405886)
  store %struct.Memory* %call_405886, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdi	 RIP: 405889	 Bytes: 4
  %loadMem_405889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405889 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405889)
  store %struct.Memory* %call_405889, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 40588d	 Bytes: 4
  %loadMem_40588d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40588d = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40588d)
  store %struct.Memory* %call_40588d, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rax	 RIP: 405891	 Bytes: 3
  %loadMem_405891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405891 = call %struct.Memory* @routine_addq__rdi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405891)
  store %struct.Memory* %call_405891, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdi	 RIP: 405894	 Bytes: 4
  %loadMem_405894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405894 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405894)
  store %struct.Memory* %call_405894, %struct.Memory** %MEMORY

  ; Code: movl %r8d, (%rax,%rdi,4)	 RIP: 405898	 Bytes: 4
  %loadMem_405898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405898 = call %struct.Memory* @routine_movl__r8d____rax__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405898)
  store %struct.Memory* %call_405898, %struct.Memory** %MEMORY

  ; Code: jmpq .L_40590e	 RIP: 40589c	 Bytes: 5
  %loadMem_40589c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40589c = call %struct.Memory* @routine_jmpq_.L_40590e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40589c, i64 114, i64 5)
  store %struct.Memory* %call_40589c, %struct.Memory** %MEMORY

  br label %block_.L_40590e

  ; Code: .L_4058a1:	 RIP: 4058a1	 Bytes: 0
block_.L_4058a1:

  ; Code: leaq -0x880(%rbp), %rax	 RIP: 4058a1	 Bytes: 7
  %loadMem_4058a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058a1 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058a1)
  store %struct.Memory* %call_4058a1, %struct.Memory** %MEMORY

  ; Code: movq $0x70d010, %rcx	 RIP: 4058a8	 Bytes: 10
  %loadMem_4058a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058a8 = call %struct.Memory* @routine_movq__0x70d010___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058a8)
  store %struct.Memory* %call_4058a8, %struct.Memory** %MEMORY

  ; Code: movl -0x890(%rbp), %edx	 RIP: 4058b2	 Bytes: 6
  %loadMem_4058b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058b2 = call %struct.Memory* @routine_movl_MINUS0x890__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058b2)
  store %struct.Memory* %call_4058b2, %struct.Memory** %MEMORY

  ; Code: movslq -0x898(%rbp), %rsi	 RIP: 4058b8	 Bytes: 7
  %loadMem_4058b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058b8 = call %struct.Memory* @routine_movslq_MINUS0x898__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058b8)
  store %struct.Memory* %call_4058b8, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4058bf	 Bytes: 4
  %loadMem_4058bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058bf = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058bf)
  store %struct.Memory* %call_4058bf, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 4058c3	 Bytes: 3
  %loadMem_4058c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058c3 = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058c3)
  store %struct.Memory* %call_4058c3, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rsi	 RIP: 4058c6	 Bytes: 4
  %loadMem_4058c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058c6 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058c6)
  store %struct.Memory* %call_4058c6, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 4058ca	 Bytes: 4
  %loadMem_4058ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058ca = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058ca)
  store %struct.Memory* %call_4058ca, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rcx	 RIP: 4058ce	 Bytes: 3
  %loadMem_4058ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058ce = call %struct.Memory* @routine_addq__rsi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058ce)
  store %struct.Memory* %call_4058ce, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 4058d1	 Bytes: 4
  %loadMem_4058d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058d1 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058d1)
  store %struct.Memory* %call_4058d1, %struct.Memory** %MEMORY

  ; Code: imull (%rcx,%rsi,4), %edx	 RIP: 4058d5	 Bytes: 4
  %loadMem_4058d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058d5 = call %struct.Memory* @routine_imull___rcx__rsi_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058d5)
  store %struct.Memory* %call_4058d5, %struct.Memory** %MEMORY

  ; Code: movl -0x894(%rbp), %edi	 RIP: 4058d9	 Bytes: 6
  %loadMem_4058d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058d9 = call %struct.Memory* @routine_movl_MINUS0x894__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058d9)
  store %struct.Memory* %call_4058d9, %struct.Memory** %MEMORY

  ; Code: subl $0x4, %edi	 RIP: 4058df	 Bytes: 3
  %loadMem_4058df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058df = call %struct.Memory* @routine_subl__0x4___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058df)
  store %struct.Memory* %call_4058df, %struct.Memory** %MEMORY

  ; Code: movl %edi, %ecx	 RIP: 4058e2	 Bytes: 2
  %loadMem_4058e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058e2 = call %struct.Memory* @routine_movl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058e2)
  store %struct.Memory* %call_4058e2, %struct.Memory** %MEMORY

  ; Code: shll %cl, %edx	 RIP: 4058e4	 Bytes: 2
  %loadMem_4058e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058e4 = call %struct.Memory* @routine_shll__cl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058e4)
  store %struct.Memory* %call_4058e4, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rsi	 RIP: 4058e6	 Bytes: 4
  %loadMem_4058e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058e6 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058e6)
  store %struct.Memory* %call_4058e6, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rsi	 RIP: 4058ea	 Bytes: 4
  %loadMem_4058ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058ea = call %struct.Memory* @routine_shlq__0x8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058ea)
  store %struct.Memory* %call_4058ea, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 4058ee	 Bytes: 3
  %loadMem_4058ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058ee = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058ee)
  store %struct.Memory* %call_4058ee, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rsi	 RIP: 4058f1	 Bytes: 4
  %loadMem_4058f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058f1 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058f1)
  store %struct.Memory* %call_4058f1, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4058f5	 Bytes: 4
  %loadMem_4058f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058f5 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058f5)
  store %struct.Memory* %call_4058f5, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 4058f9	 Bytes: 3
  %loadMem_4058f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058f9 = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058f9)
  store %struct.Memory* %call_4058f9, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 4058fc	 Bytes: 4
  %loadMem_4058fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4058fc = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4058fc)
  store %struct.Memory* %call_4058fc, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rsi	 RIP: 405900	 Bytes: 4
  %loadMem_405900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405900 = call %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405900)
  store %struct.Memory* %call_405900, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rax	 RIP: 405904	 Bytes: 3
  %loadMem_405904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405904 = call %struct.Memory* @routine_addq__rsi___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405904)
  store %struct.Memory* %call_405904, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rsi	 RIP: 405907	 Bytes: 4
  %loadMem_405907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405907 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405907)
  store %struct.Memory* %call_405907, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rsi,4)	 RIP: 40590b	 Bytes: 3
  %loadMem_40590b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40590b = call %struct.Memory* @routine_movl__edx____rax__rsi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40590b)
  store %struct.Memory* %call_40590b, %struct.Memory** %MEMORY

  ; Code: .L_40590e:	 RIP: 40590e	 Bytes: 0
  br label %block_.L_40590e
block_.L_40590e:

  ; Code: jmpq .L_405913	 RIP: 40590e	 Bytes: 5
  %loadMem_40590e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40590e = call %struct.Memory* @routine_jmpq_.L_405913(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40590e, i64 5, i64 5)
  store %struct.Memory* %call_40590e, %struct.Memory** %MEMORY

  br label %block_.L_405913

  ; Code: .L_405913:	 RIP: 405913	 Bytes: 0
block_.L_405913:

  ; Code: jmpq .L_405918	 RIP: 405913	 Bytes: 5
  %loadMem_405913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405913 = call %struct.Memory* @routine_jmpq_.L_405918(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405913, i64 5, i64 5)
  store %struct.Memory* %call_405913, %struct.Memory** %MEMORY

  br label %block_.L_405918

  ; Code: .L_405918:	 RIP: 405918	 Bytes: 0
block_.L_405918:

  ; Code: movl -0x88c(%rbp), %eax	 RIP: 405918	 Bytes: 6
  %loadMem_405918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405918 = call %struct.Memory* @routine_movl_MINUS0x88c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405918)
  store %struct.Memory* %call_405918, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40591e	 Bytes: 3
  %loadMem_40591e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40591e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40591e)
  store %struct.Memory* %call_40591e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x88c(%rbp)	 RIP: 405921	 Bytes: 6
  %loadMem_405921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405921 = call %struct.Memory* @routine_movl__eax__MINUS0x88c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405921)
  store %struct.Memory* %call_405921, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405596	 RIP: 405927	 Bytes: 5
  %loadMem_405927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405927 = call %struct.Memory* @routine_jmpq_.L_405596(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405927, i64 -913, i64 5)
  store %struct.Memory* %call_405927, %struct.Memory** %MEMORY

  br label %block_.L_405596

  ; Code: .L_40592c:	 RIP: 40592c	 Bytes: 0
block_.L_40592c:

  ; Code: movq -0x8c8(%rbp), %rax	 RIP: 40592c	 Bytes: 7
  %loadMem_40592c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40592c = call %struct.Memory* @routine_movq_MINUS0x8c8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40592c)
  store %struct.Memory* %call_40592c, %struct.Memory** %MEMORY

  ; Code: movslq -0x888(%rbp), %rcx	 RIP: 405933	 Bytes: 7
  %loadMem_405933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405933 = call %struct.Memory* @routine_movslq_MINUS0x888__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405933)
  store %struct.Memory* %call_405933, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax,%rcx,4)	 RIP: 40593a	 Bytes: 7
  %loadMem_40593a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40593a = call %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40593a)
  store %struct.Memory* %call_40593a, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 405941	 Bytes: 7
  %loadMem_405941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405941 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405941)
  store %struct.Memory* %call_405941, %struct.Memory** %MEMORY

  ; Code: .L_405948:	 RIP: 405948	 Bytes: 0
  br label %block_.L_405948
block_.L_405948:

  ; Code: xorl %eax, %eax	 RIP: 405948	 Bytes: 2
  %loadMem_405948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405948 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405948)
  store %struct.Memory* %call_405948, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 40594a	 Bytes: 2
  %loadMem_40594a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40594a = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40594a)
  store %struct.Memory* %call_40594a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 40594c	 Bytes: 4
  %loadMem_40594c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40594c = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40594c)
  store %struct.Memory* %call_40594c, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x901(%rbp)	 RIP: 405950	 Bytes: 6
  %loadMem_405950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405950 = call %struct.Memory* @routine_movb__cl__MINUS0x901__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405950)
  store %struct.Memory* %call_405950, %struct.Memory** %MEMORY

  ; Code: jge .L_40596e	 RIP: 405956	 Bytes: 6
  %loadMem_405956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405956 = call %struct.Memory* @routine_jge_.L_40596e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405956, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_405956, %struct.Memory** %MEMORY

  %loadBr_405956 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405956 = icmp eq i8 %loadBr_405956, 1
  br i1 %cmpBr_405956, label %block_.L_40596e, label %block_40595c

block_40595c:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 40595c	 Bytes: 7
  %loadMem_40595c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40595c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40595c)
  store %struct.Memory* %call_40595c, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 405963	 Bytes: 3
  %loadMem_405963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405963 = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405963)
  store %struct.Memory* %call_405963, %struct.Memory** %MEMORY

  ; Code: xorb $0xff, %al	 RIP: 405966	 Bytes: 2
  %loadMem_405966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405966 = call %struct.Memory* @routine_xorb__0xff___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405966)
  store %struct.Memory* %call_405966, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x901(%rbp)	 RIP: 405968	 Bytes: 6
  %loadMem_405968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405968 = call %struct.Memory* @routine_movb__al__MINUS0x901__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405968)
  store %struct.Memory* %call_405968, %struct.Memory** %MEMORY

  ; Code: .L_40596e:	 RIP: 40596e	 Bytes: 0
  br label %block_.L_40596e
block_.L_40596e:

  ; Code: movb -0x901(%rbp), %al	 RIP: 40596e	 Bytes: 6
  %loadMem_40596e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40596e = call %struct.Memory* @routine_movb_MINUS0x901__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40596e)
  store %struct.Memory* %call_40596e, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 405974	 Bytes: 2
  %loadMem_405974 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405974 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405974)
  store %struct.Memory* %call_405974, %struct.Memory** %MEMORY

  ; Code: jne .L_405981	 RIP: 405976	 Bytes: 6
  %loadMem_405976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405976 = call %struct.Memory* @routine_jne_.L_405981(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405976, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_405976, %struct.Memory** %MEMORY

  %loadBr_405976 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405976 = icmp eq i8 %loadBr_405976, 1
  br i1 %cmpBr_405976, label %block_.L_405981, label %block_40597c

block_40597c:
  ; Code: jmpq .L_405aed	 RIP: 40597c	 Bytes: 5
  %loadMem_40597c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40597c = call %struct.Memory* @routine_jmpq_.L_405aed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40597c, i64 369, i64 5)
  store %struct.Memory* %call_40597c, %struct.Memory** %MEMORY

  br label %block_.L_405aed

  ; Code: .L_405981:	 RIP: 405981	 Bytes: 0
block_.L_405981:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 405981	 Bytes: 7
  %loadMem_405981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405981 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405981)
  store %struct.Memory* %call_405981, %struct.Memory** %MEMORY

  ; Code: .L_405988:	 RIP: 405988	 Bytes: 0
  br label %block_.L_405988
block_.L_405988:

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 405988	 Bytes: 4
  %loadMem_405988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405988 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405988)
  store %struct.Memory* %call_405988, %struct.Memory** %MEMORY

  ; Code: jge .L_4059da	 RIP: 40598c	 Bytes: 6
  %loadMem_40598c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40598c = call %struct.Memory* @routine_jge_.L_4059da(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40598c, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_40598c, %struct.Memory** %MEMORY

  %loadBr_40598c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40598c = icmp eq i8 %loadBr_40598c, 1
  br i1 %cmpBr_40598c, label %block_.L_4059da, label %block_405992

block_405992:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 405992	 Bytes: 7
  %loadMem_405992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405992 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405992)
  store %struct.Memory* %call_405992, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 405999	 Bytes: 4
  %loadMem_405999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405999 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405999)
  store %struct.Memory* %call_405999, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rcx	 RIP: 40599d	 Bytes: 4
  %loadMem_40599d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40599d = call %struct.Memory* @routine_shlq__0x8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40599d)
  store %struct.Memory* %call_40599d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4059a1	 Bytes: 3
  %loadMem_4059a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059a1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059a1)
  store %struct.Memory* %call_4059a1, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 4059a4	 Bytes: 4
  %loadMem_4059a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059a4 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059a4)
  store %struct.Memory* %call_4059a4, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4059a8	 Bytes: 4
  %loadMem_4059a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059a8 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059a8)
  store %struct.Memory* %call_4059a8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4059ac	 Bytes: 3
  %loadMem_4059ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059ac = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059ac)
  store %struct.Memory* %call_4059ac, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 4059af	 Bytes: 4
  %loadMem_4059af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059af = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059af)
  store %struct.Memory* %call_4059af, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 4059b3	 Bytes: 4
  %loadMem_4059b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059b3 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059b3)
  store %struct.Memory* %call_4059b3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4059b7	 Bytes: 3
  %loadMem_4059b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059b7 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059b7)
  store %struct.Memory* %call_4059b7, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 4059ba	 Bytes: 4
  %loadMem_4059ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059ba = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059ba)
  store %struct.Memory* %call_4059ba, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 4059be	 Bytes: 3
  %loadMem_4059be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059be = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059be)
  store %struct.Memory* %call_4059be, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rax	 RIP: 4059c1	 Bytes: 4
  %loadMem_4059c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059c1 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059c1)
  store %struct.Memory* %call_4059c1, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x470(%rbp,%rax,4)	 RIP: 4059c5	 Bytes: 7
  %loadMem_4059c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059c5 = call %struct.Memory* @routine_movl__edx__MINUS0x470__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059c5)
  store %struct.Memory* %call_4059c5, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 4059cc	 Bytes: 3
  %loadMem_4059cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059cc = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059cc)
  store %struct.Memory* %call_4059cc, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4059cf	 Bytes: 3
  %loadMem_4059cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059cf = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059cf)
  store %struct.Memory* %call_4059cf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 4059d2	 Bytes: 3
  %loadMem_4059d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059d2 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059d2)
  store %struct.Memory* %call_4059d2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405988	 RIP: 4059d5	 Bytes: 5
  %loadMem_4059d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059d5 = call %struct.Memory* @routine_jmpq_.L_405988(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059d5, i64 -77, i64 5)
  store %struct.Memory* %call_4059d5, %struct.Memory** %MEMORY

  br label %block_.L_405988

  ; Code: .L_4059da:	 RIP: 4059da	 Bytes: 0
block_.L_4059da:

  ; Code: movl -0x470(%rbp), %eax	 RIP: 4059da	 Bytes: 6
  %loadMem_4059da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059da = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059da)
  store %struct.Memory* %call_4059da, %struct.Memory** %MEMORY

  ; Code: addl -0x468(%rbp), %eax	 RIP: 4059e0	 Bytes: 6
  %loadMem_4059e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059e0 = call %struct.Memory* @routine_addl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059e0)
  store %struct.Memory* %call_4059e0, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x480(%rbp)	 RIP: 4059e6	 Bytes: 6
  %loadMem_4059e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059e6 = call %struct.Memory* @routine_movl__eax__MINUS0x480__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059e6)
  store %struct.Memory* %call_4059e6, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %eax	 RIP: 4059ec	 Bytes: 6
  %loadMem_4059ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059ec = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059ec)
  store %struct.Memory* %call_4059ec, %struct.Memory** %MEMORY

  ; Code: subl -0x468(%rbp), %eax	 RIP: 4059f2	 Bytes: 6
  %loadMem_4059f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059f2 = call %struct.Memory* @routine_subl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059f2)
  store %struct.Memory* %call_4059f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x47c(%rbp)	 RIP: 4059f8	 Bytes: 6
  %loadMem_4059f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059f8 = call %struct.Memory* @routine_movl__eax__MINUS0x47c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059f8)
  store %struct.Memory* %call_4059f8, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %eax	 RIP: 4059fe	 Bytes: 6
  %loadMem_4059fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4059fe = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4059fe)
  store %struct.Memory* %call_4059fe, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %eax	 RIP: 405a04	 Bytes: 3
  %loadMem_405a04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a04 = call %struct.Memory* @routine_sarl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a04)
  store %struct.Memory* %call_405a04, %struct.Memory** %MEMORY

  ; Code: subl -0x464(%rbp), %eax	 RIP: 405a07	 Bytes: 6
  %loadMem_405a07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a07 = call %struct.Memory* @routine_subl_MINUS0x464__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a07)
  store %struct.Memory* %call_405a07, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x478(%rbp)	 RIP: 405a0d	 Bytes: 6
  %loadMem_405a0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a0d = call %struct.Memory* @routine_movl__eax__MINUS0x478__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a0d)
  store %struct.Memory* %call_405a0d, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %eax	 RIP: 405a13	 Bytes: 6
  %loadMem_405a13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a13 = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a13)
  store %struct.Memory* %call_405a13, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 405a19	 Bytes: 6
  %loadMem_405a19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a19 = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a19)
  store %struct.Memory* %call_405a19, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %ecx	 RIP: 405a1f	 Bytes: 3
  %loadMem_405a1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a1f = call %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a1f)
  store %struct.Memory* %call_405a1f, %struct.Memory** %MEMORY

  ; Code: addl %ecx, %eax	 RIP: 405a22	 Bytes: 2
  %loadMem_405a22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a22 = call %struct.Memory* @routine_addl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a22)
  store %struct.Memory* %call_405a22, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x474(%rbp)	 RIP: 405a24	 Bytes: 6
  %loadMem_405a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a24 = call %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a24)
  store %struct.Memory* %call_405a24, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 405a2a	 Bytes: 7
  %loadMem_405a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a2a = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a2a)
  store %struct.Memory* %call_405a2a, %struct.Memory** %MEMORY

  ; Code: .L_405a31:	 RIP: 405a31	 Bytes: 0
  br label %block_.L_405a31
block_.L_405a31:

  ; Code: cmpl $0x2, -0x8(%rbp)	 RIP: 405a31	 Bytes: 4
  %loadMem_405a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a31 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a31)
  store %struct.Memory* %call_405a31, %struct.Memory** %MEMORY

  ; Code: jge .L_405ada	 RIP: 405a35	 Bytes: 6
  %loadMem_405a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a35 = call %struct.Memory* @routine_jge_.L_405ada(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a35, i8* %BRANCH_TAKEN, i64 165, i64 6, i64 6)
  store %struct.Memory* %call_405a35, %struct.Memory** %MEMORY

  %loadBr_405a35 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405a35 = icmp eq i8 %loadBr_405a35, 1
  br i1 %cmpBr_405a35, label %block_.L_405ada, label %block_405a3b

block_405a3b:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 405a3b	 Bytes: 7
  %loadMem_405a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a3b = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a3b)
  store %struct.Memory* %call_405a3b, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 405a42	 Bytes: 5
  %loadMem_405a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a42 = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a42)
  store %struct.Memory* %call_405a42, %struct.Memory** %MEMORY

  ; Code: subl -0x8(%rbp), %ecx	 RIP: 405a47	 Bytes: 3
  %loadMem_405a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a47 = call %struct.Memory* @routine_subl_MINUS0x8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a47)
  store %struct.Memory* %call_405a47, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x18(%rbp)	 RIP: 405a4a	 Bytes: 3
  %loadMem_405a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a4a = call %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a4a)
  store %struct.Memory* %call_405a4a, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405a4d	 Bytes: 4
  %loadMem_405a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a4d = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a4d)
  store %struct.Memory* %call_405a4d, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405a51	 Bytes: 7
  %loadMem_405a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a51 = call %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a51)
  store %struct.Memory* %call_405a51, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 405a58	 Bytes: 4
  %loadMem_405a58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a58 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a58)
  store %struct.Memory* %call_405a58, %struct.Memory** %MEMORY

  ; Code: addl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405a5c	 Bytes: 7
  %loadMem_405a5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a5c = call %struct.Memory* @routine_addl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a5c)
  store %struct.Memory* %call_405a5c, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405a63	 Bytes: 4
  %loadMem_405a63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a63 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a63)
  store %struct.Memory* %call_405a63, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 405a67	 Bytes: 4
  %loadMem_405a67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a67 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a67)
  store %struct.Memory* %call_405a67, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 405a6b	 Bytes: 3
  %loadMem_405a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a6b = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a6b)
  store %struct.Memory* %call_405a6b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 405a6e	 Bytes: 3
  %loadMem_405a6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a6e = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a6e)
  store %struct.Memory* %call_405a6e, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 405a71	 Bytes: 4
  %loadMem_405a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a71 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a71)
  store %struct.Memory* %call_405a71, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 405a75	 Bytes: 4
  %loadMem_405a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a75 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a75)
  store %struct.Memory* %call_405a75, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 405a79	 Bytes: 3
  %loadMem_405a79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a79 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a79)
  store %struct.Memory* %call_405a79, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 405a7c	 Bytes: 4
  %loadMem_405a7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a7c = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a7c)
  store %struct.Memory* %call_405a7c, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 405a80	 Bytes: 4
  %loadMem_405a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a80 = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a80)
  store %struct.Memory* %call_405a80, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 405a84	 Bytes: 3
  %loadMem_405a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a84 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a84)
  store %struct.Memory* %call_405a84, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 405a87	 Bytes: 4
  %loadMem_405a87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a87 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a87)
  store %struct.Memory* %call_405a87, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 405a8b	 Bytes: 3
  %loadMem_405a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a8b = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a8b)
  store %struct.Memory* %call_405a8b, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405a8e	 Bytes: 4
  %loadMem_405a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a8e = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a8e)
  store %struct.Memory* %call_405a8e, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405a92	 Bytes: 7
  %loadMem_405a92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a92 = call %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a92)
  store %struct.Memory* %call_405a92, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 405a99	 Bytes: 4
  %loadMem_405a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a99 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a99)
  store %struct.Memory* %call_405a99, %struct.Memory** %MEMORY

  ; Code: subl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405a9d	 Bytes: 7
  %loadMem_405a9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405a9d = call %struct.Memory* @routine_subl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405a9d)
  store %struct.Memory* %call_405a9d, %struct.Memory** %MEMORY

  ; Code: movslq -0x18(%rbp), %rdx	 RIP: 405aa4	 Bytes: 4
  %loadMem_405aa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aa4 = call %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aa4)
  store %struct.Memory* %call_405aa4, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 405aa8	 Bytes: 4
  %loadMem_405aa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aa8 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aa8)
  store %struct.Memory* %call_405aa8, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 405aac	 Bytes: 3
  %loadMem_405aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aac = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aac)
  store %struct.Memory* %call_405aac, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 405aaf	 Bytes: 4
  %loadMem_405aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aaf = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aaf)
  store %struct.Memory* %call_405aaf, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 405ab3	 Bytes: 4
  %loadMem_405ab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ab3 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ab3)
  store %struct.Memory* %call_405ab3, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 405ab7	 Bytes: 3
  %loadMem_405ab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ab7 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ab7)
  store %struct.Memory* %call_405ab7, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 405aba	 Bytes: 4
  %loadMem_405aba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aba = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aba)
  store %struct.Memory* %call_405aba, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 405abe	 Bytes: 4
  %loadMem_405abe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405abe = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405abe)
  store %struct.Memory* %call_405abe, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 405ac2	 Bytes: 3
  %loadMem_405ac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ac2 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ac2)
  store %struct.Memory* %call_405ac2, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 405ac5	 Bytes: 4
  %loadMem_405ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ac5 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ac5)
  store %struct.Memory* %call_405ac5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax,%rdx,4)	 RIP: 405ac9	 Bytes: 3
  %loadMem_405ac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ac9 = call %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ac9)
  store %struct.Memory* %call_405ac9, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 405acc	 Bytes: 3
  %loadMem_405acc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405acc = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405acc)
  store %struct.Memory* %call_405acc, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405acf	 Bytes: 3
  %loadMem_405acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405acf = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405acf)
  store %struct.Memory* %call_405acf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 405ad2	 Bytes: 3
  %loadMem_405ad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ad2 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ad2)
  store %struct.Memory* %call_405ad2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405a31	 RIP: 405ad5	 Bytes: 5
  %loadMem_405ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ad5 = call %struct.Memory* @routine_jmpq_.L_405a31(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ad5, i64 -164, i64 5)
  store %struct.Memory* %call_405ad5, %struct.Memory** %MEMORY

  br label %block_.L_405a31

  ; Code: .L_405ada:	 RIP: 405ada	 Bytes: 0
block_.L_405ada:

  ; Code: jmpq .L_405adf	 RIP: 405ada	 Bytes: 5
  %loadMem_405ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ada = call %struct.Memory* @routine_jmpq_.L_405adf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ada, i64 5, i64 5)
  store %struct.Memory* %call_405ada, %struct.Memory** %MEMORY

  br label %block_.L_405adf

  ; Code: .L_405adf:	 RIP: 405adf	 Bytes: 0
block_.L_405adf:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405adf	 Bytes: 3
  %loadMem_405adf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405adf = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405adf)
  store %struct.Memory* %call_405adf, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405ae2	 Bytes: 3
  %loadMem_405ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ae2 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ae2)
  store %struct.Memory* %call_405ae2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 405ae5	 Bytes: 3
  %loadMem_405ae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ae5 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ae5)
  store %struct.Memory* %call_405ae5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405948	 RIP: 405ae8	 Bytes: 5
  %loadMem_405ae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ae8 = call %struct.Memory* @routine_jmpq_.L_405948(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ae8, i64 -416, i64 5)
  store %struct.Memory* %call_405ae8, %struct.Memory** %MEMORY

  br label %block_.L_405948

  ; Code: .L_405aed:	 RIP: 405aed	 Bytes: 0
block_.L_405aed:

  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 405aed	 Bytes: 7
  %loadMem_405aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405aed = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405aed)
  store %struct.Memory* %call_405aed, %struct.Memory** %MEMORY

  ; Code: .L_405af4:	 RIP: 405af4	 Bytes: 0
  br label %block_.L_405af4
block_.L_405af4:

  ; Code: xorl %eax, %eax	 RIP: 405af4	 Bytes: 2
  %loadMem_405af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405af4 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405af4)
  store %struct.Memory* %call_405af4, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 405af6	 Bytes: 2
  %loadMem_405af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405af6 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405af6)
  store %struct.Memory* %call_405af6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x4, -0x8(%rbp)	 RIP: 405af8	 Bytes: 4
  %loadMem_405af8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405af8 = call %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405af8)
  store %struct.Memory* %call_405af8, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x902(%rbp)	 RIP: 405afc	 Bytes: 6
  %loadMem_405afc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405afc = call %struct.Memory* @routine_movb__cl__MINUS0x902__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405afc)
  store %struct.Memory* %call_405afc, %struct.Memory** %MEMORY

  ; Code: jge .L_405b1a	 RIP: 405b02	 Bytes: 6
  %loadMem_405b02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b02 = call %struct.Memory* @routine_jge_.L_405b1a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b02, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_405b02, %struct.Memory** %MEMORY

  %loadBr_405b02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405b02 = icmp eq i8 %loadBr_405b02, 1
  br i1 %cmpBr_405b02, label %block_.L_405b1a, label %block_405b08

block_405b08:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 405b08	 Bytes: 7
  %loadMem_405b08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b08 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b08)
  store %struct.Memory* %call_405b08, %struct.Memory** %MEMORY

  ; Code: setne %al	 RIP: 405b0f	 Bytes: 3
  %loadMem_405b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b0f = call %struct.Memory* @routine_setne__al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b0f)
  store %struct.Memory* %call_405b0f, %struct.Memory** %MEMORY

  ; Code: xorb $0xff, %al	 RIP: 405b12	 Bytes: 2
  %loadMem_405b12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b12 = call %struct.Memory* @routine_xorb__0xff___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b12)
  store %struct.Memory* %call_405b12, %struct.Memory** %MEMORY

  ; Code: movb %al, -0x902(%rbp)	 RIP: 405b14	 Bytes: 6
  %loadMem_405b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b14 = call %struct.Memory* @routine_movb__al__MINUS0x902__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b14)
  store %struct.Memory* %call_405b14, %struct.Memory** %MEMORY

  ; Code: .L_405b1a:	 RIP: 405b1a	 Bytes: 0
  br label %block_.L_405b1a
block_.L_405b1a:

  ; Code: movb -0x902(%rbp), %al	 RIP: 405b1a	 Bytes: 6
  %loadMem_405b1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b1a = call %struct.Memory* @routine_movb_MINUS0x902__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b1a)
  store %struct.Memory* %call_405b1a, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 405b20	 Bytes: 2
  %loadMem_405b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b20 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b20)
  store %struct.Memory* %call_405b20, %struct.Memory** %MEMORY

  ; Code: jne .L_405b2d	 RIP: 405b22	 Bytes: 6
  %loadMem_405b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b22 = call %struct.Memory* @routine_jne_.L_405b2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b22, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_405b22, %struct.Memory** %MEMORY

  %loadBr_405b22 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405b22 = icmp eq i8 %loadBr_405b22, 1
  br i1 %cmpBr_405b22, label %block_.L_405b2d, label %block_405b28

block_405b28:
  ; Code: jmpq .L_405c99	 RIP: 405b28	 Bytes: 5
  %loadMem_405b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b28 = call %struct.Memory* @routine_jmpq_.L_405c99(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b28, i64 369, i64 5)
  store %struct.Memory* %call_405b28, %struct.Memory** %MEMORY

  br label %block_.L_405c99

  ; Code: .L_405b2d:	 RIP: 405b2d	 Bytes: 0
block_.L_405b2d:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 405b2d	 Bytes: 7
  %loadMem_405b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b2d = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b2d)
  store %struct.Memory* %call_405b2d, %struct.Memory** %MEMORY

  ; Code: .L_405b34:	 RIP: 405b34	 Bytes: 0
  br label %block_.L_405b34
block_.L_405b34:

  ; Code: cmpl $0x4, -0xc(%rbp)	 RIP: 405b34	 Bytes: 4
  %loadMem_405b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b34 = call %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b34)
  store %struct.Memory* %call_405b34, %struct.Memory** %MEMORY

  ; Code: jge .L_405b86	 RIP: 405b38	 Bytes: 6
  %loadMem_405b38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b38 = call %struct.Memory* @routine_jge_.L_405b86(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b38, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_405b38, %struct.Memory** %MEMORY

  %loadBr_405b38 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405b38 = icmp eq i8 %loadBr_405b38, 1
  br i1 %cmpBr_405b38, label %block_.L_405b86, label %block_405b3e

block_405b3e:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 405b3e	 Bytes: 7
  %loadMem_405b3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b3e = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b3e)
  store %struct.Memory* %call_405b3e, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 405b45	 Bytes: 4
  %loadMem_405b45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b45 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b45)
  store %struct.Memory* %call_405b45, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rcx	 RIP: 405b49	 Bytes: 4
  %loadMem_405b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b49 = call %struct.Memory* @routine_shlq__0x8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b49)
  store %struct.Memory* %call_405b49, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405b4d	 Bytes: 3
  %loadMem_405b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b4d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b4d)
  store %struct.Memory* %call_405b4d, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rcx	 RIP: 405b50	 Bytes: 4
  %loadMem_405b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b50 = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b50)
  store %struct.Memory* %call_405b50, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 405b54	 Bytes: 4
  %loadMem_405b54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b54 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b54)
  store %struct.Memory* %call_405b54, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405b58	 Bytes: 3
  %loadMem_405b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b58 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b58)
  store %struct.Memory* %call_405b58, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 405b5b	 Bytes: 4
  %loadMem_405b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b5b = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b5b)
  store %struct.Memory* %call_405b5b, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 405b5f	 Bytes: 4
  %loadMem_405b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b5f = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b5f)
  store %struct.Memory* %call_405b5f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405b63	 Bytes: 3
  %loadMem_405b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b63 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b63)
  store %struct.Memory* %call_405b63, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rcx	 RIP: 405b66	 Bytes: 4
  %loadMem_405b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b66 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b66)
  store %struct.Memory* %call_405b66, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 405b6a	 Bytes: 3
  %loadMem_405b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b6a = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b6a)
  store %struct.Memory* %call_405b6a, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rax	 RIP: 405b6d	 Bytes: 4
  %loadMem_405b6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b6d = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b6d)
  store %struct.Memory* %call_405b6d, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x470(%rbp,%rax,4)	 RIP: 405b71	 Bytes: 7
  %loadMem_405b71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b71 = call %struct.Memory* @routine_movl__edx__MINUS0x470__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b71)
  store %struct.Memory* %call_405b71, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405b78	 Bytes: 3
  %loadMem_405b78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b78 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b78)
  store %struct.Memory* %call_405b78, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405b7b	 Bytes: 3
  %loadMem_405b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b7b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b7b)
  store %struct.Memory* %call_405b7b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 405b7e	 Bytes: 3
  %loadMem_405b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b7e = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b7e)
  store %struct.Memory* %call_405b7e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405b34	 RIP: 405b81	 Bytes: 5
  %loadMem_405b81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b81 = call %struct.Memory* @routine_jmpq_.L_405b34(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b81, i64 -77, i64 5)
  store %struct.Memory* %call_405b81, %struct.Memory** %MEMORY

  br label %block_.L_405b34

  ; Code: .L_405b86:	 RIP: 405b86	 Bytes: 0
block_.L_405b86:

  ; Code: movl -0x470(%rbp), %eax	 RIP: 405b86	 Bytes: 6
  %loadMem_405b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b86 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b86)
  store %struct.Memory* %call_405b86, %struct.Memory** %MEMORY

  ; Code: addl -0x468(%rbp), %eax	 RIP: 405b8c	 Bytes: 6
  %loadMem_405b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b8c = call %struct.Memory* @routine_addl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b8c)
  store %struct.Memory* %call_405b8c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x480(%rbp)	 RIP: 405b92	 Bytes: 6
  %loadMem_405b92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b92 = call %struct.Memory* @routine_movl__eax__MINUS0x480__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b92)
  store %struct.Memory* %call_405b92, %struct.Memory** %MEMORY

  ; Code: movl -0x470(%rbp), %eax	 RIP: 405b98	 Bytes: 6
  %loadMem_405b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b98 = call %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b98)
  store %struct.Memory* %call_405b98, %struct.Memory** %MEMORY

  ; Code: subl -0x468(%rbp), %eax	 RIP: 405b9e	 Bytes: 6
  %loadMem_405b9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405b9e = call %struct.Memory* @routine_subl_MINUS0x468__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405b9e)
  store %struct.Memory* %call_405b9e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x47c(%rbp)	 RIP: 405ba4	 Bytes: 6
  %loadMem_405ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ba4 = call %struct.Memory* @routine_movl__eax__MINUS0x47c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ba4)
  store %struct.Memory* %call_405ba4, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %eax	 RIP: 405baa	 Bytes: 6
  %loadMem_405baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405baa = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405baa)
  store %struct.Memory* %call_405baa, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %eax	 RIP: 405bb0	 Bytes: 3
  %loadMem_405bb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bb0 = call %struct.Memory* @routine_sarl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bb0)
  store %struct.Memory* %call_405bb0, %struct.Memory** %MEMORY

  ; Code: subl -0x464(%rbp), %eax	 RIP: 405bb3	 Bytes: 6
  %loadMem_405bb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bb3 = call %struct.Memory* @routine_subl_MINUS0x464__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bb3)
  store %struct.Memory* %call_405bb3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x478(%rbp)	 RIP: 405bb9	 Bytes: 6
  %loadMem_405bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bb9 = call %struct.Memory* @routine_movl__eax__MINUS0x478__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bb9)
  store %struct.Memory* %call_405bb9, %struct.Memory** %MEMORY

  ; Code: movl -0x46c(%rbp), %eax	 RIP: 405bbf	 Bytes: 6
  %loadMem_405bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bbf = call %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bbf)
  store %struct.Memory* %call_405bbf, %struct.Memory** %MEMORY

  ; Code: movl -0x464(%rbp), %ecx	 RIP: 405bc5	 Bytes: 6
  %loadMem_405bc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bc5 = call %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bc5)
  store %struct.Memory* %call_405bc5, %struct.Memory** %MEMORY

  ; Code: sarl $0x1, %ecx	 RIP: 405bcb	 Bytes: 3
  %loadMem_405bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bcb = call %struct.Memory* @routine_sarl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bcb)
  store %struct.Memory* %call_405bcb, %struct.Memory** %MEMORY

  ; Code: addl %ecx, %eax	 RIP: 405bce	 Bytes: 2
  %loadMem_405bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bce = call %struct.Memory* @routine_addl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bce)
  store %struct.Memory* %call_405bce, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x474(%rbp)	 RIP: 405bd0	 Bytes: 6
  %loadMem_405bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bd0 = call %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bd0)
  store %struct.Memory* %call_405bd0, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 405bd6	 Bytes: 7
  %loadMem_405bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bd6 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bd6)
  store %struct.Memory* %call_405bd6, %struct.Memory** %MEMORY

  ; Code: .L_405bdd:	 RIP: 405bdd	 Bytes: 0
  br label %block_.L_405bdd
block_.L_405bdd:

  ; Code: cmpl $0x2, -0xc(%rbp)	 RIP: 405bdd	 Bytes: 4
  %loadMem_405bdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bdd = call %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bdd)
  store %struct.Memory* %call_405bdd, %struct.Memory** %MEMORY

  ; Code: jge .L_405c86	 RIP: 405be1	 Bytes: 6
  %loadMem_405be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405be1 = call %struct.Memory* @routine_jge_.L_405c86(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405be1, i8* %BRANCH_TAKEN, i64 165, i64 6, i64 6)
  store %struct.Memory* %call_405be1, %struct.Memory** %MEMORY

  %loadBr_405be1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405be1 = icmp eq i8 %loadBr_405be1, 1
  br i1 %cmpBr_405be1, label %block_.L_405c86, label %block_405be7

block_405be7:
  ; Code: leaq -0x880(%rbp), %rax	 RIP: 405be7	 Bytes: 7
  %loadMem_405be7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405be7 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405be7)
  store %struct.Memory* %call_405be7, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %ecx	 RIP: 405bee	 Bytes: 5
  %loadMem_405bee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bee = call %struct.Memory* @routine_movl__0x3___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bee)
  store %struct.Memory* %call_405bee, %struct.Memory** %MEMORY

  ; Code: subl -0xc(%rbp), %ecx	 RIP: 405bf3	 Bytes: 3
  %loadMem_405bf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bf3 = call %struct.Memory* @routine_subl_MINUS0xc__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bf3)
  store %struct.Memory* %call_405bf3, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x1c(%rbp)	 RIP: 405bf6	 Bytes: 3
  %loadMem_405bf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bf6 = call %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bf6)
  store %struct.Memory* %call_405bf6, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 405bf9	 Bytes: 4
  %loadMem_405bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bf9 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bf9)
  store %struct.Memory* %call_405bf9, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405bfd	 Bytes: 7
  %loadMem_405bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405bfd = call %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405bfd)
  store %struct.Memory* %call_405bfd, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 405c04	 Bytes: 4
  %loadMem_405c04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c04 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c04)
  store %struct.Memory* %call_405c04, %struct.Memory** %MEMORY

  ; Code: addl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405c08	 Bytes: 7
  %loadMem_405c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c08 = call %struct.Memory* @routine_addl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c08)
  store %struct.Memory* %call_405c08, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405c0f	 Bytes: 4
  %loadMem_405c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c0f = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c0f)
  store %struct.Memory* %call_405c0f, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 405c13	 Bytes: 4
  %loadMem_405c13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c13 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c13)
  store %struct.Memory* %call_405c13, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 405c17	 Bytes: 3
  %loadMem_405c17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c17 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c17)
  store %struct.Memory* %call_405c17, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 405c1a	 Bytes: 3
  %loadMem_405c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c1a = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c1a)
  store %struct.Memory* %call_405c1a, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 405c1d	 Bytes: 4
  %loadMem_405c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c1d = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c1d)
  store %struct.Memory* %call_405c1d, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 405c21	 Bytes: 4
  %loadMem_405c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c21 = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c21)
  store %struct.Memory* %call_405c21, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 405c25	 Bytes: 3
  %loadMem_405c25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c25 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c25)
  store %struct.Memory* %call_405c25, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 405c28	 Bytes: 4
  %loadMem_405c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c28 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c28)
  store %struct.Memory* %call_405c28, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 405c2c	 Bytes: 4
  %loadMem_405c2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c2c = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c2c)
  store %struct.Memory* %call_405c2c, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rsi	 RIP: 405c30	 Bytes: 3
  %loadMem_405c30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c30 = call %struct.Memory* @routine_addq__rdx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c30)
  store %struct.Memory* %call_405c30, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 405c33	 Bytes: 4
  %loadMem_405c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c33 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c33)
  store %struct.Memory* %call_405c33, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rsi,%rdx,4)	 RIP: 405c37	 Bytes: 3
  %loadMem_405c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c37 = call %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c37)
  store %struct.Memory* %call_405c37, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 405c3a	 Bytes: 4
  %loadMem_405c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c3a = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c3a)
  store %struct.Memory* %call_405c3a, %struct.Memory** %MEMORY

  ; Code: movl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405c3e	 Bytes: 7
  %loadMem_405c3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c3e = call %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c3e)
  store %struct.Memory* %call_405c3e, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 405c45	 Bytes: 4
  %loadMem_405c45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c45 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c45)
  store %struct.Memory* %call_405c45, %struct.Memory** %MEMORY

  ; Code: subl -0x480(%rbp,%rdx,4), %ecx	 RIP: 405c49	 Bytes: 7
  %loadMem_405c49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c49 = call %struct.Memory* @routine_subl_MINUS0x480__rbp__rdx_4____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c49)
  store %struct.Memory* %call_405c49, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 405c50	 Bytes: 4
  %loadMem_405c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c50 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c50)
  store %struct.Memory* %call_405c50, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdx	 RIP: 405c54	 Bytes: 4
  %loadMem_405c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c54 = call %struct.Memory* @routine_shlq__0x8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c54)
  store %struct.Memory* %call_405c54, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 405c58	 Bytes: 3
  %loadMem_405c58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c58 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c58)
  store %struct.Memory* %call_405c58, %struct.Memory** %MEMORY

  ; Code: movslq -0x10(%rbp), %rdx	 RIP: 405c5b	 Bytes: 4
  %loadMem_405c5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c5b = call %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c5b)
  store %struct.Memory* %call_405c5b, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdx	 RIP: 405c5f	 Bytes: 4
  %loadMem_405c5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c5f = call %struct.Memory* @routine_shlq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c5f)
  store %struct.Memory* %call_405c5f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 405c63	 Bytes: 3
  %loadMem_405c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c63 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c63)
  store %struct.Memory* %call_405c63, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rdx	 RIP: 405c66	 Bytes: 4
  %loadMem_405c66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c66 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c66)
  store %struct.Memory* %call_405c66, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdx	 RIP: 405c6a	 Bytes: 4
  %loadMem_405c6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c6a = call %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c6a)
  store %struct.Memory* %call_405c6a, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 405c6e	 Bytes: 3
  %loadMem_405c6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c6e = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c6e)
  store %struct.Memory* %call_405c6e, %struct.Memory** %MEMORY

  ; Code: movslq -0x14(%rbp), %rdx	 RIP: 405c71	 Bytes: 4
  %loadMem_405c71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c71 = call %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c71)
  store %struct.Memory* %call_405c71, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax,%rdx,4)	 RIP: 405c75	 Bytes: 3
  %loadMem_405c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c75 = call %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c75)
  store %struct.Memory* %call_405c75, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405c78	 Bytes: 3
  %loadMem_405c78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c78 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c78)
  store %struct.Memory* %call_405c78, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405c7b	 Bytes: 3
  %loadMem_405c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c7b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c7b)
  store %struct.Memory* %call_405c7b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 405c7e	 Bytes: 3
  %loadMem_405c7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c7e = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c7e)
  store %struct.Memory* %call_405c7e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405bdd	 RIP: 405c81	 Bytes: 5
  %loadMem_405c81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c81 = call %struct.Memory* @routine_jmpq_.L_405bdd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c81, i64 -164, i64 5)
  store %struct.Memory* %call_405c81, %struct.Memory** %MEMORY

  br label %block_.L_405bdd

  ; Code: .L_405c86:	 RIP: 405c86	 Bytes: 0
block_.L_405c86:

  ; Code: jmpq .L_405c8b	 RIP: 405c86	 Bytes: 5
  %loadMem_405c86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c86 = call %struct.Memory* @routine_jmpq_.L_405c8b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c86, i64 5, i64 5)
  store %struct.Memory* %call_405c86, %struct.Memory** %MEMORY

  br label %block_.L_405c8b

  ; Code: .L_405c8b:	 RIP: 405c8b	 Bytes: 0
block_.L_405c8b:

  ; Code: movl -0x8(%rbp), %eax	 RIP: 405c8b	 Bytes: 3
  %loadMem_405c8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c8b = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c8b)
  store %struct.Memory* %call_405c8b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405c8e	 Bytes: 3
  %loadMem_405c8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c8e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c8e)
  store %struct.Memory* %call_405c8e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 405c91	 Bytes: 3
  %loadMem_405c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c91 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c91)
  store %struct.Memory* %call_405c91, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405af4	 RIP: 405c94	 Bytes: 5
  %loadMem_405c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c94 = call %struct.Memory* @routine_jmpq_.L_405af4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c94, i64 -416, i64 5)
  store %struct.Memory* %call_405c94, %struct.Memory** %MEMORY

  br label %block_.L_405af4

  ; Code: .L_405c99:	 RIP: 405c99	 Bytes: 0
block_.L_405c99:

  ; Code: jmpq .L_405c9e	 RIP: 405c99	 Bytes: 5
  %loadMem_405c99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c99 = call %struct.Memory* @routine_jmpq_.L_405c9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c99, i64 5, i64 5)
  store %struct.Memory* %call_405c99, %struct.Memory** %MEMORY

  br label %block_.L_405c9e

  ; Code: .L_405c9e:	 RIP: 405c9e	 Bytes: 0
block_.L_405c9e:

  ; Code: movl -0x10(%rbp), %eax	 RIP: 405c9e	 Bytes: 3
  %loadMem_405c9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405c9e = call %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405c9e)
  store %struct.Memory* %call_405c9e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405ca1	 Bytes: 3
  %loadMem_405ca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ca1 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ca1)
  store %struct.Memory* %call_405ca1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x10(%rbp)	 RIP: 405ca4	 Bytes: 3
  %loadMem_405ca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ca4 = call %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ca4)
  store %struct.Memory* %call_405ca4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4054b2	 RIP: 405ca7	 Bytes: 5
  %loadMem_405ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ca7 = call %struct.Memory* @routine_jmpq_.L_4054b2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ca7, i64 -2037, i64 5)
  store %struct.Memory* %call_405ca7, %struct.Memory** %MEMORY

  br label %block_.L_4054b2

  ; Code: .L_405cac:	 RIP: 405cac	 Bytes: 0
block_.L_405cac:

  ; Code: jmpq .L_405cb1	 RIP: 405cac	 Bytes: 5
  %loadMem_405cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cac = call %struct.Memory* @routine_jmpq_.L_405cb1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cac, i64 5, i64 5)
  store %struct.Memory* %call_405cac, %struct.Memory** %MEMORY

  br label %block_.L_405cb1

  ; Code: .L_405cb1:	 RIP: 405cb1	 Bytes: 0
block_.L_405cb1:

  ; Code: movl -0x14(%rbp), %eax	 RIP: 405cb1	 Bytes: 3
  %loadMem_405cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cb1 = call %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cb1)
  store %struct.Memory* %call_405cb1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405cb4	 Bytes: 3
  %loadMem_405cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cb4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cb4)
  store %struct.Memory* %call_405cb4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14(%rbp)	 RIP: 405cb7	 Bytes: 3
  %loadMem_405cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cb7 = call %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cb7)
  store %struct.Memory* %call_405cb7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4054a1	 RIP: 405cba	 Bytes: 5
  %loadMem_405cba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cba = call %struct.Memory* @routine_jmpq_.L_4054a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cba, i64 -2073, i64 5)
  store %struct.Memory* %call_405cba, %struct.Memory** %MEMORY

  br label %block_.L_4054a1

  ; Code: .L_405cbf:	 RIP: 405cbf	 Bytes: 0
block_.L_405cbf:

  ; Code: movq 0x6cb900, %rax	 RIP: 405cbf	 Bytes: 8
  %loadMem_405cbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cbf = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cbf)
  store %struct.Memory* %call_405cbf, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 405cc7	 Bytes: 7
  %loadMem_405cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cc7 = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cc7)
  store %struct.Memory* %call_405cc7, %struct.Memory** %MEMORY

  ; Code: jne .L_405da1	 RIP: 405cce	 Bytes: 6
  %loadMem_405cce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cce = call %struct.Memory* @routine_jne_.L_405da1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cce, i8* %BRANCH_TAKEN, i64 211, i64 6, i64 6)
  store %struct.Memory* %call_405cce, %struct.Memory** %MEMORY

  %loadBr_405cce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405cce = icmp eq i8 %loadBr_405cce, 1
  br i1 %cmpBr_405cce, label %block_.L_405da1, label %block_405cd4

block_405cd4:
  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 405cd4	 Bytes: 7
  %loadMem_405cd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cd4 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cd4)
  store %struct.Memory* %call_405cd4, %struct.Memory** %MEMORY

  ; Code: .L_405cdb:	 RIP: 405cdb	 Bytes: 0
  br label %block_.L_405cdb
block_.L_405cdb:

  ; Code: cmpl $0x10, -0xc(%rbp)	 RIP: 405cdb	 Bytes: 4
  %loadMem_405cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cdb = call %struct.Memory* @routine_cmpl__0x10__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cdb)
  store %struct.Memory* %call_405cdb, %struct.Memory** %MEMORY

  ; Code: jge .L_405d9c	 RIP: 405cdf	 Bytes: 6
  %loadMem_405cdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cdf = call %struct.Memory* @routine_jge_.L_405d9c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cdf, i8* %BRANCH_TAKEN, i64 189, i64 6, i64 6)
  store %struct.Memory* %call_405cdf, %struct.Memory** %MEMORY

  %loadBr_405cdf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405cdf = icmp eq i8 %loadBr_405cdf, 1
  br i1 %cmpBr_405cdf, label %block_.L_405d9c, label %block_405ce5

block_405ce5:
  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 405ce5	 Bytes: 7
  %loadMem_405ce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ce5 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ce5)
  store %struct.Memory* %call_405ce5, %struct.Memory** %MEMORY

  ; Code: .L_405cec:	 RIP: 405cec	 Bytes: 0
  br label %block_.L_405cec
block_.L_405cec:

  ; Code: cmpl $0x10, -0x8(%rbp)	 RIP: 405cec	 Bytes: 4
  %loadMem_405cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cec = call %struct.Memory* @routine_cmpl__0x10__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cec)
  store %struct.Memory* %call_405cec, %struct.Memory** %MEMORY

  ; Code: jge .L_405d89	 RIP: 405cf0	 Bytes: 6
  %loadMem_405cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cf0 = call %struct.Memory* @routine_jge_.L_405d89(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cf0, i8* %BRANCH_TAKEN, i64 153, i64 6, i64 6)
  store %struct.Memory* %call_405cf0, %struct.Memory** %MEMORY

  %loadBr_405cf0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405cf0 = icmp eq i8 %loadBr_405cf0, 1
  br i1 %cmpBr_405cf0, label %block_.L_405d89, label %block_405cf6

block_405cf6:
  ; Code: leaq -0x420(%rbp), %rax	 RIP: 405cf6	 Bytes: 7
  %loadMem_405cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cf6 = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cf6)
  store %struct.Memory* %call_405cf6, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %ecx	 RIP: 405cfd	 Bytes: 5
  %loadMem_405cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405cfd = call %struct.Memory* @routine_movl__0x4___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405cfd)
  store %struct.Memory* %call_405cfd, %struct.Memory** %MEMORY

  ; Code: leaq -0x880(%rbp), %rdx	 RIP: 405d02	 Bytes: 7
  %loadMem_405d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d02 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d02)
  store %struct.Memory* %call_405d02, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %esi	 RIP: 405d09	 Bytes: 3
  %loadMem_405d09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d09 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d09)
  store %struct.Memory* %call_405d09, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x910(%rbp)	 RIP: 405d0c	 Bytes: 7
  %loadMem_405d0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d0c = call %struct.Memory* @routine_movq__rax__MINUS0x910__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d0c)
  store %struct.Memory* %call_405d0c, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 405d13	 Bytes: 2
  %loadMem_405d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d13 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d13)
  store %struct.Memory* %call_405d13, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x918(%rbp)	 RIP: 405d15	 Bytes: 7
  %loadMem_405d15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d15 = call %struct.Memory* @routine_movq__rdx__MINUS0x918__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d15)
  store %struct.Memory* %call_405d15, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405d1c	 Bytes: 1
  %loadMem_405d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d1c = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d1c)
  store %struct.Memory* %call_405d1c, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 405d1d	 Bytes: 2
  %loadMem_405d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d1d = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d1d)
  store %struct.Memory* %call_405d1d, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 405d1f	 Bytes: 3
  %loadMem_405d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d1f = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d1f)
  store %struct.Memory* %call_405d1f, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdi	 RIP: 405d22	 Bytes: 4
  %loadMem_405d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d22 = call %struct.Memory* @routine_shlq__0x8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d22)
  store %struct.Memory* %call_405d22, %struct.Memory** %MEMORY

  ; Code: movq -0x918(%rbp), %r8	 RIP: 405d26	 Bytes: 7
  %loadMem_405d26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d26 = call %struct.Memory* @routine_movq_MINUS0x918__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d26)
  store %struct.Memory* %call_405d26, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %r8	 RIP: 405d2d	 Bytes: 3
  %loadMem_405d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d2d = call %struct.Memory* @routine_addq__rdi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d2d)
  store %struct.Memory* %call_405d2d, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %edx	 RIP: 405d30	 Bytes: 3
  %loadMem_405d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d30 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d30)
  store %struct.Memory* %call_405d30, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405d33	 Bytes: 2
  %loadMem_405d33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d33 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d33)
  store %struct.Memory* %call_405d33, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405d35	 Bytes: 1
  %loadMem_405d35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d35 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d35)
  store %struct.Memory* %call_405d35, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 405d36	 Bytes: 2
  %loadMem_405d36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d36 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d36)
  store %struct.Memory* %call_405d36, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 405d38	 Bytes: 3
  %loadMem_405d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d38 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d38)
  store %struct.Memory* %call_405d38, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 405d3b	 Bytes: 4
  %loadMem_405d3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d3b = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d3b)
  store %struct.Memory* %call_405d3b, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %r8	 RIP: 405d3f	 Bytes: 3
  %loadMem_405d3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d3f = call %struct.Memory* @routine_addq__rdi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d3f)
  store %struct.Memory* %call_405d3f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405d42	 Bytes: 3
  %loadMem_405d42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d42 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d42)
  store %struct.Memory* %call_405d42, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405d45	 Bytes: 1
  %loadMem_405d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d45 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d45)
  store %struct.Memory* %call_405d45, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 405d46	 Bytes: 2
  %loadMem_405d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d46 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d46)
  store %struct.Memory* %call_405d46, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 405d48	 Bytes: 3
  %loadMem_405d48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d48 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d48)
  store %struct.Memory* %call_405d48, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 405d4b	 Bytes: 4
  %loadMem_405d4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d4b = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d4b)
  store %struct.Memory* %call_405d4b, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %r8	 RIP: 405d4f	 Bytes: 3
  %loadMem_405d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d4f = call %struct.Memory* @routine_addq__rdi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d4f)
  store %struct.Memory* %call_405d4f, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 405d52	 Bytes: 3
  %loadMem_405d52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d52 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d52)
  store %struct.Memory* %call_405d52, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405d55	 Bytes: 2
  %loadMem_405d55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d55 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d55)
  store %struct.Memory* %call_405d55, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405d57	 Bytes: 1
  %loadMem_405d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d57 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d57)
  store %struct.Memory* %call_405d57, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 405d58	 Bytes: 2
  %loadMem_405d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d58 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d58)
  store %struct.Memory* %call_405d58, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 405d5a	 Bytes: 3
  %loadMem_405d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d5a = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d5a)
  store %struct.Memory* %call_405d5a, %struct.Memory** %MEMORY

  ; Code: movl (%r8,%rdi,4), %eax	 RIP: 405d5d	 Bytes: 4
  %loadMem_405d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d5d = call %struct.Memory* @routine_movl___r8__rdi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d5d)
  store %struct.Memory* %call_405d5d, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdi	 RIP: 405d61	 Bytes: 4
  %loadMem_405d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d61 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d61)
  store %struct.Memory* %call_405d61, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 405d65	 Bytes: 4
  %loadMem_405d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d65 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d65)
  store %struct.Memory* %call_405d65, %struct.Memory** %MEMORY

  ; Code: movq -0x910(%rbp), %r8	 RIP: 405d69	 Bytes: 7
  %loadMem_405d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d69 = call %struct.Memory* @routine_movq_MINUS0x910__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d69)
  store %struct.Memory* %call_405d69, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %r8	 RIP: 405d70	 Bytes: 3
  %loadMem_405d70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d70 = call %struct.Memory* @routine_addq__rdi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d70)
  store %struct.Memory* %call_405d70, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdi	 RIP: 405d73	 Bytes: 4
  %loadMem_405d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d73 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d73)
  store %struct.Memory* %call_405d73, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%r8,%rdi,4)	 RIP: 405d77	 Bytes: 4
  %loadMem_405d77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d77 = call %struct.Memory* @routine_movl__eax____r8__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d77)
  store %struct.Memory* %call_405d77, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %eax	 RIP: 405d7b	 Bytes: 3
  %loadMem_405d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d7b = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d7b)
  store %struct.Memory* %call_405d7b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405d7e	 Bytes: 3
  %loadMem_405d7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d7e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d7e)
  store %struct.Memory* %call_405d7e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 405d81	 Bytes: 3
  %loadMem_405d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d81 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d81)
  store %struct.Memory* %call_405d81, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405cec	 RIP: 405d84	 Bytes: 5
  %loadMem_405d84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d84 = call %struct.Memory* @routine_jmpq_.L_405cec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d84, i64 -152, i64 5)
  store %struct.Memory* %call_405d84, %struct.Memory** %MEMORY

  br label %block_.L_405cec

  ; Code: .L_405d89:	 RIP: 405d89	 Bytes: 0
block_.L_405d89:

  ; Code: jmpq .L_405d8e	 RIP: 405d89	 Bytes: 5
  %loadMem_405d89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d89 = call %struct.Memory* @routine_jmpq_.L_405d8e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d89, i64 5, i64 5)
  store %struct.Memory* %call_405d89, %struct.Memory** %MEMORY

  br label %block_.L_405d8e

  ; Code: .L_405d8e:	 RIP: 405d8e	 Bytes: 0
block_.L_405d8e:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405d8e	 Bytes: 3
  %loadMem_405d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d8e = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d8e)
  store %struct.Memory* %call_405d8e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405d91	 Bytes: 3
  %loadMem_405d91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d91 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d91)
  store %struct.Memory* %call_405d91, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 405d94	 Bytes: 3
  %loadMem_405d94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d94 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d94)
  store %struct.Memory* %call_405d94, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405cdb	 RIP: 405d97	 Bytes: 5
  %loadMem_405d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d97 = call %struct.Memory* @routine_jmpq_.L_405cdb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d97, i64 -188, i64 5)
  store %struct.Memory* %call_405d97, %struct.Memory** %MEMORY

  br label %block_.L_405cdb

  ; Code: .L_405d9c:	 RIP: 405d9c	 Bytes: 0
block_.L_405d9c:

  ; Code: jmpq .L_405efc	 RIP: 405d9c	 Bytes: 5
  %loadMem_405d9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405d9c = call %struct.Memory* @routine_jmpq_.L_405efc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405d9c, i64 352, i64 5)
  store %struct.Memory* %call_405d9c, %struct.Memory** %MEMORY

  br label %block_.L_405efc

  ; Code: .L_405da1:	 RIP: 405da1	 Bytes: 0
block_.L_405da1:

  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 405da1	 Bytes: 7
  %loadMem_405da1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405da1 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405da1)
  store %struct.Memory* %call_405da1, %struct.Memory** %MEMORY

  ; Code: .L_405da8:	 RIP: 405da8	 Bytes: 0
  br label %block_.L_405da8
block_.L_405da8:

  ; Code: cmpl $0x10, -0xc(%rbp)	 RIP: 405da8	 Bytes: 4
  %loadMem_405da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405da8 = call %struct.Memory* @routine_cmpl__0x10__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405da8)
  store %struct.Memory* %call_405da8, %struct.Memory** %MEMORY

  ; Code: jge .L_405ef7	 RIP: 405dac	 Bytes: 6
  %loadMem_405dac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dac = call %struct.Memory* @routine_jge_.L_405ef7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dac, i8* %BRANCH_TAKEN, i64 331, i64 6, i64 6)
  store %struct.Memory* %call_405dac, %struct.Memory** %MEMORY

  %loadBr_405dac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405dac = icmp eq i8 %loadBr_405dac, 1
  br i1 %cmpBr_405dac, label %block_.L_405ef7, label %block_405db2

block_405db2:
  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 405db2	 Bytes: 7
  %loadMem_405db2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405db2 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405db2)
  store %struct.Memory* %call_405db2, %struct.Memory** %MEMORY

  ; Code: .L_405db9:	 RIP: 405db9	 Bytes: 0
  br label %block_.L_405db9
block_.L_405db9:

  ; Code: cmpl $0x10, -0x8(%rbp)	 RIP: 405db9	 Bytes: 4
  %loadMem_405db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405db9 = call %struct.Memory* @routine_cmpl__0x10__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405db9)
  store %struct.Memory* %call_405db9, %struct.Memory** %MEMORY

  ; Code: jge .L_405ee4	 RIP: 405dbd	 Bytes: 6
  %loadMem_405dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dbd = call %struct.Memory* @routine_jge_.L_405ee4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dbd, i8* %BRANCH_TAKEN, i64 295, i64 6, i64 6)
  store %struct.Memory* %call_405dbd, %struct.Memory** %MEMORY

  %loadBr_405dbd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405dbd = icmp eq i8 %loadBr_405dbd, 1
  br i1 %cmpBr_405dbd, label %block_.L_405ee4, label %block_405dc3

block_405dc3:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 405dc3	 Bytes: 7
  %loadMem_405dc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dc3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dc3)
  store %struct.Memory* %call_405dc3, %struct.Memory** %MEMORY

  ; Code: je .L_405e50	 RIP: 405dca	 Bytes: 6
  %loadMem_405dca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dca = call %struct.Memory* @routine_je_.L_405e50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dca, i8* %BRANCH_TAKEN, i64 134, i64 6, i64 6)
  store %struct.Memory* %call_405dca, %struct.Memory** %MEMORY

  %loadBr_405dca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405dca = icmp eq i8 %loadBr_405dca, 1
  br i1 %cmpBr_405dca, label %block_.L_405e50, label %block_405dd0

block_405dd0:
  ; Code: movl $0x4, %eax	 RIP: 405dd0	 Bytes: 5
  %loadMem_405dd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dd0 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dd0)
  store %struct.Memory* %call_405dd0, %struct.Memory** %MEMORY

  ; Code: leaq -0x880(%rbp), %rcx	 RIP: 405dd5	 Bytes: 7
  %loadMem_405dd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dd5 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dd5)
  store %struct.Memory* %call_405dd5, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %edx	 RIP: 405ddc	 Bytes: 3
  %loadMem_405ddc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ddc = call %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ddc)
  store %struct.Memory* %call_405ddc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x91c(%rbp)	 RIP: 405ddf	 Bytes: 6
  %loadMem_405ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ddf = call %struct.Memory* @routine_movl__eax__MINUS0x91c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ddf)
  store %struct.Memory* %call_405ddf, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405de5	 Bytes: 2
  %loadMem_405de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405de5 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405de5)
  store %struct.Memory* %call_405de5, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405de7	 Bytes: 1
  %loadMem_405de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405de7 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405de7)
  store %struct.Memory* %call_405de7, %struct.Memory** %MEMORY

  ; Code: movl -0x91c(%rbp), %esi	 RIP: 405de8	 Bytes: 6
  %loadMem_405de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405de8 = call %struct.Memory* @routine_movl_MINUS0x91c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405de8)
  store %struct.Memory* %call_405de8, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 405dee	 Bytes: 2
  %loadMem_405dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dee = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dee)
  store %struct.Memory* %call_405dee, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 405df0	 Bytes: 3
  %loadMem_405df0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405df0 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405df0)
  store %struct.Memory* %call_405df0, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdi	 RIP: 405df3	 Bytes: 4
  %loadMem_405df3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405df3 = call %struct.Memory* @routine_shlq__0x8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405df3)
  store %struct.Memory* %call_405df3, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 405df7	 Bytes: 3
  %loadMem_405df7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405df7 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405df7)
  store %struct.Memory* %call_405df7, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %edx	 RIP: 405dfa	 Bytes: 3
  %loadMem_405dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dfa = call %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dfa)
  store %struct.Memory* %call_405dfa, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405dfd	 Bytes: 2
  %loadMem_405dfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dfd = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dfd)
  store %struct.Memory* %call_405dfd, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405dff	 Bytes: 1
  %loadMem_405dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405dff = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405dff)
  store %struct.Memory* %call_405dff, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 405e00	 Bytes: 2
  %loadMem_405e00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e00 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e00)
  store %struct.Memory* %call_405e00, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 405e02	 Bytes: 3
  %loadMem_405e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e02 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e02)
  store %struct.Memory* %call_405e02, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 405e05	 Bytes: 4
  %loadMem_405e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e05 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e05)
  store %struct.Memory* %call_405e05, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 405e09	 Bytes: 3
  %loadMem_405e09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e09 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e09)
  store %struct.Memory* %call_405e09, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405e0c	 Bytes: 3
  %loadMem_405e0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e0c = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e0c)
  store %struct.Memory* %call_405e0c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405e0f	 Bytes: 1
  %loadMem_405e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e0f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e0f)
  store %struct.Memory* %call_405e0f, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 405e10	 Bytes: 2
  %loadMem_405e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e10 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e10)
  store %struct.Memory* %call_405e10, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 405e12	 Bytes: 3
  %loadMem_405e12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e12 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e12)
  store %struct.Memory* %call_405e12, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 405e15	 Bytes: 4
  %loadMem_405e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e15 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e15)
  store %struct.Memory* %call_405e15, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 405e19	 Bytes: 3
  %loadMem_405e19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e19 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e19)
  store %struct.Memory* %call_405e19, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 405e1c	 Bytes: 3
  %loadMem_405e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e1c = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e1c)
  store %struct.Memory* %call_405e1c, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405e1f	 Bytes: 2
  %loadMem_405e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e1f = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e1f)
  store %struct.Memory* %call_405e1f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405e21	 Bytes: 1
  %loadMem_405e21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e21 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e21)
  store %struct.Memory* %call_405e21, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 405e22	 Bytes: 2
  %loadMem_405e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e22 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e22)
  store %struct.Memory* %call_405e22, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 405e24	 Bytes: 3
  %loadMem_405e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e24 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e24)
  store %struct.Memory* %call_405e24, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdi,4), %eax	 RIP: 405e27	 Bytes: 3
  %loadMem_405e27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e27 = call %struct.Memory* @routine_movl___rcx__rdi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e27)
  store %struct.Memory* %call_405e27, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 405e2a	 Bytes: 8
  %loadMem_405e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e2a = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e2a)
  store %struct.Memory* %call_405e2a, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 405e32	 Bytes: 7
  %loadMem_405e32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e32 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e32)
  store %struct.Memory* %call_405e32, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdi	 RIP: 405e39	 Bytes: 4
  %loadMem_405e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e39 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e39)
  store %struct.Memory* %call_405e39, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 405e3d	 Bytes: 4
  %loadMem_405e3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e3d = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e3d)
  store %struct.Memory* %call_405e3d, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 405e41	 Bytes: 3
  %loadMem_405e41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e41 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e41)
  store %struct.Memory* %call_405e41, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdi	 RIP: 405e44	 Bytes: 4
  %loadMem_405e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e44 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e44)
  store %struct.Memory* %call_405e44, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdi,4)	 RIP: 405e48	 Bytes: 3
  %loadMem_405e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e48 = call %struct.Memory* @routine_movl__eax____rcx__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e48)
  store %struct.Memory* %call_405e48, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405ed1	 RIP: 405e4b	 Bytes: 5
  %loadMem_405e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e4b = call %struct.Memory* @routine_jmpq_.L_405ed1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e4b, i64 134, i64 5)
  store %struct.Memory* %call_405e4b, %struct.Memory** %MEMORY

  br label %block_.L_405ed1

  ; Code: .L_405e50:	 RIP: 405e50	 Bytes: 0
block_.L_405e50:

  ; Code: movl $0x4, %eax	 RIP: 405e50	 Bytes: 5
  %loadMem_405e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e50 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e50)
  store %struct.Memory* %call_405e50, %struct.Memory** %MEMORY

  ; Code: leaq -0x880(%rbp), %rcx	 RIP: 405e55	 Bytes: 7
  %loadMem_405e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e55 = call %struct.Memory* @routine_leaq_MINUS0x880__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e55)
  store %struct.Memory* %call_405e55, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %edx	 RIP: 405e5c	 Bytes: 3
  %loadMem_405e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e5c = call %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e5c)
  store %struct.Memory* %call_405e5c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x920(%rbp)	 RIP: 405e5f	 Bytes: 6
  %loadMem_405e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e5f = call %struct.Memory* @routine_movl__eax__MINUS0x920__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e5f)
  store %struct.Memory* %call_405e5f, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405e65	 Bytes: 2
  %loadMem_405e65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e65 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e65)
  store %struct.Memory* %call_405e65, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405e67	 Bytes: 1
  %loadMem_405e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e67 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e67)
  store %struct.Memory* %call_405e67, %struct.Memory** %MEMORY

  ; Code: movl -0x920(%rbp), %esi	 RIP: 405e68	 Bytes: 6
  %loadMem_405e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e68 = call %struct.Memory* @routine_movl_MINUS0x920__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e68)
  store %struct.Memory* %call_405e68, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 405e6e	 Bytes: 2
  %loadMem_405e6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e6e = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e6e)
  store %struct.Memory* %call_405e6e, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 405e70	 Bytes: 3
  %loadMem_405e70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e70 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e70)
  store %struct.Memory* %call_405e70, %struct.Memory** %MEMORY

  ; Code: shlq $0x8, %rdi	 RIP: 405e73	 Bytes: 4
  %loadMem_405e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e73 = call %struct.Memory* @routine_shlq__0x8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e73)
  store %struct.Memory* %call_405e73, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 405e77	 Bytes: 3
  %loadMem_405e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e77 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e77)
  store %struct.Memory* %call_405e77, %struct.Memory** %MEMORY

  ; Code: movl -0x8(%rbp), %edx	 RIP: 405e7a	 Bytes: 3
  %loadMem_405e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e7a = call %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e7a)
  store %struct.Memory* %call_405e7a, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405e7d	 Bytes: 2
  %loadMem_405e7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e7d = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e7d)
  store %struct.Memory* %call_405e7d, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405e7f	 Bytes: 1
  %loadMem_405e7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e7f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e7f)
  store %struct.Memory* %call_405e7f, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 405e80	 Bytes: 2
  %loadMem_405e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e80 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e80)
  store %struct.Memory* %call_405e80, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 405e82	 Bytes: 3
  %loadMem_405e82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e82 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e82)
  store %struct.Memory* %call_405e82, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 405e85	 Bytes: 4
  %loadMem_405e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e85 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e85)
  store %struct.Memory* %call_405e85, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 405e89	 Bytes: 3
  %loadMem_405e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e89 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e89)
  store %struct.Memory* %call_405e89, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405e8c	 Bytes: 3
  %loadMem_405e8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e8c = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e8c)
  store %struct.Memory* %call_405e8c, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405e8f	 Bytes: 1
  %loadMem_405e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e8f = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e8f)
  store %struct.Memory* %call_405e8f, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 405e90	 Bytes: 2
  %loadMem_405e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e90 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e90)
  store %struct.Memory* %call_405e90, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 405e92	 Bytes: 3
  %loadMem_405e92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e92 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e92)
  store %struct.Memory* %call_405e92, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 405e95	 Bytes: 4
  %loadMem_405e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e95 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e95)
  store %struct.Memory* %call_405e95, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 405e99	 Bytes: 3
  %loadMem_405e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e99 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e99)
  store %struct.Memory* %call_405e99, %struct.Memory** %MEMORY

  ; Code: movl -0xc(%rbp), %edx	 RIP: 405e9c	 Bytes: 3
  %loadMem_405e9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e9c = call %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e9c)
  store %struct.Memory* %call_405e9c, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 405e9f	 Bytes: 2
  %loadMem_405e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405e9f = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405e9f)
  store %struct.Memory* %call_405e9f, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 405ea1	 Bytes: 1
  %loadMem_405ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ea1 = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ea1)
  store %struct.Memory* %call_405ea1, %struct.Memory** %MEMORY

  ; Code: idivl %esi	 RIP: 405ea2	 Bytes: 2
  %loadMem_405ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ea2 = call %struct.Memory* @routine_idivl__esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ea2)
  store %struct.Memory* %call_405ea2, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rdi	 RIP: 405ea4	 Bytes: 3
  %loadMem_405ea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ea4 = call %struct.Memory* @routine_movslq__eax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ea4)
  store %struct.Memory* %call_405ea4, %struct.Memory** %MEMORY

  ; Code: movl (%rcx,%rdi,4), %eax	 RIP: 405ea7	 Bytes: 3
  %loadMem_405ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ea7 = call %struct.Memory* @routine_movl___rcx__rdi_4____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ea7)
  store %struct.Memory* %call_405ea7, %struct.Memory** %MEMORY

  ; Code: addl $0x20, %eax	 RIP: 405eaa	 Bytes: 3
  %loadMem_405eaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eaa = call %struct.Memory* @routine_addl__0x20___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eaa)
  store %struct.Memory* %call_405eaa, %struct.Memory** %MEMORY

  ; Code: sarl $0x6, %eax	 RIP: 405ead	 Bytes: 3
  %loadMem_405ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ead = call %struct.Memory* @routine_sarl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ead)
  store %struct.Memory* %call_405ead, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 405eb0	 Bytes: 8
  %loadMem_405eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eb0 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eb0)
  store %struct.Memory* %call_405eb0, %struct.Memory** %MEMORY

  ; Code: addq $0x3338, %rcx	 RIP: 405eb8	 Bytes: 7
  %loadMem_405eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eb8 = call %struct.Memory* @routine_addq__0x3338___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eb8)
  store %struct.Memory* %call_405eb8, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdi	 RIP: 405ebf	 Bytes: 4
  %loadMem_405ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ebf = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ebf)
  store %struct.Memory* %call_405ebf, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 405ec3	 Bytes: 4
  %loadMem_405ec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ec3 = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ec3)
  store %struct.Memory* %call_405ec3, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 405ec7	 Bytes: 3
  %loadMem_405ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ec7 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ec7)
  store %struct.Memory* %call_405ec7, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdi	 RIP: 405eca	 Bytes: 4
  %loadMem_405eca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eca = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eca)
  store %struct.Memory* %call_405eca, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx,%rdi,4)	 RIP: 405ece	 Bytes: 3
  %loadMem_405ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ece = call %struct.Memory* @routine_movl__eax____rcx__rdi_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ece)
  store %struct.Memory* %call_405ece, %struct.Memory** %MEMORY

  ; Code: .L_405ed1:	 RIP: 405ed1	 Bytes: 0
  br label %block_.L_405ed1
block_.L_405ed1:

  ; Code: jmpq .L_405ed6	 RIP: 405ed1	 Bytes: 5
  %loadMem_405ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ed1 = call %struct.Memory* @routine_jmpq_.L_405ed6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ed1, i64 5, i64 5)
  store %struct.Memory* %call_405ed1, %struct.Memory** %MEMORY

  br label %block_.L_405ed6

  ; Code: .L_405ed6:	 RIP: 405ed6	 Bytes: 0
block_.L_405ed6:

  ; Code: movl -0x8(%rbp), %eax	 RIP: 405ed6	 Bytes: 3
  %loadMem_405ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ed6 = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ed6)
  store %struct.Memory* %call_405ed6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405ed9	 Bytes: 3
  %loadMem_405ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ed9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ed9)
  store %struct.Memory* %call_405ed9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 405edc	 Bytes: 3
  %loadMem_405edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405edc = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405edc)
  store %struct.Memory* %call_405edc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405db9	 RIP: 405edf	 Bytes: 5
  %loadMem_405edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405edf = call %struct.Memory* @routine_jmpq_.L_405db9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405edf, i64 -294, i64 5)
  store %struct.Memory* %call_405edf, %struct.Memory** %MEMORY

  br label %block_.L_405db9

  ; Code: .L_405ee4:	 RIP: 405ee4	 Bytes: 0
block_.L_405ee4:

  ; Code: jmpq .L_405ee9	 RIP: 405ee4	 Bytes: 5
  %loadMem_405ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ee4 = call %struct.Memory* @routine_jmpq_.L_405ee9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ee4, i64 5, i64 5)
  store %struct.Memory* %call_405ee4, %struct.Memory** %MEMORY

  br label %block_.L_405ee9

  ; Code: .L_405ee9:	 RIP: 405ee9	 Bytes: 0
block_.L_405ee9:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 405ee9	 Bytes: 3
  %loadMem_405ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ee9 = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ee9)
  store %struct.Memory* %call_405ee9, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 405eec	 Bytes: 3
  %loadMem_405eec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eec = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eec)
  store %struct.Memory* %call_405eec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 405eef	 Bytes: 3
  %loadMem_405eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405eef = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405eef)
  store %struct.Memory* %call_405eef, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405da8	 RIP: 405ef2	 Bytes: 5
  %loadMem_405ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ef2 = call %struct.Memory* @routine_jmpq_.L_405da8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ef2, i64 -330, i64 5)
  store %struct.Memory* %call_405ef2, %struct.Memory** %MEMORY

  br label %block_.L_405da8

  ; Code: .L_405ef7:	 RIP: 405ef7	 Bytes: 0
block_.L_405ef7:

  ; Code: jmpq .L_405efc	 RIP: 405ef7	 Bytes: 5
  %loadMem_405ef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ef7 = call %struct.Memory* @routine_jmpq_.L_405efc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ef7, i64 5, i64 5)
  store %struct.Memory* %call_405ef7, %struct.Memory** %MEMORY

  br label %block_.L_405efc

  ; Code: .L_405efc:	 RIP: 405efc	 Bytes: 0
block_.L_405efc:

  ; Code: movq 0x6cb900, %rax	 RIP: 405efc	 Bytes: 8
  %loadMem_405efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405efc = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405efc)
  store %struct.Memory* %call_405efc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x11c14(%rax)	 RIP: 405f04	 Bytes: 7
  %loadMem_405f04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f04 = call %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f04)
  store %struct.Memory* %call_405f04, %struct.Memory** %MEMORY

  ; Code: jne .L_406241	 RIP: 405f0b	 Bytes: 6
  %loadMem_405f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f0b = call %struct.Memory* @routine_jne_.L_406241(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f0b, i8* %BRANCH_TAKEN, i64 822, i64 6, i64 6)
  store %struct.Memory* %call_405f0b, %struct.Memory** %MEMORY

  %loadBr_405f0b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405f0b = icmp eq i8 %loadBr_405f0b, 1
  br i1 %cmpBr_405f0b, label %block_.L_406241, label %block_405f11

block_405f11:
  ; Code: movl $0x0, -0xc(%rbp)	 RIP: 405f11	 Bytes: 7
  %loadMem_405f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f11 = call %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f11)
  store %struct.Memory* %call_405f11, %struct.Memory** %MEMORY

  ; Code: .L_405f18:	 RIP: 405f18	 Bytes: 0
  br label %block_.L_405f18
block_.L_405f18:

  ; Code: cmpl $0x10, -0xc(%rbp)	 RIP: 405f18	 Bytes: 4
  %loadMem_405f18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f18 = call %struct.Memory* @routine_cmpl__0x10__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f18)
  store %struct.Memory* %call_405f18, %struct.Memory** %MEMORY

  ; Code: jge .L_40623c	 RIP: 405f1c	 Bytes: 6
  %loadMem_405f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f1c = call %struct.Memory* @routine_jge_.L_40623c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f1c, i8* %BRANCH_TAKEN, i64 800, i64 6, i64 6)
  store %struct.Memory* %call_405f1c, %struct.Memory** %MEMORY

  %loadBr_405f1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405f1c = icmp eq i8 %loadBr_405f1c, 1
  br i1 %cmpBr_405f1c, label %block_.L_40623c, label %block_405f22

block_405f22:
  ; Code: movl $0x0, -0x8(%rbp)	 RIP: 405f22	 Bytes: 7
  %loadMem_405f22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f22 = call %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f22)
  store %struct.Memory* %call_405f22, %struct.Memory** %MEMORY

  ; Code: .L_405f29:	 RIP: 405f29	 Bytes: 0
  br label %block_.L_405f29
block_.L_405f29:

  ; Code: cmpl $0x10, -0x8(%rbp)	 RIP: 405f29	 Bytes: 4
  %loadMem_405f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f29 = call %struct.Memory* @routine_cmpl__0x10__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f29)
  store %struct.Memory* %call_405f29, %struct.Memory** %MEMORY

  ; Code: jge .L_406229	 RIP: 405f2d	 Bytes: 6
  %loadMem_405f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f2d = call %struct.Memory* @routine_jge_.L_406229(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f2d, i8* %BRANCH_TAKEN, i64 764, i64 6, i64 6)
  store %struct.Memory* %call_405f2d, %struct.Memory** %MEMORY

  %loadBr_405f2d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405f2d = icmp eq i8 %loadBr_405f2d, 1
  br i1 %cmpBr_405f2d, label %block_.L_406229, label %block_405f33

block_405f33:
  ; Code: cmpl $0x0, -0x8d4(%rbp)	 RIP: 405f33	 Bytes: 7
  %loadMem_405f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f33 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f33)
  store %struct.Memory* %call_405f33, %struct.Memory** %MEMORY

  ; Code: je .L_405fce	 RIP: 405f3a	 Bytes: 6
  %loadMem_405f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f3a = call %struct.Memory* @routine_je_.L_405fce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f3a, i8* %BRANCH_TAKEN, i64 148, i64 6, i64 6)
  store %struct.Memory* %call_405f3a, %struct.Memory** %MEMORY

  %loadBr_405f3a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_405f3a = icmp eq i8 %loadBr_405f3a, 1
  br i1 %cmpBr_405f3a, label %block_.L_405fce, label %block_405f40

block_405f40:
  ; Code: leaq -0x420(%rbp), %rax	 RIP: 405f40	 Bytes: 7
  %loadMem_405f40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f40 = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f40)
  store %struct.Memory* %call_405f40, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 405f47	 Bytes: 4
  %loadMem_405f47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f47 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f47)
  store %struct.Memory* %call_405f47, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 405f4b	 Bytes: 4
  %loadMem_405f4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f4b = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f4b)
  store %struct.Memory* %call_405f4b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405f4f	 Bytes: 3
  %loadMem_405f4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f4f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f4f)
  store %struct.Memory* %call_405f4f, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 405f52	 Bytes: 4
  %loadMem_405f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f52 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f52)
  store %struct.Memory* %call_405f52, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,4), %edx	 RIP: 405f56	 Bytes: 3
  %loadMem_405f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f56 = call %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f56)
  store %struct.Memory* %call_405f56, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rax	 RIP: 405f59	 Bytes: 8
  %loadMem_405f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f59 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f59)
  store %struct.Memory* %call_405f59, %struct.Memory** %MEMORY

  ; Code: addq $0x12b8, %rax	 RIP: 405f61	 Bytes: 6
  %loadMem_405f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f61 = call %struct.Memory* @routine_addq__0x12b8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f61)
  store %struct.Memory* %call_405f61, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rcx	 RIP: 405f67	 Bytes: 4
  %loadMem_405f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f67 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f67)
  store %struct.Memory* %call_405f67, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rcx	 RIP: 405f6b	 Bytes: 4
  %loadMem_405f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f6b = call %struct.Memory* @routine_shlq__0x9___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f6b)
  store %struct.Memory* %call_405f6b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405f6f	 Bytes: 3
  %loadMem_405f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f6f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f6f)
  store %struct.Memory* %call_405f6f, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 405f72	 Bytes: 4
  %loadMem_405f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f72 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f72)
  store %struct.Memory* %call_405f72, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 405f76	 Bytes: 4
  %loadMem_405f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f76 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f76)
  store %struct.Memory* %call_405f76, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 405f7a	 Bytes: 3
  %loadMem_405f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f7a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f7a)
  store %struct.Memory* %call_405f7a, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 405f7d	 Bytes: 4
  %loadMem_405f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f7d = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f7d)
  store %struct.Memory* %call_405f7d, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rcx,2), %esi	 RIP: 405f81	 Bytes: 4
  %loadMem_405f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f81 = call %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f81)
  store %struct.Memory* %call_405f81, %struct.Memory** %MEMORY

  ; Code: addl %esi, %edx	 RIP: 405f85	 Bytes: 2
  %loadMem_405f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f85 = call %struct.Memory* @routine_addl__esi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f85)
  store %struct.Memory* %call_405f85, %struct.Memory** %MEMORY

  ; Code: movw %dx, %di	 RIP: 405f87	 Bytes: 3
  %loadMem_405f87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f87 = call %struct.Memory* @routine_movw__dx___di(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f87)
  store %struct.Memory* %call_405f87, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 405f8a	 Bytes: 8
  %loadMem_405f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f8a = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f8a)
  store %struct.Memory* %call_405f8a, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rax), %rax	 RIP: 405f92	 Bytes: 7
  %loadMem_405f92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f92 = call %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f92)
  store %struct.Memory* %call_405f92, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 405f99	 Bytes: 8
  %loadMem_405f99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405f99 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405f99)
  store %struct.Memory* %call_405f99, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rcx), %edx	 RIP: 405fa1	 Bytes: 6
  %loadMem_405fa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fa1 = call %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fa1)
  store %struct.Memory* %call_405fa1, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %edx	 RIP: 405fa7	 Bytes: 3
  %loadMem_405fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fa7 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fa7)
  store %struct.Memory* %call_405fa7, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 405faa	 Bytes: 3
  %loadMem_405faa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405faa = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405faa)
  store %struct.Memory* %call_405faa, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 405fad	 Bytes: 4
  %loadMem_405fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fad = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fad)
  store %struct.Memory* %call_405fad, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 405fb1	 Bytes: 8
  %loadMem_405fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fb1 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fb1)
  store %struct.Memory* %call_405fb1, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rcx), %edx	 RIP: 405fb9	 Bytes: 6
  %loadMem_405fb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fb9 = call %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fb9)
  store %struct.Memory* %call_405fb9, %struct.Memory** %MEMORY

  ; Code: addl -0x8(%rbp), %edx	 RIP: 405fbf	 Bytes: 3
  %loadMem_405fbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fbf = call %struct.Memory* @routine_addl_MINUS0x8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fbf)
  store %struct.Memory* %call_405fbf, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 405fc2	 Bytes: 3
  %loadMem_405fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fc2 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fc2)
  store %struct.Memory* %call_405fc2, %struct.Memory** %MEMORY

  ; Code: movw %di, (%rax,%rcx,2)	 RIP: 405fc5	 Bytes: 4
  %loadMem_405fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fc5 = call %struct.Memory* @routine_movw__di____rax__rcx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fc5)
  store %struct.Memory* %call_405fc5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_406216	 RIP: 405fc9	 Bytes: 5
  %loadMem_405fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fc9 = call %struct.Memory* @routine_jmpq_.L_406216(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fc9, i64 589, i64 5)
  store %struct.Memory* %call_405fc9, %struct.Memory** %MEMORY

  br label %block_.L_406216

  ; Code: .L_405fce:	 RIP: 405fce	 Bytes: 0
block_.L_405fce:

  ; Code: xorl %eax, %eax	 RIP: 405fce	 Bytes: 2
  %loadMem_405fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fce = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fce)
  store %struct.Memory* %call_405fce, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 405fd0	 Bytes: 2
  %loadMem_405fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fd0 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fd0)
  store %struct.Memory* %call_405fd0, %struct.Memory** %MEMORY

  ; Code: leaq -0x420(%rbp), %rdx	 RIP: 405fd2	 Bytes: 7
  %loadMem_405fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fd2 = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fd2)
  store %struct.Memory* %call_405fd2, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 405fd9	 Bytes: 8
  %loadMem_405fd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fd9 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fd9)
  store %struct.Memory* %call_405fd9, %struct.Memory** %MEMORY

  ; Code: movslq 0x11bec(%rsi), %rsi	 RIP: 405fe1	 Bytes: 7
  %loadMem_405fe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fe1 = call %struct.Memory* @routine_movslq_0x11bec__rsi____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fe1)
  store %struct.Memory* %call_405fe1, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdi	 RIP: 405fe8	 Bytes: 4
  %loadMem_405fe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fe8 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fe8)
  store %struct.Memory* %call_405fe8, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 405fec	 Bytes: 4
  %loadMem_405fec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405fec = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405fec)
  store %struct.Memory* %call_405fec, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rdx	 RIP: 405ff0	 Bytes: 3
  %loadMem_405ff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ff0 = call %struct.Memory* @routine_addq__rdi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ff0)
  store %struct.Memory* %call_405ff0, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdi	 RIP: 405ff3	 Bytes: 4
  %loadMem_405ff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ff3 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ff3)
  store %struct.Memory* %call_405ff3, %struct.Memory** %MEMORY

  ; Code: movslq (%rdx,%rdi,4), %rdx	 RIP: 405ff7	 Bytes: 4
  %loadMem_405ff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ff7 = call %struct.Memory* @routine_movslq___rdx__rdi_4____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ff7)
  store %struct.Memory* %call_405ff7, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdi	 RIP: 405ffb	 Bytes: 8
  %loadMem_405ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_405ffb = call %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_405ffb)
  store %struct.Memory* %call_405ffb, %struct.Memory** %MEMORY

  ; Code: addq $0x12b8, %rdi	 RIP: 406003	 Bytes: 7
  %loadMem_406003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406003 = call %struct.Memory* @routine_addq__0x12b8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406003)
  store %struct.Memory* %call_406003, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %r8	 RIP: 40600a	 Bytes: 4
  %loadMem_40600a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40600a = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40600a)
  store %struct.Memory* %call_40600a, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %r8	 RIP: 40600e	 Bytes: 4
  %loadMem_40600e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40600e = call %struct.Memory* @routine_shlq__0x9___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40600e)
  store %struct.Memory* %call_40600e, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdi	 RIP: 406012	 Bytes: 3
  %loadMem_406012 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406012 = call %struct.Memory* @routine_addq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406012)
  store %struct.Memory* %call_406012, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %r8	 RIP: 406015	 Bytes: 4
  %loadMem_406015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406015 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406015)
  store %struct.Memory* %call_406015, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 406019	 Bytes: 4
  %loadMem_406019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406019 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406019)
  store %struct.Memory* %call_406019, %struct.Memory** %MEMORY

  ; Code: addq %r8, %rdi	 RIP: 40601d	 Bytes: 3
  %loadMem_40601d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40601d = call %struct.Memory* @routine_addq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40601d)
  store %struct.Memory* %call_40601d, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %r8	 RIP: 406020	 Bytes: 4
  %loadMem_406020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406020 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406020)
  store %struct.Memory* %call_406020, %struct.Memory** %MEMORY

  ; Code: movzwl (%rdi,%r8,2), %eax	 RIP: 406024	 Bytes: 5
  %loadMem_406024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406024 = call %struct.Memory* @routine_movzwl___rdi__r8_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406024)
  store %struct.Memory* %call_406024, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 406029	 Bytes: 2
  %loadMem_406029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406029 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406029)
  store %struct.Memory* %call_406029, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rdi	 RIP: 40602b	 Bytes: 4
  %loadMem_40602b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40602b = call %struct.Memory* @routine_shlq__0x6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40602b)
  store %struct.Memory* %call_40602b, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rdx	 RIP: 40602f	 Bytes: 3
  %loadMem_40602f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40602f = call %struct.Memory* @routine_addq__rdi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40602f)
  store %struct.Memory* %call_40602f, %struct.Memory** %MEMORY

  ; Code: addq $0x20, %rdx	 RIP: 406032	 Bytes: 4
  %loadMem_406032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406032 = call %struct.Memory* @routine_addq__0x20___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406032)
  store %struct.Memory* %call_406032, %struct.Memory** %MEMORY

  ; Code: sarq $0x6, %rdx	 RIP: 406036	 Bytes: 4
  %loadMem_406036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406036 = call %struct.Memory* @routine_sarq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406036)
  store %struct.Memory* %call_406036, %struct.Memory** %MEMORY

  ; Code: cmpq %rdx, %rcx	 RIP: 40603a	 Bytes: 3
  %loadMem_40603a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40603a = call %struct.Memory* @routine_cmpq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40603a)
  store %struct.Memory* %call_40603a, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x928(%rbp)	 RIP: 40603d	 Bytes: 7
  %loadMem_40603d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40603d = call %struct.Memory* @routine_movq__rsi__MINUS0x928__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40603d)
  store %struct.Memory* %call_40603d, %struct.Memory** %MEMORY

  ; Code: jle .L_40605a	 RIP: 406044	 Bytes: 6
  %loadMem_406044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406044 = call %struct.Memory* @routine_jle_.L_40605a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406044, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_406044, %struct.Memory** %MEMORY

  %loadBr_406044 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_406044 = icmp eq i8 %loadBr_406044, 1
  br i1 %cmpBr_406044, label %block_.L_40605a, label %block_40604a

block_40604a:
  ; Code: xorl %eax, %eax	 RIP: 40604a	 Bytes: 2
  %loadMem_40604a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40604a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40604a)
  store %struct.Memory* %call_40604a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40604c	 Bytes: 2
  %loadMem_40604c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40604c = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40604c)
  store %struct.Memory* %call_40604c, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x930(%rbp)	 RIP: 40604e	 Bytes: 7
  %loadMem_40604e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40604e = call %struct.Memory* @routine_movq__rcx__MINUS0x930__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40604e)
  store %struct.Memory* %call_40604e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4060b9	 RIP: 406055	 Bytes: 5
  %loadMem_406055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406055 = call %struct.Memory* @routine_jmpq_.L_4060b9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406055, i64 100, i64 5)
  store %struct.Memory* %call_406055, %struct.Memory** %MEMORY

  br label %block_.L_4060b9

  ; Code: .L_40605a:	 RIP: 40605a	 Bytes: 0
block_.L_40605a:

  ; Code: leaq -0x420(%rbp), %rax	 RIP: 40605a	 Bytes: 7
  %loadMem_40605a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40605a = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40605a)
  store %struct.Memory* %call_40605a, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 406061	 Bytes: 4
  %loadMem_406061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406061 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406061)
  store %struct.Memory* %call_406061, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 406065	 Bytes: 4
  %loadMem_406065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406065 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406065)
  store %struct.Memory* %call_406065, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 406069	 Bytes: 3
  %loadMem_406069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406069 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406069)
  store %struct.Memory* %call_406069, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 40606c	 Bytes: 4
  %loadMem_40606c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40606c = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40606c)
  store %struct.Memory* %call_40606c, %struct.Memory** %MEMORY

  ; Code: movslq (%rax,%rcx,4), %rax	 RIP: 406070	 Bytes: 4
  %loadMem_406070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406070 = call %struct.Memory* @routine_movslq___rax__rcx_4____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406070)
  store %struct.Memory* %call_406070, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 406074	 Bytes: 8
  %loadMem_406074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406074 = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406074)
  store %struct.Memory* %call_406074, %struct.Memory** %MEMORY

  ; Code: addq $0x12b8, %rcx	 RIP: 40607c	 Bytes: 7
  %loadMem_40607c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40607c = call %struct.Memory* @routine_addq__0x12b8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40607c)
  store %struct.Memory* %call_40607c, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 406083	 Bytes: 4
  %loadMem_406083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406083 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406083)
  store %struct.Memory* %call_406083, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 406087	 Bytes: 4
  %loadMem_406087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406087 = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406087)
  store %struct.Memory* %call_406087, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40608b	 Bytes: 3
  %loadMem_40608b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40608b = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40608b)
  store %struct.Memory* %call_40608b, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 40608e	 Bytes: 4
  %loadMem_40608e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40608e = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40608e)
  store %struct.Memory* %call_40608e, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 406092	 Bytes: 4
  %loadMem_406092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406092 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406092)
  store %struct.Memory* %call_406092, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 406096	 Bytes: 3
  %loadMem_406096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406096 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406096)
  store %struct.Memory* %call_406096, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 406099	 Bytes: 4
  %loadMem_406099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406099 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406099)
  store %struct.Memory* %call_406099, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 40609d	 Bytes: 4
  %loadMem_40609d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40609d = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40609d)
  store %struct.Memory* %call_40609d, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4060a1	 Bytes: 2
  %loadMem_4060a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060a1 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060a1)
  store %struct.Memory* %call_4060a1, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4060a3	 Bytes: 4
  %loadMem_4060a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060a3 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060a3)
  store %struct.Memory* %call_4060a3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4060a7	 Bytes: 3
  %loadMem_4060a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060a7 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060a7)
  store %struct.Memory* %call_4060a7, %struct.Memory** %MEMORY

  ; Code: addq $0x20, %rax	 RIP: 4060aa	 Bytes: 4
  %loadMem_4060aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060aa = call %struct.Memory* @routine_addq__0x20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060aa)
  store %struct.Memory* %call_4060aa, %struct.Memory** %MEMORY

  ; Code: sarq $0x6, %rax	 RIP: 4060ae	 Bytes: 4
  %loadMem_4060ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060ae = call %struct.Memory* @routine_sarq__0x6___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060ae)
  store %struct.Memory* %call_4060ae, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x930(%rbp)	 RIP: 4060b2	 Bytes: 7
  %loadMem_4060b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060b2 = call %struct.Memory* @routine_movq__rax__MINUS0x930__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060b2)
  store %struct.Memory* %call_4060b2, %struct.Memory** %MEMORY

  ; Code: .L_4060b9:	 RIP: 4060b9	 Bytes: 0
  br label %block_.L_4060b9
block_.L_4060b9:

  ; Code: movq -0x930(%rbp), %rax	 RIP: 4060b9	 Bytes: 7
  %loadMem_4060b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060b9 = call %struct.Memory* @routine_movq_MINUS0x930__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060b9)
  store %struct.Memory* %call_4060b9, %struct.Memory** %MEMORY

  ; Code: movq -0x928(%rbp), %rcx	 RIP: 4060c0	 Bytes: 7
  %loadMem_4060c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060c0 = call %struct.Memory* @routine_movq_MINUS0x928__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060c0)
  store %struct.Memory* %call_4060c0, %struct.Memory** %MEMORY

  ; Code: cmpq %rax, %rcx	 RIP: 4060c7	 Bytes: 3
  %loadMem_4060c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060c7 = call %struct.Memory* @routine_cmpq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060c7)
  store %struct.Memory* %call_4060c7, %struct.Memory** %MEMORY

  ; Code: jge .L_4060eb	 RIP: 4060ca	 Bytes: 6
  %loadMem_4060ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060ca = call %struct.Memory* @routine_jge_.L_4060eb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060ca, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_4060ca, %struct.Memory** %MEMORY

  %loadBr_4060ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4060ca = icmp eq i8 %loadBr_4060ca, 1
  br i1 %cmpBr_4060ca, label %block_.L_4060eb, label %block_4060d0

block_4060d0:
  ; Code: movq 0x6cb900, %rax	 RIP: 4060d0	 Bytes: 8
  %loadMem_4060d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060d0 = call %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060d0)
  store %struct.Memory* %call_4060d0, %struct.Memory** %MEMORY

  ; Code: movslq 0x11bec(%rax), %rax	 RIP: 4060d8	 Bytes: 7
  %loadMem_4060d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060d8 = call %struct.Memory* @routine_movslq_0x11bec__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060d8)
  store %struct.Memory* %call_4060d8, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x938(%rbp)	 RIP: 4060df	 Bytes: 7
  %loadMem_4060df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060df = call %struct.Memory* @routine_movq__rax__MINUS0x938__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060df)
  store %struct.Memory* %call_4060df, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4061cd	 RIP: 4060e6	 Bytes: 5
  %loadMem_4060e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060e6 = call %struct.Memory* @routine_jmpq_.L_4061cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060e6, i64 231, i64 5)
  store %struct.Memory* %call_4060e6, %struct.Memory** %MEMORY

  br label %block_.L_4061cd

  ; Code: .L_4060eb:	 RIP: 4060eb	 Bytes: 0
block_.L_4060eb:

  ; Code: xorl %eax, %eax	 RIP: 4060eb	 Bytes: 2
  %loadMem_4060eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060eb = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060eb)
  store %struct.Memory* %call_4060eb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4060ed	 Bytes: 2
  %loadMem_4060ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060ed = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060ed)
  store %struct.Memory* %call_4060ed, %struct.Memory** %MEMORY

  ; Code: leaq -0x420(%rbp), %rdx	 RIP: 4060ef	 Bytes: 7
  %loadMem_4060ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060ef = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060ef)
  store %struct.Memory* %call_4060ef, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rsi	 RIP: 4060f6	 Bytes: 4
  %loadMem_4060f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060f6 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060f6)
  store %struct.Memory* %call_4060f6, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 4060fa	 Bytes: 4
  %loadMem_4060fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060fa = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060fa)
  store %struct.Memory* %call_4060fa, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 4060fe	 Bytes: 3
  %loadMem_4060fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4060fe = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4060fe)
  store %struct.Memory* %call_4060fe, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rsi	 RIP: 406101	 Bytes: 4
  %loadMem_406101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406101 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406101)
  store %struct.Memory* %call_406101, %struct.Memory** %MEMORY

  ; Code: movslq (%rdx,%rsi,4), %rdx	 RIP: 406105	 Bytes: 4
  %loadMem_406105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406105 = call %struct.Memory* @routine_movslq___rdx__rsi_4____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406105)
  store %struct.Memory* %call_406105, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rsi	 RIP: 406109	 Bytes: 8
  %loadMem_406109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406109 = call %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406109)
  store %struct.Memory* %call_406109, %struct.Memory** %MEMORY

  ; Code: addq $0x12b8, %rsi	 RIP: 406111	 Bytes: 7
  %loadMem_406111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406111 = call %struct.Memory* @routine_addq__0x12b8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406111)
  store %struct.Memory* %call_406111, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdi	 RIP: 406118	 Bytes: 4
  %loadMem_406118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406118 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406118)
  store %struct.Memory* %call_406118, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdi	 RIP: 40611c	 Bytes: 4
  %loadMem_40611c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40611c = call %struct.Memory* @routine_shlq__0x9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40611c)
  store %struct.Memory* %call_40611c, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 406120	 Bytes: 3
  %loadMem_406120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406120 = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406120)
  store %struct.Memory* %call_406120, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdi	 RIP: 406123	 Bytes: 4
  %loadMem_406123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406123 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406123)
  store %struct.Memory* %call_406123, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdi	 RIP: 406127	 Bytes: 4
  %loadMem_406127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406127 = call %struct.Memory* @routine_shlq__0x5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406127)
  store %struct.Memory* %call_406127, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rsi	 RIP: 40612b	 Bytes: 3
  %loadMem_40612b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40612b = call %struct.Memory* @routine_addq__rdi___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40612b)
  store %struct.Memory* %call_40612b, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdi	 RIP: 40612e	 Bytes: 4
  %loadMem_40612e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40612e = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40612e)
  store %struct.Memory* %call_40612e, %struct.Memory** %MEMORY

  ; Code: movzwl (%rsi,%rdi,2), %eax	 RIP: 406132	 Bytes: 4
  %loadMem_406132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406132 = call %struct.Memory* @routine_movzwl___rsi__rdi_2____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406132)
  store %struct.Memory* %call_406132, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 406136	 Bytes: 2
  %loadMem_406136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406136 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406136)
  store %struct.Memory* %call_406136, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rsi	 RIP: 406138	 Bytes: 4
  %loadMem_406138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406138 = call %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406138)
  store %struct.Memory* %call_406138, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %rdx	 RIP: 40613c	 Bytes: 3
  %loadMem_40613c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40613c = call %struct.Memory* @routine_addq__rsi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40613c)
  store %struct.Memory* %call_40613c, %struct.Memory** %MEMORY

  ; Code: addq $0x20, %rdx	 RIP: 40613f	 Bytes: 4
  %loadMem_40613f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40613f = call %struct.Memory* @routine_addq__0x20___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40613f)
  store %struct.Memory* %call_40613f, %struct.Memory** %MEMORY

  ; Code: sarq $0x6, %rdx	 RIP: 406143	 Bytes: 4
  %loadMem_406143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406143 = call %struct.Memory* @routine_sarq__0x6___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406143)
  store %struct.Memory* %call_406143, %struct.Memory** %MEMORY

  ; Code: cmpq %rdx, %rcx	 RIP: 406147	 Bytes: 3
  %loadMem_406147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406147 = call %struct.Memory* @routine_cmpq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406147)
  store %struct.Memory* %call_406147, %struct.Memory** %MEMORY

  ; Code: jle .L_406160	 RIP: 40614a	 Bytes: 6
  %loadMem_40614a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40614a = call %struct.Memory* @routine_jle_.L_406160(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40614a, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_40614a, %struct.Memory** %MEMORY

  %loadBr_40614a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40614a = icmp eq i8 %loadBr_40614a, 1
  br i1 %cmpBr_40614a, label %block_.L_406160, label %block_406150

block_406150:
  ; Code: xorl %eax, %eax	 RIP: 406150	 Bytes: 2
  %loadMem_406150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406150 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406150)
  store %struct.Memory* %call_406150, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 406152	 Bytes: 2
  %loadMem_406152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406152 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406152)
  store %struct.Memory* %call_406152, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x940(%rbp)	 RIP: 406154	 Bytes: 7
  %loadMem_406154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406154 = call %struct.Memory* @routine_movq__rcx__MINUS0x940__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406154)
  store %struct.Memory* %call_406154, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4061bf	 RIP: 40615b	 Bytes: 5
  %loadMem_40615b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40615b = call %struct.Memory* @routine_jmpq_.L_4061bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40615b, i64 100, i64 5)
  store %struct.Memory* %call_40615b, %struct.Memory** %MEMORY

  br label %block_.L_4061bf

  ; Code: .L_406160:	 RIP: 406160	 Bytes: 0
block_.L_406160:

  ; Code: leaq -0x420(%rbp), %rax	 RIP: 406160	 Bytes: 7
  %loadMem_406160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406160 = call %struct.Memory* @routine_leaq_MINUS0x420__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406160)
  store %struct.Memory* %call_406160, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rcx	 RIP: 406167	 Bytes: 4
  %loadMem_406167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406167 = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406167)
  store %struct.Memory* %call_406167, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 40616b	 Bytes: 4
  %loadMem_40616b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40616b = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40616b)
  store %struct.Memory* %call_40616b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 40616f	 Bytes: 3
  %loadMem_40616f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40616f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40616f)
  store %struct.Memory* %call_40616f, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rcx	 RIP: 406172	 Bytes: 4
  %loadMem_406172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406172 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406172)
  store %struct.Memory* %call_406172, %struct.Memory** %MEMORY

  ; Code: movslq (%rax,%rcx,4), %rax	 RIP: 406176	 Bytes: 4
  %loadMem_406176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406176 = call %struct.Memory* @routine_movslq___rax__rcx_4____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406176)
  store %struct.Memory* %call_406176, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rcx	 RIP: 40617a	 Bytes: 8
  %loadMem_40617a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40617a = call %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40617a)
  store %struct.Memory* %call_40617a, %struct.Memory** %MEMORY

  ; Code: addq $0x12b8, %rcx	 RIP: 406182	 Bytes: 7
  %loadMem_406182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406182 = call %struct.Memory* @routine_addq__0x12b8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406182)
  store %struct.Memory* %call_406182, %struct.Memory** %MEMORY

  ; Code: movslq -0x4(%rbp), %rdx	 RIP: 406189	 Bytes: 4
  %loadMem_406189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406189 = call %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406189)
  store %struct.Memory* %call_406189, %struct.Memory** %MEMORY

  ; Code: shlq $0x9, %rdx	 RIP: 40618d	 Bytes: 4
  %loadMem_40618d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40618d = call %struct.Memory* @routine_shlq__0x9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40618d)
  store %struct.Memory* %call_40618d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 406191	 Bytes: 3
  %loadMem_406191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406191 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406191)
  store %struct.Memory* %call_406191, %struct.Memory** %MEMORY

  ; Code: movslq -0xc(%rbp), %rdx	 RIP: 406194	 Bytes: 4
  %loadMem_406194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406194 = call %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406194)
  store %struct.Memory* %call_406194, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 406198	 Bytes: 4
  %loadMem_406198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406198 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406198)
  store %struct.Memory* %call_406198, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 40619c	 Bytes: 3
  %loadMem_40619c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40619c = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40619c)
  store %struct.Memory* %call_40619c, %struct.Memory** %MEMORY

  ; Code: movslq -0x8(%rbp), %rdx	 RIP: 40619f	 Bytes: 4
  %loadMem_40619f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40619f = call %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40619f)
  store %struct.Memory* %call_40619f, %struct.Memory** %MEMORY

  ; Code: movzwl (%rcx,%rdx,2), %esi	 RIP: 4061a3	 Bytes: 4
  %loadMem_4061a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061a3 = call %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061a3)
  store %struct.Memory* %call_4061a3, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4061a7	 Bytes: 2
  %loadMem_4061a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061a7 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061a7)
  store %struct.Memory* %call_4061a7, %struct.Memory** %MEMORY

  ; Code: shlq $0x6, %rcx	 RIP: 4061a9	 Bytes: 4
  %loadMem_4061a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061a9 = call %struct.Memory* @routine_shlq__0x6___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061a9)
  store %struct.Memory* %call_4061a9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4061ad	 Bytes: 3
  %loadMem_4061ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061ad = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061ad)
  store %struct.Memory* %call_4061ad, %struct.Memory** %MEMORY

  ; Code: addq $0x20, %rax	 RIP: 4061b0	 Bytes: 4
  %loadMem_4061b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061b0 = call %struct.Memory* @routine_addq__0x20___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061b0)
  store %struct.Memory* %call_4061b0, %struct.Memory** %MEMORY

  ; Code: sarq $0x6, %rax	 RIP: 4061b4	 Bytes: 4
  %loadMem_4061b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061b4 = call %struct.Memory* @routine_sarq__0x6___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061b4)
  store %struct.Memory* %call_4061b4, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x940(%rbp)	 RIP: 4061b8	 Bytes: 7
  %loadMem_4061b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061b8 = call %struct.Memory* @routine_movq__rax__MINUS0x940__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061b8)
  store %struct.Memory* %call_4061b8, %struct.Memory** %MEMORY

  ; Code: .L_4061bf:	 RIP: 4061bf	 Bytes: 0
  br label %block_.L_4061bf
block_.L_4061bf:

  ; Code: movq -0x940(%rbp), %rax	 RIP: 4061bf	 Bytes: 7
  %loadMem_4061bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061bf = call %struct.Memory* @routine_movq_MINUS0x940__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061bf)
  store %struct.Memory* %call_4061bf, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x938(%rbp)	 RIP: 4061c6	 Bytes: 7
  %loadMem_4061c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061c6 = call %struct.Memory* @routine_movq__rax__MINUS0x938__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061c6)
  store %struct.Memory* %call_4061c6, %struct.Memory** %MEMORY

  ; Code: .L_4061cd:	 RIP: 4061cd	 Bytes: 0
  br label %block_.L_4061cd
block_.L_4061cd:

  ; Code: movq -0x938(%rbp), %rax	 RIP: 4061cd	 Bytes: 7
  %loadMem_4061cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061cd = call %struct.Memory* @routine_movq_MINUS0x938__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061cd)
  store %struct.Memory* %call_4061cd, %struct.Memory** %MEMORY

  ; Code: movw %ax, %cx	 RIP: 4061d4	 Bytes: 3
  %loadMem_4061d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061d4 = call %struct.Memory* @routine_movw__ax___cx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061d4)
  store %struct.Memory* %call_4061d4, %struct.Memory** %MEMORY

  ; Code: movq 0x70fcf0, %rax	 RIP: 4061d7	 Bytes: 8
  %loadMem_4061d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061d7 = call %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061d7)
  store %struct.Memory* %call_4061d7, %struct.Memory** %MEMORY

  ; Code: movq 0x1918(%rax), %rax	 RIP: 4061df	 Bytes: 7
  %loadMem_4061df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061df = call %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061df)
  store %struct.Memory* %call_4061df, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4061e6	 Bytes: 8
  %loadMem_4061e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061e6 = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061e6)
  store %struct.Memory* %call_4061e6, %struct.Memory** %MEMORY

  ; Code: movl 0x9c(%rdx), %esi	 RIP: 4061ee	 Bytes: 6
  %loadMem_4061ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061ee = call %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061ee)
  store %struct.Memory* %call_4061ee, %struct.Memory** %MEMORY

  ; Code: addl -0xc(%rbp), %esi	 RIP: 4061f4	 Bytes: 3
  %loadMem_4061f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061f4 = call %struct.Memory* @routine_addl_MINUS0xc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061f4)
  store %struct.Memory* %call_4061f4, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 4061f7	 Bytes: 3
  %loadMem_4061f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061f7 = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061f7)
  store %struct.Memory* %call_4061f7, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rdx,8), %rax	 RIP: 4061fa	 Bytes: 4
  %loadMem_4061fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061fa = call %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061fa)
  store %struct.Memory* %call_4061fa, %struct.Memory** %MEMORY

  ; Code: movq 0x6cb900, %rdx	 RIP: 4061fe	 Bytes: 8
  %loadMem_4061fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4061fe = call %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4061fe)
  store %struct.Memory* %call_4061fe, %struct.Memory** %MEMORY

  ; Code: movl 0x98(%rdx), %esi	 RIP: 406206	 Bytes: 6
  %loadMem_406206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406206 = call %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406206)
  store %struct.Memory* %call_406206, %struct.Memory** %MEMORY

  ; Code: addl -0x8(%rbp), %esi	 RIP: 40620c	 Bytes: 3
  %loadMem_40620c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40620c = call %struct.Memory* @routine_addl_MINUS0x8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40620c)
  store %struct.Memory* %call_40620c, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdx	 RIP: 40620f	 Bytes: 3
  %loadMem_40620f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40620f = call %struct.Memory* @routine_movslq__esi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40620f)
  store %struct.Memory* %call_40620f, %struct.Memory** %MEMORY

  ; Code: movw %cx, (%rax,%rdx,2)	 RIP: 406212	 Bytes: 4
  %loadMem_406212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406212 = call %struct.Memory* @routine_movw__cx____rax__rdx_2_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406212)
  store %struct.Memory* %call_406212, %struct.Memory** %MEMORY

  ; Code: .L_406216:	 RIP: 406216	 Bytes: 0
  br label %block_.L_406216
block_.L_406216:

  ; Code: jmpq .L_40621b	 RIP: 406216	 Bytes: 5
  %loadMem_406216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406216 = call %struct.Memory* @routine_jmpq_.L_40621b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406216, i64 5, i64 5)
  store %struct.Memory* %call_406216, %struct.Memory** %MEMORY

  br label %block_.L_40621b

  ; Code: .L_40621b:	 RIP: 40621b	 Bytes: 0
block_.L_40621b:

  ; Code: movl -0x8(%rbp), %eax	 RIP: 40621b	 Bytes: 3
  %loadMem_40621b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40621b = call %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40621b)
  store %struct.Memory* %call_40621b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 40621e	 Bytes: 3
  %loadMem_40621e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40621e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40621e)
  store %struct.Memory* %call_40621e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x8(%rbp)	 RIP: 406221	 Bytes: 3
  %loadMem_406221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406221 = call %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406221)
  store %struct.Memory* %call_406221, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405f29	 RIP: 406224	 Bytes: 5
  %loadMem_406224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406224 = call %struct.Memory* @routine_jmpq_.L_405f29(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406224, i64 -763, i64 5)
  store %struct.Memory* %call_406224, %struct.Memory** %MEMORY

  br label %block_.L_405f29

  ; Code: .L_406229:	 RIP: 406229	 Bytes: 0
block_.L_406229:

  ; Code: jmpq .L_40622e	 RIP: 406229	 Bytes: 5
  %loadMem_406229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406229 = call %struct.Memory* @routine_jmpq_.L_40622e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406229, i64 5, i64 5)
  store %struct.Memory* %call_406229, %struct.Memory** %MEMORY

  br label %block_.L_40622e

  ; Code: .L_40622e:	 RIP: 40622e	 Bytes: 0
block_.L_40622e:

  ; Code: movl -0xc(%rbp), %eax	 RIP: 40622e	 Bytes: 3
  %loadMem_40622e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40622e = call %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40622e)
  store %struct.Memory* %call_40622e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 406231	 Bytes: 3
  %loadMem_406231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406231 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406231)
  store %struct.Memory* %call_406231, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xc(%rbp)	 RIP: 406234	 Bytes: 3
  %loadMem_406234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406234 = call %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406234)
  store %struct.Memory* %call_406234, %struct.Memory** %MEMORY

  ; Code: jmpq .L_405f18	 RIP: 406237	 Bytes: 5
  %loadMem_406237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406237 = call %struct.Memory* @routine_jmpq_.L_405f18(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406237, i64 -799, i64 5)
  store %struct.Memory* %call_406237, %struct.Memory** %MEMORY

  br label %block_.L_405f18

  ; Code: .L_40623c:	 RIP: 40623c	 Bytes: 0
block_.L_40623c:

  ; Code: jmpq .L_406241	 RIP: 40623c	 Bytes: 5
  %loadMem_40623c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40623c = call %struct.Memory* @routine_jmpq_.L_406241(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40623c, i64 5, i64 5)
  store %struct.Memory* %call_40623c, %struct.Memory** %MEMORY

  br label %block_.L_406241

  ; Code: .L_406241:	 RIP: 406241	 Bytes: 0
block_.L_406241:

  ; Code: movl -0x8a0(%rbp), %eax	 RIP: 406241	 Bytes: 6
  %loadMem_406241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406241 = call %struct.Memory* @routine_movl_MINUS0x8a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406241)
  store %struct.Memory* %call_406241, %struct.Memory** %MEMORY

  ; Code: addq $0x940, %rsp	 RIP: 406247	 Bytes: 7
  %loadMem_406247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_406247 = call %struct.Memory* @routine_addq__0x940___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_406247)
  store %struct.Memory* %call_406247, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 40624e	 Bytes: 1
  %loadMem_40624e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40624e = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40624e)
  store %struct.Memory* %call_40624e, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 40624f	 Bytes: 1
  %loadMem_40624f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40624f = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40624f)
  store %struct.Memory* %call_40624f, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_40624f
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x940___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 2368)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__al___cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %CL, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x3758__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_0xc__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x278___rsi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 632)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rdx__MINUS0x8a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2216
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x3740__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 14144
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq___rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__rdx__MINUS0x8b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2232
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rdx__MINUS0x8c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2240
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x8a8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_0xc__rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_0x11bdc__rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__cl__MINUS0x8d5__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2261
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_4044a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x1__0x11c00__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4SETZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sete__cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4SETZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %CL)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  store i8 %6, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb_MINUS0x8d5__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2261
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x6___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 6)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i8
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %6 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i8 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i8 %7, 7
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %11, i64 1)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 255
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl__al___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x8d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2260
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x8a8__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0xc__rsi____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_0x11bdc__rsi____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 0)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x894__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xc__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addl_0x11bdc__rsi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 72668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 0)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__edx__MINUS0x898__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2200
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x894__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0xf___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 15)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx__MINUS0x89c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2204
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x0__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x10__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 16)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_4046a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x10__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 16)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40468d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11c14__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72724
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4045cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x420__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x726418___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x726418_type* @G_0x726418 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_0xac__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0xc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx__rdx_8____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0xa8__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = zext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl___rcx__rdx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x12b8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4792)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x9___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 5)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzwl___rcx__rdx_2____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__edi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_404605(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_addq__0x3338___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 13112)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_shlq__0x6___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 6)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}












define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x880__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x420__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 6)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rdx__rsi_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl_MINUS0x8__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x8dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2268
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x8dc__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2268
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_idivl__r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R8D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq__edx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 8)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rsi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movslq__eax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0xc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl__edi____rcx__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404527(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_404692(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404516(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_cmpl__0x4__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movb__cl__MINUS0x8dd__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2269
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_4046cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x8d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2260
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_setne__al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %AL)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i8
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %6 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i8 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i8 %7, 7
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorb__0xff___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %11, i64 255)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movb__al__MINUS0x8dd__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2269
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x8dd__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2269
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = and i64 %3, %2
  %6 = trunc i64 %5 to i8
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = trunc i64 %5 to i32
  %9 = and i32 %8, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9) #22
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = icmp eq i8 %6, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i8 %6, 7
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_jne_.L_4046e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_404ac4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x4__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_404ab1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4048d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4047f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x880__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x3___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 3)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0x8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_shlq__0x8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 8)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rdx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_shlq__0x4___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rsi__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_addl___rsi__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RSI
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1136
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}






























define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_subl___rax__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__MINUS0x470__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1136
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}








define %struct.Memory* @routine_jmpq_.L_404709(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl_MINUS0x470__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x46c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1132
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_movl__ecx____rsi__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_subl_MINUS0x46c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1132
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__0x200___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 512)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx____rdx__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x464__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addl_MINUS0x468__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addq__0x100___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 256)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_movl_MINUS0x468__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_subl__edi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addq__0x300___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 768)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__ecx____rax__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ECX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_4046f8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpl__0x4__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_404a9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4049d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_subl_MINUS0xc__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








































define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




























































define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_4048e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














































define %struct.Memory* @routine_movl__ecx__0x20__rsi__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 32
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}
























define %struct.Memory* @routine_movl__ecx__0x10__rsi__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 16
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}
























define %struct.Memory* @routine_movl__ecx__0x30__rax__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, 48
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}








define %struct.Memory* @routine_jmpq_.L_4048d7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_404aa3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4046e7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_404ab6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4046a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_404b39(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_404b26(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x460__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jmpq_.L_404adc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_404b2b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_404acb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movb__cl__MINUS0x8de__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2270
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_404b66(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movb__al__MINUS0x8de__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2270
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x8de__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2270
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_404b79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_404c7b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_404c11(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






































































define %struct.Memory* @routine_jmpq_.L_404b80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x470__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x46c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1132
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x460__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1120
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}




define %struct.Memory* @routine_subl_MINUS0x46c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1132
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x440__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1088
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_movl_MINUS0x464__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x468__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x450__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1104
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}




define %struct.Memory* @routine_subl_MINUS0x468__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x430__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1072
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}








define %struct.Memory* @routine_jmpq_.L_404b40(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movb__cl__MINUS0x8df__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2271
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_404ca8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movb__al__MINUS0x8df__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2271
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x8df__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2271
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_404cbb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_404de4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_404d53(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






































































define %struct.Memory* @routine_jmpq_.L_404cc2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__ecx____rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}
















define %struct.Memory* @routine_movl__ecx__0x8__rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}
















define %struct.Memory* @routine_movl__ecx__0x4__rsi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_subl_MINUS0x468__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movl__ecx__0xc__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jmpq_.L_404c82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0x884__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2180
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x888__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x88c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2188
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x10__MINUS0x88c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2188
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 16)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_40505f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11afc__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72444
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404e47(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x6d4750(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x6d4750_type* @G_0x6d4750 to i64), i64 0)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_404e70(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x11948__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72008
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movslq_MINUS0x88c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = zext i8 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl_0x4b2380___rax_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924288
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movzbl_0x4b2381___rax_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924289
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0xc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404e94(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movzbl_0x4b2360___rax_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924256
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movzbl_0x4b2361___rax_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 2
  %14 = add i64 %13, 4924257
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x884__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x884__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_je_.L_404ed9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl___rax__rcx_4____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.abs_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x890__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404f44(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}















define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x710020___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 7405600)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x70e8f0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x70e8f0_type* @G__0x70e8f0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x898__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6
  %8 = shl i64 %3, 32
  %9 = ashr exact i64 %8, 32
  %10 = sext i32 %7 to i64
  %11 = mul  i64 %10, %9
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull___rdx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x894__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl___rcx____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__edi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x89c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %10 [
    i5 0, label %43
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 32
  %9 = ashr i64 %8, 33
  br label %19

; <label>:10:                                     ; preds = %5
  %11 = and i64 %4, 31
  %12 = add  i64 %11, -1
  %13 = shl i64 %3, 32
  %14 = ashr exact i64 %13, 32
  %15 = ashr i64 %14, %12
  %16 = icmp ne i8 0, 0
  %17 = zext i1 %16 to i8
  %18 = lshr i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %10, %7
  %20 = phi i8 [ 0, %10 ], [ 0, %7 ]
  %21 = phi i64 [ %18, %10 ], [ %9, %7 ]
  %22 = phi i8 [ %17, %10 ], [ 0, %7 ]
  %23 = phi i64 [ %15, %10 ], [ %3, %7 ]
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = trunc i64 %21 to i32
  %27 = and i64 %21, 4294967295
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %25, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %30 = and i32 %26, 255
  %31 = tail call i32 @llvm.ctpop.i32(i32 %30) #22
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  store i8 %34, i8* %29, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %37 = icmp eq i32 %26, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %40 = lshr i32 %26, 31
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %39, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %42, align 1
  br label %43

; <label>:43:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarl__cl___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x6cb8f8_type* @G_0x6cb8f8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x0__0x934__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2356
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_404f8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0xa__0x28__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_404f8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x80f__MINUS0x890__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2063)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_404f85(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x80f__MINUS0x890__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2063)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_404f8a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x890__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_404ffc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x890__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_callq_.sign(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x8b8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x888__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}




define %struct.Memory* @routine_movq_MINUS0x8c0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x888__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x888__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jne_.L_405046(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_leaq_MINUS0x460__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jmpq_.L_40504b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x88c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x88c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_404e02(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_MINUS0x8b8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x888__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0____rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movb__cl__MINUS0x8e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2272
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_4050a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movb__al__MINUS0x8e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2272
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x8e0__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2272
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_4050b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4051d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4050f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x470__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1136
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}








define %struct.Memory* @routine_jmpq_.L_4050bb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x480__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x47c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x46c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0x464__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1124
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x478__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_addl_MINUS0x464__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1124
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x474__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jge_.L_4051c3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1152
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_addl_MINUS0x480__rbp__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1152
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}




















define %struct.Memory* @routine_subl_MINUS0x480__rbp__rdx_4____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1152
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


















define %struct.Memory* @routine_jmpq_.L_405146(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4051c8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_40507b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movb__cl__MINUS0x8e1__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2273
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_405203(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movb__al__MINUS0x8e1__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2273
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x8e1__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2273
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_405216(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_40549a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_405259(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_40521d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






























define %struct.Memory* @routine_jge_.L_405487(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 3)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_subl_MINUS0xc__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x6__MINUS0x894__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4053bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x5___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 5)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x70d010___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x70d010_type* @G__0x70d010 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0xc__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x480__rbp__r8_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1152
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 8
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x480__rbp__r8_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i32, i32* %R9D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RBP
  %19 = load i64, i64* %R8
  %20 = mul i64 %19, 4
  %21 = add i64 %18, -1152
  %22 = add i64 %21, %20
  %23 = load i64, i64* %PC
  %24 = add i64 %23, 8
  store i64 %24, i64* %PC
  %25 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %17, i64 %22)
  ret %struct.Memory* %25
}


define %struct.Memory* @routine_movslq_MINUS0x898__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdi___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__r8___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___r10____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %R10
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl_MINUS0x894__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 2196
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__ecx__MINUS0x8e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2280
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r11d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__cl___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 23
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %R11D = bitcast %union.anon* %12 to i32*
  %13 = bitcast i32* %R11D to i64*
  %14 = load i32, i32* %R11D
  %15 = zext i32 %14 to i64
  %16 = load i8, i8* %CL
  %17 = zext i8 %16 to i64
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 3
  store i64 %19, i64* %PC
  %20 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %13, i64 %15, i64 %17)
  ret %struct.Memory* %20
}


define %struct.Memory* @routine_addl__r11d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R11D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl_MINUS0x8e8__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2280
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_sarl__cl___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 19
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %R9D = bitcast %union.anon* %12 to i32*
  %13 = bitcast i32* %R9D to i64*
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i8, i8* %CL
  %17 = zext i8 %16 to i64
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 3
  store i64 %19, i64* %PC
  %20 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %13, i64 %15, i64 %17)
  ret %struct.Memory* %20
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rax___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_movl__r9d____r10__r8_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 21
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R10 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R10
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R9D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_subl_MINUS0x480__rbp__r8_4____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i32, i32* %R9D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RBP
  %19 = load i64, i64* %R8
  %20 = mul i64 %19, 4
  %21 = add i64 %18, -1152
  %22 = add i64 %21, %20
  %23 = load i64, i64* %PC
  %24 = add i64 %23, 8
  store i64 %24, i64* %PC
  %25 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %17, i64 %22)
  ret %struct.Memory* %25
}






define %struct.Memory* @routine_addq__r8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___rdi____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_subl_MINUS0x894__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2196
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__cl___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_addl__edx___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl_MINUS0x8e8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl_MINUS0x894__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2196
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdi___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r9d____rax__rdi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R9D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_405474(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movq__0x70d010___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x70d010_type* @G__0x70d010 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0x480__rbp__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1152
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %19)
  ret %struct.Memory* %22
}




define %struct.Memory* @routine_addl_MINUS0x480__rbp__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1152
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movslq_MINUS0x898__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rcx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___rdi____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x894__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2196
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_subl__0x6___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 6)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movq__rcx__MINUS0x8f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2288
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r8d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shll__cl___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RSI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_movl__esi____rdi__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_subl_MINUS0x480__rbp__rdx_4____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -1152
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %15, i64 %20)
  ret %struct.Memory* %23
}






define %struct.Memory* @routine_movq_MINUS0x8f0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_movl__esi____rax__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %ESI
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_405479(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4052a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40548c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4051dd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_405cbf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_405cac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x8f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2292
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x8f4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2292
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_shll__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x10__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x8f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2296
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x8f8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x8ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2220
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_shll__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__edx__MINUS0x8fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2300
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x8fc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__edx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x8b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2224
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_0x6cb900___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x6cb900_type* @G_0x6cb900 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x3738__rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 14136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x8ac__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdi__r8_8____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R8
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x8b0__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq___rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdi__MINUS0x8c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2248
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}














define %struct.Memory* @routine_movq_0x8__rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rdi__MINUS0x8d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2256
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x1__MINUS0x88c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2188
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jge_.L_40592c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_4055db(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_405604(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_jmpq_.L_405628(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






















define %struct.Memory* @routine_je_.L_405683(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shlq__0x8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 8)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jmpq_.L_40571a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














































define %struct.Memory* @routine_imull___rdx__rsi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}
















define %struct.Memory* @routine_addl___rcx__rdx_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl_MINUS0x89c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4057ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0xf__MINUS0x8a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 15)
  ret %struct.Memory* %13
}




























define %struct.Memory* @routine_movq_MINUS0x8c8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq_MINUS0x8d0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_jne_.L_405913(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
































define %struct.Memory* @routine_cmpl__0x4__MINUS0x894__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 2196
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4058a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 4)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x3___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 3)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl_MINUS0x890__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2192
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x898__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x6___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r9___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x8__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0xc__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imull___rdi__r9_4____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 19
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R9 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i32, i32* %R8D
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %RDI
  %19 = load i64, i64* %R9
  %20 = mul i64 %19, 4
  %21 = add i64 %20, %18
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 5
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %17, i64 %21)
  ret %struct.Memory* %24
}




define %struct.Memory* @routine_movl__ecx__MINUS0x900__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2304
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_addl__edx___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl_MINUS0x900__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_sarl__cl___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 17
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %R8D = bitcast %union.anon* %12 to i32*
  %13 = bitcast i32* %R8D to i64*
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i8, i8* %CL
  %17 = zext i8 %16 to i64
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 3
  store i64 %19, i64* %PC
  %20 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %13, i64 %15, i64 %17)
  ret %struct.Memory* %20
}




define %struct.Memory* @routine_shlq__0x8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 8)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r8d____rax__rdi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %R8D
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_40590e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x890__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_imull___rcx__rsi_4____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RSI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_movl_MINUS0x894__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x4___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 4)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_addq__rsi___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movl__edx____rax__rsi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_405913(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405918(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405596(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_MINUS0x8c8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movb__cl__MINUS0x901__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2305
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_40596e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movb__al__MINUS0x901__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2305
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x901__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2305
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_405981(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_405aed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_4059da(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jmpq_.L_405988(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_sarl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_addl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_jge_.L_405ada(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














































































define %struct.Memory* @routine_jmpq_.L_405a31(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405adf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405948(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movb__cl__MINUS0x902__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2306
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_405b1a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movb__al__MINUS0x902__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2306
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x902__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 2306
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_405b2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_405c99(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_405b86(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































define %struct.Memory* @routine_jmpq_.L_405b34(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




































define %struct.Memory* @routine_jge_.L_405c86(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














































































define %struct.Memory* @routine_jmpq_.L_405bdd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405c8b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405af4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405c9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4054b2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405cb1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_4054a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_405da1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_405d9c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_405d89(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_leaq_MINUS0x880__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x910__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2320
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__rdx__MINUS0x918__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2328
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movslq__edx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x918__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2328
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__rdi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movslq__eax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




























define %struct.Memory* @routine_movl___r8__rdi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}






define %struct.Memory* @routine_movq_MINUS0x910__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax____r8__rdi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %R8
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}








define %struct.Memory* @routine_jmpq_.L_405cec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405d8e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405cdb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405efc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jge_.L_405ef7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_405ee4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_405e50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x91c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2332
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x91c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_addq__rdi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}






































define %struct.Memory* @routine_movl___rcx__rdi_4____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}














define %struct.Memory* @routine_movl__eax____rcx__rdi_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EAX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_405ed1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl__eax__MINUS0x920__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2336
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0x920__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}
















































define %struct.Memory* @routine_addl__0x20___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 32)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_sarl__0x6___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 6)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jmpq_.L_405ed6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405db9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_405ee9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405da8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jne_.L_406241(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_40623c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jge_.L_406229(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_405fce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_addq__0x12b8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 4792)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 5)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movzwl___rax__rcx_2____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_addl__esi___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__dx___di(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %DI = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %DI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x70fcf0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x70fcf0_type* @G_0x70fcf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_0x1918__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 6424
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl_0x9c__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0xc__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq__edx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x98__rcx____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl_MINUS0x8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__di____rax__rcx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DI = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %DI
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_406216(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movslq_0x11bec__rsi____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 72684
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_addq__rdi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq___rdx__rdi_4____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_addq__0x12b8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 4792)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x4__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shlq__0x5___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 5)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movzwl___rdi__r8_2____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDI
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_addq__0x20___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 32)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %8 [
    i6 0, label %37
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  br label %14

; <label>:8:                                      ; preds = %5
  %9 = and i64 %4, 63
  %10 = add  i64 %9, -1
  %11 = ashr i64 %3, %10
  %12 = icmp ne i8 0, 0
  %13 = zext i1 %12 to i8
  br label %14

; <label>:14:                                     ; preds = %8, %7
  %15 = phi i8 [ 0, %7 ], [ 0, %8 ]
  %16 = phi i64 [ %3, %7 ], [ %11, %8 ]
  %17 = phi i8 [ 0, %7 ], [ %13, %8 ]
  %18 = trunc i64 %16 to i8
  %19 = and i8 %18, 1
  %20 = ashr i64 %16, 1
  store i64 %20, i64* %2, align 8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %19, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %23 = trunc i64 %20 to i32
  %24 = and i32 %23, 255
  %25 = tail call i32 @llvm.ctpop.i32(i32 %24) #22
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  store i8 %28, i8* %22, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %15, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %31 = icmp eq i64 %20, 0
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %34 = lshr i64 %20, 63
  %35 = trunc i64 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %36, align 1
  br label %37

; <label>:37:                                     ; preds = %14, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_sarq__0x6___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 6)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = sub i64 %2, %3
  %6 = icmp ult i64 %2, %3
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %7, i8* %8, align 1
  %9 = trunc i64 %5 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i64 %3, %2
  %17 = xor i64 %16, %5
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %5, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %5, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %2, 63
  %29 = lshr i64 %3, 63
  %30 = xor i64 %29, %28
  %31 = xor i64 %25, %28
  %32 = add   i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rsi__MINUS0x928__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2344
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jle_.L_40605a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__rcx__MINUS0x930__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2352
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_4060b9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movslq___rax__rcx_4____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}




























define %struct.Memory* @routine_addq__0x20___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 32)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_sarq__0x6___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SARI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 6)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x930__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2352
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x930__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x928__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_jge_.L_4060eb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_0x11bec__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72684
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x938__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2360
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_4061cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_movslq___rdx__rsi_4____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_addq__0x12b8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 4792)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x4__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x9___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdi___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_shlq__0x5___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 5)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movzwl___rsi__rdi_2____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %18)
  ret %struct.Memory* %21
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jle_.L_406160(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__rcx__MINUS0x940__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2368
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_4061bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












































define %struct.Memory* @routine_movq__rax__MINUS0x940__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2368
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x940__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x938__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__ax___cx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %CX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_0x9c__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq___rax__rdx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_0x98__rdx____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movw__cx____rax__rdx_2_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i16, i16* %CX
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_jmpq_.L_40621b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405f29(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_40622e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_405f18(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_406241(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x8a0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 2208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x940___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 2368)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

