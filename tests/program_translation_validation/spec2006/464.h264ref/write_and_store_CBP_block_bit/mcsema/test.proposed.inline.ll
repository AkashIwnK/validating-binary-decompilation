; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_44b2e0.getChroma4x4Neighbour(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4019a0.biari_encode_symbol(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @write_and_store_CBP_block_bit(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_413120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_413120, %struct.Memory** %MEMORY
  %loadMem_413121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1185 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1186 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1185
  %27 = load i64, i64* %PC.i1184
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1184
  store i64 %26, i64* %RBP.i1186, align 8
  store %struct.Memory* %loadMem_413121, %struct.Memory** %MEMORY
  %loadMem_413124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1183 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1183
  %36 = load i64, i64* %PC.i1182
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1182
  %38 = sub i64 %35, 224
  store i64 %38, i64* %RSP.i1183, align 8
  %39 = icmp ult i64 %35, 224
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 224, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_413124, %struct.Memory** %MEMORY
  %loadMem_41312b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %73 = bitcast %union.anon* %72 to %struct.anon.2*
  %AL.i1181 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %73, i32 0, i32 0
  %74 = load i64, i64* %PC.i1180
  %75 = add i64 %74, 2
  store i64 %75, i64* %PC.i1180
  store i8 1, i8* %AL.i1181, align 1
  store %struct.Memory* %loadMem_41312b, %struct.Memory** %MEMORY
  %loadMem_41312d = load %struct.Memory*, %struct.Memory** %MEMORY
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %77 = getelementptr inbounds %struct.GPR, %struct.GPR* %76, i32 0, i32 33
  %78 = getelementptr inbounds %struct.Reg, %struct.Reg* %77, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %78 to i64*
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 11
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %RDI.i1178 = bitcast %union.anon* %81 to i64*
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 15
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %RBP.i1179 = bitcast %union.anon* %84 to i64*
  %85 = load i64, i64* %RBP.i1179
  %86 = sub i64 %85, 8
  %87 = load i64, i64* %RDI.i1178
  %88 = load i64, i64* %PC.i1177
  %89 = add i64 %88, 4
  store i64 %89, i64* %PC.i1177
  %90 = inttoptr i64 %86 to i64*
  store i64 %87, i64* %90
  store %struct.Memory* %loadMem_41312d, %struct.Memory** %MEMORY
  %loadMem_413131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %92 = getelementptr inbounds %struct.GPR, %struct.GPR* %91, i32 0, i32 33
  %93 = getelementptr inbounds %struct.Reg, %struct.Reg* %92, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %93 to i64*
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 9
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %RSI.i1175 = bitcast %union.anon* %96 to i64*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 15
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RBP.i1176 = bitcast %union.anon* %99 to i64*
  %100 = load i64, i64* %RBP.i1176
  %101 = sub i64 %100, 16
  %102 = load i64, i64* %RSI.i1175
  %103 = load i64, i64* %PC.i1174
  %104 = add i64 %103, 4
  store i64 %104, i64* %PC.i1174
  %105 = inttoptr i64 %101 to i64*
  store i64 %102, i64* %105
  store %struct.Memory* %loadMem_413131, %struct.Memory** %MEMORY
  %loadMem_413135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 33
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %108 to i64*
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 7
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %EDX.i1172 = bitcast %union.anon* %111 to i32*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i1173
  %116 = sub i64 %115, 20
  %117 = load i32, i32* %EDX.i1172
  %118 = zext i32 %117 to i64
  %119 = load i64, i64* %PC.i1171
  %120 = add i64 %119, 3
  store i64 %120, i64* %PC.i1171
  %121 = inttoptr i64 %116 to i32*
  store i32 %117, i32* %121
  store %struct.Memory* %loadMem_413135, %struct.Memory** %MEMORY
  %loadMem_413138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %123 = getelementptr inbounds %struct.GPR, %struct.GPR* %122, i32 0, i32 33
  %124 = getelementptr inbounds %struct.Reg, %struct.Reg* %123, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %124 to i64*
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %126 = getelementptr inbounds %struct.GPR, %struct.GPR* %125, i32 0, i32 5
  %127 = getelementptr inbounds %struct.Reg, %struct.Reg* %126, i32 0, i32 0
  %ECX.i1169 = bitcast %union.anon* %127 to i32*
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %129 = getelementptr inbounds %struct.GPR, %struct.GPR* %128, i32 0, i32 15
  %130 = getelementptr inbounds %struct.Reg, %struct.Reg* %129, i32 0, i32 0
  %RBP.i1170 = bitcast %union.anon* %130 to i64*
  %131 = load i64, i64* %RBP.i1170
  %132 = sub i64 %131, 24
  %133 = load i32, i32* %ECX.i1169
  %134 = zext i32 %133 to i64
  %135 = load i64, i64* %PC.i1168
  %136 = add i64 %135, 3
  store i64 %136, i64* %PC.i1168
  %137 = inttoptr i64 %132 to i32*
  store i32 %133, i32* %137
  store %struct.Memory* %loadMem_413138, %struct.Memory** %MEMORY
  %loadMem_41313b = load %struct.Memory*, %struct.Memory** %MEMORY
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 33
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %140 to i64*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 15
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %143 to i64*
  %144 = load i64, i64* %RBP.i1167
  %145 = sub i64 %144, 20
  %146 = load i64, i64* %PC.i1166
  %147 = add i64 %146, 4
  store i64 %147, i64* %PC.i1166
  %148 = inttoptr i64 %145 to i32*
  %149 = load i32, i32* %148
  %150 = sub i32 %149, 1
  %151 = icmp ult i32 %149, 1
  %152 = zext i1 %151 to i8
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %152, i8* %153, align 1
  %154 = and i32 %150, 255
  %155 = call i32 @llvm.ctpop.i32(i32 %154)
  %156 = trunc i32 %155 to i8
  %157 = and i8 %156, 1
  %158 = xor i8 %157, 1
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %158, i8* %159, align 1
  %160 = xor i32 %149, 1
  %161 = xor i32 %160, %150
  %162 = lshr i32 %161, 4
  %163 = trunc i32 %162 to i8
  %164 = and i8 %163, 1
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %164, i8* %165, align 1
  %166 = icmp eq i32 %150, 0
  %167 = zext i1 %166 to i8
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %167, i8* %168, align 1
  %169 = lshr i32 %150, 31
  %170 = trunc i32 %169 to i8
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %170, i8* %171, align 1
  %172 = lshr i32 %149, 31
  %173 = xor i32 %169, %172
  %174 = add i32 %173, %172
  %175 = icmp eq i32 %174, 2
  %176 = zext i1 %175 to i8
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %176, i8* %177, align 1
  store %struct.Memory* %loadMem_41313b, %struct.Memory** %MEMORY
  %loadMem_41313f = load %struct.Memory*, %struct.Memory** %MEMORY
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %179 = getelementptr inbounds %struct.GPR, %struct.GPR* %178, i32 0, i32 33
  %180 = getelementptr inbounds %struct.Reg, %struct.Reg* %179, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %180 to i64*
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %182 = getelementptr inbounds %struct.GPR, %struct.GPR* %181, i32 0, i32 1
  %183 = getelementptr inbounds %struct.Reg, %struct.Reg* %182, i32 0, i32 0
  %184 = bitcast %union.anon* %183 to %struct.anon.2*
  %AL.i1164 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %184, i32 0, i32 0
  %185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %186 = getelementptr inbounds %struct.GPR, %struct.GPR* %185, i32 0, i32 15
  %187 = getelementptr inbounds %struct.Reg, %struct.Reg* %186, i32 0, i32 0
  %RBP.i1165 = bitcast %union.anon* %187 to i64*
  %188 = load i64, i64* %RBP.i1165
  %189 = sub i64 %188, 137
  %190 = load i8, i8* %AL.i1164
  %191 = zext i8 %190 to i64
  %192 = load i64, i64* %PC.i1163
  %193 = add i64 %192, 6
  store i64 %193, i64* %PC.i1163
  %194 = inttoptr i64 %189 to i8*
  store i8 %190, i8* %194
  store %struct.Memory* %loadMem_41313f, %struct.Memory** %MEMORY
  %loadMem_413145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 33
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %197 to i64*
  %198 = load i64, i64* %PC.i1162
  %199 = add i64 %198, 73
  %200 = load i64, i64* %PC.i1162
  %201 = add i64 %200, 6
  %202 = load i64, i64* %PC.i1162
  %203 = add i64 %202, 6
  store i64 %203, i64* %PC.i1162
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %205 = load i8, i8* %204, align 1
  store i8 %205, i8* %BRANCH_TAKEN, align 1
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %207 = icmp ne i8 %205, 0
  %208 = select i1 %207, i64 %199, i64 %201
  store i64 %208, i64* %206, align 8
  store %struct.Memory* %loadMem_413145, %struct.Memory** %MEMORY
  %loadBr_413145 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413145 = icmp eq i8 %loadBr_413145, 1
  br i1 %cmpBr_413145, label %block_.L_41318e, label %block_41314b

block_41314b:                                     ; preds = %entry
  %loadMem_41314b = load %struct.Memory*, %struct.Memory** %MEMORY
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %210 = getelementptr inbounds %struct.GPR, %struct.GPR* %209, i32 0, i32 33
  %211 = getelementptr inbounds %struct.Reg, %struct.Reg* %210, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %211 to i64*
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 1
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %215 = bitcast %union.anon* %214 to %struct.anon.2*
  %AL.i1161 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %215, i32 0, i32 0
  %216 = load i64, i64* %PC.i1160
  %217 = add i64 %216, 2
  store i64 %217, i64* %PC.i1160
  store i8 1, i8* %AL.i1161, align 1
  store %struct.Memory* %loadMem_41314b, %struct.Memory** %MEMORY
  %loadMem_41314d = load %struct.Memory*, %struct.Memory** %MEMORY
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 33
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %220 to i64*
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 15
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %223 to i64*
  %224 = load i64, i64* %RBP.i1159
  %225 = sub i64 %224, 20
  %226 = load i64, i64* %PC.i1158
  %227 = add i64 %226, 4
  store i64 %227, i64* %PC.i1158
  %228 = inttoptr i64 %225 to i32*
  %229 = load i32, i32* %228
  %230 = sub i32 %229, 2
  %231 = icmp ult i32 %229, 2
  %232 = zext i1 %231 to i8
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %232, i8* %233, align 1
  %234 = and i32 %230, 255
  %235 = call i32 @llvm.ctpop.i32(i32 %234)
  %236 = trunc i32 %235 to i8
  %237 = and i8 %236, 1
  %238 = xor i8 %237, 1
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %238, i8* %239, align 1
  %240 = xor i32 %229, 2
  %241 = xor i32 %240, %230
  %242 = lshr i32 %241, 4
  %243 = trunc i32 %242 to i8
  %244 = and i8 %243, 1
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %244, i8* %245, align 1
  %246 = icmp eq i32 %230, 0
  %247 = zext i1 %246 to i8
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %247, i8* %248, align 1
  %249 = lshr i32 %230, 31
  %250 = trunc i32 %249 to i8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %250, i8* %251, align 1
  %252 = lshr i32 %229, 31
  %253 = xor i32 %249, %252
  %254 = add i32 %253, %252
  %255 = icmp eq i32 %254, 2
  %256 = zext i1 %255 to i8
  %257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %256, i8* %257, align 1
  store %struct.Memory* %loadMem_41314d, %struct.Memory** %MEMORY
  %loadMem_413151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %259 = getelementptr inbounds %struct.GPR, %struct.GPR* %258, i32 0, i32 33
  %260 = getelementptr inbounds %struct.Reg, %struct.Reg* %259, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %260 to i64*
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 1
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %264 = bitcast %union.anon* %263 to %struct.anon.2*
  %AL.i1156 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %264, i32 0, i32 0
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 15
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %RBP.i1157 = bitcast %union.anon* %267 to i64*
  %268 = load i64, i64* %RBP.i1157
  %269 = sub i64 %268, 137
  %270 = load i8, i8* %AL.i1156
  %271 = zext i8 %270 to i64
  %272 = load i64, i64* %PC.i1155
  %273 = add i64 %272, 6
  store i64 %273, i64* %PC.i1155
  %274 = inttoptr i64 %269 to i8*
  store i8 %270, i8* %274
  store %struct.Memory* %loadMem_413151, %struct.Memory** %MEMORY
  %loadMem_413157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %277 to i64*
  %278 = load i64, i64* %PC.i1154
  %279 = add i64 %278, 55
  %280 = load i64, i64* %PC.i1154
  %281 = add i64 %280, 6
  %282 = load i64, i64* %PC.i1154
  %283 = add i64 %282, 6
  store i64 %283, i64* %PC.i1154
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %285 = load i8, i8* %284, align 1
  store i8 %285, i8* %BRANCH_TAKEN, align 1
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %287 = icmp ne i8 %285, 0
  %288 = select i1 %287, i64 %279, i64 %281
  store i64 %288, i64* %286, align 8
  store %struct.Memory* %loadMem_413157, %struct.Memory** %MEMORY
  %loadBr_413157 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413157 = icmp eq i8 %loadBr_413157, 1
  br i1 %cmpBr_413157, label %block_.L_41318e, label %block_41315d

block_41315d:                                     ; preds = %block_41314b
  %loadMem_41315d = load %struct.Memory*, %struct.Memory** %MEMORY
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 33
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %291 to i64*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %293 = getelementptr inbounds %struct.GPR, %struct.GPR* %292, i32 0, i32 1
  %294 = getelementptr inbounds %struct.Reg, %struct.Reg* %293, i32 0, i32 0
  %295 = bitcast %union.anon* %294 to %struct.anon.2*
  %AL.i1153 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %295, i32 0, i32 0
  %296 = load i64, i64* %PC.i1152
  %297 = add i64 %296, 2
  store i64 %297, i64* %PC.i1152
  store i8 1, i8* %AL.i1153, align 1
  store %struct.Memory* %loadMem_41315d, %struct.Memory** %MEMORY
  %loadMem_41315f = load %struct.Memory*, %struct.Memory** %MEMORY
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %299 = getelementptr inbounds %struct.GPR, %struct.GPR* %298, i32 0, i32 33
  %300 = getelementptr inbounds %struct.Reg, %struct.Reg* %299, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %300 to i64*
  %301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %302 = getelementptr inbounds %struct.GPR, %struct.GPR* %301, i32 0, i32 15
  %303 = getelementptr inbounds %struct.Reg, %struct.Reg* %302, i32 0, i32 0
  %RBP.i1151 = bitcast %union.anon* %303 to i64*
  %304 = load i64, i64* %RBP.i1151
  %305 = sub i64 %304, 20
  %306 = load i64, i64* %PC.i1150
  %307 = add i64 %306, 4
  store i64 %307, i64* %PC.i1150
  %308 = inttoptr i64 %305 to i32*
  %309 = load i32, i32* %308
  %310 = sub i32 %309, 3
  %311 = icmp ult i32 %309, 3
  %312 = zext i1 %311 to i8
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %312, i8* %313, align 1
  %314 = and i32 %310, 255
  %315 = call i32 @llvm.ctpop.i32(i32 %314)
  %316 = trunc i32 %315 to i8
  %317 = and i8 %316, 1
  %318 = xor i8 %317, 1
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %318, i8* %319, align 1
  %320 = xor i32 %309, 3
  %321 = xor i32 %320, %310
  %322 = lshr i32 %321, 4
  %323 = trunc i32 %322 to i8
  %324 = and i8 %323, 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %324, i8* %325, align 1
  %326 = icmp eq i32 %310, 0
  %327 = zext i1 %326 to i8
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %327, i8* %328, align 1
  %329 = lshr i32 %310, 31
  %330 = trunc i32 %329 to i8
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %330, i8* %331, align 1
  %332 = lshr i32 %309, 31
  %333 = xor i32 %329, %332
  %334 = add i32 %333, %332
  %335 = icmp eq i32 %334, 2
  %336 = zext i1 %335 to i8
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %336, i8* %337, align 1
  store %struct.Memory* %loadMem_41315f, %struct.Memory** %MEMORY
  %loadMem_413163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %339 = getelementptr inbounds %struct.GPR, %struct.GPR* %338, i32 0, i32 33
  %340 = getelementptr inbounds %struct.Reg, %struct.Reg* %339, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %340 to i64*
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %342 = getelementptr inbounds %struct.GPR, %struct.GPR* %341, i32 0, i32 1
  %343 = getelementptr inbounds %struct.Reg, %struct.Reg* %342, i32 0, i32 0
  %344 = bitcast %union.anon* %343 to %struct.anon.2*
  %AL.i1148 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %344, i32 0, i32 0
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %346 = getelementptr inbounds %struct.GPR, %struct.GPR* %345, i32 0, i32 15
  %347 = getelementptr inbounds %struct.Reg, %struct.Reg* %346, i32 0, i32 0
  %RBP.i1149 = bitcast %union.anon* %347 to i64*
  %348 = load i64, i64* %RBP.i1149
  %349 = sub i64 %348, 137
  %350 = load i8, i8* %AL.i1148
  %351 = zext i8 %350 to i64
  %352 = load i64, i64* %PC.i1147
  %353 = add i64 %352, 6
  store i64 %353, i64* %PC.i1147
  %354 = inttoptr i64 %349 to i8*
  store i8 %350, i8* %354
  store %struct.Memory* %loadMem_413163, %struct.Memory** %MEMORY
  %loadMem_413169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %356 = getelementptr inbounds %struct.GPR, %struct.GPR* %355, i32 0, i32 33
  %357 = getelementptr inbounds %struct.Reg, %struct.Reg* %356, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %357 to i64*
  %358 = load i64, i64* %PC.i1146
  %359 = add i64 %358, 37
  %360 = load i64, i64* %PC.i1146
  %361 = add i64 %360, 6
  %362 = load i64, i64* %PC.i1146
  %363 = add i64 %362, 6
  store i64 %363, i64* %PC.i1146
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %365 = load i8, i8* %364, align 1
  store i8 %365, i8* %BRANCH_TAKEN, align 1
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %367 = icmp ne i8 %365, 0
  %368 = select i1 %367, i64 %359, i64 %361
  store i64 %368, i64* %366, align 8
  store %struct.Memory* %loadMem_413169, %struct.Memory** %MEMORY
  %loadBr_413169 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413169 = icmp eq i8 %loadBr_413169, 1
  br i1 %cmpBr_413169, label %block_.L_41318e, label %block_41316f

block_41316f:                                     ; preds = %block_41315d
  %loadMem_41316f = load %struct.Memory*, %struct.Memory** %MEMORY
  %369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %370 = getelementptr inbounds %struct.GPR, %struct.GPR* %369, i32 0, i32 33
  %371 = getelementptr inbounds %struct.Reg, %struct.Reg* %370, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %371 to i64*
  %372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %373 = getelementptr inbounds %struct.GPR, %struct.GPR* %372, i32 0, i32 1
  %374 = getelementptr inbounds %struct.Reg, %struct.Reg* %373, i32 0, i32 0
  %375 = bitcast %union.anon* %374 to %struct.anon.2*
  %AL.i1145 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %375, i32 0, i32 0
  %376 = load i64, i64* %PC.i1144
  %377 = add i64 %376, 2
  store i64 %377, i64* %PC.i1144
  store i8 1, i8* %AL.i1145, align 1
  store %struct.Memory* %loadMem_41316f, %struct.Memory** %MEMORY
  %loadMem_413171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %379 = getelementptr inbounds %struct.GPR, %struct.GPR* %378, i32 0, i32 33
  %380 = getelementptr inbounds %struct.Reg, %struct.Reg* %379, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %380 to i64*
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %382 = getelementptr inbounds %struct.GPR, %struct.GPR* %381, i32 0, i32 15
  %383 = getelementptr inbounds %struct.Reg, %struct.Reg* %382, i32 0, i32 0
  %RBP.i1143 = bitcast %union.anon* %383 to i64*
  %384 = load i64, i64* %RBP.i1143
  %385 = sub i64 %384, 20
  %386 = load i64, i64* %PC.i1142
  %387 = add i64 %386, 4
  store i64 %387, i64* %PC.i1142
  %388 = inttoptr i64 %385 to i32*
  %389 = load i32, i32* %388
  %390 = sub i32 %389, 4
  %391 = icmp ult i32 %389, 4
  %392 = zext i1 %391 to i8
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %392, i8* %393, align 1
  %394 = and i32 %390, 255
  %395 = call i32 @llvm.ctpop.i32(i32 %394)
  %396 = trunc i32 %395 to i8
  %397 = and i8 %396, 1
  %398 = xor i8 %397, 1
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %398, i8* %399, align 1
  %400 = xor i32 %389, 4
  %401 = xor i32 %400, %390
  %402 = lshr i32 %401, 4
  %403 = trunc i32 %402 to i8
  %404 = and i8 %403, 1
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %404, i8* %405, align 1
  %406 = icmp eq i32 %390, 0
  %407 = zext i1 %406 to i8
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %407, i8* %408, align 1
  %409 = lshr i32 %390, 31
  %410 = trunc i32 %409 to i8
  %411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %410, i8* %411, align 1
  %412 = lshr i32 %389, 31
  %413 = xor i32 %409, %412
  %414 = add i32 %413, %412
  %415 = icmp eq i32 %414, 2
  %416 = zext i1 %415 to i8
  %417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %416, i8* %417, align 1
  store %struct.Memory* %loadMem_413171, %struct.Memory** %MEMORY
  %loadMem_413175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 33
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %420 to i64*
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 1
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %424 = bitcast %union.anon* %423 to %struct.anon.2*
  %AL.i1140 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %424, i32 0, i32 0
  %425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %426 = getelementptr inbounds %struct.GPR, %struct.GPR* %425, i32 0, i32 15
  %427 = getelementptr inbounds %struct.Reg, %struct.Reg* %426, i32 0, i32 0
  %RBP.i1141 = bitcast %union.anon* %427 to i64*
  %428 = load i64, i64* %RBP.i1141
  %429 = sub i64 %428, 137
  %430 = load i8, i8* %AL.i1140
  %431 = zext i8 %430 to i64
  %432 = load i64, i64* %PC.i1139
  %433 = add i64 %432, 6
  store i64 %433, i64* %PC.i1139
  %434 = inttoptr i64 %429 to i8*
  store i8 %430, i8* %434
  store %struct.Memory* %loadMem_413175, %struct.Memory** %MEMORY
  %loadMem_41317b = load %struct.Memory*, %struct.Memory** %MEMORY
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %436 = getelementptr inbounds %struct.GPR, %struct.GPR* %435, i32 0, i32 33
  %437 = getelementptr inbounds %struct.Reg, %struct.Reg* %436, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %437 to i64*
  %438 = load i64, i64* %PC.i1138
  %439 = add i64 %438, 19
  %440 = load i64, i64* %PC.i1138
  %441 = add i64 %440, 6
  %442 = load i64, i64* %PC.i1138
  %443 = add i64 %442, 6
  store i64 %443, i64* %PC.i1138
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %445 = load i8, i8* %444, align 1
  store i8 %445, i8* %BRANCH_TAKEN, align 1
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %447 = icmp ne i8 %445, 0
  %448 = select i1 %447, i64 %439, i64 %441
  store i64 %448, i64* %446, align 8
  store %struct.Memory* %loadMem_41317b, %struct.Memory** %MEMORY
  %loadBr_41317b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41317b = icmp eq i8 %loadBr_41317b, 1
  br i1 %cmpBr_41317b, label %block_.L_41318e, label %block_413181

block_413181:                                     ; preds = %block_41316f
  %loadMem_413181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %450 = getelementptr inbounds %struct.GPR, %struct.GPR* %449, i32 0, i32 33
  %451 = getelementptr inbounds %struct.Reg, %struct.Reg* %450, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %451 to i64*
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %453 = getelementptr inbounds %struct.GPR, %struct.GPR* %452, i32 0, i32 15
  %454 = getelementptr inbounds %struct.Reg, %struct.Reg* %453, i32 0, i32 0
  %RBP.i1137 = bitcast %union.anon* %454 to i64*
  %455 = load i64, i64* %RBP.i1137
  %456 = sub i64 %455, 20
  %457 = load i64, i64* %PC.i1136
  %458 = add i64 %457, 4
  store i64 %458, i64* %PC.i1136
  %459 = inttoptr i64 %456 to i32*
  %460 = load i32, i32* %459
  %461 = sub i32 %460, 5
  %462 = icmp ult i32 %460, 5
  %463 = zext i1 %462 to i8
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %463, i8* %464, align 1
  %465 = and i32 %461, 255
  %466 = call i32 @llvm.ctpop.i32(i32 %465)
  %467 = trunc i32 %466 to i8
  %468 = and i8 %467, 1
  %469 = xor i8 %468, 1
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %469, i8* %470, align 1
  %471 = xor i32 %460, 5
  %472 = xor i32 %471, %461
  %473 = lshr i32 %472, 4
  %474 = trunc i32 %473 to i8
  %475 = and i8 %474, 1
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %475, i8* %476, align 1
  %477 = icmp eq i32 %461, 0
  %478 = zext i1 %477 to i8
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %478, i8* %479, align 1
  %480 = lshr i32 %461, 31
  %481 = trunc i32 %480 to i8
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %481, i8* %482, align 1
  %483 = lshr i32 %460, 31
  %484 = xor i32 %480, %483
  %485 = add i32 %484, %483
  %486 = icmp eq i32 %485, 2
  %487 = zext i1 %486 to i8
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %487, i8* %488, align 1
  store %struct.Memory* %loadMem_413181, %struct.Memory** %MEMORY
  %loadMem_413185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %490 = getelementptr inbounds %struct.GPR, %struct.GPR* %489, i32 0, i32 33
  %491 = getelementptr inbounds %struct.Reg, %struct.Reg* %490, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %491 to i64*
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %493 = getelementptr inbounds %struct.GPR, %struct.GPR* %492, i32 0, i32 1
  %494 = getelementptr inbounds %struct.Reg, %struct.Reg* %493, i32 0, i32 0
  %495 = bitcast %union.anon* %494 to %struct.anon.2*
  %AL.i1135 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %495, i32 0, i32 0
  %496 = load i64, i64* %PC.i1134
  %497 = add i64 %496, 3
  store i64 %497, i64* %PC.i1134
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %499 = load i8, i8* %498, align 1
  store i8 %499, i8* %AL.i1135, align 1
  store %struct.Memory* %loadMem_413185, %struct.Memory** %MEMORY
  %loadMem_413188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %501 = getelementptr inbounds %struct.GPR, %struct.GPR* %500, i32 0, i32 33
  %502 = getelementptr inbounds %struct.Reg, %struct.Reg* %501, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %502 to i64*
  %503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %504 = getelementptr inbounds %struct.GPR, %struct.GPR* %503, i32 0, i32 1
  %505 = getelementptr inbounds %struct.Reg, %struct.Reg* %504, i32 0, i32 0
  %506 = bitcast %union.anon* %505 to %struct.anon.2*
  %AL.i1132 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %506, i32 0, i32 0
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %508 = getelementptr inbounds %struct.GPR, %struct.GPR* %507, i32 0, i32 15
  %509 = getelementptr inbounds %struct.Reg, %struct.Reg* %508, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %509 to i64*
  %510 = load i64, i64* %RBP.i1133
  %511 = sub i64 %510, 137
  %512 = load i8, i8* %AL.i1132
  %513 = zext i8 %512 to i64
  %514 = load i64, i64* %PC.i1131
  %515 = add i64 %514, 6
  store i64 %515, i64* %PC.i1131
  %516 = inttoptr i64 %511 to i8*
  store i8 %512, i8* %516
  store %struct.Memory* %loadMem_413188, %struct.Memory** %MEMORY
  br label %block_.L_41318e

block_.L_41318e:                                  ; preds = %block_413181, %block_41316f, %block_41315d, %block_41314b, %entry
  %loadMem_41318e = load %struct.Memory*, %struct.Memory** %MEMORY
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %518 = getelementptr inbounds %struct.GPR, %struct.GPR* %517, i32 0, i32 33
  %519 = getelementptr inbounds %struct.Reg, %struct.Reg* %518, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %519 to i64*
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %521 = getelementptr inbounds %struct.GPR, %struct.GPR* %520, i32 0, i32 1
  %522 = getelementptr inbounds %struct.Reg, %struct.Reg* %521, i32 0, i32 0
  %523 = bitcast %union.anon* %522 to %struct.anon.2*
  %AL.i1129 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %523, i32 0, i32 0
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %525 = getelementptr inbounds %struct.GPR, %struct.GPR* %524, i32 0, i32 15
  %526 = getelementptr inbounds %struct.Reg, %struct.Reg* %525, i32 0, i32 0
  %RBP.i1130 = bitcast %union.anon* %526 to i64*
  %527 = load i64, i64* %RBP.i1130
  %528 = sub i64 %527, 137
  %529 = load i64, i64* %PC.i1128
  %530 = add i64 %529, 6
  store i64 %530, i64* %PC.i1128
  %531 = inttoptr i64 %528 to i8*
  %532 = load i8, i8* %531
  store i8 %532, i8* %AL.i1129, align 1
  store %struct.Memory* %loadMem_41318e, %struct.Memory** %MEMORY
  %loadMem_413194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %534 = getelementptr inbounds %struct.GPR, %struct.GPR* %533, i32 0, i32 33
  %535 = getelementptr inbounds %struct.Reg, %struct.Reg* %534, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %535 to i64*
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %537 = getelementptr inbounds %struct.GPR, %struct.GPR* %536, i32 0, i32 5
  %538 = getelementptr inbounds %struct.Reg, %struct.Reg* %537, i32 0, i32 0
  %ECX.i1126 = bitcast %union.anon* %538 to i32*
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 5
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %RCX.i1127 = bitcast %union.anon* %541 to i64*
  %542 = load i64, i64* %RCX.i1127
  %543 = load i32, i32* %ECX.i1126
  %544 = zext i32 %543 to i64
  %545 = load i64, i64* %PC.i1125
  %546 = add i64 %545, 2
  store i64 %546, i64* %PC.i1125
  %547 = xor i64 %544, %542
  %548 = trunc i64 %547 to i32
  %549 = and i64 %547, 4294967295
  store i64 %549, i64* %RCX.i1127, align 8
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %550, align 1
  %551 = and i32 %548, 255
  %552 = call i32 @llvm.ctpop.i32(i32 %551)
  %553 = trunc i32 %552 to i8
  %554 = and i8 %553, 1
  %555 = xor i8 %554, 1
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %555, i8* %556, align 1
  %557 = icmp eq i32 %548, 0
  %558 = zext i1 %557 to i8
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %558, i8* %559, align 1
  %560 = lshr i32 %548, 31
  %561 = trunc i32 %560 to i8
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %561, i8* %562, align 1
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %563, align 1
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %564, align 1
  store %struct.Memory* %loadMem_413194, %struct.Memory** %MEMORY
  %loadMem_413196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %566 = getelementptr inbounds %struct.GPR, %struct.GPR* %565, i32 0, i32 33
  %567 = getelementptr inbounds %struct.Reg, %struct.Reg* %566, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %567 to i64*
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %569 = getelementptr inbounds %struct.GPR, %struct.GPR* %568, i32 0, i32 5
  %570 = getelementptr inbounds %struct.Reg, %struct.Reg* %569, i32 0, i32 0
  %571 = bitcast %union.anon* %570 to %struct.anon.2*
  %CL.i1123 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %571, i32 0, i32 0
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %573 = getelementptr inbounds %struct.GPR, %struct.GPR* %572, i32 0, i32 7
  %574 = getelementptr inbounds %struct.Reg, %struct.Reg* %573, i32 0, i32 0
  %575 = bitcast %union.anon* %574 to %struct.anon.2*
  %DL.i1124 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %575, i32 0, i32 0
  %576 = load i8, i8* %CL.i1123
  %577 = zext i8 %576 to i64
  %578 = load i64, i64* %PC.i1122
  %579 = add i64 %578, 2
  store i64 %579, i64* %PC.i1122
  store i8 %576, i8* %DL.i1124, align 1
  store %struct.Memory* %loadMem_413196, %struct.Memory** %MEMORY
  %loadMem_413198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %581 = getelementptr inbounds %struct.GPR, %struct.GPR* %580, i32 0, i32 33
  %582 = getelementptr inbounds %struct.Reg, %struct.Reg* %581, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %582 to i64*
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %584 = getelementptr inbounds %struct.GPR, %struct.GPR* %583, i32 0, i32 1
  %585 = getelementptr inbounds %struct.Reg, %struct.Reg* %584, i32 0, i32 0
  %586 = bitcast %union.anon* %585 to %struct.anon.2*
  %AL.i1121 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %586, i32 0, i32 0
  %587 = load i8, i8* %AL.i1121
  %588 = zext i8 %587 to i64
  %589 = load i64, i64* %PC.i1120
  %590 = add i64 %589, 2
  store i64 %590, i64* %PC.i1120
  %591 = and i64 1, %588
  %592 = trunc i64 %591 to i8
  store i8 %592, i8* %AL.i1121, align 1
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %593, align 1
  %594 = trunc i64 %591 to i32
  %595 = and i32 %594, 255
  %596 = call i32 @llvm.ctpop.i32(i32 %595)
  %597 = trunc i32 %596 to i8
  %598 = and i8 %597, 1
  %599 = xor i8 %598, 1
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %599, i8* %600, align 1
  %601 = icmp eq i8 %592, 0
  %602 = zext i1 %601 to i8
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %602, i8* %603, align 1
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %604, align 1
  %605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %605, align 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %606, align 1
  store %struct.Memory* %loadMem_413198, %struct.Memory** %MEMORY
  %loadMem_41319a = load %struct.Memory*, %struct.Memory** %MEMORY
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %608 = getelementptr inbounds %struct.GPR, %struct.GPR* %607, i32 0, i32 33
  %609 = getelementptr inbounds %struct.Reg, %struct.Reg* %608, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %609 to i64*
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %611 = getelementptr inbounds %struct.GPR, %struct.GPR* %610, i32 0, i32 1
  %612 = getelementptr inbounds %struct.Reg, %struct.Reg* %611, i32 0, i32 0
  %613 = bitcast %union.anon* %612 to %struct.anon.2*
  %AL.i1118 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %613, i32 0, i32 0
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 5
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %RCX.i1119 = bitcast %union.anon* %616 to i64*
  %617 = load i8, i8* %AL.i1118
  %618 = zext i8 %617 to i64
  %619 = load i64, i64* %PC.i1117
  %620 = add i64 %619, 3
  store i64 %620, i64* %PC.i1117
  %621 = and i64 %618, 255
  store i64 %621, i64* %RCX.i1119, align 8
  store %struct.Memory* %loadMem_41319a, %struct.Memory** %MEMORY
  %loadMem_41319d = load %struct.Memory*, %struct.Memory** %MEMORY
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %623 = getelementptr inbounds %struct.GPR, %struct.GPR* %622, i32 0, i32 33
  %624 = getelementptr inbounds %struct.Reg, %struct.Reg* %623, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %624 to i64*
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %626 = getelementptr inbounds %struct.GPR, %struct.GPR* %625, i32 0, i32 5
  %627 = getelementptr inbounds %struct.Reg, %struct.Reg* %626, i32 0, i32 0
  %ECX.i1115 = bitcast %union.anon* %627 to i32*
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 15
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %630 to i64*
  %631 = load i64, i64* %RBP.i1116
  %632 = sub i64 %631, 28
  %633 = load i32, i32* %ECX.i1115
  %634 = zext i32 %633 to i64
  %635 = load i64, i64* %PC.i1114
  %636 = add i64 %635, 3
  store i64 %636, i64* %PC.i1114
  %637 = inttoptr i64 %632 to i32*
  store i32 %633, i32* %637
  store %struct.Memory* %loadMem_41319d, %struct.Memory** %MEMORY
  %loadMem_4131a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %639 = getelementptr inbounds %struct.GPR, %struct.GPR* %638, i32 0, i32 33
  %640 = getelementptr inbounds %struct.Reg, %struct.Reg* %639, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %640 to i64*
  %641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %642 = getelementptr inbounds %struct.GPR, %struct.GPR* %641, i32 0, i32 15
  %643 = getelementptr inbounds %struct.Reg, %struct.Reg* %642, i32 0, i32 0
  %RBP.i1113 = bitcast %union.anon* %643 to i64*
  %644 = load i64, i64* %RBP.i1113
  %645 = sub i64 %644, 20
  %646 = load i64, i64* %PC.i1112
  %647 = add i64 %646, 4
  store i64 %647, i64* %PC.i1112
  %648 = inttoptr i64 %645 to i32*
  %649 = load i32, i32* %648
  %650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %650, align 1
  %651 = and i32 %649, 255
  %652 = call i32 @llvm.ctpop.i32(i32 %651)
  %653 = trunc i32 %652 to i8
  %654 = and i8 %653, 1
  %655 = xor i8 %654, 1
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %655, i8* %656, align 1
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %657, align 1
  %658 = icmp eq i32 %649, 0
  %659 = zext i1 %658 to i8
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %659, i8* %660, align 1
  %661 = lshr i32 %649, 31
  %662 = trunc i32 %661 to i8
  %663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %662, i8* %663, align 1
  %664 = lshr i32 %649, 31
  %665 = xor i32 %661, %664
  %666 = add i32 %665, %664
  %667 = icmp eq i32 %666, 2
  %668 = zext i1 %667 to i8
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %668, i8* %669, align 1
  store %struct.Memory* %loadMem_4131a0, %struct.Memory** %MEMORY
  %loadMem_4131a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %671 = getelementptr inbounds %struct.GPR, %struct.GPR* %670, i32 0, i32 33
  %672 = getelementptr inbounds %struct.Reg, %struct.Reg* %671, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %672 to i64*
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %674 = getelementptr inbounds %struct.GPR, %struct.GPR* %673, i32 0, i32 1
  %675 = getelementptr inbounds %struct.Reg, %struct.Reg* %674, i32 0, i32 0
  %676 = bitcast %union.anon* %675 to %struct.anon.2*
  %AL.i1111 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %676, i32 0, i32 0
  %677 = load i64, i64* %PC.i1110
  %678 = add i64 %677, 3
  store i64 %678, i64* %PC.i1110
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %680 = load i8, i8* %679, align 1
  store i8 %680, i8* %AL.i1111, align 1
  store %struct.Memory* %loadMem_4131a4, %struct.Memory** %MEMORY
  %loadMem_4131a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %682 = getelementptr inbounds %struct.GPR, %struct.GPR* %681, i32 0, i32 33
  %683 = getelementptr inbounds %struct.Reg, %struct.Reg* %682, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %683 to i64*
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 1
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %687 = bitcast %union.anon* %686 to %struct.anon.2*
  %AL.i1109 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %687, i32 0, i32 0
  %688 = load i8, i8* %AL.i1109
  %689 = zext i8 %688 to i64
  %690 = load i64, i64* %PC.i1108
  %691 = add i64 %690, 2
  store i64 %691, i64* %PC.i1108
  %692 = and i64 1, %689
  %693 = trunc i64 %692 to i8
  store i8 %693, i8* %AL.i1109, align 1
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %694, align 1
  %695 = trunc i64 %692 to i32
  %696 = and i32 %695, 255
  %697 = call i32 @llvm.ctpop.i32(i32 %696)
  %698 = trunc i32 %697 to i8
  %699 = and i8 %698, 1
  %700 = xor i8 %699, 1
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %700, i8* %701, align 1
  %702 = icmp eq i8 %693, 0
  %703 = zext i1 %702 to i8
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %703, i8* %704, align 1
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %705, align 1
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %706, align 1
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %707, align 1
  store %struct.Memory* %loadMem_4131a7, %struct.Memory** %MEMORY
  %loadMem_4131a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 33
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %710 to i64*
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %712 = getelementptr inbounds %struct.GPR, %struct.GPR* %711, i32 0, i32 1
  %713 = getelementptr inbounds %struct.Reg, %struct.Reg* %712, i32 0, i32 0
  %714 = bitcast %union.anon* %713 to %struct.anon.2*
  %AL.i1106 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %714, i32 0, i32 0
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 5
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %RCX.i1107 = bitcast %union.anon* %717 to i64*
  %718 = load i8, i8* %AL.i1106
  %719 = zext i8 %718 to i64
  %720 = load i64, i64* %PC.i1105
  %721 = add i64 %720, 3
  store i64 %721, i64* %PC.i1105
  %722 = and i64 %719, 255
  store i64 %722, i64* %RCX.i1107, align 8
  store %struct.Memory* %loadMem_4131a9, %struct.Memory** %MEMORY
  %loadMem_4131ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %724 = getelementptr inbounds %struct.GPR, %struct.GPR* %723, i32 0, i32 33
  %725 = getelementptr inbounds %struct.Reg, %struct.Reg* %724, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %725 to i64*
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 5
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %ECX.i1103 = bitcast %union.anon* %728 to i32*
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %730 = getelementptr inbounds %struct.GPR, %struct.GPR* %729, i32 0, i32 15
  %731 = getelementptr inbounds %struct.Reg, %struct.Reg* %730, i32 0, i32 0
  %RBP.i1104 = bitcast %union.anon* %731 to i64*
  %732 = load i64, i64* %RBP.i1104
  %733 = sub i64 %732, 32
  %734 = load i32, i32* %ECX.i1103
  %735 = zext i32 %734 to i64
  %736 = load i64, i64* %PC.i1102
  %737 = add i64 %736, 3
  store i64 %737, i64* %PC.i1102
  %738 = inttoptr i64 %733 to i32*
  store i32 %734, i32* %738
  store %struct.Memory* %loadMem_4131ac, %struct.Memory** %MEMORY
  %loadMem_4131af = load %struct.Memory*, %struct.Memory** %MEMORY
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %740 = getelementptr inbounds %struct.GPR, %struct.GPR* %739, i32 0, i32 33
  %741 = getelementptr inbounds %struct.Reg, %struct.Reg* %740, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %741 to i64*
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 15
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %RBP.i1101 = bitcast %union.anon* %744 to i64*
  %745 = load i64, i64* %RBP.i1101
  %746 = sub i64 %745, 20
  %747 = load i64, i64* %PC.i1100
  %748 = add i64 %747, 4
  store i64 %748, i64* %PC.i1100
  %749 = inttoptr i64 %746 to i32*
  %750 = load i32, i32* %749
  %751 = sub i32 %750, 7
  %752 = icmp ult i32 %750, 7
  %753 = zext i1 %752 to i8
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %753, i8* %754, align 1
  %755 = and i32 %751, 255
  %756 = call i32 @llvm.ctpop.i32(i32 %755)
  %757 = trunc i32 %756 to i8
  %758 = and i8 %757, 1
  %759 = xor i8 %758, 1
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %759, i8* %760, align 1
  %761 = xor i32 %750, 7
  %762 = xor i32 %761, %751
  %763 = lshr i32 %762, 4
  %764 = trunc i32 %763 to i8
  %765 = and i8 %764, 1
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %765, i8* %766, align 1
  %767 = icmp eq i32 %751, 0
  %768 = zext i1 %767 to i8
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %768, i8* %769, align 1
  %770 = lshr i32 %751, 31
  %771 = trunc i32 %770 to i8
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %771, i8* %772, align 1
  %773 = lshr i32 %750, 31
  %774 = xor i32 %770, %773
  %775 = add i32 %774, %773
  %776 = icmp eq i32 %775, 2
  %777 = zext i1 %776 to i8
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %777, i8* %778, align 1
  store %struct.Memory* %loadMem_4131af, %struct.Memory** %MEMORY
  %loadMem_4131b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 33
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %781 to i64*
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %783 = getelementptr inbounds %struct.GPR, %struct.GPR* %782, i32 0, i32 7
  %784 = getelementptr inbounds %struct.Reg, %struct.Reg* %783, i32 0, i32 0
  %785 = bitcast %union.anon* %784 to %struct.anon.2*
  %DL.i1098 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %785, i32 0, i32 0
  %786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %787 = getelementptr inbounds %struct.GPR, %struct.GPR* %786, i32 0, i32 15
  %788 = getelementptr inbounds %struct.Reg, %struct.Reg* %787, i32 0, i32 0
  %RBP.i1099 = bitcast %union.anon* %788 to i64*
  %789 = load i64, i64* %RBP.i1099
  %790 = sub i64 %789, 138
  %791 = load i8, i8* %DL.i1098
  %792 = zext i8 %791 to i64
  %793 = load i64, i64* %PC.i1097
  %794 = add i64 %793, 6
  store i64 %794, i64* %PC.i1097
  %795 = inttoptr i64 %790 to i8*
  store i8 %791, i8* %795
  store %struct.Memory* %loadMem_4131b3, %struct.Memory** %MEMORY
  %loadMem_4131b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %797 = getelementptr inbounds %struct.GPR, %struct.GPR* %796, i32 0, i32 33
  %798 = getelementptr inbounds %struct.Reg, %struct.Reg* %797, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %798 to i64*
  %799 = load i64, i64* %PC.i1096
  %800 = add i64 %799, 30
  %801 = load i64, i64* %PC.i1096
  %802 = add i64 %801, 6
  %803 = load i64, i64* %PC.i1096
  %804 = add i64 %803, 6
  store i64 %804, i64* %PC.i1096
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %806 = load i8, i8* %805, align 1
  %807 = icmp eq i8 %806, 0
  %808 = zext i1 %807 to i8
  store i8 %808, i8* %BRANCH_TAKEN, align 1
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %810 = select i1 %807, i64 %800, i64 %802
  store i64 %810, i64* %809, align 8
  store %struct.Memory* %loadMem_4131b9, %struct.Memory** %MEMORY
  %loadBr_4131b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4131b9 = icmp eq i8 %loadBr_4131b9, 1
  br i1 %cmpBr_4131b9, label %block_.L_4131d7, label %block_4131bf

block_4131bf:                                     ; preds = %block_.L_41318e
  %loadMem_4131bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %812 = getelementptr inbounds %struct.GPR, %struct.GPR* %811, i32 0, i32 33
  %813 = getelementptr inbounds %struct.Reg, %struct.Reg* %812, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %813 to i64*
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %815 = getelementptr inbounds %struct.GPR, %struct.GPR* %814, i32 0, i32 1
  %816 = getelementptr inbounds %struct.Reg, %struct.Reg* %815, i32 0, i32 0
  %RAX.i1095 = bitcast %union.anon* %816 to i64*
  %817 = load i64, i64* %PC.i1094
  %818 = add i64 %817, 8
  store i64 %818, i64* %PC.i1094
  %819 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %819, i64* %RAX.i1095, align 8
  store %struct.Memory* %loadMem_4131bf, %struct.Memory** %MEMORY
  %loadMem_4131c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %821 = getelementptr inbounds %struct.GPR, %struct.GPR* %820, i32 0, i32 33
  %822 = getelementptr inbounds %struct.Reg, %struct.Reg* %821, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %822 to i64*
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %824 = getelementptr inbounds %struct.GPR, %struct.GPR* %823, i32 0, i32 1
  %825 = getelementptr inbounds %struct.Reg, %struct.Reg* %824, i32 0, i32 0
  %RAX.i1093 = bitcast %union.anon* %825 to i64*
  %826 = load i64, i64* %RAX.i1093
  %827 = add i64 %826, 84
  %828 = load i64, i64* %PC.i1092
  %829 = add i64 %828, 4
  store i64 %829, i64* %PC.i1092
  %830 = inttoptr i64 %827 to i32*
  %831 = load i32, i32* %830
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %832, align 1
  %833 = and i32 %831, 255
  %834 = call i32 @llvm.ctpop.i32(i32 %833)
  %835 = trunc i32 %834 to i8
  %836 = and i8 %835, 1
  %837 = xor i8 %836, 1
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %837, i8* %838, align 1
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %839, align 1
  %840 = icmp eq i32 %831, 0
  %841 = zext i1 %840 to i8
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %841, i8* %842, align 1
  %843 = lshr i32 %831, 31
  %844 = trunc i32 %843 to i8
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %844, i8* %845, align 1
  %846 = lshr i32 %831, 31
  %847 = xor i32 %843, %846
  %848 = add i32 %847, %846
  %849 = icmp eq i32 %848, 2
  %850 = zext i1 %849 to i8
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %850, i8* %851, align 1
  store %struct.Memory* %loadMem_4131c7, %struct.Memory** %MEMORY
  %loadMem_4131cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 33
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %854 to i64*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 5
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %858 = bitcast %union.anon* %857 to %struct.anon.2*
  %CL.i1091 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %858, i32 0, i32 0
  %859 = load i64, i64* %PC.i1090
  %860 = add i64 %859, 3
  store i64 %860, i64* %PC.i1090
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %862 = load i8, i8* %861, align 1
  %863 = icmp eq i8 %862, 0
  %864 = zext i1 %863 to i8
  store i8 %864, i8* %CL.i1091, align 1
  store %struct.Memory* %loadMem_4131cb, %struct.Memory** %MEMORY
  %loadMem_4131ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 33
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %867 to i64*
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 5
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %871 = bitcast %union.anon* %870 to %struct.anon.2*
  %CL.i1089 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %871, i32 0, i32 0
  %872 = load i8, i8* %CL.i1089
  %873 = zext i8 %872 to i64
  %874 = load i64, i64* %PC.i1088
  %875 = add i64 %874, 3
  store i64 %875, i64* %PC.i1088
  %876 = xor i64 255, %873
  %877 = trunc i64 %876 to i8
  store i8 %877, i8* %CL.i1089, align 1
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %878, align 1
  %879 = trunc i64 %876 to i32
  %880 = and i32 %879, 255
  %881 = call i32 @llvm.ctpop.i32(i32 %880)
  %882 = trunc i32 %881 to i8
  %883 = and i8 %882, 1
  %884 = xor i8 %883, 1
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %884, i8* %885, align 1
  %886 = icmp eq i8 %877, 0
  %887 = zext i1 %886 to i8
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %887, i8* %888, align 1
  %889 = lshr i8 %877, 7
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %889, i8* %890, align 1
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %891, align 1
  %892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %892, align 1
  store %struct.Memory* %loadMem_4131ce, %struct.Memory** %MEMORY
  %loadMem_4131d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %894 = getelementptr inbounds %struct.GPR, %struct.GPR* %893, i32 0, i32 33
  %895 = getelementptr inbounds %struct.Reg, %struct.Reg* %894, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %895 to i64*
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %897 = getelementptr inbounds %struct.GPR, %struct.GPR* %896, i32 0, i32 5
  %898 = getelementptr inbounds %struct.Reg, %struct.Reg* %897, i32 0, i32 0
  %899 = bitcast %union.anon* %898 to %struct.anon.2*
  %CL.i1086 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %899, i32 0, i32 0
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %901 = getelementptr inbounds %struct.GPR, %struct.GPR* %900, i32 0, i32 15
  %902 = getelementptr inbounds %struct.Reg, %struct.Reg* %901, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %902 to i64*
  %903 = load i64, i64* %RBP.i1087
  %904 = sub i64 %903, 138
  %905 = load i8, i8* %CL.i1086
  %906 = zext i8 %905 to i64
  %907 = load i64, i64* %PC.i1085
  %908 = add i64 %907, 6
  store i64 %908, i64* %PC.i1085
  %909 = inttoptr i64 %904 to i8*
  store i8 %905, i8* %909
  store %struct.Memory* %loadMem_4131d1, %struct.Memory** %MEMORY
  br label %block_.L_4131d7

block_.L_4131d7:                                  ; preds = %block_4131bf, %block_.L_41318e
  %loadMem_4131d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %911 = getelementptr inbounds %struct.GPR, %struct.GPR* %910, i32 0, i32 33
  %912 = getelementptr inbounds %struct.Reg, %struct.Reg* %911, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %912 to i64*
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %914 = getelementptr inbounds %struct.GPR, %struct.GPR* %913, i32 0, i32 1
  %915 = getelementptr inbounds %struct.Reg, %struct.Reg* %914, i32 0, i32 0
  %916 = bitcast %union.anon* %915 to %struct.anon.2*
  %AL.i1083 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %916, i32 0, i32 0
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %918 = getelementptr inbounds %struct.GPR, %struct.GPR* %917, i32 0, i32 15
  %919 = getelementptr inbounds %struct.Reg, %struct.Reg* %918, i32 0, i32 0
  %RBP.i1084 = bitcast %union.anon* %919 to i64*
  %920 = load i64, i64* %RBP.i1084
  %921 = sub i64 %920, 138
  %922 = load i64, i64* %PC.i1082
  %923 = add i64 %922, 6
  store i64 %923, i64* %PC.i1082
  %924 = inttoptr i64 %921 to i8*
  %925 = load i8, i8* %924
  store i8 %925, i8* %AL.i1083, align 1
  store %struct.Memory* %loadMem_4131d7, %struct.Memory** %MEMORY
  %loadMem_4131dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %927 = getelementptr inbounds %struct.GPR, %struct.GPR* %926, i32 0, i32 33
  %928 = getelementptr inbounds %struct.Reg, %struct.Reg* %927, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %928 to i64*
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 5
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %ECX.i1080 = bitcast %union.anon* %931 to i32*
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %933 = getelementptr inbounds %struct.GPR, %struct.GPR* %932, i32 0, i32 5
  %934 = getelementptr inbounds %struct.Reg, %struct.Reg* %933, i32 0, i32 0
  %RCX.i1081 = bitcast %union.anon* %934 to i64*
  %935 = load i64, i64* %RCX.i1081
  %936 = load i32, i32* %ECX.i1080
  %937 = zext i32 %936 to i64
  %938 = load i64, i64* %PC.i1079
  %939 = add i64 %938, 2
  store i64 %939, i64* %PC.i1079
  %940 = xor i64 %937, %935
  %941 = trunc i64 %940 to i32
  %942 = and i64 %940, 4294967295
  store i64 %942, i64* %RCX.i1081, align 8
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %943, align 1
  %944 = and i32 %941, 255
  %945 = call i32 @llvm.ctpop.i32(i32 %944)
  %946 = trunc i32 %945 to i8
  %947 = and i8 %946, 1
  %948 = xor i8 %947, 1
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %948, i8* %949, align 1
  %950 = icmp eq i32 %941, 0
  %951 = zext i1 %950 to i8
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %951, i8* %952, align 1
  %953 = lshr i32 %941, 31
  %954 = trunc i32 %953 to i8
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %954, i8* %955, align 1
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %956, align 1
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %957, align 1
  store %struct.Memory* %loadMem_4131dd, %struct.Memory** %MEMORY
  %loadMem_4131df = load %struct.Memory*, %struct.Memory** %MEMORY
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %959 = getelementptr inbounds %struct.GPR, %struct.GPR* %958, i32 0, i32 33
  %960 = getelementptr inbounds %struct.Reg, %struct.Reg* %959, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %960 to i64*
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %962 = getelementptr inbounds %struct.GPR, %struct.GPR* %961, i32 0, i32 5
  %963 = getelementptr inbounds %struct.Reg, %struct.Reg* %962, i32 0, i32 0
  %964 = bitcast %union.anon* %963 to %struct.anon.2*
  %CL.i1077 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %964, i32 0, i32 0
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 7
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %968 = bitcast %union.anon* %967 to %struct.anon.2*
  %DL.i1078 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %968, i32 0, i32 0
  %969 = load i8, i8* %CL.i1077
  %970 = zext i8 %969 to i64
  %971 = load i64, i64* %PC.i1076
  %972 = add i64 %971, 2
  store i64 %972, i64* %PC.i1076
  store i8 %969, i8* %DL.i1078, align 1
  store %struct.Memory* %loadMem_4131df, %struct.Memory** %MEMORY
  %loadMem_4131e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %974 = getelementptr inbounds %struct.GPR, %struct.GPR* %973, i32 0, i32 33
  %975 = getelementptr inbounds %struct.Reg, %struct.Reg* %974, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %975 to i64*
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %977 = getelementptr inbounds %struct.GPR, %struct.GPR* %976, i32 0, i32 1
  %978 = getelementptr inbounds %struct.Reg, %struct.Reg* %977, i32 0, i32 0
  %979 = bitcast %union.anon* %978 to %struct.anon.2*
  %AL.i1075 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %979, i32 0, i32 0
  %980 = load i8, i8* %AL.i1075
  %981 = zext i8 %980 to i64
  %982 = load i64, i64* %PC.i1074
  %983 = add i64 %982, 2
  store i64 %983, i64* %PC.i1074
  %984 = and i64 1, %981
  %985 = trunc i64 %984 to i8
  store i8 %985, i8* %AL.i1075, align 1
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %986, align 1
  %987 = trunc i64 %984 to i32
  %988 = and i32 %987, 255
  %989 = call i32 @llvm.ctpop.i32(i32 %988)
  %990 = trunc i32 %989 to i8
  %991 = and i8 %990, 1
  %992 = xor i8 %991, 1
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %992, i8* %993, align 1
  %994 = icmp eq i8 %985, 0
  %995 = zext i1 %994 to i8
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %995, i8* %996, align 1
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %997, align 1
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %998, align 1
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %999, align 1
  store %struct.Memory* %loadMem_4131e1, %struct.Memory** %MEMORY
  %loadMem_4131e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1001 = getelementptr inbounds %struct.GPR, %struct.GPR* %1000, i32 0, i32 33
  %1002 = getelementptr inbounds %struct.Reg, %struct.Reg* %1001, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %1002 to i64*
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1004 = getelementptr inbounds %struct.GPR, %struct.GPR* %1003, i32 0, i32 1
  %1005 = getelementptr inbounds %struct.Reg, %struct.Reg* %1004, i32 0, i32 0
  %1006 = bitcast %union.anon* %1005 to %struct.anon.2*
  %AL.i1072 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1006, i32 0, i32 0
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 5
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %RCX.i1073 = bitcast %union.anon* %1009 to i64*
  %1010 = load i8, i8* %AL.i1072
  %1011 = zext i8 %1010 to i64
  %1012 = load i64, i64* %PC.i1071
  %1013 = add i64 %1012, 3
  store i64 %1013, i64* %PC.i1071
  %1014 = and i64 %1011, 255
  store i64 %1014, i64* %RCX.i1073, align 8
  store %struct.Memory* %loadMem_4131e3, %struct.Memory** %MEMORY
  %loadMem_4131e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 33
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %1017 to i64*
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 5
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %ECX.i1069 = bitcast %union.anon* %1020 to i32*
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 15
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %1023 to i64*
  %1024 = load i64, i64* %RBP.i1070
  %1025 = sub i64 %1024, 36
  %1026 = load i32, i32* %ECX.i1069
  %1027 = zext i32 %1026 to i64
  %1028 = load i64, i64* %PC.i1068
  %1029 = add i64 %1028, 3
  store i64 %1029, i64* %PC.i1068
  %1030 = inttoptr i64 %1025 to i32*
  store i32 %1026, i32* %1030
  store %struct.Memory* %loadMem_4131e6, %struct.Memory** %MEMORY
  %loadMem_4131e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 33
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %1033 to i64*
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1035 = getelementptr inbounds %struct.GPR, %struct.GPR* %1034, i32 0, i32 15
  %1036 = getelementptr inbounds %struct.Reg, %struct.Reg* %1035, i32 0, i32 0
  %RBP.i1067 = bitcast %union.anon* %1036 to i64*
  %1037 = load i64, i64* %RBP.i1067
  %1038 = sub i64 %1037, 20
  %1039 = load i64, i64* %PC.i1066
  %1040 = add i64 %1039, 4
  store i64 %1040, i64* %PC.i1066
  %1041 = inttoptr i64 %1038 to i32*
  %1042 = load i32, i32* %1041
  %1043 = sub i32 %1042, 7
  %1044 = icmp ult i32 %1042, 7
  %1045 = zext i1 %1044 to i8
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1045, i8* %1046, align 1
  %1047 = and i32 %1043, 255
  %1048 = call i32 @llvm.ctpop.i32(i32 %1047)
  %1049 = trunc i32 %1048 to i8
  %1050 = and i8 %1049, 1
  %1051 = xor i8 %1050, 1
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1051, i8* %1052, align 1
  %1053 = xor i32 %1042, 7
  %1054 = xor i32 %1053, %1043
  %1055 = lshr i32 %1054, 4
  %1056 = trunc i32 %1055 to i8
  %1057 = and i8 %1056, 1
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1057, i8* %1058, align 1
  %1059 = icmp eq i32 %1043, 0
  %1060 = zext i1 %1059 to i8
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1060, i8* %1061, align 1
  %1062 = lshr i32 %1043, 31
  %1063 = trunc i32 %1062 to i8
  %1064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1063, i8* %1064, align 1
  %1065 = lshr i32 %1042, 31
  %1066 = xor i32 %1062, %1065
  %1067 = add i32 %1066, %1065
  %1068 = icmp eq i32 %1067, 2
  %1069 = zext i1 %1068 to i8
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1069, i8* %1070, align 1
  store %struct.Memory* %loadMem_4131e9, %struct.Memory** %MEMORY
  %loadMem_4131ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %1071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1072 = getelementptr inbounds %struct.GPR, %struct.GPR* %1071, i32 0, i32 33
  %1073 = getelementptr inbounds %struct.Reg, %struct.Reg* %1072, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %1073 to i64*
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1075 = getelementptr inbounds %struct.GPR, %struct.GPR* %1074, i32 0, i32 7
  %1076 = getelementptr inbounds %struct.Reg, %struct.Reg* %1075, i32 0, i32 0
  %1077 = bitcast %union.anon* %1076 to %struct.anon.2*
  %DL.i1064 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1077, i32 0, i32 0
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 15
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %1080 to i64*
  %1081 = load i64, i64* %RBP.i1065
  %1082 = sub i64 %1081, 139
  %1083 = load i8, i8* %DL.i1064
  %1084 = zext i8 %1083 to i64
  %1085 = load i64, i64* %PC.i1063
  %1086 = add i64 %1085, 6
  store i64 %1086, i64* %PC.i1063
  %1087 = inttoptr i64 %1082 to i8*
  store i8 %1083, i8* %1087
  store %struct.Memory* %loadMem_4131ed, %struct.Memory** %MEMORY
  %loadMem_4131f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1089 = getelementptr inbounds %struct.GPR, %struct.GPR* %1088, i32 0, i32 33
  %1090 = getelementptr inbounds %struct.Reg, %struct.Reg* %1089, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %1090 to i64*
  %1091 = load i64, i64* %PC.i1062
  %1092 = add i64 %1091, 27
  %1093 = load i64, i64* %PC.i1062
  %1094 = add i64 %1093, 6
  %1095 = load i64, i64* %PC.i1062
  %1096 = add i64 %1095, 6
  store i64 %1096, i64* %PC.i1062
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1098 = load i8, i8* %1097, align 1
  %1099 = icmp eq i8 %1098, 0
  %1100 = zext i1 %1099 to i8
  store i8 %1100, i8* %BRANCH_TAKEN, align 1
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1102 = select i1 %1099, i64 %1092, i64 %1094
  store i64 %1102, i64* %1101, align 8
  store %struct.Memory* %loadMem_4131f3, %struct.Memory** %MEMORY
  %loadBr_4131f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4131f3 = icmp eq i8 %loadBr_4131f3, 1
  br i1 %cmpBr_4131f3, label %block_.L_41320e, label %block_4131f9

block_4131f9:                                     ; preds = %block_.L_4131d7
  %loadMem_4131f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1104 = getelementptr inbounds %struct.GPR, %struct.GPR* %1103, i32 0, i32 33
  %1105 = getelementptr inbounds %struct.Reg, %struct.Reg* %1104, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %1105 to i64*
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1107 = getelementptr inbounds %struct.GPR, %struct.GPR* %1106, i32 0, i32 1
  %1108 = getelementptr inbounds %struct.Reg, %struct.Reg* %1107, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %1108 to i64*
  %1109 = load i64, i64* %PC.i1060
  %1110 = add i64 %1109, 8
  store i64 %1110, i64* %PC.i1060
  %1111 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1111, i64* %RAX.i1061, align 8
  store %struct.Memory* %loadMem_4131f9, %struct.Memory** %MEMORY
  %loadMem_413201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 33
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %1114 to i64*
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 1
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %RAX.i1059 = bitcast %union.anon* %1117 to i64*
  %1118 = load i64, i64* %RAX.i1059
  %1119 = add i64 %1118, 84
  %1120 = load i64, i64* %PC.i1058
  %1121 = add i64 %1120, 4
  store i64 %1121, i64* %PC.i1058
  %1122 = inttoptr i64 %1119 to i32*
  %1123 = load i32, i32* %1122
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1124, align 1
  %1125 = and i32 %1123, 255
  %1126 = call i32 @llvm.ctpop.i32(i32 %1125)
  %1127 = trunc i32 %1126 to i8
  %1128 = and i8 %1127, 1
  %1129 = xor i8 %1128, 1
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1129, i8* %1130, align 1
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1131, align 1
  %1132 = icmp eq i32 %1123, 0
  %1133 = zext i1 %1132 to i8
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1133, i8* %1134, align 1
  %1135 = lshr i32 %1123, 31
  %1136 = trunc i32 %1135 to i8
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1136, i8* %1137, align 1
  %1138 = lshr i32 %1123, 31
  %1139 = xor i32 %1135, %1138
  %1140 = add i32 %1139, %1138
  %1141 = icmp eq i32 %1140, 2
  %1142 = zext i1 %1141 to i8
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1142, i8* %1143, align 1
  store %struct.Memory* %loadMem_413201, %struct.Memory** %MEMORY
  %loadMem_413205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1145 = getelementptr inbounds %struct.GPR, %struct.GPR* %1144, i32 0, i32 33
  %1146 = getelementptr inbounds %struct.Reg, %struct.Reg* %1145, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %1146 to i64*
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 5
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %1150 = bitcast %union.anon* %1149 to %struct.anon.2*
  %CL.i1057 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1150, i32 0, i32 0
  %1151 = load i64, i64* %PC.i1056
  %1152 = add i64 %1151, 3
  store i64 %1152, i64* %PC.i1056
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1154 = load i8, i8* %1153, align 1
  %1155 = icmp eq i8 %1154, 0
  %1156 = zext i1 %1155 to i8
  store i8 %1156, i8* %CL.i1057, align 1
  store %struct.Memory* %loadMem_413205, %struct.Memory** %MEMORY
  %loadMem_413208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1158 = getelementptr inbounds %struct.GPR, %struct.GPR* %1157, i32 0, i32 33
  %1159 = getelementptr inbounds %struct.Reg, %struct.Reg* %1158, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %1159 to i64*
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1161 = getelementptr inbounds %struct.GPR, %struct.GPR* %1160, i32 0, i32 5
  %1162 = getelementptr inbounds %struct.Reg, %struct.Reg* %1161, i32 0, i32 0
  %1163 = bitcast %union.anon* %1162 to %struct.anon.2*
  %CL.i1054 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1163, i32 0, i32 0
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 15
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %1166 to i64*
  %1167 = load i64, i64* %RBP.i1055
  %1168 = sub i64 %1167, 139
  %1169 = load i8, i8* %CL.i1054
  %1170 = zext i8 %1169 to i64
  %1171 = load i64, i64* %PC.i1053
  %1172 = add i64 %1171, 6
  store i64 %1172, i64* %PC.i1053
  %1173 = inttoptr i64 %1168 to i8*
  store i8 %1169, i8* %1173
  store %struct.Memory* %loadMem_413208, %struct.Memory** %MEMORY
  br label %block_.L_41320e

block_.L_41320e:                                  ; preds = %block_4131f9, %block_.L_4131d7
  %loadMem_41320e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 33
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %1176 to i64*
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1178 = getelementptr inbounds %struct.GPR, %struct.GPR* %1177, i32 0, i32 1
  %1179 = getelementptr inbounds %struct.Reg, %struct.Reg* %1178, i32 0, i32 0
  %1180 = bitcast %union.anon* %1179 to %struct.anon.2*
  %AL.i1051 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1180, i32 0, i32 0
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1182 = getelementptr inbounds %struct.GPR, %struct.GPR* %1181, i32 0, i32 15
  %1183 = getelementptr inbounds %struct.Reg, %struct.Reg* %1182, i32 0, i32 0
  %RBP.i1052 = bitcast %union.anon* %1183 to i64*
  %1184 = load i64, i64* %RBP.i1052
  %1185 = sub i64 %1184, 139
  %1186 = load i64, i64* %PC.i1050
  %1187 = add i64 %1186, 6
  store i64 %1187, i64* %PC.i1050
  %1188 = inttoptr i64 %1185 to i8*
  %1189 = load i8, i8* %1188
  store i8 %1189, i8* %AL.i1051, align 1
  store %struct.Memory* %loadMem_41320e, %struct.Memory** %MEMORY
  %loadMem_413214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1191 = getelementptr inbounds %struct.GPR, %struct.GPR* %1190, i32 0, i32 33
  %1192 = getelementptr inbounds %struct.Reg, %struct.Reg* %1191, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %1192 to i64*
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1194 = getelementptr inbounds %struct.GPR, %struct.GPR* %1193, i32 0, i32 5
  %1195 = getelementptr inbounds %struct.Reg, %struct.Reg* %1194, i32 0, i32 0
  %1196 = bitcast %union.anon* %1195 to %struct.anon.2*
  %CL.i1049 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1196, i32 0, i32 0
  %1197 = load i64, i64* %PC.i1048
  %1198 = add i64 %1197, 2
  store i64 %1198, i64* %PC.i1048
  store i8 1, i8* %CL.i1049, align 1
  store %struct.Memory* %loadMem_413214, %struct.Memory** %MEMORY
  %loadMem_413216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1200 = getelementptr inbounds %struct.GPR, %struct.GPR* %1199, i32 0, i32 33
  %1201 = getelementptr inbounds %struct.Reg, %struct.Reg* %1200, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %1201 to i64*
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1203 = getelementptr inbounds %struct.GPR, %struct.GPR* %1202, i32 0, i32 1
  %1204 = getelementptr inbounds %struct.Reg, %struct.Reg* %1203, i32 0, i32 0
  %1205 = bitcast %union.anon* %1204 to %struct.anon.2*
  %AL.i1047 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1205, i32 0, i32 0
  %1206 = load i8, i8* %AL.i1047
  %1207 = zext i8 %1206 to i64
  %1208 = load i64, i64* %PC.i1046
  %1209 = add i64 %1208, 2
  store i64 %1209, i64* %PC.i1046
  %1210 = and i64 1, %1207
  %1211 = trunc i64 %1210 to i8
  store i8 %1211, i8* %AL.i1047, align 1
  %1212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1212, align 1
  %1213 = trunc i64 %1210 to i32
  %1214 = and i32 %1213, 255
  %1215 = call i32 @llvm.ctpop.i32(i32 %1214)
  %1216 = trunc i32 %1215 to i8
  %1217 = and i8 %1216, 1
  %1218 = xor i8 %1217, 1
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1218, i8* %1219, align 1
  %1220 = icmp eq i8 %1211, 0
  %1221 = zext i1 %1220 to i8
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1221, i8* %1222, align 1
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1223, align 1
  %1224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1224, align 1
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1225, align 1
  store %struct.Memory* %loadMem_413216, %struct.Memory** %MEMORY
  %loadMem_413218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1227 = getelementptr inbounds %struct.GPR, %struct.GPR* %1226, i32 0, i32 33
  %1228 = getelementptr inbounds %struct.Reg, %struct.Reg* %1227, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %1228 to i64*
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 1
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %1232 = bitcast %union.anon* %1231 to %struct.anon.2*
  %AL.i1044 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1232, i32 0, i32 0
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1234 = getelementptr inbounds %struct.GPR, %struct.GPR* %1233, i32 0, i32 7
  %1235 = getelementptr inbounds %struct.Reg, %struct.Reg* %1234, i32 0, i32 0
  %RDX.i1045 = bitcast %union.anon* %1235 to i64*
  %1236 = load i8, i8* %AL.i1044
  %1237 = zext i8 %1236 to i64
  %1238 = load i64, i64* %PC.i1043
  %1239 = add i64 %1238, 3
  store i64 %1239, i64* %PC.i1043
  %1240 = and i64 %1237, 255
  store i64 %1240, i64* %RDX.i1045, align 8
  store %struct.Memory* %loadMem_413218, %struct.Memory** %MEMORY
  %loadMem_41321b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1242 = getelementptr inbounds %struct.GPR, %struct.GPR* %1241, i32 0, i32 33
  %1243 = getelementptr inbounds %struct.Reg, %struct.Reg* %1242, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %1243 to i64*
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1245 = getelementptr inbounds %struct.GPR, %struct.GPR* %1244, i32 0, i32 7
  %1246 = getelementptr inbounds %struct.Reg, %struct.Reg* %1245, i32 0, i32 0
  %EDX.i1041 = bitcast %union.anon* %1246 to i32*
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1248 = getelementptr inbounds %struct.GPR, %struct.GPR* %1247, i32 0, i32 15
  %1249 = getelementptr inbounds %struct.Reg, %struct.Reg* %1248, i32 0, i32 0
  %RBP.i1042 = bitcast %union.anon* %1249 to i64*
  %1250 = load i64, i64* %RBP.i1042
  %1251 = sub i64 %1250, 40
  %1252 = load i32, i32* %EDX.i1041
  %1253 = zext i32 %1252 to i64
  %1254 = load i64, i64* %PC.i1040
  %1255 = add i64 %1254, 3
  store i64 %1255, i64* %PC.i1040
  %1256 = inttoptr i64 %1251 to i32*
  store i32 %1252, i32* %1256
  store %struct.Memory* %loadMem_41321b, %struct.Memory** %MEMORY
  %loadMem_41321e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1258 = getelementptr inbounds %struct.GPR, %struct.GPR* %1257, i32 0, i32 33
  %1259 = getelementptr inbounds %struct.Reg, %struct.Reg* %1258, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %1259 to i64*
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1261 = getelementptr inbounds %struct.GPR, %struct.GPR* %1260, i32 0, i32 15
  %1262 = getelementptr inbounds %struct.Reg, %struct.Reg* %1261, i32 0, i32 0
  %RBP.i1039 = bitcast %union.anon* %1262 to i64*
  %1263 = load i64, i64* %RBP.i1039
  %1264 = sub i64 %1263, 20
  %1265 = load i64, i64* %PC.i1038
  %1266 = add i64 %1265, 4
  store i64 %1266, i64* %PC.i1038
  %1267 = inttoptr i64 %1264 to i32*
  %1268 = load i32, i32* %1267
  %1269 = sub i32 %1268, 6
  %1270 = icmp ult i32 %1268, 6
  %1271 = zext i1 %1270 to i8
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1271, i8* %1272, align 1
  %1273 = and i32 %1269, 255
  %1274 = call i32 @llvm.ctpop.i32(i32 %1273)
  %1275 = trunc i32 %1274 to i8
  %1276 = and i8 %1275, 1
  %1277 = xor i8 %1276, 1
  %1278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1277, i8* %1278, align 1
  %1279 = xor i32 %1268, 6
  %1280 = xor i32 %1279, %1269
  %1281 = lshr i32 %1280, 4
  %1282 = trunc i32 %1281 to i8
  %1283 = and i8 %1282, 1
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1283, i8* %1284, align 1
  %1285 = icmp eq i32 %1269, 0
  %1286 = zext i1 %1285 to i8
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1286, i8* %1287, align 1
  %1288 = lshr i32 %1269, 31
  %1289 = trunc i32 %1288 to i8
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1289, i8* %1290, align 1
  %1291 = lshr i32 %1268, 31
  %1292 = xor i32 %1288, %1291
  %1293 = add i32 %1292, %1291
  %1294 = icmp eq i32 %1293, 2
  %1295 = zext i1 %1294 to i8
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1295, i8* %1296, align 1
  store %struct.Memory* %loadMem_41321e, %struct.Memory** %MEMORY
  %loadMem_413222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1298 = getelementptr inbounds %struct.GPR, %struct.GPR* %1297, i32 0, i32 33
  %1299 = getelementptr inbounds %struct.Reg, %struct.Reg* %1298, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %1299 to i64*
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1301 = getelementptr inbounds %struct.GPR, %struct.GPR* %1300, i32 0, i32 5
  %1302 = getelementptr inbounds %struct.Reg, %struct.Reg* %1301, i32 0, i32 0
  %1303 = bitcast %union.anon* %1302 to %struct.anon.2*
  %CL.i1036 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1303, i32 0, i32 0
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1305 = getelementptr inbounds %struct.GPR, %struct.GPR* %1304, i32 0, i32 15
  %1306 = getelementptr inbounds %struct.Reg, %struct.Reg* %1305, i32 0, i32 0
  %RBP.i1037 = bitcast %union.anon* %1306 to i64*
  %1307 = load i64, i64* %RBP.i1037
  %1308 = sub i64 %1307, 140
  %1309 = load i8, i8* %CL.i1036
  %1310 = zext i8 %1309 to i64
  %1311 = load i64, i64* %PC.i1035
  %1312 = add i64 %1311, 6
  store i64 %1312, i64* %PC.i1035
  %1313 = inttoptr i64 %1308 to i8*
  store i8 %1309, i8* %1313
  store %struct.Memory* %loadMem_413222, %struct.Memory** %MEMORY
  %loadMem_413228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 33
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %1316 to i64*
  %1317 = load i64, i64* %PC.i1034
  %1318 = add i64 %1317, 37
  %1319 = load i64, i64* %PC.i1034
  %1320 = add i64 %1319, 6
  %1321 = load i64, i64* %PC.i1034
  %1322 = add i64 %1321, 6
  store i64 %1322, i64* %PC.i1034
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1324 = load i8, i8* %1323, align 1
  store i8 %1324, i8* %BRANCH_TAKEN, align 1
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1326 = icmp ne i8 %1324, 0
  %1327 = select i1 %1326, i64 %1318, i64 %1320
  store i64 %1327, i64* %1325, align 8
  store %struct.Memory* %loadMem_413228, %struct.Memory** %MEMORY
  %loadBr_413228 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413228 = icmp eq i8 %loadBr_413228, 1
  br i1 %cmpBr_413228, label %block_.L_41324d, label %block_41322e

block_41322e:                                     ; preds = %block_.L_41320e
  %loadMem_41322e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1329 = getelementptr inbounds %struct.GPR, %struct.GPR* %1328, i32 0, i32 33
  %1330 = getelementptr inbounds %struct.Reg, %struct.Reg* %1329, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %1330 to i64*
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1332 = getelementptr inbounds %struct.GPR, %struct.GPR* %1331, i32 0, i32 1
  %1333 = getelementptr inbounds %struct.Reg, %struct.Reg* %1332, i32 0, i32 0
  %1334 = bitcast %union.anon* %1333 to %struct.anon.2*
  %AL.i1033 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1334, i32 0, i32 0
  %1335 = load i64, i64* %PC.i1032
  %1336 = add i64 %1335, 2
  store i64 %1336, i64* %PC.i1032
  store i8 1, i8* %AL.i1033, align 1
  store %struct.Memory* %loadMem_41322e, %struct.Memory** %MEMORY
  %loadMem_413230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1338 = getelementptr inbounds %struct.GPR, %struct.GPR* %1337, i32 0, i32 33
  %1339 = getelementptr inbounds %struct.Reg, %struct.Reg* %1338, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %1339 to i64*
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1341 = getelementptr inbounds %struct.GPR, %struct.GPR* %1340, i32 0, i32 15
  %1342 = getelementptr inbounds %struct.Reg, %struct.Reg* %1341, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %1342 to i64*
  %1343 = load i64, i64* %RBP.i1031
  %1344 = sub i64 %1343, 20
  %1345 = load i64, i64* %PC.i1030
  %1346 = add i64 %1345, 4
  store i64 %1346, i64* %PC.i1030
  %1347 = inttoptr i64 %1344 to i32*
  %1348 = load i32, i32* %1347
  %1349 = sub i32 %1348, 8
  %1350 = icmp ult i32 %1348, 8
  %1351 = zext i1 %1350 to i8
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1351, i8* %1352, align 1
  %1353 = and i32 %1349, 255
  %1354 = call i32 @llvm.ctpop.i32(i32 %1353)
  %1355 = trunc i32 %1354 to i8
  %1356 = and i8 %1355, 1
  %1357 = xor i8 %1356, 1
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1357, i8* %1358, align 1
  %1359 = xor i32 %1348, 8
  %1360 = xor i32 %1359, %1349
  %1361 = lshr i32 %1360, 4
  %1362 = trunc i32 %1361 to i8
  %1363 = and i8 %1362, 1
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1363, i8* %1364, align 1
  %1365 = icmp eq i32 %1349, 0
  %1366 = zext i1 %1365 to i8
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1366, i8* %1367, align 1
  %1368 = lshr i32 %1349, 31
  %1369 = trunc i32 %1368 to i8
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1369, i8* %1370, align 1
  %1371 = lshr i32 %1348, 31
  %1372 = xor i32 %1368, %1371
  %1373 = add i32 %1372, %1371
  %1374 = icmp eq i32 %1373, 2
  %1375 = zext i1 %1374 to i8
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1375, i8* %1376, align 1
  store %struct.Memory* %loadMem_413230, %struct.Memory** %MEMORY
  %loadMem_413234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 33
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %1379 to i64*
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 1
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %1383 = bitcast %union.anon* %1382 to %struct.anon.2*
  %AL.i1028 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1383, i32 0, i32 0
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1385 = getelementptr inbounds %struct.GPR, %struct.GPR* %1384, i32 0, i32 15
  %1386 = getelementptr inbounds %struct.Reg, %struct.Reg* %1385, i32 0, i32 0
  %RBP.i1029 = bitcast %union.anon* %1386 to i64*
  %1387 = load i64, i64* %RBP.i1029
  %1388 = sub i64 %1387, 140
  %1389 = load i8, i8* %AL.i1028
  %1390 = zext i8 %1389 to i64
  %1391 = load i64, i64* %PC.i1027
  %1392 = add i64 %1391, 6
  store i64 %1392, i64* %PC.i1027
  %1393 = inttoptr i64 %1388 to i8*
  store i8 %1389, i8* %1393
  store %struct.Memory* %loadMem_413234, %struct.Memory** %MEMORY
  %loadMem_41323a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1395 = getelementptr inbounds %struct.GPR, %struct.GPR* %1394, i32 0, i32 33
  %1396 = getelementptr inbounds %struct.Reg, %struct.Reg* %1395, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %1396 to i64*
  %1397 = load i64, i64* %PC.i1026
  %1398 = add i64 %1397, 19
  %1399 = load i64, i64* %PC.i1026
  %1400 = add i64 %1399, 6
  %1401 = load i64, i64* %PC.i1026
  %1402 = add i64 %1401, 6
  store i64 %1402, i64* %PC.i1026
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1404 = load i8, i8* %1403, align 1
  store i8 %1404, i8* %BRANCH_TAKEN, align 1
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1406 = icmp ne i8 %1404, 0
  %1407 = select i1 %1406, i64 %1398, i64 %1400
  store i64 %1407, i64* %1405, align 8
  store %struct.Memory* %loadMem_41323a, %struct.Memory** %MEMORY
  %loadBr_41323a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41323a = icmp eq i8 %loadBr_41323a, 1
  br i1 %cmpBr_41323a, label %block_.L_41324d, label %block_413240

block_413240:                                     ; preds = %block_41322e
  %loadMem_413240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 33
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %1410 to i64*
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 15
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %RBP.i1025 = bitcast %union.anon* %1413 to i64*
  %1414 = load i64, i64* %RBP.i1025
  %1415 = sub i64 %1414, 20
  %1416 = load i64, i64* %PC.i1024
  %1417 = add i64 %1416, 4
  store i64 %1417, i64* %PC.i1024
  %1418 = inttoptr i64 %1415 to i32*
  %1419 = load i32, i32* %1418
  %1420 = sub i32 %1419, 9
  %1421 = icmp ult i32 %1419, 9
  %1422 = zext i1 %1421 to i8
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1422, i8* %1423, align 1
  %1424 = and i32 %1420, 255
  %1425 = call i32 @llvm.ctpop.i32(i32 %1424)
  %1426 = trunc i32 %1425 to i8
  %1427 = and i8 %1426, 1
  %1428 = xor i8 %1427, 1
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1428, i8* %1429, align 1
  %1430 = xor i32 %1419, 9
  %1431 = xor i32 %1430, %1420
  %1432 = lshr i32 %1431, 4
  %1433 = trunc i32 %1432 to i8
  %1434 = and i8 %1433, 1
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1434, i8* %1435, align 1
  %1436 = icmp eq i32 %1420, 0
  %1437 = zext i1 %1436 to i8
  %1438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1437, i8* %1438, align 1
  %1439 = lshr i32 %1420, 31
  %1440 = trunc i32 %1439 to i8
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1440, i8* %1441, align 1
  %1442 = lshr i32 %1419, 31
  %1443 = xor i32 %1439, %1442
  %1444 = add i32 %1443, %1442
  %1445 = icmp eq i32 %1444, 2
  %1446 = zext i1 %1445 to i8
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1446, i8* %1447, align 1
  store %struct.Memory* %loadMem_413240, %struct.Memory** %MEMORY
  %loadMem_413244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1449 = getelementptr inbounds %struct.GPR, %struct.GPR* %1448, i32 0, i32 33
  %1450 = getelementptr inbounds %struct.Reg, %struct.Reg* %1449, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %1450 to i64*
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1452 = getelementptr inbounds %struct.GPR, %struct.GPR* %1451, i32 0, i32 1
  %1453 = getelementptr inbounds %struct.Reg, %struct.Reg* %1452, i32 0, i32 0
  %1454 = bitcast %union.anon* %1453 to %struct.anon.2*
  %AL.i1023 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1454, i32 0, i32 0
  %1455 = load i64, i64* %PC.i1022
  %1456 = add i64 %1455, 3
  store i64 %1456, i64* %PC.i1022
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1458 = load i8, i8* %1457, align 1
  store i8 %1458, i8* %AL.i1023, align 1
  store %struct.Memory* %loadMem_413244, %struct.Memory** %MEMORY
  %loadMem_413247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1460 = getelementptr inbounds %struct.GPR, %struct.GPR* %1459, i32 0, i32 33
  %1461 = getelementptr inbounds %struct.Reg, %struct.Reg* %1460, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %1461 to i64*
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1463 = getelementptr inbounds %struct.GPR, %struct.GPR* %1462, i32 0, i32 1
  %1464 = getelementptr inbounds %struct.Reg, %struct.Reg* %1463, i32 0, i32 0
  %1465 = bitcast %union.anon* %1464 to %struct.anon.2*
  %AL.i1020 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1465, i32 0, i32 0
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 15
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %RBP.i1021 = bitcast %union.anon* %1468 to i64*
  %1469 = load i64, i64* %RBP.i1021
  %1470 = sub i64 %1469, 140
  %1471 = load i8, i8* %AL.i1020
  %1472 = zext i8 %1471 to i64
  %1473 = load i64, i64* %PC.i1019
  %1474 = add i64 %1473, 6
  store i64 %1474, i64* %PC.i1019
  %1475 = inttoptr i64 %1470 to i8*
  store i8 %1471, i8* %1475
  store %struct.Memory* %loadMem_413247, %struct.Memory** %MEMORY
  br label %block_.L_41324d

block_.L_41324d:                                  ; preds = %block_413240, %block_41322e, %block_.L_41320e
  %loadMem_41324d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1477 = getelementptr inbounds %struct.GPR, %struct.GPR* %1476, i32 0, i32 33
  %1478 = getelementptr inbounds %struct.Reg, %struct.Reg* %1477, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %1478 to i64*
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1480 = getelementptr inbounds %struct.GPR, %struct.GPR* %1479, i32 0, i32 1
  %1481 = getelementptr inbounds %struct.Reg, %struct.Reg* %1480, i32 0, i32 0
  %1482 = bitcast %union.anon* %1481 to %struct.anon.2*
  %AL.i1017 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1482, i32 0, i32 0
  %1483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1484 = getelementptr inbounds %struct.GPR, %struct.GPR* %1483, i32 0, i32 15
  %1485 = getelementptr inbounds %struct.Reg, %struct.Reg* %1484, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %1485 to i64*
  %1486 = load i64, i64* %RBP.i1018
  %1487 = sub i64 %1486, 140
  %1488 = load i64, i64* %PC.i1016
  %1489 = add i64 %1488, 6
  store i64 %1489, i64* %PC.i1016
  %1490 = inttoptr i64 %1487 to i8*
  %1491 = load i8, i8* %1490
  store i8 %1491, i8* %AL.i1017, align 1
  store %struct.Memory* %loadMem_41324d, %struct.Memory** %MEMORY
  %loadMem_413253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1493 = getelementptr inbounds %struct.GPR, %struct.GPR* %1492, i32 0, i32 33
  %1494 = getelementptr inbounds %struct.Reg, %struct.Reg* %1493, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %1494 to i64*
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 5
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %ECX.i1014 = bitcast %union.anon* %1497 to i32*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 5
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RCX.i1015 = bitcast %union.anon* %1500 to i64*
  %1501 = load i64, i64* %RCX.i1015
  %1502 = load i32, i32* %ECX.i1014
  %1503 = zext i32 %1502 to i64
  %1504 = load i64, i64* %PC.i1013
  %1505 = add i64 %1504, 2
  store i64 %1505, i64* %PC.i1013
  %1506 = xor i64 %1503, %1501
  %1507 = trunc i64 %1506 to i32
  %1508 = and i64 %1506, 4294967295
  store i64 %1508, i64* %RCX.i1015, align 8
  %1509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1509, align 1
  %1510 = and i32 %1507, 255
  %1511 = call i32 @llvm.ctpop.i32(i32 %1510)
  %1512 = trunc i32 %1511 to i8
  %1513 = and i8 %1512, 1
  %1514 = xor i8 %1513, 1
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1514, i8* %1515, align 1
  %1516 = icmp eq i32 %1507, 0
  %1517 = zext i1 %1516 to i8
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1517, i8* %1518, align 1
  %1519 = lshr i32 %1507, 31
  %1520 = trunc i32 %1519 to i8
  %1521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1520, i8* %1521, align 1
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1522, align 1
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1523, align 1
  store %struct.Memory* %loadMem_413253, %struct.Memory** %MEMORY
  %loadMem_413255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1525 = getelementptr inbounds %struct.GPR, %struct.GPR* %1524, i32 0, i32 33
  %1526 = getelementptr inbounds %struct.Reg, %struct.Reg* %1525, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %1526 to i64*
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1528 = getelementptr inbounds %struct.GPR, %struct.GPR* %1527, i32 0, i32 5
  %1529 = getelementptr inbounds %struct.Reg, %struct.Reg* %1528, i32 0, i32 0
  %1530 = bitcast %union.anon* %1529 to %struct.anon.2*
  %CL.i1011 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1530, i32 0, i32 0
  %1531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1532 = getelementptr inbounds %struct.GPR, %struct.GPR* %1531, i32 0, i32 7
  %1533 = getelementptr inbounds %struct.Reg, %struct.Reg* %1532, i32 0, i32 0
  %1534 = bitcast %union.anon* %1533 to %struct.anon.2*
  %DL.i1012 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1534, i32 0, i32 0
  %1535 = load i8, i8* %CL.i1011
  %1536 = zext i8 %1535 to i64
  %1537 = load i64, i64* %PC.i1010
  %1538 = add i64 %1537, 2
  store i64 %1538, i64* %PC.i1010
  store i8 %1535, i8* %DL.i1012, align 1
  store %struct.Memory* %loadMem_413255, %struct.Memory** %MEMORY
  %loadMem_413257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 33
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %1541 to i64*
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1543 = getelementptr inbounds %struct.GPR, %struct.GPR* %1542, i32 0, i32 1
  %1544 = getelementptr inbounds %struct.Reg, %struct.Reg* %1543, i32 0, i32 0
  %1545 = bitcast %union.anon* %1544 to %struct.anon.2*
  %AL.i1009 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1545, i32 0, i32 0
  %1546 = load i8, i8* %AL.i1009
  %1547 = zext i8 %1546 to i64
  %1548 = load i64, i64* %PC.i1008
  %1549 = add i64 %1548, 2
  store i64 %1549, i64* %PC.i1008
  %1550 = and i64 1, %1547
  %1551 = trunc i64 %1550 to i8
  store i8 %1551, i8* %AL.i1009, align 1
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1552, align 1
  %1553 = trunc i64 %1550 to i32
  %1554 = and i32 %1553, 255
  %1555 = call i32 @llvm.ctpop.i32(i32 %1554)
  %1556 = trunc i32 %1555 to i8
  %1557 = and i8 %1556, 1
  %1558 = xor i8 %1557, 1
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1558, i8* %1559, align 1
  %1560 = icmp eq i8 %1551, 0
  %1561 = zext i1 %1560 to i8
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1561, i8* %1562, align 1
  %1563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1563, align 1
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1564, align 1
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1565, align 1
  store %struct.Memory* %loadMem_413257, %struct.Memory** %MEMORY
  %loadMem_413259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1567 = getelementptr inbounds %struct.GPR, %struct.GPR* %1566, i32 0, i32 33
  %1568 = getelementptr inbounds %struct.Reg, %struct.Reg* %1567, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1568 to i64*
  %1569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1570 = getelementptr inbounds %struct.GPR, %struct.GPR* %1569, i32 0, i32 1
  %1571 = getelementptr inbounds %struct.Reg, %struct.Reg* %1570, i32 0, i32 0
  %1572 = bitcast %union.anon* %1571 to %struct.anon.2*
  %AL.i1006 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1572, i32 0, i32 0
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1574 = getelementptr inbounds %struct.GPR, %struct.GPR* %1573, i32 0, i32 5
  %1575 = getelementptr inbounds %struct.Reg, %struct.Reg* %1574, i32 0, i32 0
  %RCX.i1007 = bitcast %union.anon* %1575 to i64*
  %1576 = load i8, i8* %AL.i1006
  %1577 = zext i8 %1576 to i64
  %1578 = load i64, i64* %PC.i1005
  %1579 = add i64 %1578, 3
  store i64 %1579, i64* %PC.i1005
  %1580 = and i64 %1577, 255
  store i64 %1580, i64* %RCX.i1007, align 8
  store %struct.Memory* %loadMem_413259, %struct.Memory** %MEMORY
  %loadMem_41325c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1582 = getelementptr inbounds %struct.GPR, %struct.GPR* %1581, i32 0, i32 33
  %1583 = getelementptr inbounds %struct.Reg, %struct.Reg* %1582, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %1583 to i64*
  %1584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1585 = getelementptr inbounds %struct.GPR, %struct.GPR* %1584, i32 0, i32 5
  %1586 = getelementptr inbounds %struct.Reg, %struct.Reg* %1585, i32 0, i32 0
  %ECX.i1003 = bitcast %union.anon* %1586 to i32*
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 15
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %1589 to i64*
  %1590 = load i64, i64* %RBP.i1004
  %1591 = sub i64 %1590, 44
  %1592 = load i32, i32* %ECX.i1003
  %1593 = zext i32 %1592 to i64
  %1594 = load i64, i64* %PC.i1002
  %1595 = add i64 %1594, 3
  store i64 %1595, i64* %PC.i1002
  %1596 = inttoptr i64 %1591 to i32*
  store i32 %1592, i32* %1596
  store %struct.Memory* %loadMem_41325c, %struct.Memory** %MEMORY
  %loadMem_41325f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1598 = getelementptr inbounds %struct.GPR, %struct.GPR* %1597, i32 0, i32 33
  %1599 = getelementptr inbounds %struct.Reg, %struct.Reg* %1598, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %1599 to i64*
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1601 = getelementptr inbounds %struct.GPR, %struct.GPR* %1600, i32 0, i32 15
  %1602 = getelementptr inbounds %struct.Reg, %struct.Reg* %1601, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %1602 to i64*
  %1603 = load i64, i64* %RBP.i1001
  %1604 = sub i64 %1603, 44
  %1605 = load i64, i64* %PC.i1000
  %1606 = add i64 %1605, 4
  store i64 %1606, i64* %PC.i1000
  %1607 = inttoptr i64 %1604 to i32*
  %1608 = load i32, i32* %1607
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1609, align 1
  %1610 = and i32 %1608, 255
  %1611 = call i32 @llvm.ctpop.i32(i32 %1610)
  %1612 = trunc i32 %1611 to i8
  %1613 = and i8 %1612, 1
  %1614 = xor i8 %1613, 1
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1614, i8* %1615, align 1
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1616, align 1
  %1617 = icmp eq i32 %1608, 0
  %1618 = zext i1 %1617 to i8
  %1619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1618, i8* %1619, align 1
  %1620 = lshr i32 %1608, 31
  %1621 = trunc i32 %1620 to i8
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1621, i8* %1622, align 1
  %1623 = lshr i32 %1608, 31
  %1624 = xor i32 %1620, %1623
  %1625 = add i32 %1624, %1623
  %1626 = icmp eq i32 %1625, 2
  %1627 = zext i1 %1626 to i8
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1627, i8* %1628, align 1
  store %struct.Memory* %loadMem_41325f, %struct.Memory** %MEMORY
  %loadMem_413263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1630 = getelementptr inbounds %struct.GPR, %struct.GPR* %1629, i32 0, i32 33
  %1631 = getelementptr inbounds %struct.Reg, %struct.Reg* %1630, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1631 to i64*
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1633 = getelementptr inbounds %struct.GPR, %struct.GPR* %1632, i32 0, i32 7
  %1634 = getelementptr inbounds %struct.Reg, %struct.Reg* %1633, i32 0, i32 0
  %1635 = bitcast %union.anon* %1634 to %struct.anon.2*
  %DL.i998 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1635, i32 0, i32 0
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1637 = getelementptr inbounds %struct.GPR, %struct.GPR* %1636, i32 0, i32 15
  %1638 = getelementptr inbounds %struct.Reg, %struct.Reg* %1637, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %1638 to i64*
  %1639 = load i64, i64* %RBP.i999
  %1640 = sub i64 %1639, 141
  %1641 = load i8, i8* %DL.i998
  %1642 = zext i8 %1641 to i64
  %1643 = load i64, i64* %PC.i997
  %1644 = add i64 %1643, 6
  store i64 %1644, i64* %PC.i997
  %1645 = inttoptr i64 %1640 to i8*
  store i8 %1641, i8* %1645
  store %struct.Memory* %loadMem_413263, %struct.Memory** %MEMORY
  %loadMem_413269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 33
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %1648 to i64*
  %1649 = load i64, i64* %PC.i996
  %1650 = add i64 %1649, 30
  %1651 = load i64, i64* %PC.i996
  %1652 = add i64 %1651, 6
  %1653 = load i64, i64* %PC.i996
  %1654 = add i64 %1653, 6
  store i64 %1654, i64* %PC.i996
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1656 = load i8, i8* %1655, align 1
  store i8 %1656, i8* %BRANCH_TAKEN, align 1
  %1657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1658 = icmp ne i8 %1656, 0
  %1659 = select i1 %1658, i64 %1650, i64 %1652
  store i64 %1659, i64* %1657, align 8
  store %struct.Memory* %loadMem_413269, %struct.Memory** %MEMORY
  %loadBr_413269 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413269 = icmp eq i8 %loadBr_413269, 1
  br i1 %cmpBr_413269, label %block_.L_413287, label %block_41326f

block_41326f:                                     ; preds = %block_.L_41324d
  %loadMem_41326f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1661 = getelementptr inbounds %struct.GPR, %struct.GPR* %1660, i32 0, i32 33
  %1662 = getelementptr inbounds %struct.Reg, %struct.Reg* %1661, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %1662 to i64*
  %1663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1664 = getelementptr inbounds %struct.GPR, %struct.GPR* %1663, i32 0, i32 1
  %1665 = getelementptr inbounds %struct.Reg, %struct.Reg* %1664, i32 0, i32 0
  %RAX.i995 = bitcast %union.anon* %1665 to i64*
  %1666 = load i64, i64* %PC.i994
  %1667 = add i64 %1666, 8
  store i64 %1667, i64* %PC.i994
  %1668 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1668, i64* %RAX.i995, align 8
  store %struct.Memory* %loadMem_41326f, %struct.Memory** %MEMORY
  %loadMem_413277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 33
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %1671 to i64*
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 1
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %RAX.i993 = bitcast %union.anon* %1674 to i64*
  %1675 = load i64, i64* %RAX.i993
  %1676 = add i64 %1675, 84
  %1677 = load i64, i64* %PC.i992
  %1678 = add i64 %1677, 4
  store i64 %1678, i64* %PC.i992
  %1679 = inttoptr i64 %1676 to i32*
  %1680 = load i32, i32* %1679
  %1681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1681, align 1
  %1682 = and i32 %1680, 255
  %1683 = call i32 @llvm.ctpop.i32(i32 %1682)
  %1684 = trunc i32 %1683 to i8
  %1685 = and i8 %1684, 1
  %1686 = xor i8 %1685, 1
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1686, i8* %1687, align 1
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1688, align 1
  %1689 = icmp eq i32 %1680, 0
  %1690 = zext i1 %1689 to i8
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1690, i8* %1691, align 1
  %1692 = lshr i32 %1680, 31
  %1693 = trunc i32 %1692 to i8
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1693, i8* %1694, align 1
  %1695 = lshr i32 %1680, 31
  %1696 = xor i32 %1692, %1695
  %1697 = add i32 %1696, %1695
  %1698 = icmp eq i32 %1697, 2
  %1699 = zext i1 %1698 to i8
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1699, i8* %1700, align 1
  store %struct.Memory* %loadMem_413277, %struct.Memory** %MEMORY
  %loadMem_41327b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 33
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %1703 to i64*
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 5
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %1707 = bitcast %union.anon* %1706 to %struct.anon.2*
  %CL.i991 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1707, i32 0, i32 0
  %1708 = load i64, i64* %PC.i990
  %1709 = add i64 %1708, 3
  store i64 %1709, i64* %PC.i990
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1711 = load i8, i8* %1710, align 1
  %1712 = icmp eq i8 %1711, 0
  %1713 = zext i1 %1712 to i8
  store i8 %1713, i8* %CL.i991, align 1
  store %struct.Memory* %loadMem_41327b, %struct.Memory** %MEMORY
  %loadMem_41327e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1715 = getelementptr inbounds %struct.GPR, %struct.GPR* %1714, i32 0, i32 33
  %1716 = getelementptr inbounds %struct.Reg, %struct.Reg* %1715, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %1716 to i64*
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1718 = getelementptr inbounds %struct.GPR, %struct.GPR* %1717, i32 0, i32 5
  %1719 = getelementptr inbounds %struct.Reg, %struct.Reg* %1718, i32 0, i32 0
  %1720 = bitcast %union.anon* %1719 to %struct.anon.2*
  %CL.i989 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1720, i32 0, i32 0
  %1721 = load i8, i8* %CL.i989
  %1722 = zext i8 %1721 to i64
  %1723 = load i64, i64* %PC.i988
  %1724 = add i64 %1723, 3
  store i64 %1724, i64* %PC.i988
  %1725 = xor i64 255, %1722
  %1726 = trunc i64 %1725 to i8
  store i8 %1726, i8* %CL.i989, align 1
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1727, align 1
  %1728 = trunc i64 %1725 to i32
  %1729 = and i32 %1728, 255
  %1730 = call i32 @llvm.ctpop.i32(i32 %1729)
  %1731 = trunc i32 %1730 to i8
  %1732 = and i8 %1731, 1
  %1733 = xor i8 %1732, 1
  %1734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1733, i8* %1734, align 1
  %1735 = icmp eq i8 %1726, 0
  %1736 = zext i1 %1735 to i8
  %1737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1736, i8* %1737, align 1
  %1738 = lshr i8 %1726, 7
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1738, i8* %1739, align 1
  %1740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1740, align 1
  %1741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1741, align 1
  store %struct.Memory* %loadMem_41327e, %struct.Memory** %MEMORY
  %loadMem_413281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1743 = getelementptr inbounds %struct.GPR, %struct.GPR* %1742, i32 0, i32 33
  %1744 = getelementptr inbounds %struct.Reg, %struct.Reg* %1743, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %1744 to i64*
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1746 = getelementptr inbounds %struct.GPR, %struct.GPR* %1745, i32 0, i32 5
  %1747 = getelementptr inbounds %struct.Reg, %struct.Reg* %1746, i32 0, i32 0
  %1748 = bitcast %union.anon* %1747 to %struct.anon.2*
  %CL.i986 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1748, i32 0, i32 0
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1750 = getelementptr inbounds %struct.GPR, %struct.GPR* %1749, i32 0, i32 15
  %1751 = getelementptr inbounds %struct.Reg, %struct.Reg* %1750, i32 0, i32 0
  %RBP.i987 = bitcast %union.anon* %1751 to i64*
  %1752 = load i64, i64* %RBP.i987
  %1753 = sub i64 %1752, 141
  %1754 = load i8, i8* %CL.i986
  %1755 = zext i8 %1754 to i64
  %1756 = load i64, i64* %PC.i985
  %1757 = add i64 %1756, 6
  store i64 %1757, i64* %PC.i985
  %1758 = inttoptr i64 %1753 to i8*
  store i8 %1754, i8* %1758
  store %struct.Memory* %loadMem_413281, %struct.Memory** %MEMORY
  br label %block_.L_413287

block_.L_413287:                                  ; preds = %block_41326f, %block_.L_41324d
  %loadMem_413287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 33
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %1761 to i64*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 1
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %1765 = bitcast %union.anon* %1764 to %struct.anon.2*
  %AL.i983 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1765, i32 0, i32 0
  %1766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1767 = getelementptr inbounds %struct.GPR, %struct.GPR* %1766, i32 0, i32 15
  %1768 = getelementptr inbounds %struct.Reg, %struct.Reg* %1767, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %1768 to i64*
  %1769 = load i64, i64* %RBP.i984
  %1770 = sub i64 %1769, 141
  %1771 = load i64, i64* %PC.i982
  %1772 = add i64 %1771, 6
  store i64 %1772, i64* %PC.i982
  %1773 = inttoptr i64 %1770 to i8*
  %1774 = load i8, i8* %1773
  store i8 %1774, i8* %AL.i983, align 1
  store %struct.Memory* %loadMem_413287, %struct.Memory** %MEMORY
  %loadMem_41328d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 33
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %1777 to i64*
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1779 = getelementptr inbounds %struct.GPR, %struct.GPR* %1778, i32 0, i32 5
  %1780 = getelementptr inbounds %struct.Reg, %struct.Reg* %1779, i32 0, i32 0
  %ECX.i980 = bitcast %union.anon* %1780 to i32*
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1782 = getelementptr inbounds %struct.GPR, %struct.GPR* %1781, i32 0, i32 5
  %1783 = getelementptr inbounds %struct.Reg, %struct.Reg* %1782, i32 0, i32 0
  %RCX.i981 = bitcast %union.anon* %1783 to i64*
  %1784 = load i64, i64* %RCX.i981
  %1785 = load i32, i32* %ECX.i980
  %1786 = zext i32 %1785 to i64
  %1787 = load i64, i64* %PC.i979
  %1788 = add i64 %1787, 2
  store i64 %1788, i64* %PC.i979
  %1789 = xor i64 %1786, %1784
  %1790 = trunc i64 %1789 to i32
  %1791 = and i64 %1789, 4294967295
  store i64 %1791, i64* %RCX.i981, align 8
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1792, align 1
  %1793 = and i32 %1790, 255
  %1794 = call i32 @llvm.ctpop.i32(i32 %1793)
  %1795 = trunc i32 %1794 to i8
  %1796 = and i8 %1795, 1
  %1797 = xor i8 %1796, 1
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1797, i8* %1798, align 1
  %1799 = icmp eq i32 %1790, 0
  %1800 = zext i1 %1799 to i8
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1800, i8* %1801, align 1
  %1802 = lshr i32 %1790, 31
  %1803 = trunc i32 %1802 to i8
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1803, i8* %1804, align 1
  %1805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1805, align 1
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1806, align 1
  store %struct.Memory* %loadMem_41328d, %struct.Memory** %MEMORY
  %loadMem_41328f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1808 = getelementptr inbounds %struct.GPR, %struct.GPR* %1807, i32 0, i32 33
  %1809 = getelementptr inbounds %struct.Reg, %struct.Reg* %1808, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %1809 to i64*
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1811 = getelementptr inbounds %struct.GPR, %struct.GPR* %1810, i32 0, i32 5
  %1812 = getelementptr inbounds %struct.Reg, %struct.Reg* %1811, i32 0, i32 0
  %1813 = bitcast %union.anon* %1812 to %struct.anon.2*
  %CL.i977 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1813, i32 0, i32 0
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1815 = getelementptr inbounds %struct.GPR, %struct.GPR* %1814, i32 0, i32 7
  %1816 = getelementptr inbounds %struct.Reg, %struct.Reg* %1815, i32 0, i32 0
  %1817 = bitcast %union.anon* %1816 to %struct.anon.2*
  %DL.i978 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1817, i32 0, i32 0
  %1818 = load i8, i8* %CL.i977
  %1819 = zext i8 %1818 to i64
  %1820 = load i64, i64* %PC.i976
  %1821 = add i64 %1820, 2
  store i64 %1821, i64* %PC.i976
  store i8 %1818, i8* %DL.i978, align 1
  store %struct.Memory* %loadMem_41328f, %struct.Memory** %MEMORY
  %loadMem_413291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1823 = getelementptr inbounds %struct.GPR, %struct.GPR* %1822, i32 0, i32 33
  %1824 = getelementptr inbounds %struct.Reg, %struct.Reg* %1823, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %1824 to i64*
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1826 = getelementptr inbounds %struct.GPR, %struct.GPR* %1825, i32 0, i32 1
  %1827 = getelementptr inbounds %struct.Reg, %struct.Reg* %1826, i32 0, i32 0
  %1828 = bitcast %union.anon* %1827 to %struct.anon.2*
  %AL.i975 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1828, i32 0, i32 0
  %1829 = load i8, i8* %AL.i975
  %1830 = zext i8 %1829 to i64
  %1831 = load i64, i64* %PC.i974
  %1832 = add i64 %1831, 2
  store i64 %1832, i64* %PC.i974
  %1833 = and i64 1, %1830
  %1834 = trunc i64 %1833 to i8
  store i8 %1834, i8* %AL.i975, align 1
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1835, align 1
  %1836 = trunc i64 %1833 to i32
  %1837 = and i32 %1836, 255
  %1838 = call i32 @llvm.ctpop.i32(i32 %1837)
  %1839 = trunc i32 %1838 to i8
  %1840 = and i8 %1839, 1
  %1841 = xor i8 %1840, 1
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1841, i8* %1842, align 1
  %1843 = icmp eq i8 %1834, 0
  %1844 = zext i1 %1843 to i8
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1844, i8* %1845, align 1
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1846, align 1
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1847, align 1
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1848, align 1
  store %struct.Memory* %loadMem_413291, %struct.Memory** %MEMORY
  %loadMem_413293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1850 = getelementptr inbounds %struct.GPR, %struct.GPR* %1849, i32 0, i32 33
  %1851 = getelementptr inbounds %struct.Reg, %struct.Reg* %1850, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %1851 to i64*
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1853 = getelementptr inbounds %struct.GPR, %struct.GPR* %1852, i32 0, i32 1
  %1854 = getelementptr inbounds %struct.Reg, %struct.Reg* %1853, i32 0, i32 0
  %1855 = bitcast %union.anon* %1854 to %struct.anon.2*
  %AL.i972 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1855, i32 0, i32 0
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1857 = getelementptr inbounds %struct.GPR, %struct.GPR* %1856, i32 0, i32 5
  %1858 = getelementptr inbounds %struct.Reg, %struct.Reg* %1857, i32 0, i32 0
  %RCX.i973 = bitcast %union.anon* %1858 to i64*
  %1859 = load i8, i8* %AL.i972
  %1860 = zext i8 %1859 to i64
  %1861 = load i64, i64* %PC.i971
  %1862 = add i64 %1861, 3
  store i64 %1862, i64* %PC.i971
  %1863 = and i64 %1860, 255
  store i64 %1863, i64* %RCX.i973, align 8
  store %struct.Memory* %loadMem_413293, %struct.Memory** %MEMORY
  %loadMem_413296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 33
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %1866 to i64*
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1868 = getelementptr inbounds %struct.GPR, %struct.GPR* %1867, i32 0, i32 5
  %1869 = getelementptr inbounds %struct.Reg, %struct.Reg* %1868, i32 0, i32 0
  %ECX.i969 = bitcast %union.anon* %1869 to i32*
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 15
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %1872 to i64*
  %1873 = load i64, i64* %RBP.i970
  %1874 = sub i64 %1873, 48
  %1875 = load i32, i32* %ECX.i969
  %1876 = zext i32 %1875 to i64
  %1877 = load i64, i64* %PC.i968
  %1878 = add i64 %1877, 3
  store i64 %1878, i64* %PC.i968
  %1879 = inttoptr i64 %1874 to i32*
  store i32 %1875, i32* %1879
  store %struct.Memory* %loadMem_413296, %struct.Memory** %MEMORY
  %loadMem_413299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 33
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %1882 to i64*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 15
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %1885 to i64*
  %1886 = load i64, i64* %RBP.i967
  %1887 = sub i64 %1886, 44
  %1888 = load i64, i64* %PC.i966
  %1889 = add i64 %1888, 4
  store i64 %1889, i64* %PC.i966
  %1890 = inttoptr i64 %1887 to i32*
  %1891 = load i32, i32* %1890
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1892, align 1
  %1893 = and i32 %1891, 255
  %1894 = call i32 @llvm.ctpop.i32(i32 %1893)
  %1895 = trunc i32 %1894 to i8
  %1896 = and i8 %1895, 1
  %1897 = xor i8 %1896, 1
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1897, i8* %1898, align 1
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1899, align 1
  %1900 = icmp eq i32 %1891, 0
  %1901 = zext i1 %1900 to i8
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1901, i8* %1902, align 1
  %1903 = lshr i32 %1891, 31
  %1904 = trunc i32 %1903 to i8
  %1905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1904, i8* %1905, align 1
  %1906 = lshr i32 %1891, 31
  %1907 = xor i32 %1903, %1906
  %1908 = add i32 %1907, %1906
  %1909 = icmp eq i32 %1908, 2
  %1910 = zext i1 %1909 to i8
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1910, i8* %1911, align 1
  store %struct.Memory* %loadMem_413299, %struct.Memory** %MEMORY
  %loadMem_41329d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1913 = getelementptr inbounds %struct.GPR, %struct.GPR* %1912, i32 0, i32 33
  %1914 = getelementptr inbounds %struct.Reg, %struct.Reg* %1913, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %1914 to i64*
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1916 = getelementptr inbounds %struct.GPR, %struct.GPR* %1915, i32 0, i32 7
  %1917 = getelementptr inbounds %struct.Reg, %struct.Reg* %1916, i32 0, i32 0
  %1918 = bitcast %union.anon* %1917 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1918, i32 0, i32 0
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1920 = getelementptr inbounds %struct.GPR, %struct.GPR* %1919, i32 0, i32 15
  %1921 = getelementptr inbounds %struct.Reg, %struct.Reg* %1920, i32 0, i32 0
  %RBP.i965 = bitcast %union.anon* %1921 to i64*
  %1922 = load i64, i64* %RBP.i965
  %1923 = sub i64 %1922, 142
  %1924 = load i8, i8* %DL.i
  %1925 = zext i8 %1924 to i64
  %1926 = load i64, i64* %PC.i964
  %1927 = add i64 %1926, 6
  store i64 %1927, i64* %PC.i964
  %1928 = inttoptr i64 %1923 to i8*
  store i8 %1924, i8* %1928
  store %struct.Memory* %loadMem_41329d, %struct.Memory** %MEMORY
  %loadMem_4132a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1930 = getelementptr inbounds %struct.GPR, %struct.GPR* %1929, i32 0, i32 33
  %1931 = getelementptr inbounds %struct.Reg, %struct.Reg* %1930, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %1931 to i64*
  %1932 = load i64, i64* %PC.i963
  %1933 = add i64 %1932, 27
  %1934 = load i64, i64* %PC.i963
  %1935 = add i64 %1934, 6
  %1936 = load i64, i64* %PC.i963
  %1937 = add i64 %1936, 6
  store i64 %1937, i64* %PC.i963
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1939 = load i8, i8* %1938, align 1
  store i8 %1939, i8* %BRANCH_TAKEN, align 1
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1941 = icmp ne i8 %1939, 0
  %1942 = select i1 %1941, i64 %1933, i64 %1935
  store i64 %1942, i64* %1940, align 8
  store %struct.Memory* %loadMem_4132a3, %struct.Memory** %MEMORY
  %loadBr_4132a3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4132a3 = icmp eq i8 %loadBr_4132a3, 1
  br i1 %cmpBr_4132a3, label %block_.L_4132be, label %block_4132a9

block_4132a9:                                     ; preds = %block_.L_413287
  %loadMem_4132a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1944 = getelementptr inbounds %struct.GPR, %struct.GPR* %1943, i32 0, i32 33
  %1945 = getelementptr inbounds %struct.Reg, %struct.Reg* %1944, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %1945 to i64*
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 1
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %RAX.i962 = bitcast %union.anon* %1948 to i64*
  %1949 = load i64, i64* %PC.i961
  %1950 = add i64 %1949, 8
  store i64 %1950, i64* %PC.i961
  %1951 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1951, i64* %RAX.i962, align 8
  store %struct.Memory* %loadMem_4132a9, %struct.Memory** %MEMORY
  %loadMem_4132b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1953 = getelementptr inbounds %struct.GPR, %struct.GPR* %1952, i32 0, i32 33
  %1954 = getelementptr inbounds %struct.Reg, %struct.Reg* %1953, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %1954 to i64*
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 1
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %1957 to i64*
  %1958 = load i64, i64* %RAX.i960
  %1959 = add i64 %1958, 84
  %1960 = load i64, i64* %PC.i959
  %1961 = add i64 %1960, 4
  store i64 %1961, i64* %PC.i959
  %1962 = inttoptr i64 %1959 to i32*
  %1963 = load i32, i32* %1962
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1964, align 1
  %1965 = and i32 %1963, 255
  %1966 = call i32 @llvm.ctpop.i32(i32 %1965)
  %1967 = trunc i32 %1966 to i8
  %1968 = and i8 %1967, 1
  %1969 = xor i8 %1968, 1
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1969, i8* %1970, align 1
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1971, align 1
  %1972 = icmp eq i32 %1963, 0
  %1973 = zext i1 %1972 to i8
  %1974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1973, i8* %1974, align 1
  %1975 = lshr i32 %1963, 31
  %1976 = trunc i32 %1975 to i8
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1976, i8* %1977, align 1
  %1978 = lshr i32 %1963, 31
  %1979 = xor i32 %1975, %1978
  %1980 = add i32 %1979, %1978
  %1981 = icmp eq i32 %1980, 2
  %1982 = zext i1 %1981 to i8
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1982, i8* %1983, align 1
  store %struct.Memory* %loadMem_4132b1, %struct.Memory** %MEMORY
  %loadMem_4132b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1985 = getelementptr inbounds %struct.GPR, %struct.GPR* %1984, i32 0, i32 33
  %1986 = getelementptr inbounds %struct.Reg, %struct.Reg* %1985, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %1986 to i64*
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1988 = getelementptr inbounds %struct.GPR, %struct.GPR* %1987, i32 0, i32 5
  %1989 = getelementptr inbounds %struct.Reg, %struct.Reg* %1988, i32 0, i32 0
  %1990 = bitcast %union.anon* %1989 to %struct.anon.2*
  %CL.i958 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1990, i32 0, i32 0
  %1991 = load i64, i64* %PC.i957
  %1992 = add i64 %1991, 3
  store i64 %1992, i64* %PC.i957
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1994 = load i8, i8* %1993, align 1
  %1995 = icmp eq i8 %1994, 0
  %1996 = zext i1 %1995 to i8
  store i8 %1996, i8* %CL.i958, align 1
  store %struct.Memory* %loadMem_4132b5, %struct.Memory** %MEMORY
  %loadMem_4132b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1998 = getelementptr inbounds %struct.GPR, %struct.GPR* %1997, i32 0, i32 33
  %1999 = getelementptr inbounds %struct.Reg, %struct.Reg* %1998, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %1999 to i64*
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2001 = getelementptr inbounds %struct.GPR, %struct.GPR* %2000, i32 0, i32 5
  %2002 = getelementptr inbounds %struct.Reg, %struct.Reg* %2001, i32 0, i32 0
  %2003 = bitcast %union.anon* %2002 to %struct.anon.2*
  %CL.i955 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2003, i32 0, i32 0
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2005 = getelementptr inbounds %struct.GPR, %struct.GPR* %2004, i32 0, i32 15
  %2006 = getelementptr inbounds %struct.Reg, %struct.Reg* %2005, i32 0, i32 0
  %RBP.i956 = bitcast %union.anon* %2006 to i64*
  %2007 = load i64, i64* %RBP.i956
  %2008 = sub i64 %2007, 142
  %2009 = load i8, i8* %CL.i955
  %2010 = zext i8 %2009 to i64
  %2011 = load i64, i64* %PC.i954
  %2012 = add i64 %2011, 6
  store i64 %2012, i64* %PC.i954
  %2013 = inttoptr i64 %2008 to i8*
  store i8 %2009, i8* %2013
  store %struct.Memory* %loadMem_4132b8, %struct.Memory** %MEMORY
  br label %block_.L_4132be

block_.L_4132be:                                  ; preds = %block_4132a9, %block_.L_413287
  %loadMem_4132be = load %struct.Memory*, %struct.Memory** %MEMORY
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2015 = getelementptr inbounds %struct.GPR, %struct.GPR* %2014, i32 0, i32 33
  %2016 = getelementptr inbounds %struct.Reg, %struct.Reg* %2015, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %2016 to i64*
  %2017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2018 = getelementptr inbounds %struct.GPR, %struct.GPR* %2017, i32 0, i32 1
  %2019 = getelementptr inbounds %struct.Reg, %struct.Reg* %2018, i32 0, i32 0
  %2020 = bitcast %union.anon* %2019 to %struct.anon.2*
  %AL.i952 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2020, i32 0, i32 0
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2022 = getelementptr inbounds %struct.GPR, %struct.GPR* %2021, i32 0, i32 15
  %2023 = getelementptr inbounds %struct.Reg, %struct.Reg* %2022, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %2023 to i64*
  %2024 = load i64, i64* %RBP.i953
  %2025 = sub i64 %2024, 142
  %2026 = load i64, i64* %PC.i951
  %2027 = add i64 %2026, 6
  store i64 %2027, i64* %PC.i951
  %2028 = inttoptr i64 %2025 to i8*
  %2029 = load i8, i8* %2028
  store i8 %2029, i8* %AL.i952, align 1
  store %struct.Memory* %loadMem_4132be, %struct.Memory** %MEMORY
  %loadMem_4132c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 33
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %2032 to i64*
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 1
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %2036 = bitcast %union.anon* %2035 to %struct.anon.2*
  %AL.i950 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2036, i32 0, i32 0
  %2037 = load i8, i8* %AL.i950
  %2038 = zext i8 %2037 to i64
  %2039 = load i64, i64* %PC.i949
  %2040 = add i64 %2039, 2
  store i64 %2040, i64* %PC.i949
  %2041 = and i64 1, %2038
  %2042 = trunc i64 %2041 to i8
  store i8 %2042, i8* %AL.i950, align 1
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2043, align 1
  %2044 = trunc i64 %2041 to i32
  %2045 = and i32 %2044, 255
  %2046 = call i32 @llvm.ctpop.i32(i32 %2045)
  %2047 = trunc i32 %2046 to i8
  %2048 = and i8 %2047, 1
  %2049 = xor i8 %2048, 1
  %2050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2049, i8* %2050, align 1
  %2051 = icmp eq i8 %2042, 0
  %2052 = zext i1 %2051 to i8
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2052, i8* %2053, align 1
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2054, align 1
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2055, align 1
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2056, align 1
  store %struct.Memory* %loadMem_4132c4, %struct.Memory** %MEMORY
  %loadMem_4132c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2058 = getelementptr inbounds %struct.GPR, %struct.GPR* %2057, i32 0, i32 33
  %2059 = getelementptr inbounds %struct.Reg, %struct.Reg* %2058, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %2059 to i64*
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2061 = getelementptr inbounds %struct.GPR, %struct.GPR* %2060, i32 0, i32 1
  %2062 = getelementptr inbounds %struct.Reg, %struct.Reg* %2061, i32 0, i32 0
  %2063 = bitcast %union.anon* %2062 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2063, i32 0, i32 0
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2065 = getelementptr inbounds %struct.GPR, %struct.GPR* %2064, i32 0, i32 5
  %2066 = getelementptr inbounds %struct.Reg, %struct.Reg* %2065, i32 0, i32 0
  %RCX.i948 = bitcast %union.anon* %2066 to i64*
  %2067 = load i8, i8* %AL.i
  %2068 = zext i8 %2067 to i64
  %2069 = load i64, i64* %PC.i947
  %2070 = add i64 %2069, 3
  store i64 %2070, i64* %PC.i947
  %2071 = and i64 %2068, 255
  store i64 %2071, i64* %RCX.i948, align 8
  store %struct.Memory* %loadMem_4132c6, %struct.Memory** %MEMORY
  %loadMem_4132c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2073 = getelementptr inbounds %struct.GPR, %struct.GPR* %2072, i32 0, i32 33
  %2074 = getelementptr inbounds %struct.Reg, %struct.Reg* %2073, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %2074 to i64*
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 5
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %ECX.i945 = bitcast %union.anon* %2077 to i32*
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2079 = getelementptr inbounds %struct.GPR, %struct.GPR* %2078, i32 0, i32 15
  %2080 = getelementptr inbounds %struct.Reg, %struct.Reg* %2079, i32 0, i32 0
  %RBP.i946 = bitcast %union.anon* %2080 to i64*
  %2081 = load i64, i64* %RBP.i946
  %2082 = sub i64 %2081, 52
  %2083 = load i32, i32* %ECX.i945
  %2084 = zext i32 %2083 to i64
  %2085 = load i64, i64* %PC.i944
  %2086 = add i64 %2085, 3
  store i64 %2086, i64* %PC.i944
  %2087 = inttoptr i64 %2082 to i32*
  store i32 %2083, i32* %2087
  store %struct.Memory* %loadMem_4132c9, %struct.Memory** %MEMORY
  %loadMem_4132cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2089 = getelementptr inbounds %struct.GPR, %struct.GPR* %2088, i32 0, i32 33
  %2090 = getelementptr inbounds %struct.Reg, %struct.Reg* %2089, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %2090 to i64*
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2092 = getelementptr inbounds %struct.GPR, %struct.GPR* %2091, i32 0, i32 15
  %2093 = getelementptr inbounds %struct.Reg, %struct.Reg* %2092, i32 0, i32 0
  %RBP.i943 = bitcast %union.anon* %2093 to i64*
  %2094 = load i64, i64* %RBP.i943
  %2095 = sub i64 %2094, 28
  %2096 = load i64, i64* %PC.i942
  %2097 = add i64 %2096, 4
  store i64 %2097, i64* %PC.i942
  %2098 = inttoptr i64 %2095 to i32*
  %2099 = load i32, i32* %2098
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2100, align 1
  %2101 = and i32 %2099, 255
  %2102 = call i32 @llvm.ctpop.i32(i32 %2101)
  %2103 = trunc i32 %2102 to i8
  %2104 = and i8 %2103, 1
  %2105 = xor i8 %2104, 1
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2105, i8* %2106, align 1
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2107, align 1
  %2108 = icmp eq i32 %2099, 0
  %2109 = zext i1 %2108 to i8
  %2110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2109, i8* %2110, align 1
  %2111 = lshr i32 %2099, 31
  %2112 = trunc i32 %2111 to i8
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2112, i8* %2113, align 1
  %2114 = lshr i32 %2099, 31
  %2115 = xor i32 %2111, %2114
  %2116 = add i32 %2115, %2114
  %2117 = icmp eq i32 %2116, 2
  %2118 = zext i1 %2117 to i8
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2118, i8* %2119, align 1
  store %struct.Memory* %loadMem_4132cc, %struct.Memory** %MEMORY
  %loadMem_4132d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2121 = getelementptr inbounds %struct.GPR, %struct.GPR* %2120, i32 0, i32 33
  %2122 = getelementptr inbounds %struct.Reg, %struct.Reg* %2121, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %2122 to i64*
  %2123 = load i64, i64* %PC.i941
  %2124 = add i64 %2123, 26
  %2125 = load i64, i64* %PC.i941
  %2126 = add i64 %2125, 6
  %2127 = load i64, i64* %PC.i941
  %2128 = add i64 %2127, 6
  store i64 %2128, i64* %PC.i941
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2130 = load i8, i8* %2129, align 1
  %2131 = icmp eq i8 %2130, 0
  %2132 = zext i1 %2131 to i8
  store i8 %2132, i8* %BRANCH_TAKEN, align 1
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2134 = select i1 %2131, i64 %2124, i64 %2126
  store i64 %2134, i64* %2133, align 8
  store %struct.Memory* %loadMem_4132d0, %struct.Memory** %MEMORY
  %loadBr_4132d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4132d0 = icmp eq i8 %loadBr_4132d0, 1
  br i1 %cmpBr_4132d0, label %block_.L_4132ea, label %block_4132d6

block_4132d6:                                     ; preds = %block_.L_4132be
  %loadMem_4132d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 33
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %2137 to i64*
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 15
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %RBP.i940 = bitcast %union.anon* %2140 to i64*
  %2141 = load i64, i64* %RBP.i940
  %2142 = sub i64 %2141, 36
  %2143 = load i64, i64* %PC.i939
  %2144 = add i64 %2143, 4
  store i64 %2144, i64* %PC.i939
  %2145 = inttoptr i64 %2142 to i32*
  %2146 = load i32, i32* %2145
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2147, align 1
  %2148 = and i32 %2146, 255
  %2149 = call i32 @llvm.ctpop.i32(i32 %2148)
  %2150 = trunc i32 %2149 to i8
  %2151 = and i8 %2150, 1
  %2152 = xor i8 %2151, 1
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2152, i8* %2153, align 1
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2154, align 1
  %2155 = icmp eq i32 %2146, 0
  %2156 = zext i1 %2155 to i8
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2156, i8* %2157, align 1
  %2158 = lshr i32 %2146, 31
  %2159 = trunc i32 %2158 to i8
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2159, i8* %2160, align 1
  %2161 = lshr i32 %2146, 31
  %2162 = xor i32 %2158, %2161
  %2163 = add i32 %2162, %2161
  %2164 = icmp eq i32 %2163, 2
  %2165 = zext i1 %2164 to i8
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2165, i8* %2166, align 1
  store %struct.Memory* %loadMem_4132d6, %struct.Memory** %MEMORY
  %loadMem_4132da = load %struct.Memory*, %struct.Memory** %MEMORY
  %2167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2168 = getelementptr inbounds %struct.GPR, %struct.GPR* %2167, i32 0, i32 33
  %2169 = getelementptr inbounds %struct.Reg, %struct.Reg* %2168, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %2169 to i64*
  %2170 = load i64, i64* %PC.i938
  %2171 = add i64 %2170, 16
  %2172 = load i64, i64* %PC.i938
  %2173 = add i64 %2172, 6
  %2174 = load i64, i64* %PC.i938
  %2175 = add i64 %2174, 6
  store i64 %2175, i64* %PC.i938
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2177 = load i8, i8* %2176, align 1
  %2178 = icmp eq i8 %2177, 0
  %2179 = zext i1 %2178 to i8
  store i8 %2179, i8* %BRANCH_TAKEN, align 1
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2181 = select i1 %2178, i64 %2171, i64 %2173
  store i64 %2181, i64* %2180, align 8
  store %struct.Memory* %loadMem_4132da, %struct.Memory** %MEMORY
  %loadBr_4132da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4132da = icmp eq i8 %loadBr_4132da, 1
  br i1 %cmpBr_4132da, label %block_.L_4132ea, label %block_4132e0

block_4132e0:                                     ; preds = %block_4132d6
  %loadMem_4132e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2183 = getelementptr inbounds %struct.GPR, %struct.GPR* %2182, i32 0, i32 33
  %2184 = getelementptr inbounds %struct.Reg, %struct.Reg* %2183, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %2184 to i64*
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 15
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %RBP.i937 = bitcast %union.anon* %2187 to i64*
  %2188 = load i64, i64* %RBP.i937
  %2189 = sub i64 %2188, 40
  %2190 = load i64, i64* %PC.i936
  %2191 = add i64 %2190, 4
  store i64 %2191, i64* %PC.i936
  %2192 = inttoptr i64 %2189 to i32*
  %2193 = load i32, i32* %2192
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2194, align 1
  %2195 = and i32 %2193, 255
  %2196 = call i32 @llvm.ctpop.i32(i32 %2195)
  %2197 = trunc i32 %2196 to i8
  %2198 = and i8 %2197, 1
  %2199 = xor i8 %2198, 1
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2199, i8* %2200, align 1
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2201, align 1
  %2202 = icmp eq i32 %2193, 0
  %2203 = zext i1 %2202 to i8
  %2204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2203, i8* %2204, align 1
  %2205 = lshr i32 %2193, 31
  %2206 = trunc i32 %2205 to i8
  %2207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2206, i8* %2207, align 1
  %2208 = lshr i32 %2193, 31
  %2209 = xor i32 %2205, %2208
  %2210 = add i32 %2209, %2208
  %2211 = icmp eq i32 %2210, 2
  %2212 = zext i1 %2211 to i8
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2212, i8* %2213, align 1
  store %struct.Memory* %loadMem_4132e0, %struct.Memory** %MEMORY
  %loadMem_4132e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2215 = getelementptr inbounds %struct.GPR, %struct.GPR* %2214, i32 0, i32 33
  %2216 = getelementptr inbounds %struct.Reg, %struct.Reg* %2215, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %2216 to i64*
  %2217 = load i64, i64* %PC.i935
  %2218 = add i64 %2217, 28
  %2219 = load i64, i64* %PC.i935
  %2220 = add i64 %2219, 6
  %2221 = load i64, i64* %PC.i935
  %2222 = add i64 %2221, 6
  store i64 %2222, i64* %PC.i935
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2224 = load i8, i8* %2223, align 1
  store i8 %2224, i8* %BRANCH_TAKEN, align 1
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2226 = icmp ne i8 %2224, 0
  %2227 = select i1 %2226, i64 %2218, i64 %2220
  store i64 %2227, i64* %2225, align 8
  store %struct.Memory* %loadMem_4132e4, %struct.Memory** %MEMORY
  %loadBr_4132e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4132e4 = icmp eq i8 %loadBr_4132e4, 1
  br i1 %cmpBr_4132e4, label %block_.L_413300, label %block_.L_4132ea

block_.L_4132ea:                                  ; preds = %block_4132e0, %block_4132d6, %block_.L_4132be
  %loadMem_4132ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2229 = getelementptr inbounds %struct.GPR, %struct.GPR* %2228, i32 0, i32 33
  %2230 = getelementptr inbounds %struct.Reg, %struct.Reg* %2229, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %2230 to i64*
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2232 = getelementptr inbounds %struct.GPR, %struct.GPR* %2231, i32 0, i32 1
  %2233 = getelementptr inbounds %struct.Reg, %struct.Reg* %2232, i32 0, i32 0
  %RAX.i934 = bitcast %union.anon* %2233 to i64*
  %2234 = load i64, i64* %PC.i933
  %2235 = add i64 %2234, 8
  store i64 %2235, i64* %PC.i933
  %2236 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2236, i64* %RAX.i934, align 8
  store %struct.Memory* %loadMem_4132ea, %struct.Memory** %MEMORY
  %loadMem_4132f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2238 = getelementptr inbounds %struct.GPR, %struct.GPR* %2237, i32 0, i32 33
  %2239 = getelementptr inbounds %struct.Reg, %struct.Reg* %2238, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %2239 to i64*
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2241 = getelementptr inbounds %struct.GPR, %struct.GPR* %2240, i32 0, i32 1
  %2242 = getelementptr inbounds %struct.Reg, %struct.Reg* %2241, i32 0, i32 0
  %RAX.i931 = bitcast %union.anon* %2242 to i64*
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2244 = getelementptr inbounds %struct.GPR, %struct.GPR* %2243, i32 0, i32 5
  %2245 = getelementptr inbounds %struct.Reg, %struct.Reg* %2244, i32 0, i32 0
  %RCX.i932 = bitcast %union.anon* %2245 to i64*
  %2246 = load i64, i64* %RAX.i931
  %2247 = add i64 %2246, 76
  %2248 = load i64, i64* %PC.i930
  %2249 = add i64 %2248, 3
  store i64 %2249, i64* %PC.i930
  %2250 = inttoptr i64 %2247 to i32*
  %2251 = load i32, i32* %2250
  %2252 = zext i32 %2251 to i64
  store i64 %2252, i64* %RCX.i932, align 8
  store %struct.Memory* %loadMem_4132f2, %struct.Memory** %MEMORY
  %loadMem_4132f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2254 = getelementptr inbounds %struct.GPR, %struct.GPR* %2253, i32 0, i32 33
  %2255 = getelementptr inbounds %struct.Reg, %struct.Reg* %2254, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %2255 to i64*
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2257 = getelementptr inbounds %struct.GPR, %struct.GPR* %2256, i32 0, i32 5
  %2258 = getelementptr inbounds %struct.Reg, %struct.Reg* %2257, i32 0, i32 0
  %ECX.i928 = bitcast %union.anon* %2258 to i32*
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2260 = getelementptr inbounds %struct.GPR, %struct.GPR* %2259, i32 0, i32 15
  %2261 = getelementptr inbounds %struct.Reg, %struct.Reg* %2260, i32 0, i32 0
  %RBP.i929 = bitcast %union.anon* %2261 to i64*
  %2262 = load i64, i64* %RBP.i929
  %2263 = sub i64 %2262, 148
  %2264 = load i32, i32* %ECX.i928
  %2265 = zext i32 %2264 to i64
  %2266 = load i64, i64* %PC.i927
  %2267 = add i64 %2266, 6
  store i64 %2267, i64* %PC.i927
  %2268 = inttoptr i64 %2263 to i32*
  store i32 %2264, i32* %2268
  store %struct.Memory* %loadMem_4132f5, %struct.Memory** %MEMORY
  %loadMem_4132fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2270 = getelementptr inbounds %struct.GPR, %struct.GPR* %2269, i32 0, i32 33
  %2271 = getelementptr inbounds %struct.Reg, %struct.Reg* %2270, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %2271 to i64*
  %2272 = load i64, i64* %PC.i926
  %2273 = add i64 %2272, 18
  %2274 = load i64, i64* %PC.i926
  %2275 = add i64 %2274, 5
  store i64 %2275, i64* %PC.i926
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2273, i64* %2276, align 8
  store %struct.Memory* %loadMem_4132fb, %struct.Memory** %MEMORY
  br label %block_.L_41330d

block_.L_413300:                                  ; preds = %block_4132e0
  %loadMem_413300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2278 = getelementptr inbounds %struct.GPR, %struct.GPR* %2277, i32 0, i32 33
  %2279 = getelementptr inbounds %struct.Reg, %struct.Reg* %2278, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %2279 to i64*
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 1
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %EAX.i924 = bitcast %union.anon* %2282 to i32*
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 1
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %RAX.i925 = bitcast %union.anon* %2285 to i64*
  %2286 = load i64, i64* %RAX.i925
  %2287 = load i32, i32* %EAX.i924
  %2288 = zext i32 %2287 to i64
  %2289 = load i64, i64* %PC.i923
  %2290 = add i64 %2289, 2
  store i64 %2290, i64* %PC.i923
  %2291 = xor i64 %2288, %2286
  %2292 = trunc i64 %2291 to i32
  %2293 = and i64 %2291, 4294967295
  store i64 %2293, i64* %RAX.i925, align 8
  %2294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2294, align 1
  %2295 = and i32 %2292, 255
  %2296 = call i32 @llvm.ctpop.i32(i32 %2295)
  %2297 = trunc i32 %2296 to i8
  %2298 = and i8 %2297, 1
  %2299 = xor i8 %2298, 1
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2299, i8* %2300, align 1
  %2301 = icmp eq i32 %2292, 0
  %2302 = zext i1 %2301 to i8
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2302, i8* %2303, align 1
  %2304 = lshr i32 %2292, 31
  %2305 = trunc i32 %2304 to i8
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2305, i8* %2306, align 1
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2307, align 1
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2308, align 1
  store %struct.Memory* %loadMem_413300, %struct.Memory** %MEMORY
  %loadMem_413302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2310 = getelementptr inbounds %struct.GPR, %struct.GPR* %2309, i32 0, i32 33
  %2311 = getelementptr inbounds %struct.Reg, %struct.Reg* %2310, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %2311 to i64*
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2313 = getelementptr inbounds %struct.GPR, %struct.GPR* %2312, i32 0, i32 1
  %2314 = getelementptr inbounds %struct.Reg, %struct.Reg* %2313, i32 0, i32 0
  %EAX.i921 = bitcast %union.anon* %2314 to i32*
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2316 = getelementptr inbounds %struct.GPR, %struct.GPR* %2315, i32 0, i32 15
  %2317 = getelementptr inbounds %struct.Reg, %struct.Reg* %2316, i32 0, i32 0
  %RBP.i922 = bitcast %union.anon* %2317 to i64*
  %2318 = load i64, i64* %RBP.i922
  %2319 = sub i64 %2318, 148
  %2320 = load i32, i32* %EAX.i921
  %2321 = zext i32 %2320 to i64
  %2322 = load i64, i64* %PC.i920
  %2323 = add i64 %2322, 6
  store i64 %2323, i64* %PC.i920
  %2324 = inttoptr i64 %2319 to i32*
  store i32 %2320, i32* %2324
  store %struct.Memory* %loadMem_413302, %struct.Memory** %MEMORY
  %loadMem_413308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2326 = getelementptr inbounds %struct.GPR, %struct.GPR* %2325, i32 0, i32 33
  %2327 = getelementptr inbounds %struct.Reg, %struct.Reg* %2326, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %2327 to i64*
  %2328 = load i64, i64* %PC.i919
  %2329 = add i64 %2328, 5
  %2330 = load i64, i64* %PC.i919
  %2331 = add i64 %2330, 5
  store i64 %2331, i64* %PC.i919
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2329, i64* %2332, align 8
  store %struct.Memory* %loadMem_413308, %struct.Memory** %MEMORY
  br label %block_.L_41330d

block_.L_41330d:                                  ; preds = %block_.L_413300, %block_.L_4132ea
  %loadMem_41330d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 33
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %2335 to i64*
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2337 = getelementptr inbounds %struct.GPR, %struct.GPR* %2336, i32 0, i32 1
  %2338 = getelementptr inbounds %struct.Reg, %struct.Reg* %2337, i32 0, i32 0
  %RAX.i917 = bitcast %union.anon* %2338 to i64*
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2340 = getelementptr inbounds %struct.GPR, %struct.GPR* %2339, i32 0, i32 15
  %2341 = getelementptr inbounds %struct.Reg, %struct.Reg* %2340, i32 0, i32 0
  %RBP.i918 = bitcast %union.anon* %2341 to i64*
  %2342 = load i64, i64* %RBP.i918
  %2343 = sub i64 %2342, 148
  %2344 = load i64, i64* %PC.i916
  %2345 = add i64 %2344, 6
  store i64 %2345, i64* %PC.i916
  %2346 = inttoptr i64 %2343 to i32*
  %2347 = load i32, i32* %2346
  %2348 = zext i32 %2347 to i64
  store i64 %2348, i64* %RAX.i917, align 8
  store %struct.Memory* %loadMem_41330d, %struct.Memory** %MEMORY
  %loadMem_413313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2350 = getelementptr inbounds %struct.GPR, %struct.GPR* %2349, i32 0, i32 33
  %2351 = getelementptr inbounds %struct.Reg, %struct.Reg* %2350, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %2351 to i64*
  %2352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2353 = getelementptr inbounds %struct.GPR, %struct.GPR* %2352, i32 0, i32 1
  %2354 = getelementptr inbounds %struct.Reg, %struct.Reg* %2353, i32 0, i32 0
  %EAX.i914 = bitcast %union.anon* %2354 to i32*
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2356 = getelementptr inbounds %struct.GPR, %struct.GPR* %2355, i32 0, i32 15
  %2357 = getelementptr inbounds %struct.Reg, %struct.Reg* %2356, i32 0, i32 0
  %RBP.i915 = bitcast %union.anon* %2357 to i64*
  %2358 = load i64, i64* %RBP.i915
  %2359 = sub i64 %2358, 56
  %2360 = load i32, i32* %EAX.i914
  %2361 = zext i32 %2360 to i64
  %2362 = load i64, i64* %PC.i913
  %2363 = add i64 %2362, 3
  store i64 %2363, i64* %PC.i913
  %2364 = inttoptr i64 %2359 to i32*
  store i32 %2360, i32* %2364
  store %struct.Memory* %loadMem_413313, %struct.Memory** %MEMORY
  %loadMem_413316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 33
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %2367 to i64*
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2369 = getelementptr inbounds %struct.GPR, %struct.GPR* %2368, i32 0, i32 15
  %2370 = getelementptr inbounds %struct.Reg, %struct.Reg* %2369, i32 0, i32 0
  %RBP.i912 = bitcast %union.anon* %2370 to i64*
  %2371 = load i64, i64* %RBP.i912
  %2372 = sub i64 %2371, 28
  %2373 = load i64, i64* %PC.i911
  %2374 = add i64 %2373, 4
  store i64 %2374, i64* %PC.i911
  %2375 = inttoptr i64 %2372 to i32*
  %2376 = load i32, i32* %2375
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2377, align 1
  %2378 = and i32 %2376, 255
  %2379 = call i32 @llvm.ctpop.i32(i32 %2378)
  %2380 = trunc i32 %2379 to i8
  %2381 = and i8 %2380, 1
  %2382 = xor i8 %2381, 1
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2382, i8* %2383, align 1
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2384, align 1
  %2385 = icmp eq i32 %2376, 0
  %2386 = zext i1 %2385 to i8
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2386, i8* %2387, align 1
  %2388 = lshr i32 %2376, 31
  %2389 = trunc i32 %2388 to i8
  %2390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2389, i8* %2390, align 1
  %2391 = lshr i32 %2376, 31
  %2392 = xor i32 %2388, %2391
  %2393 = add i32 %2392, %2391
  %2394 = icmp eq i32 %2393, 2
  %2395 = zext i1 %2394 to i8
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2395, i8* %2396, align 1
  store %struct.Memory* %loadMem_413316, %struct.Memory** %MEMORY
  %loadMem_41331a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2398 = getelementptr inbounds %struct.GPR, %struct.GPR* %2397, i32 0, i32 33
  %2399 = getelementptr inbounds %struct.Reg, %struct.Reg* %2398, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %2399 to i64*
  %2400 = load i64, i64* %PC.i910
  %2401 = add i64 %2400, 26
  %2402 = load i64, i64* %PC.i910
  %2403 = add i64 %2402, 6
  %2404 = load i64, i64* %PC.i910
  %2405 = add i64 %2404, 6
  store i64 %2405, i64* %PC.i910
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2407 = load i8, i8* %2406, align 1
  %2408 = icmp eq i8 %2407, 0
  %2409 = zext i1 %2408 to i8
  store i8 %2409, i8* %BRANCH_TAKEN, align 1
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2411 = select i1 %2408, i64 %2401, i64 %2403
  store i64 %2411, i64* %2410, align 8
  store %struct.Memory* %loadMem_41331a, %struct.Memory** %MEMORY
  %loadBr_41331a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41331a = icmp eq i8 %loadBr_41331a, 1
  br i1 %cmpBr_41331a, label %block_.L_413334, label %block_413320

block_413320:                                     ; preds = %block_.L_41330d
  %loadMem_413320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2413 = getelementptr inbounds %struct.GPR, %struct.GPR* %2412, i32 0, i32 33
  %2414 = getelementptr inbounds %struct.Reg, %struct.Reg* %2413, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %2414 to i64*
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2416 = getelementptr inbounds %struct.GPR, %struct.GPR* %2415, i32 0, i32 15
  %2417 = getelementptr inbounds %struct.Reg, %struct.Reg* %2416, i32 0, i32 0
  %RBP.i909 = bitcast %union.anon* %2417 to i64*
  %2418 = load i64, i64* %RBP.i909
  %2419 = sub i64 %2418, 36
  %2420 = load i64, i64* %PC.i908
  %2421 = add i64 %2420, 4
  store i64 %2421, i64* %PC.i908
  %2422 = inttoptr i64 %2419 to i32*
  %2423 = load i32, i32* %2422
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2424, align 1
  %2425 = and i32 %2423, 255
  %2426 = call i32 @llvm.ctpop.i32(i32 %2425)
  %2427 = trunc i32 %2426 to i8
  %2428 = and i8 %2427, 1
  %2429 = xor i8 %2428, 1
  %2430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2429, i8* %2430, align 1
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2431, align 1
  %2432 = icmp eq i32 %2423, 0
  %2433 = zext i1 %2432 to i8
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2433, i8* %2434, align 1
  %2435 = lshr i32 %2423, 31
  %2436 = trunc i32 %2435 to i8
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2436, i8* %2437, align 1
  %2438 = lshr i32 %2423, 31
  %2439 = xor i32 %2435, %2438
  %2440 = add i32 %2439, %2438
  %2441 = icmp eq i32 %2440, 2
  %2442 = zext i1 %2441 to i8
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2442, i8* %2443, align 1
  store %struct.Memory* %loadMem_413320, %struct.Memory** %MEMORY
  %loadMem_413324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2445 = getelementptr inbounds %struct.GPR, %struct.GPR* %2444, i32 0, i32 33
  %2446 = getelementptr inbounds %struct.Reg, %struct.Reg* %2445, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %2446 to i64*
  %2447 = load i64, i64* %PC.i907
  %2448 = add i64 %2447, 16
  %2449 = load i64, i64* %PC.i907
  %2450 = add i64 %2449, 6
  %2451 = load i64, i64* %PC.i907
  %2452 = add i64 %2451, 6
  store i64 %2452, i64* %PC.i907
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2454 = load i8, i8* %2453, align 1
  %2455 = icmp eq i8 %2454, 0
  %2456 = zext i1 %2455 to i8
  store i8 %2456, i8* %BRANCH_TAKEN, align 1
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2458 = select i1 %2455, i64 %2448, i64 %2450
  store i64 %2458, i64* %2457, align 8
  store %struct.Memory* %loadMem_413324, %struct.Memory** %MEMORY
  %loadBr_413324 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413324 = icmp eq i8 %loadBr_413324, 1
  br i1 %cmpBr_413324, label %block_.L_413334, label %block_41332a

block_41332a:                                     ; preds = %block_413320
  %loadMem_41332a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 33
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %2461 to i64*
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2463 = getelementptr inbounds %struct.GPR, %struct.GPR* %2462, i32 0, i32 15
  %2464 = getelementptr inbounds %struct.Reg, %struct.Reg* %2463, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %2464 to i64*
  %2465 = load i64, i64* %RBP.i906
  %2466 = sub i64 %2465, 40
  %2467 = load i64, i64* %PC.i905
  %2468 = add i64 %2467, 4
  store i64 %2468, i64* %PC.i905
  %2469 = inttoptr i64 %2466 to i32*
  %2470 = load i32, i32* %2469
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2471, align 1
  %2472 = and i32 %2470, 255
  %2473 = call i32 @llvm.ctpop.i32(i32 %2472)
  %2474 = trunc i32 %2473 to i8
  %2475 = and i8 %2474, 1
  %2476 = xor i8 %2475, 1
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2476, i8* %2477, align 1
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2478, align 1
  %2479 = icmp eq i32 %2470, 0
  %2480 = zext i1 %2479 to i8
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2480, i8* %2481, align 1
  %2482 = lshr i32 %2470, 31
  %2483 = trunc i32 %2482 to i8
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2483, i8* %2484, align 1
  %2485 = lshr i32 %2470, 31
  %2486 = xor i32 %2482, %2485
  %2487 = add i32 %2486, %2485
  %2488 = icmp eq i32 %2487, 2
  %2489 = zext i1 %2488 to i8
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2489, i8* %2490, align 1
  store %struct.Memory* %loadMem_41332a, %struct.Memory** %MEMORY
  %loadMem_41332e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 33
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %2493 to i64*
  %2494 = load i64, i64* %PC.i904
  %2495 = add i64 %2494, 28
  %2496 = load i64, i64* %PC.i904
  %2497 = add i64 %2496, 6
  %2498 = load i64, i64* %PC.i904
  %2499 = add i64 %2498, 6
  store i64 %2499, i64* %PC.i904
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2501 = load i8, i8* %2500, align 1
  store i8 %2501, i8* %BRANCH_TAKEN, align 1
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2503 = icmp ne i8 %2501, 0
  %2504 = select i1 %2503, i64 %2495, i64 %2497
  store i64 %2504, i64* %2502, align 8
  store %struct.Memory* %loadMem_41332e, %struct.Memory** %MEMORY
  %loadBr_41332e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41332e = icmp eq i8 %loadBr_41332e, 1
  br i1 %cmpBr_41332e, label %block_.L_41334a, label %block_.L_413334

block_.L_413334:                                  ; preds = %block_41332a, %block_413320, %block_.L_41330d
  %loadMem_413334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 33
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %2507 to i64*
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2509 = getelementptr inbounds %struct.GPR, %struct.GPR* %2508, i32 0, i32 1
  %2510 = getelementptr inbounds %struct.Reg, %struct.Reg* %2509, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %2510 to i64*
  %2511 = load i64, i64* %PC.i902
  %2512 = add i64 %2511, 8
  store i64 %2512, i64* %PC.i902
  %2513 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2513, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_413334, %struct.Memory** %MEMORY
  %loadMem_41333c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2515 = getelementptr inbounds %struct.GPR, %struct.GPR* %2514, i32 0, i32 33
  %2516 = getelementptr inbounds %struct.Reg, %struct.Reg* %2515, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %2516 to i64*
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2518 = getelementptr inbounds %struct.GPR, %struct.GPR* %2517, i32 0, i32 1
  %2519 = getelementptr inbounds %struct.Reg, %struct.Reg* %2518, i32 0, i32 0
  %RAX.i900 = bitcast %union.anon* %2519 to i64*
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2521 = getelementptr inbounds %struct.GPR, %struct.GPR* %2520, i32 0, i32 5
  %2522 = getelementptr inbounds %struct.Reg, %struct.Reg* %2521, i32 0, i32 0
  %RCX.i901 = bitcast %union.anon* %2522 to i64*
  %2523 = load i64, i64* %RAX.i900
  %2524 = add i64 %2523, 72
  %2525 = load i64, i64* %PC.i899
  %2526 = add i64 %2525, 3
  store i64 %2526, i64* %PC.i899
  %2527 = inttoptr i64 %2524 to i32*
  %2528 = load i32, i32* %2527
  %2529 = zext i32 %2528 to i64
  store i64 %2529, i64* %RCX.i901, align 8
  store %struct.Memory* %loadMem_41333c, %struct.Memory** %MEMORY
  %loadMem_41333f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2531 = getelementptr inbounds %struct.GPR, %struct.GPR* %2530, i32 0, i32 33
  %2532 = getelementptr inbounds %struct.Reg, %struct.Reg* %2531, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %2532 to i64*
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2534 = getelementptr inbounds %struct.GPR, %struct.GPR* %2533, i32 0, i32 5
  %2535 = getelementptr inbounds %struct.Reg, %struct.Reg* %2534, i32 0, i32 0
  %ECX.i897 = bitcast %union.anon* %2535 to i32*
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2537 = getelementptr inbounds %struct.GPR, %struct.GPR* %2536, i32 0, i32 15
  %2538 = getelementptr inbounds %struct.Reg, %struct.Reg* %2537, i32 0, i32 0
  %RBP.i898 = bitcast %union.anon* %2538 to i64*
  %2539 = load i64, i64* %RBP.i898
  %2540 = sub i64 %2539, 152
  %2541 = load i32, i32* %ECX.i897
  %2542 = zext i32 %2541 to i64
  %2543 = load i64, i64* %PC.i896
  %2544 = add i64 %2543, 6
  store i64 %2544, i64* %PC.i896
  %2545 = inttoptr i64 %2540 to i32*
  store i32 %2541, i32* %2545
  store %struct.Memory* %loadMem_41333f, %struct.Memory** %MEMORY
  %loadMem_413345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2547 = getelementptr inbounds %struct.GPR, %struct.GPR* %2546, i32 0, i32 33
  %2548 = getelementptr inbounds %struct.Reg, %struct.Reg* %2547, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %2548 to i64*
  %2549 = load i64, i64* %PC.i895
  %2550 = add i64 %2549, 18
  %2551 = load i64, i64* %PC.i895
  %2552 = add i64 %2551, 5
  store i64 %2552, i64* %PC.i895
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2550, i64* %2553, align 8
  store %struct.Memory* %loadMem_413345, %struct.Memory** %MEMORY
  br label %block_.L_413357

block_.L_41334a:                                  ; preds = %block_41332a
  %loadMem_41334a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 33
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %2556 to i64*
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 1
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %EAX.i893 = bitcast %union.anon* %2559 to i32*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 1
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %RAX.i894 = bitcast %union.anon* %2562 to i64*
  %2563 = load i64, i64* %RAX.i894
  %2564 = load i32, i32* %EAX.i893
  %2565 = zext i32 %2564 to i64
  %2566 = load i64, i64* %PC.i892
  %2567 = add i64 %2566, 2
  store i64 %2567, i64* %PC.i892
  %2568 = xor i64 %2565, %2563
  %2569 = trunc i64 %2568 to i32
  %2570 = and i64 %2568, 4294967295
  store i64 %2570, i64* %RAX.i894, align 8
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2571, align 1
  %2572 = and i32 %2569, 255
  %2573 = call i32 @llvm.ctpop.i32(i32 %2572)
  %2574 = trunc i32 %2573 to i8
  %2575 = and i8 %2574, 1
  %2576 = xor i8 %2575, 1
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2576, i8* %2577, align 1
  %2578 = icmp eq i32 %2569, 0
  %2579 = zext i1 %2578 to i8
  %2580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2579, i8* %2580, align 1
  %2581 = lshr i32 %2569, 31
  %2582 = trunc i32 %2581 to i8
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2582, i8* %2583, align 1
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2584, align 1
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2585, align 1
  store %struct.Memory* %loadMem_41334a, %struct.Memory** %MEMORY
  %loadMem_41334c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 33
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %2588 to i64*
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 1
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %EAX.i890 = bitcast %union.anon* %2591 to i32*
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2593 = getelementptr inbounds %struct.GPR, %struct.GPR* %2592, i32 0, i32 15
  %2594 = getelementptr inbounds %struct.Reg, %struct.Reg* %2593, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %2594 to i64*
  %2595 = load i64, i64* %RBP.i891
  %2596 = sub i64 %2595, 152
  %2597 = load i32, i32* %EAX.i890
  %2598 = zext i32 %2597 to i64
  %2599 = load i64, i64* %PC.i889
  %2600 = add i64 %2599, 6
  store i64 %2600, i64* %PC.i889
  %2601 = inttoptr i64 %2596 to i32*
  store i32 %2597, i32* %2601
  store %struct.Memory* %loadMem_41334c, %struct.Memory** %MEMORY
  %loadMem_413352 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2603 = getelementptr inbounds %struct.GPR, %struct.GPR* %2602, i32 0, i32 33
  %2604 = getelementptr inbounds %struct.Reg, %struct.Reg* %2603, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %2604 to i64*
  %2605 = load i64, i64* %PC.i888
  %2606 = add i64 %2605, 5
  %2607 = load i64, i64* %PC.i888
  %2608 = add i64 %2607, 5
  store i64 %2608, i64* %PC.i888
  %2609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2606, i64* %2609, align 8
  store %struct.Memory* %loadMem_413352, %struct.Memory** %MEMORY
  br label %block_.L_413357

block_.L_413357:                                  ; preds = %block_.L_41334a, %block_.L_413334
  %loadMem_413357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2611 = getelementptr inbounds %struct.GPR, %struct.GPR* %2610, i32 0, i32 33
  %2612 = getelementptr inbounds %struct.Reg, %struct.Reg* %2611, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %2612 to i64*
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2614 = getelementptr inbounds %struct.GPR, %struct.GPR* %2613, i32 0, i32 1
  %2615 = getelementptr inbounds %struct.Reg, %struct.Reg* %2614, i32 0, i32 0
  %RAX.i886 = bitcast %union.anon* %2615 to i64*
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2617 = getelementptr inbounds %struct.GPR, %struct.GPR* %2616, i32 0, i32 15
  %2618 = getelementptr inbounds %struct.Reg, %struct.Reg* %2617, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %2618 to i64*
  %2619 = load i64, i64* %RBP.i887
  %2620 = sub i64 %2619, 152
  %2621 = load i64, i64* %PC.i885
  %2622 = add i64 %2621, 6
  store i64 %2622, i64* %PC.i885
  %2623 = inttoptr i64 %2620 to i32*
  %2624 = load i32, i32* %2623
  %2625 = zext i32 %2624 to i64
  store i64 %2625, i64* %RAX.i886, align 8
  store %struct.Memory* %loadMem_413357, %struct.Memory** %MEMORY
  %loadMem_41335d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2627 = getelementptr inbounds %struct.GPR, %struct.GPR* %2626, i32 0, i32 33
  %2628 = getelementptr inbounds %struct.Reg, %struct.Reg* %2627, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %2628 to i64*
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 1
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %EAX.i883 = bitcast %union.anon* %2631 to i32*
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 15
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %2634 to i64*
  %2635 = load i64, i64* %RBP.i884
  %2636 = sub i64 %2635, 60
  %2637 = load i32, i32* %EAX.i883
  %2638 = zext i32 %2637 to i64
  %2639 = load i64, i64* %PC.i882
  %2640 = add i64 %2639, 3
  store i64 %2640, i64* %PC.i882
  %2641 = inttoptr i64 %2636 to i32*
  store i32 %2637, i32* %2641
  store %struct.Memory* %loadMem_41335d, %struct.Memory** %MEMORY
  %loadMem_413360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2643 = getelementptr inbounds %struct.GPR, %struct.GPR* %2642, i32 0, i32 33
  %2644 = getelementptr inbounds %struct.Reg, %struct.Reg* %2643, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %2644 to i64*
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2646 = getelementptr inbounds %struct.GPR, %struct.GPR* %2645, i32 0, i32 15
  %2647 = getelementptr inbounds %struct.Reg, %struct.Reg* %2646, i32 0, i32 0
  %RBP.i881 = bitcast %union.anon* %2647 to i64*
  %2648 = load i64, i64* %RBP.i881
  %2649 = sub i64 %2648, 32
  %2650 = load i64, i64* %PC.i880
  %2651 = add i64 %2650, 4
  store i64 %2651, i64* %PC.i880
  %2652 = inttoptr i64 %2649 to i32*
  %2653 = load i32, i32* %2652
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2654, align 1
  %2655 = and i32 %2653, 255
  %2656 = call i32 @llvm.ctpop.i32(i32 %2655)
  %2657 = trunc i32 %2656 to i8
  %2658 = and i8 %2657, 1
  %2659 = xor i8 %2658, 1
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2659, i8* %2660, align 1
  %2661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2661, align 1
  %2662 = icmp eq i32 %2653, 0
  %2663 = zext i1 %2662 to i8
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2663, i8* %2664, align 1
  %2665 = lshr i32 %2653, 31
  %2666 = trunc i32 %2665 to i8
  %2667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2666, i8* %2667, align 1
  %2668 = lshr i32 %2653, 31
  %2669 = xor i32 %2665, %2668
  %2670 = add i32 %2669, %2668
  %2671 = icmp eq i32 %2670, 2
  %2672 = zext i1 %2671 to i8
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2672, i8* %2673, align 1
  store %struct.Memory* %loadMem_413360, %struct.Memory** %MEMORY
  %loadMem_413364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 33
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %2676 to i64*
  %2677 = load i64, i64* %PC.i879
  %2678 = add i64 %2677, 19
  %2679 = load i64, i64* %PC.i879
  %2680 = add i64 %2679, 6
  %2681 = load i64, i64* %PC.i879
  %2682 = add i64 %2681, 6
  store i64 %2682, i64* %PC.i879
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2684 = load i8, i8* %2683, align 1
  store i8 %2684, i8* %BRANCH_TAKEN, align 1
  %2685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2686 = icmp ne i8 %2684, 0
  %2687 = select i1 %2686, i64 %2678, i64 %2680
  store i64 %2687, i64* %2685, align 8
  store %struct.Memory* %loadMem_413364, %struct.Memory** %MEMORY
  %loadBr_413364 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413364 = icmp eq i8 %loadBr_413364, 1
  br i1 %cmpBr_413364, label %block_.L_413377, label %block_41336a

block_41336a:                                     ; preds = %block_.L_413357
  %loadMem_41336a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2689 = getelementptr inbounds %struct.GPR, %struct.GPR* %2688, i32 0, i32 33
  %2690 = getelementptr inbounds %struct.Reg, %struct.Reg* %2689, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %2690 to i64*
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 1
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %EAX.i877 = bitcast %union.anon* %2693 to i32*
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2695 = getelementptr inbounds %struct.GPR, %struct.GPR* %2694, i32 0, i32 1
  %2696 = getelementptr inbounds %struct.Reg, %struct.Reg* %2695, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %2696 to i64*
  %2697 = load i64, i64* %RAX.i878
  %2698 = load i32, i32* %EAX.i877
  %2699 = zext i32 %2698 to i64
  %2700 = load i64, i64* %PC.i876
  %2701 = add i64 %2700, 2
  store i64 %2701, i64* %PC.i876
  %2702 = xor i64 %2699, %2697
  %2703 = trunc i64 %2702 to i32
  %2704 = and i64 %2702, 4294967295
  store i64 %2704, i64* %RAX.i878, align 8
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2705, align 1
  %2706 = and i32 %2703, 255
  %2707 = call i32 @llvm.ctpop.i32(i32 %2706)
  %2708 = trunc i32 %2707 to i8
  %2709 = and i8 %2708, 1
  %2710 = xor i8 %2709, 1
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2710, i8* %2711, align 1
  %2712 = icmp eq i32 %2703, 0
  %2713 = zext i1 %2712 to i8
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2713, i8* %2714, align 1
  %2715 = lshr i32 %2703, 31
  %2716 = trunc i32 %2715 to i8
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2716, i8* %2717, align 1
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2718, align 1
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2719, align 1
  store %struct.Memory* %loadMem_41336a, %struct.Memory** %MEMORY
  %loadMem_41336c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2721 = getelementptr inbounds %struct.GPR, %struct.GPR* %2720, i32 0, i32 33
  %2722 = getelementptr inbounds %struct.Reg, %struct.Reg* %2721, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %2722 to i64*
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 1
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %EAX.i874 = bitcast %union.anon* %2725 to i32*
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2727 = getelementptr inbounds %struct.GPR, %struct.GPR* %2726, i32 0, i32 15
  %2728 = getelementptr inbounds %struct.Reg, %struct.Reg* %2727, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %2728 to i64*
  %2729 = load i64, i64* %RBP.i875
  %2730 = sub i64 %2729, 156
  %2731 = load i32, i32* %EAX.i874
  %2732 = zext i32 %2731 to i64
  %2733 = load i64, i64* %PC.i873
  %2734 = add i64 %2733, 6
  store i64 %2734, i64* %PC.i873
  %2735 = inttoptr i64 %2730 to i32*
  store i32 %2731, i32* %2735
  store %struct.Memory* %loadMem_41336c, %struct.Memory** %MEMORY
  %loadMem_413372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2737 = getelementptr inbounds %struct.GPR, %struct.GPR* %2736, i32 0, i32 33
  %2738 = getelementptr inbounds %struct.Reg, %struct.Reg* %2737, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %2738 to i64*
  %2739 = load i64, i64* %PC.i872
  %2740 = add i64 %2739, 142
  %2741 = load i64, i64* %PC.i872
  %2742 = add i64 %2741, 5
  store i64 %2742, i64* %PC.i872
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2740, i64* %2743, align 8
  store %struct.Memory* %loadMem_413372, %struct.Memory** %MEMORY
  br label %block_.L_413400

block_.L_413377:                                  ; preds = %block_.L_413357
  %loadMem_413377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2745 = getelementptr inbounds %struct.GPR, %struct.GPR* %2744, i32 0, i32 33
  %2746 = getelementptr inbounds %struct.Reg, %struct.Reg* %2745, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %2746 to i64*
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2748 = getelementptr inbounds %struct.GPR, %struct.GPR* %2747, i32 0, i32 15
  %2749 = getelementptr inbounds %struct.Reg, %struct.Reg* %2748, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %2749 to i64*
  %2750 = load i64, i64* %RBP.i871
  %2751 = sub i64 %2750, 28
  %2752 = load i64, i64* %PC.i870
  %2753 = add i64 %2752, 4
  store i64 %2753, i64* %PC.i870
  %2754 = inttoptr i64 %2751 to i32*
  %2755 = load i32, i32* %2754
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2756, align 1
  %2757 = and i32 %2755, 255
  %2758 = call i32 @llvm.ctpop.i32(i32 %2757)
  %2759 = trunc i32 %2758 to i8
  %2760 = and i8 %2759, 1
  %2761 = xor i8 %2760, 1
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2761, i8* %2762, align 1
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2763, align 1
  %2764 = icmp eq i32 %2755, 0
  %2765 = zext i1 %2764 to i8
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2765, i8* %2766, align 1
  %2767 = lshr i32 %2755, 31
  %2768 = trunc i32 %2767 to i8
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2768, i8* %2769, align 1
  %2770 = lshr i32 %2755, 31
  %2771 = xor i32 %2767, %2770
  %2772 = add i32 %2771, %2770
  %2773 = icmp eq i32 %2772, 2
  %2774 = zext i1 %2773 to i8
  %2775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2774, i8* %2775, align 1
  store %struct.Memory* %loadMem_413377, %struct.Memory** %MEMORY
  %loadMem_41337b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2777 = getelementptr inbounds %struct.GPR, %struct.GPR* %2776, i32 0, i32 33
  %2778 = getelementptr inbounds %struct.Reg, %struct.Reg* %2777, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %2778 to i64*
  %2779 = load i64, i64* %PC.i869
  %2780 = add i64 %2779, 22
  %2781 = load i64, i64* %PC.i869
  %2782 = add i64 %2781, 6
  %2783 = load i64, i64* %PC.i869
  %2784 = add i64 %2783, 6
  store i64 %2784, i64* %PC.i869
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2786 = load i8, i8* %2785, align 1
  store i8 %2786, i8* %BRANCH_TAKEN, align 1
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2788 = icmp ne i8 %2786, 0
  %2789 = select i1 %2788, i64 %2780, i64 %2782
  store i64 %2789, i64* %2787, align 8
  store %struct.Memory* %loadMem_41337b, %struct.Memory** %MEMORY
  %loadBr_41337b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41337b = icmp eq i8 %loadBr_41337b, 1
  br i1 %cmpBr_41337b, label %block_.L_413391, label %block_413381

block_413381:                                     ; preds = %block_.L_413377
  %loadMem_413381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2791 = getelementptr inbounds %struct.GPR, %struct.GPR* %2790, i32 0, i32 33
  %2792 = getelementptr inbounds %struct.Reg, %struct.Reg* %2791, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %2792 to i64*
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2794 = getelementptr inbounds %struct.GPR, %struct.GPR* %2793, i32 0, i32 1
  %2795 = getelementptr inbounds %struct.Reg, %struct.Reg* %2794, i32 0, i32 0
  %RAX.i868 = bitcast %union.anon* %2795 to i64*
  %2796 = load i64, i64* %PC.i867
  %2797 = add i64 %2796, 5
  store i64 %2797, i64* %PC.i867
  store i64 1, i64* %RAX.i868, align 8
  store %struct.Memory* %loadMem_413381, %struct.Memory** %MEMORY
  %loadMem_413386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2799 = getelementptr inbounds %struct.GPR, %struct.GPR* %2798, i32 0, i32 33
  %2800 = getelementptr inbounds %struct.Reg, %struct.Reg* %2799, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %2800 to i64*
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2802 = getelementptr inbounds %struct.GPR, %struct.GPR* %2801, i32 0, i32 1
  %2803 = getelementptr inbounds %struct.Reg, %struct.Reg* %2802, i32 0, i32 0
  %EAX.i865 = bitcast %union.anon* %2803 to i32*
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2805 = getelementptr inbounds %struct.GPR, %struct.GPR* %2804, i32 0, i32 15
  %2806 = getelementptr inbounds %struct.Reg, %struct.Reg* %2805, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %2806 to i64*
  %2807 = load i64, i64* %RBP.i866
  %2808 = sub i64 %2807, 160
  %2809 = load i32, i32* %EAX.i865
  %2810 = zext i32 %2809 to i64
  %2811 = load i64, i64* %PC.i864
  %2812 = add i64 %2811, 6
  store i64 %2812, i64* %PC.i864
  %2813 = inttoptr i64 %2808 to i32*
  store i32 %2809, i32* %2813
  store %struct.Memory* %loadMem_413386, %struct.Memory** %MEMORY
  %loadMem_41338c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2815 = getelementptr inbounds %struct.GPR, %struct.GPR* %2814, i32 0, i32 33
  %2816 = getelementptr inbounds %struct.Reg, %struct.Reg* %2815, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %2816 to i64*
  %2817 = load i64, i64* %PC.i863
  %2818 = add i64 %2817, 104
  %2819 = load i64, i64* %PC.i863
  %2820 = add i64 %2819, 5
  store i64 %2820, i64* %PC.i863
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2818, i64* %2821, align 8
  store %struct.Memory* %loadMem_41338c, %struct.Memory** %MEMORY
  br label %block_.L_4133f4

block_.L_413391:                                  ; preds = %block_.L_413377
  %loadMem_413391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2823 = getelementptr inbounds %struct.GPR, %struct.GPR* %2822, i32 0, i32 33
  %2824 = getelementptr inbounds %struct.Reg, %struct.Reg* %2823, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %2824 to i64*
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2826 = getelementptr inbounds %struct.GPR, %struct.GPR* %2825, i32 0, i32 15
  %2827 = getelementptr inbounds %struct.Reg, %struct.Reg* %2826, i32 0, i32 0
  %RBP.i862 = bitcast %union.anon* %2827 to i64*
  %2828 = load i64, i64* %RBP.i862
  %2829 = sub i64 %2828, 48
  %2830 = load i64, i64* %PC.i861
  %2831 = add i64 %2830, 4
  store i64 %2831, i64* %PC.i861
  %2832 = inttoptr i64 %2829 to i32*
  %2833 = load i32, i32* %2832
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2834, align 1
  %2835 = and i32 %2833, 255
  %2836 = call i32 @llvm.ctpop.i32(i32 %2835)
  %2837 = trunc i32 %2836 to i8
  %2838 = and i8 %2837, 1
  %2839 = xor i8 %2838, 1
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2839, i8* %2840, align 1
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2841, align 1
  %2842 = icmp eq i32 %2833, 0
  %2843 = zext i1 %2842 to i8
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2843, i8* %2844, align 1
  %2845 = lshr i32 %2833, 31
  %2846 = trunc i32 %2845 to i8
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2846, i8* %2847, align 1
  %2848 = lshr i32 %2833, 31
  %2849 = xor i32 %2845, %2848
  %2850 = add i32 %2849, %2848
  %2851 = icmp eq i32 %2850, 2
  %2852 = zext i1 %2851 to i8
  %2853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2852, i8* %2853, align 1
  store %struct.Memory* %loadMem_413391, %struct.Memory** %MEMORY
  %loadMem_413395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2855 = getelementptr inbounds %struct.GPR, %struct.GPR* %2854, i32 0, i32 33
  %2856 = getelementptr inbounds %struct.Reg, %struct.Reg* %2855, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %2856 to i64*
  %2857 = load i64, i64* %PC.i860
  %2858 = add i64 %2857, 22
  %2859 = load i64, i64* %PC.i860
  %2860 = add i64 %2859, 6
  %2861 = load i64, i64* %PC.i860
  %2862 = add i64 %2861, 6
  store i64 %2862, i64* %PC.i860
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2864 = load i8, i8* %2863, align 1
  store i8 %2864, i8* %BRANCH_TAKEN, align 1
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2866 = icmp ne i8 %2864, 0
  %2867 = select i1 %2866, i64 %2858, i64 %2860
  store i64 %2867, i64* %2865, align 8
  store %struct.Memory* %loadMem_413395, %struct.Memory** %MEMORY
  %loadBr_413395 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413395 = icmp eq i8 %loadBr_413395, 1
  br i1 %cmpBr_413395, label %block_.L_4133ab, label %block_41339b

block_41339b:                                     ; preds = %block_.L_413391
  %loadMem_41339b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2869 = getelementptr inbounds %struct.GPR, %struct.GPR* %2868, i32 0, i32 33
  %2870 = getelementptr inbounds %struct.Reg, %struct.Reg* %2869, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %2870 to i64*
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2872 = getelementptr inbounds %struct.GPR, %struct.GPR* %2871, i32 0, i32 1
  %2873 = getelementptr inbounds %struct.Reg, %struct.Reg* %2872, i32 0, i32 0
  %RAX.i859 = bitcast %union.anon* %2873 to i64*
  %2874 = load i64, i64* %PC.i858
  %2875 = add i64 %2874, 5
  store i64 %2875, i64* %PC.i858
  store i64 17, i64* %RAX.i859, align 8
  store %struct.Memory* %loadMem_41339b, %struct.Memory** %MEMORY
  %loadMem_4133a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2877 = getelementptr inbounds %struct.GPR, %struct.GPR* %2876, i32 0, i32 33
  %2878 = getelementptr inbounds %struct.Reg, %struct.Reg* %2877, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %2878 to i64*
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2880 = getelementptr inbounds %struct.GPR, %struct.GPR* %2879, i32 0, i32 1
  %2881 = getelementptr inbounds %struct.Reg, %struct.Reg* %2880, i32 0, i32 0
  %EAX.i856 = bitcast %union.anon* %2881 to i32*
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2883 = getelementptr inbounds %struct.GPR, %struct.GPR* %2882, i32 0, i32 15
  %2884 = getelementptr inbounds %struct.Reg, %struct.Reg* %2883, i32 0, i32 0
  %RBP.i857 = bitcast %union.anon* %2884 to i64*
  %2885 = load i64, i64* %RBP.i857
  %2886 = sub i64 %2885, 164
  %2887 = load i32, i32* %EAX.i856
  %2888 = zext i32 %2887 to i64
  %2889 = load i64, i64* %PC.i855
  %2890 = add i64 %2889, 6
  store i64 %2890, i64* %PC.i855
  %2891 = inttoptr i64 %2886 to i32*
  store i32 %2887, i32* %2891
  store %struct.Memory* %loadMem_4133a0, %struct.Memory** %MEMORY
  %loadMem_4133a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2893 = getelementptr inbounds %struct.GPR, %struct.GPR* %2892, i32 0, i32 33
  %2894 = getelementptr inbounds %struct.Reg, %struct.Reg* %2893, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %2894 to i64*
  %2895 = load i64, i64* %PC.i854
  %2896 = add i64 %2895, 66
  %2897 = load i64, i64* %PC.i854
  %2898 = add i64 %2897, 5
  store i64 %2898, i64* %PC.i854
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2896, i64* %2899, align 8
  store %struct.Memory* %loadMem_4133a6, %struct.Memory** %MEMORY
  br label %block_.L_4133e8

block_.L_4133ab:                                  ; preds = %block_.L_413391
  %loadMem_4133ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2901 = getelementptr inbounds %struct.GPR, %struct.GPR* %2900, i32 0, i32 33
  %2902 = getelementptr inbounds %struct.Reg, %struct.Reg* %2901, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %2902 to i64*
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2904 = getelementptr inbounds %struct.GPR, %struct.GPR* %2903, i32 0, i32 15
  %2905 = getelementptr inbounds %struct.Reg, %struct.Reg* %2904, i32 0, i32 0
  %RBP.i853 = bitcast %union.anon* %2905 to i64*
  %2906 = load i64, i64* %RBP.i853
  %2907 = sub i64 %2906, 52
  %2908 = load i64, i64* %PC.i852
  %2909 = add i64 %2908, 4
  store i64 %2909, i64* %PC.i852
  %2910 = inttoptr i64 %2907 to i32*
  %2911 = load i32, i32* %2910
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2912, align 1
  %2913 = and i32 %2911, 255
  %2914 = call i32 @llvm.ctpop.i32(i32 %2913)
  %2915 = trunc i32 %2914 to i8
  %2916 = and i8 %2915, 1
  %2917 = xor i8 %2916, 1
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2917, i8* %2918, align 1
  %2919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2919, align 1
  %2920 = icmp eq i32 %2911, 0
  %2921 = zext i1 %2920 to i8
  %2922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2921, i8* %2922, align 1
  %2923 = lshr i32 %2911, 31
  %2924 = trunc i32 %2923 to i8
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2924, i8* %2925, align 1
  %2926 = lshr i32 %2911, 31
  %2927 = xor i32 %2923, %2926
  %2928 = add i32 %2927, %2926
  %2929 = icmp eq i32 %2928, 2
  %2930 = zext i1 %2929 to i8
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2930, i8* %2931, align 1
  store %struct.Memory* %loadMem_4133ab, %struct.Memory** %MEMORY
  %loadMem_4133af = load %struct.Memory*, %struct.Memory** %MEMORY
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2933 = getelementptr inbounds %struct.GPR, %struct.GPR* %2932, i32 0, i32 33
  %2934 = getelementptr inbounds %struct.Reg, %struct.Reg* %2933, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %2934 to i64*
  %2935 = load i64, i64* %PC.i851
  %2936 = add i64 %2935, 22
  %2937 = load i64, i64* %PC.i851
  %2938 = add i64 %2937, 6
  %2939 = load i64, i64* %PC.i851
  %2940 = add i64 %2939, 6
  store i64 %2940, i64* %PC.i851
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2942 = load i8, i8* %2941, align 1
  store i8 %2942, i8* %BRANCH_TAKEN, align 1
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2944 = icmp ne i8 %2942, 0
  %2945 = select i1 %2944, i64 %2936, i64 %2938
  store i64 %2945, i64* %2943, align 8
  store %struct.Memory* %loadMem_4133af, %struct.Memory** %MEMORY
  %loadBr_4133af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4133af = icmp eq i8 %loadBr_4133af, 1
  br i1 %cmpBr_4133af, label %block_.L_4133c5, label %block_4133b5

block_4133b5:                                     ; preds = %block_.L_4133ab
  %loadMem_4133b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2947 = getelementptr inbounds %struct.GPR, %struct.GPR* %2946, i32 0, i32 33
  %2948 = getelementptr inbounds %struct.Reg, %struct.Reg* %2947, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %2948 to i64*
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 1
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %RAX.i850 = bitcast %union.anon* %2951 to i64*
  %2952 = load i64, i64* %PC.i849
  %2953 = add i64 %2952, 5
  store i64 %2953, i64* %PC.i849
  store i64 18, i64* %RAX.i850, align 8
  store %struct.Memory* %loadMem_4133b5, %struct.Memory** %MEMORY
  %loadMem_4133ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 33
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %2956 to i64*
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 1
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %EAX.i847 = bitcast %union.anon* %2959 to i32*
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 15
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %RBP.i848 = bitcast %union.anon* %2962 to i64*
  %2963 = load i64, i64* %RBP.i848
  %2964 = sub i64 %2963, 168
  %2965 = load i32, i32* %EAX.i847
  %2966 = zext i32 %2965 to i64
  %2967 = load i64, i64* %PC.i846
  %2968 = add i64 %2967, 6
  store i64 %2968, i64* %PC.i846
  %2969 = inttoptr i64 %2964 to i32*
  store i32 %2965, i32* %2969
  store %struct.Memory* %loadMem_4133ba, %struct.Memory** %MEMORY
  %loadMem_4133c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 33
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %2972 to i64*
  %2973 = load i64, i64* %PC.i845
  %2974 = add i64 %2973, 28
  %2975 = load i64, i64* %PC.i845
  %2976 = add i64 %2975, 5
  store i64 %2976, i64* %PC.i845
  %2977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2974, i64* %2977, align 8
  store %struct.Memory* %loadMem_4133c0, %struct.Memory** %MEMORY
  br label %block_.L_4133dc

block_.L_4133c5:                                  ; preds = %block_.L_4133ab
  %loadMem_4133c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2979 = getelementptr inbounds %struct.GPR, %struct.GPR* %2978, i32 0, i32 33
  %2980 = getelementptr inbounds %struct.Reg, %struct.Reg* %2979, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %2980 to i64*
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 1
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %RAX.i844 = bitcast %union.anon* %2983 to i64*
  %2984 = load i64, i64* %PC.i843
  %2985 = add i64 %2984, 5
  store i64 %2985, i64* %PC.i843
  store i64 23, i64* %RAX.i844, align 8
  store %struct.Memory* %loadMem_4133c5, %struct.Memory** %MEMORY
  %loadMem_4133ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2987 = getelementptr inbounds %struct.GPR, %struct.GPR* %2986, i32 0, i32 33
  %2988 = getelementptr inbounds %struct.Reg, %struct.Reg* %2987, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %2988 to i64*
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2990 = getelementptr inbounds %struct.GPR, %struct.GPR* %2989, i32 0, i32 5
  %2991 = getelementptr inbounds %struct.Reg, %struct.Reg* %2990, i32 0, i32 0
  %RCX.i842 = bitcast %union.anon* %2991 to i64*
  %2992 = load i64, i64* %PC.i841
  %2993 = add i64 %2992, 5
  store i64 %2993, i64* %PC.i841
  store i64 19, i64* %RCX.i842, align 8
  store %struct.Memory* %loadMem_4133ca, %struct.Memory** %MEMORY
  %loadMem_4133cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 33
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %2996 to i64*
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 15
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %2999 to i64*
  %3000 = load i64, i64* %RBP.i840
  %3001 = sub i64 %3000, 36
  %3002 = load i64, i64* %PC.i839
  %3003 = add i64 %3002, 4
  store i64 %3003, i64* %PC.i839
  %3004 = inttoptr i64 %3001 to i32*
  %3005 = load i32, i32* %3004
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3006, align 1
  %3007 = and i32 %3005, 255
  %3008 = call i32 @llvm.ctpop.i32(i32 %3007)
  %3009 = trunc i32 %3008 to i8
  %3010 = and i8 %3009, 1
  %3011 = xor i8 %3010, 1
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3011, i8* %3012, align 1
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3013, align 1
  %3014 = icmp eq i32 %3005, 0
  %3015 = zext i1 %3014 to i8
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3015, i8* %3016, align 1
  %3017 = lshr i32 %3005, 31
  %3018 = trunc i32 %3017 to i8
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3018, i8* %3019, align 1
  %3020 = lshr i32 %3005, 31
  %3021 = xor i32 %3017, %3020
  %3022 = add i32 %3021, %3020
  %3023 = icmp eq i32 %3022, 2
  %3024 = zext i1 %3023 to i8
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3024, i8* %3025, align 1
  store %struct.Memory* %loadMem_4133cf, %struct.Memory** %MEMORY
  %loadMem_4133d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3027 = getelementptr inbounds %struct.GPR, %struct.GPR* %3026, i32 0, i32 33
  %3028 = getelementptr inbounds %struct.Reg, %struct.Reg* %3027, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %3028 to i64*
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3030 = getelementptr inbounds %struct.GPR, %struct.GPR* %3029, i32 0, i32 5
  %3031 = getelementptr inbounds %struct.Reg, %struct.Reg* %3030, i32 0, i32 0
  %ECX.i837 = bitcast %union.anon* %3031 to i32*
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3033 = getelementptr inbounds %struct.GPR, %struct.GPR* %3032, i32 0, i32 1
  %3034 = getelementptr inbounds %struct.Reg, %struct.Reg* %3033, i32 0, i32 0
  %RAX.i838 = bitcast %union.anon* %3034 to i64*
  %3035 = load i32, i32* %ECX.i837
  %3036 = zext i32 %3035 to i64
  %3037 = load i64, i64* %PC.i836
  %3038 = add i64 %3037, 3
  store i64 %3038, i64* %PC.i836
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3040 = load i8, i8* %3039, align 1
  %3041 = icmp eq i8 %3040, 0
  %3042 = load i64, i64* %RAX.i838, align 8
  %3043 = select i1 %3041, i64 %3036, i64 %3042
  %3044 = and i64 %3043, 4294967295
  store i64 %3044, i64* %RAX.i838, align 8
  store %struct.Memory* %loadMem_4133d3, %struct.Memory** %MEMORY
  %loadMem_4133d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3046 = getelementptr inbounds %struct.GPR, %struct.GPR* %3045, i32 0, i32 33
  %3047 = getelementptr inbounds %struct.Reg, %struct.Reg* %3046, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %3047 to i64*
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3049 = getelementptr inbounds %struct.GPR, %struct.GPR* %3048, i32 0, i32 1
  %3050 = getelementptr inbounds %struct.Reg, %struct.Reg* %3049, i32 0, i32 0
  %EAX.i834 = bitcast %union.anon* %3050 to i32*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 15
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %RBP.i835 = bitcast %union.anon* %3053 to i64*
  %3054 = load i64, i64* %RBP.i835
  %3055 = sub i64 %3054, 168
  %3056 = load i32, i32* %EAX.i834
  %3057 = zext i32 %3056 to i64
  %3058 = load i64, i64* %PC.i833
  %3059 = add i64 %3058, 6
  store i64 %3059, i64* %PC.i833
  %3060 = inttoptr i64 %3055 to i32*
  store i32 %3056, i32* %3060
  store %struct.Memory* %loadMem_4133d6, %struct.Memory** %MEMORY
  br label %block_.L_4133dc

block_.L_4133dc:                                  ; preds = %block_.L_4133c5, %block_4133b5
  %loadMem_4133dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3062 = getelementptr inbounds %struct.GPR, %struct.GPR* %3061, i32 0, i32 33
  %3063 = getelementptr inbounds %struct.Reg, %struct.Reg* %3062, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %3063 to i64*
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3065 = getelementptr inbounds %struct.GPR, %struct.GPR* %3064, i32 0, i32 1
  %3066 = getelementptr inbounds %struct.Reg, %struct.Reg* %3065, i32 0, i32 0
  %RAX.i831 = bitcast %union.anon* %3066 to i64*
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 15
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %3069 to i64*
  %3070 = load i64, i64* %RBP.i832
  %3071 = sub i64 %3070, 168
  %3072 = load i64, i64* %PC.i830
  %3073 = add i64 %3072, 6
  store i64 %3073, i64* %PC.i830
  %3074 = inttoptr i64 %3071 to i32*
  %3075 = load i32, i32* %3074
  %3076 = zext i32 %3075 to i64
  store i64 %3076, i64* %RAX.i831, align 8
  store %struct.Memory* %loadMem_4133dc, %struct.Memory** %MEMORY
  %loadMem_4133e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 33
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %3079 to i64*
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 1
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %EAX.i828 = bitcast %union.anon* %3082 to i32*
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 15
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %RBP.i829 = bitcast %union.anon* %3085 to i64*
  %3086 = load i64, i64* %RBP.i829
  %3087 = sub i64 %3086, 164
  %3088 = load i32, i32* %EAX.i828
  %3089 = zext i32 %3088 to i64
  %3090 = load i64, i64* %PC.i827
  %3091 = add i64 %3090, 6
  store i64 %3091, i64* %PC.i827
  %3092 = inttoptr i64 %3087 to i32*
  store i32 %3088, i32* %3092
  store %struct.Memory* %loadMem_4133e2, %struct.Memory** %MEMORY
  br label %block_.L_4133e8

block_.L_4133e8:                                  ; preds = %block_.L_4133dc, %block_41339b
  %loadMem_4133e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 33
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %3095 to i64*
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3097 = getelementptr inbounds %struct.GPR, %struct.GPR* %3096, i32 0, i32 1
  %3098 = getelementptr inbounds %struct.Reg, %struct.Reg* %3097, i32 0, i32 0
  %RAX.i825 = bitcast %union.anon* %3098 to i64*
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 15
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %RBP.i826 = bitcast %union.anon* %3101 to i64*
  %3102 = load i64, i64* %RBP.i826
  %3103 = sub i64 %3102, 164
  %3104 = load i64, i64* %PC.i824
  %3105 = add i64 %3104, 6
  store i64 %3105, i64* %PC.i824
  %3106 = inttoptr i64 %3103 to i32*
  %3107 = load i32, i32* %3106
  %3108 = zext i32 %3107 to i64
  store i64 %3108, i64* %RAX.i825, align 8
  store %struct.Memory* %loadMem_4133e8, %struct.Memory** %MEMORY
  %loadMem_4133ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3110 = getelementptr inbounds %struct.GPR, %struct.GPR* %3109, i32 0, i32 33
  %3111 = getelementptr inbounds %struct.Reg, %struct.Reg* %3110, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %3111 to i64*
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3113 = getelementptr inbounds %struct.GPR, %struct.GPR* %3112, i32 0, i32 1
  %3114 = getelementptr inbounds %struct.Reg, %struct.Reg* %3113, i32 0, i32 0
  %EAX.i822 = bitcast %union.anon* %3114 to i32*
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3116 = getelementptr inbounds %struct.GPR, %struct.GPR* %3115, i32 0, i32 15
  %3117 = getelementptr inbounds %struct.Reg, %struct.Reg* %3116, i32 0, i32 0
  %RBP.i823 = bitcast %union.anon* %3117 to i64*
  %3118 = load i64, i64* %RBP.i823
  %3119 = sub i64 %3118, 160
  %3120 = load i32, i32* %EAX.i822
  %3121 = zext i32 %3120 to i64
  %3122 = load i64, i64* %PC.i821
  %3123 = add i64 %3122, 6
  store i64 %3123, i64* %PC.i821
  %3124 = inttoptr i64 %3119 to i32*
  store i32 %3120, i32* %3124
  store %struct.Memory* %loadMem_4133ee, %struct.Memory** %MEMORY
  br label %block_.L_4133f4

block_.L_4133f4:                                  ; preds = %block_.L_4133e8, %block_413381
  %loadMem_4133f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 33
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %3127 to i64*
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 1
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %RAX.i819 = bitcast %union.anon* %3130 to i64*
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 15
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %3133 to i64*
  %3134 = load i64, i64* %RBP.i820
  %3135 = sub i64 %3134, 160
  %3136 = load i64, i64* %PC.i818
  %3137 = add i64 %3136, 6
  store i64 %3137, i64* %PC.i818
  %3138 = inttoptr i64 %3135 to i32*
  %3139 = load i32, i32* %3138
  %3140 = zext i32 %3139 to i64
  store i64 %3140, i64* %RAX.i819, align 8
  store %struct.Memory* %loadMem_4133f4, %struct.Memory** %MEMORY
  %loadMem_4133fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3142 = getelementptr inbounds %struct.GPR, %struct.GPR* %3141, i32 0, i32 33
  %3143 = getelementptr inbounds %struct.Reg, %struct.Reg* %3142, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %3143 to i64*
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3145 = getelementptr inbounds %struct.GPR, %struct.GPR* %3144, i32 0, i32 1
  %3146 = getelementptr inbounds %struct.Reg, %struct.Reg* %3145, i32 0, i32 0
  %EAX.i816 = bitcast %union.anon* %3146 to i32*
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3148 = getelementptr inbounds %struct.GPR, %struct.GPR* %3147, i32 0, i32 15
  %3149 = getelementptr inbounds %struct.Reg, %struct.Reg* %3148, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %3149 to i64*
  %3150 = load i64, i64* %RBP.i817
  %3151 = sub i64 %3150, 156
  %3152 = load i32, i32* %EAX.i816
  %3153 = zext i32 %3152 to i64
  %3154 = load i64, i64* %PC.i815
  %3155 = add i64 %3154, 6
  store i64 %3155, i64* %PC.i815
  %3156 = inttoptr i64 %3151 to i32*
  store i32 %3152, i32* %3156
  store %struct.Memory* %loadMem_4133fa, %struct.Memory** %MEMORY
  br label %block_.L_413400

block_.L_413400:                                  ; preds = %block_.L_4133f4, %block_41336a
  %loadMem_413400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 33
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3159 to i64*
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3161 = getelementptr inbounds %struct.GPR, %struct.GPR* %3160, i32 0, i32 1
  %3162 = getelementptr inbounds %struct.Reg, %struct.Reg* %3161, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %3162 to i64*
  %3163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3164 = getelementptr inbounds %struct.GPR, %struct.GPR* %3163, i32 0, i32 15
  %3165 = getelementptr inbounds %struct.Reg, %struct.Reg* %3164, i32 0, i32 0
  %RBP.i814 = bitcast %union.anon* %3165 to i64*
  %3166 = load i64, i64* %RBP.i814
  %3167 = sub i64 %3166, 156
  %3168 = load i64, i64* %PC.i812
  %3169 = add i64 %3168, 6
  store i64 %3169, i64* %PC.i812
  %3170 = inttoptr i64 %3167 to i32*
  %3171 = load i32, i32* %3170
  %3172 = zext i32 %3171 to i64
  store i64 %3172, i64* %RAX.i813, align 8
  store %struct.Memory* %loadMem_413400, %struct.Memory** %MEMORY
  %loadMem_413406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3174 = getelementptr inbounds %struct.GPR, %struct.GPR* %3173, i32 0, i32 33
  %3175 = getelementptr inbounds %struct.Reg, %struct.Reg* %3174, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %3175 to i64*
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3177 = getelementptr inbounds %struct.GPR, %struct.GPR* %3176, i32 0, i32 5
  %3178 = getelementptr inbounds %struct.Reg, %struct.Reg* %3177, i32 0, i32 0
  %ECX.i810 = bitcast %union.anon* %3178 to i32*
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3180 = getelementptr inbounds %struct.GPR, %struct.GPR* %3179, i32 0, i32 5
  %3181 = getelementptr inbounds %struct.Reg, %struct.Reg* %3180, i32 0, i32 0
  %RCX.i811 = bitcast %union.anon* %3181 to i64*
  %3182 = load i64, i64* %RCX.i811
  %3183 = load i32, i32* %ECX.i810
  %3184 = zext i32 %3183 to i64
  %3185 = load i64, i64* %PC.i809
  %3186 = add i64 %3185, 2
  store i64 %3186, i64* %PC.i809
  %3187 = xor i64 %3184, %3182
  %3188 = trunc i64 %3187 to i32
  %3189 = and i64 %3187, 4294967295
  store i64 %3189, i64* %RCX.i811, align 8
  %3190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3190, align 1
  %3191 = and i32 %3188, 255
  %3192 = call i32 @llvm.ctpop.i32(i32 %3191)
  %3193 = trunc i32 %3192 to i8
  %3194 = and i8 %3193, 1
  %3195 = xor i8 %3194, 1
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3195, i8* %3196, align 1
  %3197 = icmp eq i32 %3188, 0
  %3198 = zext i1 %3197 to i8
  %3199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3198, i8* %3199, align 1
  %3200 = lshr i32 %3188, 31
  %3201 = trunc i32 %3200 to i8
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3201, i8* %3202, align 1
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3203, align 1
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3204, align 1
  store %struct.Memory* %loadMem_413406, %struct.Memory** %MEMORY
  %loadMem_413408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3206 = getelementptr inbounds %struct.GPR, %struct.GPR* %3205, i32 0, i32 33
  %3207 = getelementptr inbounds %struct.Reg, %struct.Reg* %3206, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %3207 to i64*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3209 = getelementptr inbounds %struct.GPR, %struct.GPR* %3208, i32 0, i32 7
  %3210 = getelementptr inbounds %struct.Reg, %struct.Reg* %3209, i32 0, i32 0
  %RDX.i808 = bitcast %union.anon* %3210 to i64*
  %3211 = load i64, i64* %PC.i807
  %3212 = add i64 %3211, 5
  store i64 %3212, i64* %PC.i807
  store i64 1, i64* %RDX.i808, align 8
  store %struct.Memory* %loadMem_413408, %struct.Memory** %MEMORY
  %loadMem_41340d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3214 = getelementptr inbounds %struct.GPR, %struct.GPR* %3213, i32 0, i32 33
  %3215 = getelementptr inbounds %struct.Reg, %struct.Reg* %3214, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %3215 to i64*
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3217 = getelementptr inbounds %struct.GPR, %struct.GPR* %3216, i32 0, i32 1
  %3218 = getelementptr inbounds %struct.Reg, %struct.Reg* %3217, i32 0, i32 0
  %EAX.i805 = bitcast %union.anon* %3218 to i32*
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3220 = getelementptr inbounds %struct.GPR, %struct.GPR* %3219, i32 0, i32 15
  %3221 = getelementptr inbounds %struct.Reg, %struct.Reg* %3220, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %3221 to i64*
  %3222 = load i64, i64* %RBP.i806
  %3223 = sub i64 %3222, 64
  %3224 = load i32, i32* %EAX.i805
  %3225 = zext i32 %3224 to i64
  %3226 = load i64, i64* %PC.i804
  %3227 = add i64 %3226, 3
  store i64 %3227, i64* %PC.i804
  %3228 = inttoptr i64 %3223 to i32*
  store i32 %3224, i32* %3228
  store %struct.Memory* %loadMem_41340d, %struct.Memory** %MEMORY
  %loadMem_413410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3230 = getelementptr inbounds %struct.GPR, %struct.GPR* %3229, i32 0, i32 33
  %3231 = getelementptr inbounds %struct.Reg, %struct.Reg* %3230, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %3231 to i64*
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3233 = getelementptr inbounds %struct.GPR, %struct.GPR* %3232, i32 0, i32 9
  %3234 = getelementptr inbounds %struct.Reg, %struct.Reg* %3233, i32 0, i32 0
  %RSI.i803 = bitcast %union.anon* %3234 to i64*
  %3235 = load i64, i64* %PC.i802
  %3236 = add i64 %3235, 8
  store i64 %3236, i64* %PC.i802
  %3237 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3237, i64* %RSI.i803, align 8
  store %struct.Memory* %loadMem_413410, %struct.Memory** %MEMORY
  %loadMem_413418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3239 = getelementptr inbounds %struct.GPR, %struct.GPR* %3238, i32 0, i32 33
  %3240 = getelementptr inbounds %struct.Reg, %struct.Reg* %3239, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %3240 to i64*
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3242 = getelementptr inbounds %struct.GPR, %struct.GPR* %3241, i32 0, i32 9
  %3243 = getelementptr inbounds %struct.Reg, %struct.Reg* %3242, i32 0, i32 0
  %RSI.i801 = bitcast %union.anon* %3243 to i64*
  %3244 = load i64, i64* %RSI.i801
  %3245 = add i64 %3244, 80
  %3246 = load i64, i64* %PC.i800
  %3247 = add i64 %3246, 4
  store i64 %3247, i64* %PC.i800
  %3248 = inttoptr i64 %3245 to i32*
  %3249 = load i32, i32* %3248
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3250, align 1
  %3251 = and i32 %3249, 255
  %3252 = call i32 @llvm.ctpop.i32(i32 %3251)
  %3253 = trunc i32 %3252 to i8
  %3254 = and i8 %3253, 1
  %3255 = xor i8 %3254, 1
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3255, i8* %3256, align 1
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3257, align 1
  %3258 = icmp eq i32 %3249, 0
  %3259 = zext i1 %3258 to i8
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3259, i8* %3260, align 1
  %3261 = lshr i32 %3249, 31
  %3262 = trunc i32 %3261 to i8
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3262, i8* %3263, align 1
  %3264 = lshr i32 %3249, 31
  %3265 = xor i32 %3261, %3264
  %3266 = add i32 %3265, %3264
  %3267 = icmp eq i32 %3266, 2
  %3268 = zext i1 %3267 to i8
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3268, i8* %3269, align 1
  store %struct.Memory* %loadMem_413418, %struct.Memory** %MEMORY
  %loadMem_41341c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3271 = getelementptr inbounds %struct.GPR, %struct.GPR* %3270, i32 0, i32 33
  %3272 = getelementptr inbounds %struct.Reg, %struct.Reg* %3271, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %3272 to i64*
  %3273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3274 = getelementptr inbounds %struct.GPR, %struct.GPR* %3273, i32 0, i32 7
  %3275 = getelementptr inbounds %struct.Reg, %struct.Reg* %3274, i32 0, i32 0
  %EDX.i798 = bitcast %union.anon* %3275 to i32*
  %3276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3277 = getelementptr inbounds %struct.GPR, %struct.GPR* %3276, i32 0, i32 5
  %3278 = getelementptr inbounds %struct.Reg, %struct.Reg* %3277, i32 0, i32 0
  %RCX.i799 = bitcast %union.anon* %3278 to i64*
  %3279 = load i32, i32* %EDX.i798
  %3280 = zext i32 %3279 to i64
  %3281 = load i64, i64* %PC.i797
  %3282 = add i64 %3281, 3
  store i64 %3282, i64* %PC.i797
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3284 = load i8, i8* %3283, align 1
  %3285 = icmp eq i8 %3284, 0
  %3286 = load i64, i64* %RCX.i799, align 8
  %3287 = select i1 %3285, i64 %3280, i64 %3286
  %3288 = and i64 %3287, 4294967295
  store i64 %3288, i64* %RCX.i799, align 8
  store %struct.Memory* %loadMem_41341c, %struct.Memory** %MEMORY
  %loadMem_41341f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3290 = getelementptr inbounds %struct.GPR, %struct.GPR* %3289, i32 0, i32 33
  %3291 = getelementptr inbounds %struct.Reg, %struct.Reg* %3290, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %3291 to i64*
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3293 = getelementptr inbounds %struct.GPR, %struct.GPR* %3292, i32 0, i32 5
  %3294 = getelementptr inbounds %struct.Reg, %struct.Reg* %3293, i32 0, i32 0
  %ECX.i795 = bitcast %union.anon* %3294 to i32*
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3296 = getelementptr inbounds %struct.GPR, %struct.GPR* %3295, i32 0, i32 15
  %3297 = getelementptr inbounds %struct.Reg, %struct.Reg* %3296, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %3297 to i64*
  %3298 = load i64, i64* %RBP.i796
  %3299 = sub i64 %3298, 68
  %3300 = load i32, i32* %ECX.i795
  %3301 = zext i32 %3300 to i64
  %3302 = load i64, i64* %PC.i794
  %3303 = add i64 %3302, 3
  store i64 %3303, i64* %PC.i794
  %3304 = inttoptr i64 %3299 to i32*
  store i32 %3300, i32* %3304
  store %struct.Memory* %loadMem_41341f, %struct.Memory** %MEMORY
  %loadMem_413422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3306 = getelementptr inbounds %struct.GPR, %struct.GPR* %3305, i32 0, i32 33
  %3307 = getelementptr inbounds %struct.Reg, %struct.Reg* %3306, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %3307 to i64*
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3309 = getelementptr inbounds %struct.GPR, %struct.GPR* %3308, i32 0, i32 1
  %3310 = getelementptr inbounds %struct.Reg, %struct.Reg* %3309, i32 0, i32 0
  %RAX.i792 = bitcast %union.anon* %3310 to i64*
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3312 = getelementptr inbounds %struct.GPR, %struct.GPR* %3311, i32 0, i32 15
  %3313 = getelementptr inbounds %struct.Reg, %struct.Reg* %3312, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %3313 to i64*
  %3314 = load i64, i64* %RBP.i793
  %3315 = sub i64 %3314, 68
  %3316 = load i64, i64* %PC.i791
  %3317 = add i64 %3316, 3
  store i64 %3317, i64* %PC.i791
  %3318 = inttoptr i64 %3315 to i32*
  %3319 = load i32, i32* %3318
  %3320 = zext i32 %3319 to i64
  store i64 %3320, i64* %RAX.i792, align 8
  store %struct.Memory* %loadMem_413422, %struct.Memory** %MEMORY
  %loadMem_413425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3322 = getelementptr inbounds %struct.GPR, %struct.GPR* %3321, i32 0, i32 33
  %3323 = getelementptr inbounds %struct.Reg, %struct.Reg* %3322, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %3323 to i64*
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3325 = getelementptr inbounds %struct.GPR, %struct.GPR* %3324, i32 0, i32 1
  %3326 = getelementptr inbounds %struct.Reg, %struct.Reg* %3325, i32 0, i32 0
  %EAX.i789 = bitcast %union.anon* %3326 to i32*
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3328 = getelementptr inbounds %struct.GPR, %struct.GPR* %3327, i32 0, i32 15
  %3329 = getelementptr inbounds %struct.Reg, %struct.Reg* %3328, i32 0, i32 0
  %RBP.i790 = bitcast %union.anon* %3329 to i64*
  %3330 = load i64, i64* %RBP.i790
  %3331 = sub i64 %3330, 72
  %3332 = load i32, i32* %EAX.i789
  %3333 = zext i32 %3332 to i64
  %3334 = load i64, i64* %PC.i788
  %3335 = add i64 %3334, 3
  store i64 %3335, i64* %PC.i788
  %3336 = inttoptr i64 %3331 to i32*
  store i32 %3332, i32* %3336
  store %struct.Memory* %loadMem_413425, %struct.Memory** %MEMORY
  %loadMem_413428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3338 = getelementptr inbounds %struct.GPR, %struct.GPR* %3337, i32 0, i32 33
  %3339 = getelementptr inbounds %struct.Reg, %struct.Reg* %3338, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %3339 to i64*
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3341 = getelementptr inbounds %struct.GPR, %struct.GPR* %3340, i32 0, i32 1
  %3342 = getelementptr inbounds %struct.Reg, %struct.Reg* %3341, i32 0, i32 0
  %RAX.i786 = bitcast %union.anon* %3342 to i64*
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3344 = getelementptr inbounds %struct.GPR, %struct.GPR* %3343, i32 0, i32 15
  %3345 = getelementptr inbounds %struct.Reg, %struct.Reg* %3344, i32 0, i32 0
  %RBP.i787 = bitcast %union.anon* %3345 to i64*
  %3346 = load i64, i64* %RBP.i787
  %3347 = sub i64 %3346, 68
  %3348 = load i64, i64* %PC.i785
  %3349 = add i64 %3348, 3
  store i64 %3349, i64* %PC.i785
  %3350 = inttoptr i64 %3347 to i32*
  %3351 = load i32, i32* %3350
  %3352 = zext i32 %3351 to i64
  store i64 %3352, i64* %RAX.i786, align 8
  store %struct.Memory* %loadMem_413428, %struct.Memory** %MEMORY
  %loadMem_41342b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3354 = getelementptr inbounds %struct.GPR, %struct.GPR* %3353, i32 0, i32 33
  %3355 = getelementptr inbounds %struct.Reg, %struct.Reg* %3354, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %3355 to i64*
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3357 = getelementptr inbounds %struct.GPR, %struct.GPR* %3356, i32 0, i32 1
  %3358 = getelementptr inbounds %struct.Reg, %struct.Reg* %3357, i32 0, i32 0
  %EAX.i783 = bitcast %union.anon* %3358 to i32*
  %3359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3360 = getelementptr inbounds %struct.GPR, %struct.GPR* %3359, i32 0, i32 15
  %3361 = getelementptr inbounds %struct.Reg, %struct.Reg* %3360, i32 0, i32 0
  %RBP.i784 = bitcast %union.anon* %3361 to i64*
  %3362 = load i64, i64* %RBP.i784
  %3363 = sub i64 %3362, 76
  %3364 = load i32, i32* %EAX.i783
  %3365 = zext i32 %3364 to i64
  %3366 = load i64, i64* %PC.i782
  %3367 = add i64 %3366, 3
  store i64 %3367, i64* %PC.i782
  %3368 = inttoptr i64 %3363 to i32*
  store i32 %3364, i32* %3368
  store %struct.Memory* %loadMem_41342b, %struct.Memory** %MEMORY
  %loadMem_41342e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3370 = getelementptr inbounds %struct.GPR, %struct.GPR* %3369, i32 0, i32 33
  %3371 = getelementptr inbounds %struct.Reg, %struct.Reg* %3370, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %3371 to i64*
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3373 = getelementptr inbounds %struct.GPR, %struct.GPR* %3372, i32 0, i32 15
  %3374 = getelementptr inbounds %struct.Reg, %struct.Reg* %3373, i32 0, i32 0
  %RBP.i781 = bitcast %union.anon* %3374 to i64*
  %3375 = load i64, i64* %RBP.i781
  %3376 = sub i64 %3375, 84
  %3377 = load i64, i64* %PC.i780
  %3378 = add i64 %3377, 7
  store i64 %3378, i64* %PC.i780
  %3379 = inttoptr i64 %3376 to i32*
  store i32 0, i32* %3379
  store %struct.Memory* %loadMem_41342e, %struct.Memory** %MEMORY
  %loadMem_413435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 33
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %3382 to i64*
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3384 = getelementptr inbounds %struct.GPR, %struct.GPR* %3383, i32 0, i32 15
  %3385 = getelementptr inbounds %struct.Reg, %struct.Reg* %3384, i32 0, i32 0
  %RBP.i779 = bitcast %union.anon* %3385 to i64*
  %3386 = load i64, i64* %RBP.i779
  %3387 = sub i64 %3386, 88
  %3388 = load i64, i64* %PC.i778
  %3389 = add i64 %3388, 7
  store i64 %3389, i64* %PC.i778
  %3390 = inttoptr i64 %3387 to i32*
  store i32 0, i32* %3390
  store %struct.Memory* %loadMem_413435, %struct.Memory** %MEMORY
  %loadMem_41343c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3392 = getelementptr inbounds %struct.GPR, %struct.GPR* %3391, i32 0, i32 33
  %3393 = getelementptr inbounds %struct.Reg, %struct.Reg* %3392, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %3393 to i64*
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3395 = getelementptr inbounds %struct.GPR, %struct.GPR* %3394, i32 0, i32 15
  %3396 = getelementptr inbounds %struct.Reg, %struct.Reg* %3395, i32 0, i32 0
  %RBP.i777 = bitcast %union.anon* %3396 to i64*
  %3397 = load i64, i64* %RBP.i777
  %3398 = sub i64 %3397, 28
  %3399 = load i64, i64* %PC.i776
  %3400 = add i64 %3399, 4
  store i64 %3400, i64* %PC.i776
  %3401 = inttoptr i64 %3398 to i32*
  %3402 = load i32, i32* %3401
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3403, align 1
  %3404 = and i32 %3402, 255
  %3405 = call i32 @llvm.ctpop.i32(i32 %3404)
  %3406 = trunc i32 %3405 to i8
  %3407 = and i8 %3406, 1
  %3408 = xor i8 %3407, 1
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3408, i8* %3409, align 1
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3410, align 1
  %3411 = icmp eq i32 %3402, 0
  %3412 = zext i1 %3411 to i8
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3412, i8* %3413, align 1
  %3414 = lshr i32 %3402, 31
  %3415 = trunc i32 %3414 to i8
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3415, i8* %3416, align 1
  %3417 = lshr i32 %3402, 31
  %3418 = xor i32 %3414, %3417
  %3419 = add i32 %3418, %3417
  %3420 = icmp eq i32 %3419, 2
  %3421 = zext i1 %3420 to i8
  %3422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3421, i8* %3422, align 1
  store %struct.Memory* %loadMem_41343c, %struct.Memory** %MEMORY
  %loadMem_413440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3424 = getelementptr inbounds %struct.GPR, %struct.GPR* %3423, i32 0, i32 33
  %3425 = getelementptr inbounds %struct.Reg, %struct.Reg* %3424, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %3425 to i64*
  %3426 = load i64, i64* %PC.i775
  %3427 = add i64 %3426, 16
  %3428 = load i64, i64* %PC.i775
  %3429 = add i64 %3428, 6
  %3430 = load i64, i64* %PC.i775
  %3431 = add i64 %3430, 6
  store i64 %3431, i64* %PC.i775
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3433 = load i8, i8* %3432, align 1
  %3434 = icmp eq i8 %3433, 0
  %3435 = zext i1 %3434 to i8
  store i8 %3435, i8* %BRANCH_TAKEN, align 1
  %3436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3437 = select i1 %3434, i64 %3427, i64 %3429
  store i64 %3437, i64* %3436, align 8
  store %struct.Memory* %loadMem_413440, %struct.Memory** %MEMORY
  %loadBr_413440 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413440 = icmp eq i8 %loadBr_413440, 1
  br i1 %cmpBr_413440, label %block_.L_413450, label %block_413446

block_413446:                                     ; preds = %block_.L_413400
  %loadMem_413446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 33
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %3440 to i64*
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3442 = getelementptr inbounds %struct.GPR, %struct.GPR* %3441, i32 0, i32 15
  %3443 = getelementptr inbounds %struct.Reg, %struct.Reg* %3442, i32 0, i32 0
  %RBP.i774 = bitcast %union.anon* %3443 to i64*
  %3444 = load i64, i64* %RBP.i774
  %3445 = sub i64 %3444, 32
  %3446 = load i64, i64* %PC.i773
  %3447 = add i64 %3446, 4
  store i64 %3447, i64* %PC.i773
  %3448 = inttoptr i64 %3445 to i32*
  %3449 = load i32, i32* %3448
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3450, align 1
  %3451 = and i32 %3449, 255
  %3452 = call i32 @llvm.ctpop.i32(i32 %3451)
  %3453 = trunc i32 %3452 to i8
  %3454 = and i8 %3453, 1
  %3455 = xor i8 %3454, 1
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3455, i8* %3456, align 1
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3457, align 1
  %3458 = icmp eq i32 %3449, 0
  %3459 = zext i1 %3458 to i8
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3459, i8* %3460, align 1
  %3461 = lshr i32 %3449, 31
  %3462 = trunc i32 %3461 to i8
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3462, i8* %3463, align 1
  %3464 = lshr i32 %3449, 31
  %3465 = xor i32 %3461, %3464
  %3466 = add i32 %3465, %3464
  %3467 = icmp eq i32 %3466, 2
  %3468 = zext i1 %3467 to i8
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3468, i8* %3469, align 1
  store %struct.Memory* %loadMem_413446, %struct.Memory** %MEMORY
  %loadMem_41344a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 33
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %3472 to i64*
  %3473 = load i64, i64* %PC.i772
  %3474 = add i64 %3473, 144
  %3475 = load i64, i64* %PC.i772
  %3476 = add i64 %3475, 6
  %3477 = load i64, i64* %PC.i772
  %3478 = add i64 %3477, 6
  store i64 %3478, i64* %PC.i772
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3480 = load i8, i8* %3479, align 1
  store i8 %3480, i8* %BRANCH_TAKEN, align 1
  %3481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3482 = icmp ne i8 %3480, 0
  %3483 = select i1 %3482, i64 %3474, i64 %3476
  store i64 %3483, i64* %3481, align 8
  store %struct.Memory* %loadMem_41344a, %struct.Memory** %MEMORY
  %loadBr_41344a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41344a = icmp eq i8 %loadBr_41344a, 1
  br i1 %cmpBr_41344a, label %block_.L_4134da, label %block_.L_413450

block_.L_413450:                                  ; preds = %block_413446, %block_.L_413400
  %loadMem_413450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3485 = getelementptr inbounds %struct.GPR, %struct.GPR* %3484, i32 0, i32 33
  %3486 = getelementptr inbounds %struct.Reg, %struct.Reg* %3485, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %3486 to i64*
  %3487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3488 = getelementptr inbounds %struct.GPR, %struct.GPR* %3487, i32 0, i32 5
  %3489 = getelementptr inbounds %struct.Reg, %struct.Reg* %3488, i32 0, i32 0
  %RCX.i771 = bitcast %union.anon* %3489 to i64*
  %3490 = load i64, i64* %PC.i770
  %3491 = add i64 %3490, 5
  store i64 %3491, i64* %PC.i770
  store i64 4294967295, i64* %RCX.i771, align 8
  store %struct.Memory* %loadMem_413450, %struct.Memory** %MEMORY
  %loadMem_413455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 33
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %3494 to i64*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 17
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %R8D.i769 = bitcast %union.anon* %3497 to i32*
  %3498 = bitcast i32* %R8D.i769 to i64*
  %3499 = load i32, i32* %R8D.i769
  %3500 = zext i32 %3499 to i64
  %3501 = load i32, i32* %R8D.i769
  %3502 = zext i32 %3501 to i64
  %3503 = load i64, i64* %PC.i768
  %3504 = add i64 %3503, 3
  store i64 %3504, i64* %PC.i768
  %3505 = xor i64 %3502, %3500
  %3506 = trunc i64 %3505 to i32
  %3507 = and i64 %3505, 4294967295
  store i64 %3507, i64* %3498, align 8
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3508, align 1
  %3509 = and i32 %3506, 255
  %3510 = call i32 @llvm.ctpop.i32(i32 %3509)
  %3511 = trunc i32 %3510 to i8
  %3512 = and i8 %3511, 1
  %3513 = xor i8 %3512, 1
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3513, i8* %3514, align 1
  %3515 = icmp eq i32 %3506, 0
  %3516 = zext i1 %3515 to i8
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3516, i8* %3517, align 1
  %3518 = lshr i32 %3506, 31
  %3519 = trunc i32 %3518 to i8
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3519, i8* %3520, align 1
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3521, align 1
  %3522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3522, align 1
  store %struct.Memory* %loadMem_413455, %struct.Memory** %MEMORY
  %loadMem_413458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3524 = getelementptr inbounds %struct.GPR, %struct.GPR* %3523, i32 0, i32 33
  %3525 = getelementptr inbounds %struct.Reg, %struct.Reg* %3524, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %3525 to i64*
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3527 = getelementptr inbounds %struct.GPR, %struct.GPR* %3526, i32 0, i32 15
  %3528 = getelementptr inbounds %struct.Reg, %struct.Reg* %3527, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %3528 to i64*
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3530 = getelementptr inbounds %struct.GPR, %struct.GPR* %3529, i32 0, i32 19
  %3531 = getelementptr inbounds %struct.Reg, %struct.Reg* %3530, i32 0, i32 0
  %R9.i767 = bitcast %union.anon* %3531 to i64*
  %3532 = load i64, i64* %RBP.i766
  %3533 = sub i64 %3532, 112
  %3534 = load i64, i64* %PC.i765
  %3535 = add i64 %3534, 4
  store i64 %3535, i64* %PC.i765
  store i64 %3533, i64* %R9.i767, align 8
  store %struct.Memory* %loadMem_413458, %struct.Memory** %MEMORY
  %loadMem_41345c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 33
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %3538 to i64*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 1
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %RAX.i764 = bitcast %union.anon* %3541 to i64*
  %3542 = load i64, i64* %PC.i763
  %3543 = add i64 %3542, 8
  store i64 %3543, i64* %PC.i763
  %3544 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3544, i64* %RAX.i764, align 8
  store %struct.Memory* %loadMem_41345c, %struct.Memory** %MEMORY
  %loadMem_413464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3546 = getelementptr inbounds %struct.GPR, %struct.GPR* %3545, i32 0, i32 33
  %3547 = getelementptr inbounds %struct.Reg, %struct.Reg* %3546, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %3547 to i64*
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3549 = getelementptr inbounds %struct.GPR, %struct.GPR* %3548, i32 0, i32 1
  %3550 = getelementptr inbounds %struct.Reg, %struct.Reg* %3549, i32 0, i32 0
  %RAX.i761 = bitcast %union.anon* %3550 to i64*
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3552 = getelementptr inbounds %struct.GPR, %struct.GPR* %3551, i32 0, i32 11
  %3553 = getelementptr inbounds %struct.Reg, %struct.Reg* %3552, i32 0, i32 0
  %RDI.i762 = bitcast %union.anon* %3553 to i64*
  %3554 = load i64, i64* %RAX.i761
  %3555 = add i64 %3554, 12
  %3556 = load i64, i64* %PC.i760
  %3557 = add i64 %3556, 3
  store i64 %3557, i64* %PC.i760
  %3558 = inttoptr i64 %3555 to i32*
  %3559 = load i32, i32* %3558
  %3560 = zext i32 %3559 to i64
  store i64 %3560, i64* %RDI.i762, align 8
  store %struct.Memory* %loadMem_413464, %struct.Memory** %MEMORY
  %loadMem_413467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3562 = getelementptr inbounds %struct.GPR, %struct.GPR* %3561, i32 0, i32 33
  %3563 = getelementptr inbounds %struct.Reg, %struct.Reg* %3562, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %3563 to i64*
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3565 = getelementptr inbounds %struct.GPR, %struct.GPR* %3564, i32 0, i32 9
  %3566 = getelementptr inbounds %struct.Reg, %struct.Reg* %3565, i32 0, i32 0
  %RSI.i758 = bitcast %union.anon* %3566 to i64*
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3568 = getelementptr inbounds %struct.GPR, %struct.GPR* %3567, i32 0, i32 15
  %3569 = getelementptr inbounds %struct.Reg, %struct.Reg* %3568, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %3569 to i64*
  %3570 = load i64, i64* %RBP.i759
  %3571 = sub i64 %3570, 60
  %3572 = load i64, i64* %PC.i757
  %3573 = add i64 %3572, 3
  store i64 %3573, i64* %PC.i757
  %3574 = inttoptr i64 %3571 to i32*
  %3575 = load i32, i32* %3574
  %3576 = zext i32 %3575 to i64
  store i64 %3576, i64* %RSI.i758, align 8
  store %struct.Memory* %loadMem_413467, %struct.Memory** %MEMORY
  %loadMem_41346a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3578 = getelementptr inbounds %struct.GPR, %struct.GPR* %3577, i32 0, i32 33
  %3579 = getelementptr inbounds %struct.Reg, %struct.Reg* %3578, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %3579 to i64*
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 7
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %RDX.i755 = bitcast %union.anon* %3582 to i64*
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 15
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %RBP.i756 = bitcast %union.anon* %3585 to i64*
  %3586 = load i64, i64* %RBP.i756
  %3587 = sub i64 %3586, 56
  %3588 = load i64, i64* %PC.i754
  %3589 = add i64 %3588, 3
  store i64 %3589, i64* %PC.i754
  %3590 = inttoptr i64 %3587 to i32*
  %3591 = load i32, i32* %3590
  %3592 = zext i32 %3591 to i64
  store i64 %3592, i64* %RDX.i755, align 8
  store %struct.Memory* %loadMem_41346a, %struct.Memory** %MEMORY
  %loadMem1_41346d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 33
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %3595 to i64*
  %3596 = load i64, i64* %PC.i753
  %3597 = add i64 %3596, 228803
  %3598 = load i64, i64* %PC.i753
  %3599 = add i64 %3598, 5
  %3600 = load i64, i64* %PC.i753
  %3601 = add i64 %3600, 5
  store i64 %3601, i64* %PC.i753
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3603 = load i64, i64* %3602, align 8
  %3604 = add i64 %3603, -8
  %3605 = inttoptr i64 %3604 to i64*
  store i64 %3599, i64* %3605
  store i64 %3604, i64* %3602, align 8
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3597, i64* %3606, align 8
  store %struct.Memory* %loadMem1_41346d, %struct.Memory** %MEMORY
  %loadMem2_41346d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41346d = load i64, i64* %3
  %call2_41346d = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64 %loadPC_41346d, %struct.Memory* %loadMem2_41346d)
  store %struct.Memory* %call2_41346d, %struct.Memory** %MEMORY
  %loadMem_413472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3608 = getelementptr inbounds %struct.GPR, %struct.GPR* %3607, i32 0, i32 33
  %3609 = getelementptr inbounds %struct.Reg, %struct.Reg* %3608, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %3609 to i64*
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3611 = getelementptr inbounds %struct.GPR, %struct.GPR* %3610, i32 0, i32 5
  %3612 = getelementptr inbounds %struct.Reg, %struct.Reg* %3611, i32 0, i32 0
  %ECX.i751 = bitcast %union.anon* %3612 to i32*
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3614 = getelementptr inbounds %struct.GPR, %struct.GPR* %3613, i32 0, i32 5
  %3615 = getelementptr inbounds %struct.Reg, %struct.Reg* %3614, i32 0, i32 0
  %RCX.i752 = bitcast %union.anon* %3615 to i64*
  %3616 = load i64, i64* %RCX.i752
  %3617 = load i32, i32* %ECX.i751
  %3618 = zext i32 %3617 to i64
  %3619 = load i64, i64* %PC.i750
  %3620 = add i64 %3619, 2
  store i64 %3620, i64* %PC.i750
  %3621 = xor i64 %3618, %3616
  %3622 = trunc i64 %3621 to i32
  %3623 = and i64 %3621, 4294967295
  store i64 %3623, i64* %RCX.i752, align 8
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3624, align 1
  %3625 = and i32 %3622, 255
  %3626 = call i32 @llvm.ctpop.i32(i32 %3625)
  %3627 = trunc i32 %3626 to i8
  %3628 = and i8 %3627, 1
  %3629 = xor i8 %3628, 1
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3629, i8* %3630, align 1
  %3631 = icmp eq i32 %3622, 0
  %3632 = zext i1 %3631 to i8
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3632, i8* %3633, align 1
  %3634 = lshr i32 %3622, 31
  %3635 = trunc i32 %3634 to i8
  %3636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3635, i8* %3636, align 1
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3637, align 1
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3638, align 1
  store %struct.Memory* %loadMem_413472, %struct.Memory** %MEMORY
  %loadMem_413474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3640 = getelementptr inbounds %struct.GPR, %struct.GPR* %3639, i32 0, i32 33
  %3641 = getelementptr inbounds %struct.Reg, %struct.Reg* %3640, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %3641 to i64*
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3643 = getelementptr inbounds %struct.GPR, %struct.GPR* %3642, i32 0, i32 17
  %3644 = getelementptr inbounds %struct.Reg, %struct.Reg* %3643, i32 0, i32 0
  %R8D.i749 = bitcast %union.anon* %3644 to i32*
  %3645 = bitcast i32* %R8D.i749 to i64*
  %3646 = load i64, i64* %PC.i748
  %3647 = add i64 %3646, 6
  store i64 %3647, i64* %PC.i748
  store i64 4294967295, i64* %3645, align 8
  store %struct.Memory* %loadMem_413474, %struct.Memory** %MEMORY
  %loadMem_41347a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3649 = getelementptr inbounds %struct.GPR, %struct.GPR* %3648, i32 0, i32 33
  %3650 = getelementptr inbounds %struct.Reg, %struct.Reg* %3649, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %3650 to i64*
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3652 = getelementptr inbounds %struct.GPR, %struct.GPR* %3651, i32 0, i32 15
  %3653 = getelementptr inbounds %struct.Reg, %struct.Reg* %3652, i32 0, i32 0
  %RBP.i746 = bitcast %union.anon* %3653 to i64*
  %3654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3655 = getelementptr inbounds %struct.GPR, %struct.GPR* %3654, i32 0, i32 19
  %3656 = getelementptr inbounds %struct.Reg, %struct.Reg* %3655, i32 0, i32 0
  %R9.i747 = bitcast %union.anon* %3656 to i64*
  %3657 = load i64, i64* %RBP.i746
  %3658 = sub i64 %3657, 136
  %3659 = load i64, i64* %PC.i745
  %3660 = add i64 %3659, 7
  store i64 %3660, i64* %PC.i745
  store i64 %3658, i64* %R9.i747, align 8
  store %struct.Memory* %loadMem_41347a, %struct.Memory** %MEMORY
  %loadMem_413481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3662 = getelementptr inbounds %struct.GPR, %struct.GPR* %3661, i32 0, i32 33
  %3663 = getelementptr inbounds %struct.Reg, %struct.Reg* %3662, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %3663 to i64*
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3665 = getelementptr inbounds %struct.GPR, %struct.GPR* %3664, i32 0, i32 1
  %3666 = getelementptr inbounds %struct.Reg, %struct.Reg* %3665, i32 0, i32 0
  %RAX.i744 = bitcast %union.anon* %3666 to i64*
  %3667 = load i64, i64* %PC.i743
  %3668 = add i64 %3667, 8
  store i64 %3668, i64* %PC.i743
  %3669 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3669, i64* %RAX.i744, align 8
  store %struct.Memory* %loadMem_413481, %struct.Memory** %MEMORY
  %loadMem_413489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3671 = getelementptr inbounds %struct.GPR, %struct.GPR* %3670, i32 0, i32 33
  %3672 = getelementptr inbounds %struct.Reg, %struct.Reg* %3671, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %3672 to i64*
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3674 = getelementptr inbounds %struct.GPR, %struct.GPR* %3673, i32 0, i32 1
  %3675 = getelementptr inbounds %struct.Reg, %struct.Reg* %3674, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %3675 to i64*
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3677 = getelementptr inbounds %struct.GPR, %struct.GPR* %3676, i32 0, i32 11
  %3678 = getelementptr inbounds %struct.Reg, %struct.Reg* %3677, i32 0, i32 0
  %RDI.i742 = bitcast %union.anon* %3678 to i64*
  %3679 = load i64, i64* %RAX.i741
  %3680 = add i64 %3679, 12
  %3681 = load i64, i64* %PC.i740
  %3682 = add i64 %3681, 3
  store i64 %3682, i64* %PC.i740
  %3683 = inttoptr i64 %3680 to i32*
  %3684 = load i32, i32* %3683
  %3685 = zext i32 %3684 to i64
  store i64 %3685, i64* %RDI.i742, align 8
  store %struct.Memory* %loadMem_413489, %struct.Memory** %MEMORY
  %loadMem_41348c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3687 = getelementptr inbounds %struct.GPR, %struct.GPR* %3686, i32 0, i32 33
  %3688 = getelementptr inbounds %struct.Reg, %struct.Reg* %3687, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %3688 to i64*
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3690 = getelementptr inbounds %struct.GPR, %struct.GPR* %3689, i32 0, i32 9
  %3691 = getelementptr inbounds %struct.Reg, %struct.Reg* %3690, i32 0, i32 0
  %RSI.i738 = bitcast %union.anon* %3691 to i64*
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3693 = getelementptr inbounds %struct.GPR, %struct.GPR* %3692, i32 0, i32 15
  %3694 = getelementptr inbounds %struct.Reg, %struct.Reg* %3693, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %3694 to i64*
  %3695 = load i64, i64* %RBP.i739
  %3696 = sub i64 %3695, 60
  %3697 = load i64, i64* %PC.i737
  %3698 = add i64 %3697, 3
  store i64 %3698, i64* %PC.i737
  %3699 = inttoptr i64 %3696 to i32*
  %3700 = load i32, i32* %3699
  %3701 = zext i32 %3700 to i64
  store i64 %3701, i64* %RSI.i738, align 8
  store %struct.Memory* %loadMem_41348c, %struct.Memory** %MEMORY
  %loadMem_41348f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3703 = getelementptr inbounds %struct.GPR, %struct.GPR* %3702, i32 0, i32 33
  %3704 = getelementptr inbounds %struct.Reg, %struct.Reg* %3703, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %3704 to i64*
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3706 = getelementptr inbounds %struct.GPR, %struct.GPR* %3705, i32 0, i32 7
  %3707 = getelementptr inbounds %struct.Reg, %struct.Reg* %3706, i32 0, i32 0
  %RDX.i735 = bitcast %union.anon* %3707 to i64*
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3709 = getelementptr inbounds %struct.GPR, %struct.GPR* %3708, i32 0, i32 15
  %3710 = getelementptr inbounds %struct.Reg, %struct.Reg* %3709, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %3710 to i64*
  %3711 = load i64, i64* %RBP.i736
  %3712 = sub i64 %3711, 56
  %3713 = load i64, i64* %PC.i734
  %3714 = add i64 %3713, 3
  store i64 %3714, i64* %PC.i734
  %3715 = inttoptr i64 %3712 to i32*
  %3716 = load i32, i32* %3715
  %3717 = zext i32 %3716 to i64
  store i64 %3717, i64* %RDX.i735, align 8
  store %struct.Memory* %loadMem_41348f, %struct.Memory** %MEMORY
  %loadMem1_413492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3719 = getelementptr inbounds %struct.GPR, %struct.GPR* %3718, i32 0, i32 33
  %3720 = getelementptr inbounds %struct.Reg, %struct.Reg* %3719, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %3720 to i64*
  %3721 = load i64, i64* %PC.i733
  %3722 = add i64 %3721, 228766
  %3723 = load i64, i64* %PC.i733
  %3724 = add i64 %3723, 5
  %3725 = load i64, i64* %PC.i733
  %3726 = add i64 %3725, 5
  store i64 %3726, i64* %PC.i733
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3728 = load i64, i64* %3727, align 8
  %3729 = add i64 %3728, -8
  %3730 = inttoptr i64 %3729 to i64*
  store i64 %3724, i64* %3730
  store i64 %3729, i64* %3727, align 8
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3722, i64* %3731, align 8
  store %struct.Memory* %loadMem1_413492, %struct.Memory** %MEMORY
  %loadMem2_413492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_413492 = load i64, i64* %3
  %call2_413492 = call %struct.Memory* @sub_44b230.getLuma4x4Neighbour(%struct.State* %0, i64 %loadPC_413492, %struct.Memory* %loadMem2_413492)
  store %struct.Memory* %call2_413492, %struct.Memory** %MEMORY
  %loadMem_413497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3733 = getelementptr inbounds %struct.GPR, %struct.GPR* %3732, i32 0, i32 33
  %3734 = getelementptr inbounds %struct.Reg, %struct.Reg* %3733, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %3734 to i64*
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3736 = getelementptr inbounds %struct.GPR, %struct.GPR* %3735, i32 0, i32 15
  %3737 = getelementptr inbounds %struct.Reg, %struct.Reg* %3736, i32 0, i32 0
  %RBP.i732 = bitcast %union.anon* %3737 to i64*
  %3738 = load i64, i64* %RBP.i732
  %3739 = sub i64 %3738, 28
  %3740 = load i64, i64* %PC.i731
  %3741 = add i64 %3740, 4
  store i64 %3741, i64* %PC.i731
  %3742 = inttoptr i64 %3739 to i32*
  %3743 = load i32, i32* %3742
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3744, align 1
  %3745 = and i32 %3743, 255
  %3746 = call i32 @llvm.ctpop.i32(i32 %3745)
  %3747 = trunc i32 %3746 to i8
  %3748 = and i8 %3747, 1
  %3749 = xor i8 %3748, 1
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3749, i8* %3750, align 1
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3751, align 1
  %3752 = icmp eq i32 %3743, 0
  %3753 = zext i1 %3752 to i8
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3753, i8* %3754, align 1
  %3755 = lshr i32 %3743, 31
  %3756 = trunc i32 %3755 to i8
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3756, i8* %3757, align 1
  %3758 = lshr i32 %3743, 31
  %3759 = xor i32 %3755, %3758
  %3760 = add i32 %3759, %3758
  %3761 = icmp eq i32 %3760, 2
  %3762 = zext i1 %3761 to i8
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3762, i8* %3763, align 1
  store %struct.Memory* %loadMem_413497, %struct.Memory** %MEMORY
  %loadMem_41349b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3765 = getelementptr inbounds %struct.GPR, %struct.GPR* %3764, i32 0, i32 33
  %3766 = getelementptr inbounds %struct.Reg, %struct.Reg* %3765, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %3766 to i64*
  %3767 = load i64, i64* %PC.i730
  %3768 = add i64 %3767, 58
  %3769 = load i64, i64* %PC.i730
  %3770 = add i64 %3769, 6
  %3771 = load i64, i64* %PC.i730
  %3772 = add i64 %3771, 6
  store i64 %3772, i64* %PC.i730
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3774 = load i8, i8* %3773, align 1
  store i8 %3774, i8* %BRANCH_TAKEN, align 1
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3776 = icmp ne i8 %3774, 0
  %3777 = select i1 %3776, i64 %3768, i64 %3770
  store i64 %3777, i64* %3775, align 8
  store %struct.Memory* %loadMem_41349b, %struct.Memory** %MEMORY
  %loadBr_41349b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41349b = icmp eq i8 %loadBr_41349b, 1
  br i1 %cmpBr_41349b, label %block_.L_4134d5, label %block_4134a1

block_4134a1:                                     ; preds = %block_.L_413450
  %loadMem_4134a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 33
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %3780 to i64*
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 15
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %RBP.i729 = bitcast %union.anon* %3783 to i64*
  %3784 = load i64, i64* %RBP.i729
  %3785 = sub i64 %3784, 112
  %3786 = load i64, i64* %PC.i728
  %3787 = add i64 %3786, 4
  store i64 %3787, i64* %PC.i728
  %3788 = inttoptr i64 %3785 to i32*
  %3789 = load i32, i32* %3788
  %3790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3790, align 1
  %3791 = and i32 %3789, 255
  %3792 = call i32 @llvm.ctpop.i32(i32 %3791)
  %3793 = trunc i32 %3792 to i8
  %3794 = and i8 %3793, 1
  %3795 = xor i8 %3794, 1
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3795, i8* %3796, align 1
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3797, align 1
  %3798 = icmp eq i32 %3789, 0
  %3799 = zext i1 %3798 to i8
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3799, i8* %3800, align 1
  %3801 = lshr i32 %3789, 31
  %3802 = trunc i32 %3801 to i8
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3802, i8* %3803, align 1
  %3804 = lshr i32 %3789, 31
  %3805 = xor i32 %3801, %3804
  %3806 = add i32 %3805, %3804
  %3807 = icmp eq i32 %3806, 2
  %3808 = zext i1 %3807 to i8
  %3809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3808, i8* %3809, align 1
  store %struct.Memory* %loadMem_4134a1, %struct.Memory** %MEMORY
  %loadMem_4134a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3811 = getelementptr inbounds %struct.GPR, %struct.GPR* %3810, i32 0, i32 33
  %3812 = getelementptr inbounds %struct.Reg, %struct.Reg* %3811, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %3812 to i64*
  %3813 = load i64, i64* %PC.i727
  %3814 = add i64 %3813, 18
  %3815 = load i64, i64* %PC.i727
  %3816 = add i64 %3815, 6
  %3817 = load i64, i64* %PC.i727
  %3818 = add i64 %3817, 6
  store i64 %3818, i64* %PC.i727
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3820 = load i8, i8* %3819, align 1
  store i8 %3820, i8* %BRANCH_TAKEN, align 1
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3822 = icmp ne i8 %3820, 0
  %3823 = select i1 %3822, i64 %3814, i64 %3816
  store i64 %3823, i64* %3821, align 8
  store %struct.Memory* %loadMem_4134a5, %struct.Memory** %MEMORY
  %loadBr_4134a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4134a5 = icmp eq i8 %loadBr_4134a5, 1
  br i1 %cmpBr_4134a5, label %block_.L_4134b7, label %block_4134ab

block_4134ab:                                     ; preds = %block_4134a1
  %loadMem_4134ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3825 = getelementptr inbounds %struct.GPR, %struct.GPR* %3824, i32 0, i32 33
  %3826 = getelementptr inbounds %struct.Reg, %struct.Reg* %3825, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %3826 to i64*
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3828 = getelementptr inbounds %struct.GPR, %struct.GPR* %3827, i32 0, i32 1
  %3829 = getelementptr inbounds %struct.Reg, %struct.Reg* %3828, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %3829 to i64*
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 15
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %3832 to i64*
  %3833 = load i64, i64* %RBP.i726
  %3834 = sub i64 %3833, 100
  %3835 = load i64, i64* %PC.i724
  %3836 = add i64 %3835, 3
  store i64 %3836, i64* %PC.i724
  %3837 = inttoptr i64 %3834 to i32*
  %3838 = load i32, i32* %3837
  %3839 = zext i32 %3838 to i64
  store i64 %3839, i64* %RAX.i725, align 8
  store %struct.Memory* %loadMem_4134ab, %struct.Memory** %MEMORY
  %loadMem_4134ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3841 = getelementptr inbounds %struct.GPR, %struct.GPR* %3840, i32 0, i32 33
  %3842 = getelementptr inbounds %struct.Reg, %struct.Reg* %3841, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %3842 to i64*
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3844 = getelementptr inbounds %struct.GPR, %struct.GPR* %3843, i32 0, i32 1
  %3845 = getelementptr inbounds %struct.Reg, %struct.Reg* %3844, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %3845 to i64*
  %3846 = load i64, i64* %RAX.i723
  %3847 = load i64, i64* %PC.i722
  %3848 = add i64 %3847, 3
  store i64 %3848, i64* %PC.i722
  %3849 = and i64 %3846, 4294967295
  %3850 = shl i64 %3849, 1
  %3851 = trunc i64 %3850 to i32
  %3852 = icmp slt i32 %3851, 0
  %3853 = shl i32 %3851, 1
  %3854 = zext i32 %3853 to i64
  store i64 %3854, i64* %RAX.i723, align 8
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3856 = zext i1 %3852 to i8
  store i8 %3856, i8* %3855, align 1
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3858 = and i32 %3853, 254
  %3859 = call i32 @llvm.ctpop.i32(i32 %3858)
  %3860 = trunc i32 %3859 to i8
  %3861 = and i8 %3860, 1
  %3862 = xor i8 %3861, 1
  store i8 %3862, i8* %3857, align 1
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3863, align 1
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3865 = icmp eq i32 %3853, 0
  %3866 = zext i1 %3865 to i8
  store i8 %3866, i8* %3864, align 1
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3868 = lshr i32 %3853, 31
  %3869 = trunc i32 %3868 to i8
  store i8 %3869, i8* %3867, align 1
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3870, align 1
  store %struct.Memory* %loadMem_4134ae, %struct.Memory** %MEMORY
  %loadMem_4134b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 33
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %3873 to i64*
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3875 = getelementptr inbounds %struct.GPR, %struct.GPR* %3874, i32 0, i32 1
  %3876 = getelementptr inbounds %struct.Reg, %struct.Reg* %3875, i32 0, i32 0
  %RAX.i720 = bitcast %union.anon* %3876 to i64*
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3878 = getelementptr inbounds %struct.GPR, %struct.GPR* %3877, i32 0, i32 15
  %3879 = getelementptr inbounds %struct.Reg, %struct.Reg* %3878, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %3879 to i64*
  %3880 = load i64, i64* %RAX.i720
  %3881 = load i64, i64* %RBP.i721
  %3882 = sub i64 %3881, 104
  %3883 = load i64, i64* %PC.i719
  %3884 = add i64 %3883, 3
  store i64 %3884, i64* %PC.i719
  %3885 = trunc i64 %3880 to i32
  %3886 = inttoptr i64 %3882 to i32*
  %3887 = load i32, i32* %3886
  %3888 = add i32 %3887, %3885
  %3889 = zext i32 %3888 to i64
  store i64 %3889, i64* %RAX.i720, align 8
  %3890 = icmp ult i32 %3888, %3885
  %3891 = icmp ult i32 %3888, %3887
  %3892 = or i1 %3890, %3891
  %3893 = zext i1 %3892 to i8
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3893, i8* %3894, align 1
  %3895 = and i32 %3888, 255
  %3896 = call i32 @llvm.ctpop.i32(i32 %3895)
  %3897 = trunc i32 %3896 to i8
  %3898 = and i8 %3897, 1
  %3899 = xor i8 %3898, 1
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3899, i8* %3900, align 1
  %3901 = xor i32 %3887, %3885
  %3902 = xor i32 %3901, %3888
  %3903 = lshr i32 %3902, 4
  %3904 = trunc i32 %3903 to i8
  %3905 = and i8 %3904, 1
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3905, i8* %3906, align 1
  %3907 = icmp eq i32 %3888, 0
  %3908 = zext i1 %3907 to i8
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3908, i8* %3909, align 1
  %3910 = lshr i32 %3888, 31
  %3911 = trunc i32 %3910 to i8
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3911, i8* %3912, align 1
  %3913 = lshr i32 %3885, 31
  %3914 = lshr i32 %3887, 31
  %3915 = xor i32 %3910, %3913
  %3916 = xor i32 %3910, %3914
  %3917 = add i32 %3915, %3916
  %3918 = icmp eq i32 %3917, 2
  %3919 = zext i1 %3918 to i8
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3919, i8* %3920, align 1
  store %struct.Memory* %loadMem_4134b1, %struct.Memory** %MEMORY
  %loadMem_4134b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3922 = getelementptr inbounds %struct.GPR, %struct.GPR* %3921, i32 0, i32 33
  %3923 = getelementptr inbounds %struct.Reg, %struct.Reg* %3922, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %3923 to i64*
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3925 = getelementptr inbounds %struct.GPR, %struct.GPR* %3924, i32 0, i32 1
  %3926 = getelementptr inbounds %struct.Reg, %struct.Reg* %3925, i32 0, i32 0
  %EAX.i717 = bitcast %union.anon* %3926 to i32*
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3928 = getelementptr inbounds %struct.GPR, %struct.GPR* %3927, i32 0, i32 15
  %3929 = getelementptr inbounds %struct.Reg, %struct.Reg* %3928, i32 0, i32 0
  %RBP.i718 = bitcast %union.anon* %3929 to i64*
  %3930 = load i64, i64* %RBP.i718
  %3931 = sub i64 %3930, 84
  %3932 = load i32, i32* %EAX.i717
  %3933 = zext i32 %3932 to i64
  %3934 = load i64, i64* %PC.i716
  %3935 = add i64 %3934, 3
  store i64 %3935, i64* %PC.i716
  %3936 = inttoptr i64 %3931 to i32*
  store i32 %3932, i32* %3936
  store %struct.Memory* %loadMem_4134b4, %struct.Memory** %MEMORY
  br label %block_.L_4134b7

block_.L_4134b7:                                  ; preds = %block_4134ab, %block_4134a1
  %loadMem_4134b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3938 = getelementptr inbounds %struct.GPR, %struct.GPR* %3937, i32 0, i32 33
  %3939 = getelementptr inbounds %struct.Reg, %struct.Reg* %3938, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %3939 to i64*
  %3940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3941 = getelementptr inbounds %struct.GPR, %struct.GPR* %3940, i32 0, i32 15
  %3942 = getelementptr inbounds %struct.Reg, %struct.Reg* %3941, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %3942 to i64*
  %3943 = load i64, i64* %RBP.i715
  %3944 = sub i64 %3943, 136
  %3945 = load i64, i64* %PC.i714
  %3946 = add i64 %3945, 7
  store i64 %3946, i64* %PC.i714
  %3947 = inttoptr i64 %3944 to i32*
  %3948 = load i32, i32* %3947
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3949, align 1
  %3950 = and i32 %3948, 255
  %3951 = call i32 @llvm.ctpop.i32(i32 %3950)
  %3952 = trunc i32 %3951 to i8
  %3953 = and i8 %3952, 1
  %3954 = xor i8 %3953, 1
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3954, i8* %3955, align 1
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3956, align 1
  %3957 = icmp eq i32 %3948, 0
  %3958 = zext i1 %3957 to i8
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3958, i8* %3959, align 1
  %3960 = lshr i32 %3948, 31
  %3961 = trunc i32 %3960 to i8
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3961, i8* %3962, align 1
  %3963 = lshr i32 %3948, 31
  %3964 = xor i32 %3960, %3963
  %3965 = add i32 %3964, %3963
  %3966 = icmp eq i32 %3965, 2
  %3967 = zext i1 %3966 to i8
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3967, i8* %3968, align 1
  store %struct.Memory* %loadMem_4134b7, %struct.Memory** %MEMORY
  %loadMem_4134be = load %struct.Memory*, %struct.Memory** %MEMORY
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3970 = getelementptr inbounds %struct.GPR, %struct.GPR* %3969, i32 0, i32 33
  %3971 = getelementptr inbounds %struct.Reg, %struct.Reg* %3970, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %3971 to i64*
  %3972 = load i64, i64* %PC.i713
  %3973 = add i64 %3972, 18
  %3974 = load i64, i64* %PC.i713
  %3975 = add i64 %3974, 6
  %3976 = load i64, i64* %PC.i713
  %3977 = add i64 %3976, 6
  store i64 %3977, i64* %PC.i713
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3979 = load i8, i8* %3978, align 1
  store i8 %3979, i8* %BRANCH_TAKEN, align 1
  %3980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3981 = icmp ne i8 %3979, 0
  %3982 = select i1 %3981, i64 %3973, i64 %3975
  store i64 %3982, i64* %3980, align 8
  store %struct.Memory* %loadMem_4134be, %struct.Memory** %MEMORY
  %loadBr_4134be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4134be = icmp eq i8 %loadBr_4134be, 1
  br i1 %cmpBr_4134be, label %block_.L_4134d0, label %block_4134c4

block_4134c4:                                     ; preds = %block_.L_4134b7
  %loadMem_4134c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3984 = getelementptr inbounds %struct.GPR, %struct.GPR* %3983, i32 0, i32 33
  %3985 = getelementptr inbounds %struct.Reg, %struct.Reg* %3984, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %3985 to i64*
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3987 = getelementptr inbounds %struct.GPR, %struct.GPR* %3986, i32 0, i32 1
  %3988 = getelementptr inbounds %struct.Reg, %struct.Reg* %3987, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %3988 to i64*
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3990 = getelementptr inbounds %struct.GPR, %struct.GPR* %3989, i32 0, i32 15
  %3991 = getelementptr inbounds %struct.Reg, %struct.Reg* %3990, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %3991 to i64*
  %3992 = load i64, i64* %RBP.i712
  %3993 = sub i64 %3992, 124
  %3994 = load i64, i64* %PC.i710
  %3995 = add i64 %3994, 3
  store i64 %3995, i64* %PC.i710
  %3996 = inttoptr i64 %3993 to i32*
  %3997 = load i32, i32* %3996
  %3998 = zext i32 %3997 to i64
  store i64 %3998, i64* %RAX.i711, align 8
  store %struct.Memory* %loadMem_4134c4, %struct.Memory** %MEMORY
  %loadMem_4134c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 33
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %4001 to i64*
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4003 = getelementptr inbounds %struct.GPR, %struct.GPR* %4002, i32 0, i32 1
  %4004 = getelementptr inbounds %struct.Reg, %struct.Reg* %4003, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %4004 to i64*
  %4005 = load i64, i64* %RAX.i709
  %4006 = load i64, i64* %PC.i708
  %4007 = add i64 %4006, 3
  store i64 %4007, i64* %PC.i708
  %4008 = and i64 %4005, 4294967295
  %4009 = shl i64 %4008, 1
  %4010 = trunc i64 %4009 to i32
  %4011 = icmp slt i32 %4010, 0
  %4012 = shl i32 %4010, 1
  %4013 = zext i32 %4012 to i64
  store i64 %4013, i64* %RAX.i709, align 8
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4015 = zext i1 %4011 to i8
  store i8 %4015, i8* %4014, align 1
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4017 = and i32 %4012, 254
  %4018 = call i32 @llvm.ctpop.i32(i32 %4017)
  %4019 = trunc i32 %4018 to i8
  %4020 = and i8 %4019, 1
  %4021 = xor i8 %4020, 1
  store i8 %4021, i8* %4016, align 1
  %4022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4022, align 1
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4024 = icmp eq i32 %4012, 0
  %4025 = zext i1 %4024 to i8
  store i8 %4025, i8* %4023, align 1
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4027 = lshr i32 %4012, 31
  %4028 = trunc i32 %4027 to i8
  store i8 %4028, i8* %4026, align 1
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4029, align 1
  store %struct.Memory* %loadMem_4134c7, %struct.Memory** %MEMORY
  %loadMem_4134ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 33
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %4032 to i64*
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 1
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %RAX.i706 = bitcast %union.anon* %4035 to i64*
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4037 = getelementptr inbounds %struct.GPR, %struct.GPR* %4036, i32 0, i32 15
  %4038 = getelementptr inbounds %struct.Reg, %struct.Reg* %4037, i32 0, i32 0
  %RBP.i707 = bitcast %union.anon* %4038 to i64*
  %4039 = load i64, i64* %RAX.i706
  %4040 = load i64, i64* %RBP.i707
  %4041 = sub i64 %4040, 128
  %4042 = load i64, i64* %PC.i705
  %4043 = add i64 %4042, 3
  store i64 %4043, i64* %PC.i705
  %4044 = trunc i64 %4039 to i32
  %4045 = inttoptr i64 %4041 to i32*
  %4046 = load i32, i32* %4045
  %4047 = add i32 %4046, %4044
  %4048 = zext i32 %4047 to i64
  store i64 %4048, i64* %RAX.i706, align 8
  %4049 = icmp ult i32 %4047, %4044
  %4050 = icmp ult i32 %4047, %4046
  %4051 = or i1 %4049, %4050
  %4052 = zext i1 %4051 to i8
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4052, i8* %4053, align 1
  %4054 = and i32 %4047, 255
  %4055 = call i32 @llvm.ctpop.i32(i32 %4054)
  %4056 = trunc i32 %4055 to i8
  %4057 = and i8 %4056, 1
  %4058 = xor i8 %4057, 1
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4058, i8* %4059, align 1
  %4060 = xor i32 %4046, %4044
  %4061 = xor i32 %4060, %4047
  %4062 = lshr i32 %4061, 4
  %4063 = trunc i32 %4062 to i8
  %4064 = and i8 %4063, 1
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4064, i8* %4065, align 1
  %4066 = icmp eq i32 %4047, 0
  %4067 = zext i1 %4066 to i8
  %4068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4067, i8* %4068, align 1
  %4069 = lshr i32 %4047, 31
  %4070 = trunc i32 %4069 to i8
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4070, i8* %4071, align 1
  %4072 = lshr i32 %4044, 31
  %4073 = lshr i32 %4046, 31
  %4074 = xor i32 %4069, %4072
  %4075 = xor i32 %4069, %4073
  %4076 = add i32 %4074, %4075
  %4077 = icmp eq i32 %4076, 2
  %4078 = zext i1 %4077 to i8
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4078, i8* %4079, align 1
  store %struct.Memory* %loadMem_4134ca, %struct.Memory** %MEMORY
  %loadMem_4134cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4081 = getelementptr inbounds %struct.GPR, %struct.GPR* %4080, i32 0, i32 33
  %4082 = getelementptr inbounds %struct.Reg, %struct.Reg* %4081, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4082 to i64*
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4084 = getelementptr inbounds %struct.GPR, %struct.GPR* %4083, i32 0, i32 1
  %4085 = getelementptr inbounds %struct.Reg, %struct.Reg* %4084, i32 0, i32 0
  %EAX.i703 = bitcast %union.anon* %4085 to i32*
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4087 = getelementptr inbounds %struct.GPR, %struct.GPR* %4086, i32 0, i32 15
  %4088 = getelementptr inbounds %struct.Reg, %struct.Reg* %4087, i32 0, i32 0
  %RBP.i704 = bitcast %union.anon* %4088 to i64*
  %4089 = load i64, i64* %RBP.i704
  %4090 = sub i64 %4089, 88
  %4091 = load i32, i32* %EAX.i703
  %4092 = zext i32 %4091 to i64
  %4093 = load i64, i64* %PC.i702
  %4094 = add i64 %4093, 3
  store i64 %4094, i64* %PC.i702
  %4095 = inttoptr i64 %4090 to i32*
  store i32 %4091, i32* %4095
  store %struct.Memory* %loadMem_4134cd, %struct.Memory** %MEMORY
  br label %block_.L_4134d0

block_.L_4134d0:                                  ; preds = %block_4134c4, %block_.L_4134b7
  %loadMem_4134d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4097 = getelementptr inbounds %struct.GPR, %struct.GPR* %4096, i32 0, i32 33
  %4098 = getelementptr inbounds %struct.Reg, %struct.Reg* %4097, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %4098 to i64*
  %4099 = load i64, i64* %PC.i701
  %4100 = add i64 %4099, 5
  %4101 = load i64, i64* %PC.i701
  %4102 = add i64 %4101, 5
  store i64 %4102, i64* %PC.i701
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4100, i64* %4103, align 8
  store %struct.Memory* %loadMem_4134d0, %struct.Memory** %MEMORY
  br label %block_.L_4134d5

block_.L_4134d5:                                  ; preds = %block_.L_4134d0, %block_.L_413450
  %loadMem_4134d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 33
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %4106 to i64*
  %4107 = load i64, i64* %PC.i700
  %4108 = add i64 %4107, 153
  %4109 = load i64, i64* %PC.i700
  %4110 = add i64 %4109, 5
  store i64 %4110, i64* %PC.i700
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4108, i64* %4111, align 8
  store %struct.Memory* %loadMem_4134d5, %struct.Memory** %MEMORY
  br label %block_.L_41356e

block_.L_4134da:                                  ; preds = %block_413446
  %loadMem_4134da = load %struct.Memory*, %struct.Memory** %MEMORY
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4113 = getelementptr inbounds %struct.GPR, %struct.GPR* %4112, i32 0, i32 33
  %4114 = getelementptr inbounds %struct.Reg, %struct.Reg* %4113, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %4114 to i64*
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 5
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %RCX.i699 = bitcast %union.anon* %4117 to i64*
  %4118 = load i64, i64* %PC.i698
  %4119 = add i64 %4118, 5
  store i64 %4119, i64* %PC.i698
  store i64 4294967295, i64* %RCX.i699, align 8
  store %struct.Memory* %loadMem_4134da, %struct.Memory** %MEMORY
  %loadMem_4134df = load %struct.Memory*, %struct.Memory** %MEMORY
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4121 = getelementptr inbounds %struct.GPR, %struct.GPR* %4120, i32 0, i32 33
  %4122 = getelementptr inbounds %struct.Reg, %struct.Reg* %4121, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %4122 to i64*
  %4123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4124 = getelementptr inbounds %struct.GPR, %struct.GPR* %4123, i32 0, i32 17
  %4125 = getelementptr inbounds %struct.Reg, %struct.Reg* %4124, i32 0, i32 0
  %R8D.i697 = bitcast %union.anon* %4125 to i32*
  %4126 = bitcast i32* %R8D.i697 to i64*
  %4127 = load i32, i32* %R8D.i697
  %4128 = zext i32 %4127 to i64
  %4129 = load i32, i32* %R8D.i697
  %4130 = zext i32 %4129 to i64
  %4131 = load i64, i64* %PC.i696
  %4132 = add i64 %4131, 3
  store i64 %4132, i64* %PC.i696
  %4133 = xor i64 %4130, %4128
  %4134 = trunc i64 %4133 to i32
  %4135 = and i64 %4133, 4294967295
  store i64 %4135, i64* %4126, align 8
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4136, align 1
  %4137 = and i32 %4134, 255
  %4138 = call i32 @llvm.ctpop.i32(i32 %4137)
  %4139 = trunc i32 %4138 to i8
  %4140 = and i8 %4139, 1
  %4141 = xor i8 %4140, 1
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4141, i8* %4142, align 1
  %4143 = icmp eq i32 %4134, 0
  %4144 = zext i1 %4143 to i8
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4144, i8* %4145, align 1
  %4146 = lshr i32 %4134, 31
  %4147 = trunc i32 %4146 to i8
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4147, i8* %4148, align 1
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4149, align 1
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4150, align 1
  store %struct.Memory* %loadMem_4134df, %struct.Memory** %MEMORY
  %loadMem_4134e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 33
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %4153 to i64*
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4155 = getelementptr inbounds %struct.GPR, %struct.GPR* %4154, i32 0, i32 15
  %4156 = getelementptr inbounds %struct.Reg, %struct.Reg* %4155, i32 0, i32 0
  %RBP.i694 = bitcast %union.anon* %4156 to i64*
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4158 = getelementptr inbounds %struct.GPR, %struct.GPR* %4157, i32 0, i32 19
  %4159 = getelementptr inbounds %struct.Reg, %struct.Reg* %4158, i32 0, i32 0
  %R9.i695 = bitcast %union.anon* %4159 to i64*
  %4160 = load i64, i64* %RBP.i694
  %4161 = sub i64 %4160, 112
  %4162 = load i64, i64* %PC.i693
  %4163 = add i64 %4162, 4
  store i64 %4163, i64* %PC.i693
  store i64 %4161, i64* %R9.i695, align 8
  store %struct.Memory* %loadMem_4134e2, %struct.Memory** %MEMORY
  %loadMem_4134e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4165 = getelementptr inbounds %struct.GPR, %struct.GPR* %4164, i32 0, i32 33
  %4166 = getelementptr inbounds %struct.Reg, %struct.Reg* %4165, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %4166 to i64*
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4168 = getelementptr inbounds %struct.GPR, %struct.GPR* %4167, i32 0, i32 1
  %4169 = getelementptr inbounds %struct.Reg, %struct.Reg* %4168, i32 0, i32 0
  %RAX.i692 = bitcast %union.anon* %4169 to i64*
  %4170 = load i64, i64* %PC.i691
  %4171 = add i64 %4170, 8
  store i64 %4171, i64* %PC.i691
  %4172 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4172, i64* %RAX.i692, align 8
  store %struct.Memory* %loadMem_4134e6, %struct.Memory** %MEMORY
  %loadMem_4134ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 33
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %4175 to i64*
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 1
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %RAX.i689 = bitcast %union.anon* %4178 to i64*
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 11
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %RDI.i690 = bitcast %union.anon* %4181 to i64*
  %4182 = load i64, i64* %RAX.i689
  %4183 = add i64 %4182, 12
  %4184 = load i64, i64* %PC.i688
  %4185 = add i64 %4184, 3
  store i64 %4185, i64* %PC.i688
  %4186 = inttoptr i64 %4183 to i32*
  %4187 = load i32, i32* %4186
  %4188 = zext i32 %4187 to i64
  store i64 %4188, i64* %RDI.i690, align 8
  store %struct.Memory* %loadMem_4134ee, %struct.Memory** %MEMORY
  %loadMem_4134f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 33
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %4191 to i64*
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4193 = getelementptr inbounds %struct.GPR, %struct.GPR* %4192, i32 0, i32 9
  %4194 = getelementptr inbounds %struct.Reg, %struct.Reg* %4193, i32 0, i32 0
  %RSI.i686 = bitcast %union.anon* %4194 to i64*
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4196 = getelementptr inbounds %struct.GPR, %struct.GPR* %4195, i32 0, i32 15
  %4197 = getelementptr inbounds %struct.Reg, %struct.Reg* %4196, i32 0, i32 0
  %RBP.i687 = bitcast %union.anon* %4197 to i64*
  %4198 = load i64, i64* %RBP.i687
  %4199 = sub i64 %4198, 60
  %4200 = load i64, i64* %PC.i685
  %4201 = add i64 %4200, 3
  store i64 %4201, i64* %PC.i685
  %4202 = inttoptr i64 %4199 to i32*
  %4203 = load i32, i32* %4202
  %4204 = zext i32 %4203 to i64
  store i64 %4204, i64* %RSI.i686, align 8
  store %struct.Memory* %loadMem_4134f1, %struct.Memory** %MEMORY
  %loadMem_4134f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 33
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %4207 to i64*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 7
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %RDX.i683 = bitcast %union.anon* %4210 to i64*
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4212 = getelementptr inbounds %struct.GPR, %struct.GPR* %4211, i32 0, i32 15
  %4213 = getelementptr inbounds %struct.Reg, %struct.Reg* %4212, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %4213 to i64*
  %4214 = load i64, i64* %RBP.i684
  %4215 = sub i64 %4214, 56
  %4216 = load i64, i64* %PC.i682
  %4217 = add i64 %4216, 3
  store i64 %4217, i64* %PC.i682
  %4218 = inttoptr i64 %4215 to i32*
  %4219 = load i32, i32* %4218
  %4220 = zext i32 %4219 to i64
  store i64 %4220, i64* %RDX.i683, align 8
  store %struct.Memory* %loadMem_4134f4, %struct.Memory** %MEMORY
  %loadMem1_4134f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 33
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %4223 to i64*
  %4224 = load i64, i64* %PC.i681
  %4225 = add i64 %4224, 228841
  %4226 = load i64, i64* %PC.i681
  %4227 = add i64 %4226, 5
  %4228 = load i64, i64* %PC.i681
  %4229 = add i64 %4228, 5
  store i64 %4229, i64* %PC.i681
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4231 = load i64, i64* %4230, align 8
  %4232 = add i64 %4231, -8
  %4233 = inttoptr i64 %4232 to i64*
  store i64 %4227, i64* %4233
  store i64 %4232, i64* %4230, align 8
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4225, i64* %4234, align 8
  store %struct.Memory* %loadMem1_4134f7, %struct.Memory** %MEMORY
  %loadMem2_4134f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4134f7 = load i64, i64* %3
  %call2_4134f7 = call %struct.Memory* @sub_44b2e0.getChroma4x4Neighbour(%struct.State* %0, i64 %loadPC_4134f7, %struct.Memory* %loadMem2_4134f7)
  store %struct.Memory* %call2_4134f7, %struct.Memory** %MEMORY
  %loadMem_4134fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4236 = getelementptr inbounds %struct.GPR, %struct.GPR* %4235, i32 0, i32 33
  %4237 = getelementptr inbounds %struct.Reg, %struct.Reg* %4236, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %4237 to i64*
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 5
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %ECX.i679 = bitcast %union.anon* %4240 to i32*
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4242 = getelementptr inbounds %struct.GPR, %struct.GPR* %4241, i32 0, i32 5
  %4243 = getelementptr inbounds %struct.Reg, %struct.Reg* %4242, i32 0, i32 0
  %RCX.i680 = bitcast %union.anon* %4243 to i64*
  %4244 = load i64, i64* %RCX.i680
  %4245 = load i32, i32* %ECX.i679
  %4246 = zext i32 %4245 to i64
  %4247 = load i64, i64* %PC.i678
  %4248 = add i64 %4247, 2
  store i64 %4248, i64* %PC.i678
  %4249 = xor i64 %4246, %4244
  %4250 = trunc i64 %4249 to i32
  %4251 = and i64 %4249, 4294967295
  store i64 %4251, i64* %RCX.i680, align 8
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4252, align 1
  %4253 = and i32 %4250, 255
  %4254 = call i32 @llvm.ctpop.i32(i32 %4253)
  %4255 = trunc i32 %4254 to i8
  %4256 = and i8 %4255, 1
  %4257 = xor i8 %4256, 1
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4257, i8* %4258, align 1
  %4259 = icmp eq i32 %4250, 0
  %4260 = zext i1 %4259 to i8
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4260, i8* %4261, align 1
  %4262 = lshr i32 %4250, 31
  %4263 = trunc i32 %4262 to i8
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4263, i8* %4264, align 1
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4265, align 1
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4266, align 1
  store %struct.Memory* %loadMem_4134fc, %struct.Memory** %MEMORY
  %loadMem_4134fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4268 = getelementptr inbounds %struct.GPR, %struct.GPR* %4267, i32 0, i32 33
  %4269 = getelementptr inbounds %struct.Reg, %struct.Reg* %4268, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %4269 to i64*
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4271 = getelementptr inbounds %struct.GPR, %struct.GPR* %4270, i32 0, i32 17
  %4272 = getelementptr inbounds %struct.Reg, %struct.Reg* %4271, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %4272 to i32*
  %4273 = bitcast i32* %R8D.i to i64*
  %4274 = load i64, i64* %PC.i677
  %4275 = add i64 %4274, 6
  store i64 %4275, i64* %PC.i677
  store i64 4294967295, i64* %4273, align 8
  store %struct.Memory* %loadMem_4134fe, %struct.Memory** %MEMORY
  %loadMem_413504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4277 = getelementptr inbounds %struct.GPR, %struct.GPR* %4276, i32 0, i32 33
  %4278 = getelementptr inbounds %struct.Reg, %struct.Reg* %4277, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %4278 to i64*
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4280 = getelementptr inbounds %struct.GPR, %struct.GPR* %4279, i32 0, i32 15
  %4281 = getelementptr inbounds %struct.Reg, %struct.Reg* %4280, i32 0, i32 0
  %RBP.i676 = bitcast %union.anon* %4281 to i64*
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4283 = getelementptr inbounds %struct.GPR, %struct.GPR* %4282, i32 0, i32 19
  %4284 = getelementptr inbounds %struct.Reg, %struct.Reg* %4283, i32 0, i32 0
  %R9.i = bitcast %union.anon* %4284 to i64*
  %4285 = load i64, i64* %RBP.i676
  %4286 = sub i64 %4285, 136
  %4287 = load i64, i64* %PC.i675
  %4288 = add i64 %4287, 7
  store i64 %4288, i64* %PC.i675
  store i64 %4286, i64* %R9.i, align 8
  store %struct.Memory* %loadMem_413504, %struct.Memory** %MEMORY
  %loadMem_41350b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 33
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %4291 to i64*
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4293 = getelementptr inbounds %struct.GPR, %struct.GPR* %4292, i32 0, i32 1
  %4294 = getelementptr inbounds %struct.Reg, %struct.Reg* %4293, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %4294 to i64*
  %4295 = load i64, i64* %PC.i673
  %4296 = add i64 %4295, 8
  store i64 %4296, i64* %PC.i673
  %4297 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4297, i64* %RAX.i674, align 8
  store %struct.Memory* %loadMem_41350b, %struct.Memory** %MEMORY
  %loadMem_413513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4299 = getelementptr inbounds %struct.GPR, %struct.GPR* %4298, i32 0, i32 33
  %4300 = getelementptr inbounds %struct.Reg, %struct.Reg* %4299, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %4300 to i64*
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4302 = getelementptr inbounds %struct.GPR, %struct.GPR* %4301, i32 0, i32 1
  %4303 = getelementptr inbounds %struct.Reg, %struct.Reg* %4302, i32 0, i32 0
  %RAX.i671 = bitcast %union.anon* %4303 to i64*
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4305 = getelementptr inbounds %struct.GPR, %struct.GPR* %4304, i32 0, i32 11
  %4306 = getelementptr inbounds %struct.Reg, %struct.Reg* %4305, i32 0, i32 0
  %RDI.i672 = bitcast %union.anon* %4306 to i64*
  %4307 = load i64, i64* %RAX.i671
  %4308 = add i64 %4307, 12
  %4309 = load i64, i64* %PC.i670
  %4310 = add i64 %4309, 3
  store i64 %4310, i64* %PC.i670
  %4311 = inttoptr i64 %4308 to i32*
  %4312 = load i32, i32* %4311
  %4313 = zext i32 %4312 to i64
  store i64 %4313, i64* %RDI.i672, align 8
  store %struct.Memory* %loadMem_413513, %struct.Memory** %MEMORY
  %loadMem_413516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4315 = getelementptr inbounds %struct.GPR, %struct.GPR* %4314, i32 0, i32 33
  %4316 = getelementptr inbounds %struct.Reg, %struct.Reg* %4315, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %4316 to i64*
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4318 = getelementptr inbounds %struct.GPR, %struct.GPR* %4317, i32 0, i32 9
  %4319 = getelementptr inbounds %struct.Reg, %struct.Reg* %4318, i32 0, i32 0
  %RSI.i668 = bitcast %union.anon* %4319 to i64*
  %4320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4321 = getelementptr inbounds %struct.GPR, %struct.GPR* %4320, i32 0, i32 15
  %4322 = getelementptr inbounds %struct.Reg, %struct.Reg* %4321, i32 0, i32 0
  %RBP.i669 = bitcast %union.anon* %4322 to i64*
  %4323 = load i64, i64* %RBP.i669
  %4324 = sub i64 %4323, 60
  %4325 = load i64, i64* %PC.i667
  %4326 = add i64 %4325, 3
  store i64 %4326, i64* %PC.i667
  %4327 = inttoptr i64 %4324 to i32*
  %4328 = load i32, i32* %4327
  %4329 = zext i32 %4328 to i64
  store i64 %4329, i64* %RSI.i668, align 8
  store %struct.Memory* %loadMem_413516, %struct.Memory** %MEMORY
  %loadMem_413519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4331 = getelementptr inbounds %struct.GPR, %struct.GPR* %4330, i32 0, i32 33
  %4332 = getelementptr inbounds %struct.Reg, %struct.Reg* %4331, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4332 to i64*
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4334 = getelementptr inbounds %struct.GPR, %struct.GPR* %4333, i32 0, i32 7
  %4335 = getelementptr inbounds %struct.Reg, %struct.Reg* %4334, i32 0, i32 0
  %RDX.i665 = bitcast %union.anon* %4335 to i64*
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4337 = getelementptr inbounds %struct.GPR, %struct.GPR* %4336, i32 0, i32 15
  %4338 = getelementptr inbounds %struct.Reg, %struct.Reg* %4337, i32 0, i32 0
  %RBP.i666 = bitcast %union.anon* %4338 to i64*
  %4339 = load i64, i64* %RBP.i666
  %4340 = sub i64 %4339, 56
  %4341 = load i64, i64* %PC.i664
  %4342 = add i64 %4341, 3
  store i64 %4342, i64* %PC.i664
  %4343 = inttoptr i64 %4340 to i32*
  %4344 = load i32, i32* %4343
  %4345 = zext i32 %4344 to i64
  store i64 %4345, i64* %RDX.i665, align 8
  store %struct.Memory* %loadMem_413519, %struct.Memory** %MEMORY
  %loadMem1_41351c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4347 = getelementptr inbounds %struct.GPR, %struct.GPR* %4346, i32 0, i32 33
  %4348 = getelementptr inbounds %struct.Reg, %struct.Reg* %4347, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %4348 to i64*
  %4349 = load i64, i64* %PC.i663
  %4350 = add i64 %4349, 228804
  %4351 = load i64, i64* %PC.i663
  %4352 = add i64 %4351, 5
  %4353 = load i64, i64* %PC.i663
  %4354 = add i64 %4353, 5
  store i64 %4354, i64* %PC.i663
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4356 = load i64, i64* %4355, align 8
  %4357 = add i64 %4356, -8
  %4358 = inttoptr i64 %4357 to i64*
  store i64 %4352, i64* %4358
  store i64 %4357, i64* %4355, align 8
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4350, i64* %4359, align 8
  store %struct.Memory* %loadMem1_41351c, %struct.Memory** %MEMORY
  %loadMem2_41351c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41351c = load i64, i64* %3
  %call2_41351c = call %struct.Memory* @sub_44b2e0.getChroma4x4Neighbour(%struct.State* %0, i64 %loadPC_41351c, %struct.Memory* %loadMem2_41351c)
  store %struct.Memory* %call2_41351c, %struct.Memory** %MEMORY
  %loadMem_413521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4361 = getelementptr inbounds %struct.GPR, %struct.GPR* %4360, i32 0, i32 33
  %4362 = getelementptr inbounds %struct.Reg, %struct.Reg* %4361, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4362 to i64*
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4364 = getelementptr inbounds %struct.GPR, %struct.GPR* %4363, i32 0, i32 15
  %4365 = getelementptr inbounds %struct.Reg, %struct.Reg* %4364, i32 0, i32 0
  %RBP.i662 = bitcast %union.anon* %4365 to i64*
  %4366 = load i64, i64* %RBP.i662
  %4367 = sub i64 %4366, 36
  %4368 = load i64, i64* %PC.i661
  %4369 = add i64 %4368, 4
  store i64 %4369, i64* %PC.i661
  %4370 = inttoptr i64 %4367 to i32*
  %4371 = load i32, i32* %4370
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4372, align 1
  %4373 = and i32 %4371, 255
  %4374 = call i32 @llvm.ctpop.i32(i32 %4373)
  %4375 = trunc i32 %4374 to i8
  %4376 = and i8 %4375, 1
  %4377 = xor i8 %4376, 1
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4377, i8* %4378, align 1
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4379, align 1
  %4380 = icmp eq i32 %4371, 0
  %4381 = zext i1 %4380 to i8
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4381, i8* %4382, align 1
  %4383 = lshr i32 %4371, 31
  %4384 = trunc i32 %4383 to i8
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4384, i8* %4385, align 1
  %4386 = lshr i32 %4371, 31
  %4387 = xor i32 %4383, %4386
  %4388 = add i32 %4387, %4386
  %4389 = icmp eq i32 %4388, 2
  %4390 = zext i1 %4389 to i8
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4390, i8* %4391, align 1
  store %struct.Memory* %loadMem_413521, %struct.Memory** %MEMORY
  %loadMem_413525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 33
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %4394 to i64*
  %4395 = load i64, i64* %PC.i660
  %4396 = add i64 %4395, 16
  %4397 = load i64, i64* %PC.i660
  %4398 = add i64 %4397, 6
  %4399 = load i64, i64* %PC.i660
  %4400 = add i64 %4399, 6
  store i64 %4400, i64* %PC.i660
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4402 = load i8, i8* %4401, align 1
  %4403 = icmp eq i8 %4402, 0
  %4404 = zext i1 %4403 to i8
  store i8 %4404, i8* %BRANCH_TAKEN, align 1
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4406 = select i1 %4403, i64 %4396, i64 %4398
  store i64 %4406, i64* %4405, align 8
  store %struct.Memory* %loadMem_413525, %struct.Memory** %MEMORY
  %loadBr_413525 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413525 = icmp eq i8 %loadBr_413525, 1
  br i1 %cmpBr_413525, label %block_.L_413535, label %block_41352b

block_41352b:                                     ; preds = %block_.L_4134da
  %loadMem_41352b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4408 = getelementptr inbounds %struct.GPR, %struct.GPR* %4407, i32 0, i32 33
  %4409 = getelementptr inbounds %struct.Reg, %struct.Reg* %4408, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4409 to i64*
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4411 = getelementptr inbounds %struct.GPR, %struct.GPR* %4410, i32 0, i32 15
  %4412 = getelementptr inbounds %struct.Reg, %struct.Reg* %4411, i32 0, i32 0
  %RBP.i659 = bitcast %union.anon* %4412 to i64*
  %4413 = load i64, i64* %RBP.i659
  %4414 = sub i64 %4413, 40
  %4415 = load i64, i64* %PC.i658
  %4416 = add i64 %4415, 4
  store i64 %4416, i64* %PC.i658
  %4417 = inttoptr i64 %4414 to i32*
  %4418 = load i32, i32* %4417
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4419, align 1
  %4420 = and i32 %4418, 255
  %4421 = call i32 @llvm.ctpop.i32(i32 %4420)
  %4422 = trunc i32 %4421 to i8
  %4423 = and i8 %4422, 1
  %4424 = xor i8 %4423, 1
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4424, i8* %4425, align 1
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4426, align 1
  %4427 = icmp eq i32 %4418, 0
  %4428 = zext i1 %4427 to i8
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4428, i8* %4429, align 1
  %4430 = lshr i32 %4418, 31
  %4431 = trunc i32 %4430 to i8
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4431, i8* %4432, align 1
  %4433 = lshr i32 %4418, 31
  %4434 = xor i32 %4430, %4433
  %4435 = add i32 %4434, %4433
  %4436 = icmp eq i32 %4435, 2
  %4437 = zext i1 %4436 to i8
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4437, i8* %4438, align 1
  store %struct.Memory* %loadMem_41352b, %struct.Memory** %MEMORY
  %loadMem_41352f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4440 = getelementptr inbounds %struct.GPR, %struct.GPR* %4439, i32 0, i32 33
  %4441 = getelementptr inbounds %struct.Reg, %struct.Reg* %4440, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %4441 to i64*
  %4442 = load i64, i64* %PC.i657
  %4443 = add i64 %4442, 58
  %4444 = load i64, i64* %PC.i657
  %4445 = add i64 %4444, 6
  %4446 = load i64, i64* %PC.i657
  %4447 = add i64 %4446, 6
  store i64 %4447, i64* %PC.i657
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4449 = load i8, i8* %4448, align 1
  store i8 %4449, i8* %BRANCH_TAKEN, align 1
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4451 = icmp ne i8 %4449, 0
  %4452 = select i1 %4451, i64 %4443, i64 %4445
  store i64 %4452, i64* %4450, align 8
  store %struct.Memory* %loadMem_41352f, %struct.Memory** %MEMORY
  %loadBr_41352f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41352f = icmp eq i8 %loadBr_41352f, 1
  br i1 %cmpBr_41352f, label %block_.L_413569, label %block_.L_413535

block_.L_413535:                                  ; preds = %block_41352b, %block_.L_4134da
  %loadMem_413535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4454 = getelementptr inbounds %struct.GPR, %struct.GPR* %4453, i32 0, i32 33
  %4455 = getelementptr inbounds %struct.Reg, %struct.Reg* %4454, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %4455 to i64*
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4457 = getelementptr inbounds %struct.GPR, %struct.GPR* %4456, i32 0, i32 15
  %4458 = getelementptr inbounds %struct.Reg, %struct.Reg* %4457, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %4458 to i64*
  %4459 = load i64, i64* %RBP.i656
  %4460 = sub i64 %4459, 112
  %4461 = load i64, i64* %PC.i655
  %4462 = add i64 %4461, 4
  store i64 %4462, i64* %PC.i655
  %4463 = inttoptr i64 %4460 to i32*
  %4464 = load i32, i32* %4463
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4465, align 1
  %4466 = and i32 %4464, 255
  %4467 = call i32 @llvm.ctpop.i32(i32 %4466)
  %4468 = trunc i32 %4467 to i8
  %4469 = and i8 %4468, 1
  %4470 = xor i8 %4469, 1
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4470, i8* %4471, align 1
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4472, align 1
  %4473 = icmp eq i32 %4464, 0
  %4474 = zext i1 %4473 to i8
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4474, i8* %4475, align 1
  %4476 = lshr i32 %4464, 31
  %4477 = trunc i32 %4476 to i8
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4477, i8* %4478, align 1
  %4479 = lshr i32 %4464, 31
  %4480 = xor i32 %4476, %4479
  %4481 = add i32 %4480, %4479
  %4482 = icmp eq i32 %4481, 2
  %4483 = zext i1 %4482 to i8
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4483, i8* %4484, align 1
  store %struct.Memory* %loadMem_413535, %struct.Memory** %MEMORY
  %loadMem_413539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 33
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %4487 to i64*
  %4488 = load i64, i64* %PC.i654
  %4489 = add i64 %4488, 18
  %4490 = load i64, i64* %PC.i654
  %4491 = add i64 %4490, 6
  %4492 = load i64, i64* %PC.i654
  %4493 = add i64 %4492, 6
  store i64 %4493, i64* %PC.i654
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4495 = load i8, i8* %4494, align 1
  store i8 %4495, i8* %BRANCH_TAKEN, align 1
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4497 = icmp ne i8 %4495, 0
  %4498 = select i1 %4497, i64 %4489, i64 %4491
  store i64 %4498, i64* %4496, align 8
  store %struct.Memory* %loadMem_413539, %struct.Memory** %MEMORY
  %loadBr_413539 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413539 = icmp eq i8 %loadBr_413539, 1
  br i1 %cmpBr_413539, label %block_.L_41354b, label %block_41353f

block_41353f:                                     ; preds = %block_.L_413535
  %loadMem_41353f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4500 = getelementptr inbounds %struct.GPR, %struct.GPR* %4499, i32 0, i32 33
  %4501 = getelementptr inbounds %struct.Reg, %struct.Reg* %4500, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %4501 to i64*
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4503 = getelementptr inbounds %struct.GPR, %struct.GPR* %4502, i32 0, i32 1
  %4504 = getelementptr inbounds %struct.Reg, %struct.Reg* %4503, i32 0, i32 0
  %RAX.i652 = bitcast %union.anon* %4504 to i64*
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4506 = getelementptr inbounds %struct.GPR, %struct.GPR* %4505, i32 0, i32 15
  %4507 = getelementptr inbounds %struct.Reg, %struct.Reg* %4506, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %4507 to i64*
  %4508 = load i64, i64* %RBP.i653
  %4509 = sub i64 %4508, 100
  %4510 = load i64, i64* %PC.i651
  %4511 = add i64 %4510, 3
  store i64 %4511, i64* %PC.i651
  %4512 = inttoptr i64 %4509 to i32*
  %4513 = load i32, i32* %4512
  %4514 = zext i32 %4513 to i64
  store i64 %4514, i64* %RAX.i652, align 8
  store %struct.Memory* %loadMem_41353f, %struct.Memory** %MEMORY
  %loadMem_413542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4516 = getelementptr inbounds %struct.GPR, %struct.GPR* %4515, i32 0, i32 33
  %4517 = getelementptr inbounds %struct.Reg, %struct.Reg* %4516, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %4517 to i64*
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4519 = getelementptr inbounds %struct.GPR, %struct.GPR* %4518, i32 0, i32 1
  %4520 = getelementptr inbounds %struct.Reg, %struct.Reg* %4519, i32 0, i32 0
  %RAX.i650 = bitcast %union.anon* %4520 to i64*
  %4521 = load i64, i64* %RAX.i650
  %4522 = load i64, i64* %PC.i649
  %4523 = add i64 %4522, 2
  store i64 %4523, i64* %PC.i649
  %4524 = trunc i64 %4521 to i32
  %4525 = shl i32 %4524, 1
  %4526 = icmp slt i32 %4524, 0
  %4527 = icmp slt i32 %4525, 0
  %4528 = xor i1 %4526, %4527
  %4529 = zext i32 %4525 to i64
  store i64 %4529, i64* %RAX.i650, align 8
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4531 = zext i1 %4526 to i8
  store i8 %4531, i8* %4530, align 1
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4533 = and i32 %4525, 254
  %4534 = call i32 @llvm.ctpop.i32(i32 %4533)
  %4535 = trunc i32 %4534 to i8
  %4536 = and i8 %4535, 1
  %4537 = xor i8 %4536, 1
  store i8 %4537, i8* %4532, align 1
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4538, align 1
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4540 = icmp eq i32 %4525, 0
  %4541 = zext i1 %4540 to i8
  store i8 %4541, i8* %4539, align 1
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4543 = lshr i32 %4525, 31
  %4544 = trunc i32 %4543 to i8
  store i8 %4544, i8* %4542, align 1
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4546 = zext i1 %4528 to i8
  store i8 %4546, i8* %4545, align 1
  store %struct.Memory* %loadMem_413542, %struct.Memory** %MEMORY
  %loadMem_413545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4548 = getelementptr inbounds %struct.GPR, %struct.GPR* %4547, i32 0, i32 33
  %4549 = getelementptr inbounds %struct.Reg, %struct.Reg* %4548, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %4549 to i64*
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4551 = getelementptr inbounds %struct.GPR, %struct.GPR* %4550, i32 0, i32 1
  %4552 = getelementptr inbounds %struct.Reg, %struct.Reg* %4551, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %4552 to i64*
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 15
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %RBP.i648 = bitcast %union.anon* %4555 to i64*
  %4556 = load i64, i64* %RAX.i647
  %4557 = load i64, i64* %RBP.i648
  %4558 = sub i64 %4557, 104
  %4559 = load i64, i64* %PC.i646
  %4560 = add i64 %4559, 3
  store i64 %4560, i64* %PC.i646
  %4561 = trunc i64 %4556 to i32
  %4562 = inttoptr i64 %4558 to i32*
  %4563 = load i32, i32* %4562
  %4564 = add i32 %4563, %4561
  %4565 = zext i32 %4564 to i64
  store i64 %4565, i64* %RAX.i647, align 8
  %4566 = icmp ult i32 %4564, %4561
  %4567 = icmp ult i32 %4564, %4563
  %4568 = or i1 %4566, %4567
  %4569 = zext i1 %4568 to i8
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4569, i8* %4570, align 1
  %4571 = and i32 %4564, 255
  %4572 = call i32 @llvm.ctpop.i32(i32 %4571)
  %4573 = trunc i32 %4572 to i8
  %4574 = and i8 %4573, 1
  %4575 = xor i8 %4574, 1
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4575, i8* %4576, align 1
  %4577 = xor i32 %4563, %4561
  %4578 = xor i32 %4577, %4564
  %4579 = lshr i32 %4578, 4
  %4580 = trunc i32 %4579 to i8
  %4581 = and i8 %4580, 1
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4581, i8* %4582, align 1
  %4583 = icmp eq i32 %4564, 0
  %4584 = zext i1 %4583 to i8
  %4585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4584, i8* %4585, align 1
  %4586 = lshr i32 %4564, 31
  %4587 = trunc i32 %4586 to i8
  %4588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4587, i8* %4588, align 1
  %4589 = lshr i32 %4561, 31
  %4590 = lshr i32 %4563, 31
  %4591 = xor i32 %4586, %4589
  %4592 = xor i32 %4586, %4590
  %4593 = add i32 %4591, %4592
  %4594 = icmp eq i32 %4593, 2
  %4595 = zext i1 %4594 to i8
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4595, i8* %4596, align 1
  store %struct.Memory* %loadMem_413545, %struct.Memory** %MEMORY
  %loadMem_413548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4598 = getelementptr inbounds %struct.GPR, %struct.GPR* %4597, i32 0, i32 33
  %4599 = getelementptr inbounds %struct.Reg, %struct.Reg* %4598, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %4599 to i64*
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4601 = getelementptr inbounds %struct.GPR, %struct.GPR* %4600, i32 0, i32 1
  %4602 = getelementptr inbounds %struct.Reg, %struct.Reg* %4601, i32 0, i32 0
  %EAX.i644 = bitcast %union.anon* %4602 to i32*
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4604 = getelementptr inbounds %struct.GPR, %struct.GPR* %4603, i32 0, i32 15
  %4605 = getelementptr inbounds %struct.Reg, %struct.Reg* %4604, i32 0, i32 0
  %RBP.i645 = bitcast %union.anon* %4605 to i64*
  %4606 = load i64, i64* %RBP.i645
  %4607 = sub i64 %4606, 84
  %4608 = load i32, i32* %EAX.i644
  %4609 = zext i32 %4608 to i64
  %4610 = load i64, i64* %PC.i643
  %4611 = add i64 %4610, 3
  store i64 %4611, i64* %PC.i643
  %4612 = inttoptr i64 %4607 to i32*
  store i32 %4608, i32* %4612
  store %struct.Memory* %loadMem_413548, %struct.Memory** %MEMORY
  br label %block_.L_41354b

block_.L_41354b:                                  ; preds = %block_41353f, %block_.L_413535
  %loadMem_41354b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4614 = getelementptr inbounds %struct.GPR, %struct.GPR* %4613, i32 0, i32 33
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %4615 to i64*
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4617 = getelementptr inbounds %struct.GPR, %struct.GPR* %4616, i32 0, i32 15
  %4618 = getelementptr inbounds %struct.Reg, %struct.Reg* %4617, i32 0, i32 0
  %RBP.i642 = bitcast %union.anon* %4618 to i64*
  %4619 = load i64, i64* %RBP.i642
  %4620 = sub i64 %4619, 136
  %4621 = load i64, i64* %PC.i641
  %4622 = add i64 %4621, 7
  store i64 %4622, i64* %PC.i641
  %4623 = inttoptr i64 %4620 to i32*
  %4624 = load i32, i32* %4623
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4625, align 1
  %4626 = and i32 %4624, 255
  %4627 = call i32 @llvm.ctpop.i32(i32 %4626)
  %4628 = trunc i32 %4627 to i8
  %4629 = and i8 %4628, 1
  %4630 = xor i8 %4629, 1
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4630, i8* %4631, align 1
  %4632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4632, align 1
  %4633 = icmp eq i32 %4624, 0
  %4634 = zext i1 %4633 to i8
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4634, i8* %4635, align 1
  %4636 = lshr i32 %4624, 31
  %4637 = trunc i32 %4636 to i8
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4637, i8* %4638, align 1
  %4639 = lshr i32 %4624, 31
  %4640 = xor i32 %4636, %4639
  %4641 = add i32 %4640, %4639
  %4642 = icmp eq i32 %4641, 2
  %4643 = zext i1 %4642 to i8
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4643, i8* %4644, align 1
  store %struct.Memory* %loadMem_41354b, %struct.Memory** %MEMORY
  %loadMem_413552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4646 = getelementptr inbounds %struct.GPR, %struct.GPR* %4645, i32 0, i32 33
  %4647 = getelementptr inbounds %struct.Reg, %struct.Reg* %4646, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %4647 to i64*
  %4648 = load i64, i64* %PC.i640
  %4649 = add i64 %4648, 18
  %4650 = load i64, i64* %PC.i640
  %4651 = add i64 %4650, 6
  %4652 = load i64, i64* %PC.i640
  %4653 = add i64 %4652, 6
  store i64 %4653, i64* %PC.i640
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4655 = load i8, i8* %4654, align 1
  store i8 %4655, i8* %BRANCH_TAKEN, align 1
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4657 = icmp ne i8 %4655, 0
  %4658 = select i1 %4657, i64 %4649, i64 %4651
  store i64 %4658, i64* %4656, align 8
  store %struct.Memory* %loadMem_413552, %struct.Memory** %MEMORY
  %loadBr_413552 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413552 = icmp eq i8 %loadBr_413552, 1
  br i1 %cmpBr_413552, label %block_.L_413564, label %block_413558

block_413558:                                     ; preds = %block_.L_41354b
  %loadMem_413558 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4660 = getelementptr inbounds %struct.GPR, %struct.GPR* %4659, i32 0, i32 33
  %4661 = getelementptr inbounds %struct.Reg, %struct.Reg* %4660, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %4661 to i64*
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4663 = getelementptr inbounds %struct.GPR, %struct.GPR* %4662, i32 0, i32 1
  %4664 = getelementptr inbounds %struct.Reg, %struct.Reg* %4663, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %4664 to i64*
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4666 = getelementptr inbounds %struct.GPR, %struct.GPR* %4665, i32 0, i32 15
  %4667 = getelementptr inbounds %struct.Reg, %struct.Reg* %4666, i32 0, i32 0
  %RBP.i639 = bitcast %union.anon* %4667 to i64*
  %4668 = load i64, i64* %RBP.i639
  %4669 = sub i64 %4668, 124
  %4670 = load i64, i64* %PC.i637
  %4671 = add i64 %4670, 3
  store i64 %4671, i64* %PC.i637
  %4672 = inttoptr i64 %4669 to i32*
  %4673 = load i32, i32* %4672
  %4674 = zext i32 %4673 to i64
  store i64 %4674, i64* %RAX.i638, align 8
  store %struct.Memory* %loadMem_413558, %struct.Memory** %MEMORY
  %loadMem_41355b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4676 = getelementptr inbounds %struct.GPR, %struct.GPR* %4675, i32 0, i32 33
  %4677 = getelementptr inbounds %struct.Reg, %struct.Reg* %4676, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %4677 to i64*
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4679 = getelementptr inbounds %struct.GPR, %struct.GPR* %4678, i32 0, i32 1
  %4680 = getelementptr inbounds %struct.Reg, %struct.Reg* %4679, i32 0, i32 0
  %RAX.i636 = bitcast %union.anon* %4680 to i64*
  %4681 = load i64, i64* %RAX.i636
  %4682 = load i64, i64* %PC.i635
  %4683 = add i64 %4682, 2
  store i64 %4683, i64* %PC.i635
  %4684 = trunc i64 %4681 to i32
  %4685 = shl i32 %4684, 1
  %4686 = icmp slt i32 %4684, 0
  %4687 = icmp slt i32 %4685, 0
  %4688 = xor i1 %4686, %4687
  %4689 = zext i32 %4685 to i64
  store i64 %4689, i64* %RAX.i636, align 8
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4691 = zext i1 %4686 to i8
  store i8 %4691, i8* %4690, align 1
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4693 = and i32 %4685, 254
  %4694 = call i32 @llvm.ctpop.i32(i32 %4693)
  %4695 = trunc i32 %4694 to i8
  %4696 = and i8 %4695, 1
  %4697 = xor i8 %4696, 1
  store i8 %4697, i8* %4692, align 1
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4698, align 1
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4700 = icmp eq i32 %4685, 0
  %4701 = zext i1 %4700 to i8
  store i8 %4701, i8* %4699, align 1
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4703 = lshr i32 %4685, 31
  %4704 = trunc i32 %4703 to i8
  store i8 %4704, i8* %4702, align 1
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4706 = zext i1 %4688 to i8
  store i8 %4706, i8* %4705, align 1
  store %struct.Memory* %loadMem_41355b, %struct.Memory** %MEMORY
  %loadMem_41355e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4708 = getelementptr inbounds %struct.GPR, %struct.GPR* %4707, i32 0, i32 33
  %4709 = getelementptr inbounds %struct.Reg, %struct.Reg* %4708, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %4709 to i64*
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4711 = getelementptr inbounds %struct.GPR, %struct.GPR* %4710, i32 0, i32 1
  %4712 = getelementptr inbounds %struct.Reg, %struct.Reg* %4711, i32 0, i32 0
  %RAX.i633 = bitcast %union.anon* %4712 to i64*
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4714 = getelementptr inbounds %struct.GPR, %struct.GPR* %4713, i32 0, i32 15
  %4715 = getelementptr inbounds %struct.Reg, %struct.Reg* %4714, i32 0, i32 0
  %RBP.i634 = bitcast %union.anon* %4715 to i64*
  %4716 = load i64, i64* %RAX.i633
  %4717 = load i64, i64* %RBP.i634
  %4718 = sub i64 %4717, 128
  %4719 = load i64, i64* %PC.i632
  %4720 = add i64 %4719, 3
  store i64 %4720, i64* %PC.i632
  %4721 = trunc i64 %4716 to i32
  %4722 = inttoptr i64 %4718 to i32*
  %4723 = load i32, i32* %4722
  %4724 = add i32 %4723, %4721
  %4725 = zext i32 %4724 to i64
  store i64 %4725, i64* %RAX.i633, align 8
  %4726 = icmp ult i32 %4724, %4721
  %4727 = icmp ult i32 %4724, %4723
  %4728 = or i1 %4726, %4727
  %4729 = zext i1 %4728 to i8
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4729, i8* %4730, align 1
  %4731 = and i32 %4724, 255
  %4732 = call i32 @llvm.ctpop.i32(i32 %4731)
  %4733 = trunc i32 %4732 to i8
  %4734 = and i8 %4733, 1
  %4735 = xor i8 %4734, 1
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4735, i8* %4736, align 1
  %4737 = xor i32 %4723, %4721
  %4738 = xor i32 %4737, %4724
  %4739 = lshr i32 %4738, 4
  %4740 = trunc i32 %4739 to i8
  %4741 = and i8 %4740, 1
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4741, i8* %4742, align 1
  %4743 = icmp eq i32 %4724, 0
  %4744 = zext i1 %4743 to i8
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4744, i8* %4745, align 1
  %4746 = lshr i32 %4724, 31
  %4747 = trunc i32 %4746 to i8
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4747, i8* %4748, align 1
  %4749 = lshr i32 %4721, 31
  %4750 = lshr i32 %4723, 31
  %4751 = xor i32 %4746, %4749
  %4752 = xor i32 %4746, %4750
  %4753 = add i32 %4751, %4752
  %4754 = icmp eq i32 %4753, 2
  %4755 = zext i1 %4754 to i8
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4755, i8* %4756, align 1
  store %struct.Memory* %loadMem_41355e, %struct.Memory** %MEMORY
  %loadMem_413561 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4758 = getelementptr inbounds %struct.GPR, %struct.GPR* %4757, i32 0, i32 33
  %4759 = getelementptr inbounds %struct.Reg, %struct.Reg* %4758, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %4759 to i64*
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4761 = getelementptr inbounds %struct.GPR, %struct.GPR* %4760, i32 0, i32 1
  %4762 = getelementptr inbounds %struct.Reg, %struct.Reg* %4761, i32 0, i32 0
  %EAX.i630 = bitcast %union.anon* %4762 to i32*
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4764 = getelementptr inbounds %struct.GPR, %struct.GPR* %4763, i32 0, i32 15
  %4765 = getelementptr inbounds %struct.Reg, %struct.Reg* %4764, i32 0, i32 0
  %RBP.i631 = bitcast %union.anon* %4765 to i64*
  %4766 = load i64, i64* %RBP.i631
  %4767 = sub i64 %4766, 88
  %4768 = load i32, i32* %EAX.i630
  %4769 = zext i32 %4768 to i64
  %4770 = load i64, i64* %PC.i629
  %4771 = add i64 %4770, 3
  store i64 %4771, i64* %PC.i629
  %4772 = inttoptr i64 %4767 to i32*
  store i32 %4768, i32* %4772
  store %struct.Memory* %loadMem_413561, %struct.Memory** %MEMORY
  br label %block_.L_413564

block_.L_413564:                                  ; preds = %block_413558, %block_.L_41354b
  %loadMem_413564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4774 = getelementptr inbounds %struct.GPR, %struct.GPR* %4773, i32 0, i32 33
  %4775 = getelementptr inbounds %struct.Reg, %struct.Reg* %4774, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %4775 to i64*
  %4776 = load i64, i64* %PC.i628
  %4777 = add i64 %4776, 5
  %4778 = load i64, i64* %PC.i628
  %4779 = add i64 %4778, 5
  store i64 %4779, i64* %PC.i628
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4777, i64* %4780, align 8
  store %struct.Memory* %loadMem_413564, %struct.Memory** %MEMORY
  br label %block_.L_413569

block_.L_413569:                                  ; preds = %block_.L_413564, %block_41352b
  %loadMem_413569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4782 = getelementptr inbounds %struct.GPR, %struct.GPR* %4781, i32 0, i32 33
  %4783 = getelementptr inbounds %struct.Reg, %struct.Reg* %4782, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %4783 to i64*
  %4784 = load i64, i64* %PC.i627
  %4785 = add i64 %4784, 5
  %4786 = load i64, i64* %PC.i627
  %4787 = add i64 %4786, 5
  store i64 %4787, i64* %PC.i627
  %4788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4785, i64* %4788, align 8
  store %struct.Memory* %loadMem_413569, %struct.Memory** %MEMORY
  br label %block_.L_41356e

block_.L_41356e:                                  ; preds = %block_.L_413569, %block_.L_4134d5
  %loadMem_41356e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4790 = getelementptr inbounds %struct.GPR, %struct.GPR* %4789, i32 0, i32 33
  %4791 = getelementptr inbounds %struct.Reg, %struct.Reg* %4790, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %4791 to i64*
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4793 = getelementptr inbounds %struct.GPR, %struct.GPR* %4792, i32 0, i32 15
  %4794 = getelementptr inbounds %struct.Reg, %struct.Reg* %4793, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %4794 to i64*
  %4795 = load i64, i64* %RBP.i626
  %4796 = sub i64 %4795, 32
  %4797 = load i64, i64* %PC.i625
  %4798 = add i64 %4797, 4
  store i64 %4798, i64* %PC.i625
  %4799 = inttoptr i64 %4796 to i32*
  %4800 = load i32, i32* %4799
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4801, align 1
  %4802 = and i32 %4800, 255
  %4803 = call i32 @llvm.ctpop.i32(i32 %4802)
  %4804 = trunc i32 %4803 to i8
  %4805 = and i8 %4804, 1
  %4806 = xor i8 %4805, 1
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4806, i8* %4807, align 1
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4808, align 1
  %4809 = icmp eq i32 %4800, 0
  %4810 = zext i1 %4809 to i8
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4810, i8* %4811, align 1
  %4812 = lshr i32 %4800, 31
  %4813 = trunc i32 %4812 to i8
  %4814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4813, i8* %4814, align 1
  %4815 = lshr i32 %4800, 31
  %4816 = xor i32 %4812, %4815
  %4817 = add i32 %4816, %4815
  %4818 = icmp eq i32 %4817, 2
  %4819 = zext i1 %4818 to i8
  %4820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4819, i8* %4820, align 1
  store %struct.Memory* %loadMem_41356e, %struct.Memory** %MEMORY
  %loadMem_413572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 33
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %4823 to i64*
  %4824 = load i64, i64* %PC.i624
  %4825 = add i64 %4824, 19
  %4826 = load i64, i64* %PC.i624
  %4827 = add i64 %4826, 6
  %4828 = load i64, i64* %PC.i624
  %4829 = add i64 %4828, 6
  store i64 %4829, i64* %PC.i624
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4831 = load i8, i8* %4830, align 1
  store i8 %4831, i8* %BRANCH_TAKEN, align 1
  %4832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4833 = icmp ne i8 %4831, 0
  %4834 = select i1 %4833, i64 %4825, i64 %4827
  store i64 %4834, i64* %4832, align 8
  store %struct.Memory* %loadMem_413572, %struct.Memory** %MEMORY
  %loadBr_413572 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413572 = icmp eq i8 %loadBr_413572, 1
  br i1 %cmpBr_413572, label %block_.L_413585, label %block_413578

block_413578:                                     ; preds = %block_.L_41356e
  %loadMem_413578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4836 = getelementptr inbounds %struct.GPR, %struct.GPR* %4835, i32 0, i32 33
  %4837 = getelementptr inbounds %struct.Reg, %struct.Reg* %4836, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %4837 to i64*
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4839 = getelementptr inbounds %struct.GPR, %struct.GPR* %4838, i32 0, i32 1
  %4840 = getelementptr inbounds %struct.Reg, %struct.Reg* %4839, i32 0, i32 0
  %EAX.i622 = bitcast %union.anon* %4840 to i32*
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4842 = getelementptr inbounds %struct.GPR, %struct.GPR* %4841, i32 0, i32 1
  %4843 = getelementptr inbounds %struct.Reg, %struct.Reg* %4842, i32 0, i32 0
  %RAX.i623 = bitcast %union.anon* %4843 to i64*
  %4844 = load i64, i64* %RAX.i623
  %4845 = load i32, i32* %EAX.i622
  %4846 = zext i32 %4845 to i64
  %4847 = load i64, i64* %PC.i621
  %4848 = add i64 %4847, 2
  store i64 %4848, i64* %PC.i621
  %4849 = xor i64 %4846, %4844
  %4850 = trunc i64 %4849 to i32
  %4851 = and i64 %4849, 4294967295
  store i64 %4851, i64* %RAX.i623, align 8
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4852, align 1
  %4853 = and i32 %4850, 255
  %4854 = call i32 @llvm.ctpop.i32(i32 %4853)
  %4855 = trunc i32 %4854 to i8
  %4856 = and i8 %4855, 1
  %4857 = xor i8 %4856, 1
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4857, i8* %4858, align 1
  %4859 = icmp eq i32 %4850, 0
  %4860 = zext i1 %4859 to i8
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4860, i8* %4861, align 1
  %4862 = lshr i32 %4850, 31
  %4863 = trunc i32 %4862 to i8
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4863, i8* %4864, align 1
  %4865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4865, align 1
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4866, align 1
  store %struct.Memory* %loadMem_413578, %struct.Memory** %MEMORY
  %loadMem_41357a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4868 = getelementptr inbounds %struct.GPR, %struct.GPR* %4867, i32 0, i32 33
  %4869 = getelementptr inbounds %struct.Reg, %struct.Reg* %4868, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %4869 to i64*
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4871 = getelementptr inbounds %struct.GPR, %struct.GPR* %4870, i32 0, i32 1
  %4872 = getelementptr inbounds %struct.Reg, %struct.Reg* %4871, i32 0, i32 0
  %EAX.i619 = bitcast %union.anon* %4872 to i32*
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4874 = getelementptr inbounds %struct.GPR, %struct.GPR* %4873, i32 0, i32 15
  %4875 = getelementptr inbounds %struct.Reg, %struct.Reg* %4874, i32 0, i32 0
  %RBP.i620 = bitcast %union.anon* %4875 to i64*
  %4876 = load i64, i64* %RBP.i620
  %4877 = sub i64 %4876, 172
  %4878 = load i32, i32* %EAX.i619
  %4879 = zext i32 %4878 to i64
  %4880 = load i64, i64* %PC.i618
  %4881 = add i64 %4880, 6
  store i64 %4881, i64* %PC.i618
  %4882 = inttoptr i64 %4877 to i32*
  store i32 %4878, i32* %4882
  store %struct.Memory* %loadMem_41357a, %struct.Memory** %MEMORY
  %loadMem_413580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4884 = getelementptr inbounds %struct.GPR, %struct.GPR* %4883, i32 0, i32 33
  %4885 = getelementptr inbounds %struct.Reg, %struct.Reg* %4884, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %4885 to i64*
  %4886 = load i64, i64* %PC.i617
  %4887 = add i64 %4886, 189
  %4888 = load i64, i64* %PC.i617
  %4889 = add i64 %4888, 5
  store i64 %4889, i64* %PC.i617
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4887, i64* %4890, align 8
  store %struct.Memory* %loadMem_413580, %struct.Memory** %MEMORY
  br label %block_.L_41363d

block_.L_413585:                                  ; preds = %block_.L_41356e
  %loadMem_413585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4892 = getelementptr inbounds %struct.GPR, %struct.GPR* %4891, i32 0, i32 33
  %4893 = getelementptr inbounds %struct.Reg, %struct.Reg* %4892, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %4893 to i64*
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4895 = getelementptr inbounds %struct.GPR, %struct.GPR* %4894, i32 0, i32 15
  %4896 = getelementptr inbounds %struct.Reg, %struct.Reg* %4895, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %4896 to i64*
  %4897 = load i64, i64* %RBP.i616
  %4898 = sub i64 %4897, 28
  %4899 = load i64, i64* %PC.i615
  %4900 = add i64 %4899, 4
  store i64 %4900, i64* %PC.i615
  %4901 = inttoptr i64 %4898 to i32*
  %4902 = load i32, i32* %4901
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4903, align 1
  %4904 = and i32 %4902, 255
  %4905 = call i32 @llvm.ctpop.i32(i32 %4904)
  %4906 = trunc i32 %4905 to i8
  %4907 = and i8 %4906, 1
  %4908 = xor i8 %4907, 1
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4908, i8* %4909, align 1
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4910, align 1
  %4911 = icmp eq i32 %4902, 0
  %4912 = zext i1 %4911 to i8
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4912, i8* %4913, align 1
  %4914 = lshr i32 %4902, 31
  %4915 = trunc i32 %4914 to i8
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4915, i8* %4916, align 1
  %4917 = lshr i32 %4902, 31
  %4918 = xor i32 %4914, %4917
  %4919 = add i32 %4918, %4917
  %4920 = icmp eq i32 %4919, 2
  %4921 = zext i1 %4920 to i8
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4921, i8* %4922, align 1
  store %struct.Memory* %loadMem_413585, %struct.Memory** %MEMORY
  %loadMem_413589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4924 = getelementptr inbounds %struct.GPR, %struct.GPR* %4923, i32 0, i32 33
  %4925 = getelementptr inbounds %struct.Reg, %struct.Reg* %4924, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %4925 to i64*
  %4926 = load i64, i64* %PC.i614
  %4927 = add i64 %4926, 29
  %4928 = load i64, i64* %PC.i614
  %4929 = add i64 %4928, 6
  %4930 = load i64, i64* %PC.i614
  %4931 = add i64 %4930, 6
  store i64 %4931, i64* %PC.i614
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4933 = load i8, i8* %4932, align 1
  store i8 %4933, i8* %BRANCH_TAKEN, align 1
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4935 = icmp ne i8 %4933, 0
  %4936 = select i1 %4935, i64 %4927, i64 %4929
  store i64 %4936, i64* %4934, align 8
  store %struct.Memory* %loadMem_413589, %struct.Memory** %MEMORY
  %loadBr_413589 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413589 = icmp eq i8 %loadBr_413589, 1
  br i1 %cmpBr_413589, label %block_.L_4135a6, label %block_41358f

block_41358f:                                     ; preds = %block_.L_413585
  %loadMem_41358f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4938 = getelementptr inbounds %struct.GPR, %struct.GPR* %4937, i32 0, i32 33
  %4939 = getelementptr inbounds %struct.Reg, %struct.Reg* %4938, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %4939 to i64*
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4941 = getelementptr inbounds %struct.GPR, %struct.GPR* %4940, i32 0, i32 1
  %4942 = getelementptr inbounds %struct.Reg, %struct.Reg* %4941, i32 0, i32 0
  %RAX.i612 = bitcast %union.anon* %4942 to i64*
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4944 = getelementptr inbounds %struct.GPR, %struct.GPR* %4943, i32 0, i32 15
  %4945 = getelementptr inbounds %struct.Reg, %struct.Reg* %4944, i32 0, i32 0
  %RBP.i613 = bitcast %union.anon* %4945 to i64*
  %4946 = load i64, i64* %RBP.i613
  %4947 = sub i64 %4946, 56
  %4948 = load i64, i64* %PC.i611
  %4949 = add i64 %4948, 3
  store i64 %4949, i64* %PC.i611
  %4950 = inttoptr i64 %4947 to i32*
  %4951 = load i32, i32* %4950
  %4952 = zext i32 %4951 to i64
  store i64 %4952, i64* %RAX.i612, align 8
  store %struct.Memory* %loadMem_41358f, %struct.Memory** %MEMORY
  %loadMem_413592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4954 = getelementptr inbounds %struct.GPR, %struct.GPR* %4953, i32 0, i32 33
  %4955 = getelementptr inbounds %struct.Reg, %struct.Reg* %4954, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %4955 to i64*
  %4956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4957 = getelementptr inbounds %struct.GPR, %struct.GPR* %4956, i32 0, i32 1
  %4958 = getelementptr inbounds %struct.Reg, %struct.Reg* %4957, i32 0, i32 0
  %RAX.i610 = bitcast %union.anon* %4958 to i64*
  %4959 = load i64, i64* %RAX.i610
  %4960 = load i64, i64* %PC.i609
  %4961 = add i64 %4960, 3
  store i64 %4961, i64* %PC.i609
  %4962 = and i64 %4959, 4294967295
  %4963 = shl i64 %4962, 1
  %4964 = trunc i64 %4963 to i32
  %4965 = icmp slt i32 %4964, 0
  %4966 = shl i32 %4964, 1
  %4967 = zext i32 %4966 to i64
  store i64 %4967, i64* %RAX.i610, align 8
  %4968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4969 = zext i1 %4965 to i8
  store i8 %4969, i8* %4968, align 1
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4971 = and i32 %4966, 254
  %4972 = call i32 @llvm.ctpop.i32(i32 %4971)
  %4973 = trunc i32 %4972 to i8
  %4974 = and i8 %4973, 1
  %4975 = xor i8 %4974, 1
  store i8 %4975, i8* %4970, align 1
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4976, align 1
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4978 = icmp eq i32 %4966, 0
  %4979 = zext i1 %4978 to i8
  store i8 %4979, i8* %4977, align 1
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4981 = lshr i32 %4966, 31
  %4982 = trunc i32 %4981 to i8
  store i8 %4982, i8* %4980, align 1
  %4983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4983, align 1
  store %struct.Memory* %loadMem_413592, %struct.Memory** %MEMORY
  %loadMem_413595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4985 = getelementptr inbounds %struct.GPR, %struct.GPR* %4984, i32 0, i32 33
  %4986 = getelementptr inbounds %struct.Reg, %struct.Reg* %4985, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %4986 to i64*
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 1
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %RAX.i608 = bitcast %union.anon* %4989 to i64*
  %4990 = load i64, i64* %RAX.i608
  %4991 = load i64, i64* %PC.i607
  %4992 = add i64 %4991, 3
  store i64 %4992, i64* %PC.i607
  %4993 = trunc i64 %4990 to i32
  %4994 = add i32 1, %4993
  %4995 = zext i32 %4994 to i64
  store i64 %4995, i64* %RAX.i608, align 8
  %4996 = icmp ult i32 %4994, %4993
  %4997 = icmp ult i32 %4994, 1
  %4998 = or i1 %4996, %4997
  %4999 = zext i1 %4998 to i8
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4999, i8* %5000, align 1
  %5001 = and i32 %4994, 255
  %5002 = call i32 @llvm.ctpop.i32(i32 %5001)
  %5003 = trunc i32 %5002 to i8
  %5004 = and i8 %5003, 1
  %5005 = xor i8 %5004, 1
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5005, i8* %5006, align 1
  %5007 = xor i64 1, %4990
  %5008 = trunc i64 %5007 to i32
  %5009 = xor i32 %5008, %4994
  %5010 = lshr i32 %5009, 4
  %5011 = trunc i32 %5010 to i8
  %5012 = and i8 %5011, 1
  %5013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5012, i8* %5013, align 1
  %5014 = icmp eq i32 %4994, 0
  %5015 = zext i1 %5014 to i8
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5015, i8* %5016, align 1
  %5017 = lshr i32 %4994, 31
  %5018 = trunc i32 %5017 to i8
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5018, i8* %5019, align 1
  %5020 = lshr i32 %4993, 31
  %5021 = xor i32 %5017, %5020
  %5022 = add i32 %5021, %5017
  %5023 = icmp eq i32 %5022, 2
  %5024 = zext i1 %5023 to i8
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5024, i8* %5025, align 1
  store %struct.Memory* %loadMem_413595, %struct.Memory** %MEMORY
  %loadMem_413598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5027 = getelementptr inbounds %struct.GPR, %struct.GPR* %5026, i32 0, i32 33
  %5028 = getelementptr inbounds %struct.Reg, %struct.Reg* %5027, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %5028 to i64*
  %5029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5030 = getelementptr inbounds %struct.GPR, %struct.GPR* %5029, i32 0, i32 1
  %5031 = getelementptr inbounds %struct.Reg, %struct.Reg* %5030, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %5031 to i64*
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 15
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %RBP.i606 = bitcast %union.anon* %5034 to i64*
  %5035 = load i64, i64* %RAX.i605
  %5036 = load i64, i64* %RBP.i606
  %5037 = sub i64 %5036, 60
  %5038 = load i64, i64* %PC.i604
  %5039 = add i64 %5038, 3
  store i64 %5039, i64* %PC.i604
  %5040 = trunc i64 %5035 to i32
  %5041 = inttoptr i64 %5037 to i32*
  %5042 = load i32, i32* %5041
  %5043 = add i32 %5042, %5040
  %5044 = zext i32 %5043 to i64
  store i64 %5044, i64* %RAX.i605, align 8
  %5045 = icmp ult i32 %5043, %5040
  %5046 = icmp ult i32 %5043, %5042
  %5047 = or i1 %5045, %5046
  %5048 = zext i1 %5047 to i8
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5048, i8* %5049, align 1
  %5050 = and i32 %5043, 255
  %5051 = call i32 @llvm.ctpop.i32(i32 %5050)
  %5052 = trunc i32 %5051 to i8
  %5053 = and i8 %5052, 1
  %5054 = xor i8 %5053, 1
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5054, i8* %5055, align 1
  %5056 = xor i32 %5042, %5040
  %5057 = xor i32 %5056, %5043
  %5058 = lshr i32 %5057, 4
  %5059 = trunc i32 %5058 to i8
  %5060 = and i8 %5059, 1
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5060, i8* %5061, align 1
  %5062 = icmp eq i32 %5043, 0
  %5063 = zext i1 %5062 to i8
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5063, i8* %5064, align 1
  %5065 = lshr i32 %5043, 31
  %5066 = trunc i32 %5065 to i8
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5066, i8* %5067, align 1
  %5068 = lshr i32 %5040, 31
  %5069 = lshr i32 %5042, 31
  %5070 = xor i32 %5065, %5068
  %5071 = xor i32 %5065, %5069
  %5072 = add i32 %5070, %5071
  %5073 = icmp eq i32 %5072, 2
  %5074 = zext i1 %5073 to i8
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5074, i8* %5075, align 1
  store %struct.Memory* %loadMem_413598, %struct.Memory** %MEMORY
  %loadMem_41359b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5077 = getelementptr inbounds %struct.GPR, %struct.GPR* %5076, i32 0, i32 33
  %5078 = getelementptr inbounds %struct.Reg, %struct.Reg* %5077, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5078 to i64*
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5080 = getelementptr inbounds %struct.GPR, %struct.GPR* %5079, i32 0, i32 1
  %5081 = getelementptr inbounds %struct.Reg, %struct.Reg* %5080, i32 0, i32 0
  %EAX.i602 = bitcast %union.anon* %5081 to i32*
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 15
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %RBP.i603 = bitcast %union.anon* %5084 to i64*
  %5085 = load i64, i64* %RBP.i603
  %5086 = sub i64 %5085, 176
  %5087 = load i32, i32* %EAX.i602
  %5088 = zext i32 %5087 to i64
  %5089 = load i64, i64* %PC.i601
  %5090 = add i64 %5089, 6
  store i64 %5090, i64* %PC.i601
  %5091 = inttoptr i64 %5086 to i32*
  store i32 %5087, i32* %5091
  store %struct.Memory* %loadMem_41359b, %struct.Memory** %MEMORY
  %loadMem_4135a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 33
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %5094 to i64*
  %5095 = load i64, i64* %PC.i600
  %5096 = add i64 %5095, 144
  %5097 = load i64, i64* %PC.i600
  %5098 = add i64 %5097, 5
  store i64 %5098, i64* %PC.i600
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5096, i64* %5099, align 8
  store %struct.Memory* %loadMem_4135a1, %struct.Memory** %MEMORY
  br label %block_.L_413631

block_.L_4135a6:                                  ; preds = %block_.L_413585
  %loadMem_4135a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5101 = getelementptr inbounds %struct.GPR, %struct.GPR* %5100, i32 0, i32 33
  %5102 = getelementptr inbounds %struct.Reg, %struct.Reg* %5101, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %5102 to i64*
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5104 = getelementptr inbounds %struct.GPR, %struct.GPR* %5103, i32 0, i32 15
  %5105 = getelementptr inbounds %struct.Reg, %struct.Reg* %5104, i32 0, i32 0
  %RBP.i599 = bitcast %union.anon* %5105 to i64*
  %5106 = load i64, i64* %RBP.i599
  %5107 = sub i64 %5106, 48
  %5108 = load i64, i64* %PC.i598
  %5109 = add i64 %5108, 4
  store i64 %5109, i64* %PC.i598
  %5110 = inttoptr i64 %5107 to i32*
  %5111 = load i32, i32* %5110
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5112, align 1
  %5113 = and i32 %5111, 255
  %5114 = call i32 @llvm.ctpop.i32(i32 %5113)
  %5115 = trunc i32 %5114 to i8
  %5116 = and i8 %5115, 1
  %5117 = xor i8 %5116, 1
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5117, i8* %5118, align 1
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5119, align 1
  %5120 = icmp eq i32 %5111, 0
  %5121 = zext i1 %5120 to i8
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5121, i8* %5122, align 1
  %5123 = lshr i32 %5111, 31
  %5124 = trunc i32 %5123 to i8
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5124, i8* %5125, align 1
  %5126 = lshr i32 %5111, 31
  %5127 = xor i32 %5123, %5126
  %5128 = add i32 %5127, %5126
  %5129 = icmp eq i32 %5128, 2
  %5130 = zext i1 %5129 to i8
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5130, i8* %5131, align 1
  store %struct.Memory* %loadMem_4135a6, %struct.Memory** %MEMORY
  %loadMem_4135aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 33
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %5134 to i64*
  %5135 = load i64, i64* %PC.i597
  %5136 = add i64 %5135, 22
  %5137 = load i64, i64* %PC.i597
  %5138 = add i64 %5137, 6
  %5139 = load i64, i64* %PC.i597
  %5140 = add i64 %5139, 6
  store i64 %5140, i64* %PC.i597
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5142 = load i8, i8* %5141, align 1
  store i8 %5142, i8* %BRANCH_TAKEN, align 1
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5144 = icmp ne i8 %5142, 0
  %5145 = select i1 %5144, i64 %5136, i64 %5138
  store i64 %5145, i64* %5143, align 8
  store %struct.Memory* %loadMem_4135aa, %struct.Memory** %MEMORY
  %loadBr_4135aa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4135aa = icmp eq i8 %loadBr_4135aa, 1
  br i1 %cmpBr_4135aa, label %block_.L_4135c0, label %block_4135b0

block_4135b0:                                     ; preds = %block_.L_4135a6
  %loadMem_4135b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5147 = getelementptr inbounds %struct.GPR, %struct.GPR* %5146, i32 0, i32 33
  %5148 = getelementptr inbounds %struct.Reg, %struct.Reg* %5147, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %5148 to i64*
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5150 = getelementptr inbounds %struct.GPR, %struct.GPR* %5149, i32 0, i32 1
  %5151 = getelementptr inbounds %struct.Reg, %struct.Reg* %5150, i32 0, i32 0
  %RAX.i596 = bitcast %union.anon* %5151 to i64*
  %5152 = load i64, i64* %PC.i595
  %5153 = add i64 %5152, 5
  store i64 %5153, i64* %PC.i595
  store i64 17, i64* %RAX.i596, align 8
  store %struct.Memory* %loadMem_4135b0, %struct.Memory** %MEMORY
  %loadMem_4135b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5155 = getelementptr inbounds %struct.GPR, %struct.GPR* %5154, i32 0, i32 33
  %5156 = getelementptr inbounds %struct.Reg, %struct.Reg* %5155, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %5156 to i64*
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5158 = getelementptr inbounds %struct.GPR, %struct.GPR* %5157, i32 0, i32 1
  %5159 = getelementptr inbounds %struct.Reg, %struct.Reg* %5158, i32 0, i32 0
  %EAX.i593 = bitcast %union.anon* %5159 to i32*
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5161 = getelementptr inbounds %struct.GPR, %struct.GPR* %5160, i32 0, i32 15
  %5162 = getelementptr inbounds %struct.Reg, %struct.Reg* %5161, i32 0, i32 0
  %RBP.i594 = bitcast %union.anon* %5162 to i64*
  %5163 = load i64, i64* %RBP.i594
  %5164 = sub i64 %5163, 180
  %5165 = load i32, i32* %EAX.i593
  %5166 = zext i32 %5165 to i64
  %5167 = load i64, i64* %PC.i592
  %5168 = add i64 %5167, 6
  store i64 %5168, i64* %PC.i592
  %5169 = inttoptr i64 %5164 to i32*
  store i32 %5165, i32* %5169
  store %struct.Memory* %loadMem_4135b5, %struct.Memory** %MEMORY
  %loadMem_4135bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5171 = getelementptr inbounds %struct.GPR, %struct.GPR* %5170, i32 0, i32 33
  %5172 = getelementptr inbounds %struct.Reg, %struct.Reg* %5171, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %5172 to i64*
  %5173 = load i64, i64* %PC.i591
  %5174 = add i64 %5173, 106
  %5175 = load i64, i64* %PC.i591
  %5176 = add i64 %5175, 5
  store i64 %5176, i64* %PC.i591
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5174, i64* %5177, align 8
  store %struct.Memory* %loadMem_4135bb, %struct.Memory** %MEMORY
  br label %block_.L_413625

block_.L_4135c0:                                  ; preds = %block_.L_4135a6
  %loadMem_4135c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5179 = getelementptr inbounds %struct.GPR, %struct.GPR* %5178, i32 0, i32 33
  %5180 = getelementptr inbounds %struct.Reg, %struct.Reg* %5179, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %5180 to i64*
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5182 = getelementptr inbounds %struct.GPR, %struct.GPR* %5181, i32 0, i32 15
  %5183 = getelementptr inbounds %struct.Reg, %struct.Reg* %5182, i32 0, i32 0
  %RBP.i590 = bitcast %union.anon* %5183 to i64*
  %5184 = load i64, i64* %RBP.i590
  %5185 = sub i64 %5184, 52
  %5186 = load i64, i64* %PC.i589
  %5187 = add i64 %5186, 4
  store i64 %5187, i64* %PC.i589
  %5188 = inttoptr i64 %5185 to i32*
  %5189 = load i32, i32* %5188
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5190, align 1
  %5191 = and i32 %5189, 255
  %5192 = call i32 @llvm.ctpop.i32(i32 %5191)
  %5193 = trunc i32 %5192 to i8
  %5194 = and i8 %5193, 1
  %5195 = xor i8 %5194, 1
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5195, i8* %5196, align 1
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5197, align 1
  %5198 = icmp eq i32 %5189, 0
  %5199 = zext i1 %5198 to i8
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5199, i8* %5200, align 1
  %5201 = lshr i32 %5189, 31
  %5202 = trunc i32 %5201 to i8
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5202, i8* %5203, align 1
  %5204 = lshr i32 %5189, 31
  %5205 = xor i32 %5201, %5204
  %5206 = add i32 %5205, %5204
  %5207 = icmp eq i32 %5206, 2
  %5208 = zext i1 %5207 to i8
  %5209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5208, i8* %5209, align 1
  store %struct.Memory* %loadMem_4135c0, %struct.Memory** %MEMORY
  %loadMem_4135c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5211 = getelementptr inbounds %struct.GPR, %struct.GPR* %5210, i32 0, i32 33
  %5212 = getelementptr inbounds %struct.Reg, %struct.Reg* %5211, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %5212 to i64*
  %5213 = load i64, i64* %PC.i588
  %5214 = add i64 %5213, 22
  %5215 = load i64, i64* %PC.i588
  %5216 = add i64 %5215, 6
  %5217 = load i64, i64* %PC.i588
  %5218 = add i64 %5217, 6
  store i64 %5218, i64* %PC.i588
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5220 = load i8, i8* %5219, align 1
  store i8 %5220, i8* %BRANCH_TAKEN, align 1
  %5221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5222 = icmp ne i8 %5220, 0
  %5223 = select i1 %5222, i64 %5214, i64 %5216
  store i64 %5223, i64* %5221, align 8
  store %struct.Memory* %loadMem_4135c4, %struct.Memory** %MEMORY
  %loadBr_4135c4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4135c4 = icmp eq i8 %loadBr_4135c4, 1
  br i1 %cmpBr_4135c4, label %block_.L_4135da, label %block_4135ca

block_4135ca:                                     ; preds = %block_.L_4135c0
  %loadMem_4135ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5225 = getelementptr inbounds %struct.GPR, %struct.GPR* %5224, i32 0, i32 33
  %5226 = getelementptr inbounds %struct.Reg, %struct.Reg* %5225, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %5226 to i64*
  %5227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5228 = getelementptr inbounds %struct.GPR, %struct.GPR* %5227, i32 0, i32 1
  %5229 = getelementptr inbounds %struct.Reg, %struct.Reg* %5228, i32 0, i32 0
  %RAX.i587 = bitcast %union.anon* %5229 to i64*
  %5230 = load i64, i64* %PC.i586
  %5231 = add i64 %5230, 5
  store i64 %5231, i64* %PC.i586
  store i64 18, i64* %RAX.i587, align 8
  store %struct.Memory* %loadMem_4135ca, %struct.Memory** %MEMORY
  %loadMem_4135cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5233 = getelementptr inbounds %struct.GPR, %struct.GPR* %5232, i32 0, i32 33
  %5234 = getelementptr inbounds %struct.Reg, %struct.Reg* %5233, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %5234 to i64*
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 1
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %EAX.i584 = bitcast %union.anon* %5237 to i32*
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5239 = getelementptr inbounds %struct.GPR, %struct.GPR* %5238, i32 0, i32 15
  %5240 = getelementptr inbounds %struct.Reg, %struct.Reg* %5239, i32 0, i32 0
  %RBP.i585 = bitcast %union.anon* %5240 to i64*
  %5241 = load i64, i64* %RBP.i585
  %5242 = sub i64 %5241, 184
  %5243 = load i32, i32* %EAX.i584
  %5244 = zext i32 %5243 to i64
  %5245 = load i64, i64* %PC.i583
  %5246 = add i64 %5245, 6
  store i64 %5246, i64* %PC.i583
  %5247 = inttoptr i64 %5242 to i32*
  store i32 %5243, i32* %5247
  store %struct.Memory* %loadMem_4135cf, %struct.Memory** %MEMORY
  %loadMem_4135d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5249 = getelementptr inbounds %struct.GPR, %struct.GPR* %5248, i32 0, i32 33
  %5250 = getelementptr inbounds %struct.Reg, %struct.Reg* %5249, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5250 to i64*
  %5251 = load i64, i64* %PC.i582
  %5252 = add i64 %5251, 68
  %5253 = load i64, i64* %PC.i582
  %5254 = add i64 %5253, 5
  store i64 %5254, i64* %PC.i582
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5252, i64* %5255, align 8
  store %struct.Memory* %loadMem_4135d5, %struct.Memory** %MEMORY
  br label %block_.L_413619

block_.L_4135da:                                  ; preds = %block_.L_4135c0
  %loadMem_4135da = load %struct.Memory*, %struct.Memory** %MEMORY
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5257 = getelementptr inbounds %struct.GPR, %struct.GPR* %5256, i32 0, i32 33
  %5258 = getelementptr inbounds %struct.Reg, %struct.Reg* %5257, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %5258 to i64*
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5260 = getelementptr inbounds %struct.GPR, %struct.GPR* %5259, i32 0, i32 15
  %5261 = getelementptr inbounds %struct.Reg, %struct.Reg* %5260, i32 0, i32 0
  %RBP.i581 = bitcast %union.anon* %5261 to i64*
  %5262 = load i64, i64* %RBP.i581
  %5263 = sub i64 %5262, 36
  %5264 = load i64, i64* %PC.i580
  %5265 = add i64 %5264, 4
  store i64 %5265, i64* %PC.i580
  %5266 = inttoptr i64 %5263 to i32*
  %5267 = load i32, i32* %5266
  %5268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5268, align 1
  %5269 = and i32 %5267, 255
  %5270 = call i32 @llvm.ctpop.i32(i32 %5269)
  %5271 = trunc i32 %5270 to i8
  %5272 = and i8 %5271, 1
  %5273 = xor i8 %5272, 1
  %5274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5273, i8* %5274, align 1
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5275, align 1
  %5276 = icmp eq i32 %5267, 0
  %5277 = zext i1 %5276 to i8
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5277, i8* %5278, align 1
  %5279 = lshr i32 %5267, 31
  %5280 = trunc i32 %5279 to i8
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5280, i8* %5281, align 1
  %5282 = lshr i32 %5267, 31
  %5283 = xor i32 %5279, %5282
  %5284 = add i32 %5283, %5282
  %5285 = icmp eq i32 %5284, 2
  %5286 = zext i1 %5285 to i8
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5286, i8* %5287, align 1
  store %struct.Memory* %loadMem_4135da, %struct.Memory** %MEMORY
  %loadMem_4135de = load %struct.Memory*, %struct.Memory** %MEMORY
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5289 = getelementptr inbounds %struct.GPR, %struct.GPR* %5288, i32 0, i32 33
  %5290 = getelementptr inbounds %struct.Reg, %struct.Reg* %5289, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %5290 to i64*
  %5291 = load i64, i64* %PC.i579
  %5292 = add i64 %5291, 29
  %5293 = load i64, i64* %PC.i579
  %5294 = add i64 %5293, 6
  %5295 = load i64, i64* %PC.i579
  %5296 = add i64 %5295, 6
  store i64 %5296, i64* %PC.i579
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5298 = load i8, i8* %5297, align 1
  store i8 %5298, i8* %BRANCH_TAKEN, align 1
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5300 = icmp ne i8 %5298, 0
  %5301 = select i1 %5300, i64 %5292, i64 %5294
  store i64 %5301, i64* %5299, align 8
  store %struct.Memory* %loadMem_4135de, %struct.Memory** %MEMORY
  %loadBr_4135de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4135de = icmp eq i8 %loadBr_4135de, 1
  br i1 %cmpBr_4135de, label %block_.L_4135fb, label %block_4135e4

block_4135e4:                                     ; preds = %block_.L_4135da
  %loadMem_4135e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5303 = getelementptr inbounds %struct.GPR, %struct.GPR* %5302, i32 0, i32 33
  %5304 = getelementptr inbounds %struct.Reg, %struct.Reg* %5303, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %5304 to i64*
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5306 = getelementptr inbounds %struct.GPR, %struct.GPR* %5305, i32 0, i32 1
  %5307 = getelementptr inbounds %struct.Reg, %struct.Reg* %5306, i32 0, i32 0
  %RAX.i577 = bitcast %union.anon* %5307 to i64*
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5309 = getelementptr inbounds %struct.GPR, %struct.GPR* %5308, i32 0, i32 15
  %5310 = getelementptr inbounds %struct.Reg, %struct.Reg* %5309, i32 0, i32 0
  %RBP.i578 = bitcast %union.anon* %5310 to i64*
  %5311 = load i64, i64* %RBP.i578
  %5312 = sub i64 %5311, 56
  %5313 = load i64, i64* %PC.i576
  %5314 = add i64 %5313, 3
  store i64 %5314, i64* %PC.i576
  %5315 = inttoptr i64 %5312 to i32*
  %5316 = load i32, i32* %5315
  %5317 = zext i32 %5316 to i64
  store i64 %5317, i64* %RAX.i577, align 8
  store %struct.Memory* %loadMem_4135e4, %struct.Memory** %MEMORY
  %loadMem_4135e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 33
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %5320 to i64*
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5322 = getelementptr inbounds %struct.GPR, %struct.GPR* %5321, i32 0, i32 1
  %5323 = getelementptr inbounds %struct.Reg, %struct.Reg* %5322, i32 0, i32 0
  %RAX.i575 = bitcast %union.anon* %5323 to i64*
  %5324 = load i64, i64* %RAX.i575
  %5325 = load i64, i64* %PC.i574
  %5326 = add i64 %5325, 2
  store i64 %5326, i64* %PC.i574
  %5327 = trunc i64 %5324 to i32
  %5328 = shl i32 %5327, 1
  %5329 = icmp slt i32 %5327, 0
  %5330 = icmp slt i32 %5328, 0
  %5331 = xor i1 %5329, %5330
  %5332 = zext i32 %5328 to i64
  store i64 %5332, i64* %RAX.i575, align 8
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5334 = zext i1 %5329 to i8
  store i8 %5334, i8* %5333, align 1
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5336 = and i32 %5328, 254
  %5337 = call i32 @llvm.ctpop.i32(i32 %5336)
  %5338 = trunc i32 %5337 to i8
  %5339 = and i8 %5338, 1
  %5340 = xor i8 %5339, 1
  store i8 %5340, i8* %5335, align 1
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5341, align 1
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5343 = icmp eq i32 %5328, 0
  %5344 = zext i1 %5343 to i8
  store i8 %5344, i8* %5342, align 1
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5346 = lshr i32 %5328, 31
  %5347 = trunc i32 %5346 to i8
  store i8 %5347, i8* %5345, align 1
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5349 = zext i1 %5331 to i8
  store i8 %5349, i8* %5348, align 1
  store %struct.Memory* %loadMem_4135e7, %struct.Memory** %MEMORY
  %loadMem_4135ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 33
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %5352 to i64*
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5354 = getelementptr inbounds %struct.GPR, %struct.GPR* %5353, i32 0, i32 1
  %5355 = getelementptr inbounds %struct.Reg, %struct.Reg* %5354, i32 0, i32 0
  %RAX.i573 = bitcast %union.anon* %5355 to i64*
  %5356 = load i64, i64* %RAX.i573
  %5357 = load i64, i64* %PC.i572
  %5358 = add i64 %5357, 3
  store i64 %5358, i64* %PC.i572
  %5359 = trunc i64 %5356 to i32
  %5360 = add i32 19, %5359
  %5361 = zext i32 %5360 to i64
  store i64 %5361, i64* %RAX.i573, align 8
  %5362 = icmp ult i32 %5360, %5359
  %5363 = icmp ult i32 %5360, 19
  %5364 = or i1 %5362, %5363
  %5365 = zext i1 %5364 to i8
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5365, i8* %5366, align 1
  %5367 = and i32 %5360, 255
  %5368 = call i32 @llvm.ctpop.i32(i32 %5367)
  %5369 = trunc i32 %5368 to i8
  %5370 = and i8 %5369, 1
  %5371 = xor i8 %5370, 1
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5371, i8* %5372, align 1
  %5373 = xor i64 19, %5356
  %5374 = trunc i64 %5373 to i32
  %5375 = xor i32 %5374, %5360
  %5376 = lshr i32 %5375, 4
  %5377 = trunc i32 %5376 to i8
  %5378 = and i8 %5377, 1
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5378, i8* %5379, align 1
  %5380 = icmp eq i32 %5360, 0
  %5381 = zext i1 %5380 to i8
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5381, i8* %5382, align 1
  %5383 = lshr i32 %5360, 31
  %5384 = trunc i32 %5383 to i8
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5384, i8* %5385, align 1
  %5386 = lshr i32 %5359, 31
  %5387 = xor i32 %5383, %5386
  %5388 = add i32 %5387, %5383
  %5389 = icmp eq i32 %5388, 2
  %5390 = zext i1 %5389 to i8
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5390, i8* %5391, align 1
  store %struct.Memory* %loadMem_4135ea, %struct.Memory** %MEMORY
  %loadMem_4135ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5393 = getelementptr inbounds %struct.GPR, %struct.GPR* %5392, i32 0, i32 33
  %5394 = getelementptr inbounds %struct.Reg, %struct.Reg* %5393, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %5394 to i64*
  %5395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5396 = getelementptr inbounds %struct.GPR, %struct.GPR* %5395, i32 0, i32 1
  %5397 = getelementptr inbounds %struct.Reg, %struct.Reg* %5396, i32 0, i32 0
  %RAX.i570 = bitcast %union.anon* %5397 to i64*
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5399 = getelementptr inbounds %struct.GPR, %struct.GPR* %5398, i32 0, i32 15
  %5400 = getelementptr inbounds %struct.Reg, %struct.Reg* %5399, i32 0, i32 0
  %RBP.i571 = bitcast %union.anon* %5400 to i64*
  %5401 = load i64, i64* %RAX.i570
  %5402 = load i64, i64* %RBP.i571
  %5403 = sub i64 %5402, 60
  %5404 = load i64, i64* %PC.i569
  %5405 = add i64 %5404, 3
  store i64 %5405, i64* %PC.i569
  %5406 = trunc i64 %5401 to i32
  %5407 = inttoptr i64 %5403 to i32*
  %5408 = load i32, i32* %5407
  %5409 = add i32 %5408, %5406
  %5410 = zext i32 %5409 to i64
  store i64 %5410, i64* %RAX.i570, align 8
  %5411 = icmp ult i32 %5409, %5406
  %5412 = icmp ult i32 %5409, %5408
  %5413 = or i1 %5411, %5412
  %5414 = zext i1 %5413 to i8
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5414, i8* %5415, align 1
  %5416 = and i32 %5409, 255
  %5417 = call i32 @llvm.ctpop.i32(i32 %5416)
  %5418 = trunc i32 %5417 to i8
  %5419 = and i8 %5418, 1
  %5420 = xor i8 %5419, 1
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5420, i8* %5421, align 1
  %5422 = xor i32 %5408, %5406
  %5423 = xor i32 %5422, %5409
  %5424 = lshr i32 %5423, 4
  %5425 = trunc i32 %5424 to i8
  %5426 = and i8 %5425, 1
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5426, i8* %5427, align 1
  %5428 = icmp eq i32 %5409, 0
  %5429 = zext i1 %5428 to i8
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5429, i8* %5430, align 1
  %5431 = lshr i32 %5409, 31
  %5432 = trunc i32 %5431 to i8
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5432, i8* %5433, align 1
  %5434 = lshr i32 %5406, 31
  %5435 = lshr i32 %5408, 31
  %5436 = xor i32 %5431, %5434
  %5437 = xor i32 %5431, %5435
  %5438 = add i32 %5436, %5437
  %5439 = icmp eq i32 %5438, 2
  %5440 = zext i1 %5439 to i8
  %5441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5440, i8* %5441, align 1
  store %struct.Memory* %loadMem_4135ed, %struct.Memory** %MEMORY
  %loadMem_4135f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5443 = getelementptr inbounds %struct.GPR, %struct.GPR* %5442, i32 0, i32 33
  %5444 = getelementptr inbounds %struct.Reg, %struct.Reg* %5443, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %5444 to i64*
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5446 = getelementptr inbounds %struct.GPR, %struct.GPR* %5445, i32 0, i32 1
  %5447 = getelementptr inbounds %struct.Reg, %struct.Reg* %5446, i32 0, i32 0
  %EAX.i567 = bitcast %union.anon* %5447 to i32*
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5449 = getelementptr inbounds %struct.GPR, %struct.GPR* %5448, i32 0, i32 15
  %5450 = getelementptr inbounds %struct.Reg, %struct.Reg* %5449, i32 0, i32 0
  %RBP.i568 = bitcast %union.anon* %5450 to i64*
  %5451 = load i64, i64* %RBP.i568
  %5452 = sub i64 %5451, 188
  %5453 = load i32, i32* %EAX.i567
  %5454 = zext i32 %5453 to i64
  %5455 = load i64, i64* %PC.i566
  %5456 = add i64 %5455, 6
  store i64 %5456, i64* %PC.i566
  %5457 = inttoptr i64 %5452 to i32*
  store i32 %5453, i32* %5457
  store %struct.Memory* %loadMem_4135f0, %struct.Memory** %MEMORY
  %loadMem_4135f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 33
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %5460 to i64*
  %5461 = load i64, i64* %PC.i565
  %5462 = add i64 %5461, 23
  %5463 = load i64, i64* %PC.i565
  %5464 = add i64 %5463, 5
  store i64 %5464, i64* %PC.i565
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5462, i64* %5465, align 8
  store %struct.Memory* %loadMem_4135f6, %struct.Memory** %MEMORY
  br label %block_.L_41360d

block_.L_4135fb:                                  ; preds = %block_.L_4135da
  %loadMem_4135fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5467 = getelementptr inbounds %struct.GPR, %struct.GPR* %5466, i32 0, i32 33
  %5468 = getelementptr inbounds %struct.Reg, %struct.Reg* %5467, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %5468 to i64*
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5470 = getelementptr inbounds %struct.GPR, %struct.GPR* %5469, i32 0, i32 1
  %5471 = getelementptr inbounds %struct.Reg, %struct.Reg* %5470, i32 0, i32 0
  %RAX.i563 = bitcast %union.anon* %5471 to i64*
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 15
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %5474 to i64*
  %5475 = load i64, i64* %RBP.i564
  %5476 = sub i64 %5475, 56
  %5477 = load i64, i64* %PC.i562
  %5478 = add i64 %5477, 3
  store i64 %5478, i64* %PC.i562
  %5479 = inttoptr i64 %5476 to i32*
  %5480 = load i32, i32* %5479
  %5481 = zext i32 %5480 to i64
  store i64 %5481, i64* %RAX.i563, align 8
  store %struct.Memory* %loadMem_4135fb, %struct.Memory** %MEMORY
  %loadMem_4135fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5483 = getelementptr inbounds %struct.GPR, %struct.GPR* %5482, i32 0, i32 33
  %5484 = getelementptr inbounds %struct.Reg, %struct.Reg* %5483, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %5484 to i64*
  %5485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5486 = getelementptr inbounds %struct.GPR, %struct.GPR* %5485, i32 0, i32 1
  %5487 = getelementptr inbounds %struct.Reg, %struct.Reg* %5486, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %5487 to i64*
  %5488 = load i64, i64* %RAX.i561
  %5489 = load i64, i64* %PC.i560
  %5490 = add i64 %5489, 2
  store i64 %5490, i64* %PC.i560
  %5491 = trunc i64 %5488 to i32
  %5492 = shl i32 %5491, 1
  %5493 = icmp slt i32 %5491, 0
  %5494 = icmp slt i32 %5492, 0
  %5495 = xor i1 %5493, %5494
  %5496 = zext i32 %5492 to i64
  store i64 %5496, i64* %RAX.i561, align 8
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5498 = zext i1 %5493 to i8
  store i8 %5498, i8* %5497, align 1
  %5499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5500 = and i32 %5492, 254
  %5501 = call i32 @llvm.ctpop.i32(i32 %5500)
  %5502 = trunc i32 %5501 to i8
  %5503 = and i8 %5502, 1
  %5504 = xor i8 %5503, 1
  store i8 %5504, i8* %5499, align 1
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5505, align 1
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5507 = icmp eq i32 %5492, 0
  %5508 = zext i1 %5507 to i8
  store i8 %5508, i8* %5506, align 1
  %5509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5510 = lshr i32 %5492, 31
  %5511 = trunc i32 %5510 to i8
  store i8 %5511, i8* %5509, align 1
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5513 = zext i1 %5495 to i8
  store i8 %5513, i8* %5512, align 1
  store %struct.Memory* %loadMem_4135fe, %struct.Memory** %MEMORY
  %loadMem_413601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5515 = getelementptr inbounds %struct.GPR, %struct.GPR* %5514, i32 0, i32 33
  %5516 = getelementptr inbounds %struct.Reg, %struct.Reg* %5515, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %5516 to i64*
  %5517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5518 = getelementptr inbounds %struct.GPR, %struct.GPR* %5517, i32 0, i32 1
  %5519 = getelementptr inbounds %struct.Reg, %struct.Reg* %5518, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %5519 to i64*
  %5520 = load i64, i64* %RAX.i559
  %5521 = load i64, i64* %PC.i558
  %5522 = add i64 %5521, 3
  store i64 %5522, i64* %PC.i558
  %5523 = trunc i64 %5520 to i32
  %5524 = add i32 23, %5523
  %5525 = zext i32 %5524 to i64
  store i64 %5525, i64* %RAX.i559, align 8
  %5526 = icmp ult i32 %5524, %5523
  %5527 = icmp ult i32 %5524, 23
  %5528 = or i1 %5526, %5527
  %5529 = zext i1 %5528 to i8
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5529, i8* %5530, align 1
  %5531 = and i32 %5524, 255
  %5532 = call i32 @llvm.ctpop.i32(i32 %5531)
  %5533 = trunc i32 %5532 to i8
  %5534 = and i8 %5533, 1
  %5535 = xor i8 %5534, 1
  %5536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5535, i8* %5536, align 1
  %5537 = xor i64 23, %5520
  %5538 = trunc i64 %5537 to i32
  %5539 = xor i32 %5538, %5524
  %5540 = lshr i32 %5539, 4
  %5541 = trunc i32 %5540 to i8
  %5542 = and i8 %5541, 1
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5542, i8* %5543, align 1
  %5544 = icmp eq i32 %5524, 0
  %5545 = zext i1 %5544 to i8
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5545, i8* %5546, align 1
  %5547 = lshr i32 %5524, 31
  %5548 = trunc i32 %5547 to i8
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5548, i8* %5549, align 1
  %5550 = lshr i32 %5523, 31
  %5551 = xor i32 %5547, %5550
  %5552 = add i32 %5551, %5547
  %5553 = icmp eq i32 %5552, 2
  %5554 = zext i1 %5553 to i8
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5554, i8* %5555, align 1
  store %struct.Memory* %loadMem_413601, %struct.Memory** %MEMORY
  %loadMem_413604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5557 = getelementptr inbounds %struct.GPR, %struct.GPR* %5556, i32 0, i32 33
  %5558 = getelementptr inbounds %struct.Reg, %struct.Reg* %5557, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %5558 to i64*
  %5559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5560 = getelementptr inbounds %struct.GPR, %struct.GPR* %5559, i32 0, i32 1
  %5561 = getelementptr inbounds %struct.Reg, %struct.Reg* %5560, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %5561 to i64*
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 15
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %RBP.i557 = bitcast %union.anon* %5564 to i64*
  %5565 = load i64, i64* %RAX.i556
  %5566 = load i64, i64* %RBP.i557
  %5567 = sub i64 %5566, 60
  %5568 = load i64, i64* %PC.i555
  %5569 = add i64 %5568, 3
  store i64 %5569, i64* %PC.i555
  %5570 = trunc i64 %5565 to i32
  %5571 = inttoptr i64 %5567 to i32*
  %5572 = load i32, i32* %5571
  %5573 = add i32 %5572, %5570
  %5574 = zext i32 %5573 to i64
  store i64 %5574, i64* %RAX.i556, align 8
  %5575 = icmp ult i32 %5573, %5570
  %5576 = icmp ult i32 %5573, %5572
  %5577 = or i1 %5575, %5576
  %5578 = zext i1 %5577 to i8
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5578, i8* %5579, align 1
  %5580 = and i32 %5573, 255
  %5581 = call i32 @llvm.ctpop.i32(i32 %5580)
  %5582 = trunc i32 %5581 to i8
  %5583 = and i8 %5582, 1
  %5584 = xor i8 %5583, 1
  %5585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5584, i8* %5585, align 1
  %5586 = xor i32 %5572, %5570
  %5587 = xor i32 %5586, %5573
  %5588 = lshr i32 %5587, 4
  %5589 = trunc i32 %5588 to i8
  %5590 = and i8 %5589, 1
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5590, i8* %5591, align 1
  %5592 = icmp eq i32 %5573, 0
  %5593 = zext i1 %5592 to i8
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5593, i8* %5594, align 1
  %5595 = lshr i32 %5573, 31
  %5596 = trunc i32 %5595 to i8
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5596, i8* %5597, align 1
  %5598 = lshr i32 %5570, 31
  %5599 = lshr i32 %5572, 31
  %5600 = xor i32 %5595, %5598
  %5601 = xor i32 %5595, %5599
  %5602 = add i32 %5600, %5601
  %5603 = icmp eq i32 %5602, 2
  %5604 = zext i1 %5603 to i8
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5604, i8* %5605, align 1
  store %struct.Memory* %loadMem_413604, %struct.Memory** %MEMORY
  %loadMem_413607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5607 = getelementptr inbounds %struct.GPR, %struct.GPR* %5606, i32 0, i32 33
  %5608 = getelementptr inbounds %struct.Reg, %struct.Reg* %5607, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %5608 to i64*
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5610 = getelementptr inbounds %struct.GPR, %struct.GPR* %5609, i32 0, i32 1
  %5611 = getelementptr inbounds %struct.Reg, %struct.Reg* %5610, i32 0, i32 0
  %EAX.i553 = bitcast %union.anon* %5611 to i32*
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5613 = getelementptr inbounds %struct.GPR, %struct.GPR* %5612, i32 0, i32 15
  %5614 = getelementptr inbounds %struct.Reg, %struct.Reg* %5613, i32 0, i32 0
  %RBP.i554 = bitcast %union.anon* %5614 to i64*
  %5615 = load i64, i64* %RBP.i554
  %5616 = sub i64 %5615, 188
  %5617 = load i32, i32* %EAX.i553
  %5618 = zext i32 %5617 to i64
  %5619 = load i64, i64* %PC.i552
  %5620 = add i64 %5619, 6
  store i64 %5620, i64* %PC.i552
  %5621 = inttoptr i64 %5616 to i32*
  store i32 %5617, i32* %5621
  store %struct.Memory* %loadMem_413607, %struct.Memory** %MEMORY
  br label %block_.L_41360d

block_.L_41360d:                                  ; preds = %block_.L_4135fb, %block_4135e4
  %loadMem_41360d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 33
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %5624 to i64*
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5626 = getelementptr inbounds %struct.GPR, %struct.GPR* %5625, i32 0, i32 1
  %5627 = getelementptr inbounds %struct.Reg, %struct.Reg* %5626, i32 0, i32 0
  %RAX.i550 = bitcast %union.anon* %5627 to i64*
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5629 = getelementptr inbounds %struct.GPR, %struct.GPR* %5628, i32 0, i32 15
  %5630 = getelementptr inbounds %struct.Reg, %struct.Reg* %5629, i32 0, i32 0
  %RBP.i551 = bitcast %union.anon* %5630 to i64*
  %5631 = load i64, i64* %RBP.i551
  %5632 = sub i64 %5631, 188
  %5633 = load i64, i64* %PC.i549
  %5634 = add i64 %5633, 6
  store i64 %5634, i64* %PC.i549
  %5635 = inttoptr i64 %5632 to i32*
  %5636 = load i32, i32* %5635
  %5637 = zext i32 %5636 to i64
  store i64 %5637, i64* %RAX.i550, align 8
  store %struct.Memory* %loadMem_41360d, %struct.Memory** %MEMORY
  %loadMem_413613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5639 = getelementptr inbounds %struct.GPR, %struct.GPR* %5638, i32 0, i32 33
  %5640 = getelementptr inbounds %struct.Reg, %struct.Reg* %5639, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %5640 to i64*
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5642 = getelementptr inbounds %struct.GPR, %struct.GPR* %5641, i32 0, i32 1
  %5643 = getelementptr inbounds %struct.Reg, %struct.Reg* %5642, i32 0, i32 0
  %EAX.i547 = bitcast %union.anon* %5643 to i32*
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 15
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %RBP.i548 = bitcast %union.anon* %5646 to i64*
  %5647 = load i64, i64* %RBP.i548
  %5648 = sub i64 %5647, 184
  %5649 = load i32, i32* %EAX.i547
  %5650 = zext i32 %5649 to i64
  %5651 = load i64, i64* %PC.i546
  %5652 = add i64 %5651, 6
  store i64 %5652, i64* %PC.i546
  %5653 = inttoptr i64 %5648 to i32*
  store i32 %5649, i32* %5653
  store %struct.Memory* %loadMem_413613, %struct.Memory** %MEMORY
  br label %block_.L_413619

block_.L_413619:                                  ; preds = %block_.L_41360d, %block_4135ca
  %loadMem_413619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5655 = getelementptr inbounds %struct.GPR, %struct.GPR* %5654, i32 0, i32 33
  %5656 = getelementptr inbounds %struct.Reg, %struct.Reg* %5655, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %5656 to i64*
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5658 = getelementptr inbounds %struct.GPR, %struct.GPR* %5657, i32 0, i32 1
  %5659 = getelementptr inbounds %struct.Reg, %struct.Reg* %5658, i32 0, i32 0
  %RAX.i544 = bitcast %union.anon* %5659 to i64*
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5661 = getelementptr inbounds %struct.GPR, %struct.GPR* %5660, i32 0, i32 15
  %5662 = getelementptr inbounds %struct.Reg, %struct.Reg* %5661, i32 0, i32 0
  %RBP.i545 = bitcast %union.anon* %5662 to i64*
  %5663 = load i64, i64* %RBP.i545
  %5664 = sub i64 %5663, 184
  %5665 = load i64, i64* %PC.i543
  %5666 = add i64 %5665, 6
  store i64 %5666, i64* %PC.i543
  %5667 = inttoptr i64 %5664 to i32*
  %5668 = load i32, i32* %5667
  %5669 = zext i32 %5668 to i64
  store i64 %5669, i64* %RAX.i544, align 8
  store %struct.Memory* %loadMem_413619, %struct.Memory** %MEMORY
  %loadMem_41361f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5671 = getelementptr inbounds %struct.GPR, %struct.GPR* %5670, i32 0, i32 33
  %5672 = getelementptr inbounds %struct.Reg, %struct.Reg* %5671, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %5672 to i64*
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5674 = getelementptr inbounds %struct.GPR, %struct.GPR* %5673, i32 0, i32 1
  %5675 = getelementptr inbounds %struct.Reg, %struct.Reg* %5674, i32 0, i32 0
  %EAX.i541 = bitcast %union.anon* %5675 to i32*
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5677 = getelementptr inbounds %struct.GPR, %struct.GPR* %5676, i32 0, i32 15
  %5678 = getelementptr inbounds %struct.Reg, %struct.Reg* %5677, i32 0, i32 0
  %RBP.i542 = bitcast %union.anon* %5678 to i64*
  %5679 = load i64, i64* %RBP.i542
  %5680 = sub i64 %5679, 180
  %5681 = load i32, i32* %EAX.i541
  %5682 = zext i32 %5681 to i64
  %5683 = load i64, i64* %PC.i540
  %5684 = add i64 %5683, 6
  store i64 %5684, i64* %PC.i540
  %5685 = inttoptr i64 %5680 to i32*
  store i32 %5681, i32* %5685
  store %struct.Memory* %loadMem_41361f, %struct.Memory** %MEMORY
  br label %block_.L_413625

block_.L_413625:                                  ; preds = %block_.L_413619, %block_4135b0
  %loadMem_413625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5687 = getelementptr inbounds %struct.GPR, %struct.GPR* %5686, i32 0, i32 33
  %5688 = getelementptr inbounds %struct.Reg, %struct.Reg* %5687, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %5688 to i64*
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5690 = getelementptr inbounds %struct.GPR, %struct.GPR* %5689, i32 0, i32 1
  %5691 = getelementptr inbounds %struct.Reg, %struct.Reg* %5690, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %5691 to i64*
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5693 = getelementptr inbounds %struct.GPR, %struct.GPR* %5692, i32 0, i32 15
  %5694 = getelementptr inbounds %struct.Reg, %struct.Reg* %5693, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %5694 to i64*
  %5695 = load i64, i64* %RBP.i539
  %5696 = sub i64 %5695, 180
  %5697 = load i64, i64* %PC.i537
  %5698 = add i64 %5697, 6
  store i64 %5698, i64* %PC.i537
  %5699 = inttoptr i64 %5696 to i32*
  %5700 = load i32, i32* %5699
  %5701 = zext i32 %5700 to i64
  store i64 %5701, i64* %RAX.i538, align 8
  store %struct.Memory* %loadMem_413625, %struct.Memory** %MEMORY
  %loadMem_41362b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5703 = getelementptr inbounds %struct.GPR, %struct.GPR* %5702, i32 0, i32 33
  %5704 = getelementptr inbounds %struct.Reg, %struct.Reg* %5703, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %5704 to i64*
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5706 = getelementptr inbounds %struct.GPR, %struct.GPR* %5705, i32 0, i32 1
  %5707 = getelementptr inbounds %struct.Reg, %struct.Reg* %5706, i32 0, i32 0
  %EAX.i535 = bitcast %union.anon* %5707 to i32*
  %5708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5709 = getelementptr inbounds %struct.GPR, %struct.GPR* %5708, i32 0, i32 15
  %5710 = getelementptr inbounds %struct.Reg, %struct.Reg* %5709, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %5710 to i64*
  %5711 = load i64, i64* %RBP.i536
  %5712 = sub i64 %5711, 176
  %5713 = load i32, i32* %EAX.i535
  %5714 = zext i32 %5713 to i64
  %5715 = load i64, i64* %PC.i534
  %5716 = add i64 %5715, 6
  store i64 %5716, i64* %PC.i534
  %5717 = inttoptr i64 %5712 to i32*
  store i32 %5713, i32* %5717
  store %struct.Memory* %loadMem_41362b, %struct.Memory** %MEMORY
  br label %block_.L_413631

block_.L_413631:                                  ; preds = %block_.L_413625, %block_41358f
  %loadMem_413631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5719 = getelementptr inbounds %struct.GPR, %struct.GPR* %5718, i32 0, i32 33
  %5720 = getelementptr inbounds %struct.Reg, %struct.Reg* %5719, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %5720 to i64*
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 1
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %5723 to i64*
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5725 = getelementptr inbounds %struct.GPR, %struct.GPR* %5724, i32 0, i32 15
  %5726 = getelementptr inbounds %struct.Reg, %struct.Reg* %5725, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %5726 to i64*
  %5727 = load i64, i64* %RBP.i533
  %5728 = sub i64 %5727, 176
  %5729 = load i64, i64* %PC.i531
  %5730 = add i64 %5729, 6
  store i64 %5730, i64* %PC.i531
  %5731 = inttoptr i64 %5728 to i32*
  %5732 = load i32, i32* %5731
  %5733 = zext i32 %5732 to i64
  store i64 %5733, i64* %RAX.i532, align 8
  store %struct.Memory* %loadMem_413631, %struct.Memory** %MEMORY
  %loadMem_413637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5735 = getelementptr inbounds %struct.GPR, %struct.GPR* %5734, i32 0, i32 33
  %5736 = getelementptr inbounds %struct.Reg, %struct.Reg* %5735, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %5736 to i64*
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5738 = getelementptr inbounds %struct.GPR, %struct.GPR* %5737, i32 0, i32 1
  %5739 = getelementptr inbounds %struct.Reg, %struct.Reg* %5738, i32 0, i32 0
  %EAX.i529 = bitcast %union.anon* %5739 to i32*
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5741 = getelementptr inbounds %struct.GPR, %struct.GPR* %5740, i32 0, i32 15
  %5742 = getelementptr inbounds %struct.Reg, %struct.Reg* %5741, i32 0, i32 0
  %RBP.i530 = bitcast %union.anon* %5742 to i64*
  %5743 = load i64, i64* %RBP.i530
  %5744 = sub i64 %5743, 172
  %5745 = load i32, i32* %EAX.i529
  %5746 = zext i32 %5745 to i64
  %5747 = load i64, i64* %PC.i528
  %5748 = add i64 %5747, 6
  store i64 %5748, i64* %PC.i528
  %5749 = inttoptr i64 %5744 to i32*
  store i32 %5745, i32* %5749
  store %struct.Memory* %loadMem_413637, %struct.Memory** %MEMORY
  br label %block_.L_41363d

block_.L_41363d:                                  ; preds = %block_.L_413631, %block_413578
  %loadMem_41363d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 33
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 1
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %RAX.i526 = bitcast %union.anon* %5755 to i64*
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5757 = getelementptr inbounds %struct.GPR, %struct.GPR* %5756, i32 0, i32 15
  %5758 = getelementptr inbounds %struct.Reg, %struct.Reg* %5757, i32 0, i32 0
  %RBP.i527 = bitcast %union.anon* %5758 to i64*
  %5759 = load i64, i64* %RBP.i527
  %5760 = sub i64 %5759, 172
  %5761 = load i64, i64* %PC.i525
  %5762 = add i64 %5761, 6
  store i64 %5762, i64* %PC.i525
  %5763 = inttoptr i64 %5760 to i32*
  %5764 = load i32, i32* %5763
  %5765 = zext i32 %5764 to i64
  store i64 %5765, i64* %RAX.i526, align 8
  store %struct.Memory* %loadMem_41363d, %struct.Memory** %MEMORY
  %loadMem_413643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 33
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %5768 to i64*
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5770 = getelementptr inbounds %struct.GPR, %struct.GPR* %5769, i32 0, i32 1
  %5771 = getelementptr inbounds %struct.Reg, %struct.Reg* %5770, i32 0, i32 0
  %EAX.i523 = bitcast %union.anon* %5771 to i32*
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5773 = getelementptr inbounds %struct.GPR, %struct.GPR* %5772, i32 0, i32 15
  %5774 = getelementptr inbounds %struct.Reg, %struct.Reg* %5773, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %5774 to i64*
  %5775 = load i64, i64* %RBP.i524
  %5776 = sub i64 %5775, 64
  %5777 = load i32, i32* %EAX.i523
  %5778 = zext i32 %5777 to i64
  %5779 = load i64, i64* %PC.i522
  %5780 = add i64 %5779, 3
  store i64 %5780, i64* %PC.i522
  %5781 = inttoptr i64 %5776 to i32*
  store i32 %5777, i32* %5781
  store %struct.Memory* %loadMem_413643, %struct.Memory** %MEMORY
  %loadMem_413646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 33
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %5784 to i64*
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 15
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %RBP.i521 = bitcast %union.anon* %5787 to i64*
  %5788 = load i64, i64* %RBP.i521
  %5789 = sub i64 %5788, 24
  %5790 = load i64, i64* %PC.i520
  %5791 = add i64 %5790, 4
  store i64 %5791, i64* %PC.i520
  %5792 = inttoptr i64 %5789 to i32*
  %5793 = load i32, i32* %5792
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5794, align 1
  %5795 = and i32 %5793, 255
  %5796 = call i32 @llvm.ctpop.i32(i32 %5795)
  %5797 = trunc i32 %5796 to i8
  %5798 = and i8 %5797, 1
  %5799 = xor i8 %5798, 1
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5799, i8* %5800, align 1
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5801, align 1
  %5802 = icmp eq i32 %5793, 0
  %5803 = zext i1 %5802 to i8
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5803, i8* %5804, align 1
  %5805 = lshr i32 %5793, 31
  %5806 = trunc i32 %5805 to i8
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5806, i8* %5807, align 1
  %5808 = lshr i32 %5793, 31
  %5809 = xor i32 %5805, %5808
  %5810 = add i32 %5809, %5808
  %5811 = icmp eq i32 %5810, 2
  %5812 = zext i1 %5811 to i8
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5812, i8* %5813, align 1
  store %struct.Memory* %loadMem_413646, %struct.Memory** %MEMORY
  %loadMem_41364a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5815 = getelementptr inbounds %struct.GPR, %struct.GPR* %5814, i32 0, i32 33
  %5816 = getelementptr inbounds %struct.Reg, %struct.Reg* %5815, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %5816 to i64*
  %5817 = load i64, i64* %PC.i519
  %5818 = add i64 %5817, 355
  %5819 = load i64, i64* %PC.i519
  %5820 = add i64 %5819, 6
  %5821 = load i64, i64* %PC.i519
  %5822 = add i64 %5821, 6
  store i64 %5822, i64* %PC.i519
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5824 = load i8, i8* %5823, align 1
  store i8 %5824, i8* %BRANCH_TAKEN, align 1
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5826 = icmp ne i8 %5824, 0
  %5827 = select i1 %5826, i64 %5818, i64 %5820
  store i64 %5827, i64* %5825, align 8
  store %struct.Memory* %loadMem_41364a, %struct.Memory** %MEMORY
  %loadBr_41364a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41364a = icmp eq i8 %loadBr_41364a, 1
  br i1 %cmpBr_41364a, label %block_.L_4137ad, label %block_413650

block_413650:                                     ; preds = %block_.L_41363d
  %loadMem_413650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 33
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %5830 to i64*
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 15
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %5833 to i64*
  %5834 = load i64, i64* %RBP.i518
  %5835 = sub i64 %5834, 20
  %5836 = load i64, i64* %PC.i517
  %5837 = add i64 %5836, 4
  store i64 %5837, i64* %PC.i517
  %5838 = inttoptr i64 %5835 to i32*
  %5839 = load i32, i32* %5838
  %5840 = sub i32 %5839, 2
  %5841 = icmp ult i32 %5839, 2
  %5842 = zext i1 %5841 to i8
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5842, i8* %5843, align 1
  %5844 = and i32 %5840, 255
  %5845 = call i32 @llvm.ctpop.i32(i32 %5844)
  %5846 = trunc i32 %5845 to i8
  %5847 = and i8 %5846, 1
  %5848 = xor i8 %5847, 1
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5848, i8* %5849, align 1
  %5850 = xor i32 %5839, 2
  %5851 = xor i32 %5850, %5840
  %5852 = lshr i32 %5851, 4
  %5853 = trunc i32 %5852 to i8
  %5854 = and i8 %5853, 1
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5854, i8* %5855, align 1
  %5856 = icmp eq i32 %5840, 0
  %5857 = zext i1 %5856 to i8
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5857, i8* %5858, align 1
  %5859 = lshr i32 %5840, 31
  %5860 = trunc i32 %5859 to i8
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5860, i8* %5861, align 1
  %5862 = lshr i32 %5839, 31
  %5863 = xor i32 %5859, %5862
  %5864 = add i32 %5863, %5862
  %5865 = icmp eq i32 %5864, 2
  %5866 = zext i1 %5865 to i8
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5866, i8* %5867, align 1
  store %struct.Memory* %loadMem_413650, %struct.Memory** %MEMORY
  %loadMem_413654 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5869 = getelementptr inbounds %struct.GPR, %struct.GPR* %5868, i32 0, i32 33
  %5870 = getelementptr inbounds %struct.Reg, %struct.Reg* %5869, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %5870 to i64*
  %5871 = load i64, i64* %PC.i516
  %5872 = add i64 %5871, 141
  %5873 = load i64, i64* %PC.i516
  %5874 = add i64 %5873, 6
  %5875 = load i64, i64* %PC.i516
  %5876 = add i64 %5875, 6
  store i64 %5876, i64* %PC.i516
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5878 = load i8, i8* %5877, align 1
  %5879 = icmp eq i8 %5878, 0
  %5880 = zext i1 %5879 to i8
  store i8 %5880, i8* %BRANCH_TAKEN, align 1
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5882 = select i1 %5879, i64 %5872, i64 %5874
  store i64 %5882, i64* %5881, align 8
  store %struct.Memory* %loadMem_413654, %struct.Memory** %MEMORY
  %loadBr_413654 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413654 = icmp eq i8 %loadBr_413654, 1
  br i1 %cmpBr_413654, label %block_.L_4136e1, label %block_41365a

block_41365a:                                     ; preds = %block_413650
  %loadMem_41365a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5884 = getelementptr inbounds %struct.GPR, %struct.GPR* %5883, i32 0, i32 33
  %5885 = getelementptr inbounds %struct.Reg, %struct.Reg* %5884, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %5885 to i64*
  %5886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5887 = getelementptr inbounds %struct.GPR, %struct.GPR* %5886, i32 0, i32 1
  %5888 = getelementptr inbounds %struct.Reg, %struct.Reg* %5887, i32 0, i32 0
  %RAX.i515 = bitcast %union.anon* %5888 to i64*
  %5889 = load i64, i64* %PC.i514
  %5890 = add i64 %5889, 5
  store i64 %5890, i64* %PC.i514
  store i64 1, i64* %RAX.i515, align 8
  store %struct.Memory* %loadMem_41365a, %struct.Memory** %MEMORY
  %loadMem_41365f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5892 = getelementptr inbounds %struct.GPR, %struct.GPR* %5891, i32 0, i32 33
  %5893 = getelementptr inbounds %struct.Reg, %struct.Reg* %5892, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %5893 to i64*
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5895 = getelementptr inbounds %struct.GPR, %struct.GPR* %5894, i32 0, i32 5
  %5896 = getelementptr inbounds %struct.Reg, %struct.Reg* %5895, i32 0, i32 0
  %RCX.i512 = bitcast %union.anon* %5896 to i64*
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5898 = getelementptr inbounds %struct.GPR, %struct.GPR* %5897, i32 0, i32 15
  %5899 = getelementptr inbounds %struct.Reg, %struct.Reg* %5898, i32 0, i32 0
  %RBP.i513 = bitcast %union.anon* %5899 to i64*
  %5900 = load i64, i64* %RBP.i513
  %5901 = sub i64 %5900, 64
  %5902 = load i64, i64* %PC.i511
  %5903 = add i64 %5902, 3
  store i64 %5903, i64* %PC.i511
  %5904 = inttoptr i64 %5901 to i32*
  %5905 = load i32, i32* %5904
  %5906 = zext i32 %5905 to i64
  store i64 %5906, i64* %RCX.i512, align 8
  store %struct.Memory* %loadMem_41365f, %struct.Memory** %MEMORY
  %loadMem_413662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 33
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %5909 to i64*
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5911 = getelementptr inbounds %struct.GPR, %struct.GPR* %5910, i32 0, i32 1
  %5912 = getelementptr inbounds %struct.Reg, %struct.Reg* %5911, i32 0, i32 0
  %EAX.i509 = bitcast %union.anon* %5912 to i32*
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 7
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %RDX.i510 = bitcast %union.anon* %5915 to i64*
  %5916 = load i32, i32* %EAX.i509
  %5917 = zext i32 %5916 to i64
  %5918 = load i64, i64* %PC.i508
  %5919 = add i64 %5918, 2
  store i64 %5919, i64* %PC.i508
  %5920 = and i64 %5917, 4294967295
  store i64 %5920, i64* %RDX.i510, align 8
  store %struct.Memory* %loadMem_413662, %struct.Memory** %MEMORY
  %loadMem_413664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5922 = getelementptr inbounds %struct.GPR, %struct.GPR* %5921, i32 0, i32 33
  %5923 = getelementptr inbounds %struct.Reg, %struct.Reg* %5922, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %5923 to i64*
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 5
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %5927 = bitcast %union.anon* %5926 to %struct.anon.2*
  %CL.i505 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5927, i32 0, i32 0
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5929 = getelementptr inbounds %struct.GPR, %struct.GPR* %5928, i32 0, i32 7
  %5930 = getelementptr inbounds %struct.Reg, %struct.Reg* %5929, i32 0, i32 0
  %RDX.i506 = bitcast %union.anon* %5930 to i64*
  %5931 = load i64, i64* %RDX.i506
  %5932 = load i8, i8* %CL.i505
  %5933 = zext i8 %5932 to i64
  %5934 = load i64, i64* %PC.i504
  %5935 = add i64 %5934, 2
  store i64 %5935, i64* %PC.i504
  %5936 = trunc i64 %5933 to i5
  switch i5 %5936, label %5943 [
    i5 0, label %routine_shll__cl___edx.exit507
    i5 1, label %5937
  ]

; <label>:5937:                                   ; preds = %block_41365a
  %5938 = trunc i64 %5931 to i32
  %5939 = shl i32 %5938, 1
  %5940 = icmp slt i32 %5938, 0
  %5941 = icmp slt i32 %5939, 0
  %5942 = xor i1 %5940, %5941
  br label %5952

; <label>:5943:                                   ; preds = %block_41365a
  %5944 = and i64 %5933, 31
  %5945 = add i64 %5944, 4294967295
  %5946 = and i64 %5931, 4294967295
  %5947 = and i64 %5945, 4294967295
  %5948 = shl i64 %5946, %5947
  %5949 = trunc i64 %5948 to i32
  %5950 = icmp slt i32 %5949, 0
  %5951 = shl i32 %5949, 1
  br label %5952

; <label>:5952:                                   ; preds = %5943, %5937
  %5953 = phi i1 [ %5940, %5937 ], [ %5950, %5943 ]
  %5954 = phi i1 [ %5942, %5937 ], [ false, %5943 ]
  %5955 = phi i32 [ %5939, %5937 ], [ %5951, %5943 ]
  %5956 = zext i32 %5955 to i64
  store i64 %5956, i64* %RDX.i506, align 8
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5958 = zext i1 %5953 to i8
  store i8 %5958, i8* %5957, align 1
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5960 = and i32 %5955, 254
  %5961 = call i32 @llvm.ctpop.i32(i32 %5960)
  %5962 = trunc i32 %5961 to i8
  %5963 = and i8 %5962, 1
  %5964 = xor i8 %5963, 1
  store i8 %5964, i8* %5959, align 1
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5965, align 1
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5967 = icmp eq i32 %5955, 0
  %5968 = zext i1 %5967 to i8
  store i8 %5968, i8* %5966, align 1
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5970 = lshr i32 %5955, 31
  %5971 = trunc i32 %5970 to i8
  store i8 %5971, i8* %5969, align 1
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5973 = zext i1 %5954 to i8
  store i8 %5973, i8* %5972, align 1
  br label %routine_shll__cl___edx.exit507

routine_shll__cl___edx.exit507:                   ; preds = %block_41365a, %5952
  store %struct.Memory* %loadMem_413664, %struct.Memory** %MEMORY
  %loadMem_413666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5975 = getelementptr inbounds %struct.GPR, %struct.GPR* %5974, i32 0, i32 33
  %5976 = getelementptr inbounds %struct.Reg, %struct.Reg* %5975, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %5976 to i64*
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5978 = getelementptr inbounds %struct.GPR, %struct.GPR* %5977, i32 0, i32 7
  %5979 = getelementptr inbounds %struct.Reg, %struct.Reg* %5978, i32 0, i32 0
  %EDX.i502 = bitcast %union.anon* %5979 to i32*
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 9
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %RSI.i503 = bitcast %union.anon* %5982 to i64*
  %5983 = load i32, i32* %EDX.i502
  %5984 = zext i32 %5983 to i64
  %5985 = load i64, i64* %PC.i501
  %5986 = add i64 %5985, 3
  store i64 %5986, i64* %PC.i501
  %5987 = shl i64 %5984, 32
  %5988 = ashr exact i64 %5987, 32
  store i64 %5988, i64* %RSI.i503, align 8
  store %struct.Memory* %loadMem_413666, %struct.Memory** %MEMORY
  %loadMem_413669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5990 = getelementptr inbounds %struct.GPR, %struct.GPR* %5989, i32 0, i32 33
  %5991 = getelementptr inbounds %struct.Reg, %struct.Reg* %5990, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %5991 to i64*
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5993 = getelementptr inbounds %struct.GPR, %struct.GPR* %5992, i32 0, i32 11
  %5994 = getelementptr inbounds %struct.Reg, %struct.Reg* %5993, i32 0, i32 0
  %RDI.i499 = bitcast %union.anon* %5994 to i64*
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 15
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %5997 to i64*
  %5998 = load i64, i64* %RBP.i500
  %5999 = sub i64 %5998, 8
  %6000 = load i64, i64* %PC.i498
  %6001 = add i64 %6000, 4
  store i64 %6001, i64* %PC.i498
  %6002 = inttoptr i64 %5999 to i64*
  %6003 = load i64, i64* %6002
  store i64 %6003, i64* %RDI.i499, align 8
  store %struct.Memory* %loadMem_413669, %struct.Memory** %MEMORY
  %loadMem_41366d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6005 = getelementptr inbounds %struct.GPR, %struct.GPR* %6004, i32 0, i32 33
  %6006 = getelementptr inbounds %struct.Reg, %struct.Reg* %6005, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6006 to i64*
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6008 = getelementptr inbounds %struct.GPR, %struct.GPR* %6007, i32 0, i32 9
  %6009 = getelementptr inbounds %struct.Reg, %struct.Reg* %6008, i32 0, i32 0
  %RSI.i496 = bitcast %union.anon* %6009 to i64*
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 11
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %RDI.i497 = bitcast %union.anon* %6012 to i64*
  %6013 = load i64, i64* %RSI.i496
  %6014 = load i64, i64* %RDI.i497
  %6015 = add i64 %6014, 504
  %6016 = load i64, i64* %PC.i495
  %6017 = add i64 %6016, 7
  store i64 %6017, i64* %PC.i495
  %6018 = inttoptr i64 %6015 to i64*
  %6019 = load i64, i64* %6018
  %6020 = or i64 %6019, %6013
  store i64 %6020, i64* %RSI.i496, align 8
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6021, align 1
  %6022 = trunc i64 %6020 to i32
  %6023 = and i32 %6022, 255
  %6024 = call i32 @llvm.ctpop.i32(i32 %6023)
  %6025 = trunc i32 %6024 to i8
  %6026 = and i8 %6025, 1
  %6027 = xor i8 %6026, 1
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6027, i8* %6028, align 1
  %6029 = icmp eq i64 %6020, 0
  %6030 = zext i1 %6029 to i8
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6030, i8* %6031, align 1
  %6032 = lshr i64 %6020, 63
  %6033 = trunc i64 %6032 to i8
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6033, i8* %6034, align 1
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6035, align 1
  %6036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6036, align 1
  store %struct.Memory* %loadMem_41366d, %struct.Memory** %MEMORY
  %loadMem_413674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6038 = getelementptr inbounds %struct.GPR, %struct.GPR* %6037, i32 0, i32 33
  %6039 = getelementptr inbounds %struct.Reg, %struct.Reg* %6038, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6039 to i64*
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6041 = getelementptr inbounds %struct.GPR, %struct.GPR* %6040, i32 0, i32 9
  %6042 = getelementptr inbounds %struct.Reg, %struct.Reg* %6041, i32 0, i32 0
  %RSI.i493 = bitcast %union.anon* %6042 to i64*
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6044 = getelementptr inbounds %struct.GPR, %struct.GPR* %6043, i32 0, i32 11
  %6045 = getelementptr inbounds %struct.Reg, %struct.Reg* %6044, i32 0, i32 0
  %RDI.i494 = bitcast %union.anon* %6045 to i64*
  %6046 = load i64, i64* %RDI.i494
  %6047 = add i64 %6046, 504
  %6048 = load i64, i64* %RSI.i493
  %6049 = load i64, i64* %PC.i492
  %6050 = add i64 %6049, 7
  store i64 %6050, i64* %PC.i492
  %6051 = inttoptr i64 %6047 to i64*
  store i64 %6048, i64* %6051
  store %struct.Memory* %loadMem_413674, %struct.Memory** %MEMORY
  %loadMem_41367b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6053 = getelementptr inbounds %struct.GPR, %struct.GPR* %6052, i32 0, i32 33
  %6054 = getelementptr inbounds %struct.Reg, %struct.Reg* %6053, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %6054 to i64*
  %6055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6056 = getelementptr inbounds %struct.GPR, %struct.GPR* %6055, i32 0, i32 7
  %6057 = getelementptr inbounds %struct.Reg, %struct.Reg* %6056, i32 0, i32 0
  %RDX.i490 = bitcast %union.anon* %6057 to i64*
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6059 = getelementptr inbounds %struct.GPR, %struct.GPR* %6058, i32 0, i32 15
  %6060 = getelementptr inbounds %struct.Reg, %struct.Reg* %6059, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %6060 to i64*
  %6061 = load i64, i64* %RBP.i491
  %6062 = sub i64 %6061, 64
  %6063 = load i64, i64* %PC.i489
  %6064 = add i64 %6063, 3
  store i64 %6064, i64* %PC.i489
  %6065 = inttoptr i64 %6062 to i32*
  %6066 = load i32, i32* %6065
  %6067 = zext i32 %6066 to i64
  store i64 %6067, i64* %RDX.i490, align 8
  store %struct.Memory* %loadMem_41367b, %struct.Memory** %MEMORY
  %loadMem_41367e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6069 = getelementptr inbounds %struct.GPR, %struct.GPR* %6068, i32 0, i32 33
  %6070 = getelementptr inbounds %struct.Reg, %struct.Reg* %6069, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %6070 to i64*
  %6071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6072 = getelementptr inbounds %struct.GPR, %struct.GPR* %6071, i32 0, i32 7
  %6073 = getelementptr inbounds %struct.Reg, %struct.Reg* %6072, i32 0, i32 0
  %RDX.i488 = bitcast %union.anon* %6073 to i64*
  %6074 = load i64, i64* %RDX.i488
  %6075 = load i64, i64* %PC.i487
  %6076 = add i64 %6075, 3
  store i64 %6076, i64* %PC.i487
  %6077 = trunc i64 %6074 to i32
  %6078 = add i32 1, %6077
  %6079 = zext i32 %6078 to i64
  store i64 %6079, i64* %RDX.i488, align 8
  %6080 = icmp ult i32 %6078, %6077
  %6081 = icmp ult i32 %6078, 1
  %6082 = or i1 %6080, %6081
  %6083 = zext i1 %6082 to i8
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6083, i8* %6084, align 1
  %6085 = and i32 %6078, 255
  %6086 = call i32 @llvm.ctpop.i32(i32 %6085)
  %6087 = trunc i32 %6086 to i8
  %6088 = and i8 %6087, 1
  %6089 = xor i8 %6088, 1
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6089, i8* %6090, align 1
  %6091 = xor i64 1, %6074
  %6092 = trunc i64 %6091 to i32
  %6093 = xor i32 %6092, %6078
  %6094 = lshr i32 %6093, 4
  %6095 = trunc i32 %6094 to i8
  %6096 = and i8 %6095, 1
  %6097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6096, i8* %6097, align 1
  %6098 = icmp eq i32 %6078, 0
  %6099 = zext i1 %6098 to i8
  %6100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6099, i8* %6100, align 1
  %6101 = lshr i32 %6078, 31
  %6102 = trunc i32 %6101 to i8
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6102, i8* %6103, align 1
  %6104 = lshr i32 %6077, 31
  %6105 = xor i32 %6101, %6104
  %6106 = add i32 %6105, %6101
  %6107 = icmp eq i32 %6106, 2
  %6108 = zext i1 %6107 to i8
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6108, i8* %6109, align 1
  store %struct.Memory* %loadMem_41367e, %struct.Memory** %MEMORY
  %loadMem_413681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6111 = getelementptr inbounds %struct.GPR, %struct.GPR* %6110, i32 0, i32 33
  %6112 = getelementptr inbounds %struct.Reg, %struct.Reg* %6111, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %6112 to i64*
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6114 = getelementptr inbounds %struct.GPR, %struct.GPR* %6113, i32 0, i32 7
  %6115 = getelementptr inbounds %struct.Reg, %struct.Reg* %6114, i32 0, i32 0
  %EDX.i485 = bitcast %union.anon* %6115 to i32*
  %6116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6117 = getelementptr inbounds %struct.GPR, %struct.GPR* %6116, i32 0, i32 5
  %6118 = getelementptr inbounds %struct.Reg, %struct.Reg* %6117, i32 0, i32 0
  %RCX.i486 = bitcast %union.anon* %6118 to i64*
  %6119 = load i32, i32* %EDX.i485
  %6120 = zext i32 %6119 to i64
  %6121 = load i64, i64* %PC.i484
  %6122 = add i64 %6121, 2
  store i64 %6122, i64* %PC.i484
  %6123 = and i64 %6120, 4294967295
  store i64 %6123, i64* %RCX.i486, align 8
  store %struct.Memory* %loadMem_413681, %struct.Memory** %MEMORY
  %loadMem_413683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6125 = getelementptr inbounds %struct.GPR, %struct.GPR* %6124, i32 0, i32 33
  %6126 = getelementptr inbounds %struct.Reg, %struct.Reg* %6125, i32 0, i32 0
  %PC.i481 = bitcast %union.anon* %6126 to i64*
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6128 = getelementptr inbounds %struct.GPR, %struct.GPR* %6127, i32 0, i32 1
  %6129 = getelementptr inbounds %struct.Reg, %struct.Reg* %6128, i32 0, i32 0
  %EAX.i482 = bitcast %union.anon* %6129 to i32*
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 7
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %RDX.i483 = bitcast %union.anon* %6132 to i64*
  %6133 = load i32, i32* %EAX.i482
  %6134 = zext i32 %6133 to i64
  %6135 = load i64, i64* %PC.i481
  %6136 = add i64 %6135, 2
  store i64 %6136, i64* %PC.i481
  %6137 = and i64 %6134, 4294967295
  store i64 %6137, i64* %RDX.i483, align 8
  store %struct.Memory* %loadMem_413683, %struct.Memory** %MEMORY
  %loadMem_413685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6139 = getelementptr inbounds %struct.GPR, %struct.GPR* %6138, i32 0, i32 33
  %6140 = getelementptr inbounds %struct.Reg, %struct.Reg* %6139, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %6140 to i64*
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6142 = getelementptr inbounds %struct.GPR, %struct.GPR* %6141, i32 0, i32 5
  %6143 = getelementptr inbounds %struct.Reg, %struct.Reg* %6142, i32 0, i32 0
  %6144 = bitcast %union.anon* %6143 to %struct.anon.2*
  %CL.i478 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6144, i32 0, i32 0
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6146 = getelementptr inbounds %struct.GPR, %struct.GPR* %6145, i32 0, i32 7
  %6147 = getelementptr inbounds %struct.Reg, %struct.Reg* %6146, i32 0, i32 0
  %RDX.i479 = bitcast %union.anon* %6147 to i64*
  %6148 = load i64, i64* %RDX.i479
  %6149 = load i8, i8* %CL.i478
  %6150 = zext i8 %6149 to i64
  %6151 = load i64, i64* %PC.i477
  %6152 = add i64 %6151, 2
  store i64 %6152, i64* %PC.i477
  %6153 = trunc i64 %6150 to i5
  switch i5 %6153, label %6160 [
    i5 0, label %routine_shll__cl___edx.exit480
    i5 1, label %6154
  ]

; <label>:6154:                                   ; preds = %routine_shll__cl___edx.exit507
  %6155 = trunc i64 %6148 to i32
  %6156 = shl i32 %6155, 1
  %6157 = icmp slt i32 %6155, 0
  %6158 = icmp slt i32 %6156, 0
  %6159 = xor i1 %6157, %6158
  br label %6169

; <label>:6160:                                   ; preds = %routine_shll__cl___edx.exit507
  %6161 = and i64 %6150, 31
  %6162 = add i64 %6161, 4294967295
  %6163 = and i64 %6148, 4294967295
  %6164 = and i64 %6162, 4294967295
  %6165 = shl i64 %6163, %6164
  %6166 = trunc i64 %6165 to i32
  %6167 = icmp slt i32 %6166, 0
  %6168 = shl i32 %6166, 1
  br label %6169

; <label>:6169:                                   ; preds = %6160, %6154
  %6170 = phi i1 [ %6157, %6154 ], [ %6167, %6160 ]
  %6171 = phi i1 [ %6159, %6154 ], [ false, %6160 ]
  %6172 = phi i32 [ %6156, %6154 ], [ %6168, %6160 ]
  %6173 = zext i32 %6172 to i64
  store i64 %6173, i64* %RDX.i479, align 8
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6175 = zext i1 %6170 to i8
  store i8 %6175, i8* %6174, align 1
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6177 = and i32 %6172, 254
  %6178 = call i32 @llvm.ctpop.i32(i32 %6177)
  %6179 = trunc i32 %6178 to i8
  %6180 = and i8 %6179, 1
  %6181 = xor i8 %6180, 1
  store i8 %6181, i8* %6176, align 1
  %6182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6182, align 1
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6184 = icmp eq i32 %6172, 0
  %6185 = zext i1 %6184 to i8
  store i8 %6185, i8* %6183, align 1
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6187 = lshr i32 %6172, 31
  %6188 = trunc i32 %6187 to i8
  store i8 %6188, i8* %6186, align 1
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6190 = zext i1 %6171 to i8
  store i8 %6190, i8* %6189, align 1
  br label %routine_shll__cl___edx.exit480

routine_shll__cl___edx.exit480:                   ; preds = %routine_shll__cl___edx.exit507, %6169
  store %struct.Memory* %loadMem_413685, %struct.Memory** %MEMORY
  %loadMem_413687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6192 = getelementptr inbounds %struct.GPR, %struct.GPR* %6191, i32 0, i32 33
  %6193 = getelementptr inbounds %struct.Reg, %struct.Reg* %6192, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %6193 to i64*
  %6194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6195 = getelementptr inbounds %struct.GPR, %struct.GPR* %6194, i32 0, i32 7
  %6196 = getelementptr inbounds %struct.Reg, %struct.Reg* %6195, i32 0, i32 0
  %EDX.i475 = bitcast %union.anon* %6196 to i32*
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6198 = getelementptr inbounds %struct.GPR, %struct.GPR* %6197, i32 0, i32 9
  %6199 = getelementptr inbounds %struct.Reg, %struct.Reg* %6198, i32 0, i32 0
  %RSI.i476 = bitcast %union.anon* %6199 to i64*
  %6200 = load i32, i32* %EDX.i475
  %6201 = zext i32 %6200 to i64
  %6202 = load i64, i64* %PC.i474
  %6203 = add i64 %6202, 3
  store i64 %6203, i64* %PC.i474
  %6204 = shl i64 %6201, 32
  %6205 = ashr exact i64 %6204, 32
  store i64 %6205, i64* %RSI.i476, align 8
  store %struct.Memory* %loadMem_413687, %struct.Memory** %MEMORY
  %loadMem_41368a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6207 = getelementptr inbounds %struct.GPR, %struct.GPR* %6206, i32 0, i32 33
  %6208 = getelementptr inbounds %struct.Reg, %struct.Reg* %6207, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %6208 to i64*
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6210 = getelementptr inbounds %struct.GPR, %struct.GPR* %6209, i32 0, i32 11
  %6211 = getelementptr inbounds %struct.Reg, %struct.Reg* %6210, i32 0, i32 0
  %RDI.i472 = bitcast %union.anon* %6211 to i64*
  %6212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6213 = getelementptr inbounds %struct.GPR, %struct.GPR* %6212, i32 0, i32 15
  %6214 = getelementptr inbounds %struct.Reg, %struct.Reg* %6213, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %6214 to i64*
  %6215 = load i64, i64* %RBP.i473
  %6216 = sub i64 %6215, 8
  %6217 = load i64, i64* %PC.i471
  %6218 = add i64 %6217, 4
  store i64 %6218, i64* %PC.i471
  %6219 = inttoptr i64 %6216 to i64*
  %6220 = load i64, i64* %6219
  store i64 %6220, i64* %RDI.i472, align 8
  store %struct.Memory* %loadMem_41368a, %struct.Memory** %MEMORY
  %loadMem_41368e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6222 = getelementptr inbounds %struct.GPR, %struct.GPR* %6221, i32 0, i32 33
  %6223 = getelementptr inbounds %struct.Reg, %struct.Reg* %6222, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %6223 to i64*
  %6224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6225 = getelementptr inbounds %struct.GPR, %struct.GPR* %6224, i32 0, i32 9
  %6226 = getelementptr inbounds %struct.Reg, %struct.Reg* %6225, i32 0, i32 0
  %RSI.i469 = bitcast %union.anon* %6226 to i64*
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6228 = getelementptr inbounds %struct.GPR, %struct.GPR* %6227, i32 0, i32 11
  %6229 = getelementptr inbounds %struct.Reg, %struct.Reg* %6228, i32 0, i32 0
  %RDI.i470 = bitcast %union.anon* %6229 to i64*
  %6230 = load i64, i64* %RSI.i469
  %6231 = load i64, i64* %RDI.i470
  %6232 = add i64 %6231, 504
  %6233 = load i64, i64* %PC.i468
  %6234 = add i64 %6233, 7
  store i64 %6234, i64* %PC.i468
  %6235 = inttoptr i64 %6232 to i64*
  %6236 = load i64, i64* %6235
  %6237 = or i64 %6236, %6230
  store i64 %6237, i64* %RSI.i469, align 8
  %6238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6238, align 1
  %6239 = trunc i64 %6237 to i32
  %6240 = and i32 %6239, 255
  %6241 = call i32 @llvm.ctpop.i32(i32 %6240)
  %6242 = trunc i32 %6241 to i8
  %6243 = and i8 %6242, 1
  %6244 = xor i8 %6243, 1
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6244, i8* %6245, align 1
  %6246 = icmp eq i64 %6237, 0
  %6247 = zext i1 %6246 to i8
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6247, i8* %6248, align 1
  %6249 = lshr i64 %6237, 63
  %6250 = trunc i64 %6249 to i8
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6250, i8* %6251, align 1
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6252, align 1
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6253, align 1
  store %struct.Memory* %loadMem_41368e, %struct.Memory** %MEMORY
  %loadMem_413695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6255 = getelementptr inbounds %struct.GPR, %struct.GPR* %6254, i32 0, i32 33
  %6256 = getelementptr inbounds %struct.Reg, %struct.Reg* %6255, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %6256 to i64*
  %6257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6258 = getelementptr inbounds %struct.GPR, %struct.GPR* %6257, i32 0, i32 9
  %6259 = getelementptr inbounds %struct.Reg, %struct.Reg* %6258, i32 0, i32 0
  %RSI.i466 = bitcast %union.anon* %6259 to i64*
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6261 = getelementptr inbounds %struct.GPR, %struct.GPR* %6260, i32 0, i32 11
  %6262 = getelementptr inbounds %struct.Reg, %struct.Reg* %6261, i32 0, i32 0
  %RDI.i467 = bitcast %union.anon* %6262 to i64*
  %6263 = load i64, i64* %RDI.i467
  %6264 = add i64 %6263, 504
  %6265 = load i64, i64* %RSI.i466
  %6266 = load i64, i64* %PC.i465
  %6267 = add i64 %6266, 7
  store i64 %6267, i64* %PC.i465
  %6268 = inttoptr i64 %6264 to i64*
  store i64 %6265, i64* %6268
  store %struct.Memory* %loadMem_413695, %struct.Memory** %MEMORY
  %loadMem_41369c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6270 = getelementptr inbounds %struct.GPR, %struct.GPR* %6269, i32 0, i32 33
  %6271 = getelementptr inbounds %struct.Reg, %struct.Reg* %6270, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %6271 to i64*
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6273 = getelementptr inbounds %struct.GPR, %struct.GPR* %6272, i32 0, i32 7
  %6274 = getelementptr inbounds %struct.Reg, %struct.Reg* %6273, i32 0, i32 0
  %RDX.i463 = bitcast %union.anon* %6274 to i64*
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6276 = getelementptr inbounds %struct.GPR, %struct.GPR* %6275, i32 0, i32 15
  %6277 = getelementptr inbounds %struct.Reg, %struct.Reg* %6276, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %6277 to i64*
  %6278 = load i64, i64* %RBP.i464
  %6279 = sub i64 %6278, 64
  %6280 = load i64, i64* %PC.i462
  %6281 = add i64 %6280, 3
  store i64 %6281, i64* %PC.i462
  %6282 = inttoptr i64 %6279 to i32*
  %6283 = load i32, i32* %6282
  %6284 = zext i32 %6283 to i64
  store i64 %6284, i64* %RDX.i463, align 8
  store %struct.Memory* %loadMem_41369c, %struct.Memory** %MEMORY
  %loadMem_41369f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6286 = getelementptr inbounds %struct.GPR, %struct.GPR* %6285, i32 0, i32 33
  %6287 = getelementptr inbounds %struct.Reg, %struct.Reg* %6286, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6287 to i64*
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 7
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %RDX.i461 = bitcast %union.anon* %6290 to i64*
  %6291 = load i64, i64* %RDX.i461
  %6292 = load i64, i64* %PC.i460
  %6293 = add i64 %6292, 3
  store i64 %6293, i64* %PC.i460
  %6294 = trunc i64 %6291 to i32
  %6295 = add i32 4, %6294
  %6296 = zext i32 %6295 to i64
  store i64 %6296, i64* %RDX.i461, align 8
  %6297 = icmp ult i32 %6295, %6294
  %6298 = icmp ult i32 %6295, 4
  %6299 = or i1 %6297, %6298
  %6300 = zext i1 %6299 to i8
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6300, i8* %6301, align 1
  %6302 = and i32 %6295, 255
  %6303 = call i32 @llvm.ctpop.i32(i32 %6302)
  %6304 = trunc i32 %6303 to i8
  %6305 = and i8 %6304, 1
  %6306 = xor i8 %6305, 1
  %6307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6306, i8* %6307, align 1
  %6308 = xor i64 4, %6291
  %6309 = trunc i64 %6308 to i32
  %6310 = xor i32 %6309, %6295
  %6311 = lshr i32 %6310, 4
  %6312 = trunc i32 %6311 to i8
  %6313 = and i8 %6312, 1
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6313, i8* %6314, align 1
  %6315 = icmp eq i32 %6295, 0
  %6316 = zext i1 %6315 to i8
  %6317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6316, i8* %6317, align 1
  %6318 = lshr i32 %6295, 31
  %6319 = trunc i32 %6318 to i8
  %6320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6319, i8* %6320, align 1
  %6321 = lshr i32 %6294, 31
  %6322 = xor i32 %6318, %6321
  %6323 = add i32 %6322, %6318
  %6324 = icmp eq i32 %6323, 2
  %6325 = zext i1 %6324 to i8
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6325, i8* %6326, align 1
  store %struct.Memory* %loadMem_41369f, %struct.Memory** %MEMORY
  %loadMem_4136a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 33
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %6329 to i64*
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 7
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %EDX.i458 = bitcast %union.anon* %6332 to i32*
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6334 = getelementptr inbounds %struct.GPR, %struct.GPR* %6333, i32 0, i32 5
  %6335 = getelementptr inbounds %struct.Reg, %struct.Reg* %6334, i32 0, i32 0
  %RCX.i459 = bitcast %union.anon* %6335 to i64*
  %6336 = load i32, i32* %EDX.i458
  %6337 = zext i32 %6336 to i64
  %6338 = load i64, i64* %PC.i457
  %6339 = add i64 %6338, 2
  store i64 %6339, i64* %PC.i457
  %6340 = and i64 %6337, 4294967295
  store i64 %6340, i64* %RCX.i459, align 8
  store %struct.Memory* %loadMem_4136a2, %struct.Memory** %MEMORY
  %loadMem_4136a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6342 = getelementptr inbounds %struct.GPR, %struct.GPR* %6341, i32 0, i32 33
  %6343 = getelementptr inbounds %struct.Reg, %struct.Reg* %6342, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %6343 to i64*
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6345 = getelementptr inbounds %struct.GPR, %struct.GPR* %6344, i32 0, i32 1
  %6346 = getelementptr inbounds %struct.Reg, %struct.Reg* %6345, i32 0, i32 0
  %EAX.i455 = bitcast %union.anon* %6346 to i32*
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6348 = getelementptr inbounds %struct.GPR, %struct.GPR* %6347, i32 0, i32 7
  %6349 = getelementptr inbounds %struct.Reg, %struct.Reg* %6348, i32 0, i32 0
  %RDX.i456 = bitcast %union.anon* %6349 to i64*
  %6350 = load i32, i32* %EAX.i455
  %6351 = zext i32 %6350 to i64
  %6352 = load i64, i64* %PC.i454
  %6353 = add i64 %6352, 2
  store i64 %6353, i64* %PC.i454
  %6354 = and i64 %6351, 4294967295
  store i64 %6354, i64* %RDX.i456, align 8
  store %struct.Memory* %loadMem_4136a4, %struct.Memory** %MEMORY
  %loadMem_4136a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6356 = getelementptr inbounds %struct.GPR, %struct.GPR* %6355, i32 0, i32 33
  %6357 = getelementptr inbounds %struct.Reg, %struct.Reg* %6356, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %6357 to i64*
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6359 = getelementptr inbounds %struct.GPR, %struct.GPR* %6358, i32 0, i32 5
  %6360 = getelementptr inbounds %struct.Reg, %struct.Reg* %6359, i32 0, i32 0
  %6361 = bitcast %union.anon* %6360 to %struct.anon.2*
  %CL.i451 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6361, i32 0, i32 0
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 7
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %RDX.i452 = bitcast %union.anon* %6364 to i64*
  %6365 = load i64, i64* %RDX.i452
  %6366 = load i8, i8* %CL.i451
  %6367 = zext i8 %6366 to i64
  %6368 = load i64, i64* %PC.i450
  %6369 = add i64 %6368, 2
  store i64 %6369, i64* %PC.i450
  %6370 = trunc i64 %6367 to i5
  switch i5 %6370, label %6377 [
    i5 0, label %routine_shll__cl___edx.exit453
    i5 1, label %6371
  ]

; <label>:6371:                                   ; preds = %routine_shll__cl___edx.exit480
  %6372 = trunc i64 %6365 to i32
  %6373 = shl i32 %6372, 1
  %6374 = icmp slt i32 %6372, 0
  %6375 = icmp slt i32 %6373, 0
  %6376 = xor i1 %6374, %6375
  br label %6386

; <label>:6377:                                   ; preds = %routine_shll__cl___edx.exit480
  %6378 = and i64 %6367, 31
  %6379 = add i64 %6378, 4294967295
  %6380 = and i64 %6365, 4294967295
  %6381 = and i64 %6379, 4294967295
  %6382 = shl i64 %6380, %6381
  %6383 = trunc i64 %6382 to i32
  %6384 = icmp slt i32 %6383, 0
  %6385 = shl i32 %6383, 1
  br label %6386

; <label>:6386:                                   ; preds = %6377, %6371
  %6387 = phi i1 [ %6374, %6371 ], [ %6384, %6377 ]
  %6388 = phi i1 [ %6376, %6371 ], [ false, %6377 ]
  %6389 = phi i32 [ %6373, %6371 ], [ %6385, %6377 ]
  %6390 = zext i32 %6389 to i64
  store i64 %6390, i64* %RDX.i452, align 8
  %6391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6392 = zext i1 %6387 to i8
  store i8 %6392, i8* %6391, align 1
  %6393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6394 = and i32 %6389, 254
  %6395 = call i32 @llvm.ctpop.i32(i32 %6394)
  %6396 = trunc i32 %6395 to i8
  %6397 = and i8 %6396, 1
  %6398 = xor i8 %6397, 1
  store i8 %6398, i8* %6393, align 1
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6399, align 1
  %6400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6401 = icmp eq i32 %6389, 0
  %6402 = zext i1 %6401 to i8
  store i8 %6402, i8* %6400, align 1
  %6403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6404 = lshr i32 %6389, 31
  %6405 = trunc i32 %6404 to i8
  store i8 %6405, i8* %6403, align 1
  %6406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6407 = zext i1 %6388 to i8
  store i8 %6407, i8* %6406, align 1
  br label %routine_shll__cl___edx.exit453

routine_shll__cl___edx.exit453:                   ; preds = %routine_shll__cl___edx.exit480, %6386
  store %struct.Memory* %loadMem_4136a6, %struct.Memory** %MEMORY
  %loadMem_4136a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6409 = getelementptr inbounds %struct.GPR, %struct.GPR* %6408, i32 0, i32 33
  %6410 = getelementptr inbounds %struct.Reg, %struct.Reg* %6409, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %6410 to i64*
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6412 = getelementptr inbounds %struct.GPR, %struct.GPR* %6411, i32 0, i32 7
  %6413 = getelementptr inbounds %struct.Reg, %struct.Reg* %6412, i32 0, i32 0
  %EDX.i448 = bitcast %union.anon* %6413 to i32*
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6415 = getelementptr inbounds %struct.GPR, %struct.GPR* %6414, i32 0, i32 9
  %6416 = getelementptr inbounds %struct.Reg, %struct.Reg* %6415, i32 0, i32 0
  %RSI.i449 = bitcast %union.anon* %6416 to i64*
  %6417 = load i32, i32* %EDX.i448
  %6418 = zext i32 %6417 to i64
  %6419 = load i64, i64* %PC.i447
  %6420 = add i64 %6419, 3
  store i64 %6420, i64* %PC.i447
  %6421 = shl i64 %6418, 32
  %6422 = ashr exact i64 %6421, 32
  store i64 %6422, i64* %RSI.i449, align 8
  store %struct.Memory* %loadMem_4136a8, %struct.Memory** %MEMORY
  %loadMem_4136ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6427 = getelementptr inbounds %struct.GPR, %struct.GPR* %6426, i32 0, i32 11
  %6428 = getelementptr inbounds %struct.Reg, %struct.Reg* %6427, i32 0, i32 0
  %RDI.i445 = bitcast %union.anon* %6428 to i64*
  %6429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6430 = getelementptr inbounds %struct.GPR, %struct.GPR* %6429, i32 0, i32 15
  %6431 = getelementptr inbounds %struct.Reg, %struct.Reg* %6430, i32 0, i32 0
  %RBP.i446 = bitcast %union.anon* %6431 to i64*
  %6432 = load i64, i64* %RBP.i446
  %6433 = sub i64 %6432, 8
  %6434 = load i64, i64* %PC.i444
  %6435 = add i64 %6434, 4
  store i64 %6435, i64* %PC.i444
  %6436 = inttoptr i64 %6433 to i64*
  %6437 = load i64, i64* %6436
  store i64 %6437, i64* %RDI.i445, align 8
  store %struct.Memory* %loadMem_4136ab, %struct.Memory** %MEMORY
  %loadMem_4136af = load %struct.Memory*, %struct.Memory** %MEMORY
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 33
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 9
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %RSI.i442 = bitcast %union.anon* %6443 to i64*
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6445 = getelementptr inbounds %struct.GPR, %struct.GPR* %6444, i32 0, i32 11
  %6446 = getelementptr inbounds %struct.Reg, %struct.Reg* %6445, i32 0, i32 0
  %RDI.i443 = bitcast %union.anon* %6446 to i64*
  %6447 = load i64, i64* %RSI.i442
  %6448 = load i64, i64* %RDI.i443
  %6449 = add i64 %6448, 504
  %6450 = load i64, i64* %PC.i441
  %6451 = add i64 %6450, 7
  store i64 %6451, i64* %PC.i441
  %6452 = inttoptr i64 %6449 to i64*
  %6453 = load i64, i64* %6452
  %6454 = or i64 %6453, %6447
  store i64 %6454, i64* %RSI.i442, align 8
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6455, align 1
  %6456 = trunc i64 %6454 to i32
  %6457 = and i32 %6456, 255
  %6458 = call i32 @llvm.ctpop.i32(i32 %6457)
  %6459 = trunc i32 %6458 to i8
  %6460 = and i8 %6459, 1
  %6461 = xor i8 %6460, 1
  %6462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6461, i8* %6462, align 1
  %6463 = icmp eq i64 %6454, 0
  %6464 = zext i1 %6463 to i8
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6464, i8* %6465, align 1
  %6466 = lshr i64 %6454, 63
  %6467 = trunc i64 %6466 to i8
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6467, i8* %6468, align 1
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6469, align 1
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6470, align 1
  store %struct.Memory* %loadMem_4136af, %struct.Memory** %MEMORY
  %loadMem_4136b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6472 = getelementptr inbounds %struct.GPR, %struct.GPR* %6471, i32 0, i32 33
  %6473 = getelementptr inbounds %struct.Reg, %struct.Reg* %6472, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %6473 to i64*
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6475 = getelementptr inbounds %struct.GPR, %struct.GPR* %6474, i32 0, i32 9
  %6476 = getelementptr inbounds %struct.Reg, %struct.Reg* %6475, i32 0, i32 0
  %RSI.i439 = bitcast %union.anon* %6476 to i64*
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6478 = getelementptr inbounds %struct.GPR, %struct.GPR* %6477, i32 0, i32 11
  %6479 = getelementptr inbounds %struct.Reg, %struct.Reg* %6478, i32 0, i32 0
  %RDI.i440 = bitcast %union.anon* %6479 to i64*
  %6480 = load i64, i64* %RDI.i440
  %6481 = add i64 %6480, 504
  %6482 = load i64, i64* %RSI.i439
  %6483 = load i64, i64* %PC.i438
  %6484 = add i64 %6483, 7
  store i64 %6484, i64* %PC.i438
  %6485 = inttoptr i64 %6481 to i64*
  store i64 %6482, i64* %6485
  store %struct.Memory* %loadMem_4136b6, %struct.Memory** %MEMORY
  %loadMem_4136bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 33
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %6488 to i64*
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6490 = getelementptr inbounds %struct.GPR, %struct.GPR* %6489, i32 0, i32 7
  %6491 = getelementptr inbounds %struct.Reg, %struct.Reg* %6490, i32 0, i32 0
  %RDX.i436 = bitcast %union.anon* %6491 to i64*
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6493 = getelementptr inbounds %struct.GPR, %struct.GPR* %6492, i32 0, i32 15
  %6494 = getelementptr inbounds %struct.Reg, %struct.Reg* %6493, i32 0, i32 0
  %RBP.i437 = bitcast %union.anon* %6494 to i64*
  %6495 = load i64, i64* %RBP.i437
  %6496 = sub i64 %6495, 64
  %6497 = load i64, i64* %PC.i435
  %6498 = add i64 %6497, 3
  store i64 %6498, i64* %PC.i435
  %6499 = inttoptr i64 %6496 to i32*
  %6500 = load i32, i32* %6499
  %6501 = zext i32 %6500 to i64
  store i64 %6501, i64* %RDX.i436, align 8
  store %struct.Memory* %loadMem_4136bd, %struct.Memory** %MEMORY
  %loadMem_4136c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 33
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %6504 to i64*
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 7
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %RDX.i434 = bitcast %union.anon* %6507 to i64*
  %6508 = load i64, i64* %RDX.i434
  %6509 = load i64, i64* %PC.i433
  %6510 = add i64 %6509, 3
  store i64 %6510, i64* %PC.i433
  %6511 = trunc i64 %6508 to i32
  %6512 = add i32 5, %6511
  %6513 = zext i32 %6512 to i64
  store i64 %6513, i64* %RDX.i434, align 8
  %6514 = icmp ult i32 %6512, %6511
  %6515 = icmp ult i32 %6512, 5
  %6516 = or i1 %6514, %6515
  %6517 = zext i1 %6516 to i8
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6517, i8* %6518, align 1
  %6519 = and i32 %6512, 255
  %6520 = call i32 @llvm.ctpop.i32(i32 %6519)
  %6521 = trunc i32 %6520 to i8
  %6522 = and i8 %6521, 1
  %6523 = xor i8 %6522, 1
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6523, i8* %6524, align 1
  %6525 = xor i64 5, %6508
  %6526 = trunc i64 %6525 to i32
  %6527 = xor i32 %6526, %6512
  %6528 = lshr i32 %6527, 4
  %6529 = trunc i32 %6528 to i8
  %6530 = and i8 %6529, 1
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6530, i8* %6531, align 1
  %6532 = icmp eq i32 %6512, 0
  %6533 = zext i1 %6532 to i8
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6533, i8* %6534, align 1
  %6535 = lshr i32 %6512, 31
  %6536 = trunc i32 %6535 to i8
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6536, i8* %6537, align 1
  %6538 = lshr i32 %6511, 31
  %6539 = xor i32 %6535, %6538
  %6540 = add i32 %6539, %6535
  %6541 = icmp eq i32 %6540, 2
  %6542 = zext i1 %6541 to i8
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6542, i8* %6543, align 1
  store %struct.Memory* %loadMem_4136c0, %struct.Memory** %MEMORY
  %loadMem_4136c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6545 = getelementptr inbounds %struct.GPR, %struct.GPR* %6544, i32 0, i32 33
  %6546 = getelementptr inbounds %struct.Reg, %struct.Reg* %6545, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %6546 to i64*
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6548 = getelementptr inbounds %struct.GPR, %struct.GPR* %6547, i32 0, i32 7
  %6549 = getelementptr inbounds %struct.Reg, %struct.Reg* %6548, i32 0, i32 0
  %EDX.i431 = bitcast %union.anon* %6549 to i32*
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6551 = getelementptr inbounds %struct.GPR, %struct.GPR* %6550, i32 0, i32 5
  %6552 = getelementptr inbounds %struct.Reg, %struct.Reg* %6551, i32 0, i32 0
  %RCX.i432 = bitcast %union.anon* %6552 to i64*
  %6553 = load i32, i32* %EDX.i431
  %6554 = zext i32 %6553 to i64
  %6555 = load i64, i64* %PC.i430
  %6556 = add i64 %6555, 2
  store i64 %6556, i64* %PC.i430
  %6557 = and i64 %6554, 4294967295
  store i64 %6557, i64* %RCX.i432, align 8
  store %struct.Memory* %loadMem_4136c3, %struct.Memory** %MEMORY
  %loadMem_4136c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6559 = getelementptr inbounds %struct.GPR, %struct.GPR* %6558, i32 0, i32 33
  %6560 = getelementptr inbounds %struct.Reg, %struct.Reg* %6559, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %6560 to i64*
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6562 = getelementptr inbounds %struct.GPR, %struct.GPR* %6561, i32 0, i32 5
  %6563 = getelementptr inbounds %struct.Reg, %struct.Reg* %6562, i32 0, i32 0
  %6564 = bitcast %union.anon* %6563 to %struct.anon.2*
  %CL.i427 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6564, i32 0, i32 0
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6566 = getelementptr inbounds %struct.GPR, %struct.GPR* %6565, i32 0, i32 1
  %6567 = getelementptr inbounds %struct.Reg, %struct.Reg* %6566, i32 0, i32 0
  %RAX.i428 = bitcast %union.anon* %6567 to i64*
  %6568 = load i64, i64* %RAX.i428
  %6569 = load i8, i8* %CL.i427
  %6570 = zext i8 %6569 to i64
  %6571 = load i64, i64* %PC.i426
  %6572 = add i64 %6571, 2
  store i64 %6572, i64* %PC.i426
  %6573 = trunc i64 %6570 to i5
  switch i5 %6573, label %6580 [
    i5 0, label %routine_shll__cl___eax.exit429
    i5 1, label %6574
  ]

; <label>:6574:                                   ; preds = %routine_shll__cl___edx.exit453
  %6575 = trunc i64 %6568 to i32
  %6576 = shl i32 %6575, 1
  %6577 = icmp slt i32 %6575, 0
  %6578 = icmp slt i32 %6576, 0
  %6579 = xor i1 %6577, %6578
  br label %6589

; <label>:6580:                                   ; preds = %routine_shll__cl___edx.exit453
  %6581 = and i64 %6570, 31
  %6582 = add i64 %6581, 4294967295
  %6583 = and i64 %6568, 4294967295
  %6584 = and i64 %6582, 4294967295
  %6585 = shl i64 %6583, %6584
  %6586 = trunc i64 %6585 to i32
  %6587 = icmp slt i32 %6586, 0
  %6588 = shl i32 %6586, 1
  br label %6589

; <label>:6589:                                   ; preds = %6580, %6574
  %6590 = phi i1 [ %6577, %6574 ], [ %6587, %6580 ]
  %6591 = phi i1 [ %6579, %6574 ], [ false, %6580 ]
  %6592 = phi i32 [ %6576, %6574 ], [ %6588, %6580 ]
  %6593 = zext i32 %6592 to i64
  store i64 %6593, i64* %RAX.i428, align 8
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6595 = zext i1 %6590 to i8
  store i8 %6595, i8* %6594, align 1
  %6596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6597 = and i32 %6592, 254
  %6598 = call i32 @llvm.ctpop.i32(i32 %6597)
  %6599 = trunc i32 %6598 to i8
  %6600 = and i8 %6599, 1
  %6601 = xor i8 %6600, 1
  store i8 %6601, i8* %6596, align 1
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6602, align 1
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6604 = icmp eq i32 %6592, 0
  %6605 = zext i1 %6604 to i8
  store i8 %6605, i8* %6603, align 1
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6607 = lshr i32 %6592, 31
  %6608 = trunc i32 %6607 to i8
  store i8 %6608, i8* %6606, align 1
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6610 = zext i1 %6591 to i8
  store i8 %6610, i8* %6609, align 1
  br label %routine_shll__cl___eax.exit429

routine_shll__cl___eax.exit429:                   ; preds = %routine_shll__cl___edx.exit453, %6589
  store %struct.Memory* %loadMem_4136c5, %struct.Memory** %MEMORY
  %loadMem_4136c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6612 = getelementptr inbounds %struct.GPR, %struct.GPR* %6611, i32 0, i32 33
  %6613 = getelementptr inbounds %struct.Reg, %struct.Reg* %6612, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %6613 to i64*
  %6614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6615 = getelementptr inbounds %struct.GPR, %struct.GPR* %6614, i32 0, i32 1
  %6616 = getelementptr inbounds %struct.Reg, %struct.Reg* %6615, i32 0, i32 0
  %EAX.i424 = bitcast %union.anon* %6616 to i32*
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6618 = getelementptr inbounds %struct.GPR, %struct.GPR* %6617, i32 0, i32 9
  %6619 = getelementptr inbounds %struct.Reg, %struct.Reg* %6618, i32 0, i32 0
  %RSI.i425 = bitcast %union.anon* %6619 to i64*
  %6620 = load i32, i32* %EAX.i424
  %6621 = zext i32 %6620 to i64
  %6622 = load i64, i64* %PC.i423
  %6623 = add i64 %6622, 3
  store i64 %6623, i64* %PC.i423
  %6624 = shl i64 %6621, 32
  %6625 = ashr exact i64 %6624, 32
  store i64 %6625, i64* %RSI.i425, align 8
  store %struct.Memory* %loadMem_4136c7, %struct.Memory** %MEMORY
  %loadMem_4136ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6627 = getelementptr inbounds %struct.GPR, %struct.GPR* %6626, i32 0, i32 33
  %6628 = getelementptr inbounds %struct.Reg, %struct.Reg* %6627, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %6628 to i64*
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6630 = getelementptr inbounds %struct.GPR, %struct.GPR* %6629, i32 0, i32 11
  %6631 = getelementptr inbounds %struct.Reg, %struct.Reg* %6630, i32 0, i32 0
  %RDI.i421 = bitcast %union.anon* %6631 to i64*
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 15
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %RBP.i422 = bitcast %union.anon* %6634 to i64*
  %6635 = load i64, i64* %RBP.i422
  %6636 = sub i64 %6635, 8
  %6637 = load i64, i64* %PC.i420
  %6638 = add i64 %6637, 4
  store i64 %6638, i64* %PC.i420
  %6639 = inttoptr i64 %6636 to i64*
  %6640 = load i64, i64* %6639
  store i64 %6640, i64* %RDI.i421, align 8
  store %struct.Memory* %loadMem_4136ca, %struct.Memory** %MEMORY
  %loadMem_4136ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6642 = getelementptr inbounds %struct.GPR, %struct.GPR* %6641, i32 0, i32 33
  %6643 = getelementptr inbounds %struct.Reg, %struct.Reg* %6642, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %6643 to i64*
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6645 = getelementptr inbounds %struct.GPR, %struct.GPR* %6644, i32 0, i32 9
  %6646 = getelementptr inbounds %struct.Reg, %struct.Reg* %6645, i32 0, i32 0
  %RSI.i418 = bitcast %union.anon* %6646 to i64*
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6648 = getelementptr inbounds %struct.GPR, %struct.GPR* %6647, i32 0, i32 11
  %6649 = getelementptr inbounds %struct.Reg, %struct.Reg* %6648, i32 0, i32 0
  %RDI.i419 = bitcast %union.anon* %6649 to i64*
  %6650 = load i64, i64* %RSI.i418
  %6651 = load i64, i64* %RDI.i419
  %6652 = add i64 %6651, 504
  %6653 = load i64, i64* %PC.i417
  %6654 = add i64 %6653, 7
  store i64 %6654, i64* %PC.i417
  %6655 = inttoptr i64 %6652 to i64*
  %6656 = load i64, i64* %6655
  %6657 = or i64 %6656, %6650
  store i64 %6657, i64* %RSI.i418, align 8
  %6658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6658, align 1
  %6659 = trunc i64 %6657 to i32
  %6660 = and i32 %6659, 255
  %6661 = call i32 @llvm.ctpop.i32(i32 %6660)
  %6662 = trunc i32 %6661 to i8
  %6663 = and i8 %6662, 1
  %6664 = xor i8 %6663, 1
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6664, i8* %6665, align 1
  %6666 = icmp eq i64 %6657, 0
  %6667 = zext i1 %6666 to i8
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6667, i8* %6668, align 1
  %6669 = lshr i64 %6657, 63
  %6670 = trunc i64 %6669 to i8
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6670, i8* %6671, align 1
  %6672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6672, align 1
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6673, align 1
  store %struct.Memory* %loadMem_4136ce, %struct.Memory** %MEMORY
  %loadMem_4136d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6675 = getelementptr inbounds %struct.GPR, %struct.GPR* %6674, i32 0, i32 33
  %6676 = getelementptr inbounds %struct.Reg, %struct.Reg* %6675, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %6676 to i64*
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6678 = getelementptr inbounds %struct.GPR, %struct.GPR* %6677, i32 0, i32 9
  %6679 = getelementptr inbounds %struct.Reg, %struct.Reg* %6678, i32 0, i32 0
  %RSI.i415 = bitcast %union.anon* %6679 to i64*
  %6680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6681 = getelementptr inbounds %struct.GPR, %struct.GPR* %6680, i32 0, i32 11
  %6682 = getelementptr inbounds %struct.Reg, %struct.Reg* %6681, i32 0, i32 0
  %RDI.i416 = bitcast %union.anon* %6682 to i64*
  %6683 = load i64, i64* %RDI.i416
  %6684 = add i64 %6683, 504
  %6685 = load i64, i64* %RSI.i415
  %6686 = load i64, i64* %PC.i414
  %6687 = add i64 %6686, 7
  store i64 %6687, i64* %PC.i414
  %6688 = inttoptr i64 %6684 to i64*
  store i64 %6685, i64* %6688
  store %struct.Memory* %loadMem_4136d5, %struct.Memory** %MEMORY
  %loadMem_4136dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6690 = getelementptr inbounds %struct.GPR, %struct.GPR* %6689, i32 0, i32 33
  %6691 = getelementptr inbounds %struct.Reg, %struct.Reg* %6690, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %6691 to i64*
  %6692 = load i64, i64* %PC.i413
  %6693 = add i64 %6692, 204
  %6694 = load i64, i64* %PC.i413
  %6695 = add i64 %6694, 5
  store i64 %6695, i64* %PC.i413
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6693, i64* %6696, align 8
  store %struct.Memory* %loadMem_4136dc, %struct.Memory** %MEMORY
  br label %block_.L_4137a8

block_.L_4136e1:                                  ; preds = %block_413650
  %loadMem_4136e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 33
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %6699 to i64*
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6701 = getelementptr inbounds %struct.GPR, %struct.GPR* %6700, i32 0, i32 15
  %6702 = getelementptr inbounds %struct.Reg, %struct.Reg* %6701, i32 0, i32 0
  %RBP.i412 = bitcast %union.anon* %6702 to i64*
  %6703 = load i64, i64* %RBP.i412
  %6704 = sub i64 %6703, 20
  %6705 = load i64, i64* %PC.i411
  %6706 = add i64 %6705, 4
  store i64 %6706, i64* %PC.i411
  %6707 = inttoptr i64 %6704 to i32*
  %6708 = load i32, i32* %6707
  %6709 = sub i32 %6708, 3
  %6710 = icmp ult i32 %6708, 3
  %6711 = zext i1 %6710 to i8
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6711, i8* %6712, align 1
  %6713 = and i32 %6709, 255
  %6714 = call i32 @llvm.ctpop.i32(i32 %6713)
  %6715 = trunc i32 %6714 to i8
  %6716 = and i8 %6715, 1
  %6717 = xor i8 %6716, 1
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6717, i8* %6718, align 1
  %6719 = xor i32 %6708, 3
  %6720 = xor i32 %6719, %6709
  %6721 = lshr i32 %6720, 4
  %6722 = trunc i32 %6721 to i8
  %6723 = and i8 %6722, 1
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6723, i8* %6724, align 1
  %6725 = icmp eq i32 %6709, 0
  %6726 = zext i1 %6725 to i8
  %6727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6726, i8* %6727, align 1
  %6728 = lshr i32 %6709, 31
  %6729 = trunc i32 %6728 to i8
  %6730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6729, i8* %6730, align 1
  %6731 = lshr i32 %6708, 31
  %6732 = xor i32 %6728, %6731
  %6733 = add i32 %6732, %6731
  %6734 = icmp eq i32 %6733, 2
  %6735 = zext i1 %6734 to i8
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6735, i8* %6736, align 1
  store %struct.Memory* %loadMem_4136e1, %struct.Memory** %MEMORY
  %loadMem_4136e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6738 = getelementptr inbounds %struct.GPR, %struct.GPR* %6737, i32 0, i32 33
  %6739 = getelementptr inbounds %struct.Reg, %struct.Reg* %6738, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %6739 to i64*
  %6740 = load i64, i64* %PC.i410
  %6741 = add i64 %6740, 75
  %6742 = load i64, i64* %PC.i410
  %6743 = add i64 %6742, 6
  %6744 = load i64, i64* %PC.i410
  %6745 = add i64 %6744, 6
  store i64 %6745, i64* %PC.i410
  %6746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6747 = load i8, i8* %6746, align 1
  %6748 = icmp eq i8 %6747, 0
  %6749 = zext i1 %6748 to i8
  store i8 %6749, i8* %BRANCH_TAKEN, align 1
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6751 = select i1 %6748, i64 %6741, i64 %6743
  store i64 %6751, i64* %6750, align 8
  store %struct.Memory* %loadMem_4136e5, %struct.Memory** %MEMORY
  %loadBr_4136e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4136e5 = icmp eq i8 %loadBr_4136e5, 1
  br i1 %cmpBr_4136e5, label %block_.L_413730, label %block_4136eb

block_4136eb:                                     ; preds = %block_.L_4136e1
  %loadMem_4136eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6753 = getelementptr inbounds %struct.GPR, %struct.GPR* %6752, i32 0, i32 33
  %6754 = getelementptr inbounds %struct.Reg, %struct.Reg* %6753, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %6754 to i64*
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6756 = getelementptr inbounds %struct.GPR, %struct.GPR* %6755, i32 0, i32 1
  %6757 = getelementptr inbounds %struct.Reg, %struct.Reg* %6756, i32 0, i32 0
  %RAX.i409 = bitcast %union.anon* %6757 to i64*
  %6758 = load i64, i64* %PC.i408
  %6759 = add i64 %6758, 5
  store i64 %6759, i64* %PC.i408
  store i64 1, i64* %RAX.i409, align 8
  store %struct.Memory* %loadMem_4136eb, %struct.Memory** %MEMORY
  %loadMem_4136f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6761 = getelementptr inbounds %struct.GPR, %struct.GPR* %6760, i32 0, i32 33
  %6762 = getelementptr inbounds %struct.Reg, %struct.Reg* %6761, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %6762 to i64*
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6764 = getelementptr inbounds %struct.GPR, %struct.GPR* %6763, i32 0, i32 5
  %6765 = getelementptr inbounds %struct.Reg, %struct.Reg* %6764, i32 0, i32 0
  %RCX.i406 = bitcast %union.anon* %6765 to i64*
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 15
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %RBP.i407 = bitcast %union.anon* %6768 to i64*
  %6769 = load i64, i64* %RBP.i407
  %6770 = sub i64 %6769, 64
  %6771 = load i64, i64* %PC.i405
  %6772 = add i64 %6771, 3
  store i64 %6772, i64* %PC.i405
  %6773 = inttoptr i64 %6770 to i32*
  %6774 = load i32, i32* %6773
  %6775 = zext i32 %6774 to i64
  store i64 %6775, i64* %RCX.i406, align 8
  store %struct.Memory* %loadMem_4136f0, %struct.Memory** %MEMORY
  %loadMem_4136f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 33
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %6778 to i64*
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6780 = getelementptr inbounds %struct.GPR, %struct.GPR* %6779, i32 0, i32 1
  %6781 = getelementptr inbounds %struct.Reg, %struct.Reg* %6780, i32 0, i32 0
  %EAX.i403 = bitcast %union.anon* %6781 to i32*
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6783 = getelementptr inbounds %struct.GPR, %struct.GPR* %6782, i32 0, i32 7
  %6784 = getelementptr inbounds %struct.Reg, %struct.Reg* %6783, i32 0, i32 0
  %RDX.i404 = bitcast %union.anon* %6784 to i64*
  %6785 = load i32, i32* %EAX.i403
  %6786 = zext i32 %6785 to i64
  %6787 = load i64, i64* %PC.i402
  %6788 = add i64 %6787, 2
  store i64 %6788, i64* %PC.i402
  %6789 = and i64 %6786, 4294967295
  store i64 %6789, i64* %RDX.i404, align 8
  store %struct.Memory* %loadMem_4136f3, %struct.Memory** %MEMORY
  %loadMem_4136f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6791 = getelementptr inbounds %struct.GPR, %struct.GPR* %6790, i32 0, i32 33
  %6792 = getelementptr inbounds %struct.Reg, %struct.Reg* %6791, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %6792 to i64*
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6794 = getelementptr inbounds %struct.GPR, %struct.GPR* %6793, i32 0, i32 5
  %6795 = getelementptr inbounds %struct.Reg, %struct.Reg* %6794, i32 0, i32 0
  %6796 = bitcast %union.anon* %6795 to %struct.anon.2*
  %CL.i399 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6796, i32 0, i32 0
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 7
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %RDX.i400 = bitcast %union.anon* %6799 to i64*
  %6800 = load i64, i64* %RDX.i400
  %6801 = load i8, i8* %CL.i399
  %6802 = zext i8 %6801 to i64
  %6803 = load i64, i64* %PC.i398
  %6804 = add i64 %6803, 2
  store i64 %6804, i64* %PC.i398
  %6805 = trunc i64 %6802 to i5
  switch i5 %6805, label %6812 [
    i5 0, label %routine_shll__cl___edx.exit401
    i5 1, label %6806
  ]

; <label>:6806:                                   ; preds = %block_4136eb
  %6807 = trunc i64 %6800 to i32
  %6808 = shl i32 %6807, 1
  %6809 = icmp slt i32 %6807, 0
  %6810 = icmp slt i32 %6808, 0
  %6811 = xor i1 %6809, %6810
  br label %6821

; <label>:6812:                                   ; preds = %block_4136eb
  %6813 = and i64 %6802, 31
  %6814 = add i64 %6813, 4294967295
  %6815 = and i64 %6800, 4294967295
  %6816 = and i64 %6814, 4294967295
  %6817 = shl i64 %6815, %6816
  %6818 = trunc i64 %6817 to i32
  %6819 = icmp slt i32 %6818, 0
  %6820 = shl i32 %6818, 1
  br label %6821

; <label>:6821:                                   ; preds = %6812, %6806
  %6822 = phi i1 [ %6809, %6806 ], [ %6819, %6812 ]
  %6823 = phi i1 [ %6811, %6806 ], [ false, %6812 ]
  %6824 = phi i32 [ %6808, %6806 ], [ %6820, %6812 ]
  %6825 = zext i32 %6824 to i64
  store i64 %6825, i64* %RDX.i400, align 8
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6827 = zext i1 %6822 to i8
  store i8 %6827, i8* %6826, align 1
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6829 = and i32 %6824, 254
  %6830 = call i32 @llvm.ctpop.i32(i32 %6829)
  %6831 = trunc i32 %6830 to i8
  %6832 = and i8 %6831, 1
  %6833 = xor i8 %6832, 1
  store i8 %6833, i8* %6828, align 1
  %6834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6834, align 1
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6836 = icmp eq i32 %6824, 0
  %6837 = zext i1 %6836 to i8
  store i8 %6837, i8* %6835, align 1
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6839 = lshr i32 %6824, 31
  %6840 = trunc i32 %6839 to i8
  store i8 %6840, i8* %6838, align 1
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6842 = zext i1 %6823 to i8
  store i8 %6842, i8* %6841, align 1
  br label %routine_shll__cl___edx.exit401

routine_shll__cl___edx.exit401:                   ; preds = %block_4136eb, %6821
  store %struct.Memory* %loadMem_4136f5, %struct.Memory** %MEMORY
  %loadMem_4136f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6844 = getelementptr inbounds %struct.GPR, %struct.GPR* %6843, i32 0, i32 33
  %6845 = getelementptr inbounds %struct.Reg, %struct.Reg* %6844, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %6845 to i64*
  %6846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6847 = getelementptr inbounds %struct.GPR, %struct.GPR* %6846, i32 0, i32 7
  %6848 = getelementptr inbounds %struct.Reg, %struct.Reg* %6847, i32 0, i32 0
  %EDX.i396 = bitcast %union.anon* %6848 to i32*
  %6849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6850 = getelementptr inbounds %struct.GPR, %struct.GPR* %6849, i32 0, i32 9
  %6851 = getelementptr inbounds %struct.Reg, %struct.Reg* %6850, i32 0, i32 0
  %RSI.i397 = bitcast %union.anon* %6851 to i64*
  %6852 = load i32, i32* %EDX.i396
  %6853 = zext i32 %6852 to i64
  %6854 = load i64, i64* %PC.i395
  %6855 = add i64 %6854, 3
  store i64 %6855, i64* %PC.i395
  %6856 = shl i64 %6853, 32
  %6857 = ashr exact i64 %6856, 32
  store i64 %6857, i64* %RSI.i397, align 8
  store %struct.Memory* %loadMem_4136f7, %struct.Memory** %MEMORY
  %loadMem_4136fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6859 = getelementptr inbounds %struct.GPR, %struct.GPR* %6858, i32 0, i32 33
  %6860 = getelementptr inbounds %struct.Reg, %struct.Reg* %6859, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %6860 to i64*
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6862 = getelementptr inbounds %struct.GPR, %struct.GPR* %6861, i32 0, i32 11
  %6863 = getelementptr inbounds %struct.Reg, %struct.Reg* %6862, i32 0, i32 0
  %RDI.i393 = bitcast %union.anon* %6863 to i64*
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 15
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %RBP.i394 = bitcast %union.anon* %6866 to i64*
  %6867 = load i64, i64* %RBP.i394
  %6868 = sub i64 %6867, 8
  %6869 = load i64, i64* %PC.i392
  %6870 = add i64 %6869, 4
  store i64 %6870, i64* %PC.i392
  %6871 = inttoptr i64 %6868 to i64*
  %6872 = load i64, i64* %6871
  store i64 %6872, i64* %RDI.i393, align 8
  store %struct.Memory* %loadMem_4136fa, %struct.Memory** %MEMORY
  %loadMem_4136fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6874 = getelementptr inbounds %struct.GPR, %struct.GPR* %6873, i32 0, i32 33
  %6875 = getelementptr inbounds %struct.Reg, %struct.Reg* %6874, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %6875 to i64*
  %6876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6877 = getelementptr inbounds %struct.GPR, %struct.GPR* %6876, i32 0, i32 9
  %6878 = getelementptr inbounds %struct.Reg, %struct.Reg* %6877, i32 0, i32 0
  %RSI.i390 = bitcast %union.anon* %6878 to i64*
  %6879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6880 = getelementptr inbounds %struct.GPR, %struct.GPR* %6879, i32 0, i32 11
  %6881 = getelementptr inbounds %struct.Reg, %struct.Reg* %6880, i32 0, i32 0
  %RDI.i391 = bitcast %union.anon* %6881 to i64*
  %6882 = load i64, i64* %RSI.i390
  %6883 = load i64, i64* %RDI.i391
  %6884 = add i64 %6883, 504
  %6885 = load i64, i64* %PC.i389
  %6886 = add i64 %6885, 7
  store i64 %6886, i64* %PC.i389
  %6887 = inttoptr i64 %6884 to i64*
  %6888 = load i64, i64* %6887
  %6889 = or i64 %6888, %6882
  store i64 %6889, i64* %RSI.i390, align 8
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6890, align 1
  %6891 = trunc i64 %6889 to i32
  %6892 = and i32 %6891, 255
  %6893 = call i32 @llvm.ctpop.i32(i32 %6892)
  %6894 = trunc i32 %6893 to i8
  %6895 = and i8 %6894, 1
  %6896 = xor i8 %6895, 1
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6896, i8* %6897, align 1
  %6898 = icmp eq i64 %6889, 0
  %6899 = zext i1 %6898 to i8
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6899, i8* %6900, align 1
  %6901 = lshr i64 %6889, 63
  %6902 = trunc i64 %6901 to i8
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6902, i8* %6903, align 1
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6904, align 1
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6905, align 1
  store %struct.Memory* %loadMem_4136fe, %struct.Memory** %MEMORY
  %loadMem_413705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6907 = getelementptr inbounds %struct.GPR, %struct.GPR* %6906, i32 0, i32 33
  %6908 = getelementptr inbounds %struct.Reg, %struct.Reg* %6907, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %6908 to i64*
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 9
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %RSI.i387 = bitcast %union.anon* %6911 to i64*
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6913 = getelementptr inbounds %struct.GPR, %struct.GPR* %6912, i32 0, i32 11
  %6914 = getelementptr inbounds %struct.Reg, %struct.Reg* %6913, i32 0, i32 0
  %RDI.i388 = bitcast %union.anon* %6914 to i64*
  %6915 = load i64, i64* %RDI.i388
  %6916 = add i64 %6915, 504
  %6917 = load i64, i64* %RSI.i387
  %6918 = load i64, i64* %PC.i386
  %6919 = add i64 %6918, 7
  store i64 %6919, i64* %PC.i386
  %6920 = inttoptr i64 %6916 to i64*
  store i64 %6917, i64* %6920
  store %struct.Memory* %loadMem_413705, %struct.Memory** %MEMORY
  %loadMem_41370c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6922 = getelementptr inbounds %struct.GPR, %struct.GPR* %6921, i32 0, i32 33
  %6923 = getelementptr inbounds %struct.Reg, %struct.Reg* %6922, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %6923 to i64*
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6925 = getelementptr inbounds %struct.GPR, %struct.GPR* %6924, i32 0, i32 7
  %6926 = getelementptr inbounds %struct.Reg, %struct.Reg* %6925, i32 0, i32 0
  %RDX.i384 = bitcast %union.anon* %6926 to i64*
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6928 = getelementptr inbounds %struct.GPR, %struct.GPR* %6927, i32 0, i32 15
  %6929 = getelementptr inbounds %struct.Reg, %struct.Reg* %6928, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %6929 to i64*
  %6930 = load i64, i64* %RBP.i385
  %6931 = sub i64 %6930, 64
  %6932 = load i64, i64* %PC.i383
  %6933 = add i64 %6932, 3
  store i64 %6933, i64* %PC.i383
  %6934 = inttoptr i64 %6931 to i32*
  %6935 = load i32, i32* %6934
  %6936 = zext i32 %6935 to i64
  store i64 %6936, i64* %RDX.i384, align 8
  store %struct.Memory* %loadMem_41370c, %struct.Memory** %MEMORY
  %loadMem_41370f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6938 = getelementptr inbounds %struct.GPR, %struct.GPR* %6937, i32 0, i32 33
  %6939 = getelementptr inbounds %struct.Reg, %struct.Reg* %6938, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %6939 to i64*
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6941 = getelementptr inbounds %struct.GPR, %struct.GPR* %6940, i32 0, i32 7
  %6942 = getelementptr inbounds %struct.Reg, %struct.Reg* %6941, i32 0, i32 0
  %RDX.i382 = bitcast %union.anon* %6942 to i64*
  %6943 = load i64, i64* %RDX.i382
  %6944 = load i64, i64* %PC.i381
  %6945 = add i64 %6944, 3
  store i64 %6945, i64* %PC.i381
  %6946 = trunc i64 %6943 to i32
  %6947 = add i32 1, %6946
  %6948 = zext i32 %6947 to i64
  store i64 %6948, i64* %RDX.i382, align 8
  %6949 = icmp ult i32 %6947, %6946
  %6950 = icmp ult i32 %6947, 1
  %6951 = or i1 %6949, %6950
  %6952 = zext i1 %6951 to i8
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6952, i8* %6953, align 1
  %6954 = and i32 %6947, 255
  %6955 = call i32 @llvm.ctpop.i32(i32 %6954)
  %6956 = trunc i32 %6955 to i8
  %6957 = and i8 %6956, 1
  %6958 = xor i8 %6957, 1
  %6959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6958, i8* %6959, align 1
  %6960 = xor i64 1, %6943
  %6961 = trunc i64 %6960 to i32
  %6962 = xor i32 %6961, %6947
  %6963 = lshr i32 %6962, 4
  %6964 = trunc i32 %6963 to i8
  %6965 = and i8 %6964, 1
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6965, i8* %6966, align 1
  %6967 = icmp eq i32 %6947, 0
  %6968 = zext i1 %6967 to i8
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6968, i8* %6969, align 1
  %6970 = lshr i32 %6947, 31
  %6971 = trunc i32 %6970 to i8
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6971, i8* %6972, align 1
  %6973 = lshr i32 %6946, 31
  %6974 = xor i32 %6970, %6973
  %6975 = add i32 %6974, %6970
  %6976 = icmp eq i32 %6975, 2
  %6977 = zext i1 %6976 to i8
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6977, i8* %6978, align 1
  store %struct.Memory* %loadMem_41370f, %struct.Memory** %MEMORY
  %loadMem_413712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6980 = getelementptr inbounds %struct.GPR, %struct.GPR* %6979, i32 0, i32 33
  %6981 = getelementptr inbounds %struct.Reg, %struct.Reg* %6980, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %6981 to i64*
  %6982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6983 = getelementptr inbounds %struct.GPR, %struct.GPR* %6982, i32 0, i32 7
  %6984 = getelementptr inbounds %struct.Reg, %struct.Reg* %6983, i32 0, i32 0
  %EDX.i379 = bitcast %union.anon* %6984 to i32*
  %6985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6986 = getelementptr inbounds %struct.GPR, %struct.GPR* %6985, i32 0, i32 5
  %6987 = getelementptr inbounds %struct.Reg, %struct.Reg* %6986, i32 0, i32 0
  %RCX.i380 = bitcast %union.anon* %6987 to i64*
  %6988 = load i32, i32* %EDX.i379
  %6989 = zext i32 %6988 to i64
  %6990 = load i64, i64* %PC.i378
  %6991 = add i64 %6990, 2
  store i64 %6991, i64* %PC.i378
  %6992 = and i64 %6989, 4294967295
  store i64 %6992, i64* %RCX.i380, align 8
  store %struct.Memory* %loadMem_413712, %struct.Memory** %MEMORY
  %loadMem_413714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 33
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %6995 to i64*
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 5
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %6999 = bitcast %union.anon* %6998 to %struct.anon.2*
  %CL.i375 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6999, i32 0, i32 0
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7001 = getelementptr inbounds %struct.GPR, %struct.GPR* %7000, i32 0, i32 1
  %7002 = getelementptr inbounds %struct.Reg, %struct.Reg* %7001, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %7002 to i64*
  %7003 = load i64, i64* %RAX.i376
  %7004 = load i8, i8* %CL.i375
  %7005 = zext i8 %7004 to i64
  %7006 = load i64, i64* %PC.i374
  %7007 = add i64 %7006, 2
  store i64 %7007, i64* %PC.i374
  %7008 = trunc i64 %7005 to i5
  switch i5 %7008, label %7015 [
    i5 0, label %routine_shll__cl___eax.exit377
    i5 1, label %7009
  ]

; <label>:7009:                                   ; preds = %routine_shll__cl___edx.exit401
  %7010 = trunc i64 %7003 to i32
  %7011 = shl i32 %7010, 1
  %7012 = icmp slt i32 %7010, 0
  %7013 = icmp slt i32 %7011, 0
  %7014 = xor i1 %7012, %7013
  br label %7024

; <label>:7015:                                   ; preds = %routine_shll__cl___edx.exit401
  %7016 = and i64 %7005, 31
  %7017 = add i64 %7016, 4294967295
  %7018 = and i64 %7003, 4294967295
  %7019 = and i64 %7017, 4294967295
  %7020 = shl i64 %7018, %7019
  %7021 = trunc i64 %7020 to i32
  %7022 = icmp slt i32 %7021, 0
  %7023 = shl i32 %7021, 1
  br label %7024

; <label>:7024:                                   ; preds = %7015, %7009
  %7025 = phi i1 [ %7012, %7009 ], [ %7022, %7015 ]
  %7026 = phi i1 [ %7014, %7009 ], [ false, %7015 ]
  %7027 = phi i32 [ %7011, %7009 ], [ %7023, %7015 ]
  %7028 = zext i32 %7027 to i64
  store i64 %7028, i64* %RAX.i376, align 8
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7030 = zext i1 %7025 to i8
  store i8 %7030, i8* %7029, align 1
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7032 = and i32 %7027, 254
  %7033 = call i32 @llvm.ctpop.i32(i32 %7032)
  %7034 = trunc i32 %7033 to i8
  %7035 = and i8 %7034, 1
  %7036 = xor i8 %7035, 1
  store i8 %7036, i8* %7031, align 1
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7037, align 1
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7039 = icmp eq i32 %7027, 0
  %7040 = zext i1 %7039 to i8
  store i8 %7040, i8* %7038, align 1
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7042 = lshr i32 %7027, 31
  %7043 = trunc i32 %7042 to i8
  store i8 %7043, i8* %7041, align 1
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7045 = zext i1 %7026 to i8
  store i8 %7045, i8* %7044, align 1
  br label %routine_shll__cl___eax.exit377

routine_shll__cl___eax.exit377:                   ; preds = %routine_shll__cl___edx.exit401, %7024
  store %struct.Memory* %loadMem_413714, %struct.Memory** %MEMORY
  %loadMem_413716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7047 = getelementptr inbounds %struct.GPR, %struct.GPR* %7046, i32 0, i32 33
  %7048 = getelementptr inbounds %struct.Reg, %struct.Reg* %7047, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %7048 to i64*
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7050 = getelementptr inbounds %struct.GPR, %struct.GPR* %7049, i32 0, i32 1
  %7051 = getelementptr inbounds %struct.Reg, %struct.Reg* %7050, i32 0, i32 0
  %EAX.i372 = bitcast %union.anon* %7051 to i32*
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7053 = getelementptr inbounds %struct.GPR, %struct.GPR* %7052, i32 0, i32 9
  %7054 = getelementptr inbounds %struct.Reg, %struct.Reg* %7053, i32 0, i32 0
  %RSI.i373 = bitcast %union.anon* %7054 to i64*
  %7055 = load i32, i32* %EAX.i372
  %7056 = zext i32 %7055 to i64
  %7057 = load i64, i64* %PC.i371
  %7058 = add i64 %7057, 3
  store i64 %7058, i64* %PC.i371
  %7059 = shl i64 %7056, 32
  %7060 = ashr exact i64 %7059, 32
  store i64 %7060, i64* %RSI.i373, align 8
  store %struct.Memory* %loadMem_413716, %struct.Memory** %MEMORY
  %loadMem_413719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7062 = getelementptr inbounds %struct.GPR, %struct.GPR* %7061, i32 0, i32 33
  %7063 = getelementptr inbounds %struct.Reg, %struct.Reg* %7062, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %7063 to i64*
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7065 = getelementptr inbounds %struct.GPR, %struct.GPR* %7064, i32 0, i32 11
  %7066 = getelementptr inbounds %struct.Reg, %struct.Reg* %7065, i32 0, i32 0
  %RDI.i369 = bitcast %union.anon* %7066 to i64*
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7068 = getelementptr inbounds %struct.GPR, %struct.GPR* %7067, i32 0, i32 15
  %7069 = getelementptr inbounds %struct.Reg, %struct.Reg* %7068, i32 0, i32 0
  %RBP.i370 = bitcast %union.anon* %7069 to i64*
  %7070 = load i64, i64* %RBP.i370
  %7071 = sub i64 %7070, 8
  %7072 = load i64, i64* %PC.i368
  %7073 = add i64 %7072, 4
  store i64 %7073, i64* %PC.i368
  %7074 = inttoptr i64 %7071 to i64*
  %7075 = load i64, i64* %7074
  store i64 %7075, i64* %RDI.i369, align 8
  store %struct.Memory* %loadMem_413719, %struct.Memory** %MEMORY
  %loadMem_41371d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7077 = getelementptr inbounds %struct.GPR, %struct.GPR* %7076, i32 0, i32 33
  %7078 = getelementptr inbounds %struct.Reg, %struct.Reg* %7077, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %7078 to i64*
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7080 = getelementptr inbounds %struct.GPR, %struct.GPR* %7079, i32 0, i32 9
  %7081 = getelementptr inbounds %struct.Reg, %struct.Reg* %7080, i32 0, i32 0
  %RSI.i366 = bitcast %union.anon* %7081 to i64*
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7083 = getelementptr inbounds %struct.GPR, %struct.GPR* %7082, i32 0, i32 11
  %7084 = getelementptr inbounds %struct.Reg, %struct.Reg* %7083, i32 0, i32 0
  %RDI.i367 = bitcast %union.anon* %7084 to i64*
  %7085 = load i64, i64* %RSI.i366
  %7086 = load i64, i64* %RDI.i367
  %7087 = add i64 %7086, 504
  %7088 = load i64, i64* %PC.i365
  %7089 = add i64 %7088, 7
  store i64 %7089, i64* %PC.i365
  %7090 = inttoptr i64 %7087 to i64*
  %7091 = load i64, i64* %7090
  %7092 = or i64 %7091, %7085
  store i64 %7092, i64* %RSI.i366, align 8
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7093, align 1
  %7094 = trunc i64 %7092 to i32
  %7095 = and i32 %7094, 255
  %7096 = call i32 @llvm.ctpop.i32(i32 %7095)
  %7097 = trunc i32 %7096 to i8
  %7098 = and i8 %7097, 1
  %7099 = xor i8 %7098, 1
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7099, i8* %7100, align 1
  %7101 = icmp eq i64 %7092, 0
  %7102 = zext i1 %7101 to i8
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7102, i8* %7103, align 1
  %7104 = lshr i64 %7092, 63
  %7105 = trunc i64 %7104 to i8
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7105, i8* %7106, align 1
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7107, align 1
  %7108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7108, align 1
  store %struct.Memory* %loadMem_41371d, %struct.Memory** %MEMORY
  %loadMem_413724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7110 = getelementptr inbounds %struct.GPR, %struct.GPR* %7109, i32 0, i32 33
  %7111 = getelementptr inbounds %struct.Reg, %struct.Reg* %7110, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %7111 to i64*
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7113 = getelementptr inbounds %struct.GPR, %struct.GPR* %7112, i32 0, i32 9
  %7114 = getelementptr inbounds %struct.Reg, %struct.Reg* %7113, i32 0, i32 0
  %RSI.i363 = bitcast %union.anon* %7114 to i64*
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7116 = getelementptr inbounds %struct.GPR, %struct.GPR* %7115, i32 0, i32 11
  %7117 = getelementptr inbounds %struct.Reg, %struct.Reg* %7116, i32 0, i32 0
  %RDI.i364 = bitcast %union.anon* %7117 to i64*
  %7118 = load i64, i64* %RDI.i364
  %7119 = add i64 %7118, 504
  %7120 = load i64, i64* %RSI.i363
  %7121 = load i64, i64* %PC.i362
  %7122 = add i64 %7121, 7
  store i64 %7122, i64* %PC.i362
  %7123 = inttoptr i64 %7119 to i64*
  store i64 %7120, i64* %7123
  store %struct.Memory* %loadMem_413724, %struct.Memory** %MEMORY
  %loadMem_41372b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7125 = getelementptr inbounds %struct.GPR, %struct.GPR* %7124, i32 0, i32 33
  %7126 = getelementptr inbounds %struct.Reg, %struct.Reg* %7125, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %7126 to i64*
  %7127 = load i64, i64* %PC.i361
  %7128 = add i64 %7127, 120
  %7129 = load i64, i64* %PC.i361
  %7130 = add i64 %7129, 5
  store i64 %7130, i64* %PC.i361
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7128, i64* %7131, align 8
  store %struct.Memory* %loadMem_41372b, %struct.Memory** %MEMORY
  br label %block_.L_4137a3

block_.L_413730:                                  ; preds = %block_.L_4136e1
  %loadMem_413730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7133 = getelementptr inbounds %struct.GPR, %struct.GPR* %7132, i32 0, i32 33
  %7134 = getelementptr inbounds %struct.Reg, %struct.Reg* %7133, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %7134 to i64*
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7136 = getelementptr inbounds %struct.GPR, %struct.GPR* %7135, i32 0, i32 15
  %7137 = getelementptr inbounds %struct.Reg, %struct.Reg* %7136, i32 0, i32 0
  %RBP.i360 = bitcast %union.anon* %7137 to i64*
  %7138 = load i64, i64* %RBP.i360
  %7139 = sub i64 %7138, 20
  %7140 = load i64, i64* %PC.i359
  %7141 = add i64 %7140, 4
  store i64 %7141, i64* %PC.i359
  %7142 = inttoptr i64 %7139 to i32*
  %7143 = load i32, i32* %7142
  %7144 = sub i32 %7143, 4
  %7145 = icmp ult i32 %7143, 4
  %7146 = zext i1 %7145 to i8
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7146, i8* %7147, align 1
  %7148 = and i32 %7144, 255
  %7149 = call i32 @llvm.ctpop.i32(i32 %7148)
  %7150 = trunc i32 %7149 to i8
  %7151 = and i8 %7150, 1
  %7152 = xor i8 %7151, 1
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7152, i8* %7153, align 1
  %7154 = xor i32 %7143, 4
  %7155 = xor i32 %7154, %7144
  %7156 = lshr i32 %7155, 4
  %7157 = trunc i32 %7156 to i8
  %7158 = and i8 %7157, 1
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7158, i8* %7159, align 1
  %7160 = icmp eq i32 %7144, 0
  %7161 = zext i1 %7160 to i8
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7161, i8* %7162, align 1
  %7163 = lshr i32 %7144, 31
  %7164 = trunc i32 %7163 to i8
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7164, i8* %7165, align 1
  %7166 = lshr i32 %7143, 31
  %7167 = xor i32 %7163, %7166
  %7168 = add i32 %7167, %7166
  %7169 = icmp eq i32 %7168, 2
  %7170 = zext i1 %7169 to i8
  %7171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7170, i8* %7171, align 1
  store %struct.Memory* %loadMem_413730, %struct.Memory** %MEMORY
  %loadMem_413734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7173 = getelementptr inbounds %struct.GPR, %struct.GPR* %7172, i32 0, i32 33
  %7174 = getelementptr inbounds %struct.Reg, %struct.Reg* %7173, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %7174 to i64*
  %7175 = load i64, i64* %PC.i358
  %7176 = add i64 %7175, 75
  %7177 = load i64, i64* %PC.i358
  %7178 = add i64 %7177, 6
  %7179 = load i64, i64* %PC.i358
  %7180 = add i64 %7179, 6
  store i64 %7180, i64* %PC.i358
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7182 = load i8, i8* %7181, align 1
  %7183 = icmp eq i8 %7182, 0
  %7184 = zext i1 %7183 to i8
  store i8 %7184, i8* %BRANCH_TAKEN, align 1
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7186 = select i1 %7183, i64 %7176, i64 %7178
  store i64 %7186, i64* %7185, align 8
  store %struct.Memory* %loadMem_413734, %struct.Memory** %MEMORY
  %loadBr_413734 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413734 = icmp eq i8 %loadBr_413734, 1
  br i1 %cmpBr_413734, label %block_.L_41377f, label %block_41373a

block_41373a:                                     ; preds = %block_.L_413730
  %loadMem_41373a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7188 = getelementptr inbounds %struct.GPR, %struct.GPR* %7187, i32 0, i32 33
  %7189 = getelementptr inbounds %struct.Reg, %struct.Reg* %7188, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %7189 to i64*
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7191 = getelementptr inbounds %struct.GPR, %struct.GPR* %7190, i32 0, i32 1
  %7192 = getelementptr inbounds %struct.Reg, %struct.Reg* %7191, i32 0, i32 0
  %RAX.i357 = bitcast %union.anon* %7192 to i64*
  %7193 = load i64, i64* %PC.i356
  %7194 = add i64 %7193, 5
  store i64 %7194, i64* %PC.i356
  store i64 1, i64* %RAX.i357, align 8
  store %struct.Memory* %loadMem_41373a, %struct.Memory** %MEMORY
  %loadMem_41373f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7196 = getelementptr inbounds %struct.GPR, %struct.GPR* %7195, i32 0, i32 33
  %7197 = getelementptr inbounds %struct.Reg, %struct.Reg* %7196, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %7197 to i64*
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 5
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %RCX.i354 = bitcast %union.anon* %7200 to i64*
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7202 = getelementptr inbounds %struct.GPR, %struct.GPR* %7201, i32 0, i32 15
  %7203 = getelementptr inbounds %struct.Reg, %struct.Reg* %7202, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %7203 to i64*
  %7204 = load i64, i64* %RBP.i355
  %7205 = sub i64 %7204, 64
  %7206 = load i64, i64* %PC.i353
  %7207 = add i64 %7206, 3
  store i64 %7207, i64* %PC.i353
  %7208 = inttoptr i64 %7205 to i32*
  %7209 = load i32, i32* %7208
  %7210 = zext i32 %7209 to i64
  store i64 %7210, i64* %RCX.i354, align 8
  store %struct.Memory* %loadMem_41373f, %struct.Memory** %MEMORY
  %loadMem_413742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7212 = getelementptr inbounds %struct.GPR, %struct.GPR* %7211, i32 0, i32 33
  %7213 = getelementptr inbounds %struct.Reg, %struct.Reg* %7212, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %7213 to i64*
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7215 = getelementptr inbounds %struct.GPR, %struct.GPR* %7214, i32 0, i32 1
  %7216 = getelementptr inbounds %struct.Reg, %struct.Reg* %7215, i32 0, i32 0
  %EAX.i351 = bitcast %union.anon* %7216 to i32*
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 7
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %RDX.i352 = bitcast %union.anon* %7219 to i64*
  %7220 = load i32, i32* %EAX.i351
  %7221 = zext i32 %7220 to i64
  %7222 = load i64, i64* %PC.i350
  %7223 = add i64 %7222, 2
  store i64 %7223, i64* %PC.i350
  %7224 = and i64 %7221, 4294967295
  store i64 %7224, i64* %RDX.i352, align 8
  store %struct.Memory* %loadMem_413742, %struct.Memory** %MEMORY
  %loadMem_413744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 33
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %7227 to i64*
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7229 = getelementptr inbounds %struct.GPR, %struct.GPR* %7228, i32 0, i32 5
  %7230 = getelementptr inbounds %struct.Reg, %struct.Reg* %7229, i32 0, i32 0
  %7231 = bitcast %union.anon* %7230 to %struct.anon.2*
  %CL.i348 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7231, i32 0, i32 0
  %7232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7233 = getelementptr inbounds %struct.GPR, %struct.GPR* %7232, i32 0, i32 7
  %7234 = getelementptr inbounds %struct.Reg, %struct.Reg* %7233, i32 0, i32 0
  %RDX.i349 = bitcast %union.anon* %7234 to i64*
  %7235 = load i64, i64* %RDX.i349
  %7236 = load i8, i8* %CL.i348
  %7237 = zext i8 %7236 to i64
  %7238 = load i64, i64* %PC.i347
  %7239 = add i64 %7238, 2
  store i64 %7239, i64* %PC.i347
  %7240 = trunc i64 %7237 to i5
  switch i5 %7240, label %7247 [
    i5 0, label %routine_shll__cl___edx.exit
    i5 1, label %7241
  ]

; <label>:7241:                                   ; preds = %block_41373a
  %7242 = trunc i64 %7235 to i32
  %7243 = shl i32 %7242, 1
  %7244 = icmp slt i32 %7242, 0
  %7245 = icmp slt i32 %7243, 0
  %7246 = xor i1 %7244, %7245
  br label %7256

; <label>:7247:                                   ; preds = %block_41373a
  %7248 = and i64 %7237, 31
  %7249 = add i64 %7248, 4294967295
  %7250 = and i64 %7235, 4294967295
  %7251 = and i64 %7249, 4294967295
  %7252 = shl i64 %7250, %7251
  %7253 = trunc i64 %7252 to i32
  %7254 = icmp slt i32 %7253, 0
  %7255 = shl i32 %7253, 1
  br label %7256

; <label>:7256:                                   ; preds = %7247, %7241
  %7257 = phi i1 [ %7244, %7241 ], [ %7254, %7247 ]
  %7258 = phi i1 [ %7246, %7241 ], [ false, %7247 ]
  %7259 = phi i32 [ %7243, %7241 ], [ %7255, %7247 ]
  %7260 = zext i32 %7259 to i64
  store i64 %7260, i64* %RDX.i349, align 8
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7262 = zext i1 %7257 to i8
  store i8 %7262, i8* %7261, align 1
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7264 = and i32 %7259, 254
  %7265 = call i32 @llvm.ctpop.i32(i32 %7264)
  %7266 = trunc i32 %7265 to i8
  %7267 = and i8 %7266, 1
  %7268 = xor i8 %7267, 1
  store i8 %7268, i8* %7263, align 1
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7269, align 1
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7271 = icmp eq i32 %7259, 0
  %7272 = zext i1 %7271 to i8
  store i8 %7272, i8* %7270, align 1
  %7273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7274 = lshr i32 %7259, 31
  %7275 = trunc i32 %7274 to i8
  store i8 %7275, i8* %7273, align 1
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7277 = zext i1 %7258 to i8
  store i8 %7277, i8* %7276, align 1
  br label %routine_shll__cl___edx.exit

routine_shll__cl___edx.exit:                      ; preds = %block_41373a, %7256
  store %struct.Memory* %loadMem_413744, %struct.Memory** %MEMORY
  %loadMem_413746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7279 = getelementptr inbounds %struct.GPR, %struct.GPR* %7278, i32 0, i32 33
  %7280 = getelementptr inbounds %struct.Reg, %struct.Reg* %7279, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %7280 to i64*
  %7281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7282 = getelementptr inbounds %struct.GPR, %struct.GPR* %7281, i32 0, i32 7
  %7283 = getelementptr inbounds %struct.Reg, %struct.Reg* %7282, i32 0, i32 0
  %EDX.i345 = bitcast %union.anon* %7283 to i32*
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 9
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %RSI.i346 = bitcast %union.anon* %7286 to i64*
  %7287 = load i32, i32* %EDX.i345
  %7288 = zext i32 %7287 to i64
  %7289 = load i64, i64* %PC.i344
  %7290 = add i64 %7289, 3
  store i64 %7290, i64* %PC.i344
  %7291 = shl i64 %7288, 32
  %7292 = ashr exact i64 %7291, 32
  store i64 %7292, i64* %RSI.i346, align 8
  store %struct.Memory* %loadMem_413746, %struct.Memory** %MEMORY
  %loadMem_413749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7294 = getelementptr inbounds %struct.GPR, %struct.GPR* %7293, i32 0, i32 33
  %7295 = getelementptr inbounds %struct.Reg, %struct.Reg* %7294, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %7295 to i64*
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7297 = getelementptr inbounds %struct.GPR, %struct.GPR* %7296, i32 0, i32 11
  %7298 = getelementptr inbounds %struct.Reg, %struct.Reg* %7297, i32 0, i32 0
  %RDI.i342 = bitcast %union.anon* %7298 to i64*
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7300 = getelementptr inbounds %struct.GPR, %struct.GPR* %7299, i32 0, i32 15
  %7301 = getelementptr inbounds %struct.Reg, %struct.Reg* %7300, i32 0, i32 0
  %RBP.i343 = bitcast %union.anon* %7301 to i64*
  %7302 = load i64, i64* %RBP.i343
  %7303 = sub i64 %7302, 8
  %7304 = load i64, i64* %PC.i341
  %7305 = add i64 %7304, 4
  store i64 %7305, i64* %PC.i341
  %7306 = inttoptr i64 %7303 to i64*
  %7307 = load i64, i64* %7306
  store i64 %7307, i64* %RDI.i342, align 8
  store %struct.Memory* %loadMem_413749, %struct.Memory** %MEMORY
  %loadMem_41374d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7309 = getelementptr inbounds %struct.GPR, %struct.GPR* %7308, i32 0, i32 33
  %7310 = getelementptr inbounds %struct.Reg, %struct.Reg* %7309, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %7310 to i64*
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 9
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %RSI.i339 = bitcast %union.anon* %7313 to i64*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 11
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %RDI.i340 = bitcast %union.anon* %7316 to i64*
  %7317 = load i64, i64* %RSI.i339
  %7318 = load i64, i64* %RDI.i340
  %7319 = add i64 %7318, 504
  %7320 = load i64, i64* %PC.i338
  %7321 = add i64 %7320, 7
  store i64 %7321, i64* %PC.i338
  %7322 = inttoptr i64 %7319 to i64*
  %7323 = load i64, i64* %7322
  %7324 = or i64 %7323, %7317
  store i64 %7324, i64* %RSI.i339, align 8
  %7325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7325, align 1
  %7326 = trunc i64 %7324 to i32
  %7327 = and i32 %7326, 255
  %7328 = call i32 @llvm.ctpop.i32(i32 %7327)
  %7329 = trunc i32 %7328 to i8
  %7330 = and i8 %7329, 1
  %7331 = xor i8 %7330, 1
  %7332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7331, i8* %7332, align 1
  %7333 = icmp eq i64 %7324, 0
  %7334 = zext i1 %7333 to i8
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7334, i8* %7335, align 1
  %7336 = lshr i64 %7324, 63
  %7337 = trunc i64 %7336 to i8
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7337, i8* %7338, align 1
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7339, align 1
  %7340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7340, align 1
  store %struct.Memory* %loadMem_41374d, %struct.Memory** %MEMORY
  %loadMem_413754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 33
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %7343 to i64*
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 9
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %RSI.i336 = bitcast %union.anon* %7346 to i64*
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 11
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %RDI.i337 = bitcast %union.anon* %7349 to i64*
  %7350 = load i64, i64* %RDI.i337
  %7351 = add i64 %7350, 504
  %7352 = load i64, i64* %RSI.i336
  %7353 = load i64, i64* %PC.i335
  %7354 = add i64 %7353, 7
  store i64 %7354, i64* %PC.i335
  %7355 = inttoptr i64 %7351 to i64*
  store i64 %7352, i64* %7355
  store %struct.Memory* %loadMem_413754, %struct.Memory** %MEMORY
  %loadMem_41375b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 33
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %7358 to i64*
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 7
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %RDX.i333 = bitcast %union.anon* %7361 to i64*
  %7362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7363 = getelementptr inbounds %struct.GPR, %struct.GPR* %7362, i32 0, i32 15
  %7364 = getelementptr inbounds %struct.Reg, %struct.Reg* %7363, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %7364 to i64*
  %7365 = load i64, i64* %RBP.i334
  %7366 = sub i64 %7365, 64
  %7367 = load i64, i64* %PC.i332
  %7368 = add i64 %7367, 3
  store i64 %7368, i64* %PC.i332
  %7369 = inttoptr i64 %7366 to i32*
  %7370 = load i32, i32* %7369
  %7371 = zext i32 %7370 to i64
  store i64 %7371, i64* %RDX.i333, align 8
  store %struct.Memory* %loadMem_41375b, %struct.Memory** %MEMORY
  %loadMem_41375e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7373 = getelementptr inbounds %struct.GPR, %struct.GPR* %7372, i32 0, i32 33
  %7374 = getelementptr inbounds %struct.Reg, %struct.Reg* %7373, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %7374 to i64*
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7376 = getelementptr inbounds %struct.GPR, %struct.GPR* %7375, i32 0, i32 7
  %7377 = getelementptr inbounds %struct.Reg, %struct.Reg* %7376, i32 0, i32 0
  %RDX.i331 = bitcast %union.anon* %7377 to i64*
  %7378 = load i64, i64* %RDX.i331
  %7379 = load i64, i64* %PC.i330
  %7380 = add i64 %7379, 3
  store i64 %7380, i64* %PC.i330
  %7381 = trunc i64 %7378 to i32
  %7382 = add i32 4, %7381
  %7383 = zext i32 %7382 to i64
  store i64 %7383, i64* %RDX.i331, align 8
  %7384 = icmp ult i32 %7382, %7381
  %7385 = icmp ult i32 %7382, 4
  %7386 = or i1 %7384, %7385
  %7387 = zext i1 %7386 to i8
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7387, i8* %7388, align 1
  %7389 = and i32 %7382, 255
  %7390 = call i32 @llvm.ctpop.i32(i32 %7389)
  %7391 = trunc i32 %7390 to i8
  %7392 = and i8 %7391, 1
  %7393 = xor i8 %7392, 1
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7393, i8* %7394, align 1
  %7395 = xor i64 4, %7378
  %7396 = trunc i64 %7395 to i32
  %7397 = xor i32 %7396, %7382
  %7398 = lshr i32 %7397, 4
  %7399 = trunc i32 %7398 to i8
  %7400 = and i8 %7399, 1
  %7401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7400, i8* %7401, align 1
  %7402 = icmp eq i32 %7382, 0
  %7403 = zext i1 %7402 to i8
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7403, i8* %7404, align 1
  %7405 = lshr i32 %7382, 31
  %7406 = trunc i32 %7405 to i8
  %7407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7406, i8* %7407, align 1
  %7408 = lshr i32 %7381, 31
  %7409 = xor i32 %7405, %7408
  %7410 = add i32 %7409, %7405
  %7411 = icmp eq i32 %7410, 2
  %7412 = zext i1 %7411 to i8
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7412, i8* %7413, align 1
  store %struct.Memory* %loadMem_41375e, %struct.Memory** %MEMORY
  %loadMem_413761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7415 = getelementptr inbounds %struct.GPR, %struct.GPR* %7414, i32 0, i32 33
  %7416 = getelementptr inbounds %struct.Reg, %struct.Reg* %7415, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %7416 to i64*
  %7417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7418 = getelementptr inbounds %struct.GPR, %struct.GPR* %7417, i32 0, i32 7
  %7419 = getelementptr inbounds %struct.Reg, %struct.Reg* %7418, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %7419 to i32*
  %7420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7421 = getelementptr inbounds %struct.GPR, %struct.GPR* %7420, i32 0, i32 5
  %7422 = getelementptr inbounds %struct.Reg, %struct.Reg* %7421, i32 0, i32 0
  %RCX.i329 = bitcast %union.anon* %7422 to i64*
  %7423 = load i32, i32* %EDX.i
  %7424 = zext i32 %7423 to i64
  %7425 = load i64, i64* %PC.i328
  %7426 = add i64 %7425, 2
  store i64 %7426, i64* %PC.i328
  %7427 = and i64 %7424, 4294967295
  store i64 %7427, i64* %RCX.i329, align 8
  store %struct.Memory* %loadMem_413761, %struct.Memory** %MEMORY
  %loadMem_413763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7429 = getelementptr inbounds %struct.GPR, %struct.GPR* %7428, i32 0, i32 33
  %7430 = getelementptr inbounds %struct.Reg, %struct.Reg* %7429, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %7430 to i64*
  %7431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7432 = getelementptr inbounds %struct.GPR, %struct.GPR* %7431, i32 0, i32 5
  %7433 = getelementptr inbounds %struct.Reg, %struct.Reg* %7432, i32 0, i32 0
  %7434 = bitcast %union.anon* %7433 to %struct.anon.2*
  %CL.i325 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7434, i32 0, i32 0
  %7435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7436 = getelementptr inbounds %struct.GPR, %struct.GPR* %7435, i32 0, i32 1
  %7437 = getelementptr inbounds %struct.Reg, %struct.Reg* %7436, i32 0, i32 0
  %RAX.i326 = bitcast %union.anon* %7437 to i64*
  %7438 = load i64, i64* %RAX.i326
  %7439 = load i8, i8* %CL.i325
  %7440 = zext i8 %7439 to i64
  %7441 = load i64, i64* %PC.i324
  %7442 = add i64 %7441, 2
  store i64 %7442, i64* %PC.i324
  %7443 = trunc i64 %7440 to i5
  switch i5 %7443, label %7450 [
    i5 0, label %routine_shll__cl___eax.exit327
    i5 1, label %7444
  ]

; <label>:7444:                                   ; preds = %routine_shll__cl___edx.exit
  %7445 = trunc i64 %7438 to i32
  %7446 = shl i32 %7445, 1
  %7447 = icmp slt i32 %7445, 0
  %7448 = icmp slt i32 %7446, 0
  %7449 = xor i1 %7447, %7448
  br label %7459

; <label>:7450:                                   ; preds = %routine_shll__cl___edx.exit
  %7451 = and i64 %7440, 31
  %7452 = add i64 %7451, 4294967295
  %7453 = and i64 %7438, 4294967295
  %7454 = and i64 %7452, 4294967295
  %7455 = shl i64 %7453, %7454
  %7456 = trunc i64 %7455 to i32
  %7457 = icmp slt i32 %7456, 0
  %7458 = shl i32 %7456, 1
  br label %7459

; <label>:7459:                                   ; preds = %7450, %7444
  %7460 = phi i1 [ %7447, %7444 ], [ %7457, %7450 ]
  %7461 = phi i1 [ %7449, %7444 ], [ false, %7450 ]
  %7462 = phi i32 [ %7446, %7444 ], [ %7458, %7450 ]
  %7463 = zext i32 %7462 to i64
  store i64 %7463, i64* %RAX.i326, align 8
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7465 = zext i1 %7460 to i8
  store i8 %7465, i8* %7464, align 1
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7467 = and i32 %7462, 254
  %7468 = call i32 @llvm.ctpop.i32(i32 %7467)
  %7469 = trunc i32 %7468 to i8
  %7470 = and i8 %7469, 1
  %7471 = xor i8 %7470, 1
  store i8 %7471, i8* %7466, align 1
  %7472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7472, align 1
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7474 = icmp eq i32 %7462, 0
  %7475 = zext i1 %7474 to i8
  store i8 %7475, i8* %7473, align 1
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7477 = lshr i32 %7462, 31
  %7478 = trunc i32 %7477 to i8
  store i8 %7478, i8* %7476, align 1
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7480 = zext i1 %7461 to i8
  store i8 %7480, i8* %7479, align 1
  br label %routine_shll__cl___eax.exit327

routine_shll__cl___eax.exit327:                   ; preds = %routine_shll__cl___edx.exit, %7459
  store %struct.Memory* %loadMem_413763, %struct.Memory** %MEMORY
  %loadMem_413765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7482 = getelementptr inbounds %struct.GPR, %struct.GPR* %7481, i32 0, i32 33
  %7483 = getelementptr inbounds %struct.Reg, %struct.Reg* %7482, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %7483 to i64*
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7485 = getelementptr inbounds %struct.GPR, %struct.GPR* %7484, i32 0, i32 1
  %7486 = getelementptr inbounds %struct.Reg, %struct.Reg* %7485, i32 0, i32 0
  %EAX.i322 = bitcast %union.anon* %7486 to i32*
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7488 = getelementptr inbounds %struct.GPR, %struct.GPR* %7487, i32 0, i32 9
  %7489 = getelementptr inbounds %struct.Reg, %struct.Reg* %7488, i32 0, i32 0
  %RSI.i323 = bitcast %union.anon* %7489 to i64*
  %7490 = load i32, i32* %EAX.i322
  %7491 = zext i32 %7490 to i64
  %7492 = load i64, i64* %PC.i321
  %7493 = add i64 %7492, 3
  store i64 %7493, i64* %PC.i321
  %7494 = shl i64 %7491, 32
  %7495 = ashr exact i64 %7494, 32
  store i64 %7495, i64* %RSI.i323, align 8
  store %struct.Memory* %loadMem_413765, %struct.Memory** %MEMORY
  %loadMem_413768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7497 = getelementptr inbounds %struct.GPR, %struct.GPR* %7496, i32 0, i32 33
  %7498 = getelementptr inbounds %struct.Reg, %struct.Reg* %7497, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %7498 to i64*
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7500 = getelementptr inbounds %struct.GPR, %struct.GPR* %7499, i32 0, i32 11
  %7501 = getelementptr inbounds %struct.Reg, %struct.Reg* %7500, i32 0, i32 0
  %RDI.i319 = bitcast %union.anon* %7501 to i64*
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7503 = getelementptr inbounds %struct.GPR, %struct.GPR* %7502, i32 0, i32 15
  %7504 = getelementptr inbounds %struct.Reg, %struct.Reg* %7503, i32 0, i32 0
  %RBP.i320 = bitcast %union.anon* %7504 to i64*
  %7505 = load i64, i64* %RBP.i320
  %7506 = sub i64 %7505, 8
  %7507 = load i64, i64* %PC.i318
  %7508 = add i64 %7507, 4
  store i64 %7508, i64* %PC.i318
  %7509 = inttoptr i64 %7506 to i64*
  %7510 = load i64, i64* %7509
  store i64 %7510, i64* %RDI.i319, align 8
  store %struct.Memory* %loadMem_413768, %struct.Memory** %MEMORY
  %loadMem_41376c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7512 = getelementptr inbounds %struct.GPR, %struct.GPR* %7511, i32 0, i32 33
  %7513 = getelementptr inbounds %struct.Reg, %struct.Reg* %7512, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %7513 to i64*
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7515 = getelementptr inbounds %struct.GPR, %struct.GPR* %7514, i32 0, i32 9
  %7516 = getelementptr inbounds %struct.Reg, %struct.Reg* %7515, i32 0, i32 0
  %RSI.i316 = bitcast %union.anon* %7516 to i64*
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7518 = getelementptr inbounds %struct.GPR, %struct.GPR* %7517, i32 0, i32 11
  %7519 = getelementptr inbounds %struct.Reg, %struct.Reg* %7518, i32 0, i32 0
  %RDI.i317 = bitcast %union.anon* %7519 to i64*
  %7520 = load i64, i64* %RSI.i316
  %7521 = load i64, i64* %RDI.i317
  %7522 = add i64 %7521, 504
  %7523 = load i64, i64* %PC.i315
  %7524 = add i64 %7523, 7
  store i64 %7524, i64* %PC.i315
  %7525 = inttoptr i64 %7522 to i64*
  %7526 = load i64, i64* %7525
  %7527 = or i64 %7526, %7520
  store i64 %7527, i64* %RSI.i316, align 8
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7528, align 1
  %7529 = trunc i64 %7527 to i32
  %7530 = and i32 %7529, 255
  %7531 = call i32 @llvm.ctpop.i32(i32 %7530)
  %7532 = trunc i32 %7531 to i8
  %7533 = and i8 %7532, 1
  %7534 = xor i8 %7533, 1
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7534, i8* %7535, align 1
  %7536 = icmp eq i64 %7527, 0
  %7537 = zext i1 %7536 to i8
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7537, i8* %7538, align 1
  %7539 = lshr i64 %7527, 63
  %7540 = trunc i64 %7539 to i8
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7540, i8* %7541, align 1
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7542, align 1
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7543, align 1
  store %struct.Memory* %loadMem_41376c, %struct.Memory** %MEMORY
  %loadMem_413773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7545 = getelementptr inbounds %struct.GPR, %struct.GPR* %7544, i32 0, i32 33
  %7546 = getelementptr inbounds %struct.Reg, %struct.Reg* %7545, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %7546 to i64*
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7548 = getelementptr inbounds %struct.GPR, %struct.GPR* %7547, i32 0, i32 9
  %7549 = getelementptr inbounds %struct.Reg, %struct.Reg* %7548, i32 0, i32 0
  %RSI.i313 = bitcast %union.anon* %7549 to i64*
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7551 = getelementptr inbounds %struct.GPR, %struct.GPR* %7550, i32 0, i32 11
  %7552 = getelementptr inbounds %struct.Reg, %struct.Reg* %7551, i32 0, i32 0
  %RDI.i314 = bitcast %union.anon* %7552 to i64*
  %7553 = load i64, i64* %RDI.i314
  %7554 = add i64 %7553, 504
  %7555 = load i64, i64* %RSI.i313
  %7556 = load i64, i64* %PC.i312
  %7557 = add i64 %7556, 7
  store i64 %7557, i64* %PC.i312
  %7558 = inttoptr i64 %7554 to i64*
  store i64 %7555, i64* %7558
  store %struct.Memory* %loadMem_413773, %struct.Memory** %MEMORY
  %loadMem_41377a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7560 = getelementptr inbounds %struct.GPR, %struct.GPR* %7559, i32 0, i32 33
  %7561 = getelementptr inbounds %struct.Reg, %struct.Reg* %7560, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %7561 to i64*
  %7562 = load i64, i64* %PC.i311
  %7563 = add i64 %7562, 36
  %7564 = load i64, i64* %PC.i311
  %7565 = add i64 %7564, 5
  store i64 %7565, i64* %PC.i311
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7563, i64* %7566, align 8
  store %struct.Memory* %loadMem_41377a, %struct.Memory** %MEMORY
  br label %block_.L_41379e

block_.L_41377f:                                  ; preds = %block_.L_413730
  %loadMem_41377f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7568 = getelementptr inbounds %struct.GPR, %struct.GPR* %7567, i32 0, i32 33
  %7569 = getelementptr inbounds %struct.Reg, %struct.Reg* %7568, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %7569 to i64*
  %7570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7571 = getelementptr inbounds %struct.GPR, %struct.GPR* %7570, i32 0, i32 1
  %7572 = getelementptr inbounds %struct.Reg, %struct.Reg* %7571, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %7572 to i64*
  %7573 = load i64, i64* %PC.i309
  %7574 = add i64 %7573, 5
  store i64 %7574, i64* %PC.i309
  store i64 1, i64* %RAX.i310, align 8
  store %struct.Memory* %loadMem_41377f, %struct.Memory** %MEMORY
  %loadMem_413784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7576 = getelementptr inbounds %struct.GPR, %struct.GPR* %7575, i32 0, i32 33
  %7577 = getelementptr inbounds %struct.Reg, %struct.Reg* %7576, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %7577 to i64*
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7579 = getelementptr inbounds %struct.GPR, %struct.GPR* %7578, i32 0, i32 5
  %7580 = getelementptr inbounds %struct.Reg, %struct.Reg* %7579, i32 0, i32 0
  %RCX.i307 = bitcast %union.anon* %7580 to i64*
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7582 = getelementptr inbounds %struct.GPR, %struct.GPR* %7581, i32 0, i32 15
  %7583 = getelementptr inbounds %struct.Reg, %struct.Reg* %7582, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %7583 to i64*
  %7584 = load i64, i64* %RBP.i308
  %7585 = sub i64 %7584, 64
  %7586 = load i64, i64* %PC.i306
  %7587 = add i64 %7586, 3
  store i64 %7587, i64* %PC.i306
  %7588 = inttoptr i64 %7585 to i32*
  %7589 = load i32, i32* %7588
  %7590 = zext i32 %7589 to i64
  store i64 %7590, i64* %RCX.i307, align 8
  store %struct.Memory* %loadMem_413784, %struct.Memory** %MEMORY
  %loadMem_413787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 33
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %7593 to i64*
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 5
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %7597 = bitcast %union.anon* %7596 to %struct.anon.2*
  %CL.i303 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7597, i32 0, i32 0
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 1
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %7600 to i64*
  %7601 = load i64, i64* %RAX.i304
  %7602 = load i8, i8* %CL.i303
  %7603 = zext i8 %7602 to i64
  %7604 = load i64, i64* %PC.i302
  %7605 = add i64 %7604, 2
  store i64 %7605, i64* %PC.i302
  %7606 = trunc i64 %7603 to i5
  switch i5 %7606, label %7613 [
    i5 0, label %routine_shll__cl___eax.exit305
    i5 1, label %7607
  ]

; <label>:7607:                                   ; preds = %block_.L_41377f
  %7608 = trunc i64 %7601 to i32
  %7609 = shl i32 %7608, 1
  %7610 = icmp slt i32 %7608, 0
  %7611 = icmp slt i32 %7609, 0
  %7612 = xor i1 %7610, %7611
  br label %7622

; <label>:7613:                                   ; preds = %block_.L_41377f
  %7614 = and i64 %7603, 31
  %7615 = add i64 %7614, 4294967295
  %7616 = and i64 %7601, 4294967295
  %7617 = and i64 %7615, 4294967295
  %7618 = shl i64 %7616, %7617
  %7619 = trunc i64 %7618 to i32
  %7620 = icmp slt i32 %7619, 0
  %7621 = shl i32 %7619, 1
  br label %7622

; <label>:7622:                                   ; preds = %7613, %7607
  %7623 = phi i1 [ %7610, %7607 ], [ %7620, %7613 ]
  %7624 = phi i1 [ %7612, %7607 ], [ false, %7613 ]
  %7625 = phi i32 [ %7609, %7607 ], [ %7621, %7613 ]
  %7626 = zext i32 %7625 to i64
  store i64 %7626, i64* %RAX.i304, align 8
  %7627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7628 = zext i1 %7623 to i8
  store i8 %7628, i8* %7627, align 1
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7630 = and i32 %7625, 254
  %7631 = call i32 @llvm.ctpop.i32(i32 %7630)
  %7632 = trunc i32 %7631 to i8
  %7633 = and i8 %7632, 1
  %7634 = xor i8 %7633, 1
  store i8 %7634, i8* %7629, align 1
  %7635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7635, align 1
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7637 = icmp eq i32 %7625, 0
  %7638 = zext i1 %7637 to i8
  store i8 %7638, i8* %7636, align 1
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7640 = lshr i32 %7625, 31
  %7641 = trunc i32 %7640 to i8
  store i8 %7641, i8* %7639, align 1
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7643 = zext i1 %7624 to i8
  store i8 %7643, i8* %7642, align 1
  br label %routine_shll__cl___eax.exit305

routine_shll__cl___eax.exit305:                   ; preds = %block_.L_41377f, %7622
  store %struct.Memory* %loadMem_413787, %struct.Memory** %MEMORY
  %loadMem_413789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7645 = getelementptr inbounds %struct.GPR, %struct.GPR* %7644, i32 0, i32 33
  %7646 = getelementptr inbounds %struct.Reg, %struct.Reg* %7645, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %7646 to i64*
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7648 = getelementptr inbounds %struct.GPR, %struct.GPR* %7647, i32 0, i32 1
  %7649 = getelementptr inbounds %struct.Reg, %struct.Reg* %7648, i32 0, i32 0
  %EAX.i300 = bitcast %union.anon* %7649 to i32*
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7651 = getelementptr inbounds %struct.GPR, %struct.GPR* %7650, i32 0, i32 7
  %7652 = getelementptr inbounds %struct.Reg, %struct.Reg* %7651, i32 0, i32 0
  %RDX.i301 = bitcast %union.anon* %7652 to i64*
  %7653 = load i32, i32* %EAX.i300
  %7654 = zext i32 %7653 to i64
  %7655 = load i64, i64* %PC.i299
  %7656 = add i64 %7655, 3
  store i64 %7656, i64* %PC.i299
  %7657 = shl i64 %7654, 32
  %7658 = ashr exact i64 %7657, 32
  store i64 %7658, i64* %RDX.i301, align 8
  store %struct.Memory* %loadMem_413789, %struct.Memory** %MEMORY
  %loadMem_41378c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7660 = getelementptr inbounds %struct.GPR, %struct.GPR* %7659, i32 0, i32 33
  %7661 = getelementptr inbounds %struct.Reg, %struct.Reg* %7660, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %7661 to i64*
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7663 = getelementptr inbounds %struct.GPR, %struct.GPR* %7662, i32 0, i32 9
  %7664 = getelementptr inbounds %struct.Reg, %struct.Reg* %7663, i32 0, i32 0
  %RSI.i297 = bitcast %union.anon* %7664 to i64*
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7666 = getelementptr inbounds %struct.GPR, %struct.GPR* %7665, i32 0, i32 15
  %7667 = getelementptr inbounds %struct.Reg, %struct.Reg* %7666, i32 0, i32 0
  %RBP.i298 = bitcast %union.anon* %7667 to i64*
  %7668 = load i64, i64* %RBP.i298
  %7669 = sub i64 %7668, 8
  %7670 = load i64, i64* %PC.i296
  %7671 = add i64 %7670, 4
  store i64 %7671, i64* %PC.i296
  %7672 = inttoptr i64 %7669 to i64*
  %7673 = load i64, i64* %7672
  store i64 %7673, i64* %RSI.i297, align 8
  store %struct.Memory* %loadMem_41378c, %struct.Memory** %MEMORY
  %loadMem_413790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7675 = getelementptr inbounds %struct.GPR, %struct.GPR* %7674, i32 0, i32 33
  %7676 = getelementptr inbounds %struct.Reg, %struct.Reg* %7675, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %7676 to i64*
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7678 = getelementptr inbounds %struct.GPR, %struct.GPR* %7677, i32 0, i32 7
  %7679 = getelementptr inbounds %struct.Reg, %struct.Reg* %7678, i32 0, i32 0
  %RDX.i294 = bitcast %union.anon* %7679 to i64*
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7681 = getelementptr inbounds %struct.GPR, %struct.GPR* %7680, i32 0, i32 9
  %7682 = getelementptr inbounds %struct.Reg, %struct.Reg* %7681, i32 0, i32 0
  %RSI.i295 = bitcast %union.anon* %7682 to i64*
  %7683 = load i64, i64* %RDX.i294
  %7684 = load i64, i64* %RSI.i295
  %7685 = add i64 %7684, 504
  %7686 = load i64, i64* %PC.i293
  %7687 = add i64 %7686, 7
  store i64 %7687, i64* %PC.i293
  %7688 = inttoptr i64 %7685 to i64*
  %7689 = load i64, i64* %7688
  %7690 = or i64 %7689, %7683
  store i64 %7690, i64* %RDX.i294, align 8
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7691, align 1
  %7692 = trunc i64 %7690 to i32
  %7693 = and i32 %7692, 255
  %7694 = call i32 @llvm.ctpop.i32(i32 %7693)
  %7695 = trunc i32 %7694 to i8
  %7696 = and i8 %7695, 1
  %7697 = xor i8 %7696, 1
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7697, i8* %7698, align 1
  %7699 = icmp eq i64 %7690, 0
  %7700 = zext i1 %7699 to i8
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7700, i8* %7701, align 1
  %7702 = lshr i64 %7690, 63
  %7703 = trunc i64 %7702 to i8
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7703, i8* %7704, align 1
  %7705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7705, align 1
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7706, align 1
  store %struct.Memory* %loadMem_413790, %struct.Memory** %MEMORY
  %loadMem_413797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7708 = getelementptr inbounds %struct.GPR, %struct.GPR* %7707, i32 0, i32 33
  %7709 = getelementptr inbounds %struct.Reg, %struct.Reg* %7708, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %7709 to i64*
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7711 = getelementptr inbounds %struct.GPR, %struct.GPR* %7710, i32 0, i32 7
  %7712 = getelementptr inbounds %struct.Reg, %struct.Reg* %7711, i32 0, i32 0
  %RDX.i291 = bitcast %union.anon* %7712 to i64*
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7714 = getelementptr inbounds %struct.GPR, %struct.GPR* %7713, i32 0, i32 9
  %7715 = getelementptr inbounds %struct.Reg, %struct.Reg* %7714, i32 0, i32 0
  %RSI.i292 = bitcast %union.anon* %7715 to i64*
  %7716 = load i64, i64* %RSI.i292
  %7717 = add i64 %7716, 504
  %7718 = load i64, i64* %RDX.i291
  %7719 = load i64, i64* %PC.i290
  %7720 = add i64 %7719, 7
  store i64 %7720, i64* %PC.i290
  %7721 = inttoptr i64 %7717 to i64*
  store i64 %7718, i64* %7721
  store %struct.Memory* %loadMem_413797, %struct.Memory** %MEMORY
  br label %block_.L_41379e

block_.L_41379e:                                  ; preds = %routine_shll__cl___eax.exit305, %routine_shll__cl___eax.exit327
  %loadMem_41379e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7723 = getelementptr inbounds %struct.GPR, %struct.GPR* %7722, i32 0, i32 33
  %7724 = getelementptr inbounds %struct.Reg, %struct.Reg* %7723, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %7724 to i64*
  %7725 = load i64, i64* %PC.i289
  %7726 = add i64 %7725, 5
  %7727 = load i64, i64* %PC.i289
  %7728 = add i64 %7727, 5
  store i64 %7728, i64* %PC.i289
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7726, i64* %7729, align 8
  store %struct.Memory* %loadMem_41379e, %struct.Memory** %MEMORY
  br label %block_.L_4137a3

block_.L_4137a3:                                  ; preds = %block_.L_41379e, %routine_shll__cl___eax.exit377
  %loadMem_4137a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 33
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %7732 to i64*
  %7733 = load i64, i64* %PC.i288
  %7734 = add i64 %7733, 5
  %7735 = load i64, i64* %PC.i288
  %7736 = add i64 %7735, 5
  store i64 %7736, i64* %PC.i288
  %7737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7734, i64* %7737, align 8
  store %struct.Memory* %loadMem_4137a3, %struct.Memory** %MEMORY
  br label %block_.L_4137a8

block_.L_4137a8:                                  ; preds = %block_.L_4137a3, %routine_shll__cl___eax.exit429
  %loadMem_4137a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 33
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %7740 to i64*
  %7741 = load i64, i64* %PC.i287
  %7742 = add i64 %7741, 5
  %7743 = load i64, i64* %PC.i287
  %7744 = add i64 %7743, 5
  store i64 %7744, i64* %PC.i287
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7742, i64* %7745, align 8
  store %struct.Memory* %loadMem_4137a8, %struct.Memory** %MEMORY
  br label %block_.L_4137ad

block_.L_4137ad:                                  ; preds = %block_.L_4137a8, %block_.L_41363d
  %loadMem_4137ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7747 = getelementptr inbounds %struct.GPR, %struct.GPR* %7746, i32 0, i32 33
  %7748 = getelementptr inbounds %struct.Reg, %struct.Reg* %7747, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %7748 to i64*
  %7749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7750 = getelementptr inbounds %struct.GPR, %struct.GPR* %7749, i32 0, i32 15
  %7751 = getelementptr inbounds %struct.Reg, %struct.Reg* %7750, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %7751 to i64*
  %7752 = load i64, i64* %RBP.i286
  %7753 = sub i64 %7752, 32
  %7754 = load i64, i64* %PC.i285
  %7755 = add i64 %7754, 4
  store i64 %7755, i64* %PC.i285
  %7756 = inttoptr i64 %7753 to i32*
  %7757 = load i32, i32* %7756
  %7758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7758, align 1
  %7759 = and i32 %7757, 255
  %7760 = call i32 @llvm.ctpop.i32(i32 %7759)
  %7761 = trunc i32 %7760 to i8
  %7762 = and i8 %7761, 1
  %7763 = xor i8 %7762, 1
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7763, i8* %7764, align 1
  %7765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7765, align 1
  %7766 = icmp eq i32 %7757, 0
  %7767 = zext i1 %7766 to i8
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7767, i8* %7768, align 1
  %7769 = lshr i32 %7757, 31
  %7770 = trunc i32 %7769 to i8
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7770, i8* %7771, align 1
  %7772 = lshr i32 %7757, 31
  %7773 = xor i32 %7769, %7772
  %7774 = add i32 %7773, %7772
  %7775 = icmp eq i32 %7774, 2
  %7776 = zext i1 %7775 to i8
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7776, i8* %7777, align 1
  store %struct.Memory* %loadMem_4137ad, %struct.Memory** %MEMORY
  %loadMem_4137b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 33
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %7780 to i64*
  %7781 = load i64, i64* %PC.i284
  %7782 = add i64 %7781, 19
  %7783 = load i64, i64* %PC.i284
  %7784 = add i64 %7783, 6
  %7785 = load i64, i64* %PC.i284
  %7786 = add i64 %7785, 6
  store i64 %7786, i64* %PC.i284
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7788 = load i8, i8* %7787, align 1
  store i8 %7788, i8* %BRANCH_TAKEN, align 1
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7790 = icmp ne i8 %7788, 0
  %7791 = select i1 %7790, i64 %7782, i64 %7784
  store i64 %7791, i64* %7789, align 8
  store %struct.Memory* %loadMem_4137b1, %struct.Memory** %MEMORY
  %loadBr_4137b1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4137b1 = icmp eq i8 %loadBr_4137b1, 1
  br i1 %cmpBr_4137b1, label %block_.L_4137c4, label %block_4137b7

block_4137b7:                                     ; preds = %block_.L_4137ad
  %loadMem_4137b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 33
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %7794 to i64*
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7796 = getelementptr inbounds %struct.GPR, %struct.GPR* %7795, i32 0, i32 1
  %7797 = getelementptr inbounds %struct.Reg, %struct.Reg* %7796, i32 0, i32 0
  %EAX.i282 = bitcast %union.anon* %7797 to i32*
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7799 = getelementptr inbounds %struct.GPR, %struct.GPR* %7798, i32 0, i32 1
  %7800 = getelementptr inbounds %struct.Reg, %struct.Reg* %7799, i32 0, i32 0
  %RAX.i283 = bitcast %union.anon* %7800 to i64*
  %7801 = load i64, i64* %RAX.i283
  %7802 = load i32, i32* %EAX.i282
  %7803 = zext i32 %7802 to i64
  %7804 = load i64, i64* %PC.i281
  %7805 = add i64 %7804, 2
  store i64 %7805, i64* %PC.i281
  %7806 = xor i64 %7803, %7801
  %7807 = trunc i64 %7806 to i32
  %7808 = and i64 %7806, 4294967295
  store i64 %7808, i64* %RAX.i283, align 8
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7809, align 1
  %7810 = and i32 %7807, 255
  %7811 = call i32 @llvm.ctpop.i32(i32 %7810)
  %7812 = trunc i32 %7811 to i8
  %7813 = and i8 %7812, 1
  %7814 = xor i8 %7813, 1
  %7815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7814, i8* %7815, align 1
  %7816 = icmp eq i32 %7807, 0
  %7817 = zext i1 %7816 to i8
  %7818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7817, i8* %7818, align 1
  %7819 = lshr i32 %7807, 31
  %7820 = trunc i32 %7819 to i8
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7820, i8* %7821, align 1
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7822, align 1
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7823, align 1
  store %struct.Memory* %loadMem_4137b7, %struct.Memory** %MEMORY
  %loadMem_4137b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7825 = getelementptr inbounds %struct.GPR, %struct.GPR* %7824, i32 0, i32 33
  %7826 = getelementptr inbounds %struct.Reg, %struct.Reg* %7825, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %7826 to i64*
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7828 = getelementptr inbounds %struct.GPR, %struct.GPR* %7827, i32 0, i32 1
  %7829 = getelementptr inbounds %struct.Reg, %struct.Reg* %7828, i32 0, i32 0
  %EAX.i279 = bitcast %union.anon* %7829 to i32*
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7831 = getelementptr inbounds %struct.GPR, %struct.GPR* %7830, i32 0, i32 15
  %7832 = getelementptr inbounds %struct.Reg, %struct.Reg* %7831, i32 0, i32 0
  %RBP.i280 = bitcast %union.anon* %7832 to i64*
  %7833 = load i64, i64* %RBP.i280
  %7834 = sub i64 %7833, 192
  %7835 = load i32, i32* %EAX.i279
  %7836 = zext i32 %7835 to i64
  %7837 = load i64, i64* %PC.i278
  %7838 = add i64 %7837, 6
  store i64 %7838, i64* %PC.i278
  %7839 = inttoptr i64 %7834 to i32*
  store i32 %7835, i32* %7839
  store %struct.Memory* %loadMem_4137b9, %struct.Memory** %MEMORY
  %loadMem_4137bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7841 = getelementptr inbounds %struct.GPR, %struct.GPR* %7840, i32 0, i32 33
  %7842 = getelementptr inbounds %struct.Reg, %struct.Reg* %7841, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %7842 to i64*
  %7843 = load i64, i64* %PC.i277
  %7844 = add i64 %7843, 142
  %7845 = load i64, i64* %PC.i277
  %7846 = add i64 %7845, 5
  store i64 %7846, i64* %PC.i277
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7844, i64* %7847, align 8
  store %struct.Memory* %loadMem_4137bf, %struct.Memory** %MEMORY
  br label %block_.L_41384d

block_.L_4137c4:                                  ; preds = %block_.L_4137ad
  %loadMem_4137c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 33
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %7850 to i64*
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 15
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %RBP.i276 = bitcast %union.anon* %7853 to i64*
  %7854 = load i64, i64* %RBP.i276
  %7855 = sub i64 %7854, 28
  %7856 = load i64, i64* %PC.i275
  %7857 = add i64 %7856, 4
  store i64 %7857, i64* %PC.i275
  %7858 = inttoptr i64 %7855 to i32*
  %7859 = load i32, i32* %7858
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7860, align 1
  %7861 = and i32 %7859, 255
  %7862 = call i32 @llvm.ctpop.i32(i32 %7861)
  %7863 = trunc i32 %7862 to i8
  %7864 = and i8 %7863, 1
  %7865 = xor i8 %7864, 1
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7865, i8* %7866, align 1
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7867, align 1
  %7868 = icmp eq i32 %7859, 0
  %7869 = zext i1 %7868 to i8
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7869, i8* %7870, align 1
  %7871 = lshr i32 %7859, 31
  %7872 = trunc i32 %7871 to i8
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7872, i8* %7873, align 1
  %7874 = lshr i32 %7859, 31
  %7875 = xor i32 %7871, %7874
  %7876 = add i32 %7875, %7874
  %7877 = icmp eq i32 %7876, 2
  %7878 = zext i1 %7877 to i8
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7878, i8* %7879, align 1
  store %struct.Memory* %loadMem_4137c4, %struct.Memory** %MEMORY
  %loadMem_4137c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7881 = getelementptr inbounds %struct.GPR, %struct.GPR* %7880, i32 0, i32 33
  %7882 = getelementptr inbounds %struct.Reg, %struct.Reg* %7881, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %7882 to i64*
  %7883 = load i64, i64* %PC.i274
  %7884 = add i64 %7883, 22
  %7885 = load i64, i64* %PC.i274
  %7886 = add i64 %7885, 6
  %7887 = load i64, i64* %PC.i274
  %7888 = add i64 %7887, 6
  store i64 %7888, i64* %PC.i274
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7890 = load i8, i8* %7889, align 1
  store i8 %7890, i8* %BRANCH_TAKEN, align 1
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7892 = icmp ne i8 %7890, 0
  %7893 = select i1 %7892, i64 %7884, i64 %7886
  store i64 %7893, i64* %7891, align 8
  store %struct.Memory* %loadMem_4137c8, %struct.Memory** %MEMORY
  %loadBr_4137c8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4137c8 = icmp eq i8 %loadBr_4137c8, 1
  br i1 %cmpBr_4137c8, label %block_.L_4137de, label %block_4137ce

block_4137ce:                                     ; preds = %block_.L_4137c4
  %loadMem_4137ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7895 = getelementptr inbounds %struct.GPR, %struct.GPR* %7894, i32 0, i32 33
  %7896 = getelementptr inbounds %struct.Reg, %struct.Reg* %7895, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %7896 to i64*
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 1
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %RAX.i273 = bitcast %union.anon* %7899 to i64*
  %7900 = load i64, i64* %PC.i272
  %7901 = add i64 %7900, 5
  store i64 %7901, i64* %PC.i272
  store i64 1, i64* %RAX.i273, align 8
  store %struct.Memory* %loadMem_4137ce, %struct.Memory** %MEMORY
  %loadMem_4137d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 33
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %7904 to i64*
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 1
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %EAX.i270 = bitcast %union.anon* %7907 to i32*
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7909 = getelementptr inbounds %struct.GPR, %struct.GPR* %7908, i32 0, i32 15
  %7910 = getelementptr inbounds %struct.Reg, %struct.Reg* %7909, i32 0, i32 0
  %RBP.i271 = bitcast %union.anon* %7910 to i64*
  %7911 = load i64, i64* %RBP.i271
  %7912 = sub i64 %7911, 196
  %7913 = load i32, i32* %EAX.i270
  %7914 = zext i32 %7913 to i64
  %7915 = load i64, i64* %PC.i269
  %7916 = add i64 %7915, 6
  store i64 %7916, i64* %PC.i269
  %7917 = inttoptr i64 %7912 to i32*
  store i32 %7913, i32* %7917
  store %struct.Memory* %loadMem_4137d3, %struct.Memory** %MEMORY
  %loadMem_4137d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 33
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %7920 to i64*
  %7921 = load i64, i64* %PC.i268
  %7922 = add i64 %7921, 104
  %7923 = load i64, i64* %PC.i268
  %7924 = add i64 %7923, 5
  store i64 %7924, i64* %PC.i268
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7922, i64* %7925, align 8
  store %struct.Memory* %loadMem_4137d9, %struct.Memory** %MEMORY
  br label %block_.L_413841

block_.L_4137de:                                  ; preds = %block_.L_4137c4
  %loadMem_4137de = load %struct.Memory*, %struct.Memory** %MEMORY
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 33
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 15
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %7931 to i64*
  %7932 = load i64, i64* %RBP.i267
  %7933 = sub i64 %7932, 48
  %7934 = load i64, i64* %PC.i266
  %7935 = add i64 %7934, 4
  store i64 %7935, i64* %PC.i266
  %7936 = inttoptr i64 %7933 to i32*
  %7937 = load i32, i32* %7936
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7938, align 1
  %7939 = and i32 %7937, 255
  %7940 = call i32 @llvm.ctpop.i32(i32 %7939)
  %7941 = trunc i32 %7940 to i8
  %7942 = and i8 %7941, 1
  %7943 = xor i8 %7942, 1
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7943, i8* %7944, align 1
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7945, align 1
  %7946 = icmp eq i32 %7937, 0
  %7947 = zext i1 %7946 to i8
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7947, i8* %7948, align 1
  %7949 = lshr i32 %7937, 31
  %7950 = trunc i32 %7949 to i8
  %7951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7950, i8* %7951, align 1
  %7952 = lshr i32 %7937, 31
  %7953 = xor i32 %7949, %7952
  %7954 = add i32 %7953, %7952
  %7955 = icmp eq i32 %7954, 2
  %7956 = zext i1 %7955 to i8
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7956, i8* %7957, align 1
  store %struct.Memory* %loadMem_4137de, %struct.Memory** %MEMORY
  %loadMem_4137e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7959 = getelementptr inbounds %struct.GPR, %struct.GPR* %7958, i32 0, i32 33
  %7960 = getelementptr inbounds %struct.Reg, %struct.Reg* %7959, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %7960 to i64*
  %7961 = load i64, i64* %PC.i265
  %7962 = add i64 %7961, 22
  %7963 = load i64, i64* %PC.i265
  %7964 = add i64 %7963, 6
  %7965 = load i64, i64* %PC.i265
  %7966 = add i64 %7965, 6
  store i64 %7966, i64* %PC.i265
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7968 = load i8, i8* %7967, align 1
  store i8 %7968, i8* %BRANCH_TAKEN, align 1
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7970 = icmp ne i8 %7968, 0
  %7971 = select i1 %7970, i64 %7962, i64 %7964
  store i64 %7971, i64* %7969, align 8
  store %struct.Memory* %loadMem_4137e2, %struct.Memory** %MEMORY
  %loadBr_4137e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4137e2 = icmp eq i8 %loadBr_4137e2, 1
  br i1 %cmpBr_4137e2, label %block_.L_4137f8, label %block_4137e8

block_4137e8:                                     ; preds = %block_.L_4137de
  %loadMem_4137e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7973 = getelementptr inbounds %struct.GPR, %struct.GPR* %7972, i32 0, i32 33
  %7974 = getelementptr inbounds %struct.Reg, %struct.Reg* %7973, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %7974 to i64*
  %7975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7976 = getelementptr inbounds %struct.GPR, %struct.GPR* %7975, i32 0, i32 1
  %7977 = getelementptr inbounds %struct.Reg, %struct.Reg* %7976, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %7977 to i64*
  %7978 = load i64, i64* %PC.i263
  %7979 = add i64 %7978, 5
  store i64 %7979, i64* %PC.i263
  store i64 17, i64* %RAX.i264, align 8
  store %struct.Memory* %loadMem_4137e8, %struct.Memory** %MEMORY
  %loadMem_4137ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7981 = getelementptr inbounds %struct.GPR, %struct.GPR* %7980, i32 0, i32 33
  %7982 = getelementptr inbounds %struct.Reg, %struct.Reg* %7981, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %7982 to i64*
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7984 = getelementptr inbounds %struct.GPR, %struct.GPR* %7983, i32 0, i32 1
  %7985 = getelementptr inbounds %struct.Reg, %struct.Reg* %7984, i32 0, i32 0
  %EAX.i261 = bitcast %union.anon* %7985 to i32*
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7987 = getelementptr inbounds %struct.GPR, %struct.GPR* %7986, i32 0, i32 15
  %7988 = getelementptr inbounds %struct.Reg, %struct.Reg* %7987, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %7988 to i64*
  %7989 = load i64, i64* %RBP.i262
  %7990 = sub i64 %7989, 200
  %7991 = load i32, i32* %EAX.i261
  %7992 = zext i32 %7991 to i64
  %7993 = load i64, i64* %PC.i260
  %7994 = add i64 %7993, 6
  store i64 %7994, i64* %PC.i260
  %7995 = inttoptr i64 %7990 to i32*
  store i32 %7991, i32* %7995
  store %struct.Memory* %loadMem_4137ed, %struct.Memory** %MEMORY
  %loadMem_4137f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7997 = getelementptr inbounds %struct.GPR, %struct.GPR* %7996, i32 0, i32 33
  %7998 = getelementptr inbounds %struct.Reg, %struct.Reg* %7997, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %7998 to i64*
  %7999 = load i64, i64* %PC.i259
  %8000 = add i64 %7999, 66
  %8001 = load i64, i64* %PC.i259
  %8002 = add i64 %8001, 5
  store i64 %8002, i64* %PC.i259
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8000, i64* %8003, align 8
  store %struct.Memory* %loadMem_4137f3, %struct.Memory** %MEMORY
  br label %block_.L_413835

block_.L_4137f8:                                  ; preds = %block_.L_4137de
  %loadMem_4137f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 33
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %8006 to i64*
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 15
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %8009 to i64*
  %8010 = load i64, i64* %RBP.i258
  %8011 = sub i64 %8010, 52
  %8012 = load i64, i64* %PC.i257
  %8013 = add i64 %8012, 4
  store i64 %8013, i64* %PC.i257
  %8014 = inttoptr i64 %8011 to i32*
  %8015 = load i32, i32* %8014
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8016, align 1
  %8017 = and i32 %8015, 255
  %8018 = call i32 @llvm.ctpop.i32(i32 %8017)
  %8019 = trunc i32 %8018 to i8
  %8020 = and i8 %8019, 1
  %8021 = xor i8 %8020, 1
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8021, i8* %8022, align 1
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8023, align 1
  %8024 = icmp eq i32 %8015, 0
  %8025 = zext i1 %8024 to i8
  %8026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8025, i8* %8026, align 1
  %8027 = lshr i32 %8015, 31
  %8028 = trunc i32 %8027 to i8
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8028, i8* %8029, align 1
  %8030 = lshr i32 %8015, 31
  %8031 = xor i32 %8027, %8030
  %8032 = add i32 %8031, %8030
  %8033 = icmp eq i32 %8032, 2
  %8034 = zext i1 %8033 to i8
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8034, i8* %8035, align 1
  store %struct.Memory* %loadMem_4137f8, %struct.Memory** %MEMORY
  %loadMem_4137fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8037 = getelementptr inbounds %struct.GPR, %struct.GPR* %8036, i32 0, i32 33
  %8038 = getelementptr inbounds %struct.Reg, %struct.Reg* %8037, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %8038 to i64*
  %8039 = load i64, i64* %PC.i256
  %8040 = add i64 %8039, 22
  %8041 = load i64, i64* %PC.i256
  %8042 = add i64 %8041, 6
  %8043 = load i64, i64* %PC.i256
  %8044 = add i64 %8043, 6
  store i64 %8044, i64* %PC.i256
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8046 = load i8, i8* %8045, align 1
  store i8 %8046, i8* %BRANCH_TAKEN, align 1
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8048 = icmp ne i8 %8046, 0
  %8049 = select i1 %8048, i64 %8040, i64 %8042
  store i64 %8049, i64* %8047, align 8
  store %struct.Memory* %loadMem_4137fc, %struct.Memory** %MEMORY
  %loadBr_4137fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4137fc = icmp eq i8 %loadBr_4137fc, 1
  br i1 %cmpBr_4137fc, label %block_.L_413812, label %block_413802

block_413802:                                     ; preds = %block_.L_4137f8
  %loadMem_413802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8051 = getelementptr inbounds %struct.GPR, %struct.GPR* %8050, i32 0, i32 33
  %8052 = getelementptr inbounds %struct.Reg, %struct.Reg* %8051, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %8052 to i64*
  %8053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8054 = getelementptr inbounds %struct.GPR, %struct.GPR* %8053, i32 0, i32 1
  %8055 = getelementptr inbounds %struct.Reg, %struct.Reg* %8054, i32 0, i32 0
  %RAX.i255 = bitcast %union.anon* %8055 to i64*
  %8056 = load i64, i64* %PC.i254
  %8057 = add i64 %8056, 5
  store i64 %8057, i64* %PC.i254
  store i64 18, i64* %RAX.i255, align 8
  store %struct.Memory* %loadMem_413802, %struct.Memory** %MEMORY
  %loadMem_413807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8059 = getelementptr inbounds %struct.GPR, %struct.GPR* %8058, i32 0, i32 33
  %8060 = getelementptr inbounds %struct.Reg, %struct.Reg* %8059, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %8060 to i64*
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8062 = getelementptr inbounds %struct.GPR, %struct.GPR* %8061, i32 0, i32 1
  %8063 = getelementptr inbounds %struct.Reg, %struct.Reg* %8062, i32 0, i32 0
  %EAX.i252 = bitcast %union.anon* %8063 to i32*
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8065 = getelementptr inbounds %struct.GPR, %struct.GPR* %8064, i32 0, i32 15
  %8066 = getelementptr inbounds %struct.Reg, %struct.Reg* %8065, i32 0, i32 0
  %RBP.i253 = bitcast %union.anon* %8066 to i64*
  %8067 = load i64, i64* %RBP.i253
  %8068 = sub i64 %8067, 204
  %8069 = load i32, i32* %EAX.i252
  %8070 = zext i32 %8069 to i64
  %8071 = load i64, i64* %PC.i251
  %8072 = add i64 %8071, 6
  store i64 %8072, i64* %PC.i251
  %8073 = inttoptr i64 %8068 to i32*
  store i32 %8069, i32* %8073
  store %struct.Memory* %loadMem_413807, %struct.Memory** %MEMORY
  %loadMem_41380d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8075 = getelementptr inbounds %struct.GPR, %struct.GPR* %8074, i32 0, i32 33
  %8076 = getelementptr inbounds %struct.Reg, %struct.Reg* %8075, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %8076 to i64*
  %8077 = load i64, i64* %PC.i250
  %8078 = add i64 %8077, 28
  %8079 = load i64, i64* %PC.i250
  %8080 = add i64 %8079, 5
  store i64 %8080, i64* %PC.i250
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8078, i64* %8081, align 8
  store %struct.Memory* %loadMem_41380d, %struct.Memory** %MEMORY
  br label %block_.L_413829

block_.L_413812:                                  ; preds = %block_.L_4137f8
  %loadMem_413812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8083 = getelementptr inbounds %struct.GPR, %struct.GPR* %8082, i32 0, i32 33
  %8084 = getelementptr inbounds %struct.Reg, %struct.Reg* %8083, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %8084 to i64*
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8086 = getelementptr inbounds %struct.GPR, %struct.GPR* %8085, i32 0, i32 1
  %8087 = getelementptr inbounds %struct.Reg, %struct.Reg* %8086, i32 0, i32 0
  %RAX.i249 = bitcast %union.anon* %8087 to i64*
  %8088 = load i64, i64* %PC.i248
  %8089 = add i64 %8088, 5
  store i64 %8089, i64* %PC.i248
  store i64 23, i64* %RAX.i249, align 8
  store %struct.Memory* %loadMem_413812, %struct.Memory** %MEMORY
  %loadMem_413817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8091 = getelementptr inbounds %struct.GPR, %struct.GPR* %8090, i32 0, i32 33
  %8092 = getelementptr inbounds %struct.Reg, %struct.Reg* %8091, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %8092 to i64*
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8094 = getelementptr inbounds %struct.GPR, %struct.GPR* %8093, i32 0, i32 5
  %8095 = getelementptr inbounds %struct.Reg, %struct.Reg* %8094, i32 0, i32 0
  %RCX.i247 = bitcast %union.anon* %8095 to i64*
  %8096 = load i64, i64* %PC.i246
  %8097 = add i64 %8096, 5
  store i64 %8097, i64* %PC.i246
  store i64 19, i64* %RCX.i247, align 8
  store %struct.Memory* %loadMem_413817, %struct.Memory** %MEMORY
  %loadMem_41381c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 33
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %8100 to i64*
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 15
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %RBP.i245 = bitcast %union.anon* %8103 to i64*
  %8104 = load i64, i64* %RBP.i245
  %8105 = sub i64 %8104, 36
  %8106 = load i64, i64* %PC.i244
  %8107 = add i64 %8106, 4
  store i64 %8107, i64* %PC.i244
  %8108 = inttoptr i64 %8105 to i32*
  %8109 = load i32, i32* %8108
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8110, align 1
  %8111 = and i32 %8109, 255
  %8112 = call i32 @llvm.ctpop.i32(i32 %8111)
  %8113 = trunc i32 %8112 to i8
  %8114 = and i8 %8113, 1
  %8115 = xor i8 %8114, 1
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8115, i8* %8116, align 1
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8117, align 1
  %8118 = icmp eq i32 %8109, 0
  %8119 = zext i1 %8118 to i8
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8119, i8* %8120, align 1
  %8121 = lshr i32 %8109, 31
  %8122 = trunc i32 %8121 to i8
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8122, i8* %8123, align 1
  %8124 = lshr i32 %8109, 31
  %8125 = xor i32 %8121, %8124
  %8126 = add i32 %8125, %8124
  %8127 = icmp eq i32 %8126, 2
  %8128 = zext i1 %8127 to i8
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8128, i8* %8129, align 1
  store %struct.Memory* %loadMem_41381c, %struct.Memory** %MEMORY
  %loadMem_413820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8131 = getelementptr inbounds %struct.GPR, %struct.GPR* %8130, i32 0, i32 33
  %8132 = getelementptr inbounds %struct.Reg, %struct.Reg* %8131, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %8132 to i64*
  %8133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8134 = getelementptr inbounds %struct.GPR, %struct.GPR* %8133, i32 0, i32 5
  %8135 = getelementptr inbounds %struct.Reg, %struct.Reg* %8134, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %8135 to i32*
  %8136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8137 = getelementptr inbounds %struct.GPR, %struct.GPR* %8136, i32 0, i32 1
  %8138 = getelementptr inbounds %struct.Reg, %struct.Reg* %8137, i32 0, i32 0
  %RAX.i243 = bitcast %union.anon* %8138 to i64*
  %8139 = load i32, i32* %ECX.i
  %8140 = zext i32 %8139 to i64
  %8141 = load i64, i64* %PC.i242
  %8142 = add i64 %8141, 3
  store i64 %8142, i64* %PC.i242
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8144 = load i8, i8* %8143, align 1
  %8145 = icmp eq i8 %8144, 0
  %8146 = load i64, i64* %RAX.i243, align 8
  %8147 = select i1 %8145, i64 %8140, i64 %8146
  %8148 = and i64 %8147, 4294967295
  store i64 %8148, i64* %RAX.i243, align 8
  store %struct.Memory* %loadMem_413820, %struct.Memory** %MEMORY
  %loadMem_413823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8150 = getelementptr inbounds %struct.GPR, %struct.GPR* %8149, i32 0, i32 33
  %8151 = getelementptr inbounds %struct.Reg, %struct.Reg* %8150, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %8151 to i64*
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8153 = getelementptr inbounds %struct.GPR, %struct.GPR* %8152, i32 0, i32 1
  %8154 = getelementptr inbounds %struct.Reg, %struct.Reg* %8153, i32 0, i32 0
  %EAX.i240 = bitcast %union.anon* %8154 to i32*
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8156 = getelementptr inbounds %struct.GPR, %struct.GPR* %8155, i32 0, i32 15
  %8157 = getelementptr inbounds %struct.Reg, %struct.Reg* %8156, i32 0, i32 0
  %RBP.i241 = bitcast %union.anon* %8157 to i64*
  %8158 = load i64, i64* %RBP.i241
  %8159 = sub i64 %8158, 204
  %8160 = load i32, i32* %EAX.i240
  %8161 = zext i32 %8160 to i64
  %8162 = load i64, i64* %PC.i239
  %8163 = add i64 %8162, 6
  store i64 %8163, i64* %PC.i239
  %8164 = inttoptr i64 %8159 to i32*
  store i32 %8160, i32* %8164
  store %struct.Memory* %loadMem_413823, %struct.Memory** %MEMORY
  br label %block_.L_413829

block_.L_413829:                                  ; preds = %block_.L_413812, %block_413802
  %loadMem_413829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8166 = getelementptr inbounds %struct.GPR, %struct.GPR* %8165, i32 0, i32 33
  %8167 = getelementptr inbounds %struct.Reg, %struct.Reg* %8166, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %8167 to i64*
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8169 = getelementptr inbounds %struct.GPR, %struct.GPR* %8168, i32 0, i32 1
  %8170 = getelementptr inbounds %struct.Reg, %struct.Reg* %8169, i32 0, i32 0
  %RAX.i237 = bitcast %union.anon* %8170 to i64*
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8172 = getelementptr inbounds %struct.GPR, %struct.GPR* %8171, i32 0, i32 15
  %8173 = getelementptr inbounds %struct.Reg, %struct.Reg* %8172, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %8173 to i64*
  %8174 = load i64, i64* %RBP.i238
  %8175 = sub i64 %8174, 204
  %8176 = load i64, i64* %PC.i236
  %8177 = add i64 %8176, 6
  store i64 %8177, i64* %PC.i236
  %8178 = inttoptr i64 %8175 to i32*
  %8179 = load i32, i32* %8178
  %8180 = zext i32 %8179 to i64
  store i64 %8180, i64* %RAX.i237, align 8
  store %struct.Memory* %loadMem_413829, %struct.Memory** %MEMORY
  %loadMem_41382f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8182 = getelementptr inbounds %struct.GPR, %struct.GPR* %8181, i32 0, i32 33
  %8183 = getelementptr inbounds %struct.Reg, %struct.Reg* %8182, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %8183 to i64*
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8185 = getelementptr inbounds %struct.GPR, %struct.GPR* %8184, i32 0, i32 1
  %8186 = getelementptr inbounds %struct.Reg, %struct.Reg* %8185, i32 0, i32 0
  %EAX.i234 = bitcast %union.anon* %8186 to i32*
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8188 = getelementptr inbounds %struct.GPR, %struct.GPR* %8187, i32 0, i32 15
  %8189 = getelementptr inbounds %struct.Reg, %struct.Reg* %8188, i32 0, i32 0
  %RBP.i235 = bitcast %union.anon* %8189 to i64*
  %8190 = load i64, i64* %RBP.i235
  %8191 = sub i64 %8190, 200
  %8192 = load i32, i32* %EAX.i234
  %8193 = zext i32 %8192 to i64
  %8194 = load i64, i64* %PC.i233
  %8195 = add i64 %8194, 6
  store i64 %8195, i64* %PC.i233
  %8196 = inttoptr i64 %8191 to i32*
  store i32 %8192, i32* %8196
  store %struct.Memory* %loadMem_41382f, %struct.Memory** %MEMORY
  br label %block_.L_413835

block_.L_413835:                                  ; preds = %block_.L_413829, %block_4137e8
  %loadMem_413835 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8198 = getelementptr inbounds %struct.GPR, %struct.GPR* %8197, i32 0, i32 33
  %8199 = getelementptr inbounds %struct.Reg, %struct.Reg* %8198, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %8199 to i64*
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8201 = getelementptr inbounds %struct.GPR, %struct.GPR* %8200, i32 0, i32 1
  %8202 = getelementptr inbounds %struct.Reg, %struct.Reg* %8201, i32 0, i32 0
  %RAX.i231 = bitcast %union.anon* %8202 to i64*
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8204 = getelementptr inbounds %struct.GPR, %struct.GPR* %8203, i32 0, i32 15
  %8205 = getelementptr inbounds %struct.Reg, %struct.Reg* %8204, i32 0, i32 0
  %RBP.i232 = bitcast %union.anon* %8205 to i64*
  %8206 = load i64, i64* %RBP.i232
  %8207 = sub i64 %8206, 200
  %8208 = load i64, i64* %PC.i230
  %8209 = add i64 %8208, 6
  store i64 %8209, i64* %PC.i230
  %8210 = inttoptr i64 %8207 to i32*
  %8211 = load i32, i32* %8210
  %8212 = zext i32 %8211 to i64
  store i64 %8212, i64* %RAX.i231, align 8
  store %struct.Memory* %loadMem_413835, %struct.Memory** %MEMORY
  %loadMem_41383b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 33
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %8215 to i64*
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 1
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %EAX.i228 = bitcast %union.anon* %8218 to i32*
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8220 = getelementptr inbounds %struct.GPR, %struct.GPR* %8219, i32 0, i32 15
  %8221 = getelementptr inbounds %struct.Reg, %struct.Reg* %8220, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %8221 to i64*
  %8222 = load i64, i64* %RBP.i229
  %8223 = sub i64 %8222, 196
  %8224 = load i32, i32* %EAX.i228
  %8225 = zext i32 %8224 to i64
  %8226 = load i64, i64* %PC.i227
  %8227 = add i64 %8226, 6
  store i64 %8227, i64* %PC.i227
  %8228 = inttoptr i64 %8223 to i32*
  store i32 %8224, i32* %8228
  store %struct.Memory* %loadMem_41383b, %struct.Memory** %MEMORY
  br label %block_.L_413841

block_.L_413841:                                  ; preds = %block_.L_413835, %block_4137ce
  %loadMem_413841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8230 = getelementptr inbounds %struct.GPR, %struct.GPR* %8229, i32 0, i32 33
  %8231 = getelementptr inbounds %struct.Reg, %struct.Reg* %8230, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %8231 to i64*
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 1
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %RAX.i225 = bitcast %union.anon* %8234 to i64*
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8236 = getelementptr inbounds %struct.GPR, %struct.GPR* %8235, i32 0, i32 15
  %8237 = getelementptr inbounds %struct.Reg, %struct.Reg* %8236, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %8237 to i64*
  %8238 = load i64, i64* %RBP.i226
  %8239 = sub i64 %8238, 196
  %8240 = load i64, i64* %PC.i224
  %8241 = add i64 %8240, 6
  store i64 %8241, i64* %PC.i224
  %8242 = inttoptr i64 %8239 to i32*
  %8243 = load i32, i32* %8242
  %8244 = zext i32 %8243 to i64
  store i64 %8244, i64* %RAX.i225, align 8
  store %struct.Memory* %loadMem_413841, %struct.Memory** %MEMORY
  %loadMem_413847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 33
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %8247 to i64*
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8249 = getelementptr inbounds %struct.GPR, %struct.GPR* %8248, i32 0, i32 1
  %8250 = getelementptr inbounds %struct.Reg, %struct.Reg* %8249, i32 0, i32 0
  %EAX.i222 = bitcast %union.anon* %8250 to i32*
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8252 = getelementptr inbounds %struct.GPR, %struct.GPR* %8251, i32 0, i32 15
  %8253 = getelementptr inbounds %struct.Reg, %struct.Reg* %8252, i32 0, i32 0
  %RBP.i223 = bitcast %union.anon* %8253 to i64*
  %8254 = load i64, i64* %RBP.i223
  %8255 = sub i64 %8254, 192
  %8256 = load i32, i32* %EAX.i222
  %8257 = zext i32 %8256 to i64
  %8258 = load i64, i64* %PC.i221
  %8259 = add i64 %8258, 6
  store i64 %8259, i64* %PC.i221
  %8260 = inttoptr i64 %8255 to i32*
  store i32 %8256, i32* %8260
  store %struct.Memory* %loadMem_413847, %struct.Memory** %MEMORY
  br label %block_.L_41384d

block_.L_41384d:                                  ; preds = %block_.L_413841, %block_4137b7
  %loadMem_41384d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8262 = getelementptr inbounds %struct.GPR, %struct.GPR* %8261, i32 0, i32 33
  %8263 = getelementptr inbounds %struct.Reg, %struct.Reg* %8262, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %8263 to i64*
  %8264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8265 = getelementptr inbounds %struct.GPR, %struct.GPR* %8264, i32 0, i32 1
  %8266 = getelementptr inbounds %struct.Reg, %struct.Reg* %8265, i32 0, i32 0
  %RAX.i219 = bitcast %union.anon* %8266 to i64*
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8268 = getelementptr inbounds %struct.GPR, %struct.GPR* %8267, i32 0, i32 15
  %8269 = getelementptr inbounds %struct.Reg, %struct.Reg* %8268, i32 0, i32 0
  %RBP.i220 = bitcast %union.anon* %8269 to i64*
  %8270 = load i64, i64* %RBP.i220
  %8271 = sub i64 %8270, 192
  %8272 = load i64, i64* %PC.i218
  %8273 = add i64 %8272, 6
  store i64 %8273, i64* %PC.i218
  %8274 = inttoptr i64 %8271 to i32*
  %8275 = load i32, i32* %8274
  %8276 = zext i32 %8275 to i64
  store i64 %8276, i64* %RAX.i219, align 8
  store %struct.Memory* %loadMem_41384d, %struct.Memory** %MEMORY
  %loadMem_413853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8278 = getelementptr inbounds %struct.GPR, %struct.GPR* %8277, i32 0, i32 33
  %8279 = getelementptr inbounds %struct.Reg, %struct.Reg* %8278, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %8279 to i64*
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8281 = getelementptr inbounds %struct.GPR, %struct.GPR* %8280, i32 0, i32 1
  %8282 = getelementptr inbounds %struct.Reg, %struct.Reg* %8281, i32 0, i32 0
  %EAX.i216 = bitcast %union.anon* %8282 to i32*
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8284 = getelementptr inbounds %struct.GPR, %struct.GPR* %8283, i32 0, i32 15
  %8285 = getelementptr inbounds %struct.Reg, %struct.Reg* %8284, i32 0, i32 0
  %RBP.i217 = bitcast %union.anon* %8285 to i64*
  %8286 = load i64, i64* %RBP.i217
  %8287 = sub i64 %8286, 64
  %8288 = load i32, i32* %EAX.i216
  %8289 = zext i32 %8288 to i64
  %8290 = load i64, i64* %PC.i215
  %8291 = add i64 %8290, 3
  store i64 %8291, i64* %PC.i215
  %8292 = inttoptr i64 %8287 to i32*
  store i32 %8288, i32* %8292
  store %struct.Memory* %loadMem_413853, %struct.Memory** %MEMORY
  %loadMem_413856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8294 = getelementptr inbounds %struct.GPR, %struct.GPR* %8293, i32 0, i32 33
  %8295 = getelementptr inbounds %struct.Reg, %struct.Reg* %8294, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %8295 to i64*
  %8296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8297 = getelementptr inbounds %struct.GPR, %struct.GPR* %8296, i32 0, i32 15
  %8298 = getelementptr inbounds %struct.Reg, %struct.Reg* %8297, i32 0, i32 0
  %RBP.i214 = bitcast %union.anon* %8298 to i64*
  %8299 = load i64, i64* %RBP.i214
  %8300 = sub i64 %8299, 20
  %8301 = load i64, i64* %PC.i213
  %8302 = add i64 %8301, 4
  store i64 %8302, i64* %PC.i213
  %8303 = inttoptr i64 %8300 to i32*
  %8304 = load i32, i32* %8303
  %8305 = sub i32 %8304, 2
  %8306 = icmp ult i32 %8304, 2
  %8307 = zext i1 %8306 to i8
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8307, i8* %8308, align 1
  %8309 = and i32 %8305, 255
  %8310 = call i32 @llvm.ctpop.i32(i32 %8309)
  %8311 = trunc i32 %8310 to i8
  %8312 = and i8 %8311, 1
  %8313 = xor i8 %8312, 1
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8313, i8* %8314, align 1
  %8315 = xor i32 %8304, 2
  %8316 = xor i32 %8315, %8305
  %8317 = lshr i32 %8316, 4
  %8318 = trunc i32 %8317 to i8
  %8319 = and i8 %8318, 1
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8319, i8* %8320, align 1
  %8321 = icmp eq i32 %8305, 0
  %8322 = zext i1 %8321 to i8
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8322, i8* %8323, align 1
  %8324 = lshr i32 %8305, 31
  %8325 = trunc i32 %8324 to i8
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8325, i8* %8326, align 1
  %8327 = lshr i32 %8304, 31
  %8328 = xor i32 %8324, %8327
  %8329 = add i32 %8328, %8327
  %8330 = icmp eq i32 %8329, 2
  %8331 = zext i1 %8330 to i8
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8331, i8* %8332, align 1
  store %struct.Memory* %loadMem_413856, %struct.Memory** %MEMORY
  %loadMem_41385a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8334 = getelementptr inbounds %struct.GPR, %struct.GPR* %8333, i32 0, i32 33
  %8335 = getelementptr inbounds %struct.Reg, %struct.Reg* %8334, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %8335 to i64*
  %8336 = load i64, i64* %PC.i212
  %8337 = add i64 %8336, 411
  %8338 = load i64, i64* %PC.i212
  %8339 = add i64 %8338, 6
  %8340 = load i64, i64* %PC.i212
  %8341 = add i64 %8340, 6
  store i64 %8341, i64* %PC.i212
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8343 = load i8, i8* %8342, align 1
  store i8 %8343, i8* %BRANCH_TAKEN, align 1
  %8344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8345 = icmp ne i8 %8343, 0
  %8346 = select i1 %8345, i64 %8337, i64 %8339
  store i64 %8346, i64* %8344, align 8
  store %struct.Memory* %loadMem_41385a, %struct.Memory** %MEMORY
  %loadBr_41385a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41385a = icmp eq i8 %loadBr_41385a, 1
  br i1 %cmpBr_41385a, label %block_.L_4139f5, label %block_413860

block_413860:                                     ; preds = %block_.L_41384d
  %loadMem_413860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8348 = getelementptr inbounds %struct.GPR, %struct.GPR* %8347, i32 0, i32 33
  %8349 = getelementptr inbounds %struct.Reg, %struct.Reg* %8348, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %8349 to i64*
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8351 = getelementptr inbounds %struct.GPR, %struct.GPR* %8350, i32 0, i32 15
  %8352 = getelementptr inbounds %struct.Reg, %struct.Reg* %8351, i32 0, i32 0
  %RBP.i211 = bitcast %union.anon* %8352 to i64*
  %8353 = load i64, i64* %RBP.i211
  %8354 = sub i64 %8353, 136
  %8355 = load i64, i64* %PC.i210
  %8356 = add i64 %8355, 7
  store i64 %8356, i64* %PC.i210
  %8357 = inttoptr i64 %8354 to i32*
  %8358 = load i32, i32* %8357
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8359, align 1
  %8360 = and i32 %8358, 255
  %8361 = call i32 @llvm.ctpop.i32(i32 %8360)
  %8362 = trunc i32 %8361 to i8
  %8363 = and i8 %8362, 1
  %8364 = xor i8 %8363, 1
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8364, i8* %8365, align 1
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8366, align 1
  %8367 = icmp eq i32 %8358, 0
  %8368 = zext i1 %8367 to i8
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8368, i8* %8369, align 1
  %8370 = lshr i32 %8358, 31
  %8371 = trunc i32 %8370 to i8
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8371, i8* %8372, align 1
  %8373 = lshr i32 %8358, 31
  %8374 = xor i32 %8370, %8373
  %8375 = add i32 %8374, %8373
  %8376 = icmp eq i32 %8375, 2
  %8377 = zext i1 %8376 to i8
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8377, i8* %8378, align 1
  store %struct.Memory* %loadMem_413860, %struct.Memory** %MEMORY
  %loadMem_413867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 33
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %8381 to i64*
  %8382 = load i64, i64* %PC.i209
  %8383 = add i64 %8382, 157
  %8384 = load i64, i64* %PC.i209
  %8385 = add i64 %8384, 6
  %8386 = load i64, i64* %PC.i209
  %8387 = add i64 %8386, 6
  store i64 %8387, i64* %PC.i209
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8389 = load i8, i8* %8388, align 1
  store i8 %8389, i8* %BRANCH_TAKEN, align 1
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8391 = icmp ne i8 %8389, 0
  %8392 = select i1 %8391, i64 %8383, i64 %8385
  store i64 %8392, i64* %8390, align 8
  store %struct.Memory* %loadMem_413867, %struct.Memory** %MEMORY
  %loadBr_413867 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413867 = icmp eq i8 %loadBr_413867, 1
  br i1 %cmpBr_413867, label %block_.L_413904, label %block_41386d

block_41386d:                                     ; preds = %block_413860
  %loadMem_41386d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8394 = getelementptr inbounds %struct.GPR, %struct.GPR* %8393, i32 0, i32 33
  %8395 = getelementptr inbounds %struct.Reg, %struct.Reg* %8394, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %8395 to i64*
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8397 = getelementptr inbounds %struct.GPR, %struct.GPR* %8396, i32 0, i32 1
  %8398 = getelementptr inbounds %struct.Reg, %struct.Reg* %8397, i32 0, i32 0
  %RAX.i208 = bitcast %union.anon* %8398 to i64*
  %8399 = load i64, i64* %PC.i207
  %8400 = add i64 %8399, 8
  store i64 %8400, i64* %PC.i207
  %8401 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8401, i64* %RAX.i208, align 8
  store %struct.Memory* %loadMem_41386d, %struct.Memory** %MEMORY
  %loadMem_413875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 33
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %8404 to i64*
  %8405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8406 = getelementptr inbounds %struct.GPR, %struct.GPR* %8405, i32 0, i32 1
  %8407 = getelementptr inbounds %struct.Reg, %struct.Reg* %8406, i32 0, i32 0
  %RAX.i206 = bitcast %union.anon* %8407 to i64*
  %8408 = load i64, i64* %RAX.i206
  %8409 = add i64 %8408, 14168
  %8410 = load i64, i64* %PC.i205
  %8411 = add i64 %8410, 7
  store i64 %8411, i64* %PC.i205
  %8412 = inttoptr i64 %8409 to i64*
  %8413 = load i64, i64* %8412
  store i64 %8413, i64* %RAX.i206, align 8
  store %struct.Memory* %loadMem_413875, %struct.Memory** %MEMORY
  %loadMem_41387c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8415 = getelementptr inbounds %struct.GPR, %struct.GPR* %8414, i32 0, i32 33
  %8416 = getelementptr inbounds %struct.Reg, %struct.Reg* %8415, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %8416 to i64*
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8418 = getelementptr inbounds %struct.GPR, %struct.GPR* %8417, i32 0, i32 5
  %8419 = getelementptr inbounds %struct.Reg, %struct.Reg* %8418, i32 0, i32 0
  %RCX.i203 = bitcast %union.anon* %8419 to i64*
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8421 = getelementptr inbounds %struct.GPR, %struct.GPR* %8420, i32 0, i32 15
  %8422 = getelementptr inbounds %struct.Reg, %struct.Reg* %8421, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %8422 to i64*
  %8423 = load i64, i64* %RBP.i204
  %8424 = sub i64 %8423, 132
  %8425 = load i64, i64* %PC.i202
  %8426 = add i64 %8425, 7
  store i64 %8426, i64* %PC.i202
  %8427 = inttoptr i64 %8424 to i32*
  %8428 = load i32, i32* %8427
  %8429 = sext i32 %8428 to i64
  store i64 %8429, i64* %RCX.i203, align 8
  store %struct.Memory* %loadMem_41387c, %struct.Memory** %MEMORY
  %loadMem_413883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 33
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %8432 to i64*
  %8433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8434 = getelementptr inbounds %struct.GPR, %struct.GPR* %8433, i32 0, i32 5
  %8435 = getelementptr inbounds %struct.Reg, %struct.Reg* %8434, i32 0, i32 0
  %RCX.i201 = bitcast %union.anon* %8435 to i64*
  %8436 = load i64, i64* %RCX.i201
  %8437 = load i64, i64* %PC.i200
  %8438 = add i64 %8437, 7
  store i64 %8438, i64* %PC.i200
  %8439 = sext i64 %8436 to i128
  %8440 = and i128 %8439, -18446744073709551616
  %8441 = zext i64 %8436 to i128
  %8442 = or i128 %8440, %8441
  %8443 = mul i128 632, %8442
  %8444 = trunc i128 %8443 to i64
  store i64 %8444, i64* %RCX.i201, align 8
  %8445 = sext i64 %8444 to i128
  %8446 = icmp ne i128 %8445, %8443
  %8447 = zext i1 %8446 to i8
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8447, i8* %8448, align 1
  %8449 = trunc i128 %8443 to i32
  %8450 = and i32 %8449, 255
  %8451 = call i32 @llvm.ctpop.i32(i32 %8450)
  %8452 = trunc i32 %8451 to i8
  %8453 = and i8 %8452, 1
  %8454 = xor i8 %8453, 1
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8454, i8* %8455, align 1
  %8456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8456, align 1
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8457, align 1
  %8458 = lshr i64 %8444, 63
  %8459 = trunc i64 %8458 to i8
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8459, i8* %8460, align 1
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8447, i8* %8461, align 1
  store %struct.Memory* %loadMem_413883, %struct.Memory** %MEMORY
  %loadMem_41388a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8463 = getelementptr inbounds %struct.GPR, %struct.GPR* %8462, i32 0, i32 33
  %8464 = getelementptr inbounds %struct.Reg, %struct.Reg* %8463, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %8464 to i64*
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8466 = getelementptr inbounds %struct.GPR, %struct.GPR* %8465, i32 0, i32 1
  %8467 = getelementptr inbounds %struct.Reg, %struct.Reg* %8466, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %8467 to i64*
  %8468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8469 = getelementptr inbounds %struct.GPR, %struct.GPR* %8468, i32 0, i32 5
  %8470 = getelementptr inbounds %struct.Reg, %struct.Reg* %8469, i32 0, i32 0
  %RCX.i199 = bitcast %union.anon* %8470 to i64*
  %8471 = load i64, i64* %RAX.i198
  %8472 = load i64, i64* %RCX.i199
  %8473 = load i64, i64* %PC.i197
  %8474 = add i64 %8473, 3
  store i64 %8474, i64* %PC.i197
  %8475 = add i64 %8472, %8471
  store i64 %8475, i64* %RAX.i198, align 8
  %8476 = icmp ult i64 %8475, %8471
  %8477 = icmp ult i64 %8475, %8472
  %8478 = or i1 %8476, %8477
  %8479 = zext i1 %8478 to i8
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8479, i8* %8480, align 1
  %8481 = trunc i64 %8475 to i32
  %8482 = and i32 %8481, 255
  %8483 = call i32 @llvm.ctpop.i32(i32 %8482)
  %8484 = trunc i32 %8483 to i8
  %8485 = and i8 %8484, 1
  %8486 = xor i8 %8485, 1
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8486, i8* %8487, align 1
  %8488 = xor i64 %8472, %8471
  %8489 = xor i64 %8488, %8475
  %8490 = lshr i64 %8489, 4
  %8491 = trunc i64 %8490 to i8
  %8492 = and i8 %8491, 1
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8492, i8* %8493, align 1
  %8494 = icmp eq i64 %8475, 0
  %8495 = zext i1 %8494 to i8
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8495, i8* %8496, align 1
  %8497 = lshr i64 %8475, 63
  %8498 = trunc i64 %8497 to i8
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8498, i8* %8499, align 1
  %8500 = lshr i64 %8471, 63
  %8501 = lshr i64 %8472, 63
  %8502 = xor i64 %8497, %8500
  %8503 = xor i64 %8497, %8501
  %8504 = add i64 %8502, %8503
  %8505 = icmp eq i64 %8504, 2
  %8506 = zext i1 %8505 to i8
  %8507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8506, i8* %8507, align 1
  store %struct.Memory* %loadMem_41388a, %struct.Memory** %MEMORY
  %loadMem_41388d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8509 = getelementptr inbounds %struct.GPR, %struct.GPR* %8508, i32 0, i32 33
  %8510 = getelementptr inbounds %struct.Reg, %struct.Reg* %8509, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %8510 to i64*
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8512 = getelementptr inbounds %struct.GPR, %struct.GPR* %8511, i32 0, i32 1
  %8513 = getelementptr inbounds %struct.Reg, %struct.Reg* %8512, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %8513 to i64*
  %8514 = load i64, i64* %RAX.i196
  %8515 = add i64 %8514, 72
  %8516 = load i64, i64* %PC.i195
  %8517 = add i64 %8516, 4
  store i64 %8517, i64* %PC.i195
  %8518 = inttoptr i64 %8515 to i32*
  %8519 = load i32, i32* %8518
  %8520 = sub i32 %8519, 14
  %8521 = icmp ult i32 %8519, 14
  %8522 = zext i1 %8521 to i8
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8522, i8* %8523, align 1
  %8524 = and i32 %8520, 255
  %8525 = call i32 @llvm.ctpop.i32(i32 %8524)
  %8526 = trunc i32 %8525 to i8
  %8527 = and i8 %8526, 1
  %8528 = xor i8 %8527, 1
  %8529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8528, i8* %8529, align 1
  %8530 = xor i32 %8519, 14
  %8531 = xor i32 %8530, %8520
  %8532 = lshr i32 %8531, 4
  %8533 = trunc i32 %8532 to i8
  %8534 = and i8 %8533, 1
  %8535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8534, i8* %8535, align 1
  %8536 = icmp eq i32 %8520, 0
  %8537 = zext i1 %8536 to i8
  %8538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8537, i8* %8538, align 1
  %8539 = lshr i32 %8520, 31
  %8540 = trunc i32 %8539 to i8
  %8541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8540, i8* %8541, align 1
  %8542 = lshr i32 %8519, 31
  %8543 = xor i32 %8539, %8542
  %8544 = add i32 %8543, %8542
  %8545 = icmp eq i32 %8544, 2
  %8546 = zext i1 %8545 to i8
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8546, i8* %8547, align 1
  store %struct.Memory* %loadMem_41388d, %struct.Memory** %MEMORY
  %loadMem_413891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8549 = getelementptr inbounds %struct.GPR, %struct.GPR* %8548, i32 0, i32 33
  %8550 = getelementptr inbounds %struct.Reg, %struct.Reg* %8549, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %8550 to i64*
  %8551 = load i64, i64* %PC.i194
  %8552 = add i64 %8551, 18
  %8553 = load i64, i64* %PC.i194
  %8554 = add i64 %8553, 6
  %8555 = load i64, i64* %PC.i194
  %8556 = add i64 %8555, 6
  store i64 %8556, i64* %PC.i194
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8558 = load i8, i8* %8557, align 1
  %8559 = icmp eq i8 %8558, 0
  %8560 = zext i1 %8559 to i8
  store i8 %8560, i8* %BRANCH_TAKEN, align 1
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8562 = select i1 %8559, i64 %8552, i64 %8554
  store i64 %8562, i64* %8561, align 8
  store %struct.Memory* %loadMem_413891, %struct.Memory** %MEMORY
  %loadBr_413891 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413891 = icmp eq i8 %loadBr_413891, 1
  br i1 %cmpBr_413891, label %block_.L_4138a3, label %block_413897

block_413897:                                     ; preds = %block_41386d
  %loadMem_413897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8564 = getelementptr inbounds %struct.GPR, %struct.GPR* %8563, i32 0, i32 33
  %8565 = getelementptr inbounds %struct.Reg, %struct.Reg* %8564, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %8565 to i64*
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 15
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %RBP.i193 = bitcast %union.anon* %8568 to i64*
  %8569 = load i64, i64* %RBP.i193
  %8570 = sub i64 %8569, 72
  %8571 = load i64, i64* %PC.i192
  %8572 = add i64 %8571, 7
  store i64 %8572, i64* %PC.i192
  %8573 = inttoptr i64 %8570 to i32*
  store i32 1, i32* %8573
  store %struct.Memory* %loadMem_413897, %struct.Memory** %MEMORY
  %loadMem_41389e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8575 = getelementptr inbounds %struct.GPR, %struct.GPR* %8574, i32 0, i32 33
  %8576 = getelementptr inbounds %struct.Reg, %struct.Reg* %8575, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %8576 to i64*
  %8577 = load i64, i64* %PC.i191
  %8578 = add i64 %8577, 97
  %8579 = load i64, i64* %PC.i191
  %8580 = add i64 %8579, 5
  store i64 %8580, i64* %PC.i191
  %8581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8578, i64* %8581, align 8
  store %struct.Memory* %loadMem_41389e, %struct.Memory** %MEMORY
  br label %block_.L_4138ff

block_.L_4138a3:                                  ; preds = %block_41386d
  %loadMem_4138a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8583 = getelementptr inbounds %struct.GPR, %struct.GPR* %8582, i32 0, i32 33
  %8584 = getelementptr inbounds %struct.Reg, %struct.Reg* %8583, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %8584 to i64*
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8586 = getelementptr inbounds %struct.GPR, %struct.GPR* %8585, i32 0, i32 1
  %8587 = getelementptr inbounds %struct.Reg, %struct.Reg* %8586, i32 0, i32 0
  %RAX.i190 = bitcast %union.anon* %8587 to i64*
  %8588 = load i64, i64* %PC.i189
  %8589 = add i64 %8588, 5
  store i64 %8589, i64* %PC.i189
  store i64 1, i64* %RAX.i190, align 8
  store %struct.Memory* %loadMem_4138a3, %struct.Memory** %MEMORY
  %loadMem_4138a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8591 = getelementptr inbounds %struct.GPR, %struct.GPR* %8590, i32 0, i32 33
  %8592 = getelementptr inbounds %struct.Reg, %struct.Reg* %8591, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %8592 to i64*
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8594 = getelementptr inbounds %struct.GPR, %struct.GPR* %8593, i32 0, i32 5
  %8595 = getelementptr inbounds %struct.Reg, %struct.Reg* %8594, i32 0, i32 0
  %RCX.i188 = bitcast %union.anon* %8595 to i64*
  %8596 = load i64, i64* %PC.i187
  %8597 = add i64 %8596, 8
  store i64 %8597, i64* %PC.i187
  %8598 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8598, i64* %RCX.i188, align 8
  store %struct.Memory* %loadMem_4138a8, %struct.Memory** %MEMORY
  %loadMem_4138b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8600 = getelementptr inbounds %struct.GPR, %struct.GPR* %8599, i32 0, i32 33
  %8601 = getelementptr inbounds %struct.Reg, %struct.Reg* %8600, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %8601 to i64*
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8603 = getelementptr inbounds %struct.GPR, %struct.GPR* %8602, i32 0, i32 5
  %8604 = getelementptr inbounds %struct.Reg, %struct.Reg* %8603, i32 0, i32 0
  %RCX.i186 = bitcast %union.anon* %8604 to i64*
  %8605 = load i64, i64* %RCX.i186
  %8606 = add i64 %8605, 14168
  %8607 = load i64, i64* %PC.i185
  %8608 = add i64 %8607, 7
  store i64 %8608, i64* %PC.i185
  %8609 = inttoptr i64 %8606 to i64*
  %8610 = load i64, i64* %8609
  store i64 %8610, i64* %RCX.i186, align 8
  store %struct.Memory* %loadMem_4138b0, %struct.Memory** %MEMORY
  %loadMem_4138b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 33
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 7
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RDX.i183 = bitcast %union.anon* %8616 to i64*
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8618 = getelementptr inbounds %struct.GPR, %struct.GPR* %8617, i32 0, i32 15
  %8619 = getelementptr inbounds %struct.Reg, %struct.Reg* %8618, i32 0, i32 0
  %RBP.i184 = bitcast %union.anon* %8619 to i64*
  %8620 = load i64, i64* %RBP.i184
  %8621 = sub i64 %8620, 132
  %8622 = load i64, i64* %PC.i182
  %8623 = add i64 %8622, 7
  store i64 %8623, i64* %PC.i182
  %8624 = inttoptr i64 %8621 to i32*
  %8625 = load i32, i32* %8624
  %8626 = sext i32 %8625 to i64
  store i64 %8626, i64* %RDX.i183, align 8
  store %struct.Memory* %loadMem_4138b7, %struct.Memory** %MEMORY
  %loadMem_4138be = load %struct.Memory*, %struct.Memory** %MEMORY
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8628 = getelementptr inbounds %struct.GPR, %struct.GPR* %8627, i32 0, i32 33
  %8629 = getelementptr inbounds %struct.Reg, %struct.Reg* %8628, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %8629 to i64*
  %8630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8631 = getelementptr inbounds %struct.GPR, %struct.GPR* %8630, i32 0, i32 7
  %8632 = getelementptr inbounds %struct.Reg, %struct.Reg* %8631, i32 0, i32 0
  %RDX.i181 = bitcast %union.anon* %8632 to i64*
  %8633 = load i64, i64* %RDX.i181
  %8634 = load i64, i64* %PC.i180
  %8635 = add i64 %8634, 7
  store i64 %8635, i64* %PC.i180
  %8636 = sext i64 %8633 to i128
  %8637 = and i128 %8636, -18446744073709551616
  %8638 = zext i64 %8633 to i128
  %8639 = or i128 %8637, %8638
  %8640 = mul i128 632, %8639
  %8641 = trunc i128 %8640 to i64
  store i64 %8641, i64* %RDX.i181, align 8
  %8642 = sext i64 %8641 to i128
  %8643 = icmp ne i128 %8642, %8640
  %8644 = zext i1 %8643 to i8
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8644, i8* %8645, align 1
  %8646 = trunc i128 %8640 to i32
  %8647 = and i32 %8646, 255
  %8648 = call i32 @llvm.ctpop.i32(i32 %8647)
  %8649 = trunc i32 %8648 to i8
  %8650 = and i8 %8649, 1
  %8651 = xor i8 %8650, 1
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8651, i8* %8652, align 1
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8653, align 1
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8654, align 1
  %8655 = lshr i64 %8641, 63
  %8656 = trunc i64 %8655 to i8
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8656, i8* %8657, align 1
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8644, i8* %8658, align 1
  store %struct.Memory* %loadMem_4138be, %struct.Memory** %MEMORY
  %loadMem_4138c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 33
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8661 to i64*
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8663 = getelementptr inbounds %struct.GPR, %struct.GPR* %8662, i32 0, i32 5
  %8664 = getelementptr inbounds %struct.Reg, %struct.Reg* %8663, i32 0, i32 0
  %RCX.i178 = bitcast %union.anon* %8664 to i64*
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8666 = getelementptr inbounds %struct.GPR, %struct.GPR* %8665, i32 0, i32 7
  %8667 = getelementptr inbounds %struct.Reg, %struct.Reg* %8666, i32 0, i32 0
  %RDX.i179 = bitcast %union.anon* %8667 to i64*
  %8668 = load i64, i64* %RCX.i178
  %8669 = load i64, i64* %RDX.i179
  %8670 = load i64, i64* %PC.i177
  %8671 = add i64 %8670, 3
  store i64 %8671, i64* %PC.i177
  %8672 = add i64 %8669, %8668
  store i64 %8672, i64* %RCX.i178, align 8
  %8673 = icmp ult i64 %8672, %8668
  %8674 = icmp ult i64 %8672, %8669
  %8675 = or i1 %8673, %8674
  %8676 = zext i1 %8675 to i8
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8676, i8* %8677, align 1
  %8678 = trunc i64 %8672 to i32
  %8679 = and i32 %8678, 255
  %8680 = call i32 @llvm.ctpop.i32(i32 %8679)
  %8681 = trunc i32 %8680 to i8
  %8682 = and i8 %8681, 1
  %8683 = xor i8 %8682, 1
  %8684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8683, i8* %8684, align 1
  %8685 = xor i64 %8669, %8668
  %8686 = xor i64 %8685, %8672
  %8687 = lshr i64 %8686, 4
  %8688 = trunc i64 %8687 to i8
  %8689 = and i8 %8688, 1
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8689, i8* %8690, align 1
  %8691 = icmp eq i64 %8672, 0
  %8692 = zext i1 %8691 to i8
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8692, i8* %8693, align 1
  %8694 = lshr i64 %8672, 63
  %8695 = trunc i64 %8694 to i8
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8695, i8* %8696, align 1
  %8697 = lshr i64 %8668, 63
  %8698 = lshr i64 %8669, 63
  %8699 = xor i64 %8694, %8697
  %8700 = xor i64 %8694, %8698
  %8701 = add i64 %8699, %8700
  %8702 = icmp eq i64 %8701, 2
  %8703 = zext i1 %8702 to i8
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8703, i8* %8704, align 1
  store %struct.Memory* %loadMem_4138c5, %struct.Memory** %MEMORY
  %loadMem_4138c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8706 = getelementptr inbounds %struct.GPR, %struct.GPR* %8705, i32 0, i32 33
  %8707 = getelementptr inbounds %struct.Reg, %struct.Reg* %8706, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %8707 to i64*
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8709 = getelementptr inbounds %struct.GPR, %struct.GPR* %8708, i32 0, i32 5
  %8710 = getelementptr inbounds %struct.Reg, %struct.Reg* %8709, i32 0, i32 0
  %RCX.i176 = bitcast %union.anon* %8710 to i64*
  %8711 = load i64, i64* %RCX.i176
  %8712 = add i64 %8711, 504
  %8713 = load i64, i64* %PC.i175
  %8714 = add i64 %8713, 7
  store i64 %8714, i64* %PC.i175
  %8715 = inttoptr i64 %8712 to i64*
  %8716 = load i64, i64* %8715
  store i64 %8716, i64* %RCX.i176, align 8
  store %struct.Memory* %loadMem_4138c8, %struct.Memory** %MEMORY
  %loadMem_4138cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8718 = getelementptr inbounds %struct.GPR, %struct.GPR* %8717, i32 0, i32 33
  %8719 = getelementptr inbounds %struct.Reg, %struct.Reg* %8718, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %8719 to i64*
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8721 = getelementptr inbounds %struct.GPR, %struct.GPR* %8720, i32 0, i32 9
  %8722 = getelementptr inbounds %struct.Reg, %struct.Reg* %8721, i32 0, i32 0
  %RSI.i173 = bitcast %union.anon* %8722 to i64*
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 15
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %8725 to i64*
  %8726 = load i64, i64* %RBP.i174
  %8727 = sub i64 %8726, 64
  %8728 = load i64, i64* %PC.i172
  %8729 = add i64 %8728, 3
  store i64 %8729, i64* %PC.i172
  %8730 = inttoptr i64 %8727 to i32*
  %8731 = load i32, i32* %8730
  %8732 = zext i32 %8731 to i64
  store i64 %8732, i64* %RSI.i173, align 8
  store %struct.Memory* %loadMem_4138cf, %struct.Memory** %MEMORY
  %loadMem_4138d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8734 = getelementptr inbounds %struct.GPR, %struct.GPR* %8733, i32 0, i32 33
  %8735 = getelementptr inbounds %struct.Reg, %struct.Reg* %8734, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %8735 to i64*
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8737 = getelementptr inbounds %struct.GPR, %struct.GPR* %8736, i32 0, i32 9
  %8738 = getelementptr inbounds %struct.Reg, %struct.Reg* %8737, i32 0, i32 0
  %RSI.i170 = bitcast %union.anon* %8738 to i64*
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 15
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %8741 to i64*
  %8742 = load i64, i64* %RSI.i170
  %8743 = load i64, i64* %RBP.i171
  %8744 = sub i64 %8743, 88
  %8745 = load i64, i64* %PC.i169
  %8746 = add i64 %8745, 3
  store i64 %8746, i64* %PC.i169
  %8747 = trunc i64 %8742 to i32
  %8748 = inttoptr i64 %8744 to i32*
  %8749 = load i32, i32* %8748
  %8750 = add i32 %8749, %8747
  %8751 = zext i32 %8750 to i64
  store i64 %8751, i64* %RSI.i170, align 8
  %8752 = icmp ult i32 %8750, %8747
  %8753 = icmp ult i32 %8750, %8749
  %8754 = or i1 %8752, %8753
  %8755 = zext i1 %8754 to i8
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8755, i8* %8756, align 1
  %8757 = and i32 %8750, 255
  %8758 = call i32 @llvm.ctpop.i32(i32 %8757)
  %8759 = trunc i32 %8758 to i8
  %8760 = and i8 %8759, 1
  %8761 = xor i8 %8760, 1
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8761, i8* %8762, align 1
  %8763 = xor i32 %8749, %8747
  %8764 = xor i32 %8763, %8750
  %8765 = lshr i32 %8764, 4
  %8766 = trunc i32 %8765 to i8
  %8767 = and i8 %8766, 1
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8767, i8* %8768, align 1
  %8769 = icmp eq i32 %8750, 0
  %8770 = zext i1 %8769 to i8
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8770, i8* %8771, align 1
  %8772 = lshr i32 %8750, 31
  %8773 = trunc i32 %8772 to i8
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8773, i8* %8774, align 1
  %8775 = lshr i32 %8747, 31
  %8776 = lshr i32 %8749, 31
  %8777 = xor i32 %8772, %8775
  %8778 = xor i32 %8772, %8776
  %8779 = add i32 %8777, %8778
  %8780 = icmp eq i32 %8779, 2
  %8781 = zext i1 %8780 to i8
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8781, i8* %8782, align 1
  store %struct.Memory* %loadMem_4138d2, %struct.Memory** %MEMORY
  %loadMem_4138d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8784 = getelementptr inbounds %struct.GPR, %struct.GPR* %8783, i32 0, i32 33
  %8785 = getelementptr inbounds %struct.Reg, %struct.Reg* %8784, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %8785 to i64*
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8787 = getelementptr inbounds %struct.GPR, %struct.GPR* %8786, i32 0, i32 5
  %8788 = getelementptr inbounds %struct.Reg, %struct.Reg* %8787, i32 0, i32 0
  %RCX.i167 = bitcast %union.anon* %8788 to i64*
  %8789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8790 = getelementptr inbounds %struct.GPR, %struct.GPR* %8789, i32 0, i32 15
  %8791 = getelementptr inbounds %struct.Reg, %struct.Reg* %8790, i32 0, i32 0
  %RBP.i168 = bitcast %union.anon* %8791 to i64*
  %8792 = load i64, i64* %RBP.i168
  %8793 = sub i64 %8792, 216
  %8794 = load i64, i64* %RCX.i167
  %8795 = load i64, i64* %PC.i166
  %8796 = add i64 %8795, 7
  store i64 %8796, i64* %PC.i166
  %8797 = inttoptr i64 %8793 to i64*
  store i64 %8794, i64* %8797
  store %struct.Memory* %loadMem_4138d5, %struct.Memory** %MEMORY
  %loadMem_4138dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8799 = getelementptr inbounds %struct.GPR, %struct.GPR* %8798, i32 0, i32 33
  %8800 = getelementptr inbounds %struct.Reg, %struct.Reg* %8799, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %8800 to i64*
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8802 = getelementptr inbounds %struct.GPR, %struct.GPR* %8801, i32 0, i32 9
  %8803 = getelementptr inbounds %struct.Reg, %struct.Reg* %8802, i32 0, i32 0
  %ESI.i164 = bitcast %union.anon* %8803 to i32*
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8805 = getelementptr inbounds %struct.GPR, %struct.GPR* %8804, i32 0, i32 5
  %8806 = getelementptr inbounds %struct.Reg, %struct.Reg* %8805, i32 0, i32 0
  %RCX.i165 = bitcast %union.anon* %8806 to i64*
  %8807 = load i32, i32* %ESI.i164
  %8808 = zext i32 %8807 to i64
  %8809 = load i64, i64* %PC.i163
  %8810 = add i64 %8809, 2
  store i64 %8810, i64* %PC.i163
  %8811 = and i64 %8808, 4294967295
  store i64 %8811, i64* %RCX.i165, align 8
  store %struct.Memory* %loadMem_4138dc, %struct.Memory** %MEMORY
  %loadMem_4138de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8813 = getelementptr inbounds %struct.GPR, %struct.GPR* %8812, i32 0, i32 33
  %8814 = getelementptr inbounds %struct.Reg, %struct.Reg* %8813, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %8814 to i64*
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8816 = getelementptr inbounds %struct.GPR, %struct.GPR* %8815, i32 0, i32 5
  %8817 = getelementptr inbounds %struct.Reg, %struct.Reg* %8816, i32 0, i32 0
  %8818 = bitcast %union.anon* %8817 to %struct.anon.2*
  %CL.i160 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8818, i32 0, i32 0
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8820 = getelementptr inbounds %struct.GPR, %struct.GPR* %8819, i32 0, i32 1
  %8821 = getelementptr inbounds %struct.Reg, %struct.Reg* %8820, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %8821 to i64*
  %8822 = load i64, i64* %RAX.i161
  %8823 = load i8, i8* %CL.i160
  %8824 = zext i8 %8823 to i64
  %8825 = load i64, i64* %PC.i159
  %8826 = add i64 %8825, 2
  store i64 %8826, i64* %PC.i159
  %8827 = trunc i64 %8824 to i5
  switch i5 %8827, label %8834 [
    i5 0, label %routine_shll__cl___eax.exit162
    i5 1, label %8828
  ]

; <label>:8828:                                   ; preds = %block_.L_4138a3
  %8829 = trunc i64 %8822 to i32
  %8830 = shl i32 %8829, 1
  %8831 = icmp slt i32 %8829, 0
  %8832 = icmp slt i32 %8830, 0
  %8833 = xor i1 %8831, %8832
  br label %8843

; <label>:8834:                                   ; preds = %block_.L_4138a3
  %8835 = and i64 %8824, 31
  %8836 = add i64 %8835, 4294967295
  %8837 = and i64 %8822, 4294967295
  %8838 = and i64 %8836, 4294967295
  %8839 = shl i64 %8837, %8838
  %8840 = trunc i64 %8839 to i32
  %8841 = icmp slt i32 %8840, 0
  %8842 = shl i32 %8840, 1
  br label %8843

; <label>:8843:                                   ; preds = %8834, %8828
  %8844 = phi i1 [ %8831, %8828 ], [ %8841, %8834 ]
  %8845 = phi i1 [ %8833, %8828 ], [ false, %8834 ]
  %8846 = phi i32 [ %8830, %8828 ], [ %8842, %8834 ]
  %8847 = zext i32 %8846 to i64
  store i64 %8847, i64* %RAX.i161, align 8
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8849 = zext i1 %8844 to i8
  store i8 %8849, i8* %8848, align 1
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8851 = and i32 %8846, 254
  %8852 = call i32 @llvm.ctpop.i32(i32 %8851)
  %8853 = trunc i32 %8852 to i8
  %8854 = and i8 %8853, 1
  %8855 = xor i8 %8854, 1
  store i8 %8855, i8* %8850, align 1
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8856, align 1
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8858 = icmp eq i32 %8846, 0
  %8859 = zext i1 %8858 to i8
  store i8 %8859, i8* %8857, align 1
  %8860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8861 = lshr i32 %8846, 31
  %8862 = trunc i32 %8861 to i8
  store i8 %8862, i8* %8860, align 1
  %8863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8864 = zext i1 %8845 to i8
  store i8 %8864, i8* %8863, align 1
  br label %routine_shll__cl___eax.exit162

routine_shll__cl___eax.exit162:                   ; preds = %block_.L_4138a3, %8843
  store %struct.Memory* %loadMem_4138de, %struct.Memory** %MEMORY
  %loadMem_4138e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8866 = getelementptr inbounds %struct.GPR, %struct.GPR* %8865, i32 0, i32 33
  %8867 = getelementptr inbounds %struct.Reg, %struct.Reg* %8866, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %8867 to i64*
  %8868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8869 = getelementptr inbounds %struct.GPR, %struct.GPR* %8868, i32 0, i32 1
  %8870 = getelementptr inbounds %struct.Reg, %struct.Reg* %8869, i32 0, i32 0
  %EAX.i157 = bitcast %union.anon* %8870 to i32*
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 7
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %RDX.i158 = bitcast %union.anon* %8873 to i64*
  %8874 = load i32, i32* %EAX.i157
  %8875 = zext i32 %8874 to i64
  %8876 = load i64, i64* %PC.i156
  %8877 = add i64 %8876, 3
  store i64 %8877, i64* %PC.i156
  %8878 = shl i64 %8875, 32
  %8879 = ashr exact i64 %8878, 32
  store i64 %8879, i64* %RDX.i158, align 8
  store %struct.Memory* %loadMem_4138e0, %struct.Memory** %MEMORY
  %loadMem_4138e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8881 = getelementptr inbounds %struct.GPR, %struct.GPR* %8880, i32 0, i32 33
  %8882 = getelementptr inbounds %struct.Reg, %struct.Reg* %8881, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %8882 to i64*
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8884 = getelementptr inbounds %struct.GPR, %struct.GPR* %8883, i32 0, i32 11
  %8885 = getelementptr inbounds %struct.Reg, %struct.Reg* %8884, i32 0, i32 0
  %RDI.i154 = bitcast %union.anon* %8885 to i64*
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 15
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %8888 to i64*
  %8889 = load i64, i64* %RBP.i155
  %8890 = sub i64 %8889, 216
  %8891 = load i64, i64* %PC.i153
  %8892 = add i64 %8891, 7
  store i64 %8892, i64* %PC.i153
  %8893 = inttoptr i64 %8890 to i64*
  %8894 = load i64, i64* %8893
  store i64 %8894, i64* %RDI.i154, align 8
  store %struct.Memory* %loadMem_4138e3, %struct.Memory** %MEMORY
  %loadMem_4138ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %8895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8896 = getelementptr inbounds %struct.GPR, %struct.GPR* %8895, i32 0, i32 33
  %8897 = getelementptr inbounds %struct.Reg, %struct.Reg* %8896, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %8897 to i64*
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8899 = getelementptr inbounds %struct.GPR, %struct.GPR* %8898, i32 0, i32 7
  %8900 = getelementptr inbounds %struct.Reg, %struct.Reg* %8899, i32 0, i32 0
  %RDX.i151 = bitcast %union.anon* %8900 to i64*
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8902 = getelementptr inbounds %struct.GPR, %struct.GPR* %8901, i32 0, i32 11
  %8903 = getelementptr inbounds %struct.Reg, %struct.Reg* %8902, i32 0, i32 0
  %RDI.i152 = bitcast %union.anon* %8903 to i64*
  %8904 = load i64, i64* %RDI.i152
  %8905 = load i64, i64* %RDX.i151
  %8906 = load i64, i64* %PC.i150
  %8907 = add i64 %8906, 3
  store i64 %8907, i64* %PC.i150
  %8908 = and i64 %8905, %8904
  store i64 %8908, i64* %RDI.i152, align 8
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8909, align 1
  %8910 = trunc i64 %8908 to i32
  %8911 = and i32 %8910, 255
  %8912 = call i32 @llvm.ctpop.i32(i32 %8911)
  %8913 = trunc i32 %8912 to i8
  %8914 = and i8 %8913, 1
  %8915 = xor i8 %8914, 1
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8915, i8* %8916, align 1
  %8917 = icmp eq i64 %8908, 0
  %8918 = zext i1 %8917 to i8
  %8919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8918, i8* %8919, align 1
  %8920 = lshr i64 %8908, 63
  %8921 = trunc i64 %8920 to i8
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8921, i8* %8922, align 1
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8923, align 1
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8924, align 1
  store %struct.Memory* %loadMem_4138ea, %struct.Memory** %MEMORY
  %loadMem_4138ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8926 = getelementptr inbounds %struct.GPR, %struct.GPR* %8925, i32 0, i32 33
  %8927 = getelementptr inbounds %struct.Reg, %struct.Reg* %8926, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %8927 to i64*
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8929 = getelementptr inbounds %struct.GPR, %struct.GPR* %8928, i32 0, i32 1
  %8930 = getelementptr inbounds %struct.Reg, %struct.Reg* %8929, i32 0, i32 0
  %RAX.i148 = bitcast %union.anon* %8930 to i64*
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8932 = getelementptr inbounds %struct.GPR, %struct.GPR* %8931, i32 0, i32 15
  %8933 = getelementptr inbounds %struct.Reg, %struct.Reg* %8932, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %8933 to i64*
  %8934 = load i64, i64* %RBP.i149
  %8935 = sub i64 %8934, 64
  %8936 = load i64, i64* %PC.i147
  %8937 = add i64 %8936, 3
  store i64 %8937, i64* %PC.i147
  %8938 = inttoptr i64 %8935 to i32*
  %8939 = load i32, i32* %8938
  %8940 = zext i32 %8939 to i64
  store i64 %8940, i64* %RAX.i148, align 8
  store %struct.Memory* %loadMem_4138ed, %struct.Memory** %MEMORY
  %loadMem_4138f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8942 = getelementptr inbounds %struct.GPR, %struct.GPR* %8941, i32 0, i32 33
  %8943 = getelementptr inbounds %struct.Reg, %struct.Reg* %8942, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %8943 to i64*
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8945 = getelementptr inbounds %struct.GPR, %struct.GPR* %8944, i32 0, i32 1
  %8946 = getelementptr inbounds %struct.Reg, %struct.Reg* %8945, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %8946 to i64*
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 15
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %RBP.i146 = bitcast %union.anon* %8949 to i64*
  %8950 = load i64, i64* %RAX.i145
  %8951 = load i64, i64* %RBP.i146
  %8952 = sub i64 %8951, 88
  %8953 = load i64, i64* %PC.i144
  %8954 = add i64 %8953, 3
  store i64 %8954, i64* %PC.i144
  %8955 = trunc i64 %8950 to i32
  %8956 = inttoptr i64 %8952 to i32*
  %8957 = load i32, i32* %8956
  %8958 = add i32 %8957, %8955
  %8959 = zext i32 %8958 to i64
  store i64 %8959, i64* %RAX.i145, align 8
  %8960 = icmp ult i32 %8958, %8955
  %8961 = icmp ult i32 %8958, %8957
  %8962 = or i1 %8960, %8961
  %8963 = zext i1 %8962 to i8
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8963, i8* %8964, align 1
  %8965 = and i32 %8958, 255
  %8966 = call i32 @llvm.ctpop.i32(i32 %8965)
  %8967 = trunc i32 %8966 to i8
  %8968 = and i8 %8967, 1
  %8969 = xor i8 %8968, 1
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8969, i8* %8970, align 1
  %8971 = xor i32 %8957, %8955
  %8972 = xor i32 %8971, %8958
  %8973 = lshr i32 %8972, 4
  %8974 = trunc i32 %8973 to i8
  %8975 = and i8 %8974, 1
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8975, i8* %8976, align 1
  %8977 = icmp eq i32 %8958, 0
  %8978 = zext i1 %8977 to i8
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8978, i8* %8979, align 1
  %8980 = lshr i32 %8958, 31
  %8981 = trunc i32 %8980 to i8
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8981, i8* %8982, align 1
  %8983 = lshr i32 %8955, 31
  %8984 = lshr i32 %8957, 31
  %8985 = xor i32 %8980, %8983
  %8986 = xor i32 %8980, %8984
  %8987 = add i32 %8985, %8986
  %8988 = icmp eq i32 %8987, 2
  %8989 = zext i1 %8988 to i8
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8989, i8* %8990, align 1
  store %struct.Memory* %loadMem_4138f0, %struct.Memory** %MEMORY
  %loadMem_4138f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8992 = getelementptr inbounds %struct.GPR, %struct.GPR* %8991, i32 0, i32 33
  %8993 = getelementptr inbounds %struct.Reg, %struct.Reg* %8992, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %8993 to i64*
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8995 = getelementptr inbounds %struct.GPR, %struct.GPR* %8994, i32 0, i32 1
  %8996 = getelementptr inbounds %struct.Reg, %struct.Reg* %8995, i32 0, i32 0
  %EAX.i142 = bitcast %union.anon* %8996 to i32*
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 1
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %8999 to i64*
  %9000 = load i32, i32* %EAX.i142
  %9001 = zext i32 %9000 to i64
  %9002 = load i64, i64* %PC.i141
  %9003 = add i64 %9002, 2
  store i64 %9003, i64* %PC.i141
  %9004 = and i64 %9001, 4294967295
  store i64 %9004, i64* %RAX.i143, align 8
  store %struct.Memory* %loadMem_4138f3, %struct.Memory** %MEMORY
  %loadMem_4138f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9006 = getelementptr inbounds %struct.GPR, %struct.GPR* %9005, i32 0, i32 33
  %9007 = getelementptr inbounds %struct.Reg, %struct.Reg* %9006, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %9007 to i64*
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 1
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %EAX.i139 = bitcast %union.anon* %9010 to i32*
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9012 = getelementptr inbounds %struct.GPR, %struct.GPR* %9011, i32 0, i32 5
  %9013 = getelementptr inbounds %struct.Reg, %struct.Reg* %9012, i32 0, i32 0
  %RCX.i140 = bitcast %union.anon* %9013 to i64*
  %9014 = load i32, i32* %EAX.i139
  %9015 = zext i32 %9014 to i64
  %9016 = load i64, i64* %PC.i138
  %9017 = add i64 %9016, 2
  store i64 %9017, i64* %PC.i138
  %9018 = and i64 %9015, 4294967295
  store i64 %9018, i64* %RCX.i140, align 8
  store %struct.Memory* %loadMem_4138f5, %struct.Memory** %MEMORY
  %loadMem_4138f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9020 = getelementptr inbounds %struct.GPR, %struct.GPR* %9019, i32 0, i32 33
  %9021 = getelementptr inbounds %struct.Reg, %struct.Reg* %9020, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %9021 to i64*
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9023 = getelementptr inbounds %struct.GPR, %struct.GPR* %9022, i32 0, i32 5
  %9024 = getelementptr inbounds %struct.Reg, %struct.Reg* %9023, i32 0, i32 0
  %9025 = bitcast %union.anon* %9024 to %struct.anon.2*
  %CL.i135 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9025, i32 0, i32 0
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 11
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %RDI.i136 = bitcast %union.anon* %9028 to i64*
  %9029 = load i64, i64* %RDI.i136
  %9030 = load i8, i8* %CL.i135
  %9031 = zext i8 %9030 to i64
  %9032 = load i64, i64* %PC.i134
  %9033 = add i64 %9032, 3
  store i64 %9033, i64* %PC.i134
  %9034 = trunc i64 %9031 to i6
  switch i6 %9034, label %9038 [
    i6 0, label %routine_shrq__cl___rdi.exit137
    i6 1, label %9035
  ]

; <label>:9035:                                   ; preds = %routine_shll__cl___eax.exit162
  %9036 = lshr i64 %9029, 63
  %9037 = trunc i64 %9036 to i8
  br label %9042

; <label>:9038:                                   ; preds = %routine_shll__cl___eax.exit162
  %9039 = and i64 %9031, 63
  %9040 = add i64 %9039, -1
  %9041 = lshr i64 %9029, %9040
  br label %9042

; <label>:9042:                                   ; preds = %9038, %9035
  %9043 = phi i64 [ %9041, %9038 ], [ %9029, %9035 ]
  %9044 = phi i8 [ 0, %9038 ], [ %9037, %9035 ]
  %9045 = trunc i64 %9043 to i8
  %9046 = and i8 %9045, 1
  %9047 = lshr i64 %9043, 1
  store i64 %9047, i64* %RDI.i136, align 8
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9046, i8* %9048, align 1
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9050 = trunc i64 %9047 to i32
  %9051 = and i32 %9050, 255
  %9052 = call i32 @llvm.ctpop.i32(i32 %9051)
  %9053 = trunc i32 %9052 to i8
  %9054 = and i8 %9053, 1
  %9055 = xor i8 %9054, 1
  store i8 %9055, i8* %9049, align 1
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9056, align 1
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9058 = icmp eq i64 %9047, 0
  %9059 = zext i1 %9058 to i8
  store i8 %9059, i8* %9057, align 1
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9060, align 1
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9044, i8* %9061, align 1
  br label %routine_shrq__cl___rdi.exit137

routine_shrq__cl___rdi.exit137:                   ; preds = %routine_shll__cl___eax.exit162, %9042
  store %struct.Memory* %loadMem_4138f7, %struct.Memory** %MEMORY
  %loadMem_4138fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9063 = getelementptr inbounds %struct.GPR, %struct.GPR* %9062, i32 0, i32 33
  %9064 = getelementptr inbounds %struct.Reg, %struct.Reg* %9063, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %9064 to i64*
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9066 = getelementptr inbounds %struct.GPR, %struct.GPR* %9065, i32 0, i32 11
  %9067 = getelementptr inbounds %struct.Reg, %struct.Reg* %9066, i32 0, i32 0
  %EDI.i132 = bitcast %union.anon* %9067 to i32*
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9069 = getelementptr inbounds %struct.GPR, %struct.GPR* %9068, i32 0, i32 1
  %9070 = getelementptr inbounds %struct.Reg, %struct.Reg* %9069, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %9070 to i64*
  %9071 = load i32, i32* %EDI.i132
  %9072 = zext i32 %9071 to i64
  %9073 = load i64, i64* %PC.i131
  %9074 = add i64 %9073, 2
  store i64 %9074, i64* %PC.i131
  %9075 = and i64 %9072, 4294967295
  store i64 %9075, i64* %RAX.i133, align 8
  store %struct.Memory* %loadMem_4138fa, %struct.Memory** %MEMORY
  %loadMem_4138fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 33
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %9078 to i64*
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9080 = getelementptr inbounds %struct.GPR, %struct.GPR* %9079, i32 0, i32 1
  %9081 = getelementptr inbounds %struct.Reg, %struct.Reg* %9080, i32 0, i32 0
  %EAX.i129 = bitcast %union.anon* %9081 to i32*
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9083 = getelementptr inbounds %struct.GPR, %struct.GPR* %9082, i32 0, i32 15
  %9084 = getelementptr inbounds %struct.Reg, %struct.Reg* %9083, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %9084 to i64*
  %9085 = load i64, i64* %RBP.i130
  %9086 = sub i64 %9085, 72
  %9087 = load i32, i32* %EAX.i129
  %9088 = zext i32 %9087 to i64
  %9089 = load i64, i64* %PC.i128
  %9090 = add i64 %9089, 3
  store i64 %9090, i64* %PC.i128
  %9091 = inttoptr i64 %9086 to i32*
  store i32 %9087, i32* %9091
  store %struct.Memory* %loadMem_4138fc, %struct.Memory** %MEMORY
  br label %block_.L_4138ff

block_.L_4138ff:                                  ; preds = %routine_shrq__cl___rdi.exit137, %block_413897
  %loadMem_4138ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 33
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %9094 to i64*
  %9095 = load i64, i64* %PC.i127
  %9096 = add i64 %9095, 5
  %9097 = load i64, i64* %PC.i127
  %9098 = add i64 %9097, 5
  store i64 %9098, i64* %PC.i127
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9096, i64* %9099, align 8
  store %struct.Memory* %loadMem_4138ff, %struct.Memory** %MEMORY
  br label %block_.L_413904

block_.L_413904:                                  ; preds = %block_.L_4138ff, %block_413860
  %loadMem_413904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9101 = getelementptr inbounds %struct.GPR, %struct.GPR* %9100, i32 0, i32 33
  %9102 = getelementptr inbounds %struct.Reg, %struct.Reg* %9101, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %9102 to i64*
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9104 = getelementptr inbounds %struct.GPR, %struct.GPR* %9103, i32 0, i32 15
  %9105 = getelementptr inbounds %struct.Reg, %struct.Reg* %9104, i32 0, i32 0
  %RBP.i126 = bitcast %union.anon* %9105 to i64*
  %9106 = load i64, i64* %RBP.i126
  %9107 = sub i64 %9106, 112
  %9108 = load i64, i64* %PC.i125
  %9109 = add i64 %9108, 4
  store i64 %9109, i64* %PC.i125
  %9110 = inttoptr i64 %9107 to i32*
  %9111 = load i32, i32* %9110
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9112, align 1
  %9113 = and i32 %9111, 255
  %9114 = call i32 @llvm.ctpop.i32(i32 %9113)
  %9115 = trunc i32 %9114 to i8
  %9116 = and i8 %9115, 1
  %9117 = xor i8 %9116, 1
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9117, i8* %9118, align 1
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9119, align 1
  %9120 = icmp eq i32 %9111, 0
  %9121 = zext i1 %9120 to i8
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9121, i8* %9122, align 1
  %9123 = lshr i32 %9111, 31
  %9124 = trunc i32 %9123 to i8
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9124, i8* %9125, align 1
  %9126 = lshr i32 %9111, 31
  %9127 = xor i32 %9123, %9126
  %9128 = add i32 %9127, %9126
  %9129 = icmp eq i32 %9128, 2
  %9130 = zext i1 %9129 to i8
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9130, i8* %9131, align 1
  store %struct.Memory* %loadMem_413904, %struct.Memory** %MEMORY
  %loadMem_413908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9133 = getelementptr inbounds %struct.GPR, %struct.GPR* %9132, i32 0, i32 33
  %9134 = getelementptr inbounds %struct.Reg, %struct.Reg* %9133, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %9134 to i64*
  %9135 = load i64, i64* %PC.i124
  %9136 = add i64 %9135, 151
  %9137 = load i64, i64* %PC.i124
  %9138 = add i64 %9137, 6
  %9139 = load i64, i64* %PC.i124
  %9140 = add i64 %9139, 6
  store i64 %9140, i64* %PC.i124
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9142 = load i8, i8* %9141, align 1
  store i8 %9142, i8* %BRANCH_TAKEN, align 1
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9144 = icmp ne i8 %9142, 0
  %9145 = select i1 %9144, i64 %9136, i64 %9138
  store i64 %9145, i64* %9143, align 8
  store %struct.Memory* %loadMem_413908, %struct.Memory** %MEMORY
  %loadBr_413908 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_413908 = icmp eq i8 %loadBr_413908, 1
  br i1 %cmpBr_413908, label %block_.L_41399f, label %block_41390e

block_41390e:                                     ; preds = %block_.L_413904
  %loadMem_41390e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9147 = getelementptr inbounds %struct.GPR, %struct.GPR* %9146, i32 0, i32 33
  %9148 = getelementptr inbounds %struct.Reg, %struct.Reg* %9147, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %9148 to i64*
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9150 = getelementptr inbounds %struct.GPR, %struct.GPR* %9149, i32 0, i32 1
  %9151 = getelementptr inbounds %struct.Reg, %struct.Reg* %9150, i32 0, i32 0
  %RAX.i123 = bitcast %union.anon* %9151 to i64*
  %9152 = load i64, i64* %PC.i122
  %9153 = add i64 %9152, 8
  store i64 %9153, i64* %PC.i122
  %9154 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9154, i64* %RAX.i123, align 8
  store %struct.Memory* %loadMem_41390e, %struct.Memory** %MEMORY
  %loadMem_413916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9156 = getelementptr inbounds %struct.GPR, %struct.GPR* %9155, i32 0, i32 33
  %9157 = getelementptr inbounds %struct.Reg, %struct.Reg* %9156, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %9157 to i64*
  %9158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9159 = getelementptr inbounds %struct.GPR, %struct.GPR* %9158, i32 0, i32 1
  %9160 = getelementptr inbounds %struct.Reg, %struct.Reg* %9159, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %9160 to i64*
  %9161 = load i64, i64* %RAX.i121
  %9162 = add i64 %9161, 14168
  %9163 = load i64, i64* %PC.i120
  %9164 = add i64 %9163, 7
  store i64 %9164, i64* %PC.i120
  %9165 = inttoptr i64 %9162 to i64*
  %9166 = load i64, i64* %9165
  store i64 %9166, i64* %RAX.i121, align 8
  store %struct.Memory* %loadMem_413916, %struct.Memory** %MEMORY
  %loadMem_41391d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9168 = getelementptr inbounds %struct.GPR, %struct.GPR* %9167, i32 0, i32 33
  %9169 = getelementptr inbounds %struct.Reg, %struct.Reg* %9168, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %9169 to i64*
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9171 = getelementptr inbounds %struct.GPR, %struct.GPR* %9170, i32 0, i32 5
  %9172 = getelementptr inbounds %struct.Reg, %struct.Reg* %9171, i32 0, i32 0
  %RCX.i118 = bitcast %union.anon* %9172 to i64*
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9174 = getelementptr inbounds %struct.GPR, %struct.GPR* %9173, i32 0, i32 15
  %9175 = getelementptr inbounds %struct.Reg, %struct.Reg* %9174, i32 0, i32 0
  %RBP.i119 = bitcast %union.anon* %9175 to i64*
  %9176 = load i64, i64* %RBP.i119
  %9177 = sub i64 %9176, 108
  %9178 = load i64, i64* %PC.i117
  %9179 = add i64 %9178, 4
  store i64 %9179, i64* %PC.i117
  %9180 = inttoptr i64 %9177 to i32*
  %9181 = load i32, i32* %9180
  %9182 = sext i32 %9181 to i64
  store i64 %9182, i64* %RCX.i118, align 8
  store %struct.Memory* %loadMem_41391d, %struct.Memory** %MEMORY
  %loadMem_413921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 33
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %9185 to i64*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 5
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RCX.i116 = bitcast %union.anon* %9188 to i64*
  %9189 = load i64, i64* %RCX.i116
  %9190 = load i64, i64* %PC.i115
  %9191 = add i64 %9190, 7
  store i64 %9191, i64* %PC.i115
  %9192 = sext i64 %9189 to i128
  %9193 = and i128 %9192, -18446744073709551616
  %9194 = zext i64 %9189 to i128
  %9195 = or i128 %9193, %9194
  %9196 = mul i128 632, %9195
  %9197 = trunc i128 %9196 to i64
  store i64 %9197, i64* %RCX.i116, align 8
  %9198 = sext i64 %9197 to i128
  %9199 = icmp ne i128 %9198, %9196
  %9200 = zext i1 %9199 to i8
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9200, i8* %9201, align 1
  %9202 = trunc i128 %9196 to i32
  %9203 = and i32 %9202, 255
  %9204 = call i32 @llvm.ctpop.i32(i32 %9203)
  %9205 = trunc i32 %9204 to i8
  %9206 = and i8 %9205, 1
  %9207 = xor i8 %9206, 1
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9207, i8* %9208, align 1
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9209, align 1
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9210, align 1
  %9211 = lshr i64 %9197, 63
  %9212 = trunc i64 %9211 to i8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9212, i8* %9213, align 1
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9200, i8* %9214, align 1
  store %struct.Memory* %loadMem_413921, %struct.Memory** %MEMORY
  %loadMem_413928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9216 = getelementptr inbounds %struct.GPR, %struct.GPR* %9215, i32 0, i32 33
  %9217 = getelementptr inbounds %struct.Reg, %struct.Reg* %9216, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %9217 to i64*
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9219 = getelementptr inbounds %struct.GPR, %struct.GPR* %9218, i32 0, i32 1
  %9220 = getelementptr inbounds %struct.Reg, %struct.Reg* %9219, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %9220 to i64*
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9222 = getelementptr inbounds %struct.GPR, %struct.GPR* %9221, i32 0, i32 5
  %9223 = getelementptr inbounds %struct.Reg, %struct.Reg* %9222, i32 0, i32 0
  %RCX.i114 = bitcast %union.anon* %9223 to i64*
  %9224 = load i64, i64* %RAX.i113
  %9225 = load i64, i64* %RCX.i114
  %9226 = load i64, i64* %PC.i112
  %9227 = add i64 %9226, 3
  store i64 %9227, i64* %PC.i112
  %9228 = add i64 %9225, %9224
  store i64 %9228, i64* %RAX.i113, align 8
  %9229 = icmp ult i64 %9228, %9224
  %9230 = icmp ult i64 %9228, %9225
  %9231 = or i1 %9229, %9230
  %9232 = zext i1 %9231 to i8
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9232, i8* %9233, align 1
  %9234 = trunc i64 %9228 to i32
  %9235 = and i32 %9234, 255
  %9236 = call i32 @llvm.ctpop.i32(i32 %9235)
  %9237 = trunc i32 %9236 to i8
  %9238 = and i8 %9237, 1
  %9239 = xor i8 %9238, 1
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9239, i8* %9240, align 1
  %9241 = xor i64 %9225, %9224
  %9242 = xor i64 %9241, %9228
  %9243 = lshr i64 %9242, 4
  %9244 = trunc i64 %9243 to i8
  %9245 = and i8 %9244, 1
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9245, i8* %9246, align 1
  %9247 = icmp eq i64 %9228, 0
  %9248 = zext i1 %9247 to i8
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9248, i8* %9249, align 1
  %9250 = lshr i64 %9228, 63
  %9251 = trunc i64 %9250 to i8
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9251, i8* %9252, align 1
  %9253 = lshr i64 %9224, 63
  %9254 = lshr i64 %9225, 63
  %9255 = xor i64 %9250, %9253
  %9256 = xor i64 %9250, %9254
  %9257 = add i64 %9255, %9256
  %9258 = icmp eq i64 %9257, 2
  %9259 = zext i1 %9258 to i8
  %9260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9259, i8* %9260, align 1
  store %struct.Memory* %loadMem_413928, %struct.Memory** %MEMORY
  %loadMem_41392b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9262 = getelementptr inbounds %struct.GPR, %struct.GPR* %9261, i32 0, i32 33
  %9263 = getelementptr inbounds %struct.Reg, %struct.Reg* %9262, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %9263 to i64*
  %9264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9265 = getelementptr inbounds %struct.GPR, %struct.GPR* %9264, i32 0, i32 1
  %9266 = getelementptr inbounds %struct.Reg, %struct.Reg* %9265, i32 0, i32 0
  %RAX.i111 = bitcast %union.anon* %9266 to i64*
  %9267 = load i64, i64* %RAX.i111
  %9268 = add i64 %9267, 72
  %9269 = load i64, i64* %PC.i110
  %9270 = add i64 %9269, 4
  store i64 %9270, i64* %PC.i110
  %9271 = inttoptr i64 %9268 to i32*
  %9272 = load i32, i32* %9271
  %9273 = sub i32 %9272, 14
  %9274 = icmp ult i32 %9272, 14
  %9275 = zext i1 %9274 to i8
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9275, i8* %9276, align 1
  %9277 = and i32 %9273, 255
  %9278 = call i32 @llvm.ctpop.i32(i32 %9277)
  %9279 = trunc i32 %9278 to i8
  %9280 = and i8 %9279, 1
  %9281 = xor i8 %9280, 1
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9281, i8* %9282, align 1
  %9283 = xor i32 %9272, 14
  %9284 = xor i32 %9283, %9273
  %9285 = lshr i32 %9284, 4
  %9286 = trunc i32 %9285 to i8
  %9287 = and i8 %9286, 1
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9287, i8* %9288, align 1
  %9289 = icmp eq i32 %9273, 0
  %9290 = zext i1 %9289 to i8
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9290, i8* %9291, align 1
  %9292 = lshr i32 %9273, 31
  %9293 = trunc i32 %9292 to i8
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9293, i8* %9294, align 1
  %9295 = lshr i32 %9272, 31
  %9296 = xor i32 %9292, %9295
  %9297 = add i32 %9296, %9295
  %9298 = icmp eq i32 %9297, 2
  %9299 = zext i1 %9298 to i8
  %9300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9299, i8* %9300, align 1
  store %struct.Memory* %loadMem_41392b, %struct.Memory** %MEMORY
  %loadMem_41392f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9302 = getelementptr inbounds %struct.GPR, %struct.GPR* %9301, i32 0, i32 33
  %9303 = getelementptr inbounds %struct.Reg, %struct.Reg* %9302, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %9303 to i64*
  %9304 = load i64, i64* %PC.i109
  %9305 = add i64 %9304, 18
  %9306 = load i64, i64* %PC.i109
  %9307 = add i64 %9306, 6
  %9308 = load i64, i64* %PC.i109
  %9309 = add i64 %9308, 6
  store i64 %9309, i64* %PC.i109
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9311 = load i8, i8* %9310, align 1
  %9312 = icmp eq i8 %9311, 0
  %9313 = zext i1 %9312 to i8
  store i8 %9313, i8* %BRANCH_TAKEN, align 1
  %9314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9315 = select i1 %9312, i64 %9305, i64 %9307
  store i64 %9315, i64* %9314, align 8
  store %struct.Memory* %loadMem_41392f, %struct.Memory** %MEMORY
  %loadBr_41392f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41392f = icmp eq i8 %loadBr_41392f, 1
  br i1 %cmpBr_41392f, label %block_.L_413941, label %block_413935

block_413935:                                     ; preds = %block_41390e
  %loadMem_413935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9317 = getelementptr inbounds %struct.GPR, %struct.GPR* %9316, i32 0, i32 33
  %9318 = getelementptr inbounds %struct.Reg, %struct.Reg* %9317, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %9318 to i64*
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9320 = getelementptr inbounds %struct.GPR, %struct.GPR* %9319, i32 0, i32 15
  %9321 = getelementptr inbounds %struct.Reg, %struct.Reg* %9320, i32 0, i32 0
  %RBP.i108 = bitcast %union.anon* %9321 to i64*
  %9322 = load i64, i64* %RBP.i108
  %9323 = sub i64 %9322, 76
  %9324 = load i64, i64* %PC.i107
  %9325 = add i64 %9324, 7
  store i64 %9325, i64* %PC.i107
  %9326 = inttoptr i64 %9323 to i32*
  store i32 1, i32* %9326
  store %struct.Memory* %loadMem_413935, %struct.Memory** %MEMORY
  %loadMem_41393c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9328 = getelementptr inbounds %struct.GPR, %struct.GPR* %9327, i32 0, i32 33
  %9329 = getelementptr inbounds %struct.Reg, %struct.Reg* %9328, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %9329 to i64*
  %9330 = load i64, i64* %PC.i106
  %9331 = add i64 %9330, 94
  %9332 = load i64, i64* %PC.i106
  %9333 = add i64 %9332, 5
  store i64 %9333, i64* %PC.i106
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9331, i64* %9334, align 8
  store %struct.Memory* %loadMem_41393c, %struct.Memory** %MEMORY
  br label %block_.L_41399a

block_.L_413941:                                  ; preds = %block_41390e
  %loadMem_413941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9336 = getelementptr inbounds %struct.GPR, %struct.GPR* %9335, i32 0, i32 33
  %9337 = getelementptr inbounds %struct.Reg, %struct.Reg* %9336, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %9337 to i64*
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9339 = getelementptr inbounds %struct.GPR, %struct.GPR* %9338, i32 0, i32 1
  %9340 = getelementptr inbounds %struct.Reg, %struct.Reg* %9339, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %9340 to i64*
  %9341 = load i64, i64* %PC.i104
  %9342 = add i64 %9341, 5
  store i64 %9342, i64* %PC.i104
  store i64 1, i64* %RAX.i105, align 8
  store %struct.Memory* %loadMem_413941, %struct.Memory** %MEMORY
  %loadMem_413946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9344 = getelementptr inbounds %struct.GPR, %struct.GPR* %9343, i32 0, i32 33
  %9345 = getelementptr inbounds %struct.Reg, %struct.Reg* %9344, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %9345 to i64*
  %9346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9347 = getelementptr inbounds %struct.GPR, %struct.GPR* %9346, i32 0, i32 5
  %9348 = getelementptr inbounds %struct.Reg, %struct.Reg* %9347, i32 0, i32 0
  %RCX.i103 = bitcast %union.anon* %9348 to i64*
  %9349 = load i64, i64* %PC.i102
  %9350 = add i64 %9349, 8
  store i64 %9350, i64* %PC.i102
  %9351 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %9351, i64* %RCX.i103, align 8
  store %struct.Memory* %loadMem_413946, %struct.Memory** %MEMORY
  %loadMem_41394e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9353 = getelementptr inbounds %struct.GPR, %struct.GPR* %9352, i32 0, i32 33
  %9354 = getelementptr inbounds %struct.Reg, %struct.Reg* %9353, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %9354 to i64*
  %9355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9356 = getelementptr inbounds %struct.GPR, %struct.GPR* %9355, i32 0, i32 5
  %9357 = getelementptr inbounds %struct.Reg, %struct.Reg* %9356, i32 0, i32 0
  %RCX.i101 = bitcast %union.anon* %9357 to i64*
  %9358 = load i64, i64* %RCX.i101
  %9359 = add i64 %9358, 14168
  %9360 = load i64, i64* %PC.i100
  %9361 = add i64 %9360, 7
  store i64 %9361, i64* %PC.i100
  %9362 = inttoptr i64 %9359 to i64*
  %9363 = load i64, i64* %9362
  store i64 %9363, i64* %RCX.i101, align 8
  store %struct.Memory* %loadMem_41394e, %struct.Memory** %MEMORY
  %loadMem_413955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 33
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %9366 to i64*
  %9367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9368 = getelementptr inbounds %struct.GPR, %struct.GPR* %9367, i32 0, i32 7
  %9369 = getelementptr inbounds %struct.Reg, %struct.Reg* %9368, i32 0, i32 0
  %RDX.i98 = bitcast %union.anon* %9369 to i64*
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9371 = getelementptr inbounds %struct.GPR, %struct.GPR* %9370, i32 0, i32 15
  %9372 = getelementptr inbounds %struct.Reg, %struct.Reg* %9371, i32 0, i32 0
  %RBP.i99 = bitcast %union.anon* %9372 to i64*
  %9373 = load i64, i64* %RBP.i99
  %9374 = sub i64 %9373, 108
  %9375 = load i64, i64* %PC.i97
  %9376 = add i64 %9375, 4
  store i64 %9376, i64* %PC.i97
  %9377 = inttoptr i64 %9374 to i32*
  %9378 = load i32, i32* %9377
  %9379 = sext i32 %9378 to i64
  store i64 %9379, i64* %RDX.i98, align 8
  store %struct.Memory* %loadMem_413955, %struct.Memory** %MEMORY
  %loadMem_413959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9381 = getelementptr inbounds %struct.GPR, %struct.GPR* %9380, i32 0, i32 33
  %9382 = getelementptr inbounds %struct.Reg, %struct.Reg* %9381, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %9382 to i64*
  %9383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9384 = getelementptr inbounds %struct.GPR, %struct.GPR* %9383, i32 0, i32 7
  %9385 = getelementptr inbounds %struct.Reg, %struct.Reg* %9384, i32 0, i32 0
  %RDX.i96 = bitcast %union.anon* %9385 to i64*
  %9386 = load i64, i64* %RDX.i96
  %9387 = load i64, i64* %PC.i95
  %9388 = add i64 %9387, 7
  store i64 %9388, i64* %PC.i95
  %9389 = sext i64 %9386 to i128
  %9390 = and i128 %9389, -18446744073709551616
  %9391 = zext i64 %9386 to i128
  %9392 = or i128 %9390, %9391
  %9393 = mul i128 632, %9392
  %9394 = trunc i128 %9393 to i64
  store i64 %9394, i64* %RDX.i96, align 8
  %9395 = sext i64 %9394 to i128
  %9396 = icmp ne i128 %9395, %9393
  %9397 = zext i1 %9396 to i8
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9397, i8* %9398, align 1
  %9399 = trunc i128 %9393 to i32
  %9400 = and i32 %9399, 255
  %9401 = call i32 @llvm.ctpop.i32(i32 %9400)
  %9402 = trunc i32 %9401 to i8
  %9403 = and i8 %9402, 1
  %9404 = xor i8 %9403, 1
  %9405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9404, i8* %9405, align 1
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9406, align 1
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9407, align 1
  %9408 = lshr i64 %9394, 63
  %9409 = trunc i64 %9408 to i8
  %9410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9409, i8* %9410, align 1
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9397, i8* %9411, align 1
  store %struct.Memory* %loadMem_413959, %struct.Memory** %MEMORY
  %loadMem_413960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9413 = getelementptr inbounds %struct.GPR, %struct.GPR* %9412, i32 0, i32 33
  %9414 = getelementptr inbounds %struct.Reg, %struct.Reg* %9413, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %9414 to i64*
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 5
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %RCX.i93 = bitcast %union.anon* %9417 to i64*
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 7
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %RDX.i94 = bitcast %union.anon* %9420 to i64*
  %9421 = load i64, i64* %RCX.i93
  %9422 = load i64, i64* %RDX.i94
  %9423 = load i64, i64* %PC.i92
  %9424 = add i64 %9423, 3
  store i64 %9424, i64* %PC.i92
  %9425 = add i64 %9422, %9421
  store i64 %9425, i64* %RCX.i93, align 8
  %9426 = icmp ult i64 %9425, %9421
  %9427 = icmp ult i64 %9425, %9422
  %9428 = or i1 %9426, %9427
  %9429 = zext i1 %9428 to i8
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9429, i8* %9430, align 1
  %9431 = trunc i64 %9425 to i32
  %9432 = and i32 %9431, 255
  %9433 = call i32 @llvm.ctpop.i32(i32 %9432)
  %9434 = trunc i32 %9433 to i8
  %9435 = and i8 %9434, 1
  %9436 = xor i8 %9435, 1
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9436, i8* %9437, align 1
  %9438 = xor i64 %9422, %9421
  %9439 = xor i64 %9438, %9425
  %9440 = lshr i64 %9439, 4
  %9441 = trunc i64 %9440 to i8
  %9442 = and i8 %9441, 1
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9442, i8* %9443, align 1
  %9444 = icmp eq i64 %9425, 0
  %9445 = zext i1 %9444 to i8
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9445, i8* %9446, align 1
  %9447 = lshr i64 %9425, 63
  %9448 = trunc i64 %9447 to i8
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9448, i8* %9449, align 1
  %9450 = lshr i64 %9421, 63
  %9451 = lshr i64 %9422, 63
  %9452 = xor i64 %9447, %9450
  %9453 = xor i64 %9447, %9451
  %9454 = add i64 %9452, %9453
  %9455 = icmp eq i64 %9454, 2
  %9456 = zext i1 %9455 to i8
  %9457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9456, i8* %9457, align 1
  store %struct.Memory* %loadMem_413960, %struct.Memory** %MEMORY
  %loadMem_413963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9459 = getelementptr inbounds %struct.GPR, %struct.GPR* %9458, i32 0, i32 33
  %9460 = getelementptr inbounds %struct.Reg, %struct.Reg* %9459, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %9460 to i64*
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9462 = getelementptr inbounds %struct.GPR, %struct.GPR* %9461, i32 0, i32 5
  %9463 = getelementptr inbounds %struct.Reg, %struct.Reg* %9462, i32 0, i32 0
  %RCX.i91 = bitcast %union.anon* %9463 to i64*
  %9464 = load i64, i64* %RCX.i91
  %9465 = add i64 %9464, 504
  %9466 = load i64, i64* %PC.i90
  %9467 = add i64 %9466, 7
  store i64 %9467, i64* %PC.i90
  %9468 = inttoptr i64 %9465 to i64*
  %9469 = load i64, i64* %9468
  store i64 %9469, i64* %RCX.i91, align 8
  store %struct.Memory* %loadMem_413963, %struct.Memory** %MEMORY
  %loadMem_41396a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9471 = getelementptr inbounds %struct.GPR, %struct.GPR* %9470, i32 0, i32 33
  %9472 = getelementptr inbounds %struct.Reg, %struct.Reg* %9471, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %9472 to i64*
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9474 = getelementptr inbounds %struct.GPR, %struct.GPR* %9473, i32 0, i32 9
  %9475 = getelementptr inbounds %struct.Reg, %struct.Reg* %9474, i32 0, i32 0
  %RSI.i88 = bitcast %union.anon* %9475 to i64*
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9477 = getelementptr inbounds %struct.GPR, %struct.GPR* %9476, i32 0, i32 15
  %9478 = getelementptr inbounds %struct.Reg, %struct.Reg* %9477, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %9478 to i64*
  %9479 = load i64, i64* %RBP.i89
  %9480 = sub i64 %9479, 64
  %9481 = load i64, i64* %PC.i87
  %9482 = add i64 %9481, 3
  store i64 %9482, i64* %PC.i87
  %9483 = inttoptr i64 %9480 to i32*
  %9484 = load i32, i32* %9483
  %9485 = zext i32 %9484 to i64
  store i64 %9485, i64* %RSI.i88, align 8
  store %struct.Memory* %loadMem_41396a, %struct.Memory** %MEMORY
  %loadMem_41396d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9487 = getelementptr inbounds %struct.GPR, %struct.GPR* %9486, i32 0, i32 33
  %9488 = getelementptr inbounds %struct.Reg, %struct.Reg* %9487, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %9488 to i64*
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9490 = getelementptr inbounds %struct.GPR, %struct.GPR* %9489, i32 0, i32 9
  %9491 = getelementptr inbounds %struct.Reg, %struct.Reg* %9490, i32 0, i32 0
  %RSI.i85 = bitcast %union.anon* %9491 to i64*
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9493 = getelementptr inbounds %struct.GPR, %struct.GPR* %9492, i32 0, i32 15
  %9494 = getelementptr inbounds %struct.Reg, %struct.Reg* %9493, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %9494 to i64*
  %9495 = load i64, i64* %RSI.i85
  %9496 = load i64, i64* %RBP.i86
  %9497 = sub i64 %9496, 84
  %9498 = load i64, i64* %PC.i84
  %9499 = add i64 %9498, 3
  store i64 %9499, i64* %PC.i84
  %9500 = trunc i64 %9495 to i32
  %9501 = inttoptr i64 %9497 to i32*
  %9502 = load i32, i32* %9501
  %9503 = add i32 %9502, %9500
  %9504 = zext i32 %9503 to i64
  store i64 %9504, i64* %RSI.i85, align 8
  %9505 = icmp ult i32 %9503, %9500
  %9506 = icmp ult i32 %9503, %9502
  %9507 = or i1 %9505, %9506
  %9508 = zext i1 %9507 to i8
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9508, i8* %9509, align 1
  %9510 = and i32 %9503, 255
  %9511 = call i32 @llvm.ctpop.i32(i32 %9510)
  %9512 = trunc i32 %9511 to i8
  %9513 = and i8 %9512, 1
  %9514 = xor i8 %9513, 1
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9514, i8* %9515, align 1
  %9516 = xor i32 %9502, %9500
  %9517 = xor i32 %9516, %9503
  %9518 = lshr i32 %9517, 4
  %9519 = trunc i32 %9518 to i8
  %9520 = and i8 %9519, 1
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9520, i8* %9521, align 1
  %9522 = icmp eq i32 %9503, 0
  %9523 = zext i1 %9522 to i8
  %9524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9523, i8* %9524, align 1
  %9525 = lshr i32 %9503, 31
  %9526 = trunc i32 %9525 to i8
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9526, i8* %9527, align 1
  %9528 = lshr i32 %9500, 31
  %9529 = lshr i32 %9502, 31
  %9530 = xor i32 %9525, %9528
  %9531 = xor i32 %9525, %9529
  %9532 = add i32 %9530, %9531
  %9533 = icmp eq i32 %9532, 2
  %9534 = zext i1 %9533 to i8
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9534, i8* %9535, align 1
  store %struct.Memory* %loadMem_41396d, %struct.Memory** %MEMORY
  %loadMem_413970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9537 = getelementptr inbounds %struct.GPR, %struct.GPR* %9536, i32 0, i32 33
  %9538 = getelementptr inbounds %struct.Reg, %struct.Reg* %9537, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %9538 to i64*
  %9539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9540 = getelementptr inbounds %struct.GPR, %struct.GPR* %9539, i32 0, i32 5
  %9541 = getelementptr inbounds %struct.Reg, %struct.Reg* %9540, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %9541 to i64*
  %9542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9543 = getelementptr inbounds %struct.GPR, %struct.GPR* %9542, i32 0, i32 15
  %9544 = getelementptr inbounds %struct.Reg, %struct.Reg* %9543, i32 0, i32 0
  %RBP.i83 = bitcast %union.anon* %9544 to i64*
  %9545 = load i64, i64* %RBP.i83
  %9546 = sub i64 %9545, 224
  %9547 = load i64, i64* %RCX.i82
  %9548 = load i64, i64* %PC.i81
  %9549 = add i64 %9548, 7
  store i64 %9549, i64* %PC.i81
  %9550 = inttoptr i64 %9546 to i64*
  store i64 %9547, i64* %9550
  store %struct.Memory* %loadMem_413970, %struct.Memory** %MEMORY
  %loadMem_413977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9552 = getelementptr inbounds %struct.GPR, %struct.GPR* %9551, i32 0, i32 33
  %9553 = getelementptr inbounds %struct.Reg, %struct.Reg* %9552, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %9553 to i64*
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9555 = getelementptr inbounds %struct.GPR, %struct.GPR* %9554, i32 0, i32 9
  %9556 = getelementptr inbounds %struct.Reg, %struct.Reg* %9555, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %9556 to i32*
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9558 = getelementptr inbounds %struct.GPR, %struct.GPR* %9557, i32 0, i32 5
  %9559 = getelementptr inbounds %struct.Reg, %struct.Reg* %9558, i32 0, i32 0
  %RCX.i80 = bitcast %union.anon* %9559 to i64*
  %9560 = load i32, i32* %ESI.i
  %9561 = zext i32 %9560 to i64
  %9562 = load i64, i64* %PC.i79
  %9563 = add i64 %9562, 2
  store i64 %9563, i64* %PC.i79
  %9564 = and i64 %9561, 4294967295
  store i64 %9564, i64* %RCX.i80, align 8
  store %struct.Memory* %loadMem_413977, %struct.Memory** %MEMORY
  %loadMem_413979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9566 = getelementptr inbounds %struct.GPR, %struct.GPR* %9565, i32 0, i32 33
  %9567 = getelementptr inbounds %struct.Reg, %struct.Reg* %9566, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %9567 to i64*
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9569 = getelementptr inbounds %struct.GPR, %struct.GPR* %9568, i32 0, i32 5
  %9570 = getelementptr inbounds %struct.Reg, %struct.Reg* %9569, i32 0, i32 0
  %9571 = bitcast %union.anon* %9570 to %struct.anon.2*
  %CL.i77 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9571, i32 0, i32 0
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 1
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %RAX.i78 = bitcast %union.anon* %9574 to i64*
  %9575 = load i64, i64* %RAX.i78
  %9576 = load i8, i8* %CL.i77
  %9577 = zext i8 %9576 to i64
  %9578 = load i64, i64* %PC.i76
  %9579 = add i64 %9578, 2
  store i64 %9579, i64* %PC.i76
  %9580 = trunc i64 %9577 to i5
  switch i5 %9580, label %9587 [
    i5 0, label %routine_shll__cl___eax.exit
    i5 1, label %9581
  ]

; <label>:9581:                                   ; preds = %block_.L_413941
  %9582 = trunc i64 %9575 to i32
  %9583 = shl i32 %9582, 1
  %9584 = icmp slt i32 %9582, 0
  %9585 = icmp slt i32 %9583, 0
  %9586 = xor i1 %9584, %9585
  br label %9596

; <label>:9587:                                   ; preds = %block_.L_413941
  %9588 = and i64 %9577, 31
  %9589 = add i64 %9588, 4294967295
  %9590 = and i64 %9575, 4294967295
  %9591 = and i64 %9589, 4294967295
  %9592 = shl i64 %9590, %9591
  %9593 = trunc i64 %9592 to i32
  %9594 = icmp slt i32 %9593, 0
  %9595 = shl i32 %9593, 1
  br label %9596

; <label>:9596:                                   ; preds = %9587, %9581
  %9597 = phi i1 [ %9584, %9581 ], [ %9594, %9587 ]
  %9598 = phi i1 [ %9586, %9581 ], [ false, %9587 ]
  %9599 = phi i32 [ %9583, %9581 ], [ %9595, %9587 ]
  %9600 = zext i32 %9599 to i64
  store i64 %9600, i64* %RAX.i78, align 8
  %9601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9602 = zext i1 %9597 to i8
  store i8 %9602, i8* %9601, align 1
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9604 = and i32 %9599, 254
  %9605 = call i32 @llvm.ctpop.i32(i32 %9604)
  %9606 = trunc i32 %9605 to i8
  %9607 = and i8 %9606, 1
  %9608 = xor i8 %9607, 1
  store i8 %9608, i8* %9603, align 1
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9609, align 1
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9611 = icmp eq i32 %9599, 0
  %9612 = zext i1 %9611 to i8
  store i8 %9612, i8* %9610, align 1
  %9613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9614 = lshr i32 %9599, 31
  %9615 = trunc i32 %9614 to i8
  store i8 %9615, i8* %9613, align 1
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9617 = zext i1 %9598 to i8
  store i8 %9617, i8* %9616, align 1
  br label %routine_shll__cl___eax.exit

routine_shll__cl___eax.exit:                      ; preds = %block_.L_413941, %9596
  store %struct.Memory* %loadMem_413979, %struct.Memory** %MEMORY
  %loadMem_41397b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9619 = getelementptr inbounds %struct.GPR, %struct.GPR* %9618, i32 0, i32 33
  %9620 = getelementptr inbounds %struct.Reg, %struct.Reg* %9619, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %9620 to i64*
  %9621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9622 = getelementptr inbounds %struct.GPR, %struct.GPR* %9621, i32 0, i32 1
  %9623 = getelementptr inbounds %struct.Reg, %struct.Reg* %9622, i32 0, i32 0
  %EAX.i74 = bitcast %union.anon* %9623 to i32*
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9625 = getelementptr inbounds %struct.GPR, %struct.GPR* %9624, i32 0, i32 7
  %9626 = getelementptr inbounds %struct.Reg, %struct.Reg* %9625, i32 0, i32 0
  %RDX.i75 = bitcast %union.anon* %9626 to i64*
  %9627 = load i32, i32* %EAX.i74
  %9628 = zext i32 %9627 to i64
  %9629 = load i64, i64* %PC.i73
  %9630 = add i64 %9629, 3
  store i64 %9630, i64* %PC.i73
  %9631 = shl i64 %9628, 32
  %9632 = ashr exact i64 %9631, 32
  store i64 %9632, i64* %RDX.i75, align 8
  store %struct.Memory* %loadMem_41397b, %struct.Memory** %MEMORY
  %loadMem_41397e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9634 = getelementptr inbounds %struct.GPR, %struct.GPR* %9633, i32 0, i32 33
  %9635 = getelementptr inbounds %struct.Reg, %struct.Reg* %9634, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %9635 to i64*
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9637 = getelementptr inbounds %struct.GPR, %struct.GPR* %9636, i32 0, i32 11
  %9638 = getelementptr inbounds %struct.Reg, %struct.Reg* %9637, i32 0, i32 0
  %RDI.i71 = bitcast %union.anon* %9638 to i64*
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9640 = getelementptr inbounds %struct.GPR, %struct.GPR* %9639, i32 0, i32 15
  %9641 = getelementptr inbounds %struct.Reg, %struct.Reg* %9640, i32 0, i32 0
  %RBP.i72 = bitcast %union.anon* %9641 to i64*
  %9642 = load i64, i64* %RBP.i72
  %9643 = sub i64 %9642, 224
  %9644 = load i64, i64* %PC.i70
  %9645 = add i64 %9644, 7
  store i64 %9645, i64* %PC.i70
  %9646 = inttoptr i64 %9643 to i64*
  %9647 = load i64, i64* %9646
  store i64 %9647, i64* %RDI.i71, align 8
  store %struct.Memory* %loadMem_41397e, %struct.Memory** %MEMORY
  %loadMem_413985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9649 = getelementptr inbounds %struct.GPR, %struct.GPR* %9648, i32 0, i32 33
  %9650 = getelementptr inbounds %struct.Reg, %struct.Reg* %9649, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %9650 to i64*
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9652 = getelementptr inbounds %struct.GPR, %struct.GPR* %9651, i32 0, i32 7
  %9653 = getelementptr inbounds %struct.Reg, %struct.Reg* %9652, i32 0, i32 0
  %RDX.i68 = bitcast %union.anon* %9653 to i64*
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9655 = getelementptr inbounds %struct.GPR, %struct.GPR* %9654, i32 0, i32 11
  %9656 = getelementptr inbounds %struct.Reg, %struct.Reg* %9655, i32 0, i32 0
  %RDI.i69 = bitcast %union.anon* %9656 to i64*
  %9657 = load i64, i64* %RDI.i69
  %9658 = load i64, i64* %RDX.i68
  %9659 = load i64, i64* %PC.i67
  %9660 = add i64 %9659, 3
  store i64 %9660, i64* %PC.i67
  %9661 = and i64 %9658, %9657
  store i64 %9661, i64* %RDI.i69, align 8
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9662, align 1
  %9663 = trunc i64 %9661 to i32
  %9664 = and i32 %9663, 255
  %9665 = call i32 @llvm.ctpop.i32(i32 %9664)
  %9666 = trunc i32 %9665 to i8
  %9667 = and i8 %9666, 1
  %9668 = xor i8 %9667, 1
  %9669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9668, i8* %9669, align 1
  %9670 = icmp eq i64 %9661, 0
  %9671 = zext i1 %9670 to i8
  %9672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9671, i8* %9672, align 1
  %9673 = lshr i64 %9661, 63
  %9674 = trunc i64 %9673 to i8
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9674, i8* %9675, align 1
  %9676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9676, align 1
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9677, align 1
  store %struct.Memory* %loadMem_413985, %struct.Memory** %MEMORY
  %loadMem_413988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9679 = getelementptr inbounds %struct.GPR, %struct.GPR* %9678, i32 0, i32 33
  %9680 = getelementptr inbounds %struct.Reg, %struct.Reg* %9679, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %9680 to i64*
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9682 = getelementptr inbounds %struct.GPR, %struct.GPR* %9681, i32 0, i32 1
  %9683 = getelementptr inbounds %struct.Reg, %struct.Reg* %9682, i32 0, i32 0
  %RAX.i65 = bitcast %union.anon* %9683 to i64*
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9685 = getelementptr inbounds %struct.GPR, %struct.GPR* %9684, i32 0, i32 15
  %9686 = getelementptr inbounds %struct.Reg, %struct.Reg* %9685, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %9686 to i64*
  %9687 = load i64, i64* %RBP.i66
  %9688 = sub i64 %9687, 64
  %9689 = load i64, i64* %PC.i64
  %9690 = add i64 %9689, 3
  store i64 %9690, i64* %PC.i64
  %9691 = inttoptr i64 %9688 to i32*
  %9692 = load i32, i32* %9691
  %9693 = zext i32 %9692 to i64
  store i64 %9693, i64* %RAX.i65, align 8
  store %struct.Memory* %loadMem_413988, %struct.Memory** %MEMORY
  %loadMem_41398b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9695 = getelementptr inbounds %struct.GPR, %struct.GPR* %9694, i32 0, i32 33
  %9696 = getelementptr inbounds %struct.Reg, %struct.Reg* %9695, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %9696 to i64*
  %9697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9698 = getelementptr inbounds %struct.GPR, %struct.GPR* %9697, i32 0, i32 1
  %9699 = getelementptr inbounds %struct.Reg, %struct.Reg* %9698, i32 0, i32 0
  %RAX.i62 = bitcast %union.anon* %9699 to i64*
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9701 = getelementptr inbounds %struct.GPR, %struct.GPR* %9700, i32 0, i32 15
  %9702 = getelementptr inbounds %struct.Reg, %struct.Reg* %9701, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %9702 to i64*
  %9703 = load i64, i64* %RAX.i62
  %9704 = load i64, i64* %RBP.i63
  %9705 = sub i64 %9704, 84
  %9706 = load i64, i64* %PC.i61
  %9707 = add i64 %9706, 3
  store i64 %9707, i64* %PC.i61
  %9708 = trunc i64 %9703 to i32
  %9709 = inttoptr i64 %9705 to i32*
  %9710 = load i32, i32* %9709
  %9711 = add i32 %9710, %9708
  %9712 = zext i32 %9711 to i64
  store i64 %9712, i64* %RAX.i62, align 8
  %9713 = icmp ult i32 %9711, %9708
  %9714 = icmp ult i32 %9711, %9710
  %9715 = or i1 %9713, %9714
  %9716 = zext i1 %9715 to i8
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9716, i8* %9717, align 1
  %9718 = and i32 %9711, 255
  %9719 = call i32 @llvm.ctpop.i32(i32 %9718)
  %9720 = trunc i32 %9719 to i8
  %9721 = and i8 %9720, 1
  %9722 = xor i8 %9721, 1
  %9723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9722, i8* %9723, align 1
  %9724 = xor i32 %9710, %9708
  %9725 = xor i32 %9724, %9711
  %9726 = lshr i32 %9725, 4
  %9727 = trunc i32 %9726 to i8
  %9728 = and i8 %9727, 1
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9728, i8* %9729, align 1
  %9730 = icmp eq i32 %9711, 0
  %9731 = zext i1 %9730 to i8
  %9732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9731, i8* %9732, align 1
  %9733 = lshr i32 %9711, 31
  %9734 = trunc i32 %9733 to i8
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9734, i8* %9735, align 1
  %9736 = lshr i32 %9708, 31
  %9737 = lshr i32 %9710, 31
  %9738 = xor i32 %9733, %9736
  %9739 = xor i32 %9733, %9737
  %9740 = add i32 %9738, %9739
  %9741 = icmp eq i32 %9740, 2
  %9742 = zext i1 %9741 to i8
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9742, i8* %9743, align 1
  store %struct.Memory* %loadMem_41398b, %struct.Memory** %MEMORY
  %loadMem_41398e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 33
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %9746 to i64*
  %9747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9748 = getelementptr inbounds %struct.GPR, %struct.GPR* %9747, i32 0, i32 1
  %9749 = getelementptr inbounds %struct.Reg, %struct.Reg* %9748, i32 0, i32 0
  %EAX.i59 = bitcast %union.anon* %9749 to i32*
  %9750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9751 = getelementptr inbounds %struct.GPR, %struct.GPR* %9750, i32 0, i32 1
  %9752 = getelementptr inbounds %struct.Reg, %struct.Reg* %9751, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %9752 to i64*
  %9753 = load i32, i32* %EAX.i59
  %9754 = zext i32 %9753 to i64
  %9755 = load i64, i64* %PC.i58
  %9756 = add i64 %9755, 2
  store i64 %9756, i64* %PC.i58
  %9757 = and i64 %9754, 4294967295
  store i64 %9757, i64* %RAX.i60, align 8
  store %struct.Memory* %loadMem_41398e, %struct.Memory** %MEMORY
  %loadMem_413990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9759 = getelementptr inbounds %struct.GPR, %struct.GPR* %9758, i32 0, i32 33
  %9760 = getelementptr inbounds %struct.Reg, %struct.Reg* %9759, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %9760 to i64*
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 1
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %EAX.i57 = bitcast %union.anon* %9763 to i32*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 5
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9766 to i64*
  %9767 = load i32, i32* %EAX.i57
  %9768 = zext i32 %9767 to i64
  %9769 = load i64, i64* %PC.i56
  %9770 = add i64 %9769, 2
  store i64 %9770, i64* %PC.i56
  %9771 = and i64 %9768, 4294967295
  store i64 %9771, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_413990, %struct.Memory** %MEMORY
  %loadMem_413992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9773 = getelementptr inbounds %struct.GPR, %struct.GPR* %9772, i32 0, i32 33
  %9774 = getelementptr inbounds %struct.Reg, %struct.Reg* %9773, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %9774 to i64*
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9776 = getelementptr inbounds %struct.GPR, %struct.GPR* %9775, i32 0, i32 5
  %9777 = getelementptr inbounds %struct.Reg, %struct.Reg* %9776, i32 0, i32 0
  %9778 = bitcast %union.anon* %9777 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9778, i32 0, i32 0
  %9779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9780 = getelementptr inbounds %struct.GPR, %struct.GPR* %9779, i32 0, i32 11
  %9781 = getelementptr inbounds %struct.Reg, %struct.Reg* %9780, i32 0, i32 0
  %RDI.i55 = bitcast %union.anon* %9781 to i64*
  %9782 = load i64, i64* %RDI.i55
  %9783 = load i8, i8* %CL.i
  %9784 = zext i8 %9783 to i64
  %9785 = load i64, i64* %PC.i54
  %9786 = add i64 %9785, 3
  store i64 %9786, i64* %PC.i54
  %9787 = trunc i64 %9784 to i6
  switch i6 %9787, label %9791 [
    i6 0, label %routine_shrq__cl___rdi.exit
    i6 1, label %9788
  ]

; <label>:9788:                                   ; preds = %routine_shll__cl___eax.exit
  %9789 = lshr i64 %9782, 63
  %9790 = trunc i64 %9789 to i8
  br label %9795

; <label>:9791:                                   ; preds = %routine_shll__cl___eax.exit
  %9792 = and i64 %9784, 63
  %9793 = add i64 %9792, -1
  %9794 = lshr i64 %9782, %9793
  br label %9795

; <label>:9795:                                   ; preds = %9791, %9788
  %9796 = phi i64 [ %9794, %9791 ], [ %9782, %9788 ]
  %9797 = phi i8 [ 0, %9791 ], [ %9790, %9788 ]
  %9798 = trunc i64 %9796 to i8
  %9799 = and i8 %9798, 1
  %9800 = lshr i64 %9796, 1
  store i64 %9800, i64* %RDI.i55, align 8
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9799, i8* %9801, align 1
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9803 = trunc i64 %9800 to i32
  %9804 = and i32 %9803, 255
  %9805 = call i32 @llvm.ctpop.i32(i32 %9804)
  %9806 = trunc i32 %9805 to i8
  %9807 = and i8 %9806, 1
  %9808 = xor i8 %9807, 1
  store i8 %9808, i8* %9802, align 1
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9809, align 1
  %9810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9811 = icmp eq i64 %9800, 0
  %9812 = zext i1 %9811 to i8
  store i8 %9812, i8* %9810, align 1
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9813, align 1
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9797, i8* %9814, align 1
  br label %routine_shrq__cl___rdi.exit

routine_shrq__cl___rdi.exit:                      ; preds = %routine_shll__cl___eax.exit, %9795
  store %struct.Memory* %loadMem_413992, %struct.Memory** %MEMORY
  %loadMem_413995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9816 = getelementptr inbounds %struct.GPR, %struct.GPR* %9815, i32 0, i32 33
  %9817 = getelementptr inbounds %struct.Reg, %struct.Reg* %9816, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %9817 to i64*
  %9818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9819 = getelementptr inbounds %struct.GPR, %struct.GPR* %9818, i32 0, i32 11
  %9820 = getelementptr inbounds %struct.Reg, %struct.Reg* %9819, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %9820 to i32*
  %9821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9822 = getelementptr inbounds %struct.GPR, %struct.GPR* %9821, i32 0, i32 1
  %9823 = getelementptr inbounds %struct.Reg, %struct.Reg* %9822, i32 0, i32 0
  %RAX.i53 = bitcast %union.anon* %9823 to i64*
  %9824 = load i32, i32* %EDI.i
  %9825 = zext i32 %9824 to i64
  %9826 = load i64, i64* %PC.i52
  %9827 = add i64 %9826, 2
  store i64 %9827, i64* %PC.i52
  %9828 = and i64 %9825, 4294967295
  store i64 %9828, i64* %RAX.i53, align 8
  store %struct.Memory* %loadMem_413995, %struct.Memory** %MEMORY
  %loadMem_413997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9830 = getelementptr inbounds %struct.GPR, %struct.GPR* %9829, i32 0, i32 33
  %9831 = getelementptr inbounds %struct.Reg, %struct.Reg* %9830, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %9831 to i64*
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9833 = getelementptr inbounds %struct.GPR, %struct.GPR* %9832, i32 0, i32 1
  %9834 = getelementptr inbounds %struct.Reg, %struct.Reg* %9833, i32 0, i32 0
  %EAX.i50 = bitcast %union.anon* %9834 to i32*
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9836 = getelementptr inbounds %struct.GPR, %struct.GPR* %9835, i32 0, i32 15
  %9837 = getelementptr inbounds %struct.Reg, %struct.Reg* %9836, i32 0, i32 0
  %RBP.i51 = bitcast %union.anon* %9837 to i64*
  %9838 = load i64, i64* %RBP.i51
  %9839 = sub i64 %9838, 76
  %9840 = load i32, i32* %EAX.i50
  %9841 = zext i32 %9840 to i64
  %9842 = load i64, i64* %PC.i49
  %9843 = add i64 %9842, 3
  store i64 %9843, i64* %PC.i49
  %9844 = inttoptr i64 %9839 to i32*
  store i32 %9840, i32* %9844
  store %struct.Memory* %loadMem_413997, %struct.Memory** %MEMORY
  br label %block_.L_41399a

block_.L_41399a:                                  ; preds = %routine_shrq__cl___rdi.exit, %block_413935
  %loadMem_41399a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9846 = getelementptr inbounds %struct.GPR, %struct.GPR* %9845, i32 0, i32 33
  %9847 = getelementptr inbounds %struct.Reg, %struct.Reg* %9846, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %9847 to i64*
  %9848 = load i64, i64* %PC.i48
  %9849 = add i64 %9848, 5
  %9850 = load i64, i64* %PC.i48
  %9851 = add i64 %9850, 5
  store i64 %9851, i64* %PC.i48
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9849, i64* %9852, align 8
  store %struct.Memory* %loadMem_41399a, %struct.Memory** %MEMORY
  br label %block_.L_41399f

block_.L_41399f:                                  ; preds = %block_.L_41399a, %block_.L_413904
  %loadMem_41399f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9854 = getelementptr inbounds %struct.GPR, %struct.GPR* %9853, i32 0, i32 33
  %9855 = getelementptr inbounds %struct.Reg, %struct.Reg* %9854, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %9855 to i64*
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9857 = getelementptr inbounds %struct.GPR, %struct.GPR* %9856, i32 0, i32 1
  %9858 = getelementptr inbounds %struct.Reg, %struct.Reg* %9857, i32 0, i32 0
  %RAX.i46 = bitcast %union.anon* %9858 to i64*
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 15
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %RBP.i47 = bitcast %union.anon* %9861 to i64*
  %9862 = load i64, i64* %RBP.i47
  %9863 = sub i64 %9862, 72
  %9864 = load i64, i64* %PC.i45
  %9865 = add i64 %9864, 3
  store i64 %9865, i64* %PC.i45
  %9866 = inttoptr i64 %9863 to i32*
  %9867 = load i32, i32* %9866
  %9868 = zext i32 %9867 to i64
  store i64 %9868, i64* %RAX.i46, align 8
  store %struct.Memory* %loadMem_41399f, %struct.Memory** %MEMORY
  %loadMem_4139a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9870 = getelementptr inbounds %struct.GPR, %struct.GPR* %9869, i32 0, i32 33
  %9871 = getelementptr inbounds %struct.Reg, %struct.Reg* %9870, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %9871 to i64*
  %9872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9873 = getelementptr inbounds %struct.GPR, %struct.GPR* %9872, i32 0, i32 1
  %9874 = getelementptr inbounds %struct.Reg, %struct.Reg* %9873, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %9874 to i64*
  %9875 = load i64, i64* %RAX.i44
  %9876 = load i64, i64* %PC.i43
  %9877 = add i64 %9876, 2
  store i64 %9877, i64* %PC.i43
  %9878 = trunc i64 %9875 to i32
  %9879 = shl i32 %9878, 1
  %9880 = icmp slt i32 %9878, 0
  %9881 = icmp slt i32 %9879, 0
  %9882 = xor i1 %9880, %9881
  %9883 = zext i32 %9879 to i64
  store i64 %9883, i64* %RAX.i44, align 8
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9885 = zext i1 %9880 to i8
  store i8 %9885, i8* %9884, align 1
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9887 = and i32 %9879, 254
  %9888 = call i32 @llvm.ctpop.i32(i32 %9887)
  %9889 = trunc i32 %9888 to i8
  %9890 = and i8 %9889, 1
  %9891 = xor i8 %9890, 1
  store i8 %9891, i8* %9886, align 1
  %9892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9892, align 1
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9894 = icmp eq i32 %9879, 0
  %9895 = zext i1 %9894 to i8
  store i8 %9895, i8* %9893, align 1
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9897 = lshr i32 %9879, 31
  %9898 = trunc i32 %9897 to i8
  store i8 %9898, i8* %9896, align 1
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9900 = zext i1 %9882 to i8
  store i8 %9900, i8* %9899, align 1
  store %struct.Memory* %loadMem_4139a2, %struct.Memory** %MEMORY
  %loadMem_4139a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9902 = getelementptr inbounds %struct.GPR, %struct.GPR* %9901, i32 0, i32 33
  %9903 = getelementptr inbounds %struct.Reg, %struct.Reg* %9902, i32 0, i32 0
  %PC.i40 = bitcast %union.anon* %9903 to i64*
  %9904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9905 = getelementptr inbounds %struct.GPR, %struct.GPR* %9904, i32 0, i32 1
  %9906 = getelementptr inbounds %struct.Reg, %struct.Reg* %9905, i32 0, i32 0
  %RAX.i41 = bitcast %union.anon* %9906 to i64*
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9908 = getelementptr inbounds %struct.GPR, %struct.GPR* %9907, i32 0, i32 15
  %9909 = getelementptr inbounds %struct.Reg, %struct.Reg* %9908, i32 0, i32 0
  %RBP.i42 = bitcast %union.anon* %9909 to i64*
  %9910 = load i64, i64* %RAX.i41
  %9911 = load i64, i64* %RBP.i42
  %9912 = sub i64 %9911, 76
  %9913 = load i64, i64* %PC.i40
  %9914 = add i64 %9913, 3
  store i64 %9914, i64* %PC.i40
  %9915 = trunc i64 %9910 to i32
  %9916 = inttoptr i64 %9912 to i32*
  %9917 = load i32, i32* %9916
  %9918 = add i32 %9917, %9915
  %9919 = zext i32 %9918 to i64
  store i64 %9919, i64* %RAX.i41, align 8
  %9920 = icmp ult i32 %9918, %9915
  %9921 = icmp ult i32 %9918, %9917
  %9922 = or i1 %9920, %9921
  %9923 = zext i1 %9922 to i8
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9923, i8* %9924, align 1
  %9925 = and i32 %9918, 255
  %9926 = call i32 @llvm.ctpop.i32(i32 %9925)
  %9927 = trunc i32 %9926 to i8
  %9928 = and i8 %9927, 1
  %9929 = xor i8 %9928, 1
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9929, i8* %9930, align 1
  %9931 = xor i32 %9917, %9915
  %9932 = xor i32 %9931, %9918
  %9933 = lshr i32 %9932, 4
  %9934 = trunc i32 %9933 to i8
  %9935 = and i8 %9934, 1
  %9936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9935, i8* %9936, align 1
  %9937 = icmp eq i32 %9918, 0
  %9938 = zext i1 %9937 to i8
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9938, i8* %9939, align 1
  %9940 = lshr i32 %9918, 31
  %9941 = trunc i32 %9940 to i8
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9941, i8* %9942, align 1
  %9943 = lshr i32 %9915, 31
  %9944 = lshr i32 %9917, 31
  %9945 = xor i32 %9940, %9943
  %9946 = xor i32 %9940, %9944
  %9947 = add i32 %9945, %9946
  %9948 = icmp eq i32 %9947, 2
  %9949 = zext i1 %9948 to i8
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9949, i8* %9950, align 1
  store %struct.Memory* %loadMem_4139a5, %struct.Memory** %MEMORY
  %loadMem_4139a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9952 = getelementptr inbounds %struct.GPR, %struct.GPR* %9951, i32 0, i32 33
  %9953 = getelementptr inbounds %struct.Reg, %struct.Reg* %9952, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %9953 to i64*
  %9954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9955 = getelementptr inbounds %struct.GPR, %struct.GPR* %9954, i32 0, i32 1
  %9956 = getelementptr inbounds %struct.Reg, %struct.Reg* %9955, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9956 to i32*
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9958 = getelementptr inbounds %struct.GPR, %struct.GPR* %9957, i32 0, i32 15
  %9959 = getelementptr inbounds %struct.Reg, %struct.Reg* %9958, i32 0, i32 0
  %RBP.i39 = bitcast %union.anon* %9959 to i64*
  %9960 = load i64, i64* %RBP.i39
  %9961 = sub i64 %9960, 80
  %9962 = load i32, i32* %EAX.i
  %9963 = zext i32 %9962 to i64
  %9964 = load i64, i64* %PC.i38
  %9965 = add i64 %9964, 3
  store i64 %9965, i64* %PC.i38
  %9966 = inttoptr i64 %9961 to i32*
  store i32 %9962, i32* %9966
  store %struct.Memory* %loadMem_4139a8, %struct.Memory** %MEMORY
  %loadMem_4139ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %9967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9968 = getelementptr inbounds %struct.GPR, %struct.GPR* %9967, i32 0, i32 33
  %9969 = getelementptr inbounds %struct.Reg, %struct.Reg* %9968, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %9969 to i64*
  %9970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9971 = getelementptr inbounds %struct.GPR, %struct.GPR* %9970, i32 0, i32 11
  %9972 = getelementptr inbounds %struct.Reg, %struct.Reg* %9971, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %9972 to i64*
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9974 = getelementptr inbounds %struct.GPR, %struct.GPR* %9973, i32 0, i32 15
  %9975 = getelementptr inbounds %struct.Reg, %struct.Reg* %9974, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %9975 to i64*
  %9976 = load i64, i64* %RBP.i37
  %9977 = sub i64 %9976, 16
  %9978 = load i64, i64* %PC.i36
  %9979 = add i64 %9978, 4
  store i64 %9979, i64* %PC.i36
  %9980 = inttoptr i64 %9977 to i64*
  %9981 = load i64, i64* %9980
  store i64 %9981, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4139ab, %struct.Memory** %MEMORY
  %loadMem_4139af = load %struct.Memory*, %struct.Memory** %MEMORY
  %9982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9983 = getelementptr inbounds %struct.GPR, %struct.GPR* %9982, i32 0, i32 33
  %9984 = getelementptr inbounds %struct.Reg, %struct.Reg* %9983, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %9984 to i64*
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9986 = getelementptr inbounds %struct.GPR, %struct.GPR* %9985, i32 0, i32 1
  %9987 = getelementptr inbounds %struct.Reg, %struct.Reg* %9986, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9987 to i64*
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 15
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %9990 to i64*
  %9991 = load i64, i64* %RBP.i35
  %9992 = sub i64 %9991, 24
  %9993 = load i64, i64* %PC.i34
  %9994 = add i64 %9993, 3
  store i64 %9994, i64* %PC.i34
  %9995 = inttoptr i64 %9992 to i32*
  %9996 = load i32, i32* %9995
  %9997 = zext i32 %9996 to i64
  store i64 %9997, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_4139af, %struct.Memory** %MEMORY
  %loadMem_4139b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9999 = getelementptr inbounds %struct.GPR, %struct.GPR* %9998, i32 0, i32 33
  %10000 = getelementptr inbounds %struct.Reg, %struct.Reg* %9999, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %10000 to i64*
  %10001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10002 = getelementptr inbounds %struct.GPR, %struct.GPR* %10001, i32 0, i32 1
  %10003 = getelementptr inbounds %struct.Reg, %struct.Reg* %10002, i32 0, i32 0
  %AX.i = bitcast %union.anon* %10003 to i16*
  %10004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10005 = getelementptr inbounds %struct.GPR, %struct.GPR* %10004, i32 0, i32 5
  %10006 = getelementptr inbounds %struct.Reg, %struct.Reg* %10005, i32 0, i32 0
  %CX.i33 = bitcast %union.anon* %10006 to i16*
  %10007 = load i16, i16* %AX.i
  %10008 = zext i16 %10007 to i64
  %10009 = load i64, i64* %PC.i32
  %10010 = add i64 %10009, 3
  store i64 %10010, i64* %PC.i32
  store i16 %10007, i16* %CX.i33, align 2
  store %struct.Memory* %loadMem_4139b2, %struct.Memory** %MEMORY
  %loadMem_4139b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10012 = getelementptr inbounds %struct.GPR, %struct.GPR* %10011, i32 0, i32 33
  %10013 = getelementptr inbounds %struct.Reg, %struct.Reg* %10012, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %10013 to i64*
  %10014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10015 = getelementptr inbounds %struct.GPR, %struct.GPR* %10014, i32 0, i32 7
  %10016 = getelementptr inbounds %struct.Reg, %struct.Reg* %10015, i32 0, i32 0
  %RDX.i31 = bitcast %union.anon* %10016 to i64*
  %10017 = load i64, i64* %PC.i30
  %10018 = add i64 %10017, 8
  store i64 %10018, i64* %PC.i30
  %10019 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10019, i64* %RDX.i31, align 8
  store %struct.Memory* %loadMem_4139b5, %struct.Memory** %MEMORY
  %loadMem_4139bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10021 = getelementptr inbounds %struct.GPR, %struct.GPR* %10020, i32 0, i32 33
  %10022 = getelementptr inbounds %struct.Reg, %struct.Reg* %10021, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %10022 to i64*
  %10023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10024 = getelementptr inbounds %struct.GPR, %struct.GPR* %10023, i32 0, i32 7
  %10025 = getelementptr inbounds %struct.Reg, %struct.Reg* %10024, i32 0, i32 0
  %RDX.i29 = bitcast %union.anon* %10025 to i64*
  %10026 = load i64, i64* %RDX.i29
  %10027 = add i64 %10026, 14160
  %10028 = load i64, i64* %PC.i28
  %10029 = add i64 %10028, 7
  store i64 %10029, i64* %PC.i28
  %10030 = inttoptr i64 %10027 to i64*
  %10031 = load i64, i64* %10030
  store i64 %10031, i64* %RDX.i29, align 8
  store %struct.Memory* %loadMem_4139bd, %struct.Memory** %MEMORY
  %loadMem_4139c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10033 = getelementptr inbounds %struct.GPR, %struct.GPR* %10032, i32 0, i32 33
  %10034 = getelementptr inbounds %struct.Reg, %struct.Reg* %10033, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %10034 to i64*
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10036 = getelementptr inbounds %struct.GPR, %struct.GPR* %10035, i32 0, i32 7
  %10037 = getelementptr inbounds %struct.Reg, %struct.Reg* %10036, i32 0, i32 0
  %RDX.i27 = bitcast %union.anon* %10037 to i64*
  %10038 = load i64, i64* %RDX.i27
  %10039 = add i64 %10038, 40
  %10040 = load i64, i64* %PC.i26
  %10041 = add i64 %10040, 4
  store i64 %10041, i64* %PC.i26
  %10042 = inttoptr i64 %10039 to i64*
  %10043 = load i64, i64* %10042
  store i64 %10043, i64* %RDX.i27, align 8
  store %struct.Memory* %loadMem_4139c4, %struct.Memory** %MEMORY
  %loadMem_4139c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10045 = getelementptr inbounds %struct.GPR, %struct.GPR* %10044, i32 0, i32 33
  %10046 = getelementptr inbounds %struct.Reg, %struct.Reg* %10045, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %10046 to i64*
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 7
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %RDX.i25 = bitcast %union.anon* %10049 to i64*
  %10050 = load i64, i64* %RDX.i25
  %10051 = load i64, i64* %PC.i24
  %10052 = add i64 %10051, 7
  store i64 %10052, i64* %PC.i24
  %10053 = add i64 288, %10050
  store i64 %10053, i64* %RDX.i25, align 8
  %10054 = icmp ult i64 %10053, %10050
  %10055 = icmp ult i64 %10053, 288
  %10056 = or i1 %10054, %10055
  %10057 = zext i1 %10056 to i8
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10057, i8* %10058, align 1
  %10059 = trunc i64 %10053 to i32
  %10060 = and i32 %10059, 255
  %10061 = call i32 @llvm.ctpop.i32(i32 %10060)
  %10062 = trunc i32 %10061 to i8
  %10063 = and i8 %10062, 1
  %10064 = xor i8 %10063, 1
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10064, i8* %10065, align 1
  %10066 = xor i64 288, %10050
  %10067 = xor i64 %10066, %10053
  %10068 = lshr i64 %10067, 4
  %10069 = trunc i64 %10068 to i8
  %10070 = and i8 %10069, 1
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10070, i8* %10071, align 1
  %10072 = icmp eq i64 %10053, 0
  %10073 = zext i1 %10072 to i8
  %10074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10073, i8* %10074, align 1
  %10075 = lshr i64 %10053, 63
  %10076 = trunc i64 %10075 to i8
  %10077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10076, i8* %10077, align 1
  %10078 = lshr i64 %10050, 63
  %10079 = xor i64 %10075, %10078
  %10080 = add i64 %10079, %10075
  %10081 = icmp eq i64 %10080, 2
  %10082 = zext i1 %10081 to i8
  %10083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10082, i8* %10083, align 1
  store %struct.Memory* %loadMem_4139c8, %struct.Memory** %MEMORY
  %loadMem_4139cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10085 = getelementptr inbounds %struct.GPR, %struct.GPR* %10084, i32 0, i32 33
  %10086 = getelementptr inbounds %struct.Reg, %struct.Reg* %10085, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %10086 to i64*
  %10087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10088 = getelementptr inbounds %struct.GPR, %struct.GPR* %10087, i32 0, i32 9
  %10089 = getelementptr inbounds %struct.Reg, %struct.Reg* %10088, i32 0, i32 0
  %RSI.i22 = bitcast %union.anon* %10089 to i64*
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10091 = getelementptr inbounds %struct.GPR, %struct.GPR* %10090, i32 0, i32 15
  %10092 = getelementptr inbounds %struct.Reg, %struct.Reg* %10091, i32 0, i32 0
  %RBP.i23 = bitcast %union.anon* %10092 to i64*
  %10093 = load i64, i64* %RBP.i23
  %10094 = sub i64 %10093, 20
  %10095 = load i64, i64* %PC.i21
  %10096 = add i64 %10095, 4
  store i64 %10096, i64* %PC.i21
  %10097 = inttoptr i64 %10094 to i32*
  %10098 = load i32, i32* %10097
  %10099 = sext i32 %10098 to i64
  store i64 %10099, i64* %RSI.i22, align 8
  store %struct.Memory* %loadMem_4139cf, %struct.Memory** %MEMORY
  %loadMem_4139d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 33
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %10102 to i64*
  %10103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10104 = getelementptr inbounds %struct.GPR, %struct.GPR* %10103, i32 0, i32 9
  %10105 = getelementptr inbounds %struct.Reg, %struct.Reg* %10104, i32 0, i32 0
  %RSI.i20 = bitcast %union.anon* %10105 to i64*
  %10106 = load i64, i64* %RSI.i20
  %10107 = mul i64 %10106, 4
  %10108 = add i64 %10107, 4926096
  %10109 = load i64, i64* %PC.i19
  %10110 = add i64 %10109, 8
  store i64 %10110, i64* %PC.i19
  %10111 = inttoptr i64 %10108 to i32*
  %10112 = load i32, i32* %10111
  %10113 = sext i32 %10112 to i64
  store i64 %10113, i64* %RSI.i20, align 8
  store %struct.Memory* %loadMem_4139d3, %struct.Memory** %MEMORY
  %loadMem_4139db = load %struct.Memory*, %struct.Memory** %MEMORY
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10115 = getelementptr inbounds %struct.GPR, %struct.GPR* %10114, i32 0, i32 33
  %10116 = getelementptr inbounds %struct.Reg, %struct.Reg* %10115, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %10116 to i64*
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10118 = getelementptr inbounds %struct.GPR, %struct.GPR* %10117, i32 0, i32 9
  %10119 = getelementptr inbounds %struct.Reg, %struct.Reg* %10118, i32 0, i32 0
  %RSI.i18 = bitcast %union.anon* %10119 to i64*
  %10120 = load i64, i64* %RSI.i18
  %10121 = load i64, i64* %PC.i17
  %10122 = add i64 %10121, 4
  store i64 %10122, i64* %PC.i17
  %10123 = shl i64 %10120, 5
  %10124 = icmp slt i64 %10123, 0
  %10125 = shl i64 %10123, 1
  store i64 %10125, i64* %RSI.i18, align 8
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10127 = zext i1 %10124 to i8
  store i8 %10127, i8* %10126, align 1
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10129 = trunc i64 %10125 to i32
  %10130 = and i32 %10129, 254
  %10131 = call i32 @llvm.ctpop.i32(i32 %10130)
  %10132 = trunc i32 %10131 to i8
  %10133 = and i8 %10132, 1
  %10134 = xor i8 %10133, 1
  store i8 %10134, i8* %10128, align 1
  %10135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10135, align 1
  %10136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10137 = icmp eq i64 %10125, 0
  %10138 = zext i1 %10137 to i8
  store i8 %10138, i8* %10136, align 1
  %10139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10140 = lshr i64 %10125, 63
  %10141 = trunc i64 %10140 to i8
  store i8 %10141, i8* %10139, align 1
  %10142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10142, align 1
  store %struct.Memory* %loadMem_4139db, %struct.Memory** %MEMORY
  %loadMem_4139df = load %struct.Memory*, %struct.Memory** %MEMORY
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10144 = getelementptr inbounds %struct.GPR, %struct.GPR* %10143, i32 0, i32 33
  %10145 = getelementptr inbounds %struct.Reg, %struct.Reg* %10144, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %10145 to i64*
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10147 = getelementptr inbounds %struct.GPR, %struct.GPR* %10146, i32 0, i32 7
  %10148 = getelementptr inbounds %struct.Reg, %struct.Reg* %10147, i32 0, i32 0
  %RDX.i15 = bitcast %union.anon* %10148 to i64*
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10150 = getelementptr inbounds %struct.GPR, %struct.GPR* %10149, i32 0, i32 9
  %10151 = getelementptr inbounds %struct.Reg, %struct.Reg* %10150, i32 0, i32 0
  %RSI.i16 = bitcast %union.anon* %10151 to i64*
  %10152 = load i64, i64* %RDX.i15
  %10153 = load i64, i64* %RSI.i16
  %10154 = load i64, i64* %PC.i14
  %10155 = add i64 %10154, 3
  store i64 %10155, i64* %PC.i14
  %10156 = add i64 %10153, %10152
  store i64 %10156, i64* %RDX.i15, align 8
  %10157 = icmp ult i64 %10156, %10152
  %10158 = icmp ult i64 %10156, %10153
  %10159 = or i1 %10157, %10158
  %10160 = zext i1 %10159 to i8
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10160, i8* %10161, align 1
  %10162 = trunc i64 %10156 to i32
  %10163 = and i32 %10162, 255
  %10164 = call i32 @llvm.ctpop.i32(i32 %10163)
  %10165 = trunc i32 %10164 to i8
  %10166 = and i8 %10165, 1
  %10167 = xor i8 %10166, 1
  %10168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10167, i8* %10168, align 1
  %10169 = xor i64 %10153, %10152
  %10170 = xor i64 %10169, %10156
  %10171 = lshr i64 %10170, 4
  %10172 = trunc i64 %10171 to i8
  %10173 = and i8 %10172, 1
  %10174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10173, i8* %10174, align 1
  %10175 = icmp eq i64 %10156, 0
  %10176 = zext i1 %10175 to i8
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10176, i8* %10177, align 1
  %10178 = lshr i64 %10156, 63
  %10179 = trunc i64 %10178 to i8
  %10180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10179, i8* %10180, align 1
  %10181 = lshr i64 %10152, 63
  %10182 = lshr i64 %10153, 63
  %10183 = xor i64 %10178, %10181
  %10184 = xor i64 %10178, %10182
  %10185 = add i64 %10183, %10184
  %10186 = icmp eq i64 %10185, 2
  %10187 = zext i1 %10186 to i8
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10187, i8* %10188, align 1
  store %struct.Memory* %loadMem_4139df, %struct.Memory** %MEMORY
  %loadMem_4139e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10190 = getelementptr inbounds %struct.GPR, %struct.GPR* %10189, i32 0, i32 33
  %10191 = getelementptr inbounds %struct.Reg, %struct.Reg* %10190, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %10191 to i64*
  %10192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10193 = getelementptr inbounds %struct.GPR, %struct.GPR* %10192, i32 0, i32 9
  %10194 = getelementptr inbounds %struct.Reg, %struct.Reg* %10193, i32 0, i32 0
  %RSI.i12 = bitcast %union.anon* %10194 to i64*
  %10195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10196 = getelementptr inbounds %struct.GPR, %struct.GPR* %10195, i32 0, i32 15
  %10197 = getelementptr inbounds %struct.Reg, %struct.Reg* %10196, i32 0, i32 0
  %RBP.i13 = bitcast %union.anon* %10197 to i64*
  %10198 = load i64, i64* %RBP.i13
  %10199 = sub i64 %10198, 80
  %10200 = load i64, i64* %PC.i11
  %10201 = add i64 %10200, 4
  store i64 %10201, i64* %PC.i11
  %10202 = inttoptr i64 %10199 to i32*
  %10203 = load i32, i32* %10202
  %10204 = sext i32 %10203 to i64
  store i64 %10204, i64* %RSI.i12, align 8
  store %struct.Memory* %loadMem_4139e2, %struct.Memory** %MEMORY
  %loadMem_4139e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10206 = getelementptr inbounds %struct.GPR, %struct.GPR* %10205, i32 0, i32 33
  %10207 = getelementptr inbounds %struct.Reg, %struct.Reg* %10206, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %10207 to i64*
  %10208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10209 = getelementptr inbounds %struct.GPR, %struct.GPR* %10208, i32 0, i32 9
  %10210 = getelementptr inbounds %struct.Reg, %struct.Reg* %10209, i32 0, i32 0
  %RSI.i10 = bitcast %union.anon* %10210 to i64*
  %10211 = load i64, i64* %RSI.i10
  %10212 = load i64, i64* %PC.i9
  %10213 = add i64 %10212, 4
  store i64 %10213, i64* %PC.i9
  %10214 = shl i64 %10211, 3
  %10215 = icmp slt i64 %10214, 0
  %10216 = shl i64 %10214, 1
  store i64 %10216, i64* %RSI.i10, align 8
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10218 = zext i1 %10215 to i8
  store i8 %10218, i8* %10217, align 1
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10220 = trunc i64 %10216 to i32
  %10221 = and i32 %10220, 254
  %10222 = call i32 @llvm.ctpop.i32(i32 %10221)
  %10223 = trunc i32 %10222 to i8
  %10224 = and i8 %10223, 1
  %10225 = xor i8 %10224, 1
  store i8 %10225, i8* %10219, align 1
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10226, align 1
  %10227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10228 = icmp eq i64 %10216, 0
  %10229 = zext i1 %10228 to i8
  store i8 %10229, i8* %10227, align 1
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10231 = lshr i64 %10216, 63
  %10232 = trunc i64 %10231 to i8
  store i8 %10232, i8* %10230, align 1
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10233, align 1
  store %struct.Memory* %loadMem_4139e6, %struct.Memory** %MEMORY
  %loadMem_4139ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10235 = getelementptr inbounds %struct.GPR, %struct.GPR* %10234, i32 0, i32 33
  %10236 = getelementptr inbounds %struct.Reg, %struct.Reg* %10235, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %10236 to i64*
  %10237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10238 = getelementptr inbounds %struct.GPR, %struct.GPR* %10237, i32 0, i32 7
  %10239 = getelementptr inbounds %struct.Reg, %struct.Reg* %10238, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %10239 to i64*
  %10240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10241 = getelementptr inbounds %struct.GPR, %struct.GPR* %10240, i32 0, i32 9
  %10242 = getelementptr inbounds %struct.Reg, %struct.Reg* %10241, i32 0, i32 0
  %RSI.i8 = bitcast %union.anon* %10242 to i64*
  %10243 = load i64, i64* %RDX.i
  %10244 = load i64, i64* %RSI.i8
  %10245 = load i64, i64* %PC.i7
  %10246 = add i64 %10245, 3
  store i64 %10246, i64* %PC.i7
  %10247 = add i64 %10244, %10243
  store i64 %10247, i64* %RDX.i, align 8
  %10248 = icmp ult i64 %10247, %10243
  %10249 = icmp ult i64 %10247, %10244
  %10250 = or i1 %10248, %10249
  %10251 = zext i1 %10250 to i8
  %10252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10251, i8* %10252, align 1
  %10253 = trunc i64 %10247 to i32
  %10254 = and i32 %10253, 255
  %10255 = call i32 @llvm.ctpop.i32(i32 %10254)
  %10256 = trunc i32 %10255 to i8
  %10257 = and i8 %10256, 1
  %10258 = xor i8 %10257, 1
  %10259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10258, i8* %10259, align 1
  %10260 = xor i64 %10244, %10243
  %10261 = xor i64 %10260, %10247
  %10262 = lshr i64 %10261, 4
  %10263 = trunc i64 %10262 to i8
  %10264 = and i8 %10263, 1
  %10265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10264, i8* %10265, align 1
  %10266 = icmp eq i64 %10247, 0
  %10267 = zext i1 %10266 to i8
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10267, i8* %10268, align 1
  %10269 = lshr i64 %10247, 63
  %10270 = trunc i64 %10269 to i8
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10270, i8* %10271, align 1
  %10272 = lshr i64 %10243, 63
  %10273 = lshr i64 %10244, 63
  %10274 = xor i64 %10269, %10272
  %10275 = xor i64 %10269, %10273
  %10276 = add i64 %10274, %10275
  %10277 = icmp eq i64 %10276, 2
  %10278 = zext i1 %10277 to i8
  %10279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10278, i8* %10279, align 1
  store %struct.Memory* %loadMem_4139ea, %struct.Memory** %MEMORY
  %loadMem_4139ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10281 = getelementptr inbounds %struct.GPR, %struct.GPR* %10280, i32 0, i32 33
  %10282 = getelementptr inbounds %struct.Reg, %struct.Reg* %10281, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %10282 to i64*
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10284 = getelementptr inbounds %struct.GPR, %struct.GPR* %10283, i32 0, i32 5
  %10285 = getelementptr inbounds %struct.Reg, %struct.Reg* %10284, i32 0, i32 0
  %CX.i = bitcast %union.anon* %10285 to i16*
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10287 = getelementptr inbounds %struct.GPR, %struct.GPR* %10286, i32 0, i32 9
  %10288 = getelementptr inbounds %struct.Reg, %struct.Reg* %10287, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %10288 to i64*
  %10289 = load i16, i16* %CX.i
  %10290 = zext i16 %10289 to i64
  %10291 = load i64, i64* %PC.i6
  %10292 = add i64 %10291, 3
  store i64 %10292, i64* %PC.i6
  %10293 = trunc i64 %10290 to i32
  %10294 = shl i32 %10293, 16
  %10295 = ashr exact i32 %10294, 16
  %10296 = zext i32 %10295 to i64
  store i64 %10296, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_4139ed, %struct.Memory** %MEMORY
  %loadMem1_4139f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10298 = getelementptr inbounds %struct.GPR, %struct.GPR* %10297, i32 0, i32 33
  %10299 = getelementptr inbounds %struct.Reg, %struct.Reg* %10298, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %10299 to i64*
  %10300 = load i64, i64* %PC.i5
  %10301 = add i64 %10300, -73808
  %10302 = load i64, i64* %PC.i5
  %10303 = add i64 %10302, 5
  %10304 = load i64, i64* %PC.i5
  %10305 = add i64 %10304, 5
  store i64 %10305, i64* %PC.i5
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10307 = load i64, i64* %10306, align 8
  %10308 = add i64 %10307, -8
  %10309 = inttoptr i64 %10308 to i64*
  store i64 %10303, i64* %10309
  store i64 %10308, i64* %10306, align 8
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10301, i64* %10310, align 8
  store %struct.Memory* %loadMem1_4139f0, %struct.Memory** %MEMORY
  %loadMem2_4139f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4139f0 = load i64, i64* %3
  %call2_4139f0 = call %struct.Memory* @sub_4019a0.biari_encode_symbol(%struct.State* %0, i64 %loadPC_4139f0, %struct.Memory* %loadMem2_4139f0)
  store %struct.Memory* %call2_4139f0, %struct.Memory** %MEMORY
  br label %block_.L_4139f5

block_.L_4139f5:                                  ; preds = %block_.L_41399f, %block_.L_41384d
  %loadMem_4139f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10312 = getelementptr inbounds %struct.GPR, %struct.GPR* %10311, i32 0, i32 33
  %10313 = getelementptr inbounds %struct.Reg, %struct.Reg* %10312, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %10313 to i64*
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10315 = getelementptr inbounds %struct.GPR, %struct.GPR* %10314, i32 0, i32 13
  %10316 = getelementptr inbounds %struct.Reg, %struct.Reg* %10315, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %10316 to i64*
  %10317 = load i64, i64* %RSP.i
  %10318 = load i64, i64* %PC.i4
  %10319 = add i64 %10318, 7
  store i64 %10319, i64* %PC.i4
  %10320 = add i64 224, %10317
  store i64 %10320, i64* %RSP.i, align 8
  %10321 = icmp ult i64 %10320, %10317
  %10322 = icmp ult i64 %10320, 224
  %10323 = or i1 %10321, %10322
  %10324 = zext i1 %10323 to i8
  %10325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10324, i8* %10325, align 1
  %10326 = trunc i64 %10320 to i32
  %10327 = and i32 %10326, 255
  %10328 = call i32 @llvm.ctpop.i32(i32 %10327)
  %10329 = trunc i32 %10328 to i8
  %10330 = and i8 %10329, 1
  %10331 = xor i8 %10330, 1
  %10332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10331, i8* %10332, align 1
  %10333 = xor i64 224, %10317
  %10334 = xor i64 %10333, %10320
  %10335 = lshr i64 %10334, 4
  %10336 = trunc i64 %10335 to i8
  %10337 = and i8 %10336, 1
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10337, i8* %10338, align 1
  %10339 = icmp eq i64 %10320, 0
  %10340 = zext i1 %10339 to i8
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10340, i8* %10341, align 1
  %10342 = lshr i64 %10320, 63
  %10343 = trunc i64 %10342 to i8
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10343, i8* %10344, align 1
  %10345 = lshr i64 %10317, 63
  %10346 = xor i64 %10342, %10345
  %10347 = add i64 %10346, %10342
  %10348 = icmp eq i64 %10347, 2
  %10349 = zext i1 %10348 to i8
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10349, i8* %10350, align 1
  store %struct.Memory* %loadMem_4139f5, %struct.Memory** %MEMORY
  %loadMem_4139fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10352 = getelementptr inbounds %struct.GPR, %struct.GPR* %10351, i32 0, i32 33
  %10353 = getelementptr inbounds %struct.Reg, %struct.Reg* %10352, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10353 to i64*
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10355 = getelementptr inbounds %struct.GPR, %struct.GPR* %10354, i32 0, i32 15
  %10356 = getelementptr inbounds %struct.Reg, %struct.Reg* %10355, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10356 to i64*
  %10357 = load i64, i64* %PC.i2
  %10358 = add i64 %10357, 1
  store i64 %10358, i64* %PC.i2
  %10359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10360 = load i64, i64* %10359, align 8
  %10361 = add i64 %10360, 8
  %10362 = inttoptr i64 %10360 to i64*
  %10363 = load i64, i64* %10362
  store i64 %10363, i64* %RBP.i3, align 8
  store i64 %10361, i64* %10359, align 8
  store %struct.Memory* %loadMem_4139fc, %struct.Memory** %MEMORY
  %loadMem_4139fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10365 = getelementptr inbounds %struct.GPR, %struct.GPR* %10364, i32 0, i32 33
  %10366 = getelementptr inbounds %struct.Reg, %struct.Reg* %10365, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10366 to i64*
  %10367 = load i64, i64* %PC.i1
  %10368 = add i64 %10367, 1
  store i64 %10368, i64* %PC.i1
  %10369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10371 = load i64, i64* %10370, align 8
  %10372 = inttoptr i64 %10371 to i64*
  %10373 = load i64, i64* %10372
  store i64 %10373, i64* %10369, align 8
  %10374 = add i64 %10371, 8
  store i64 %10374, i64* %10370, align 8
  store %struct.Memory* %loadMem_4139fd, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4139fd
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0xe0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 224
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 224
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 224, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x89__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 137
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41318e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 5
  %16 = icmp ult i32 %14, 5
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 5
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sete__al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x89__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 137
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl___dl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %DL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = and i64 1, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %AL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RCX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x7__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 7
  %16 = icmp ult i32 %14, 7
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 7
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl__MINUS0x8a__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 138
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4131d7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x54__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_setne__cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorb__0xff___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %CL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = xor i64 255, %11
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %CL, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = trunc i64 %14 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i8 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i8 %15, 7
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x8a__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 138
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x8a__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 138
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl__MINUS0x8b__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 139
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41320e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x8b__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 139
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x8b__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 139
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x6__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 6
  %16 = icmp ult i32 %14, 6
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 6
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 140
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41324d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 140
  %15 = load i8, i8* %AL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x9__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 9
  %16 = icmp ult i32 %14, 9
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 9
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x8c__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 140
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl__MINUS0x8d__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 141
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413287(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x8d__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 141
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x8d__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 141
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__dl__MINUS0x8e__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 142
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4132be(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__MINUS0x8e__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 142
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i8*
  store i8 %15, i8* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb_MINUS0x8e__rbp____al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 142
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i8*
  %18 = load i8, i8* %17
  store i8 %18, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4132ea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413300(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4c__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41330d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_413334(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41334a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x48__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413357(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413377(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413400(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413391(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4133f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4133ab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x11___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4133e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4133c5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x12___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4133dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x17___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x13___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RAX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x9c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x50__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = add i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RCX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_413450(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4134da(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4294967295, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__r8d___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = xor i64 %13, %11
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %9, align 8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %19, align 1
  %20 = and i32 %17, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %17, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %17, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x70__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.getLuma4x4Neighbour(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  store i64 4294967295, i64* %9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x88__rbp____r9(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %R9, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4134d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4134b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 1
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4134d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x7c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 124
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x80__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4134d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41356e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.getChroma4x4Neighbour(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_413535(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413569(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41354b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = shl i32 %12, 1
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 0
  %16 = xor i1 %14, %15
  %17 = zext i32 %13 to i64
  store i64 %17, i64* %RAX, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %14 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %13, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %13, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %13, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413564(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413569(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413585(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41363d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4135a6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413631(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4135c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413625(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4135da(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413619(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4135fb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x13___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 19, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 19
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 19, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41360d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x17___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 23, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 23
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 23, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xbc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4137ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4136e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RDX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_orq_0x1f8__rdi____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 504
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = or i64 %18, %12
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = trunc i64 %19 to i32
  %22 = and i32 %21, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i64 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %19, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__0x1f8__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 504
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 4, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 4
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 4, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x5___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 5, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 5
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 5, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__cl___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RAX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i5
  switch i5 %18, label %25 [
    i5 0, label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i5 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = trunc i64 %13 to i32
  %21 = shl i32 %20, 1
  %22 = icmp slt i32 %20, 0
  %23 = icmp slt i32 %21, 0
  %24 = xor i1 %22, %23
  br label %34

; <label>:25:                                     ; preds = %block_400488
  %26 = and i64 %15, 31
  %27 = add i64 %26, 4294967295
  %28 = and i64 %13, 4294967295
  %29 = and i64 %27, 4294967295
  %30 = shl i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = shl i32 %31, 1
  br label %34

; <label>:34:                                     ; preds = %25, %19
  %35 = phi i1 [ %22, %19 ], [ %32, %25 ]
  %36 = phi i1 [ %24, %19 ], [ false, %25 ]
  %37 = phi i32 [ %21, %19 ], [ %33, %25 ]
  %38 = zext i32 %37 to i64
  store i64 %38, i64* %RAX, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %40 = zext i1 %35 to i8
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %42 = and i32 %37, 254
  %43 = call i32 @llvm.ctpop.i32(i32 %42)
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  store i8 %46, i8* %41, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %49 = icmp eq i32 %37, 0
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %52 = lshr i32 %37, 31
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %51, align 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %55 = zext i1 %36 to i8
  store i8 %55, i8* %54, align 1
  br label %_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %34
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4137a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_413730(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4137a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41377f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41379e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_orq_0x1f8__rsi____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 504
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = or i64 %18, %12
  store i64 %19, i64* %RDX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = trunc i64 %19 to i32
  %22 = and i32 %21, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i64 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %19, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__0x1f8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 504
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4137ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4137c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41384d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4137de(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413841(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4137f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413835(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413812(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413829(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xcc__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4139f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_413904(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x84__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xe__0x48__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 14
  %16 = icmp ult i32 %14, 14
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 14
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4138a3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 72
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4138ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3758__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 14168
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x84__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x278___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 632, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x1f8__rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 504
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xd8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_andq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = and i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17, align 1
  %18 = trunc i64 %16 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %16, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %16, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shrq__cl___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDI = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDI
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = trunc i64 %15 to i6
  switch i6 %18, label %22 [
    i6 0, label %_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i6 1, label %19
  ]

; <label>:19:                                     ; preds = %block_400488
  %20 = lshr i64 %13, 63
  %21 = trunc i64 %20 to i8
  br label %26

; <label>:22:                                     ; preds = %block_400488
  %23 = and i64 %15, 63
  %24 = add i64 %23, -1
  %25 = lshr i64 %13, %24
  br label %26

; <label>:26:                                     ; preds = %22, %19
  %27 = phi i64 [ %25, %22 ], [ %13, %19 ]
  %28 = phi i8 [ 0, %22 ], [ %21, %19 ]
  %29 = trunc i64 %27 to i8
  %30 = and i8 %29, 1
  %31 = lshr i64 %27, 1
  store i64 %31, i64* %RDI, align 8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %34 = trunc i64 %31 to i32
  %35 = and i32 %34, 255
  %36 = call i32 @llvm.ctpop.i32(i32 %35)
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 1
  %39 = xor i8 %38, 1
  store i8 %39, i8* %33, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %42 = icmp eq i64 %31, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %41, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %28, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit

_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit: ; preds = %block_400488, %26
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_413904(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41399f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x6c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_413941(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41399a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x6c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x54__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xe0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41399f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movw__ax___cx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %CX = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  store i16 %12, i16* %CX, align 2
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x3750__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 14160
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x28__rdx____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x120___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 288, %9
  store i64 %12, i64* %RDX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 288
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 288, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x4b2a90___rsi_4____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 4926096
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 5
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movswl__cx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = trunc i64 %13 to i32
  %17 = shl i32 %16, 16
  %18 = ashr exact i32 %17, 16
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.biari_encode_symbol(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0xe0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 224, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 224
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 224, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
