; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x24eb12__rip__type = type <{ [8 x i8] }>
%G_0x33cb1__rip__type = type <{ [8 x i8] }>
%G_0x33e6d__rip__type = type <{ [8 x i8] }>
%G_0x33ed2__rip__type = type <{ [8 x i8] }>
%G_0x33f02__rip__type = type <{ [8 x i8] }>
%G_0x33ff2__rip__type = type <{ [8 x i8] }>
%G_0x34045__rip__type = type <{ [8 x i8] }>
%G_0x34075__rip__type = type <{ [8 x i8] }>
%G_0x34169__rip__type = type <{ [8 x i8] }>
%G_0x341cf__rip__type = type <{ [8 x i8] }>
%G_0x341ff__rip__type = type <{ [8 x i8] }>
%G_0x342ef__rip__type = type <{ [8 x i8] }>
%G_0x343ba__rip__type = type <{ [8 x i8] }>
%G_0x34422__rip__type = type <{ [8 x i8] }>
%G_0x344bb__rip__type = type <{ [8 x i8] }>
%G_0x345fa__rip__type = type <{ [8 x i8] }>
%G_0x34662__rip__type = type <{ [8 x i8] }>
%G_0x34a48__rip__type = type <{ [8 x i8] }>
%G_0x34ba7__rip__type = type <{ [8 x i8] }>
%G_0x6cb8f8_type = type <{ [8 x i8] }>
%G_0x6cb900_type = type <{ [8 x i8] }>
%G_0x6cc5d8_type = type <{ [4 x i8] }>
%G_0x6cc5dc_type = type <{ [4 x i8] }>
%G_0x6cc5e0_type = type <{ [4 x i8] }>
%G_0x6cc5e4_type = type <{ [4 x i8] }>
%G_0x6cc5e8_type = type <{ [4 x i8] }>
%G_0x6ccaf0_type = type <{ [16 x i8] }>
%G_0x6ccf88_type = type <{ [16 x i8] }>
%G_0x6cd478_type = type <{ [8 x i8] }>
%G_0x6cea28_type = type <{ [8 x i8] }>
%G_0x6cea38_type = type <{ [8 x i8] }>
%G_0x6cea40_type = type <{ [8 x i8] }>
%G_0x6d0270_type = type <{ [8 x i8] }>
%G_0x6d1fb0_type = type <{ [8 x i8] }>
%G_0x6d45f0_type = type <{ [8 x i8] }>
%G_0x6d4680_type = type <{ [16 x i8] }>
%G_0x6f6f80_type = type <{ [16 x i8] }>
%G_0x6f80a0_type = type <{ [4 x i8] }>
%G_0x6f9350_type = type <{ [8 x i8] }>
%G_0x6f9688_type = type <{ [4 x i8] }>
%G_0x6f9690_type = type <{ [16 x i8] }>
%G_0x70f6d8_type = type <{ [8 x i8] }>
%G_0x710368_type = type <{ [8 x i8] }>
%G_0x710a48_type = type <{ [8 x i8] }>
%G_0x722b78_type = type <{ [4 x i8] }>
%G_0x722fd8_type = type <{ [4 x i8] }>
%G_0x722fe0_type = type <{ [8 x i8] }>
%G_0x723630_type = type <{ [8 x i8] }>
%G_0x724bd8_type = type <{ [8 x i8] }>
%G_0x725570_type = type <{ [8 x i8] }>
%G_0x726838_type = type <{ [16 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x24eb12__rip_ = global %G_0x24eb12__rip__type zeroinitializer
@G_0x33cb1__rip_ = global %G_0x33cb1__rip__type zeroinitializer
@G_0x33e6d__rip_ = global %G_0x33e6d__rip__type zeroinitializer
@G_0x33ed2__rip_ = global %G_0x33ed2__rip__type zeroinitializer
@G_0x33f02__rip_ = global %G_0x33f02__rip__type zeroinitializer
@G_0x33ff2__rip_ = global %G_0x33ff2__rip__type zeroinitializer
@G_0x34045__rip_ = global %G_0x34045__rip__type zeroinitializer
@G_0x34075__rip_ = global %G_0x34075__rip__type zeroinitializer
@G_0x34169__rip_ = global %G_0x34169__rip__type zeroinitializer
@G_0x341cf__rip_ = global %G_0x341cf__rip__type zeroinitializer
@G_0x341ff__rip_ = global %G_0x341ff__rip__type zeroinitializer
@G_0x342ef__rip_ = global %G_0x342ef__rip__type zeroinitializer
@G_0x343ba__rip_ = global %G_0x343ba__rip__type zeroinitializer
@G_0x34422__rip_ = global %G_0x34422__rip__type zeroinitializer
@G_0x344bb__rip_ = global %G_0x344bb__rip__type zeroinitializer
@G_0x345fa__rip_ = global %G_0x345fa__rip__type zeroinitializer
@G_0x34662__rip_ = global %G_0x34662__rip__type zeroinitializer
@G_0x34a48__rip_ = global %G_0x34a48__rip__type zeroinitializer
@G_0x34ba7__rip_ = global %G_0x34ba7__rip__type zeroinitializer
@G_0x6cb8f8 = global %G_0x6cb8f8_type zeroinitializer
@G_0x6cb900 = global %G_0x6cb900_type zeroinitializer
@G_0x6cc5d8 = global %G_0x6cc5d8_type zeroinitializer
@G_0x6cc5dc = global %G_0x6cc5dc_type zeroinitializer
@G_0x6cc5e0 = global %G_0x6cc5e0_type zeroinitializer
@G_0x6cc5e4 = global %G_0x6cc5e4_type zeroinitializer
@G_0x6cc5e8 = global %G_0x6cc5e8_type zeroinitializer
@G_0x6ccaf0 = global %G_0x6ccaf0_type zeroinitializer
@G_0x6ccf88 = global %G_0x6ccf88_type zeroinitializer
@G_0x6cd478 = global %G_0x6cd478_type zeroinitializer
@G_0x6cea28 = global %G_0x6cea28_type zeroinitializer
@G_0x6cea38 = global %G_0x6cea38_type zeroinitializer
@G_0x6cea40 = global %G_0x6cea40_type zeroinitializer
@G_0x6d0270 = global %G_0x6d0270_type zeroinitializer
@G_0x6d1fb0 = global %G_0x6d1fb0_type zeroinitializer
@G_0x6d45f0 = global %G_0x6d45f0_type zeroinitializer
@G_0x6d4680 = global %G_0x6d4680_type zeroinitializer
@G_0x6f6f80 = global %G_0x6f6f80_type zeroinitializer
@G_0x6f80a0 = global %G_0x6f80a0_type zeroinitializer
@G_0x6f9350 = global %G_0x6f9350_type zeroinitializer
@G_0x6f9688 = global %G_0x6f9688_type zeroinitializer
@G_0x6f9690 = global %G_0x6f9690_type zeroinitializer
@G_0x70f6d8 = global %G_0x70f6d8_type zeroinitializer
@G_0x710368 = global %G_0x710368_type zeroinitializer
@G_0x710a48 = global %G_0x710a48_type zeroinitializer
@G_0x722b78 = global %G_0x722b78_type zeroinitializer
@G_0x722fd8 = global %G_0x722fd8_type zeroinitializer
@G_0x722fe0 = global %G_0x722fe0_type zeroinitializer
@G_0x723630 = global %G_0x723630_type zeroinitializer
@G_0x724bd8 = global %G_0x724bd8_type zeroinitializer
@G_0x725570 = global %G_0x725570_type zeroinitializer
@G_0x726838 = global %G_0x726838_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

; Function Attrs: alwaysinline
define %struct.Memory* @rc_init_pict(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_47ccf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_47ccf0, %struct.Memory** %MEMORY
  %loadMem_47ccf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i9 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i10 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i9
  %27 = load i64, i64* %PC.i8
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i8
  store i64 %26, i64* %RBP.i10, align 8
  store %struct.Memory* %loadMem_47ccf1, %struct.Memory** %MEMORY
  %loadMem_47ccf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i89 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i89
  %36 = load i64, i64* %PC.i88
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i88
  %38 = sub i64 %35, 128
  store i64 %38, i64* %RSP.i89, align 8
  %39 = icmp ult i64 %35, 128
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 128, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_47ccf4, %struct.Memory** %MEMORY
  %loadMem_47ccfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %72 to i32*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i255
  %77 = sub i64 %76, 4
  %78 = load i32, i32* %EDI.i
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %PC.i254
  %81 = add i64 %80, 3
  store i64 %81, i64* %PC.i254
  %82 = inttoptr i64 %77 to i32*
  store i32 %78, i32* %82
  store %struct.Memory* %loadMem_47ccfb, %struct.Memory** %MEMORY
  %loadMem_47ccfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 33
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %85 to i64*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %87 = getelementptr inbounds %struct.GPR, %struct.GPR* %86, i32 0, i32 9
  %88 = getelementptr inbounds %struct.Reg, %struct.Reg* %87, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %88 to i32*
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %90 = getelementptr inbounds %struct.GPR, %struct.GPR* %89, i32 0, i32 15
  %91 = getelementptr inbounds %struct.Reg, %struct.Reg* %90, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %91 to i64*
  %92 = load i64, i64* %RBP.i315
  %93 = sub i64 %92, 8
  %94 = load i32, i32* %ESI.i
  %95 = zext i32 %94 to i64
  %96 = load i64, i64* %PC.i314
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC.i314
  %98 = inttoptr i64 %93 to i32*
  store i32 %94, i32* %98
  store %struct.Memory* %loadMem_47ccfe, %struct.Memory** %MEMORY
  %loadMem_47cd01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 7
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %104 to i32*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i345 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i345
  %109 = sub i64 %108, 12
  %110 = load i32, i32* %EDX.i
  %111 = zext i32 %110 to i64
  %112 = load i64, i64* %PC.i344
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC.i344
  %114 = inttoptr i64 %109 to i32*
  store i32 %110, i32* %114
  store %struct.Memory* %loadMem_47cd01, %struct.Memory** %MEMORY
  %loadMem_47cd04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %116 = getelementptr inbounds %struct.GPR, %struct.GPR* %115, i32 0, i32 33
  %117 = getelementptr inbounds %struct.Reg, %struct.Reg* %116, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %117 to i64*
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %119 = getelementptr inbounds %struct.GPR, %struct.GPR* %118, i32 0, i32 1
  %120 = getelementptr inbounds %struct.Reg, %struct.Reg* %119, i32 0, i32 0
  %RAX.i403 = bitcast %union.anon* %120 to i64*
  %121 = load i64, i64* %PC.i402
  %122 = add i64 %121, 8
  store i64 %122, i64* %PC.i402
  %123 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %123, i64* %RAX.i403, align 8
  store %struct.Memory* %loadMem_47cd04, %struct.Memory** %MEMORY
  %loadMem_47cd0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %125 = getelementptr inbounds %struct.GPR, %struct.GPR* %124, i32 0, i32 33
  %126 = getelementptr inbounds %struct.Reg, %struct.Reg* %125, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %126 to i64*
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %128 = getelementptr inbounds %struct.GPR, %struct.GPR* %127, i32 0, i32 1
  %129 = getelementptr inbounds %struct.Reg, %struct.Reg* %128, i32 0, i32 0
  %RAX.i468 = bitcast %union.anon* %129 to i64*
  %130 = load i64, i64* %RAX.i468
  %131 = add i64 %130, 2884
  %132 = load i64, i64* %PC.i467
  %133 = add i64 %132, 7
  store i64 %133, i64* %PC.i467
  %134 = inttoptr i64 %131 to i32*
  %135 = load i32, i32* %134
  %136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %136, align 1
  %137 = and i32 %135, 255
  %138 = call i32 @llvm.ctpop.i32(i32 %137)
  %139 = trunc i32 %138 to i8
  %140 = and i8 %139, 1
  %141 = xor i8 %140, 1
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %141, i8* %142, align 1
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %143, align 1
  %144 = icmp eq i32 %135, 0
  %145 = zext i1 %144 to i8
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %145, i8* %146, align 1
  %147 = lshr i32 %135, 31
  %148 = trunc i32 %147 to i8
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %148, i8* %149, align 1
  %150 = lshr i32 %135, 31
  %151 = xor i32 %147, %150
  %152 = add i32 %151, %150
  %153 = icmp eq i32 %152, 2
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %155, align 1
  store %struct.Memory* %loadMem_47cd0c, %struct.Memory** %MEMORY
  %loadMem_47cd13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 33
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %158 to i64*
  %159 = load i64, i64* %PC.i500
  %160 = add i64 %159, 42
  %161 = load i64, i64* %PC.i500
  %162 = add i64 %161, 6
  %163 = load i64, i64* %PC.i500
  %164 = add i64 %163, 6
  store i64 %164, i64* %PC.i500
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %BRANCH_TAKEN, align 1
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %168 = icmp ne i8 %166, 0
  %169 = select i1 %168, i64 %160, i64 %162
  store i64 %169, i64* %167, align 8
  store %struct.Memory* %loadMem_47cd13, %struct.Memory** %MEMORY
  %loadBr_47cd13 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cd13 = icmp eq i8 %loadBr_47cd13, 1
  br i1 %cmpBr_47cd13, label %block_.L_47cd3d, label %block_47cd19

block_47cd19:                                     ; preds = %entry
  %loadMem_47cd19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %171 = getelementptr inbounds %struct.GPR, %struct.GPR* %170, i32 0, i32 33
  %172 = getelementptr inbounds %struct.Reg, %struct.Reg* %171, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %172 to i64*
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %174 = getelementptr inbounds %struct.GPR, %struct.GPR* %173, i32 0, i32 1
  %175 = getelementptr inbounds %struct.Reg, %struct.Reg* %174, i32 0, i32 0
  %RAX.i560 = bitcast %union.anon* %175 to i64*
  %176 = load i64, i64* %PC.i559
  %177 = add i64 %176, 8
  store i64 %177, i64* %PC.i559
  %178 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %178, i64* %RAX.i560, align 8
  store %struct.Memory* %loadMem_47cd19, %struct.Memory** %MEMORY
  %loadMem_47cd21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %180 = getelementptr inbounds %struct.GPR, %struct.GPR* %179, i32 0, i32 33
  %181 = getelementptr inbounds %struct.Reg, %struct.Reg* %180, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %181 to i64*
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 1
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %184 to i64*
  %185 = load i64, i64* %RAX.i622
  %186 = add i64 %185, 72608
  %187 = load i64, i64* %PC.i621
  %188 = add i64 %187, 6
  store i64 %188, i64* %PC.i621
  %189 = inttoptr i64 %186 to i32*
  %190 = load i32, i32* %189
  %191 = zext i32 %190 to i64
  store i64 %191, i64* %RAX.i622, align 8
  store %struct.Memory* %loadMem_47cd21, %struct.Memory** %MEMORY
  %loadMem_47cd27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 33
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %197 to i64*
  %198 = load i64, i64* %PC.i651
  %199 = add i64 %198, 8
  store i64 %199, i64* %PC.i651
  %200 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %200, i64* %RCX.i652, align 8
  store %struct.Memory* %loadMem_47cd27, %struct.Memory** %MEMORY
  %loadMem_47cd2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 33
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %203 to i64*
  %204 = load i64, i64* %PC.i813
  %205 = add i64 %204, 1
  store i64 %205, i64* %PC.i813
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %208 = bitcast %union.anon* %207 to i32*
  %209 = load i32, i32* %208, align 8
  %210 = sext i32 %209 to i64
  %211 = lshr i64 %210, 32
  store i64 %211, i64* %206, align 8
  store %struct.Memory* %loadMem_47cd2f, %struct.Memory** %MEMORY
  %loadMem_47cd30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %213 = getelementptr inbounds %struct.GPR, %struct.GPR* %212, i32 0, i32 33
  %214 = getelementptr inbounds %struct.Reg, %struct.Reg* %213, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %214 to i64*
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %216 = getelementptr inbounds %struct.GPR, %struct.GPR* %215, i32 0, i32 5
  %217 = getelementptr inbounds %struct.Reg, %struct.Reg* %216, i32 0, i32 0
  %RCX.i845 = bitcast %union.anon* %217 to i64*
  %218 = load i64, i64* %RCX.i845
  %219 = add i64 %218, 72620
  %220 = load i64, i64* %PC.i844
  %221 = add i64 %220, 6
  store i64 %221, i64* %PC.i844
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %223 = bitcast %union.anon* %222 to i32*
  %224 = load i32, i32* %223, align 8
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %227 = bitcast %union.anon* %226 to i32*
  %228 = load i32, i32* %227, align 8
  %229 = zext i32 %228 to i64
  %230 = inttoptr i64 %219 to i32*
  %231 = load i32, i32* %230
  %232 = sext i32 %231 to i64
  %233 = shl i64 %229, 32
  %234 = or i64 %233, %225
  %235 = sdiv i64 %234, %232
  %236 = shl i64 %235, 32
  %237 = ashr exact i64 %236, 32
  %238 = icmp eq i64 %235, %237
  br i1 %238, label %243, label %239

; <label>:239:                                    ; preds = %block_47cd19
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %241 = load i64, i64* %240, align 8
  %242 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %241, %struct.Memory* %loadMem_47cd30)
  br label %routine_idivl_0x11bac__rcx_.exit

; <label>:243:                                    ; preds = %block_47cd19
  %244 = srem i64 %234, %232
  %245 = getelementptr inbounds %union.anon, %union.anon* %222, i64 0, i32 0
  %246 = and i64 %235, 4294967295
  store i64 %246, i64* %245, align 8
  %247 = getelementptr inbounds %union.anon, %union.anon* %226, i64 0, i32 0
  %248 = and i64 %244, 4294967295
  store i64 %248, i64* %247, align 8
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %249, align 1
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %250, align 1
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %251, align 1
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %252, align 1
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %253, align 1
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %254, align 1
  br label %routine_idivl_0x11bac__rcx_.exit

routine_idivl_0x11bac__rcx_.exit:                 ; preds = %239, %243
  %255 = phi %struct.Memory* [ %242, %239 ], [ %loadMem_47cd30, %243 ]
  store %struct.Memory* %255, %struct.Memory** %MEMORY
  %loadMem_47cd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %257 = getelementptr inbounds %struct.GPR, %struct.GPR* %256, i32 0, i32 33
  %258 = getelementptr inbounds %struct.Reg, %struct.Reg* %257, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %258 to i64*
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %260 = getelementptr inbounds %struct.GPR, %struct.GPR* %259, i32 0, i32 1
  %261 = getelementptr inbounds %struct.Reg, %struct.Reg* %260, i32 0, i32 0
  %EAX.i847 = bitcast %union.anon* %261 to i32*
  %262 = load i32, i32* %EAX.i847
  %263 = zext i32 %262 to i64
  %264 = load i64, i64* %PC.i846
  %265 = add i64 %264, 7
  store i64 %265, i64* %PC.i846
  store i32 %262, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  store %struct.Memory* %loadMem_47cd36, %struct.Memory** %MEMORY
  br label %block_.L_47cd3d

block_.L_47cd3d:                                  ; preds = %routine_idivl_0x11bac__rcx_.exit, %entry
  %loadMem_47cd3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 33
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %268 to i64*
  %269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %270 = getelementptr inbounds %struct.GPR, %struct.GPR* %269, i32 0, i32 1
  %271 = getelementptr inbounds %struct.Reg, %struct.Reg* %270, i32 0, i32 0
  %RAX.i1260 = bitcast %union.anon* %271 to i64*
  %272 = load i64, i64* %PC.i1259
  %273 = add i64 %272, 8
  store i64 %273, i64* %PC.i1259
  %274 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %274, i64* %RAX.i1260, align 8
  store %struct.Memory* %loadMem_47cd3d, %struct.Memory** %MEMORY
  %loadMem_47cd45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 33
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %277 to i64*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 1
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %RAX.i1293 = bitcast %union.anon* %280 to i64*
  %281 = load i64, i64* %RAX.i1293
  %282 = add i64 %281, 72616
  %283 = load i64, i64* %PC.i1292
  %284 = add i64 %283, 10
  store i64 %284, i64* %PC.i1292
  %285 = inttoptr i64 %282 to i32*
  store i32 0, i32* %285
  store %struct.Memory* %loadMem_47cd45, %struct.Memory** %MEMORY
  %loadMem_47cd4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %287 = getelementptr inbounds %struct.GPR, %struct.GPR* %286, i32 0, i32 33
  %288 = getelementptr inbounds %struct.Reg, %struct.Reg* %287, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %288 to i64*
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 1
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %RAX.i1354 = bitcast %union.anon* %291 to i64*
  %292 = load i64, i64* %PC.i1353
  %293 = add i64 %292, 8
  store i64 %293, i64* %PC.i1353
  %294 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %294, i64* %RAX.i1354, align 8
  store %struct.Memory* %loadMem_47cd4f, %struct.Memory** %MEMORY
  %loadMem_47cd57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %296 = getelementptr inbounds %struct.GPR, %struct.GPR* %295, i32 0, i32 33
  %297 = getelementptr inbounds %struct.Reg, %struct.Reg* %296, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %297 to i64*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %299 = getelementptr inbounds %struct.GPR, %struct.GPR* %298, i32 0, i32 1
  %300 = getelementptr inbounds %struct.Reg, %struct.Reg* %299, i32 0, i32 0
  %RAX.i1352 = bitcast %union.anon* %300 to i64*
  %301 = load i64, i64* %RAX.i1352
  %302 = add i64 %301, 3252
  %303 = load i64, i64* %PC.i1351
  %304 = add i64 %303, 7
  store i64 %304, i64* %PC.i1351
  %305 = inttoptr i64 %302 to i32*
  %306 = load i32, i32* %305
  %307 = sub i32 %306, 1
  %308 = icmp ult i32 %306, 1
  %309 = zext i1 %308 to i8
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %309, i8* %310, align 1
  %311 = and i32 %307, 255
  %312 = call i32 @llvm.ctpop.i32(i32 %311)
  %313 = trunc i32 %312 to i8
  %314 = and i8 %313, 1
  %315 = xor i8 %314, 1
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %315, i8* %316, align 1
  %317 = xor i32 %306, 1
  %318 = xor i32 %317, %307
  %319 = lshr i32 %318, 4
  %320 = trunc i32 %319 to i8
  %321 = and i8 %320, 1
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %321, i8* %322, align 1
  %323 = icmp eq i32 %307, 0
  %324 = zext i1 %323 to i8
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %324, i8* %325, align 1
  %326 = lshr i32 %307, 31
  %327 = trunc i32 %326 to i8
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %327, i8* %328, align 1
  %329 = lshr i32 %306, 31
  %330 = xor i32 %326, %329
  %331 = add i32 %330, %329
  %332 = icmp eq i32 %331, 2
  %333 = zext i1 %332 to i8
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %333, i8* %334, align 1
  store %struct.Memory* %loadMem_47cd57, %struct.Memory** %MEMORY
  %loadMem_47cd5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %336 = getelementptr inbounds %struct.GPR, %struct.GPR* %335, i32 0, i32 33
  %337 = getelementptr inbounds %struct.Reg, %struct.Reg* %336, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %337 to i64*
  %338 = load i64, i64* %PC.i1350
  %339 = add i64 %338, 107
  %340 = load i64, i64* %PC.i1350
  %341 = add i64 %340, 6
  %342 = load i64, i64* %PC.i1350
  %343 = add i64 %342, 6
  store i64 %343, i64* %PC.i1350
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %345 = load i8, i8* %344, align 1
  %346 = icmp eq i8 %345, 0
  %347 = zext i1 %346 to i8
  store i8 %347, i8* %BRANCH_TAKEN, align 1
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %349 = select i1 %346, i64 %339, i64 %341
  store i64 %349, i64* %348, align 8
  store %struct.Memory* %loadMem_47cd5e, %struct.Memory** %MEMORY
  %loadBr_47cd5e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cd5e = icmp eq i8 %loadBr_47cd5e, 1
  br i1 %cmpBr_47cd5e, label %block_.L_47cdc9, label %block_47cd64

block_47cd64:                                     ; preds = %block_.L_47cd3d
  %loadMem_47cd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %351 = getelementptr inbounds %struct.GPR, %struct.GPR* %350, i32 0, i32 33
  %352 = getelementptr inbounds %struct.Reg, %struct.Reg* %351, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %352 to i64*
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %354 = getelementptr inbounds %struct.GPR, %struct.GPR* %353, i32 0, i32 1
  %355 = getelementptr inbounds %struct.Reg, %struct.Reg* %354, i32 0, i32 0
  %RAX.i1349 = bitcast %union.anon* %355 to i64*
  %356 = load i64, i64* %PC.i1348
  %357 = add i64 %356, 8
  store i64 %357, i64* %PC.i1348
  %358 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %358, i64* %RAX.i1349, align 8
  store %struct.Memory* %loadMem_47cd64, %struct.Memory** %MEMORY
  %loadMem_47cd6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %360 = getelementptr inbounds %struct.GPR, %struct.GPR* %359, i32 0, i32 33
  %361 = getelementptr inbounds %struct.Reg, %struct.Reg* %360, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %361 to i64*
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 1
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %RAX.i1347 = bitcast %union.anon* %364 to i64*
  %365 = load i64, i64* %RAX.i1347
  %366 = add i64 %365, 72564
  %367 = load i64, i64* %PC.i1346
  %368 = add i64 %367, 7
  store i64 %368, i64* %PC.i1346
  %369 = inttoptr i64 %366 to i32*
  %370 = load i32, i32* %369
  %371 = sub i32 %370, 58
  %372 = icmp ult i32 %370, 58
  %373 = zext i1 %372 to i8
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %373, i8* %374, align 1
  %375 = and i32 %371, 255
  %376 = call i32 @llvm.ctpop.i32(i32 %375)
  %377 = trunc i32 %376 to i8
  %378 = and i8 %377, 1
  %379 = xor i8 %378, 1
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %379, i8* %380, align 1
  %381 = xor i32 %370, 58
  %382 = xor i32 %381, %371
  %383 = lshr i32 %382, 4
  %384 = trunc i32 %383 to i8
  %385 = and i8 %384, 1
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %385, i8* %386, align 1
  %387 = icmp eq i32 %371, 0
  %388 = zext i1 %387 to i8
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %388, i8* %389, align 1
  %390 = lshr i32 %371, 31
  %391 = trunc i32 %390 to i8
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %391, i8* %392, align 1
  %393 = lshr i32 %370, 31
  %394 = xor i32 %390, %393
  %395 = add i32 %394, %393
  %396 = icmp eq i32 %395, 2
  %397 = zext i1 %396 to i8
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %397, i8* %398, align 1
  store %struct.Memory* %loadMem_47cd6c, %struct.Memory** %MEMORY
  %loadMem_47cd73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 33
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %401 to i64*
  %402 = load i64, i64* %PC.i1345
  %403 = add i64 %402, 37
  %404 = load i64, i64* %PC.i1345
  %405 = add i64 %404, 6
  %406 = load i64, i64* %PC.i1345
  %407 = add i64 %406, 6
  store i64 %407, i64* %PC.i1345
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %409 = load i8, i8* %408, align 1
  %410 = icmp eq i8 %409, 0
  %411 = zext i1 %410 to i8
  store i8 %411, i8* %BRANCH_TAKEN, align 1
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %413 = select i1 %410, i64 %403, i64 %405
  store i64 %413, i64* %412, align 8
  store %struct.Memory* %loadMem_47cd73, %struct.Memory** %MEMORY
  %loadBr_47cd73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cd73 = icmp eq i8 %loadBr_47cd73, 1
  br i1 %cmpBr_47cd73, label %block_.L_47cd98, label %block_47cd79

block_47cd79:                                     ; preds = %block_47cd64
  %loadMem_47cd79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %415 = getelementptr inbounds %struct.GPR, %struct.GPR* %414, i32 0, i32 33
  %416 = getelementptr inbounds %struct.Reg, %struct.Reg* %415, i32 0, i32 0
  %PC.i1343 = bitcast %union.anon* %416 to i64*
  %417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %418 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %417, i64 0, i64 0
  %YMM0.i1344 = bitcast %union.VectorReg* %418 to %"class.std::bitset"*
  %419 = bitcast %"class.std::bitset"* %YMM0.i1344 to i8*
  %420 = load i64, i64* %PC.i1343
  %421 = add i64 %420, ptrtoint (%G_0x34ba7__rip__type* @G_0x34ba7__rip_ to i64)
  %422 = load i64, i64* %PC.i1343
  %423 = add i64 %422, 8
  store i64 %423, i64* %PC.i1343
  %424 = inttoptr i64 %421 to double*
  %425 = load double, double* %424
  %426 = bitcast i8* %419 to double*
  store double %425, double* %426, align 1
  %427 = getelementptr inbounds i8, i8* %419, i64 8
  %428 = bitcast i8* %427 to double*
  store double 0.000000e+00, double* %428, align 1
  store %struct.Memory* %loadMem_47cd79, %struct.Memory** %MEMORY
  %loadMem_47cd81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 33
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %431 to i64*
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %433 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %432, i64 0, i64 0
  %YMM0.i1342 = bitcast %union.VectorReg* %433 to %"class.std::bitset"*
  %434 = bitcast %"class.std::bitset"* %YMM0.i1342 to i8*
  %435 = bitcast %"class.std::bitset"* %YMM0.i1342 to i8*
  %436 = load i64, i64* %PC.i1341
  %437 = add i64 %436, 9
  store i64 %437, i64* %PC.i1341
  %438 = bitcast i8* %435 to double*
  %439 = load double, double* %438, align 1
  %440 = getelementptr inbounds i8, i8* %435, i64 8
  %441 = bitcast i8* %440 to i64*
  %442 = load i64, i64* %441, align 1
  %443 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %444 = fmul double %439, %443
  %445 = bitcast i8* %434 to double*
  store double %444, double* %445, align 1
  %446 = getelementptr inbounds i8, i8* %434, i64 8
  %447 = bitcast i8* %446 to i64*
  store i64 %442, i64* %447, align 1
  store %struct.Memory* %loadMem_47cd81, %struct.Memory** %MEMORY
  %loadMem_47cd8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %449 = getelementptr inbounds %struct.GPR, %struct.GPR* %448, i32 0, i32 33
  %450 = getelementptr inbounds %struct.Reg, %struct.Reg* %449, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %450 to i64*
  %451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %452 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %451, i64 0, i64 0
  %XMM0.i1340 = bitcast %union.VectorReg* %452 to %union.vec128_t*
  %453 = bitcast %union.vec128_t* %XMM0.i1340 to i8*
  %454 = load i64, i64* %PC.i1339
  %455 = add i64 %454, 9
  store i64 %455, i64* %PC.i1339
  %456 = bitcast i8* %453 to double*
  %457 = load double, double* %456, align 1
  store double %457, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  store %struct.Memory* %loadMem_47cd8a, %struct.Memory** %MEMORY
  %loadMem_47cd93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %459 = getelementptr inbounds %struct.GPR, %struct.GPR* %458, i32 0, i32 33
  %460 = getelementptr inbounds %struct.Reg, %struct.Reg* %459, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %460 to i64*
  %461 = load i64, i64* %PC.i1338
  %462 = add i64 %461, 49
  %463 = load i64, i64* %PC.i1338
  %464 = add i64 %463, 5
  store i64 %464, i64* %PC.i1338
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %462, i64* %465, align 8
  store %struct.Memory* %loadMem_47cd93, %struct.Memory** %MEMORY
  br label %block_.L_47cdc4

block_.L_47cd98:                                  ; preds = %block_47cd64
  %loadMem_47cd98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %467 = getelementptr inbounds %struct.GPR, %struct.GPR* %466, i32 0, i32 33
  %468 = getelementptr inbounds %struct.Reg, %struct.Reg* %467, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %468 to i64*
  %469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %470 = getelementptr inbounds %struct.GPR, %struct.GPR* %469, i32 0, i32 1
  %471 = getelementptr inbounds %struct.Reg, %struct.Reg* %470, i32 0, i32 0
  %RAX.i1337 = bitcast %union.anon* %471 to i64*
  %472 = load i64, i64* %PC.i1336
  %473 = add i64 %472, 8
  store i64 %473, i64* %PC.i1336
  %474 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %474, i64* %RAX.i1337, align 8
  store %struct.Memory* %loadMem_47cd98, %struct.Memory** %MEMORY
  %loadMem_47cda0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %476 = getelementptr inbounds %struct.GPR, %struct.GPR* %475, i32 0, i32 33
  %477 = getelementptr inbounds %struct.Reg, %struct.Reg* %476, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %477 to i64*
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %479 = getelementptr inbounds %struct.GPR, %struct.GPR* %478, i32 0, i32 1
  %480 = getelementptr inbounds %struct.Reg, %struct.Reg* %479, i32 0, i32 0
  %RAX.i1335 = bitcast %union.anon* %480 to i64*
  %481 = load i64, i64* %RAX.i1335
  %482 = add i64 %481, 72564
  %483 = load i64, i64* %PC.i1334
  %484 = add i64 %483, 7
  store i64 %484, i64* %PC.i1334
  %485 = inttoptr i64 %482 to i32*
  %486 = load i32, i32* %485
  %487 = sub i32 %486, 59
  %488 = icmp ult i32 %486, 59
  %489 = zext i1 %488 to i8
  %490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %489, i8* %490, align 1
  %491 = and i32 %487, 255
  %492 = call i32 @llvm.ctpop.i32(i32 %491)
  %493 = trunc i32 %492 to i8
  %494 = and i8 %493, 1
  %495 = xor i8 %494, 1
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %495, i8* %496, align 1
  %497 = xor i32 %486, 59
  %498 = xor i32 %497, %487
  %499 = lshr i32 %498, 4
  %500 = trunc i32 %499 to i8
  %501 = and i8 %500, 1
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %501, i8* %502, align 1
  %503 = icmp eq i32 %487, 0
  %504 = zext i1 %503 to i8
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %504, i8* %505, align 1
  %506 = lshr i32 %487, 31
  %507 = trunc i32 %506 to i8
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %507, i8* %508, align 1
  %509 = lshr i32 %486, 31
  %510 = xor i32 %506, %509
  %511 = add i32 %510, %509
  %512 = icmp eq i32 %511, 2
  %513 = zext i1 %512 to i8
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %513, i8* %514, align 1
  store %struct.Memory* %loadMem_47cda0, %struct.Memory** %MEMORY
  %loadMem_47cda7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %516 = getelementptr inbounds %struct.GPR, %struct.GPR* %515, i32 0, i32 33
  %517 = getelementptr inbounds %struct.Reg, %struct.Reg* %516, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %517 to i64*
  %518 = load i64, i64* %PC.i1333
  %519 = add i64 %518, 24
  %520 = load i64, i64* %PC.i1333
  %521 = add i64 %520, 6
  %522 = load i64, i64* %PC.i1333
  %523 = add i64 %522, 6
  store i64 %523, i64* %PC.i1333
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %525 = load i8, i8* %524, align 1
  %526 = icmp eq i8 %525, 0
  %527 = zext i1 %526 to i8
  store i8 %527, i8* %BRANCH_TAKEN, align 1
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %529 = select i1 %526, i64 %519, i64 %521
  store i64 %529, i64* %528, align 8
  store %struct.Memory* %loadMem_47cda7, %struct.Memory** %MEMORY
  %loadBr_47cda7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cda7 = icmp eq i8 %loadBr_47cda7, 1
  br i1 %cmpBr_47cda7, label %block_.L_47cdbf, label %block_47cdad

block_47cdad:                                     ; preds = %block_.L_47cd98
  %loadMem_47cdad = load %struct.Memory*, %struct.Memory** %MEMORY
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %531 = getelementptr inbounds %struct.GPR, %struct.GPR* %530, i32 0, i32 33
  %532 = getelementptr inbounds %struct.Reg, %struct.Reg* %531, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %532 to i64*
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %534 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %533, i64 0, i64 0
  %YMM0.i1332 = bitcast %union.VectorReg* %534 to %"class.std::bitset"*
  %535 = bitcast %"class.std::bitset"* %YMM0.i1332 to i8*
  %536 = load i64, i64* %PC.i1331
  %537 = add i64 %536, 9
  store i64 %537, i64* %PC.i1331
  %538 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %539 = bitcast i8* %535 to double*
  store double %538, double* %539, align 1
  %540 = getelementptr inbounds i8, i8* %535, i64 8
  %541 = bitcast i8* %540 to double*
  store double 0.000000e+00, double* %541, align 1
  store %struct.Memory* %loadMem_47cdad, %struct.Memory** %MEMORY
  %loadMem_47cdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %543 = getelementptr inbounds %struct.GPR, %struct.GPR* %542, i32 0, i32 33
  %544 = getelementptr inbounds %struct.Reg, %struct.Reg* %543, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %544 to i64*
  %545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %546 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %545, i64 0, i64 0
  %XMM0.i1330 = bitcast %union.VectorReg* %546 to %union.vec128_t*
  %547 = bitcast %union.vec128_t* %XMM0.i1330 to i8*
  %548 = load i64, i64* %PC.i1329
  %549 = add i64 %548, 9
  store i64 %549, i64* %PC.i1329
  %550 = bitcast i8* %547 to double*
  %551 = load double, double* %550, align 1
  store double %551, double* bitcast (%G_0x6f6f80_type* @G_0x6f6f80 to double*)
  store %struct.Memory* %loadMem_47cdb6, %struct.Memory** %MEMORY
  br label %block_.L_47cdbf

block_.L_47cdbf:                                  ; preds = %block_47cdad, %block_.L_47cd98
  %loadMem_47cdbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %553 = getelementptr inbounds %struct.GPR, %struct.GPR* %552, i32 0, i32 33
  %554 = getelementptr inbounds %struct.Reg, %struct.Reg* %553, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %554 to i64*
  %555 = load i64, i64* %PC.i1328
  %556 = add i64 %555, 5
  %557 = load i64, i64* %PC.i1328
  %558 = add i64 %557, 5
  store i64 %558, i64* %PC.i1328
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %556, i64* %559, align 8
  store %struct.Memory* %loadMem_47cdbf, %struct.Memory** %MEMORY
  br label %block_.L_47cdc4

block_.L_47cdc4:                                  ; preds = %block_.L_47cdbf, %block_47cd79
  %loadMem_47cdc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %561 = getelementptr inbounds %struct.GPR, %struct.GPR* %560, i32 0, i32 33
  %562 = getelementptr inbounds %struct.Reg, %struct.Reg* %561, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %562 to i64*
  %563 = load i64, i64* %PC.i1327
  %564 = add i64 %563, 5
  %565 = load i64, i64* %PC.i1327
  %566 = add i64 %565, 5
  store i64 %566, i64* %PC.i1327
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %564, i64* %567, align 8
  store %struct.Memory* %loadMem_47cdc4, %struct.Memory** %MEMORY
  br label %block_.L_47cdc9

block_.L_47cdc9:                                  ; preds = %block_.L_47cdc4, %block_.L_47cd3d
  %loadMem_47cdc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %569 = getelementptr inbounds %struct.GPR, %struct.GPR* %568, i32 0, i32 33
  %570 = getelementptr inbounds %struct.Reg, %struct.Reg* %569, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %570 to i64*
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %572 = getelementptr inbounds %struct.GPR, %struct.GPR* %571, i32 0, i32 15
  %573 = getelementptr inbounds %struct.Reg, %struct.Reg* %572, i32 0, i32 0
  %RBP.i1326 = bitcast %union.anon* %573 to i64*
  %574 = load i64, i64* %RBP.i1326
  %575 = sub i64 %574, 4
  %576 = load i64, i64* %PC.i1325
  %577 = add i64 %576, 4
  store i64 %577, i64* %PC.i1325
  %578 = inttoptr i64 %575 to i32*
  %579 = load i32, i32* %578
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %580, align 1
  %581 = and i32 %579, 255
  %582 = call i32 @llvm.ctpop.i32(i32 %581)
  %583 = trunc i32 %582 to i8
  %584 = and i8 %583, 1
  %585 = xor i8 %584, 1
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %585, i8* %586, align 1
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %587, align 1
  %588 = icmp eq i32 %579, 0
  %589 = zext i1 %588 to i8
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %589, i8* %590, align 1
  %591 = lshr i32 %579, 31
  %592 = trunc i32 %591 to i8
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %592, i8* %593, align 1
  %594 = lshr i32 %579, 31
  %595 = xor i32 %591, %594
  %596 = add i32 %595, %594
  %597 = icmp eq i32 %596, 2
  %598 = zext i1 %597 to i8
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %598, i8* %599, align 1
  store %struct.Memory* %loadMem_47cdc9, %struct.Memory** %MEMORY
  %loadMem_47cdcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %601 = getelementptr inbounds %struct.GPR, %struct.GPR* %600, i32 0, i32 33
  %602 = getelementptr inbounds %struct.Reg, %struct.Reg* %601, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %602 to i64*
  %603 = load i64, i64* %PC.i1324
  %604 = add i64 %603, 16
  %605 = load i64, i64* %PC.i1324
  %606 = add i64 %605, 6
  %607 = load i64, i64* %PC.i1324
  %608 = add i64 %607, 6
  store i64 %608, i64* %PC.i1324
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %610 = load i8, i8* %609, align 1
  %611 = icmp eq i8 %610, 0
  %612 = zext i1 %611 to i8
  store i8 %612, i8* %BRANCH_TAKEN, align 1
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %614 = select i1 %611, i64 %604, i64 %606
  store i64 %614, i64* %613, align 8
  store %struct.Memory* %loadMem_47cdcd, %struct.Memory** %MEMORY
  %loadBr_47cdcd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cdcd = icmp eq i8 %loadBr_47cdcd, 1
  br i1 %cmpBr_47cdcd, label %block_.L_47cddd, label %block_47cdd3

block_47cdd3:                                     ; preds = %block_.L_47cdc9
  %loadMem_47cdd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %616 = getelementptr inbounds %struct.GPR, %struct.GPR* %615, i32 0, i32 33
  %617 = getelementptr inbounds %struct.Reg, %struct.Reg* %616, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %617 to i64*
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %619 = getelementptr inbounds %struct.GPR, %struct.GPR* %618, i32 0, i32 15
  %620 = getelementptr inbounds %struct.Reg, %struct.Reg* %619, i32 0, i32 0
  %RBP.i1323 = bitcast %union.anon* %620 to i64*
  %621 = load i64, i64* %RBP.i1323
  %622 = sub i64 %621, 8
  %623 = load i64, i64* %PC.i1322
  %624 = add i64 %623, 4
  store i64 %624, i64* %PC.i1322
  %625 = inttoptr i64 %622 to i32*
  %626 = load i32, i32* %625
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %627, align 1
  %628 = and i32 %626, 255
  %629 = call i32 @llvm.ctpop.i32(i32 %628)
  %630 = trunc i32 %629 to i8
  %631 = and i8 %630, 1
  %632 = xor i8 %631, 1
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %632, i8* %633, align 1
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %634, align 1
  %635 = icmp eq i32 %626, 0
  %636 = zext i1 %635 to i8
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %636, i8* %637, align 1
  %638 = lshr i32 %626, 31
  %639 = trunc i32 %638 to i8
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %639, i8* %640, align 1
  %641 = lshr i32 %626, 31
  %642 = xor i32 %638, %641
  %643 = add i32 %642, %641
  %644 = icmp eq i32 %643, 2
  %645 = zext i1 %644 to i8
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %645, i8* %646, align 1
  store %struct.Memory* %loadMem_47cdd3, %struct.Memory** %MEMORY
  %loadMem_47cdd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %648 = getelementptr inbounds %struct.GPR, %struct.GPR* %647, i32 0, i32 33
  %649 = getelementptr inbounds %struct.Reg, %struct.Reg* %648, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %649 to i64*
  %650 = load i64, i64* %PC.i1321
  %651 = add i64 %650, 3369
  %652 = load i64, i64* %PC.i1321
  %653 = add i64 %652, 6
  %654 = load i64, i64* %PC.i1321
  %655 = add i64 %654, 6
  store i64 %655, i64* %PC.i1321
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %657 = load i8, i8* %656, align 1
  store i8 %657, i8* %BRANCH_TAKEN, align 1
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %659 = icmp ne i8 %657, 0
  %660 = select i1 %659, i64 %651, i64 %653
  store i64 %660, i64* %658, align 8
  store %struct.Memory* %loadMem_47cdd7, %struct.Memory** %MEMORY
  %loadBr_47cdd7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cdd7 = icmp eq i8 %loadBr_47cdd7, 1
  br i1 %cmpBr_47cdd7, label %block_.L_47db00, label %block_.L_47cddd

block_.L_47cddd:                                  ; preds = %block_47cdd3, %block_.L_47cdc9
  %loadMem_47cddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %662 = getelementptr inbounds %struct.GPR, %struct.GPR* %661, i32 0, i32 33
  %663 = getelementptr inbounds %struct.Reg, %struct.Reg* %662, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %663 to i64*
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 15
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %RBP.i1320 = bitcast %union.anon* %666 to i64*
  %667 = load i64, i64* %RBP.i1320
  %668 = sub i64 %667, 12
  %669 = load i64, i64* %PC.i1319
  %670 = add i64 %669, 4
  store i64 %670, i64* %PC.i1319
  %671 = inttoptr i64 %668 to i32*
  %672 = load i32, i32* %671
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %673, align 1
  %674 = and i32 %672, 255
  %675 = call i32 @llvm.ctpop.i32(i32 %674)
  %676 = trunc i32 %675 to i8
  %677 = and i8 %676, 1
  %678 = xor i8 %677, 1
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %678, i8* %679, align 1
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %680, align 1
  %681 = icmp eq i32 %672, 0
  %682 = zext i1 %681 to i8
  %683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %682, i8* %683, align 1
  %684 = lshr i32 %672, 31
  %685 = trunc i32 %684 to i8
  %686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %685, i8* %686, align 1
  %687 = lshr i32 %672, 31
  %688 = xor i32 %684, %687
  %689 = add i32 %688, %687
  %690 = icmp eq i32 %689, 2
  %691 = zext i1 %690 to i8
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %691, i8* %692, align 1
  store %struct.Memory* %loadMem_47cddd, %struct.Memory** %MEMORY
  %loadMem_47cde1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %694 = getelementptr inbounds %struct.GPR, %struct.GPR* %693, i32 0, i32 33
  %695 = getelementptr inbounds %struct.Reg, %struct.Reg* %694, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %695 to i64*
  %696 = load i64, i64* %PC.i1318
  %697 = add i64 %696, 3359
  %698 = load i64, i64* %PC.i1318
  %699 = add i64 %698, 6
  %700 = load i64, i64* %PC.i1318
  %701 = add i64 %700, 6
  store i64 %701, i64* %PC.i1318
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %703 = load i8, i8* %702, align 1
  store i8 %703, i8* %BRANCH_TAKEN, align 1
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %705 = icmp ne i8 %703, 0
  %706 = select i1 %705, i64 %697, i64 %699
  store i64 %706, i64* %704, align 8
  store %struct.Memory* %loadMem_47cde1, %struct.Memory** %MEMORY
  %loadBr_47cde1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cde1 = icmp eq i8 %loadBr_47cde1, 1
  br i1 %cmpBr_47cde1, label %block_.L_47db00, label %block_47cde7

block_47cde7:                                     ; preds = %block_.L_47cddd
  %loadMem_47cde7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 33
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %709 to i64*
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %711 = getelementptr inbounds %struct.GPR, %struct.GPR* %710, i32 0, i32 1
  %712 = getelementptr inbounds %struct.Reg, %struct.Reg* %711, i32 0, i32 0
  %RAX.i1317 = bitcast %union.anon* %712 to i64*
  %713 = load i64, i64* %PC.i1316
  %714 = add i64 %713, ptrtoint (%G_0x24eb12__rip__type* @G_0x24eb12__rip_ to i64)
  %715 = load i64, i64* %PC.i1316
  %716 = add i64 %715, 7
  store i64 %716, i64* %PC.i1316
  %717 = inttoptr i64 %714 to i64*
  %718 = load i64, i64* %717
  store i64 %718, i64* %RAX.i1317, align 8
  store %struct.Memory* %loadMem_47cde7, %struct.Memory** %MEMORY
  %loadMem_47cdee = load %struct.Memory*, %struct.Memory** %MEMORY
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %720 = getelementptr inbounds %struct.GPR, %struct.GPR* %719, i32 0, i32 33
  %721 = getelementptr inbounds %struct.Reg, %struct.Reg* %720, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %721 to i64*
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 1
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %RAX.i1314 = bitcast %union.anon* %724 to i64*
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 5
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %RCX.i1315 = bitcast %union.anon* %727 to i64*
  %728 = load i64, i64* %RAX.i1314
  %729 = add i64 %728, 24
  %730 = load i64, i64* %PC.i1313
  %731 = add i64 %730, 3
  store i64 %731, i64* %PC.i1313
  %732 = inttoptr i64 %729 to i32*
  %733 = load i32, i32* %732
  %734 = zext i32 %733 to i64
  store i64 %734, i64* %RCX.i1315, align 8
  store %struct.Memory* %loadMem_47cdee, %struct.Memory** %MEMORY
  %loadMem_47cdf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %736 = getelementptr inbounds %struct.GPR, %struct.GPR* %735, i32 0, i32 33
  %737 = getelementptr inbounds %struct.Reg, %struct.Reg* %736, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %737 to i64*
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 5
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %ECX.i1312 = bitcast %union.anon* %740 to i32*
  %741 = load i32, i32* %ECX.i1312
  %742 = zext i32 %741 to i64
  %743 = load i32, i32* %ECX.i1312
  %744 = zext i32 %743 to i64
  %745 = load i64, i64* %PC.i1311
  %746 = add i64 %745, 2
  store i64 %746, i64* %PC.i1311
  %747 = and i64 %744, %742
  %748 = trunc i64 %747 to i32
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %749, align 1
  %750 = and i32 %748, 255
  %751 = call i32 @llvm.ctpop.i32(i32 %750)
  %752 = trunc i32 %751 to i8
  %753 = and i8 %752, 1
  %754 = xor i8 %753, 1
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %754, i8* %755, align 1
  %756 = icmp eq i32 %748, 0
  %757 = zext i1 %756 to i8
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %757, i8* %758, align 1
  %759 = lshr i32 %748, 31
  %760 = trunc i32 %759 to i8
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %760, i8* %761, align 1
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %762, align 1
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %763, align 1
  store %struct.Memory* %loadMem_47cdf1, %struct.Memory** %MEMORY
  %loadMem_47cdf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 33
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %766 to i64*
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 5
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %ECX.i1309 = bitcast %union.anon* %769 to i32*
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 15
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %RBP.i1310 = bitcast %union.anon* %772 to i64*
  %773 = load i64, i64* %RBP.i1310
  %774 = sub i64 %773, 20
  %775 = load i32, i32* %ECX.i1309
  %776 = zext i32 %775 to i64
  %777 = load i64, i64* %PC.i1308
  %778 = add i64 %777, 3
  store i64 %778, i64* %PC.i1308
  %779 = inttoptr i64 %774 to i32*
  store i32 %775, i32* %779
  store %struct.Memory* %loadMem_47cdf3, %struct.Memory** %MEMORY
  %loadMem_47cdf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %781 = getelementptr inbounds %struct.GPR, %struct.GPR* %780, i32 0, i32 33
  %782 = getelementptr inbounds %struct.Reg, %struct.Reg* %781, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %782 to i64*
  %783 = load i64, i64* %PC.i1307
  %784 = add i64 %783, 31
  %785 = load i64, i64* %PC.i1307
  %786 = add i64 %785, 6
  %787 = load i64, i64* %PC.i1307
  %788 = add i64 %787, 6
  store i64 %788, i64* %PC.i1307
  %789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %790 = load i8, i8* %789, align 1
  store i8 %790, i8* %BRANCH_TAKEN, align 1
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %792 = icmp ne i8 %790, 0
  %793 = select i1 %792, i64 %784, i64 %786
  store i64 %793, i64* %791, align 8
  store %struct.Memory* %loadMem_47cdf6, %struct.Memory** %MEMORY
  %loadBr_47cdf6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cdf6 = icmp eq i8 %loadBr_47cdf6, 1
  br i1 %cmpBr_47cdf6, label %block_.L_47ce15, label %block_47cdfc

block_47cdfc:                                     ; preds = %block_47cde7
  %loadMem_47cdfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 33
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %796 to i64*
  %797 = load i64, i64* %PC.i1306
  %798 = add i64 %797, 5
  %799 = load i64, i64* %PC.i1306
  %800 = add i64 %799, 5
  store i64 %800, i64* %PC.i1306
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %798, i64* %801, align 8
  store %struct.Memory* %loadMem_47cdfc, %struct.Memory** %MEMORY
  br label %block_.L_47ce01

block_.L_47ce01:                                  ; preds = %block_47cdfc
  %loadMem_47ce01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %803 = getelementptr inbounds %struct.GPR, %struct.GPR* %802, i32 0, i32 33
  %804 = getelementptr inbounds %struct.Reg, %struct.Reg* %803, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %804 to i64*
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %806 = getelementptr inbounds %struct.GPR, %struct.GPR* %805, i32 0, i32 1
  %807 = getelementptr inbounds %struct.Reg, %struct.Reg* %806, i32 0, i32 0
  %RAX.i1304 = bitcast %union.anon* %807 to i64*
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 15
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %RBP.i1305 = bitcast %union.anon* %810 to i64*
  %811 = load i64, i64* %RBP.i1305
  %812 = sub i64 %811, 20
  %813 = load i64, i64* %PC.i1303
  %814 = add i64 %813, 3
  store i64 %814, i64* %PC.i1303
  %815 = inttoptr i64 %812 to i32*
  %816 = load i32, i32* %815
  %817 = zext i32 %816 to i64
  store i64 %817, i64* %RAX.i1304, align 8
  store %struct.Memory* %loadMem_47ce01, %struct.Memory** %MEMORY
  %loadMem_47ce04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 33
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %820 to i64*
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %822 = getelementptr inbounds %struct.GPR, %struct.GPR* %821, i32 0, i32 1
  %823 = getelementptr inbounds %struct.Reg, %struct.Reg* %822, i32 0, i32 0
  %RAX.i1302 = bitcast %union.anon* %823 to i64*
  %824 = load i64, i64* %RAX.i1302
  %825 = load i64, i64* %PC.i1301
  %826 = add i64 %825, 3
  store i64 %826, i64* %PC.i1301
  %827 = trunc i64 %824 to i32
  %828 = sub i32 %827, 1
  %829 = zext i32 %828 to i64
  store i64 %829, i64* %RAX.i1302, align 8
  %830 = icmp ult i32 %827, 1
  %831 = zext i1 %830 to i8
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %831, i8* %832, align 1
  %833 = and i32 %828, 255
  %834 = call i32 @llvm.ctpop.i32(i32 %833)
  %835 = trunc i32 %834 to i8
  %836 = and i8 %835, 1
  %837 = xor i8 %836, 1
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %837, i8* %838, align 1
  %839 = xor i64 1, %824
  %840 = trunc i64 %839 to i32
  %841 = xor i32 %840, %828
  %842 = lshr i32 %841, 4
  %843 = trunc i32 %842 to i8
  %844 = and i8 %843, 1
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %844, i8* %845, align 1
  %846 = icmp eq i32 %828, 0
  %847 = zext i1 %846 to i8
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %847, i8* %848, align 1
  %849 = lshr i32 %828, 31
  %850 = trunc i32 %849 to i8
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %850, i8* %851, align 1
  %852 = lshr i32 %827, 31
  %853 = xor i32 %849, %852
  %854 = add i32 %853, %852
  %855 = icmp eq i32 %854, 2
  %856 = zext i1 %855 to i8
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %856, i8* %857, align 1
  store %struct.Memory* %loadMem_47ce04, %struct.Memory** %MEMORY
  %loadMem_47ce07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 33
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %860 to i64*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 1
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %EAX.i1299 = bitcast %union.anon* %863 to i32*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 15
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %866 to i64*
  %867 = load i64, i64* %RBP.i1300
  %868 = sub i64 %867, 24
  %869 = load i32, i32* %EAX.i1299
  %870 = zext i32 %869 to i64
  %871 = load i64, i64* %PC.i1298
  %872 = add i64 %871, 3
  store i64 %872, i64* %PC.i1298
  %873 = inttoptr i64 %868 to i32*
  store i32 %869, i32* %873
  store %struct.Memory* %loadMem_47ce07, %struct.Memory** %MEMORY
  %loadMem_47ce0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %875 = getelementptr inbounds %struct.GPR, %struct.GPR* %874, i32 0, i32 33
  %876 = getelementptr inbounds %struct.Reg, %struct.Reg* %875, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %876 to i64*
  %877 = load i64, i64* %PC.i1297
  %878 = add i64 %877, 1432
  %879 = load i64, i64* %PC.i1297
  %880 = add i64 %879, 6
  %881 = load i64, i64* %PC.i1297
  %882 = add i64 %881, 6
  store i64 %882, i64* %PC.i1297
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %884 = load i8, i8* %883, align 1
  store i8 %884, i8* %BRANCH_TAKEN, align 1
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %886 = icmp ne i8 %884, 0
  %887 = select i1 %886, i64 %878, i64 %880
  store i64 %887, i64* %885, align 8
  store %struct.Memory* %loadMem_47ce0a, %struct.Memory** %MEMORY
  %loadBr_47ce0a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ce0a = icmp eq i8 %loadBr_47ce0a, 1
  br i1 %cmpBr_47ce0a, label %block_.L_47d3a2, label %block_47ce10

block_47ce10:                                     ; preds = %block_.L_47ce01
  %loadMem_47ce10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %889 = getelementptr inbounds %struct.GPR, %struct.GPR* %888, i32 0, i32 33
  %890 = getelementptr inbounds %struct.Reg, %struct.Reg* %889, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %890 to i64*
  %891 = load i64, i64* %PC.i1296
  %892 = add i64 %891, 1844
  %893 = load i64, i64* %PC.i1296
  %894 = add i64 %893, 5
  store i64 %894, i64* %PC.i1296
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %892, i64* %895, align 8
  store %struct.Memory* %loadMem_47ce10, %struct.Memory** %MEMORY
  br label %block_.L_47d544

block_.L_47ce15:                                  ; preds = %block_47cde7
  %loadMem_47ce15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %897 = getelementptr inbounds %struct.GPR, %struct.GPR* %896, i32 0, i32 33
  %898 = getelementptr inbounds %struct.Reg, %struct.Reg* %897, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %898 to i64*
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %900 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %899, i64 0, i64 0
  %YMM0.i1295 = bitcast %union.VectorReg* %900 to %"class.std::bitset"*
  %901 = bitcast %"class.std::bitset"* %YMM0.i1295 to i8*
  %902 = load i64, i64* %PC.i1294
  %903 = add i64 %902, 9
  store i64 %903, i64* %PC.i1294
  %904 = load double, double* bitcast (%G_0x6f6f80_type* @G_0x6f6f80 to double*)
  %905 = bitcast i8* %901 to double*
  store double %904, double* %905, align 1
  %906 = getelementptr inbounds i8, i8* %901, i64 8
  %907 = bitcast i8* %906 to double*
  store double 0.000000e+00, double* %907, align 1
  store %struct.Memory* %loadMem_47ce15, %struct.Memory** %MEMORY
  %loadMem_47ce1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 33
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %910 to i64*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %912 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %911, i64 0, i64 0
  %XMM0.i1290 = bitcast %union.VectorReg* %912 to %union.vec128_t*
  %913 = bitcast %union.vec128_t* %XMM0.i1290 to i8*
  %914 = load i64, i64* %PC.i1289
  %915 = add i64 %914, 9
  store i64 %915, i64* %PC.i1289
  %916 = bitcast i8* %913 to double*
  %917 = load double, double* %916, align 1
  %918 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %919 = fcmp uno double %917, %918
  br i1 %919, label %920, label %932

; <label>:920:                                    ; preds = %block_.L_47ce15
  %921 = fadd double %917, %918
  %922 = bitcast double %921 to i64
  %923 = and i64 %922, 9221120237041090560
  %924 = icmp eq i64 %923, 9218868437227405312
  %925 = and i64 %922, 2251799813685247
  %926 = icmp ne i64 %925, 0
  %927 = and i1 %924, %926
  br i1 %927, label %928, label %938

; <label>:928:                                    ; preds = %920
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %930 = load i64, i64* %929, align 8
  %931 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %930, %struct.Memory* %loadMem_47ce1e)
  br label %routine_ucomisd_0x6ccf88___xmm0.exit1291

; <label>:932:                                    ; preds = %block_.L_47ce15
  %933 = fcmp ogt double %917, %918
  br i1 %933, label %938, label %934

; <label>:934:                                    ; preds = %932
  %935 = fcmp olt double %917, %918
  br i1 %935, label %938, label %936

; <label>:936:                                    ; preds = %934
  %937 = fcmp oeq double %917, %918
  br i1 %937, label %938, label %945

; <label>:938:                                    ; preds = %936, %934, %932, %920
  %939 = phi i8 [ 0, %932 ], [ 0, %934 ], [ 1, %936 ], [ 1, %920 ]
  %940 = phi i8 [ 0, %932 ], [ 0, %934 ], [ 0, %936 ], [ 1, %920 ]
  %941 = phi i8 [ 0, %932 ], [ 1, %934 ], [ 0, %936 ], [ 1, %920 ]
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %939, i8* %942, align 1
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %940, i8* %943, align 1
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %941, i8* %944, align 1
  br label %945

; <label>:945:                                    ; preds = %938, %936
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %946, align 1
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %947, align 1
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %948, align 1
  br label %routine_ucomisd_0x6ccf88___xmm0.exit1291

routine_ucomisd_0x6ccf88___xmm0.exit1291:         ; preds = %928, %945
  %949 = phi %struct.Memory* [ %931, %928 ], [ %loadMem_47ce1e, %945 ]
  store %struct.Memory* %949, %struct.Memory** %MEMORY
  %loadMem_47ce27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %951 = getelementptr inbounds %struct.GPR, %struct.GPR* %950, i32 0, i32 33
  %952 = getelementptr inbounds %struct.Reg, %struct.Reg* %951, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %952 to i64*
  %953 = load i64, i64* %PC.i1288
  %954 = add i64 %953, 17
  %955 = load i64, i64* %PC.i1288
  %956 = add i64 %955, 6
  %957 = load i64, i64* %PC.i1288
  %958 = add i64 %957, 6
  store i64 %958, i64* %PC.i1288
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %960 = load i8, i8* %959, align 1
  %961 = icmp eq i8 %960, 0
  %962 = zext i1 %961 to i8
  store i8 %962, i8* %BRANCH_TAKEN, align 1
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %964 = select i1 %961, i64 %954, i64 %956
  store i64 %964, i64* %963, align 8
  store %struct.Memory* %loadMem_47ce27, %struct.Memory** %MEMORY
  %loadBr_47ce27 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ce27 = icmp eq i8 %loadBr_47ce27, 1
  br i1 %cmpBr_47ce27, label %block_.L_47ce38, label %block_47ce2d

block_47ce2d:                                     ; preds = %routine_ucomisd_0x6ccf88___xmm0.exit1291
  %loadMem_47ce2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 33
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %967 to i64*
  %968 = load i64, i64* %PC.i1287
  %969 = add i64 %968, 11
  %970 = load i64, i64* %PC.i1287
  %971 = add i64 %970, 6
  %972 = load i64, i64* %PC.i1287
  %973 = add i64 %972, 6
  store i64 %973, i64* %PC.i1287
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %975 = load i8, i8* %974, align 1
  store i8 %975, i8* %BRANCH_TAKEN, align 1
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %977 = icmp ne i8 %975, 0
  %978 = select i1 %977, i64 %969, i64 %971
  store i64 %978, i64* %976, align 8
  store %struct.Memory* %loadMem_47ce2d, %struct.Memory** %MEMORY
  %loadBr_47ce2d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ce2d = icmp eq i8 %loadBr_47ce2d, 1
  br i1 %cmpBr_47ce2d, label %block_.L_47ce38, label %block_47ce33

block_47ce33:                                     ; preds = %block_47ce2d
  %loadMem_47ce33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %980 = getelementptr inbounds %struct.GPR, %struct.GPR* %979, i32 0, i32 33
  %981 = getelementptr inbounds %struct.Reg, %struct.Reg* %980, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %981 to i64*
  %982 = load i64, i64* %PC.i1286
  %983 = add i64 %982, 92
  %984 = load i64, i64* %PC.i1286
  %985 = add i64 %984, 5
  store i64 %985, i64* %PC.i1286
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %983, i64* %986, align 8
  store %struct.Memory* %loadMem_47ce33, %struct.Memory** %MEMORY
  br label %block_.L_47ce8f

block_.L_47ce38:                                  ; preds = %block_47ce2d, %routine_ucomisd_0x6ccf88___xmm0.exit1291
  %loadMem_47ce38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 33
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %989 to i64*
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %991 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %990, i64 0, i64 0
  %YMM0.i1285 = bitcast %union.VectorReg* %991 to %"class.std::bitset"*
  %992 = bitcast %"class.std::bitset"* %YMM0.i1285 to i8*
  %993 = load i64, i64* %PC.i1284
  %994 = add i64 %993, ptrtoint (%G_0x34a48__rip__type* @G_0x34a48__rip_ to i64)
  %995 = load i64, i64* %PC.i1284
  %996 = add i64 %995, 8
  store i64 %996, i64* %PC.i1284
  %997 = inttoptr i64 %994 to double*
  %998 = load double, double* %997
  %999 = bitcast i8* %992 to double*
  store double %998, double* %999, align 1
  %1000 = getelementptr inbounds i8, i8* %992, i64 8
  %1001 = bitcast i8* %1000 to double*
  store double 0.000000e+00, double* %1001, align 1
  store %struct.Memory* %loadMem_47ce38, %struct.Memory** %MEMORY
  %loadMem_47ce40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1003 = getelementptr inbounds %struct.GPR, %struct.GPR* %1002, i32 0, i32 33
  %1004 = getelementptr inbounds %struct.Reg, %struct.Reg* %1003, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %1004 to i64*
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1006 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1005, i64 0, i64 1
  %YMM1.i1283 = bitcast %union.VectorReg* %1006 to %"class.std::bitset"*
  %1007 = bitcast %"class.std::bitset"* %YMM1.i1283 to i8*
  %1008 = load i64, i64* %PC.i1282
  %1009 = add i64 %1008, 9
  store i64 %1009, i64* %PC.i1282
  %1010 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %1011 = bitcast i8* %1007 to double*
  store double %1010, double* %1011, align 1
  %1012 = getelementptr inbounds i8, i8* %1007, i64 8
  %1013 = bitcast i8* %1012 to double*
  store double 0.000000e+00, double* %1013, align 1
  store %struct.Memory* %loadMem_47ce40, %struct.Memory** %MEMORY
  %loadMem_47ce49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1015 = getelementptr inbounds %struct.GPR, %struct.GPR* %1014, i32 0, i32 33
  %1016 = getelementptr inbounds %struct.Reg, %struct.Reg* %1015, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %1016 to i64*
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1018 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1017, i64 0, i64 1
  %YMM1.i1281 = bitcast %union.VectorReg* %1018 to %"class.std::bitset"*
  %1019 = bitcast %"class.std::bitset"* %YMM1.i1281 to i8*
  %1020 = bitcast %"class.std::bitset"* %YMM1.i1281 to i8*
  %1021 = load i64, i64* %PC.i1280
  %1022 = add i64 %1021, 9
  store i64 %1022, i64* %PC.i1280
  %1023 = bitcast i8* %1020 to double*
  %1024 = load double, double* %1023, align 1
  %1025 = getelementptr inbounds i8, i8* %1020, i64 8
  %1026 = bitcast i8* %1025 to i64*
  %1027 = load i64, i64* %1026, align 1
  %1028 = load double, double* bitcast (%G_0x6f6f80_type* @G_0x6f6f80 to double*)
  %1029 = fsub double %1024, %1028
  %1030 = bitcast i8* %1019 to double*
  store double %1029, double* %1030, align 1
  %1031 = getelementptr inbounds i8, i8* %1019, i64 8
  %1032 = bitcast i8* %1031 to i64*
  store i64 %1027, i64* %1032, align 1
  store %struct.Memory* %loadMem_47ce49, %struct.Memory** %MEMORY
  %loadMem_47ce52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1034 = getelementptr inbounds %struct.GPR, %struct.GPR* %1033, i32 0, i32 33
  %1035 = getelementptr inbounds %struct.Reg, %struct.Reg* %1034, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %1035 to i64*
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1037 = getelementptr inbounds %struct.GPR, %struct.GPR* %1036, i32 0, i32 1
  %1038 = getelementptr inbounds %struct.Reg, %struct.Reg* %1037, i32 0, i32 0
  %RAX.i1279 = bitcast %union.anon* %1038 to i64*
  %1039 = load i64, i64* %PC.i1278
  %1040 = add i64 %1039, 7
  store i64 %1040, i64* %PC.i1278
  %1041 = load i32, i32* bitcast (%G_0x6cc5dc_type* @G_0x6cc5dc to i32*)
  %1042 = zext i32 %1041 to i64
  store i64 %1042, i64* %RAX.i1279, align 8
  store %struct.Memory* %loadMem_47ce52, %struct.Memory** %MEMORY
  %loadMem_47ce59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 33
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %1045 to i64*
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 1
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %RAX.i1277 = bitcast %union.anon* %1048 to i64*
  %1049 = load i64, i64* %RAX.i1277
  %1050 = load i64, i64* %PC.i1276
  %1051 = add i64 %1050, 7
  store i64 %1051, i64* %PC.i1276
  %1052 = trunc i64 %1049 to i32
  %1053 = load i32, i32* bitcast (%G_0x6cc5e0_type* @G_0x6cc5e0 to i32*)
  %1054 = add i32 %1053, %1052
  %1055 = zext i32 %1054 to i64
  store i64 %1055, i64* %RAX.i1277, align 8
  %1056 = icmp ult i32 %1054, %1052
  %1057 = icmp ult i32 %1054, %1053
  %1058 = or i1 %1056, %1057
  %1059 = zext i1 %1058 to i8
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1059, i8* %1060, align 1
  %1061 = and i32 %1054, 255
  %1062 = call i32 @llvm.ctpop.i32(i32 %1061)
  %1063 = trunc i32 %1062 to i8
  %1064 = and i8 %1063, 1
  %1065 = xor i8 %1064, 1
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1065, i8* %1066, align 1
  %1067 = xor i32 %1053, %1052
  %1068 = xor i32 %1067, %1054
  %1069 = lshr i32 %1068, 4
  %1070 = trunc i32 %1069 to i8
  %1071 = and i8 %1070, 1
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1071, i8* %1072, align 1
  %1073 = icmp eq i32 %1054, 0
  %1074 = zext i1 %1073 to i8
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1074, i8* %1075, align 1
  %1076 = lshr i32 %1054, 31
  %1077 = trunc i32 %1076 to i8
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1077, i8* %1078, align 1
  %1079 = lshr i32 %1052, 31
  %1080 = lshr i32 %1053, 31
  %1081 = xor i32 %1076, %1079
  %1082 = xor i32 %1076, %1080
  %1083 = add i32 %1081, %1082
  %1084 = icmp eq i32 %1083, 2
  %1085 = zext i1 %1084 to i8
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1085, i8* %1086, align 1
  store %struct.Memory* %loadMem_47ce59, %struct.Memory** %MEMORY
  %loadMem_47ce60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1088 = getelementptr inbounds %struct.GPR, %struct.GPR* %1087, i32 0, i32 33
  %1089 = getelementptr inbounds %struct.Reg, %struct.Reg* %1088, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %1089 to i64*
  %1090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1091 = getelementptr inbounds %struct.GPR, %struct.GPR* %1090, i32 0, i32 1
  %1092 = getelementptr inbounds %struct.Reg, %struct.Reg* %1091, i32 0, i32 0
  %EAX.i1274 = bitcast %union.anon* %1092 to i32*
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1094 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1093, i64 0, i64 2
  %YMM2.i1275 = bitcast %union.VectorReg* %1094 to %"class.std::bitset"*
  %1095 = bitcast %"class.std::bitset"* %YMM2.i1275 to i8*
  %1096 = load i32, i32* %EAX.i1274
  %1097 = zext i32 %1096 to i64
  %1098 = load i64, i64* %PC.i1273
  %1099 = add i64 %1098, 4
  store i64 %1099, i64* %PC.i1273
  %1100 = sitofp i32 %1096 to double
  %1101 = bitcast i8* %1095 to double*
  store double %1100, double* %1101, align 1
  store %struct.Memory* %loadMem_47ce60, %struct.Memory** %MEMORY
  %loadMem_47ce64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 33
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %1104 to i64*
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1106 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1105, i64 0, i64 1
  %YMM1.i1271 = bitcast %union.VectorReg* %1106 to %"class.std::bitset"*
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1108 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1107, i64 0, i64 2
  %XMM2.i1272 = bitcast %union.VectorReg* %1108 to %union.vec128_t*
  %1109 = bitcast %"class.std::bitset"* %YMM1.i1271 to i8*
  %1110 = bitcast %"class.std::bitset"* %YMM1.i1271 to i8*
  %1111 = bitcast %union.vec128_t* %XMM2.i1272 to i8*
  %1112 = load i64, i64* %PC.i1270
  %1113 = add i64 %1112, 4
  store i64 %1113, i64* %PC.i1270
  %1114 = bitcast i8* %1110 to double*
  %1115 = load double, double* %1114, align 1
  %1116 = getelementptr inbounds i8, i8* %1110, i64 8
  %1117 = bitcast i8* %1116 to i64*
  %1118 = load i64, i64* %1117, align 1
  %1119 = bitcast i8* %1111 to double*
  %1120 = load double, double* %1119, align 1
  %1121 = fmul double %1115, %1120
  %1122 = bitcast i8* %1109 to double*
  store double %1121, double* %1122, align 1
  %1123 = getelementptr inbounds i8, i8* %1109, i64 8
  %1124 = bitcast i8* %1123 to i64*
  store i64 %1118, i64* %1124, align 1
  store %struct.Memory* %loadMem_47ce64, %struct.Memory** %MEMORY
  %loadMem_47ce68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1126 = getelementptr inbounds %struct.GPR, %struct.GPR* %1125, i32 0, i32 33
  %1127 = getelementptr inbounds %struct.Reg, %struct.Reg* %1126, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %1127 to i64*
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1129 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1128, i64 0, i64 1
  %YMM1.i1269 = bitcast %union.VectorReg* %1129 to %"class.std::bitset"*
  %1130 = bitcast %"class.std::bitset"* %YMM1.i1269 to i8*
  %1131 = bitcast %"class.std::bitset"* %YMM1.i1269 to i8*
  %1132 = load i64, i64* %PC.i1268
  %1133 = add i64 %1132, 9
  store i64 %1133, i64* %PC.i1268
  %1134 = bitcast i8* %1131 to double*
  %1135 = load double, double* %1134, align 1
  %1136 = getelementptr inbounds i8, i8* %1131, i64 8
  %1137 = bitcast i8* %1136 to i64*
  %1138 = load i64, i64* %1137, align 1
  %1139 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %1140 = fdiv double %1135, %1139
  %1141 = bitcast i8* %1130 to double*
  store double %1140, double* %1141, align 1
  %1142 = getelementptr inbounds i8, i8* %1130, i64 8
  %1143 = bitcast i8* %1142 to i64*
  store i64 %1138, i64* %1143, align 1
  store %struct.Memory* %loadMem_47ce68, %struct.Memory** %MEMORY
  %loadMem_47ce71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1145 = getelementptr inbounds %struct.GPR, %struct.GPR* %1144, i32 0, i32 33
  %1146 = getelementptr inbounds %struct.Reg, %struct.Reg* %1145, i32 0, i32 0
  %PC.i1265 = bitcast %union.anon* %1146 to i64*
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1148 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1147, i64 0, i64 1
  %YMM1.i1266 = bitcast %union.VectorReg* %1148 to %"class.std::bitset"*
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1150 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1149, i64 0, i64 0
  %XMM0.i1267 = bitcast %union.VectorReg* %1150 to %union.vec128_t*
  %1151 = bitcast %"class.std::bitset"* %YMM1.i1266 to i8*
  %1152 = bitcast %"class.std::bitset"* %YMM1.i1266 to i8*
  %1153 = bitcast %union.vec128_t* %XMM0.i1267 to i8*
  %1154 = load i64, i64* %PC.i1265
  %1155 = add i64 %1154, 4
  store i64 %1155, i64* %PC.i1265
  %1156 = bitcast i8* %1152 to double*
  %1157 = load double, double* %1156, align 1
  %1158 = getelementptr inbounds i8, i8* %1152, i64 8
  %1159 = bitcast i8* %1158 to i64*
  %1160 = load i64, i64* %1159, align 1
  %1161 = bitcast i8* %1153 to double*
  %1162 = load double, double* %1161, align 1
  %1163 = fadd double %1157, %1162
  %1164 = bitcast i8* %1151 to double*
  store double %1163, double* %1164, align 1
  %1165 = getelementptr inbounds i8, i8* %1151, i64 8
  %1166 = bitcast i8* %1165 to i64*
  store i64 %1160, i64* %1166, align 1
  store %struct.Memory* %loadMem_47ce71, %struct.Memory** %MEMORY
  %loadMem_47ce75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 33
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %1169 to i64*
  %1170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1171 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1170, i64 0, i64 0
  %YMM0.i1263 = bitcast %union.VectorReg* %1171 to %"class.std::bitset"*
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1173 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1172, i64 0, i64 1
  %XMM1.i1264 = bitcast %union.VectorReg* %1173 to %union.vec128_t*
  %1174 = bitcast %"class.std::bitset"* %YMM0.i1263 to i8*
  %1175 = bitcast %union.vec128_t* %XMM1.i1264 to i8*
  %1176 = load i64, i64* %PC.i1262
  %1177 = add i64 %1176, 3
  store i64 %1177, i64* %PC.i1262
  %1178 = bitcast i8* %1175 to <2 x i32>*
  %1179 = load <2 x i32>, <2 x i32>* %1178, align 1
  %1180 = getelementptr inbounds i8, i8* %1175, i64 8
  %1181 = bitcast i8* %1180 to <2 x i32>*
  %1182 = load <2 x i32>, <2 x i32>* %1181, align 1
  %1183 = extractelement <2 x i32> %1179, i32 0
  %1184 = bitcast i8* %1174 to i32*
  store i32 %1183, i32* %1184, align 1
  %1185 = extractelement <2 x i32> %1179, i32 1
  %1186 = getelementptr inbounds i8, i8* %1174, i64 4
  %1187 = bitcast i8* %1186 to i32*
  store i32 %1185, i32* %1187, align 1
  %1188 = extractelement <2 x i32> %1182, i32 0
  %1189 = getelementptr inbounds i8, i8* %1174, i64 8
  %1190 = bitcast i8* %1189 to i32*
  store i32 %1188, i32* %1190, align 1
  %1191 = extractelement <2 x i32> %1182, i32 1
  %1192 = getelementptr inbounds i8, i8* %1174, i64 12
  %1193 = bitcast i8* %1192 to i32*
  store i32 %1191, i32* %1193, align 1
  store %struct.Memory* %loadMem_47ce75, %struct.Memory** %MEMORY
  %loadMem1_47ce78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1195 = getelementptr inbounds %struct.GPR, %struct.GPR* %1194, i32 0, i32 33
  %1196 = getelementptr inbounds %struct.Reg, %struct.Reg* %1195, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %1196 to i64*
  %1197 = load i64, i64* %PC.i1261
  %1198 = add i64 %1197, -507080
  %1199 = load i64, i64* %PC.i1261
  %1200 = add i64 %1199, 5
  %1201 = load i64, i64* %PC.i1261
  %1202 = add i64 %1201, 5
  store i64 %1202, i64* %PC.i1261
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1204 = load i64, i64* %1203, align 8
  %1205 = add i64 %1204, -8
  %1206 = inttoptr i64 %1205 to i64*
  store i64 %1200, i64* %1206
  store i64 %1205, i64* %1203, align 8
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1198, i64* %1207, align 8
  store %struct.Memory* %loadMem1_47ce78, %struct.Memory** %MEMORY
  %loadMem2_47ce78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47ce78 = load i64, i64* %3
  %1208 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47ce78)
  store %struct.Memory* %1208, %struct.Memory** %MEMORY
  %loadMem_47ce7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1210 = getelementptr inbounds %struct.GPR, %struct.GPR* %1209, i32 0, i32 33
  %1211 = getelementptr inbounds %struct.Reg, %struct.Reg* %1210, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %1211 to i64*
  %1212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1213 = getelementptr inbounds %struct.GPR, %struct.GPR* %1212, i32 0, i32 1
  %1214 = getelementptr inbounds %struct.Reg, %struct.Reg* %1213, i32 0, i32 0
  %RAX.i1257 = bitcast %union.anon* %1214 to i64*
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1216 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1215, i64 0, i64 0
  %XMM0.i1258 = bitcast %union.VectorReg* %1216 to %union.vec128_t*
  %1217 = bitcast %union.vec128_t* %XMM0.i1258 to i8*
  %1218 = load i64, i64* %PC.i1256
  %1219 = add i64 %1218, 4
  store i64 %1219, i64* %PC.i1256
  %1220 = bitcast i8* %1217 to double*
  %1221 = load double, double* %1220, align 1
  %1222 = call double @llvm.trunc.f64(double %1221)
  %1223 = call double @llvm.fabs.f64(double %1222)
  %1224 = fcmp ogt double %1223, 0x41DFFFFFFFC00000
  %1225 = fptosi double %1222 to i32
  %1226 = zext i32 %1225 to i64
  %1227 = select i1 %1224, i64 2147483648, i64 %1226
  store i64 %1227, i64* %RAX.i1257, align 8
  store %struct.Memory* %loadMem_47ce7d, %struct.Memory** %MEMORY
  %loadMem_47ce81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1229 = getelementptr inbounds %struct.GPR, %struct.GPR* %1228, i32 0, i32 33
  %1230 = getelementptr inbounds %struct.Reg, %struct.Reg* %1229, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %1230 to i64*
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 1
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %RAX.i1255 = bitcast %union.anon* %1233 to i64*
  %1234 = load i64, i64* %RAX.i1255
  %1235 = load i64, i64* %PC.i1254
  %1236 = add i64 %1235, 7
  store i64 %1236, i64* %PC.i1254
  %1237 = trunc i64 %1234 to i32
  %1238 = load i32, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  %1239 = add i32 %1238, %1237
  %1240 = zext i32 %1239 to i64
  store i64 %1240, i64* %RAX.i1255, align 8
  %1241 = icmp ult i32 %1239, %1237
  %1242 = icmp ult i32 %1239, %1238
  %1243 = or i1 %1241, %1242
  %1244 = zext i1 %1243 to i8
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1244, i8* %1245, align 1
  %1246 = and i32 %1239, 255
  %1247 = call i32 @llvm.ctpop.i32(i32 %1246)
  %1248 = trunc i32 %1247 to i8
  %1249 = and i8 %1248, 1
  %1250 = xor i8 %1249, 1
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1250, i8* %1251, align 1
  %1252 = xor i32 %1238, %1237
  %1253 = xor i32 %1252, %1239
  %1254 = lshr i32 %1253, 4
  %1255 = trunc i32 %1254 to i8
  %1256 = and i8 %1255, 1
  %1257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1256, i8* %1257, align 1
  %1258 = icmp eq i32 %1239, 0
  %1259 = zext i1 %1258 to i8
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1259, i8* %1260, align 1
  %1261 = lshr i32 %1239, 31
  %1262 = trunc i32 %1261 to i8
  %1263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1262, i8* %1263, align 1
  %1264 = lshr i32 %1237, 31
  %1265 = lshr i32 %1238, 31
  %1266 = xor i32 %1261, %1264
  %1267 = xor i32 %1261, %1265
  %1268 = add i32 %1266, %1267
  %1269 = icmp eq i32 %1268, 2
  %1270 = zext i1 %1269 to i8
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1270, i8* %1271, align 1
  store %struct.Memory* %loadMem_47ce81, %struct.Memory** %MEMORY
  %loadMem_47ce88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1273 = getelementptr inbounds %struct.GPR, %struct.GPR* %1272, i32 0, i32 33
  %1274 = getelementptr inbounds %struct.Reg, %struct.Reg* %1273, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %1274 to i64*
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1276 = getelementptr inbounds %struct.GPR, %struct.GPR* %1275, i32 0, i32 1
  %1277 = getelementptr inbounds %struct.Reg, %struct.Reg* %1276, i32 0, i32 0
  %EAX.i1253 = bitcast %union.anon* %1277 to i32*
  %1278 = load i32, i32* %EAX.i1253
  %1279 = zext i32 %1278 to i64
  %1280 = load i64, i64* %PC.i1252
  %1281 = add i64 %1280, 7
  store i64 %1281, i64* %PC.i1252
  store i32 %1278, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  store %struct.Memory* %loadMem_47ce88, %struct.Memory** %MEMORY
  br label %block_.L_47ce8f

block_.L_47ce8f:                                  ; preds = %block_.L_47ce38, %block_47ce33
  %loadMem_47ce8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1283 = getelementptr inbounds %struct.GPR, %struct.GPR* %1282, i32 0, i32 33
  %1284 = getelementptr inbounds %struct.Reg, %struct.Reg* %1283, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %1284 to i64*
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1286 = getelementptr inbounds %struct.GPR, %struct.GPR* %1285, i32 0, i32 1
  %1287 = getelementptr inbounds %struct.Reg, %struct.Reg* %1286, i32 0, i32 0
  %RAX.i1251 = bitcast %union.anon* %1287 to i64*
  %1288 = load i64, i64* %PC.i1250
  %1289 = add i64 %1288, 8
  store i64 %1289, i64* %PC.i1250
  %1290 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1290, i64* %RAX.i1251, align 8
  store %struct.Memory* %loadMem_47ce8f, %struct.Memory** %MEMORY
  %loadMem_47ce97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1292 = getelementptr inbounds %struct.GPR, %struct.GPR* %1291, i32 0, i32 33
  %1293 = getelementptr inbounds %struct.Reg, %struct.Reg* %1292, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %1293 to i64*
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1295 = getelementptr inbounds %struct.GPR, %struct.GPR* %1294, i32 0, i32 1
  %1296 = getelementptr inbounds %struct.Reg, %struct.Reg* %1295, i32 0, i32 0
  %RAX.i1248 = bitcast %union.anon* %1296 to i64*
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1298 = getelementptr inbounds %struct.GPR, %struct.GPR* %1297, i32 0, i32 5
  %1299 = getelementptr inbounds %struct.Reg, %struct.Reg* %1298, i32 0, i32 0
  %RCX.i1249 = bitcast %union.anon* %1299 to i64*
  %1300 = load i64, i64* %RAX.i1248
  %1301 = add i64 %1300, 72620
  %1302 = load i64, i64* %PC.i1247
  %1303 = add i64 %1302, 6
  store i64 %1303, i64* %PC.i1247
  %1304 = inttoptr i64 %1301 to i32*
  %1305 = load i32, i32* %1304
  %1306 = zext i32 %1305 to i64
  store i64 %1306, i64* %RCX.i1249, align 8
  store %struct.Memory* %loadMem_47ce97, %struct.Memory** %MEMORY
  %loadMem_47ce9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1308 = getelementptr inbounds %struct.GPR, %struct.GPR* %1307, i32 0, i32 33
  %1309 = getelementptr inbounds %struct.Reg, %struct.Reg* %1308, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %1309 to i64*
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 1
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %RAX.i1246 = bitcast %union.anon* %1312 to i64*
  %1313 = load i64, i64* %PC.i1245
  %1314 = add i64 %1313, 8
  store i64 %1314, i64* %PC.i1245
  %1315 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1315, i64* %RAX.i1246, align 8
  store %struct.Memory* %loadMem_47ce9d, %struct.Memory** %MEMORY
  %loadMem_47cea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1317 = getelementptr inbounds %struct.GPR, %struct.GPR* %1316, i32 0, i32 33
  %1318 = getelementptr inbounds %struct.Reg, %struct.Reg* %1317, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %1318 to i64*
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1320 = getelementptr inbounds %struct.GPR, %struct.GPR* %1319, i32 0, i32 5
  %1321 = getelementptr inbounds %struct.Reg, %struct.Reg* %1320, i32 0, i32 0
  %ECX.i1243 = bitcast %union.anon* %1321 to i32*
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1323 = getelementptr inbounds %struct.GPR, %struct.GPR* %1322, i32 0, i32 1
  %1324 = getelementptr inbounds %struct.Reg, %struct.Reg* %1323, i32 0, i32 0
  %RAX.i1244 = bitcast %union.anon* %1324 to i64*
  %1325 = load i32, i32* %ECX.i1243
  %1326 = zext i32 %1325 to i64
  %1327 = load i64, i64* %RAX.i1244
  %1328 = add i64 %1327, 72608
  %1329 = load i64, i64* %PC.i1242
  %1330 = add i64 %1329, 6
  store i64 %1330, i64* %PC.i1242
  %1331 = inttoptr i64 %1328 to i32*
  %1332 = load i32, i32* %1331
  %1333 = sub i32 %1325, %1332
  %1334 = icmp ult i32 %1325, %1332
  %1335 = zext i1 %1334 to i8
  %1336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1335, i8* %1336, align 1
  %1337 = and i32 %1333, 255
  %1338 = call i32 @llvm.ctpop.i32(i32 %1337)
  %1339 = trunc i32 %1338 to i8
  %1340 = and i8 %1339, 1
  %1341 = xor i8 %1340, 1
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1341, i8* %1342, align 1
  %1343 = xor i32 %1332, %1325
  %1344 = xor i32 %1343, %1333
  %1345 = lshr i32 %1344, 4
  %1346 = trunc i32 %1345 to i8
  %1347 = and i8 %1346, 1
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1347, i8* %1348, align 1
  %1349 = icmp eq i32 %1333, 0
  %1350 = zext i1 %1349 to i8
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1350, i8* %1351, align 1
  %1352 = lshr i32 %1333, 31
  %1353 = trunc i32 %1352 to i8
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1353, i8* %1354, align 1
  %1355 = lshr i32 %1325, 31
  %1356 = lshr i32 %1332, 31
  %1357 = xor i32 %1356, %1355
  %1358 = xor i32 %1352, %1355
  %1359 = add i32 %1358, %1357
  %1360 = icmp eq i32 %1359, 2
  %1361 = zext i1 %1360 to i8
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1361, i8* %1362, align 1
  store %struct.Memory* %loadMem_47cea5, %struct.Memory** %MEMORY
  %loadMem_47ceab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1364 = getelementptr inbounds %struct.GPR, %struct.GPR* %1363, i32 0, i32 33
  %1365 = getelementptr inbounds %struct.Reg, %struct.Reg* %1364, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %1365 to i64*
  %1366 = load i64, i64* %PC.i1241
  %1367 = add i64 %1366, 188
  %1368 = load i64, i64* %PC.i1241
  %1369 = add i64 %1368, 6
  %1370 = load i64, i64* %PC.i1241
  %1371 = add i64 %1370, 6
  store i64 %1371, i64* %PC.i1241
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1373 = load i8, i8* %1372, align 1
  %1374 = icmp eq i8 %1373, 0
  %1375 = zext i1 %1374 to i8
  store i8 %1375, i8* %BRANCH_TAKEN, align 1
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1377 = select i1 %1374, i64 %1367, i64 %1369
  store i64 %1377, i64* %1376, align 8
  store %struct.Memory* %loadMem_47ceab, %struct.Memory** %MEMORY
  %loadBr_47ceab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47ceab = icmp eq i8 %loadBr_47ceab, 1
  br i1 %cmpBr_47ceab, label %block_.L_47cf67, label %block_47ceb1

block_47ceb1:                                     ; preds = %block_.L_47ce8f
  %loadMem_47ceb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1379 = getelementptr inbounds %struct.GPR, %struct.GPR* %1378, i32 0, i32 33
  %1380 = getelementptr inbounds %struct.Reg, %struct.Reg* %1379, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %1380 to i64*
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1382 = getelementptr inbounds %struct.GPR, %struct.GPR* %1381, i32 0, i32 1
  %1383 = getelementptr inbounds %struct.Reg, %struct.Reg* %1382, i32 0, i32 0
  %RAX.i1240 = bitcast %union.anon* %1383 to i64*
  %1384 = load i64, i64* %PC.i1239
  %1385 = add i64 %1384, 8
  store i64 %1385, i64* %PC.i1239
  %1386 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1386, i64* %RAX.i1240, align 8
  store %struct.Memory* %loadMem_47ceb1, %struct.Memory** %MEMORY
  %loadMem_47ceb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 33
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %1389 to i64*
  %1390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1391 = getelementptr inbounds %struct.GPR, %struct.GPR* %1390, i32 0, i32 1
  %1392 = getelementptr inbounds %struct.Reg, %struct.Reg* %1391, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %1392 to i64*
  %1393 = load i64, i64* %RAX.i1238
  %1394 = add i64 %1393, 72576
  %1395 = load i64, i64* %PC.i1237
  %1396 = add i64 %1395, 7
  store i64 %1396, i64* %PC.i1237
  %1397 = inttoptr i64 %1394 to i32*
  %1398 = load i32, i32* %1397
  %1399 = sub i32 %1398, 1
  %1400 = icmp ult i32 %1398, 1
  %1401 = zext i1 %1400 to i8
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1401, i8* %1402, align 1
  %1403 = and i32 %1399, 255
  %1404 = call i32 @llvm.ctpop.i32(i32 %1403)
  %1405 = trunc i32 %1404 to i8
  %1406 = and i8 %1405, 1
  %1407 = xor i8 %1406, 1
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1407, i8* %1408, align 1
  %1409 = xor i32 %1398, 1
  %1410 = xor i32 %1409, %1399
  %1411 = lshr i32 %1410, 4
  %1412 = trunc i32 %1411 to i8
  %1413 = and i8 %1412, 1
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1413, i8* %1414, align 1
  %1415 = icmp eq i32 %1399, 0
  %1416 = zext i1 %1415 to i8
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1416, i8* %1417, align 1
  %1418 = lshr i32 %1399, 31
  %1419 = trunc i32 %1418 to i8
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1419, i8* %1420, align 1
  %1421 = lshr i32 %1398, 31
  %1422 = xor i32 %1418, %1421
  %1423 = add i32 %1422, %1421
  %1424 = icmp eq i32 %1423, 2
  %1425 = zext i1 %1424 to i8
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1425, i8* %1426, align 1
  store %struct.Memory* %loadMem_47ceb9, %struct.Memory** %MEMORY
  %loadMem_47cec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 33
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %PC.i1236 = bitcast %union.anon* %1429 to i64*
  %1430 = load i64, i64* %PC.i1236
  %1431 = add i64 %1430, 105
  %1432 = load i64, i64* %PC.i1236
  %1433 = add i64 %1432, 6
  %1434 = load i64, i64* %PC.i1236
  %1435 = add i64 %1434, 6
  store i64 %1435, i64* %PC.i1236
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1437 = load i8, i8* %1436, align 1
  %1438 = icmp eq i8 %1437, 0
  %1439 = zext i1 %1438 to i8
  store i8 %1439, i8* %BRANCH_TAKEN, align 1
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1441 = select i1 %1438, i64 %1431, i64 %1433
  store i64 %1441, i64* %1440, align 8
  store %struct.Memory* %loadMem_47cec0, %struct.Memory** %MEMORY
  %loadBr_47cec0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cec0 = icmp eq i8 %loadBr_47cec0, 1
  br i1 %cmpBr_47cec0, label %block_.L_47cf29, label %block_47cec6

block_47cec6:                                     ; preds = %block_47ceb1
  %loadMem_47cec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1443 = getelementptr inbounds %struct.GPR, %struct.GPR* %1442, i32 0, i32 33
  %1444 = getelementptr inbounds %struct.Reg, %struct.Reg* %1443, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %1444 to i64*
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1446 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1445, i64 0, i64 0
  %YMM0.i1235 = bitcast %union.VectorReg* %1446 to %"class.std::bitset"*
  %1447 = bitcast %"class.std::bitset"* %YMM0.i1235 to i8*
  %1448 = load i64, i64* %PC.i1234
  %1449 = add i64 %1448, 9
  store i64 %1449, i64* %PC.i1234
  %1450 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %1451 = bitcast i8* %1447 to double*
  store double %1450, double* %1451, align 1
  %1452 = getelementptr inbounds i8, i8* %1447, i64 8
  %1453 = bitcast i8* %1452 to double*
  store double 0.000000e+00, double* %1453, align 1
  store %struct.Memory* %loadMem_47cec6, %struct.Memory** %MEMORY
  %loadMem_47cecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1455 = getelementptr inbounds %struct.GPR, %struct.GPR* %1454, i32 0, i32 33
  %1456 = getelementptr inbounds %struct.Reg, %struct.Reg* %1455, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %1456 to i64*
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1458 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1457, i64 0, i64 0
  %XMM0.i1233 = bitcast %union.VectorReg* %1458 to %union.vec128_t*
  %1459 = bitcast %union.vec128_t* %XMM0.i1233 to i8*
  %1460 = load i64, i64* %PC.i1232
  %1461 = add i64 %1460, 9
  store i64 %1461, i64* %PC.i1232
  %1462 = bitcast i8* %1459 to double*
  %1463 = load double, double* %1462, align 1
  store double %1463, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47cecf, %struct.Memory** %MEMORY
  %loadMem_47ced8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 33
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %1466 to i64*
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1468 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1467, i64 0, i64 0
  %YMM0.i1231 = bitcast %union.VectorReg* %1468 to %"class.std::bitset"*
  %1469 = bitcast %"class.std::bitset"* %YMM0.i1231 to i8*
  %1470 = load i64, i64* %PC.i1230
  %1471 = add i64 %1470, 9
  store i64 %1471, i64* %PC.i1230
  %1472 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %1473 = bitcast i8* %1469 to double*
  store double %1472, double* %1473, align 1
  %1474 = getelementptr inbounds i8, i8* %1469, i64 8
  %1475 = bitcast i8* %1474 to double*
  store double 0.000000e+00, double* %1475, align 1
  store %struct.Memory* %loadMem_47ced8, %struct.Memory** %MEMORY
  %loadMem_47cee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1477 = getelementptr inbounds %struct.GPR, %struct.GPR* %1476, i32 0, i32 33
  %1478 = getelementptr inbounds %struct.Reg, %struct.Reg* %1477, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %1478 to i64*
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1480 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1479, i64 0, i64 0
  %YMM0.i1229 = bitcast %union.VectorReg* %1480 to %"class.std::bitset"*
  %1481 = bitcast %"class.std::bitset"* %YMM0.i1229 to i8*
  %1482 = bitcast %"class.std::bitset"* %YMM0.i1229 to i8*
  %1483 = load i64, i64* %PC.i1228
  %1484 = add i64 %1483, 9
  store i64 %1484, i64* %PC.i1228
  %1485 = bitcast i8* %1482 to double*
  %1486 = load double, double* %1485, align 1
  %1487 = getelementptr inbounds i8, i8* %1482, i64 8
  %1488 = bitcast i8* %1487 to i64*
  %1489 = load i64, i64* %1488, align 1
  %1490 = load double, double* bitcast (%G_0x722fe0_type* @G_0x722fe0 to double*)
  %1491 = fsub double %1486, %1490
  %1492 = bitcast i8* %1481 to double*
  store double %1491, double* %1492, align 1
  %1493 = getelementptr inbounds i8, i8* %1481, i64 8
  %1494 = bitcast i8* %1493 to i64*
  store i64 %1489, i64* %1494, align 1
  store %struct.Memory* %loadMem_47cee1, %struct.Memory** %MEMORY
  %loadMem_47ceea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 33
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 1
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RAX.i1227 = bitcast %union.anon* %1500 to i64*
  %1501 = load i64, i64* %PC.i1226
  %1502 = add i64 %1501, 7
  store i64 %1502, i64* %PC.i1226
  %1503 = load i32, i32* bitcast (%G_0x722fd8_type* @G_0x722fd8 to i32*)
  %1504 = zext i32 %1503 to i64
  store i64 %1504, i64* %RAX.i1227, align 8
  store %struct.Memory* %loadMem_47ceea, %struct.Memory** %MEMORY
  %loadMem_47cef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 33
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %1507 to i64*
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1509 = getelementptr inbounds %struct.GPR, %struct.GPR* %1508, i32 0, i32 1
  %1510 = getelementptr inbounds %struct.Reg, %struct.Reg* %1509, i32 0, i32 0
  %RAX.i1225 = bitcast %union.anon* %1510 to i64*
  %1511 = load i64, i64* %RAX.i1225
  %1512 = load i64, i64* %PC.i1224
  %1513 = add i64 %1512, 3
  store i64 %1513, i64* %PC.i1224
  %1514 = trunc i64 %1511 to i32
  %1515 = sub i32 %1514, 1
  %1516 = zext i32 %1515 to i64
  store i64 %1516, i64* %RAX.i1225, align 8
  %1517 = icmp ult i32 %1514, 1
  %1518 = zext i1 %1517 to i8
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1518, i8* %1519, align 1
  %1520 = and i32 %1515, 255
  %1521 = call i32 @llvm.ctpop.i32(i32 %1520)
  %1522 = trunc i32 %1521 to i8
  %1523 = and i8 %1522, 1
  %1524 = xor i8 %1523, 1
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1524, i8* %1525, align 1
  %1526 = xor i64 1, %1511
  %1527 = trunc i64 %1526 to i32
  %1528 = xor i32 %1527, %1515
  %1529 = lshr i32 %1528, 4
  %1530 = trunc i32 %1529 to i8
  %1531 = and i8 %1530, 1
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1531, i8* %1532, align 1
  %1533 = icmp eq i32 %1515, 0
  %1534 = zext i1 %1533 to i8
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1534, i8* %1535, align 1
  %1536 = lshr i32 %1515, 31
  %1537 = trunc i32 %1536 to i8
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1537, i8* %1538, align 1
  %1539 = lshr i32 %1514, 31
  %1540 = xor i32 %1536, %1539
  %1541 = add i32 %1540, %1539
  %1542 = icmp eq i32 %1541, 2
  %1543 = zext i1 %1542 to i8
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1543, i8* %1544, align 1
  store %struct.Memory* %loadMem_47cef1, %struct.Memory** %MEMORY
  %loadMem_47cef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1546 = getelementptr inbounds %struct.GPR, %struct.GPR* %1545, i32 0, i32 33
  %1547 = getelementptr inbounds %struct.Reg, %struct.Reg* %1546, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %1547 to i64*
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 1
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %EAX.i1222 = bitcast %union.anon* %1550 to i32*
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1552 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1551, i64 0, i64 1
  %YMM1.i1223 = bitcast %union.VectorReg* %1552 to %"class.std::bitset"*
  %1553 = bitcast %"class.std::bitset"* %YMM1.i1223 to i8*
  %1554 = load i32, i32* %EAX.i1222
  %1555 = zext i32 %1554 to i64
  %1556 = load i64, i64* %PC.i1221
  %1557 = add i64 %1556, 4
  store i64 %1557, i64* %PC.i1221
  %1558 = sitofp i32 %1554 to double
  %1559 = bitcast i8* %1553 to double*
  store double %1558, double* %1559, align 1
  store %struct.Memory* %loadMem_47cef4, %struct.Memory** %MEMORY
  %loadMem_47cef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1561 = getelementptr inbounds %struct.GPR, %struct.GPR* %1560, i32 0, i32 33
  %1562 = getelementptr inbounds %struct.Reg, %struct.Reg* %1561, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %1562 to i64*
  %1563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1564 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1563, i64 0, i64 0
  %YMM0.i1219 = bitcast %union.VectorReg* %1564 to %"class.std::bitset"*
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1566 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1565, i64 0, i64 1
  %XMM1.i1220 = bitcast %union.VectorReg* %1566 to %union.vec128_t*
  %1567 = bitcast %"class.std::bitset"* %YMM0.i1219 to i8*
  %1568 = bitcast %"class.std::bitset"* %YMM0.i1219 to i8*
  %1569 = bitcast %union.vec128_t* %XMM1.i1220 to i8*
  %1570 = load i64, i64* %PC.i1218
  %1571 = add i64 %1570, 4
  store i64 %1571, i64* %PC.i1218
  %1572 = bitcast i8* %1568 to double*
  %1573 = load double, double* %1572, align 1
  %1574 = getelementptr inbounds i8, i8* %1568, i64 8
  %1575 = bitcast i8* %1574 to i64*
  %1576 = load i64, i64* %1575, align 1
  %1577 = bitcast i8* %1569 to double*
  %1578 = load double, double* %1577, align 1
  %1579 = fdiv double %1573, %1578
  %1580 = bitcast i8* %1567 to double*
  store double %1579, double* %1580, align 1
  %1581 = getelementptr inbounds i8, i8* %1567, i64 8
  %1582 = bitcast i8* %1581 to i64*
  store i64 %1576, i64* %1582, align 1
  store %struct.Memory* %loadMem_47cef8, %struct.Memory** %MEMORY
  %loadMem_47cefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1584 = getelementptr inbounds %struct.GPR, %struct.GPR* %1583, i32 0, i32 33
  %1585 = getelementptr inbounds %struct.Reg, %struct.Reg* %1584, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %1585 to i64*
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1587 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1586, i64 0, i64 0
  %XMM0.i1217 = bitcast %union.VectorReg* %1587 to %union.vec128_t*
  %1588 = bitcast %union.vec128_t* %XMM0.i1217 to i8*
  %1589 = load i64, i64* %PC.i1216
  %1590 = add i64 %1589, 9
  store i64 %1590, i64* %PC.i1216
  %1591 = bitcast i8* %1588 to double*
  %1592 = load double, double* %1591, align 1
  store double %1592, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  store %struct.Memory* %loadMem_47cefc, %struct.Memory** %MEMORY
  %loadMem_47cf05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1594 = getelementptr inbounds %struct.GPR, %struct.GPR* %1593, i32 0, i32 33
  %1595 = getelementptr inbounds %struct.Reg, %struct.Reg* %1594, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %1595 to i64*
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1597 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1596, i64 0, i64 0
  %YMM0.i1215 = bitcast %union.VectorReg* %1597 to %"class.std::bitset"*
  %1598 = bitcast %"class.std::bitset"* %YMM0.i1215 to i8*
  %1599 = load i64, i64* %PC.i1214
  %1600 = add i64 %1599, 9
  store i64 %1600, i64* %PC.i1214
  %1601 = load double, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  %1602 = bitcast i8* %1598 to double*
  store double %1601, double* %1602, align 1
  %1603 = getelementptr inbounds i8, i8* %1598, i64 8
  %1604 = bitcast i8* %1603 to double*
  store double 0.000000e+00, double* %1604, align 1
  store %struct.Memory* %loadMem_47cf05, %struct.Memory** %MEMORY
  %loadMem_47cf0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 33
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %1607 to i64*
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1609 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1608, i64 0, i64 1
  %YMM1.i1213 = bitcast %union.VectorReg* %1609 to %"class.std::bitset"*
  %1610 = bitcast %"class.std::bitset"* %YMM1.i1213 to i8*
  %1611 = load i64, i64* %PC.i1212
  %1612 = add i64 %1611, 9
  store i64 %1612, i64* %PC.i1212
  %1613 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %1614 = bitcast i8* %1610 to double*
  store double %1613, double* %1614, align 1
  %1615 = getelementptr inbounds i8, i8* %1610, i64 8
  %1616 = bitcast i8* %1615 to double*
  store double 0.000000e+00, double* %1616, align 1
  store %struct.Memory* %loadMem_47cf0e, %struct.Memory** %MEMORY
  %loadMem_47cf17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 33
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %PC.i1209 = bitcast %union.anon* %1619 to i64*
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1620, i64 0, i64 1
  %YMM1.i1210 = bitcast %union.VectorReg* %1621 to %"class.std::bitset"*
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1623 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1622, i64 0, i64 0
  %XMM0.i1211 = bitcast %union.VectorReg* %1623 to %union.vec128_t*
  %1624 = bitcast %"class.std::bitset"* %YMM1.i1210 to i8*
  %1625 = bitcast %"class.std::bitset"* %YMM1.i1210 to i8*
  %1626 = bitcast %union.vec128_t* %XMM0.i1211 to i8*
  %1627 = load i64, i64* %PC.i1209
  %1628 = add i64 %1627, 4
  store i64 %1628, i64* %PC.i1209
  %1629 = bitcast i8* %1625 to double*
  %1630 = load double, double* %1629, align 1
  %1631 = getelementptr inbounds i8, i8* %1625, i64 8
  %1632 = bitcast i8* %1631 to i64*
  %1633 = load i64, i64* %1632, align 1
  %1634 = bitcast i8* %1626 to double*
  %1635 = load double, double* %1634, align 1
  %1636 = fsub double %1630, %1635
  %1637 = bitcast i8* %1624 to double*
  store double %1636, double* %1637, align 1
  %1638 = getelementptr inbounds i8, i8* %1624, i64 8
  %1639 = bitcast i8* %1638 to i64*
  store i64 %1633, i64* %1639, align 1
  store %struct.Memory* %loadMem_47cf17, %struct.Memory** %MEMORY
  %loadMem_47cf1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 33
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %1642 to i64*
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1644 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1643, i64 0, i64 1
  %XMM1.i1208 = bitcast %union.VectorReg* %1644 to %union.vec128_t*
  %1645 = bitcast %union.vec128_t* %XMM1.i1208 to i8*
  %1646 = load i64, i64* %PC.i1207
  %1647 = add i64 %1646, 9
  store i64 %1647, i64* %PC.i1207
  %1648 = bitcast i8* %1645 to double*
  %1649 = load double, double* %1648, align 1
  store double %1649, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47cf1b, %struct.Memory** %MEMORY
  %loadMem_47cf24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1651 = getelementptr inbounds %struct.GPR, %struct.GPR* %1650, i32 0, i32 33
  %1652 = getelementptr inbounds %struct.Reg, %struct.Reg* %1651, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %1652 to i64*
  %1653 = load i64, i64* %PC.i1206
  %1654 = add i64 %1653, 62
  %1655 = load i64, i64* %PC.i1206
  %1656 = add i64 %1655, 5
  store i64 %1656, i64* %PC.i1206
  %1657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1654, i64* %1657, align 8
  store %struct.Memory* %loadMem_47cf24, %struct.Memory** %MEMORY
  br label %block_.L_47cf62

block_.L_47cf29:                                  ; preds = %block_47ceb1
  %loadMem_47cf29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 33
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %1660 to i64*
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 1
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %RAX.i1205 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %PC.i1204
  %1665 = add i64 %1664, 8
  store i64 %1665, i64* %PC.i1204
  %1666 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1666, i64* %RAX.i1205, align 8
  store %struct.Memory* %loadMem_47cf29, %struct.Memory** %MEMORY
  %loadMem_47cf31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1668 = getelementptr inbounds %struct.GPR, %struct.GPR* %1667, i32 0, i32 33
  %1669 = getelementptr inbounds %struct.Reg, %struct.Reg* %1668, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %1669 to i64*
  %1670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1671 = getelementptr inbounds %struct.GPR, %struct.GPR* %1670, i32 0, i32 1
  %1672 = getelementptr inbounds %struct.Reg, %struct.Reg* %1671, i32 0, i32 0
  %RAX.i1203 = bitcast %union.anon* %1672 to i64*
  %1673 = load i64, i64* %RAX.i1203
  %1674 = add i64 %1673, 72576
  %1675 = load i64, i64* %PC.i1202
  %1676 = add i64 %1675, 7
  store i64 %1676, i64* %PC.i1202
  %1677 = inttoptr i64 %1674 to i32*
  %1678 = load i32, i32* %1677
  %1679 = sub i32 %1678, 1
  %1680 = icmp ult i32 %1678, 1
  %1681 = zext i1 %1680 to i8
  %1682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1681, i8* %1682, align 1
  %1683 = and i32 %1679, 255
  %1684 = call i32 @llvm.ctpop.i32(i32 %1683)
  %1685 = trunc i32 %1684 to i8
  %1686 = and i8 %1685, 1
  %1687 = xor i8 %1686, 1
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1687, i8* %1688, align 1
  %1689 = xor i32 %1678, 1
  %1690 = xor i32 %1689, %1679
  %1691 = lshr i32 %1690, 4
  %1692 = trunc i32 %1691 to i8
  %1693 = and i8 %1692, 1
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1693, i8* %1694, align 1
  %1695 = icmp eq i32 %1679, 0
  %1696 = zext i1 %1695 to i8
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1696, i8* %1697, align 1
  %1698 = lshr i32 %1679, 31
  %1699 = trunc i32 %1698 to i8
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1699, i8* %1700, align 1
  %1701 = lshr i32 %1678, 31
  %1702 = xor i32 %1698, %1701
  %1703 = add i32 %1702, %1701
  %1704 = icmp eq i32 %1703, 2
  %1705 = zext i1 %1704 to i8
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1705, i8* %1706, align 1
  store %struct.Memory* %loadMem_47cf31, %struct.Memory** %MEMORY
  %loadMem_47cf38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1708 = getelementptr inbounds %struct.GPR, %struct.GPR* %1707, i32 0, i32 33
  %1709 = getelementptr inbounds %struct.Reg, %struct.Reg* %1708, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %1709 to i64*
  %1710 = load i64, i64* %PC.i1201
  %1711 = add i64 %1710, 37
  %1712 = load i64, i64* %PC.i1201
  %1713 = add i64 %1712, 6
  %1714 = load i64, i64* %PC.i1201
  %1715 = add i64 %1714, 6
  store i64 %1715, i64* %PC.i1201
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1717 = load i8, i8* %1716, align 1
  %1718 = icmp ne i8 %1717, 0
  %1719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1720 = load i8, i8* %1719, align 1
  %1721 = icmp ne i8 %1720, 0
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1723 = load i8, i8* %1722, align 1
  %1724 = icmp ne i8 %1723, 0
  %1725 = xor i1 %1721, %1724
  %1726 = or i1 %1718, %1725
  %1727 = zext i1 %1726 to i8
  store i8 %1727, i8* %BRANCH_TAKEN, align 1
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1729 = select i1 %1726, i64 %1711, i64 %1713
  store i64 %1729, i64* %1728, align 8
  store %struct.Memory* %loadMem_47cf38, %struct.Memory** %MEMORY
  %loadBr_47cf38 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cf38 = icmp eq i8 %loadBr_47cf38, 1
  br i1 %cmpBr_47cf38, label %block_.L_47cf5d, label %block_47cf3e

block_47cf3e:                                     ; preds = %block_.L_47cf29
  %loadMem_47cf3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 33
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %1732 to i64*
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1734 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1733, i64 0, i64 0
  %YMM0.i1200 = bitcast %union.VectorReg* %1734 to %"class.std::bitset"*
  %1735 = bitcast %"class.std::bitset"* %YMM0.i1200 to i8*
  %1736 = load i64, i64* %PC.i1199
  %1737 = add i64 %1736, 9
  store i64 %1737, i64* %PC.i1199
  %1738 = load double, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  %1739 = bitcast i8* %1735 to double*
  store double %1738, double* %1739, align 1
  %1740 = getelementptr inbounds i8, i8* %1735, i64 8
  %1741 = bitcast i8* %1740 to double*
  store double 0.000000e+00, double* %1741, align 1
  store %struct.Memory* %loadMem_47cf3e, %struct.Memory** %MEMORY
  %loadMem_47cf47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1743 = getelementptr inbounds %struct.GPR, %struct.GPR* %1742, i32 0, i32 33
  %1744 = getelementptr inbounds %struct.Reg, %struct.Reg* %1743, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %1744 to i64*
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1746 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1745, i64 0, i64 1
  %YMM1.i1198 = bitcast %union.VectorReg* %1746 to %"class.std::bitset"*
  %1747 = bitcast %"class.std::bitset"* %YMM1.i1198 to i8*
  %1748 = load i64, i64* %PC.i1197
  %1749 = add i64 %1748, 9
  store i64 %1749, i64* %PC.i1197
  %1750 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %1751 = bitcast i8* %1747 to double*
  store double %1750, double* %1751, align 1
  %1752 = getelementptr inbounds i8, i8* %1747, i64 8
  %1753 = bitcast i8* %1752 to double*
  store double 0.000000e+00, double* %1753, align 1
  store %struct.Memory* %loadMem_47cf47, %struct.Memory** %MEMORY
  %loadMem_47cf50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 33
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %1756 to i64*
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1758 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1757, i64 0, i64 1
  %YMM1.i1195 = bitcast %union.VectorReg* %1758 to %"class.std::bitset"*
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1760 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1759, i64 0, i64 0
  %XMM0.i1196 = bitcast %union.VectorReg* %1760 to %union.vec128_t*
  %1761 = bitcast %"class.std::bitset"* %YMM1.i1195 to i8*
  %1762 = bitcast %"class.std::bitset"* %YMM1.i1195 to i8*
  %1763 = bitcast %union.vec128_t* %XMM0.i1196 to i8*
  %1764 = load i64, i64* %PC.i1194
  %1765 = add i64 %1764, 4
  store i64 %1765, i64* %PC.i1194
  %1766 = bitcast i8* %1762 to double*
  %1767 = load double, double* %1766, align 1
  %1768 = getelementptr inbounds i8, i8* %1762, i64 8
  %1769 = bitcast i8* %1768 to i64*
  %1770 = load i64, i64* %1769, align 1
  %1771 = bitcast i8* %1763 to double*
  %1772 = load double, double* %1771, align 1
  %1773 = fsub double %1767, %1772
  %1774 = bitcast i8* %1761 to double*
  store double %1773, double* %1774, align 1
  %1775 = getelementptr inbounds i8, i8* %1761, i64 8
  %1776 = bitcast i8* %1775 to i64*
  store i64 %1770, i64* %1776, align 1
  store %struct.Memory* %loadMem_47cf50, %struct.Memory** %MEMORY
  %loadMem_47cf54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1778 = getelementptr inbounds %struct.GPR, %struct.GPR* %1777, i32 0, i32 33
  %1779 = getelementptr inbounds %struct.Reg, %struct.Reg* %1778, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %1779 to i64*
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1781 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1780, i64 0, i64 1
  %XMM1.i1193 = bitcast %union.VectorReg* %1781 to %union.vec128_t*
  %1782 = bitcast %union.vec128_t* %XMM1.i1193 to i8*
  %1783 = load i64, i64* %PC.i1192
  %1784 = add i64 %1783, 9
  store i64 %1784, i64* %PC.i1192
  %1785 = bitcast i8* %1782 to double*
  %1786 = load double, double* %1785, align 1
  store double %1786, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47cf54, %struct.Memory** %MEMORY
  br label %block_.L_47cf5d

block_.L_47cf5d:                                  ; preds = %block_47cf3e, %block_.L_47cf29
  %loadMem_47cf5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1788 = getelementptr inbounds %struct.GPR, %struct.GPR* %1787, i32 0, i32 33
  %1789 = getelementptr inbounds %struct.Reg, %struct.Reg* %1788, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %1789 to i64*
  %1790 = load i64, i64* %PC.i1191
  %1791 = add i64 %1790, 5
  %1792 = load i64, i64* %PC.i1191
  %1793 = add i64 %1792, 5
  store i64 %1793, i64* %PC.i1191
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1791, i64* %1794, align 8
  store %struct.Memory* %loadMem_47cf5d, %struct.Memory** %MEMORY
  br label %block_.L_47cf62

block_.L_47cf62:                                  ; preds = %block_.L_47cf5d, %block_47cec6
  %loadMem_47cf62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1796 = getelementptr inbounds %struct.GPR, %struct.GPR* %1795, i32 0, i32 33
  %1797 = getelementptr inbounds %struct.Reg, %struct.Reg* %1796, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %1797 to i64*
  %1798 = load i64, i64* %PC.i1190
  %1799 = add i64 %1798, 657
  %1800 = load i64, i64* %PC.i1190
  %1801 = add i64 %1800, 5
  store i64 %1801, i64* %PC.i1190
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1799, i64* %1802, align 8
  store %struct.Memory* %loadMem_47cf62, %struct.Memory** %MEMORY
  br label %block_.L_47d1f3

block_.L_47cf67:                                  ; preds = %block_.L_47ce8f
  %loadMem_47cf67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 33
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %1805 to i64*
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1807 = getelementptr inbounds %struct.GPR, %struct.GPR* %1806, i32 0, i32 1
  %1808 = getelementptr inbounds %struct.Reg, %struct.Reg* %1807, i32 0, i32 0
  %RAX.i1189 = bitcast %union.anon* %1808 to i64*
  %1809 = load i64, i64* %PC.i1188
  %1810 = add i64 %1809, 8
  store i64 %1810, i64* %PC.i1188
  %1811 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1811, i64* %RAX.i1189, align 8
  store %struct.Memory* %loadMem_47cf67, %struct.Memory** %MEMORY
  %loadMem_47cf6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1813 = getelementptr inbounds %struct.GPR, %struct.GPR* %1812, i32 0, i32 33
  %1814 = getelementptr inbounds %struct.Reg, %struct.Reg* %1813, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %1814 to i64*
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1816 = getelementptr inbounds %struct.GPR, %struct.GPR* %1815, i32 0, i32 1
  %1817 = getelementptr inbounds %struct.Reg, %struct.Reg* %1816, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %1817 to i64*
  %1818 = load i64, i64* %RAX.i1187
  %1819 = add i64 %1818, 72564
  %1820 = load i64, i64* %PC.i1186
  %1821 = add i64 %1820, 7
  store i64 %1821, i64* %PC.i1186
  %1822 = inttoptr i64 %1819 to i32*
  %1823 = load i32, i32* %1822
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1824, align 1
  %1825 = and i32 %1823, 255
  %1826 = call i32 @llvm.ctpop.i32(i32 %1825)
  %1827 = trunc i32 %1826 to i8
  %1828 = and i8 %1827, 1
  %1829 = xor i8 %1828, 1
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1829, i8* %1830, align 1
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1831, align 1
  %1832 = icmp eq i32 %1823, 0
  %1833 = zext i1 %1832 to i8
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1833, i8* %1834, align 1
  %1835 = lshr i32 %1823, 31
  %1836 = trunc i32 %1835 to i8
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1836, i8* %1837, align 1
  %1838 = lshr i32 %1823, 31
  %1839 = xor i32 %1835, %1838
  %1840 = add i32 %1839, %1838
  %1841 = icmp eq i32 %1840, 2
  %1842 = zext i1 %1841 to i8
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1842, i8* %1843, align 1
  store %struct.Memory* %loadMem_47cf6f, %struct.Memory** %MEMORY
  %loadMem_47cf76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 33
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %1846 to i64*
  %1847 = load i64, i64* %PC.i1185
  %1848 = add i64 %1847, 226
  %1849 = load i64, i64* %PC.i1185
  %1850 = add i64 %1849, 6
  %1851 = load i64, i64* %PC.i1185
  %1852 = add i64 %1851, 6
  store i64 %1852, i64* %PC.i1185
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1854 = load i8, i8* %1853, align 1
  %1855 = icmp ne i8 %1854, 0
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1857 = load i8, i8* %1856, align 1
  %1858 = icmp ne i8 %1857, 0
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1860 = load i8, i8* %1859, align 1
  %1861 = icmp ne i8 %1860, 0
  %1862 = xor i1 %1858, %1861
  %1863 = or i1 %1855, %1862
  %1864 = zext i1 %1863 to i8
  store i8 %1864, i8* %BRANCH_TAKEN, align 1
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1866 = select i1 %1863, i64 %1848, i64 %1850
  store i64 %1866, i64* %1865, align 8
  store %struct.Memory* %loadMem_47cf76, %struct.Memory** %MEMORY
  %loadBr_47cf76 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cf76 = icmp eq i8 %loadBr_47cf76, 1
  br i1 %cmpBr_47cf76, label %block_.L_47d058, label %block_47cf7c

block_47cf7c:                                     ; preds = %block_.L_47cf67
  %loadMem_47cf7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1868 = getelementptr inbounds %struct.GPR, %struct.GPR* %1867, i32 0, i32 33
  %1869 = getelementptr inbounds %struct.Reg, %struct.Reg* %1868, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %1869 to i64*
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 1
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %1872 to i64*
  %1873 = load i64, i64* %PC.i1183
  %1874 = add i64 %1873, 8
  store i64 %1874, i64* %PC.i1183
  %1875 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1875, i64* %RAX.i1184, align 8
  store %struct.Memory* %loadMem_47cf7c, %struct.Memory** %MEMORY
  %loadMem_47cf84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 33
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %1878 to i64*
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1880 = getelementptr inbounds %struct.GPR, %struct.GPR* %1879, i32 0, i32 1
  %1881 = getelementptr inbounds %struct.Reg, %struct.Reg* %1880, i32 0, i32 0
  %RAX.i1182 = bitcast %union.anon* %1881 to i64*
  %1882 = load i64, i64* %RAX.i1182
  %1883 = add i64 %1882, 2880
  %1884 = load i64, i64* %PC.i1181
  %1885 = add i64 %1884, 7
  store i64 %1885, i64* %PC.i1181
  %1886 = inttoptr i64 %1883 to i32*
  %1887 = load i32, i32* %1886
  %1888 = sub i32 %1887, 2
  %1889 = icmp ult i32 %1887, 2
  %1890 = zext i1 %1889 to i8
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1890, i8* %1891, align 1
  %1892 = and i32 %1888, 255
  %1893 = call i32 @llvm.ctpop.i32(i32 %1892)
  %1894 = trunc i32 %1893 to i8
  %1895 = and i8 %1894, 1
  %1896 = xor i8 %1895, 1
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1896, i8* %1897, align 1
  %1898 = xor i32 %1887, 2
  %1899 = xor i32 %1898, %1888
  %1900 = lshr i32 %1899, 4
  %1901 = trunc i32 %1900 to i8
  %1902 = and i8 %1901, 1
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1902, i8* %1903, align 1
  %1904 = icmp eq i32 %1888, 0
  %1905 = zext i1 %1904 to i8
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1905, i8* %1906, align 1
  %1907 = lshr i32 %1888, 31
  %1908 = trunc i32 %1907 to i8
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1908, i8* %1909, align 1
  %1910 = lshr i32 %1887, 31
  %1911 = xor i32 %1907, %1910
  %1912 = add i32 %1911, %1910
  %1913 = icmp eq i32 %1912, 2
  %1914 = zext i1 %1913 to i8
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1914, i8* %1915, align 1
  store %struct.Memory* %loadMem_47cf84, %struct.Memory** %MEMORY
  %loadMem_47cf8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1917 = getelementptr inbounds %struct.GPR, %struct.GPR* %1916, i32 0, i32 33
  %1918 = getelementptr inbounds %struct.Reg, %struct.Reg* %1917, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %1918 to i64*
  %1919 = load i64, i64* %PC.i1180
  %1920 = add i64 %1919, 27
  %1921 = load i64, i64* %PC.i1180
  %1922 = add i64 %1921, 6
  %1923 = load i64, i64* %PC.i1180
  %1924 = add i64 %1923, 6
  store i64 %1924, i64* %PC.i1180
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1926 = load i8, i8* %1925, align 1
  store i8 %1926, i8* %BRANCH_TAKEN, align 1
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1928 = icmp ne i8 %1926, 0
  %1929 = select i1 %1928, i64 %1920, i64 %1922
  store i64 %1929, i64* %1927, align 8
  store %struct.Memory* %loadMem_47cf8b, %struct.Memory** %MEMORY
  %loadBr_47cf8b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cf8b = icmp eq i8 %loadBr_47cf8b, 1
  br i1 %cmpBr_47cf8b, label %block_.L_47cfa6, label %block_47cf91

block_47cf91:                                     ; preds = %block_47cf7c
  %loadMem_47cf91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1931 = getelementptr inbounds %struct.GPR, %struct.GPR* %1930, i32 0, i32 33
  %1932 = getelementptr inbounds %struct.Reg, %struct.Reg* %1931, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %1932 to i64*
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1934 = getelementptr inbounds %struct.GPR, %struct.GPR* %1933, i32 0, i32 1
  %1935 = getelementptr inbounds %struct.Reg, %struct.Reg* %1934, i32 0, i32 0
  %RAX.i1179 = bitcast %union.anon* %1935 to i64*
  %1936 = load i64, i64* %PC.i1178
  %1937 = add i64 %1936, 8
  store i64 %1937, i64* %PC.i1178
  %1938 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %1938, i64* %RAX.i1179, align 8
  store %struct.Memory* %loadMem_47cf91, %struct.Memory** %MEMORY
  %loadMem_47cf99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 33
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %1941 to i64*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 1
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RAX.i1177 = bitcast %union.anon* %1944 to i64*
  %1945 = load i64, i64* %RAX.i1177
  %1946 = add i64 %1945, 2884
  %1947 = load i64, i64* %PC.i1176
  %1948 = add i64 %1947, 7
  store i64 %1948, i64* %PC.i1176
  %1949 = inttoptr i64 %1946 to i32*
  %1950 = load i32, i32* %1949
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1951, align 1
  %1952 = and i32 %1950, 255
  %1953 = call i32 @llvm.ctpop.i32(i32 %1952)
  %1954 = trunc i32 %1953 to i8
  %1955 = and i8 %1954, 1
  %1956 = xor i8 %1955, 1
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1956, i8* %1957, align 1
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1958, align 1
  %1959 = icmp eq i32 %1950, 0
  %1960 = zext i1 %1959 to i8
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1960, i8* %1961, align 1
  %1962 = lshr i32 %1950, 31
  %1963 = trunc i32 %1962 to i8
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1963, i8* %1964, align 1
  %1965 = lshr i32 %1950, 31
  %1966 = xor i32 %1962, %1965
  %1967 = add i32 %1966, %1965
  %1968 = icmp eq i32 %1967, 2
  %1969 = zext i1 %1968 to i8
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1969, i8* %1970, align 1
  store %struct.Memory* %loadMem_47cf99, %struct.Memory** %MEMORY
  %loadMem_47cfa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1972 = getelementptr inbounds %struct.GPR, %struct.GPR* %1971, i32 0, i32 33
  %1973 = getelementptr inbounds %struct.Reg, %struct.Reg* %1972, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %1973 to i64*
  %1974 = load i64, i64* %PC.i1175
  %1975 = add i64 %1974, 103
  %1976 = load i64, i64* %PC.i1175
  %1977 = add i64 %1976, 6
  %1978 = load i64, i64* %PC.i1175
  %1979 = add i64 %1978, 6
  store i64 %1979, i64* %PC.i1175
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1981 = load i8, i8* %1980, align 1
  store i8 %1981, i8* %BRANCH_TAKEN, align 1
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1983 = icmp ne i8 %1981, 0
  %1984 = select i1 %1983, i64 %1975, i64 %1977
  store i64 %1984, i64* %1982, align 8
  store %struct.Memory* %loadMem_47cfa0, %struct.Memory** %MEMORY
  %loadBr_47cfa0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cfa0 = icmp eq i8 %loadBr_47cfa0, 1
  br i1 %cmpBr_47cfa0, label %block_.L_47d007, label %block_.L_47cfa6

block_.L_47cfa6:                                  ; preds = %block_47cf91, %block_47cf7c
  %loadMem_47cfa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1986 = getelementptr inbounds %struct.GPR, %struct.GPR* %1985, i32 0, i32 33
  %1987 = getelementptr inbounds %struct.Reg, %struct.Reg* %1986, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %1987 to i64*
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 1
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %RAX.i1174 = bitcast %union.anon* %1990 to i64*
  %1991 = load i64, i64* %PC.i1173
  %1992 = add i64 %1991, 8
  store i64 %1992, i64* %PC.i1173
  %1993 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %1993, i64* %RAX.i1174, align 8
  store %struct.Memory* %loadMem_47cfa6, %struct.Memory** %MEMORY
  %loadMem_47cfae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1995 = getelementptr inbounds %struct.GPR, %struct.GPR* %1994, i32 0, i32 33
  %1996 = getelementptr inbounds %struct.Reg, %struct.Reg* %1995, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %1996 to i64*
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1998 = getelementptr inbounds %struct.GPR, %struct.GPR* %1997, i32 0, i32 1
  %1999 = getelementptr inbounds %struct.Reg, %struct.Reg* %1998, i32 0, i32 0
  %RAX.i1172 = bitcast %union.anon* %1999 to i64*
  %2000 = load i64, i64* %RAX.i1172
  %2001 = add i64 %2000, 72600
  %2002 = load i64, i64* %PC.i1171
  %2003 = add i64 %2002, 7
  store i64 %2003, i64* %PC.i1171
  %2004 = inttoptr i64 %2001 to i32*
  %2005 = load i32, i32* %2004
  %2006 = sub i32 %2005, 1
  %2007 = icmp ult i32 %2005, 1
  %2008 = zext i1 %2007 to i8
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2008, i8* %2009, align 1
  %2010 = and i32 %2006, 255
  %2011 = call i32 @llvm.ctpop.i32(i32 %2010)
  %2012 = trunc i32 %2011 to i8
  %2013 = and i8 %2012, 1
  %2014 = xor i8 %2013, 1
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2014, i8* %2015, align 1
  %2016 = xor i32 %2005, 1
  %2017 = xor i32 %2016, %2006
  %2018 = lshr i32 %2017, 4
  %2019 = trunc i32 %2018 to i8
  %2020 = and i8 %2019, 1
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2020, i8* %2021, align 1
  %2022 = icmp eq i32 %2006, 0
  %2023 = zext i1 %2022 to i8
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2023, i8* %2024, align 1
  %2025 = lshr i32 %2006, 31
  %2026 = trunc i32 %2025 to i8
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2026, i8* %2027, align 1
  %2028 = lshr i32 %2005, 31
  %2029 = xor i32 %2025, %2028
  %2030 = add i32 %2029, %2028
  %2031 = icmp eq i32 %2030, 2
  %2032 = zext i1 %2031 to i8
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2032, i8* %2033, align 1
  store %struct.Memory* %loadMem_47cfae, %struct.Memory** %MEMORY
  %loadMem_47cfb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2035 = getelementptr inbounds %struct.GPR, %struct.GPR* %2034, i32 0, i32 33
  %2036 = getelementptr inbounds %struct.Reg, %struct.Reg* %2035, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %2036 to i64*
  %2037 = load i64, i64* %PC.i1170
  %2038 = add i64 %2037, 82
  %2039 = load i64, i64* %PC.i1170
  %2040 = add i64 %2039, 6
  %2041 = load i64, i64* %PC.i1170
  %2042 = add i64 %2041, 6
  store i64 %2042, i64* %PC.i1170
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2044 = load i8, i8* %2043, align 1
  %2045 = icmp eq i8 %2044, 0
  %2046 = zext i1 %2045 to i8
  store i8 %2046, i8* %BRANCH_TAKEN, align 1
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2048 = select i1 %2045, i64 %2038, i64 %2040
  store i64 %2048, i64* %2047, align 8
  store %struct.Memory* %loadMem_47cfb5, %struct.Memory** %MEMORY
  %loadBr_47cfb5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cfb5 = icmp eq i8 %loadBr_47cfb5, 1
  br i1 %cmpBr_47cfb5, label %block_.L_47d007, label %block_47cfbb

block_47cfbb:                                     ; preds = %block_.L_47cfa6
  %loadMem_47cfbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 33
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %2051 to i64*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 15
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %2054 to i64*
  %2055 = load i64, i64* %RBP.i1169
  %2056 = sub i64 %2055, 16
  %2057 = load i64, i64* %PC.i1168
  %2058 = add i64 %2057, 7
  store i64 %2058, i64* %PC.i1168
  %2059 = inttoptr i64 %2056 to i32*
  store i32 0, i32* %2059
  store %struct.Memory* %loadMem_47cfbb, %struct.Memory** %MEMORY
  br label %block_.L_47cfc2

block_.L_47cfc2:                                  ; preds = %block_47cfd2, %block_47cfbb
  %loadMem_47cfc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2061 = getelementptr inbounds %struct.GPR, %struct.GPR* %2060, i32 0, i32 33
  %2062 = getelementptr inbounds %struct.Reg, %struct.Reg* %2061, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %2062 to i64*
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2064 = getelementptr inbounds %struct.GPR, %struct.GPR* %2063, i32 0, i32 1
  %2065 = getelementptr inbounds %struct.Reg, %struct.Reg* %2064, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %2065 to i64*
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2067 = getelementptr inbounds %struct.GPR, %struct.GPR* %2066, i32 0, i32 15
  %2068 = getelementptr inbounds %struct.Reg, %struct.Reg* %2067, i32 0, i32 0
  %RBP.i1167 = bitcast %union.anon* %2068 to i64*
  %2069 = load i64, i64* %RBP.i1167
  %2070 = sub i64 %2069, 16
  %2071 = load i64, i64* %PC.i1165
  %2072 = add i64 %2071, 3
  store i64 %2072, i64* %PC.i1165
  %2073 = inttoptr i64 %2070 to i32*
  %2074 = load i32, i32* %2073
  %2075 = zext i32 %2074 to i64
  store i64 %2075, i64* %RAX.i1166, align 8
  store %struct.Memory* %loadMem_47cfc2, %struct.Memory** %MEMORY
  %loadMem_47cfc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 33
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %2078 to i64*
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 1
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %EAX.i1164 = bitcast %union.anon* %2081 to i32*
  %2082 = load i32, i32* %EAX.i1164
  %2083 = zext i32 %2082 to i64
  %2084 = load i64, i64* %PC.i1163
  %2085 = add i64 %2084, 7
  store i64 %2085, i64* %PC.i1163
  %2086 = load i32, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  %2087 = sub i32 %2082, %2086
  %2088 = icmp ult i32 %2082, %2086
  %2089 = zext i1 %2088 to i8
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2089, i8* %2090, align 1
  %2091 = and i32 %2087, 255
  %2092 = call i32 @llvm.ctpop.i32(i32 %2091)
  %2093 = trunc i32 %2092 to i8
  %2094 = and i8 %2093, 1
  %2095 = xor i8 %2094, 1
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2095, i8* %2096, align 1
  %2097 = xor i32 %2086, %2082
  %2098 = xor i32 %2097, %2087
  %2099 = lshr i32 %2098, 4
  %2100 = trunc i32 %2099 to i8
  %2101 = and i8 %2100, 1
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2101, i8* %2102, align 1
  %2103 = icmp eq i32 %2087, 0
  %2104 = zext i1 %2103 to i8
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2104, i8* %2105, align 1
  %2106 = lshr i32 %2087, 31
  %2107 = trunc i32 %2106 to i8
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2107, i8* %2108, align 1
  %2109 = lshr i32 %2082, 31
  %2110 = lshr i32 %2086, 31
  %2111 = xor i32 %2110, %2109
  %2112 = xor i32 %2106, %2109
  %2113 = add i32 %2112, %2111
  %2114 = icmp eq i32 %2113, 2
  %2115 = zext i1 %2114 to i8
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2115, i8* %2116, align 1
  store %struct.Memory* %loadMem_47cfc5, %struct.Memory** %MEMORY
  %loadMem_47cfcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2118 = getelementptr inbounds %struct.GPR, %struct.GPR* %2117, i32 0, i32 33
  %2119 = getelementptr inbounds %struct.Reg, %struct.Reg* %2118, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %2119 to i64*
  %2120 = load i64, i64* %PC.i1162
  %2121 = add i64 %2120, 54
  %2122 = load i64, i64* %PC.i1162
  %2123 = add i64 %2122, 6
  %2124 = load i64, i64* %PC.i1162
  %2125 = add i64 %2124, 6
  store i64 %2125, i64* %PC.i1162
  %2126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2127 = load i8, i8* %2126, align 1
  %2128 = icmp ne i8 %2127, 0
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2130 = load i8, i8* %2129, align 1
  %2131 = icmp ne i8 %2130, 0
  %2132 = xor i1 %2128, %2131
  %2133 = xor i1 %2132, true
  %2134 = zext i1 %2133 to i8
  store i8 %2134, i8* %BRANCH_TAKEN, align 1
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2136 = select i1 %2132, i64 %2123, i64 %2121
  store i64 %2136, i64* %2135, align 8
  store %struct.Memory* %loadMem_47cfcc, %struct.Memory** %MEMORY
  %loadBr_47cfcc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47cfcc = icmp eq i8 %loadBr_47cfcc, 1
  br i1 %cmpBr_47cfcc, label %block_.L_47d002, label %block_47cfd2

block_47cfd2:                                     ; preds = %block_.L_47cfc2
  %loadMem_47cfd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2138 = getelementptr inbounds %struct.GPR, %struct.GPR* %2137, i32 0, i32 33
  %2139 = getelementptr inbounds %struct.Reg, %struct.Reg* %2138, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %2139 to i64*
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2141 = getelementptr inbounds %struct.GPR, %struct.GPR* %2140, i32 0, i32 1
  %2142 = getelementptr inbounds %struct.Reg, %struct.Reg* %2141, i32 0, i32 0
  %RAX.i1161 = bitcast %union.anon* %2142 to i64*
  %2143 = load i64, i64* %PC.i1160
  %2144 = add i64 %2143, 8
  store i64 %2144, i64* %PC.i1160
  %2145 = load i64, i64* bitcast (%G_0x723630_type* @G_0x723630 to i64*)
  store i64 %2145, i64* %RAX.i1161, align 8
  store %struct.Memory* %loadMem_47cfd2, %struct.Memory** %MEMORY
  %loadMem_47cfda = load %struct.Memory*, %struct.Memory** %MEMORY
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 33
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %2148 to i64*
  %2149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2150 = getelementptr inbounds %struct.GPR, %struct.GPR* %2149, i32 0, i32 5
  %2151 = getelementptr inbounds %struct.Reg, %struct.Reg* %2150, i32 0, i32 0
  %RCX.i1158 = bitcast %union.anon* %2151 to i64*
  %2152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2153 = getelementptr inbounds %struct.GPR, %struct.GPR* %2152, i32 0, i32 15
  %2154 = getelementptr inbounds %struct.Reg, %struct.Reg* %2153, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %2154 to i64*
  %2155 = load i64, i64* %RBP.i1159
  %2156 = sub i64 %2155, 16
  %2157 = load i64, i64* %PC.i1157
  %2158 = add i64 %2157, 4
  store i64 %2158, i64* %PC.i1157
  %2159 = inttoptr i64 %2156 to i32*
  %2160 = load i32, i32* %2159
  %2161 = sext i32 %2160 to i64
  store i64 %2161, i64* %RCX.i1158, align 8
  store %struct.Memory* %loadMem_47cfda, %struct.Memory** %MEMORY
  %loadMem_47cfde = load %struct.Memory*, %struct.Memory** %MEMORY
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2163 = getelementptr inbounds %struct.GPR, %struct.GPR* %2162, i32 0, i32 33
  %2164 = getelementptr inbounds %struct.Reg, %struct.Reg* %2163, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %2164 to i64*
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2166 = getelementptr inbounds %struct.GPR, %struct.GPR* %2165, i32 0, i32 1
  %2167 = getelementptr inbounds %struct.Reg, %struct.Reg* %2166, i32 0, i32 0
  %RAX.i1154 = bitcast %union.anon* %2167 to i64*
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2169 = getelementptr inbounds %struct.GPR, %struct.GPR* %2168, i32 0, i32 5
  %2170 = getelementptr inbounds %struct.Reg, %struct.Reg* %2169, i32 0, i32 0
  %RCX.i1155 = bitcast %union.anon* %2170 to i64*
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2172 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2171, i64 0, i64 0
  %YMM0.i1156 = bitcast %union.VectorReg* %2172 to %"class.std::bitset"*
  %2173 = bitcast %"class.std::bitset"* %YMM0.i1156 to i8*
  %2174 = load i64, i64* %RAX.i1154
  %2175 = load i64, i64* %RCX.i1155
  %2176 = mul i64 %2175, 8
  %2177 = add i64 %2176, %2174
  %2178 = load i64, i64* %PC.i1153
  %2179 = add i64 %2178, 5
  store i64 %2179, i64* %PC.i1153
  %2180 = inttoptr i64 %2177 to double*
  %2181 = load double, double* %2180
  %2182 = bitcast i8* %2173 to double*
  store double %2181, double* %2182, align 1
  %2183 = getelementptr inbounds i8, i8* %2173, i64 8
  %2184 = bitcast i8* %2183 to double*
  store double 0.000000e+00, double* %2184, align 1
  store %struct.Memory* %loadMem_47cfde, %struct.Memory** %MEMORY
  %loadMem_47cfe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 33
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %2187 to i64*
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2189 = getelementptr inbounds %struct.GPR, %struct.GPR* %2188, i32 0, i32 1
  %2190 = getelementptr inbounds %struct.Reg, %struct.Reg* %2189, i32 0, i32 0
  %RAX.i1152 = bitcast %union.anon* %2190 to i64*
  %2191 = load i64, i64* %PC.i1151
  %2192 = add i64 %2191, 8
  store i64 %2192, i64* %PC.i1151
  %2193 = load i64, i64* bitcast (%G_0x6cea38_type* @G_0x6cea38 to i64*)
  store i64 %2193, i64* %RAX.i1152, align 8
  store %struct.Memory* %loadMem_47cfe3, %struct.Memory** %MEMORY
  %loadMem_47cfeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2195 = getelementptr inbounds %struct.GPR, %struct.GPR* %2194, i32 0, i32 33
  %2196 = getelementptr inbounds %struct.Reg, %struct.Reg* %2195, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %2196 to i64*
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2198 = getelementptr inbounds %struct.GPR, %struct.GPR* %2197, i32 0, i32 5
  %2199 = getelementptr inbounds %struct.Reg, %struct.Reg* %2198, i32 0, i32 0
  %RCX.i1149 = bitcast %union.anon* %2199 to i64*
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2201 = getelementptr inbounds %struct.GPR, %struct.GPR* %2200, i32 0, i32 15
  %2202 = getelementptr inbounds %struct.Reg, %struct.Reg* %2201, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %2202 to i64*
  %2203 = load i64, i64* %RBP.i1150
  %2204 = sub i64 %2203, 16
  %2205 = load i64, i64* %PC.i1148
  %2206 = add i64 %2205, 4
  store i64 %2206, i64* %PC.i1148
  %2207 = inttoptr i64 %2204 to i32*
  %2208 = load i32, i32* %2207
  %2209 = sext i32 %2208 to i64
  store i64 %2209, i64* %RCX.i1149, align 8
  store %struct.Memory* %loadMem_47cfeb, %struct.Memory** %MEMORY
  %loadMem_47cfef = load %struct.Memory*, %struct.Memory** %MEMORY
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2211 = getelementptr inbounds %struct.GPR, %struct.GPR* %2210, i32 0, i32 33
  %2212 = getelementptr inbounds %struct.Reg, %struct.Reg* %2211, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %2212 to i64*
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2214 = getelementptr inbounds %struct.GPR, %struct.GPR* %2213, i32 0, i32 1
  %2215 = getelementptr inbounds %struct.Reg, %struct.Reg* %2214, i32 0, i32 0
  %RAX.i1145 = bitcast %union.anon* %2215 to i64*
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2217 = getelementptr inbounds %struct.GPR, %struct.GPR* %2216, i32 0, i32 5
  %2218 = getelementptr inbounds %struct.Reg, %struct.Reg* %2217, i32 0, i32 0
  %RCX.i1146 = bitcast %union.anon* %2218 to i64*
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2220 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2219, i64 0, i64 0
  %XMM0.i1147 = bitcast %union.VectorReg* %2220 to %union.vec128_t*
  %2221 = load i64, i64* %RAX.i1145
  %2222 = load i64, i64* %RCX.i1146
  %2223 = mul i64 %2222, 8
  %2224 = add i64 %2223, %2221
  %2225 = bitcast %union.vec128_t* %XMM0.i1147 to i8*
  %2226 = load i64, i64* %PC.i1144
  %2227 = add i64 %2226, 5
  store i64 %2227, i64* %PC.i1144
  %2228 = bitcast i8* %2225 to double*
  %2229 = load double, double* %2228, align 1
  %2230 = inttoptr i64 %2224 to double*
  store double %2229, double* %2230
  store %struct.Memory* %loadMem_47cfef, %struct.Memory** %MEMORY
  %loadMem_47cff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2232 = getelementptr inbounds %struct.GPR, %struct.GPR* %2231, i32 0, i32 33
  %2233 = getelementptr inbounds %struct.Reg, %struct.Reg* %2232, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %2233 to i64*
  %2234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2235 = getelementptr inbounds %struct.GPR, %struct.GPR* %2234, i32 0, i32 1
  %2236 = getelementptr inbounds %struct.Reg, %struct.Reg* %2235, i32 0, i32 0
  %RAX.i1142 = bitcast %union.anon* %2236 to i64*
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2238 = getelementptr inbounds %struct.GPR, %struct.GPR* %2237, i32 0, i32 15
  %2239 = getelementptr inbounds %struct.Reg, %struct.Reg* %2238, i32 0, i32 0
  %RBP.i1143 = bitcast %union.anon* %2239 to i64*
  %2240 = load i64, i64* %RBP.i1143
  %2241 = sub i64 %2240, 16
  %2242 = load i64, i64* %PC.i1141
  %2243 = add i64 %2242, 3
  store i64 %2243, i64* %PC.i1141
  %2244 = inttoptr i64 %2241 to i32*
  %2245 = load i32, i32* %2244
  %2246 = zext i32 %2245 to i64
  store i64 %2246, i64* %RAX.i1142, align 8
  store %struct.Memory* %loadMem_47cff4, %struct.Memory** %MEMORY
  %loadMem_47cff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 33
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %2249 to i64*
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 1
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %RAX.i1140 = bitcast %union.anon* %2252 to i64*
  %2253 = load i64, i64* %RAX.i1140
  %2254 = load i64, i64* %PC.i1139
  %2255 = add i64 %2254, 3
  store i64 %2255, i64* %PC.i1139
  %2256 = trunc i64 %2253 to i32
  %2257 = add i32 1, %2256
  %2258 = zext i32 %2257 to i64
  store i64 %2258, i64* %RAX.i1140, align 8
  %2259 = icmp ult i32 %2257, %2256
  %2260 = icmp ult i32 %2257, 1
  %2261 = or i1 %2259, %2260
  %2262 = zext i1 %2261 to i8
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2262, i8* %2263, align 1
  %2264 = and i32 %2257, 255
  %2265 = call i32 @llvm.ctpop.i32(i32 %2264)
  %2266 = trunc i32 %2265 to i8
  %2267 = and i8 %2266, 1
  %2268 = xor i8 %2267, 1
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2268, i8* %2269, align 1
  %2270 = xor i64 1, %2253
  %2271 = trunc i64 %2270 to i32
  %2272 = xor i32 %2271, %2257
  %2273 = lshr i32 %2272, 4
  %2274 = trunc i32 %2273 to i8
  %2275 = and i8 %2274, 1
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2275, i8* %2276, align 1
  %2277 = icmp eq i32 %2257, 0
  %2278 = zext i1 %2277 to i8
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2278, i8* %2279, align 1
  %2280 = lshr i32 %2257, 31
  %2281 = trunc i32 %2280 to i8
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2281, i8* %2282, align 1
  %2283 = lshr i32 %2256, 31
  %2284 = xor i32 %2280, %2283
  %2285 = add i32 %2284, %2280
  %2286 = icmp eq i32 %2285, 2
  %2287 = zext i1 %2286 to i8
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2287, i8* %2288, align 1
  store %struct.Memory* %loadMem_47cff7, %struct.Memory** %MEMORY
  %loadMem_47cffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2290 = getelementptr inbounds %struct.GPR, %struct.GPR* %2289, i32 0, i32 33
  %2291 = getelementptr inbounds %struct.Reg, %struct.Reg* %2290, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %2291 to i64*
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 1
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %EAX.i1137 = bitcast %union.anon* %2294 to i32*
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 15
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %RBP.i1138 = bitcast %union.anon* %2297 to i64*
  %2298 = load i64, i64* %RBP.i1138
  %2299 = sub i64 %2298, 16
  %2300 = load i32, i32* %EAX.i1137
  %2301 = zext i32 %2300 to i64
  %2302 = load i64, i64* %PC.i1136
  %2303 = add i64 %2302, 3
  store i64 %2303, i64* %PC.i1136
  %2304 = inttoptr i64 %2299 to i32*
  store i32 %2300, i32* %2304
  store %struct.Memory* %loadMem_47cffa, %struct.Memory** %MEMORY
  %loadMem_47cffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2306 = getelementptr inbounds %struct.GPR, %struct.GPR* %2305, i32 0, i32 33
  %2307 = getelementptr inbounds %struct.Reg, %struct.Reg* %2306, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %2307 to i64*
  %2308 = load i64, i64* %PC.i1135
  %2309 = add i64 %2308, -59
  %2310 = load i64, i64* %PC.i1135
  %2311 = add i64 %2310, 5
  store i64 %2311, i64* %PC.i1135
  %2312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2309, i64* %2312, align 8
  store %struct.Memory* %loadMem_47cffd, %struct.Memory** %MEMORY
  br label %block_.L_47cfc2

block_.L_47d002:                                  ; preds = %block_.L_47cfc2
  %loadMem_47d002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 33
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %2315 to i64*
  %2316 = load i64, i64* %PC.i1134
  %2317 = add i64 %2316, 81
  %2318 = load i64, i64* %PC.i1134
  %2319 = add i64 %2318, 5
  store i64 %2319, i64* %PC.i1134
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2317, i64* %2320, align 8
  store %struct.Memory* %loadMem_47d002, %struct.Memory** %MEMORY
  br label %block_.L_47d053

block_.L_47d007:                                  ; preds = %block_.L_47cfa6, %block_47cf91
  %loadMem_47d007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2322 = getelementptr inbounds %struct.GPR, %struct.GPR* %2321, i32 0, i32 33
  %2323 = getelementptr inbounds %struct.Reg, %struct.Reg* %2322, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %2323 to i64*
  %2324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2325 = getelementptr inbounds %struct.GPR, %struct.GPR* %2324, i32 0, i32 15
  %2326 = getelementptr inbounds %struct.Reg, %struct.Reg* %2325, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %2326 to i64*
  %2327 = load i64, i64* %RBP.i1133
  %2328 = sub i64 %2327, 16
  %2329 = load i64, i64* %PC.i1132
  %2330 = add i64 %2329, 7
  store i64 %2330, i64* %PC.i1132
  %2331 = inttoptr i64 %2328 to i32*
  store i32 0, i32* %2331
  store %struct.Memory* %loadMem_47d007, %struct.Memory** %MEMORY
  br label %block_.L_47d00e

block_.L_47d00e:                                  ; preds = %block_47d01e, %block_.L_47d007
  %loadMem_47d00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2333 = getelementptr inbounds %struct.GPR, %struct.GPR* %2332, i32 0, i32 33
  %2334 = getelementptr inbounds %struct.Reg, %struct.Reg* %2333, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %2334 to i64*
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2336 = getelementptr inbounds %struct.GPR, %struct.GPR* %2335, i32 0, i32 1
  %2337 = getelementptr inbounds %struct.Reg, %struct.Reg* %2336, i32 0, i32 0
  %RAX.i1130 = bitcast %union.anon* %2337 to i64*
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2339 = getelementptr inbounds %struct.GPR, %struct.GPR* %2338, i32 0, i32 15
  %2340 = getelementptr inbounds %struct.Reg, %struct.Reg* %2339, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %2340 to i64*
  %2341 = load i64, i64* %RBP.i1131
  %2342 = sub i64 %2341, 16
  %2343 = load i64, i64* %PC.i1129
  %2344 = add i64 %2343, 3
  store i64 %2344, i64* %PC.i1129
  %2345 = inttoptr i64 %2342 to i32*
  %2346 = load i32, i32* %2345
  %2347 = zext i32 %2346 to i64
  store i64 %2347, i64* %RAX.i1130, align 8
  store %struct.Memory* %loadMem_47d00e, %struct.Memory** %MEMORY
  %loadMem_47d011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 33
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %2350 to i64*
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2352 = getelementptr inbounds %struct.GPR, %struct.GPR* %2351, i32 0, i32 1
  %2353 = getelementptr inbounds %struct.Reg, %struct.Reg* %2352, i32 0, i32 0
  %EAX.i1128 = bitcast %union.anon* %2353 to i32*
  %2354 = load i32, i32* %EAX.i1128
  %2355 = zext i32 %2354 to i64
  %2356 = load i64, i64* %PC.i1127
  %2357 = add i64 %2356, 7
  store i64 %2357, i64* %PC.i1127
  %2358 = load i32, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  %2359 = sub i32 %2354, %2358
  %2360 = icmp ult i32 %2354, %2358
  %2361 = zext i1 %2360 to i8
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2361, i8* %2362, align 1
  %2363 = and i32 %2359, 255
  %2364 = call i32 @llvm.ctpop.i32(i32 %2363)
  %2365 = trunc i32 %2364 to i8
  %2366 = and i8 %2365, 1
  %2367 = xor i8 %2366, 1
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2367, i8* %2368, align 1
  %2369 = xor i32 %2358, %2354
  %2370 = xor i32 %2369, %2359
  %2371 = lshr i32 %2370, 4
  %2372 = trunc i32 %2371 to i8
  %2373 = and i8 %2372, 1
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2373, i8* %2374, align 1
  %2375 = icmp eq i32 %2359, 0
  %2376 = zext i1 %2375 to i8
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2376, i8* %2377, align 1
  %2378 = lshr i32 %2359, 31
  %2379 = trunc i32 %2378 to i8
  %2380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2379, i8* %2380, align 1
  %2381 = lshr i32 %2354, 31
  %2382 = lshr i32 %2358, 31
  %2383 = xor i32 %2382, %2381
  %2384 = xor i32 %2378, %2381
  %2385 = add i32 %2384, %2383
  %2386 = icmp eq i32 %2385, 2
  %2387 = zext i1 %2386 to i8
  %2388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2387, i8* %2388, align 1
  store %struct.Memory* %loadMem_47d011, %struct.Memory** %MEMORY
  %loadMem_47d018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2390 = getelementptr inbounds %struct.GPR, %struct.GPR* %2389, i32 0, i32 33
  %2391 = getelementptr inbounds %struct.Reg, %struct.Reg* %2390, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %2391 to i64*
  %2392 = load i64, i64* %PC.i1126
  %2393 = add i64 %2392, 54
  %2394 = load i64, i64* %PC.i1126
  %2395 = add i64 %2394, 6
  %2396 = load i64, i64* %PC.i1126
  %2397 = add i64 %2396, 6
  store i64 %2397, i64* %PC.i1126
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2399 = load i8, i8* %2398, align 1
  %2400 = icmp ne i8 %2399, 0
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2402 = load i8, i8* %2401, align 1
  %2403 = icmp ne i8 %2402, 0
  %2404 = xor i1 %2400, %2403
  %2405 = xor i1 %2404, true
  %2406 = zext i1 %2405 to i8
  store i8 %2406, i8* %BRANCH_TAKEN, align 1
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2408 = select i1 %2404, i64 %2395, i64 %2393
  store i64 %2408, i64* %2407, align 8
  store %struct.Memory* %loadMem_47d018, %struct.Memory** %MEMORY
  %loadBr_47d018 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d018 = icmp eq i8 %loadBr_47d018, 1
  br i1 %cmpBr_47d018, label %block_.L_47d04e, label %block_47d01e

block_47d01e:                                     ; preds = %block_.L_47d00e
  %loadMem_47d01e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2410 = getelementptr inbounds %struct.GPR, %struct.GPR* %2409, i32 0, i32 33
  %2411 = getelementptr inbounds %struct.Reg, %struct.Reg* %2410, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %2411 to i64*
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2413 = getelementptr inbounds %struct.GPR, %struct.GPR* %2412, i32 0, i32 1
  %2414 = getelementptr inbounds %struct.Reg, %struct.Reg* %2413, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %2414 to i64*
  %2415 = load i64, i64* %PC.i1124
  %2416 = add i64 %2415, 8
  store i64 %2416, i64* %PC.i1124
  %2417 = load i64, i64* bitcast (%G_0x724bd8_type* @G_0x724bd8 to i64*)
  store i64 %2417, i64* %RAX.i1125, align 8
  store %struct.Memory* %loadMem_47d01e, %struct.Memory** %MEMORY
  %loadMem_47d026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2419 = getelementptr inbounds %struct.GPR, %struct.GPR* %2418, i32 0, i32 33
  %2420 = getelementptr inbounds %struct.Reg, %struct.Reg* %2419, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %2420 to i64*
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 5
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %RCX.i1122 = bitcast %union.anon* %2423 to i64*
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 15
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %2426 to i64*
  %2427 = load i64, i64* %RBP.i1123
  %2428 = sub i64 %2427, 16
  %2429 = load i64, i64* %PC.i1121
  %2430 = add i64 %2429, 4
  store i64 %2430, i64* %PC.i1121
  %2431 = inttoptr i64 %2428 to i32*
  %2432 = load i32, i32* %2431
  %2433 = sext i32 %2432 to i64
  store i64 %2433, i64* %RCX.i1122, align 8
  store %struct.Memory* %loadMem_47d026, %struct.Memory** %MEMORY
  %loadMem_47d02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2435 = getelementptr inbounds %struct.GPR, %struct.GPR* %2434, i32 0, i32 33
  %2436 = getelementptr inbounds %struct.Reg, %struct.Reg* %2435, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %2436 to i64*
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 1
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %2439 to i64*
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 5
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %RCX.i1119 = bitcast %union.anon* %2442 to i64*
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2444 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2443, i64 0, i64 0
  %YMM0.i1120 = bitcast %union.VectorReg* %2444 to %"class.std::bitset"*
  %2445 = bitcast %"class.std::bitset"* %YMM0.i1120 to i8*
  %2446 = load i64, i64* %RAX.i1118
  %2447 = load i64, i64* %RCX.i1119
  %2448 = mul i64 %2447, 8
  %2449 = add i64 %2448, %2446
  %2450 = load i64, i64* %PC.i1117
  %2451 = add i64 %2450, 5
  store i64 %2451, i64* %PC.i1117
  %2452 = inttoptr i64 %2449 to double*
  %2453 = load double, double* %2452
  %2454 = bitcast i8* %2445 to double*
  store double %2453, double* %2454, align 1
  %2455 = getelementptr inbounds i8, i8* %2445, i64 8
  %2456 = bitcast i8* %2455 to double*
  store double 0.000000e+00, double* %2456, align 1
  store %struct.Memory* %loadMem_47d02a, %struct.Memory** %MEMORY
  %loadMem_47d02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2458 = getelementptr inbounds %struct.GPR, %struct.GPR* %2457, i32 0, i32 33
  %2459 = getelementptr inbounds %struct.Reg, %struct.Reg* %2458, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %2459 to i64*
  %2460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2461 = getelementptr inbounds %struct.GPR, %struct.GPR* %2460, i32 0, i32 1
  %2462 = getelementptr inbounds %struct.Reg, %struct.Reg* %2461, i32 0, i32 0
  %RAX.i1116 = bitcast %union.anon* %2462 to i64*
  %2463 = load i64, i64* %PC.i1115
  %2464 = add i64 %2463, 8
  store i64 %2464, i64* %PC.i1115
  %2465 = load i64, i64* bitcast (%G_0x6f9350_type* @G_0x6f9350 to i64*)
  store i64 %2465, i64* %RAX.i1116, align 8
  store %struct.Memory* %loadMem_47d02f, %struct.Memory** %MEMORY
  %loadMem_47d037 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2467 = getelementptr inbounds %struct.GPR, %struct.GPR* %2466, i32 0, i32 33
  %2468 = getelementptr inbounds %struct.Reg, %struct.Reg* %2467, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %2468 to i64*
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2470 = getelementptr inbounds %struct.GPR, %struct.GPR* %2469, i32 0, i32 5
  %2471 = getelementptr inbounds %struct.Reg, %struct.Reg* %2470, i32 0, i32 0
  %RCX.i1113 = bitcast %union.anon* %2471 to i64*
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2473 = getelementptr inbounds %struct.GPR, %struct.GPR* %2472, i32 0, i32 15
  %2474 = getelementptr inbounds %struct.Reg, %struct.Reg* %2473, i32 0, i32 0
  %RBP.i1114 = bitcast %union.anon* %2474 to i64*
  %2475 = load i64, i64* %RBP.i1114
  %2476 = sub i64 %2475, 16
  %2477 = load i64, i64* %PC.i1112
  %2478 = add i64 %2477, 4
  store i64 %2478, i64* %PC.i1112
  %2479 = inttoptr i64 %2476 to i32*
  %2480 = load i32, i32* %2479
  %2481 = sext i32 %2480 to i64
  store i64 %2481, i64* %RCX.i1113, align 8
  store %struct.Memory* %loadMem_47d037, %struct.Memory** %MEMORY
  %loadMem_47d03b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2483 = getelementptr inbounds %struct.GPR, %struct.GPR* %2482, i32 0, i32 33
  %2484 = getelementptr inbounds %struct.Reg, %struct.Reg* %2483, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %2484 to i64*
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2486 = getelementptr inbounds %struct.GPR, %struct.GPR* %2485, i32 0, i32 1
  %2487 = getelementptr inbounds %struct.Reg, %struct.Reg* %2486, i32 0, i32 0
  %RAX.i1109 = bitcast %union.anon* %2487 to i64*
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2489 = getelementptr inbounds %struct.GPR, %struct.GPR* %2488, i32 0, i32 5
  %2490 = getelementptr inbounds %struct.Reg, %struct.Reg* %2489, i32 0, i32 0
  %RCX.i1110 = bitcast %union.anon* %2490 to i64*
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2492 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2491, i64 0, i64 0
  %XMM0.i1111 = bitcast %union.VectorReg* %2492 to %union.vec128_t*
  %2493 = load i64, i64* %RAX.i1109
  %2494 = load i64, i64* %RCX.i1110
  %2495 = mul i64 %2494, 8
  %2496 = add i64 %2495, %2493
  %2497 = bitcast %union.vec128_t* %XMM0.i1111 to i8*
  %2498 = load i64, i64* %PC.i1108
  %2499 = add i64 %2498, 5
  store i64 %2499, i64* %PC.i1108
  %2500 = bitcast i8* %2497 to double*
  %2501 = load double, double* %2500, align 1
  %2502 = inttoptr i64 %2496 to double*
  store double %2501, double* %2502
  store %struct.Memory* %loadMem_47d03b, %struct.Memory** %MEMORY
  %loadMem_47d040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2504 = getelementptr inbounds %struct.GPR, %struct.GPR* %2503, i32 0, i32 33
  %2505 = getelementptr inbounds %struct.Reg, %struct.Reg* %2504, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %2505 to i64*
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2507 = getelementptr inbounds %struct.GPR, %struct.GPR* %2506, i32 0, i32 1
  %2508 = getelementptr inbounds %struct.Reg, %struct.Reg* %2507, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %2508 to i64*
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2510 = getelementptr inbounds %struct.GPR, %struct.GPR* %2509, i32 0, i32 15
  %2511 = getelementptr inbounds %struct.Reg, %struct.Reg* %2510, i32 0, i32 0
  %RBP.i1107 = bitcast %union.anon* %2511 to i64*
  %2512 = load i64, i64* %RBP.i1107
  %2513 = sub i64 %2512, 16
  %2514 = load i64, i64* %PC.i1105
  %2515 = add i64 %2514, 3
  store i64 %2515, i64* %PC.i1105
  %2516 = inttoptr i64 %2513 to i32*
  %2517 = load i32, i32* %2516
  %2518 = zext i32 %2517 to i64
  store i64 %2518, i64* %RAX.i1106, align 8
  store %struct.Memory* %loadMem_47d040, %struct.Memory** %MEMORY
  %loadMem_47d043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2520 = getelementptr inbounds %struct.GPR, %struct.GPR* %2519, i32 0, i32 33
  %2521 = getelementptr inbounds %struct.Reg, %struct.Reg* %2520, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %2521 to i64*
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2523 = getelementptr inbounds %struct.GPR, %struct.GPR* %2522, i32 0, i32 1
  %2524 = getelementptr inbounds %struct.Reg, %struct.Reg* %2523, i32 0, i32 0
  %RAX.i1104 = bitcast %union.anon* %2524 to i64*
  %2525 = load i64, i64* %RAX.i1104
  %2526 = load i64, i64* %PC.i1103
  %2527 = add i64 %2526, 3
  store i64 %2527, i64* %PC.i1103
  %2528 = trunc i64 %2525 to i32
  %2529 = add i32 1, %2528
  %2530 = zext i32 %2529 to i64
  store i64 %2530, i64* %RAX.i1104, align 8
  %2531 = icmp ult i32 %2529, %2528
  %2532 = icmp ult i32 %2529, 1
  %2533 = or i1 %2531, %2532
  %2534 = zext i1 %2533 to i8
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2534, i8* %2535, align 1
  %2536 = and i32 %2529, 255
  %2537 = call i32 @llvm.ctpop.i32(i32 %2536)
  %2538 = trunc i32 %2537 to i8
  %2539 = and i8 %2538, 1
  %2540 = xor i8 %2539, 1
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2540, i8* %2541, align 1
  %2542 = xor i64 1, %2525
  %2543 = trunc i64 %2542 to i32
  %2544 = xor i32 %2543, %2529
  %2545 = lshr i32 %2544, 4
  %2546 = trunc i32 %2545 to i8
  %2547 = and i8 %2546, 1
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2547, i8* %2548, align 1
  %2549 = icmp eq i32 %2529, 0
  %2550 = zext i1 %2549 to i8
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2550, i8* %2551, align 1
  %2552 = lshr i32 %2529, 31
  %2553 = trunc i32 %2552 to i8
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2553, i8* %2554, align 1
  %2555 = lshr i32 %2528, 31
  %2556 = xor i32 %2552, %2555
  %2557 = add i32 %2556, %2552
  %2558 = icmp eq i32 %2557, 2
  %2559 = zext i1 %2558 to i8
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2559, i8* %2560, align 1
  store %struct.Memory* %loadMem_47d043, %struct.Memory** %MEMORY
  %loadMem_47d046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2562 = getelementptr inbounds %struct.GPR, %struct.GPR* %2561, i32 0, i32 33
  %2563 = getelementptr inbounds %struct.Reg, %struct.Reg* %2562, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %2563 to i64*
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2565 = getelementptr inbounds %struct.GPR, %struct.GPR* %2564, i32 0, i32 1
  %2566 = getelementptr inbounds %struct.Reg, %struct.Reg* %2565, i32 0, i32 0
  %EAX.i1101 = bitcast %union.anon* %2566 to i32*
  %2567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2568 = getelementptr inbounds %struct.GPR, %struct.GPR* %2567, i32 0, i32 15
  %2569 = getelementptr inbounds %struct.Reg, %struct.Reg* %2568, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %2569 to i64*
  %2570 = load i64, i64* %RBP.i1102
  %2571 = sub i64 %2570, 16
  %2572 = load i32, i32* %EAX.i1101
  %2573 = zext i32 %2572 to i64
  %2574 = load i64, i64* %PC.i1100
  %2575 = add i64 %2574, 3
  store i64 %2575, i64* %PC.i1100
  %2576 = inttoptr i64 %2571 to i32*
  store i32 %2572, i32* %2576
  store %struct.Memory* %loadMem_47d046, %struct.Memory** %MEMORY
  %loadMem_47d049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2578 = getelementptr inbounds %struct.GPR, %struct.GPR* %2577, i32 0, i32 33
  %2579 = getelementptr inbounds %struct.Reg, %struct.Reg* %2578, i32 0, i32 0
  %PC.i1099 = bitcast %union.anon* %2579 to i64*
  %2580 = load i64, i64* %PC.i1099
  %2581 = add i64 %2580, -59
  %2582 = load i64, i64* %PC.i1099
  %2583 = add i64 %2582, 5
  store i64 %2583, i64* %PC.i1099
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2581, i64* %2584, align 8
  store %struct.Memory* %loadMem_47d049, %struct.Memory** %MEMORY
  br label %block_.L_47d00e

block_.L_47d04e:                                  ; preds = %block_.L_47d00e
  %loadMem_47d04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2586 = getelementptr inbounds %struct.GPR, %struct.GPR* %2585, i32 0, i32 33
  %2587 = getelementptr inbounds %struct.Reg, %struct.Reg* %2586, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %2587 to i64*
  %2588 = load i64, i64* %PC.i1098
  %2589 = add i64 %2588, 5
  %2590 = load i64, i64* %PC.i1098
  %2591 = add i64 %2590, 5
  store i64 %2591, i64* %PC.i1098
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2589, i64* %2592, align 8
  store %struct.Memory* %loadMem_47d04e, %struct.Memory** %MEMORY
  br label %block_.L_47d053

block_.L_47d053:                                  ; preds = %block_.L_47d04e, %block_.L_47d002
  %loadMem_47d053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2594 = getelementptr inbounds %struct.GPR, %struct.GPR* %2593, i32 0, i32 33
  %2595 = getelementptr inbounds %struct.Reg, %struct.Reg* %2594, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %2595 to i64*
  %2596 = load i64, i64* %PC.i1097
  %2597 = add i64 %2596, 5
  %2598 = load i64, i64* %PC.i1097
  %2599 = add i64 %2598, 5
  store i64 %2599, i64* %PC.i1097
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2597, i64* %2600, align 8
  store %struct.Memory* %loadMem_47d053, %struct.Memory** %MEMORY
  br label %block_.L_47d058

block_.L_47d058:                                  ; preds = %block_.L_47d053, %block_.L_47cf67
  %loadMem_47d058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2602 = getelementptr inbounds %struct.GPR, %struct.GPR* %2601, i32 0, i32 33
  %2603 = getelementptr inbounds %struct.Reg, %struct.Reg* %2602, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %2603 to i64*
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2605 = getelementptr inbounds %struct.GPR, %struct.GPR* %2604, i32 0, i32 1
  %2606 = getelementptr inbounds %struct.Reg, %struct.Reg* %2605, i32 0, i32 0
  %RAX.i1096 = bitcast %union.anon* %2606 to i64*
  %2607 = load i64, i64* %PC.i1095
  %2608 = add i64 %2607, 8
  store i64 %2608, i64* %PC.i1095
  %2609 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2609, i64* %RAX.i1096, align 8
  store %struct.Memory* %loadMem_47d058, %struct.Memory** %MEMORY
  %loadMem_47d060 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2611 = getelementptr inbounds %struct.GPR, %struct.GPR* %2610, i32 0, i32 33
  %2612 = getelementptr inbounds %struct.Reg, %struct.Reg* %2611, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %2612 to i64*
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2614 = getelementptr inbounds %struct.GPR, %struct.GPR* %2613, i32 0, i32 1
  %2615 = getelementptr inbounds %struct.Reg, %struct.Reg* %2614, i32 0, i32 0
  %RAX.i1094 = bitcast %union.anon* %2615 to i64*
  %2616 = load i64, i64* %RAX.i1094
  %2617 = add i64 %2616, 72568
  %2618 = load i64, i64* %PC.i1093
  %2619 = add i64 %2618, 7
  store i64 %2619, i64* %PC.i1093
  %2620 = inttoptr i64 %2617 to i32*
  %2621 = load i32, i32* %2620
  %2622 = sub i32 %2621, 1
  %2623 = icmp ult i32 %2621, 1
  %2624 = zext i1 %2623 to i8
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2624, i8* %2625, align 1
  %2626 = and i32 %2622, 255
  %2627 = call i32 @llvm.ctpop.i32(i32 %2626)
  %2628 = trunc i32 %2627 to i8
  %2629 = and i8 %2628, 1
  %2630 = xor i8 %2629, 1
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2630, i8* %2631, align 1
  %2632 = xor i32 %2621, 1
  %2633 = xor i32 %2632, %2622
  %2634 = lshr i32 %2633, 4
  %2635 = trunc i32 %2634 to i8
  %2636 = and i8 %2635, 1
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2636, i8* %2637, align 1
  %2638 = icmp eq i32 %2622, 0
  %2639 = zext i1 %2638 to i8
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2639, i8* %2640, align 1
  %2641 = lshr i32 %2622, 31
  %2642 = trunc i32 %2641 to i8
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2642, i8* %2643, align 1
  %2644 = lshr i32 %2621, 31
  %2645 = xor i32 %2641, %2644
  %2646 = add i32 %2645, %2644
  %2647 = icmp eq i32 %2646, 2
  %2648 = zext i1 %2647 to i8
  %2649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2648, i8* %2649, align 1
  store %struct.Memory* %loadMem_47d060, %struct.Memory** %MEMORY
  %loadMem_47d067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 33
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %2652 to i64*
  %2653 = load i64, i64* %PC.i1092
  %2654 = add i64 %2653, 188
  %2655 = load i64, i64* %PC.i1092
  %2656 = add i64 %2655, 6
  %2657 = load i64, i64* %PC.i1092
  %2658 = add i64 %2657, 6
  store i64 %2658, i64* %PC.i1092
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2660 = load i8, i8* %2659, align 1
  %2661 = icmp eq i8 %2660, 0
  %2662 = zext i1 %2661 to i8
  store i8 %2662, i8* %BRANCH_TAKEN, align 1
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2664 = select i1 %2661, i64 %2654, i64 %2656
  store i64 %2664, i64* %2663, align 8
  store %struct.Memory* %loadMem_47d067, %struct.Memory** %MEMORY
  %loadBr_47d067 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d067 = icmp eq i8 %loadBr_47d067, 1
  br i1 %cmpBr_47d067, label %block_.L_47d123, label %block_47d06d

block_47d06d:                                     ; preds = %block_.L_47d058
  %loadMem_47d06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 33
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %2667 to i64*
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2669 = getelementptr inbounds %struct.GPR, %struct.GPR* %2668, i32 0, i32 1
  %2670 = getelementptr inbounds %struct.Reg, %struct.Reg* %2669, i32 0, i32 0
  %RAX.i1091 = bitcast %union.anon* %2670 to i64*
  %2671 = load i64, i64* %PC.i1090
  %2672 = add i64 %2671, 8
  store i64 %2672, i64* %PC.i1090
  %2673 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2673, i64* %RAX.i1091, align 8
  store %struct.Memory* %loadMem_47d06d, %struct.Memory** %MEMORY
  %loadMem_47d075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 33
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %2676 to i64*
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2678 = getelementptr inbounds %struct.GPR, %struct.GPR* %2677, i32 0, i32 1
  %2679 = getelementptr inbounds %struct.Reg, %struct.Reg* %2678, i32 0, i32 0
  %RAX.i1089 = bitcast %union.anon* %2679 to i64*
  %2680 = load i64, i64* %RAX.i1089
  %2681 = add i64 %2680, 72576
  %2682 = load i64, i64* %PC.i1088
  %2683 = add i64 %2682, 7
  store i64 %2683, i64* %PC.i1088
  %2684 = inttoptr i64 %2681 to i32*
  %2685 = load i32, i32* %2684
  %2686 = sub i32 %2685, 1
  %2687 = icmp ult i32 %2685, 1
  %2688 = zext i1 %2687 to i8
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2688, i8* %2689, align 1
  %2690 = and i32 %2686, 255
  %2691 = call i32 @llvm.ctpop.i32(i32 %2690)
  %2692 = trunc i32 %2691 to i8
  %2693 = and i8 %2692, 1
  %2694 = xor i8 %2693, 1
  %2695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2694, i8* %2695, align 1
  %2696 = xor i32 %2685, 1
  %2697 = xor i32 %2696, %2686
  %2698 = lshr i32 %2697, 4
  %2699 = trunc i32 %2698 to i8
  %2700 = and i8 %2699, 1
  %2701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2700, i8* %2701, align 1
  %2702 = icmp eq i32 %2686, 0
  %2703 = zext i1 %2702 to i8
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2703, i8* %2704, align 1
  %2705 = lshr i32 %2686, 31
  %2706 = trunc i32 %2705 to i8
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2706, i8* %2707, align 1
  %2708 = lshr i32 %2685, 31
  %2709 = xor i32 %2705, %2708
  %2710 = add i32 %2709, %2708
  %2711 = icmp eq i32 %2710, 2
  %2712 = zext i1 %2711 to i8
  %2713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2712, i8* %2713, align 1
  store %struct.Memory* %loadMem_47d075, %struct.Memory** %MEMORY
  %loadMem_47d07c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2715 = getelementptr inbounds %struct.GPR, %struct.GPR* %2714, i32 0, i32 33
  %2716 = getelementptr inbounds %struct.Reg, %struct.Reg* %2715, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %2716 to i64*
  %2717 = load i64, i64* %PC.i1087
  %2718 = add i64 %2717, 105
  %2719 = load i64, i64* %PC.i1087
  %2720 = add i64 %2719, 6
  %2721 = load i64, i64* %PC.i1087
  %2722 = add i64 %2721, 6
  store i64 %2722, i64* %PC.i1087
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2724 = load i8, i8* %2723, align 1
  %2725 = icmp eq i8 %2724, 0
  %2726 = zext i1 %2725 to i8
  store i8 %2726, i8* %BRANCH_TAKEN, align 1
  %2727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2728 = select i1 %2725, i64 %2718, i64 %2720
  store i64 %2728, i64* %2727, align 8
  store %struct.Memory* %loadMem_47d07c, %struct.Memory** %MEMORY
  %loadBr_47d07c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d07c = icmp eq i8 %loadBr_47d07c, 1
  br i1 %cmpBr_47d07c, label %block_.L_47d0e5, label %block_47d082

block_47d082:                                     ; preds = %block_47d06d
  %loadMem_47d082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2730 = getelementptr inbounds %struct.GPR, %struct.GPR* %2729, i32 0, i32 33
  %2731 = getelementptr inbounds %struct.Reg, %struct.Reg* %2730, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %2731 to i64*
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2733 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2732, i64 0, i64 0
  %YMM0.i1086 = bitcast %union.VectorReg* %2733 to %"class.std::bitset"*
  %2734 = bitcast %"class.std::bitset"* %YMM0.i1086 to i8*
  %2735 = load i64, i64* %PC.i1085
  %2736 = add i64 %2735, 9
  store i64 %2736, i64* %PC.i1085
  %2737 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %2738 = bitcast i8* %2734 to double*
  store double %2737, double* %2738, align 1
  %2739 = getelementptr inbounds i8, i8* %2734, i64 8
  %2740 = bitcast i8* %2739 to double*
  store double 0.000000e+00, double* %2740, align 1
  store %struct.Memory* %loadMem_47d082, %struct.Memory** %MEMORY
  %loadMem_47d08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2742 = getelementptr inbounds %struct.GPR, %struct.GPR* %2741, i32 0, i32 33
  %2743 = getelementptr inbounds %struct.Reg, %struct.Reg* %2742, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %2743 to i64*
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2745 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2744, i64 0, i64 0
  %XMM0.i1084 = bitcast %union.VectorReg* %2745 to %union.vec128_t*
  %2746 = bitcast %union.vec128_t* %XMM0.i1084 to i8*
  %2747 = load i64, i64* %PC.i1083
  %2748 = add i64 %2747, 9
  store i64 %2748, i64* %PC.i1083
  %2749 = bitcast i8* %2746 to double*
  %2750 = load double, double* %2749, align 1
  store double %2750, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47d08b, %struct.Memory** %MEMORY
  %loadMem_47d094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 33
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %2753 to i64*
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2755 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2754, i64 0, i64 0
  %YMM0.i1082 = bitcast %union.VectorReg* %2755 to %"class.std::bitset"*
  %2756 = bitcast %"class.std::bitset"* %YMM0.i1082 to i8*
  %2757 = load i64, i64* %PC.i1081
  %2758 = add i64 %2757, 9
  store i64 %2758, i64* %PC.i1081
  %2759 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %2760 = bitcast i8* %2756 to double*
  store double %2759, double* %2760, align 1
  %2761 = getelementptr inbounds i8, i8* %2756, i64 8
  %2762 = bitcast i8* %2761 to double*
  store double 0.000000e+00, double* %2762, align 1
  store %struct.Memory* %loadMem_47d094, %struct.Memory** %MEMORY
  %loadMem_47d09d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2764 = getelementptr inbounds %struct.GPR, %struct.GPR* %2763, i32 0, i32 33
  %2765 = getelementptr inbounds %struct.Reg, %struct.Reg* %2764, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %2765 to i64*
  %2766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2767 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2766, i64 0, i64 0
  %YMM0.i1080 = bitcast %union.VectorReg* %2767 to %"class.std::bitset"*
  %2768 = bitcast %"class.std::bitset"* %YMM0.i1080 to i8*
  %2769 = bitcast %"class.std::bitset"* %YMM0.i1080 to i8*
  %2770 = load i64, i64* %PC.i1079
  %2771 = add i64 %2770, 9
  store i64 %2771, i64* %PC.i1079
  %2772 = bitcast i8* %2769 to double*
  %2773 = load double, double* %2772, align 1
  %2774 = getelementptr inbounds i8, i8* %2769, i64 8
  %2775 = bitcast i8* %2774 to i64*
  %2776 = load i64, i64* %2775, align 1
  %2777 = load double, double* bitcast (%G_0x722fe0_type* @G_0x722fe0 to double*)
  %2778 = fsub double %2773, %2777
  %2779 = bitcast i8* %2768 to double*
  store double %2778, double* %2779, align 1
  %2780 = getelementptr inbounds i8, i8* %2768, i64 8
  %2781 = bitcast i8* %2780 to i64*
  store i64 %2776, i64* %2781, align 1
  store %struct.Memory* %loadMem_47d09d, %struct.Memory** %MEMORY
  %loadMem_47d0a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2783 = getelementptr inbounds %struct.GPR, %struct.GPR* %2782, i32 0, i32 33
  %2784 = getelementptr inbounds %struct.Reg, %struct.Reg* %2783, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %2784 to i64*
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 1
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %RAX.i1078 = bitcast %union.anon* %2787 to i64*
  %2788 = load i64, i64* %PC.i1077
  %2789 = add i64 %2788, 7
  store i64 %2789, i64* %PC.i1077
  %2790 = load i32, i32* bitcast (%G_0x722fd8_type* @G_0x722fd8 to i32*)
  %2791 = zext i32 %2790 to i64
  store i64 %2791, i64* %RAX.i1078, align 8
  store %struct.Memory* %loadMem_47d0a6, %struct.Memory** %MEMORY
  %loadMem_47d0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2793 = getelementptr inbounds %struct.GPR, %struct.GPR* %2792, i32 0, i32 33
  %2794 = getelementptr inbounds %struct.Reg, %struct.Reg* %2793, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %2794 to i64*
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2796 = getelementptr inbounds %struct.GPR, %struct.GPR* %2795, i32 0, i32 1
  %2797 = getelementptr inbounds %struct.Reg, %struct.Reg* %2796, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %2797 to i64*
  %2798 = load i64, i64* %RAX.i1076
  %2799 = load i64, i64* %PC.i1075
  %2800 = add i64 %2799, 3
  store i64 %2800, i64* %PC.i1075
  %2801 = trunc i64 %2798 to i32
  %2802 = sub i32 %2801, 1
  %2803 = zext i32 %2802 to i64
  store i64 %2803, i64* %RAX.i1076, align 8
  %2804 = icmp ult i32 %2801, 1
  %2805 = zext i1 %2804 to i8
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2805, i8* %2806, align 1
  %2807 = and i32 %2802, 255
  %2808 = call i32 @llvm.ctpop.i32(i32 %2807)
  %2809 = trunc i32 %2808 to i8
  %2810 = and i8 %2809, 1
  %2811 = xor i8 %2810, 1
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2811, i8* %2812, align 1
  %2813 = xor i64 1, %2798
  %2814 = trunc i64 %2813 to i32
  %2815 = xor i32 %2814, %2802
  %2816 = lshr i32 %2815, 4
  %2817 = trunc i32 %2816 to i8
  %2818 = and i8 %2817, 1
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2818, i8* %2819, align 1
  %2820 = icmp eq i32 %2802, 0
  %2821 = zext i1 %2820 to i8
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2821, i8* %2822, align 1
  %2823 = lshr i32 %2802, 31
  %2824 = trunc i32 %2823 to i8
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2824, i8* %2825, align 1
  %2826 = lshr i32 %2801, 31
  %2827 = xor i32 %2823, %2826
  %2828 = add i32 %2827, %2826
  %2829 = icmp eq i32 %2828, 2
  %2830 = zext i1 %2829 to i8
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2830, i8* %2831, align 1
  store %struct.Memory* %loadMem_47d0ad, %struct.Memory** %MEMORY
  %loadMem_47d0b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2833 = getelementptr inbounds %struct.GPR, %struct.GPR* %2832, i32 0, i32 33
  %2834 = getelementptr inbounds %struct.Reg, %struct.Reg* %2833, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %2834 to i64*
  %2835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2836 = getelementptr inbounds %struct.GPR, %struct.GPR* %2835, i32 0, i32 1
  %2837 = getelementptr inbounds %struct.Reg, %struct.Reg* %2836, i32 0, i32 0
  %EAX.i1073 = bitcast %union.anon* %2837 to i32*
  %2838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2839 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2838, i64 0, i64 1
  %YMM1.i1074 = bitcast %union.VectorReg* %2839 to %"class.std::bitset"*
  %2840 = bitcast %"class.std::bitset"* %YMM1.i1074 to i8*
  %2841 = load i32, i32* %EAX.i1073
  %2842 = zext i32 %2841 to i64
  %2843 = load i64, i64* %PC.i1072
  %2844 = add i64 %2843, 4
  store i64 %2844, i64* %PC.i1072
  %2845 = sitofp i32 %2841 to double
  %2846 = bitcast i8* %2840 to double*
  store double %2845, double* %2846, align 1
  store %struct.Memory* %loadMem_47d0b0, %struct.Memory** %MEMORY
  %loadMem_47d0b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2848 = getelementptr inbounds %struct.GPR, %struct.GPR* %2847, i32 0, i32 33
  %2849 = getelementptr inbounds %struct.Reg, %struct.Reg* %2848, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %2849 to i64*
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2851 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2850, i64 0, i64 0
  %YMM0.i1070 = bitcast %union.VectorReg* %2851 to %"class.std::bitset"*
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2853 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2852, i64 0, i64 1
  %XMM1.i1071 = bitcast %union.VectorReg* %2853 to %union.vec128_t*
  %2854 = bitcast %"class.std::bitset"* %YMM0.i1070 to i8*
  %2855 = bitcast %"class.std::bitset"* %YMM0.i1070 to i8*
  %2856 = bitcast %union.vec128_t* %XMM1.i1071 to i8*
  %2857 = load i64, i64* %PC.i1069
  %2858 = add i64 %2857, 4
  store i64 %2858, i64* %PC.i1069
  %2859 = bitcast i8* %2855 to double*
  %2860 = load double, double* %2859, align 1
  %2861 = getelementptr inbounds i8, i8* %2855, i64 8
  %2862 = bitcast i8* %2861 to i64*
  %2863 = load i64, i64* %2862, align 1
  %2864 = bitcast i8* %2856 to double*
  %2865 = load double, double* %2864, align 1
  %2866 = fdiv double %2860, %2865
  %2867 = bitcast i8* %2854 to double*
  store double %2866, double* %2867, align 1
  %2868 = getelementptr inbounds i8, i8* %2854, i64 8
  %2869 = bitcast i8* %2868 to i64*
  store i64 %2863, i64* %2869, align 1
  store %struct.Memory* %loadMem_47d0b4, %struct.Memory** %MEMORY
  %loadMem_47d0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 33
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %2872 to i64*
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2874 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2873, i64 0, i64 0
  %XMM0.i1068 = bitcast %union.VectorReg* %2874 to %union.vec128_t*
  %2875 = bitcast %union.vec128_t* %XMM0.i1068 to i8*
  %2876 = load i64, i64* %PC.i1067
  %2877 = add i64 %2876, 9
  store i64 %2877, i64* %PC.i1067
  %2878 = bitcast i8* %2875 to double*
  %2879 = load double, double* %2878, align 1
  store double %2879, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  store %struct.Memory* %loadMem_47d0b8, %struct.Memory** %MEMORY
  %loadMem_47d0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2881 = getelementptr inbounds %struct.GPR, %struct.GPR* %2880, i32 0, i32 33
  %2882 = getelementptr inbounds %struct.Reg, %struct.Reg* %2881, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %2882 to i64*
  %2883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2884 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2883, i64 0, i64 0
  %YMM0.i1066 = bitcast %union.VectorReg* %2884 to %"class.std::bitset"*
  %2885 = bitcast %"class.std::bitset"* %YMM0.i1066 to i8*
  %2886 = load i64, i64* %PC.i1065
  %2887 = add i64 %2886, 9
  store i64 %2887, i64* %PC.i1065
  %2888 = load double, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  %2889 = bitcast i8* %2885 to double*
  store double %2888, double* %2889, align 1
  %2890 = getelementptr inbounds i8, i8* %2885, i64 8
  %2891 = bitcast i8* %2890 to double*
  store double 0.000000e+00, double* %2891, align 1
  store %struct.Memory* %loadMem_47d0c1, %struct.Memory** %MEMORY
  %loadMem_47d0ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2893 = getelementptr inbounds %struct.GPR, %struct.GPR* %2892, i32 0, i32 33
  %2894 = getelementptr inbounds %struct.Reg, %struct.Reg* %2893, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %2894 to i64*
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2896 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2895, i64 0, i64 1
  %YMM1.i1064 = bitcast %union.VectorReg* %2896 to %"class.std::bitset"*
  %2897 = bitcast %"class.std::bitset"* %YMM1.i1064 to i8*
  %2898 = load i64, i64* %PC.i1063
  %2899 = add i64 %2898, 9
  store i64 %2899, i64* %PC.i1063
  %2900 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %2901 = bitcast i8* %2897 to double*
  store double %2900, double* %2901, align 1
  %2902 = getelementptr inbounds i8, i8* %2897, i64 8
  %2903 = bitcast i8* %2902 to double*
  store double 0.000000e+00, double* %2903, align 1
  store %struct.Memory* %loadMem_47d0ca, %struct.Memory** %MEMORY
  %loadMem_47d0d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2905 = getelementptr inbounds %struct.GPR, %struct.GPR* %2904, i32 0, i32 33
  %2906 = getelementptr inbounds %struct.Reg, %struct.Reg* %2905, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %2906 to i64*
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2908 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2907, i64 0, i64 1
  %YMM1.i1061 = bitcast %union.VectorReg* %2908 to %"class.std::bitset"*
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2910 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2909, i64 0, i64 0
  %XMM0.i1062 = bitcast %union.VectorReg* %2910 to %union.vec128_t*
  %2911 = bitcast %"class.std::bitset"* %YMM1.i1061 to i8*
  %2912 = bitcast %"class.std::bitset"* %YMM1.i1061 to i8*
  %2913 = bitcast %union.vec128_t* %XMM0.i1062 to i8*
  %2914 = load i64, i64* %PC.i1060
  %2915 = add i64 %2914, 4
  store i64 %2915, i64* %PC.i1060
  %2916 = bitcast i8* %2912 to double*
  %2917 = load double, double* %2916, align 1
  %2918 = getelementptr inbounds i8, i8* %2912, i64 8
  %2919 = bitcast i8* %2918 to i64*
  %2920 = load i64, i64* %2919, align 1
  %2921 = bitcast i8* %2913 to double*
  %2922 = load double, double* %2921, align 1
  %2923 = fsub double %2917, %2922
  %2924 = bitcast i8* %2911 to double*
  store double %2923, double* %2924, align 1
  %2925 = getelementptr inbounds i8, i8* %2911, i64 8
  %2926 = bitcast i8* %2925 to i64*
  store i64 %2920, i64* %2926, align 1
  store %struct.Memory* %loadMem_47d0d3, %struct.Memory** %MEMORY
  %loadMem_47d0d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2928 = getelementptr inbounds %struct.GPR, %struct.GPR* %2927, i32 0, i32 33
  %2929 = getelementptr inbounds %struct.Reg, %struct.Reg* %2928, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %2929 to i64*
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2931 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2930, i64 0, i64 1
  %XMM1.i1059 = bitcast %union.VectorReg* %2931 to %union.vec128_t*
  %2932 = bitcast %union.vec128_t* %XMM1.i1059 to i8*
  %2933 = load i64, i64* %PC.i1058
  %2934 = add i64 %2933, 9
  store i64 %2934, i64* %PC.i1058
  %2935 = bitcast i8* %2932 to double*
  %2936 = load double, double* %2935, align 1
  store double %2936, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47d0d7, %struct.Memory** %MEMORY
  %loadMem_47d0e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 33
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %2939 to i64*
  %2940 = load i64, i64* %PC.i1057
  %2941 = add i64 %2940, 62
  %2942 = load i64, i64* %PC.i1057
  %2943 = add i64 %2942, 5
  store i64 %2943, i64* %PC.i1057
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2941, i64* %2944, align 8
  store %struct.Memory* %loadMem_47d0e0, %struct.Memory** %MEMORY
  br label %block_.L_47d11e

block_.L_47d0e5:                                  ; preds = %block_47d06d
  %loadMem_47d0e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2946 = getelementptr inbounds %struct.GPR, %struct.GPR* %2945, i32 0, i32 33
  %2947 = getelementptr inbounds %struct.Reg, %struct.Reg* %2946, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %2947 to i64*
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2949 = getelementptr inbounds %struct.GPR, %struct.GPR* %2948, i32 0, i32 1
  %2950 = getelementptr inbounds %struct.Reg, %struct.Reg* %2949, i32 0, i32 0
  %RAX.i1056 = bitcast %union.anon* %2950 to i64*
  %2951 = load i64, i64* %PC.i1055
  %2952 = add i64 %2951, 8
  store i64 %2952, i64* %PC.i1055
  %2953 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %2953, i64* %RAX.i1056, align 8
  store %struct.Memory* %loadMem_47d0e5, %struct.Memory** %MEMORY
  %loadMem_47d0ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 33
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %2956 to i64*
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 1
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %RAX.i1054 = bitcast %union.anon* %2959 to i64*
  %2960 = load i64, i64* %RAX.i1054
  %2961 = add i64 %2960, 72576
  %2962 = load i64, i64* %PC.i1053
  %2963 = add i64 %2962, 7
  store i64 %2963, i64* %PC.i1053
  %2964 = inttoptr i64 %2961 to i32*
  %2965 = load i32, i32* %2964
  %2966 = sub i32 %2965, 1
  %2967 = icmp ult i32 %2965, 1
  %2968 = zext i1 %2967 to i8
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2968, i8* %2969, align 1
  %2970 = and i32 %2966, 255
  %2971 = call i32 @llvm.ctpop.i32(i32 %2970)
  %2972 = trunc i32 %2971 to i8
  %2973 = and i8 %2972, 1
  %2974 = xor i8 %2973, 1
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2974, i8* %2975, align 1
  %2976 = xor i32 %2965, 1
  %2977 = xor i32 %2976, %2966
  %2978 = lshr i32 %2977, 4
  %2979 = trunc i32 %2978 to i8
  %2980 = and i8 %2979, 1
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2980, i8* %2981, align 1
  %2982 = icmp eq i32 %2966, 0
  %2983 = zext i1 %2982 to i8
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2983, i8* %2984, align 1
  %2985 = lshr i32 %2966, 31
  %2986 = trunc i32 %2985 to i8
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2986, i8* %2987, align 1
  %2988 = lshr i32 %2965, 31
  %2989 = xor i32 %2985, %2988
  %2990 = add i32 %2989, %2988
  %2991 = icmp eq i32 %2990, 2
  %2992 = zext i1 %2991 to i8
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2992, i8* %2993, align 1
  store %struct.Memory* %loadMem_47d0ed, %struct.Memory** %MEMORY
  %loadMem_47d0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 33
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %2996 to i64*
  %2997 = load i64, i64* %PC.i1052
  %2998 = add i64 %2997, 37
  %2999 = load i64, i64* %PC.i1052
  %3000 = add i64 %2999, 6
  %3001 = load i64, i64* %PC.i1052
  %3002 = add i64 %3001, 6
  store i64 %3002, i64* %PC.i1052
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3004 = load i8, i8* %3003, align 1
  %3005 = icmp ne i8 %3004, 0
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3007 = load i8, i8* %3006, align 1
  %3008 = icmp ne i8 %3007, 0
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3010 = load i8, i8* %3009, align 1
  %3011 = icmp ne i8 %3010, 0
  %3012 = xor i1 %3008, %3011
  %3013 = or i1 %3005, %3012
  %3014 = zext i1 %3013 to i8
  store i8 %3014, i8* %BRANCH_TAKEN, align 1
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3016 = select i1 %3013, i64 %2998, i64 %3000
  store i64 %3016, i64* %3015, align 8
  store %struct.Memory* %loadMem_47d0f4, %struct.Memory** %MEMORY
  %loadBr_47d0f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d0f4 = icmp eq i8 %loadBr_47d0f4, 1
  br i1 %cmpBr_47d0f4, label %block_.L_47d119, label %block_47d0fa

block_47d0fa:                                     ; preds = %block_.L_47d0e5
  %loadMem_47d0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3018 = getelementptr inbounds %struct.GPR, %struct.GPR* %3017, i32 0, i32 33
  %3019 = getelementptr inbounds %struct.Reg, %struct.Reg* %3018, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %3019 to i64*
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3021 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3020, i64 0, i64 0
  %YMM0.i1051 = bitcast %union.VectorReg* %3021 to %"class.std::bitset"*
  %3022 = bitcast %"class.std::bitset"* %YMM0.i1051 to i8*
  %3023 = load i64, i64* %PC.i1050
  %3024 = add i64 %3023, 9
  store i64 %3024, i64* %PC.i1050
  %3025 = load double, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  %3026 = bitcast i8* %3022 to double*
  store double %3025, double* %3026, align 1
  %3027 = getelementptr inbounds i8, i8* %3022, i64 8
  %3028 = bitcast i8* %3027 to double*
  store double 0.000000e+00, double* %3028, align 1
  store %struct.Memory* %loadMem_47d0fa, %struct.Memory** %MEMORY
  %loadMem_47d103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3030 = getelementptr inbounds %struct.GPR, %struct.GPR* %3029, i32 0, i32 33
  %3031 = getelementptr inbounds %struct.Reg, %struct.Reg* %3030, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %3031 to i64*
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3033 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3032, i64 0, i64 1
  %YMM1.i1049 = bitcast %union.VectorReg* %3033 to %"class.std::bitset"*
  %3034 = bitcast %"class.std::bitset"* %YMM1.i1049 to i8*
  %3035 = load i64, i64* %PC.i1048
  %3036 = add i64 %3035, 9
  store i64 %3036, i64* %PC.i1048
  %3037 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %3038 = bitcast i8* %3034 to double*
  store double %3037, double* %3038, align 1
  %3039 = getelementptr inbounds i8, i8* %3034, i64 8
  %3040 = bitcast i8* %3039 to double*
  store double 0.000000e+00, double* %3040, align 1
  store %struct.Memory* %loadMem_47d103, %struct.Memory** %MEMORY
  %loadMem_47d10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3042 = getelementptr inbounds %struct.GPR, %struct.GPR* %3041, i32 0, i32 33
  %3043 = getelementptr inbounds %struct.Reg, %struct.Reg* %3042, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %3043 to i64*
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3045 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3044, i64 0, i64 1
  %YMM1.i1046 = bitcast %union.VectorReg* %3045 to %"class.std::bitset"*
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3047 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3046, i64 0, i64 0
  %XMM0.i1047 = bitcast %union.VectorReg* %3047 to %union.vec128_t*
  %3048 = bitcast %"class.std::bitset"* %YMM1.i1046 to i8*
  %3049 = bitcast %"class.std::bitset"* %YMM1.i1046 to i8*
  %3050 = bitcast %union.vec128_t* %XMM0.i1047 to i8*
  %3051 = load i64, i64* %PC.i1045
  %3052 = add i64 %3051, 4
  store i64 %3052, i64* %PC.i1045
  %3053 = bitcast i8* %3049 to double*
  %3054 = load double, double* %3053, align 1
  %3055 = getelementptr inbounds i8, i8* %3049, i64 8
  %3056 = bitcast i8* %3055 to i64*
  %3057 = load i64, i64* %3056, align 1
  %3058 = bitcast i8* %3050 to double*
  %3059 = load double, double* %3058, align 1
  %3060 = fsub double %3054, %3059
  %3061 = bitcast i8* %3048 to double*
  store double %3060, double* %3061, align 1
  %3062 = getelementptr inbounds i8, i8* %3048, i64 8
  %3063 = bitcast i8* %3062 to i64*
  store i64 %3057, i64* %3063, align 1
  store %struct.Memory* %loadMem_47d10c, %struct.Memory** %MEMORY
  %loadMem_47d110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3065 = getelementptr inbounds %struct.GPR, %struct.GPR* %3064, i32 0, i32 33
  %3066 = getelementptr inbounds %struct.Reg, %struct.Reg* %3065, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %3066 to i64*
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3068 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3067, i64 0, i64 1
  %XMM1.i1044 = bitcast %union.VectorReg* %3068 to %union.vec128_t*
  %3069 = bitcast %union.vec128_t* %XMM1.i1044 to i8*
  %3070 = load i64, i64* %PC.i1043
  %3071 = add i64 %3070, 9
  store i64 %3071, i64* %PC.i1043
  %3072 = bitcast i8* %3069 to double*
  %3073 = load double, double* %3072, align 1
  store double %3073, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47d110, %struct.Memory** %MEMORY
  br label %block_.L_47d119

block_.L_47d119:                                  ; preds = %block_47d0fa, %block_.L_47d0e5
  %loadMem_47d119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3075 = getelementptr inbounds %struct.GPR, %struct.GPR* %3074, i32 0, i32 33
  %3076 = getelementptr inbounds %struct.Reg, %struct.Reg* %3075, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %3076 to i64*
  %3077 = load i64, i64* %PC.i1042
  %3078 = add i64 %3077, 5
  %3079 = load i64, i64* %PC.i1042
  %3080 = add i64 %3079, 5
  store i64 %3080, i64* %PC.i1042
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3078, i64* %3081, align 8
  store %struct.Memory* %loadMem_47d119, %struct.Memory** %MEMORY
  br label %block_.L_47d11e

block_.L_47d11e:                                  ; preds = %block_.L_47d119, %block_47d082
  %loadMem_47d11e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3083 = getelementptr inbounds %struct.GPR, %struct.GPR* %3082, i32 0, i32 33
  %3084 = getelementptr inbounds %struct.Reg, %struct.Reg* %3083, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %3084 to i64*
  %3085 = load i64, i64* %PC.i1041
  %3086 = add i64 %3085, 208
  %3087 = load i64, i64* %PC.i1041
  %3088 = add i64 %3087, 5
  store i64 %3088, i64* %PC.i1041
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3086, i64* %3089, align 8
  store %struct.Memory* %loadMem_47d11e, %struct.Memory** %MEMORY
  br label %block_.L_47d1ee

block_.L_47d123:                                  ; preds = %block_.L_47d058
  %loadMem_47d123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3091 = getelementptr inbounds %struct.GPR, %struct.GPR* %3090, i32 0, i32 33
  %3092 = getelementptr inbounds %struct.Reg, %struct.Reg* %3091, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %3092 to i64*
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3094 = getelementptr inbounds %struct.GPR, %struct.GPR* %3093, i32 0, i32 1
  %3095 = getelementptr inbounds %struct.Reg, %struct.Reg* %3094, i32 0, i32 0
  %RAX.i1040 = bitcast %union.anon* %3095 to i64*
  %3096 = load i64, i64* %PC.i1039
  %3097 = add i64 %3096, 8
  store i64 %3097, i64* %PC.i1039
  %3098 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3098, i64* %RAX.i1040, align 8
  store %struct.Memory* %loadMem_47d123, %struct.Memory** %MEMORY
  %loadMem_47d12b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3100 = getelementptr inbounds %struct.GPR, %struct.GPR* %3099, i32 0, i32 33
  %3101 = getelementptr inbounds %struct.Reg, %struct.Reg* %3100, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %3101 to i64*
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 1
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %3104 to i64*
  %3105 = load i64, i64* %RAX.i1038
  %3106 = add i64 %3105, 72568
  %3107 = load i64, i64* %PC.i1037
  %3108 = add i64 %3107, 7
  store i64 %3108, i64* %PC.i1037
  %3109 = inttoptr i64 %3106 to i32*
  %3110 = load i32, i32* %3109
  %3111 = sub i32 %3110, 1
  %3112 = icmp ult i32 %3110, 1
  %3113 = zext i1 %3112 to i8
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3113, i8* %3114, align 1
  %3115 = and i32 %3111, 255
  %3116 = call i32 @llvm.ctpop.i32(i32 %3115)
  %3117 = trunc i32 %3116 to i8
  %3118 = and i8 %3117, 1
  %3119 = xor i8 %3118, 1
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3119, i8* %3120, align 1
  %3121 = xor i32 %3110, 1
  %3122 = xor i32 %3121, %3111
  %3123 = lshr i32 %3122, 4
  %3124 = trunc i32 %3123 to i8
  %3125 = and i8 %3124, 1
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3125, i8* %3126, align 1
  %3127 = icmp eq i32 %3111, 0
  %3128 = zext i1 %3127 to i8
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3128, i8* %3129, align 1
  %3130 = lshr i32 %3111, 31
  %3131 = trunc i32 %3130 to i8
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3131, i8* %3132, align 1
  %3133 = lshr i32 %3110, 31
  %3134 = xor i32 %3130, %3133
  %3135 = add i32 %3134, %3133
  %3136 = icmp eq i32 %3135, 2
  %3137 = zext i1 %3136 to i8
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3137, i8* %3138, align 1
  store %struct.Memory* %loadMem_47d12b, %struct.Memory** %MEMORY
  %loadMem_47d132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 33
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %3141 to i64*
  %3142 = load i64, i64* %PC.i1036
  %3143 = add i64 %3142, 183
  %3144 = load i64, i64* %PC.i1036
  %3145 = add i64 %3144, 6
  %3146 = load i64, i64* %PC.i1036
  %3147 = add i64 %3146, 6
  store i64 %3147, i64* %PC.i1036
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3149 = load i8, i8* %3148, align 1
  %3150 = icmp ne i8 %3149, 0
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3152 = load i8, i8* %3151, align 1
  %3153 = icmp ne i8 %3152, 0
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3155 = load i8, i8* %3154, align 1
  %3156 = icmp ne i8 %3155, 0
  %3157 = xor i1 %3153, %3156
  %3158 = or i1 %3150, %3157
  %3159 = zext i1 %3158 to i8
  store i8 %3159, i8* %BRANCH_TAKEN, align 1
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3161 = select i1 %3158, i64 %3143, i64 %3145
  store i64 %3161, i64* %3160, align 8
  store %struct.Memory* %loadMem_47d132, %struct.Memory** %MEMORY
  %loadBr_47d132 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d132 = icmp eq i8 %loadBr_47d132, 1
  br i1 %cmpBr_47d132, label %block_.L_47d1e9, label %block_47d138

block_47d138:                                     ; preds = %block_.L_47d123
  %loadMem_47d138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3163 = getelementptr inbounds %struct.GPR, %struct.GPR* %3162, i32 0, i32 33
  %3164 = getelementptr inbounds %struct.Reg, %struct.Reg* %3163, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %3164 to i64*
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3166 = getelementptr inbounds %struct.GPR, %struct.GPR* %3165, i32 0, i32 1
  %3167 = getelementptr inbounds %struct.Reg, %struct.Reg* %3166, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %3167 to i64*
  %3168 = load i64, i64* %PC.i1034
  %3169 = add i64 %3168, 8
  store i64 %3169, i64* %PC.i1034
  %3170 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3170, i64* %RAX.i1035, align 8
  store %struct.Memory* %loadMem_47d138, %struct.Memory** %MEMORY
  %loadMem_47d140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3172 = getelementptr inbounds %struct.GPR, %struct.GPR* %3171, i32 0, i32 33
  %3173 = getelementptr inbounds %struct.Reg, %struct.Reg* %3172, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %3173 to i64*
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3175 = getelementptr inbounds %struct.GPR, %struct.GPR* %3174, i32 0, i32 1
  %3176 = getelementptr inbounds %struct.Reg, %struct.Reg* %3175, i32 0, i32 0
  %RAX.i1033 = bitcast %union.anon* %3176 to i64*
  %3177 = load i64, i64* %RAX.i1033
  %3178 = add i64 %3177, 72576
  %3179 = load i64, i64* %PC.i1032
  %3180 = add i64 %3179, 7
  store i64 %3180, i64* %PC.i1032
  %3181 = inttoptr i64 %3178 to i32*
  %3182 = load i32, i32* %3181
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3183, align 1
  %3184 = and i32 %3182, 255
  %3185 = call i32 @llvm.ctpop.i32(i32 %3184)
  %3186 = trunc i32 %3185 to i8
  %3187 = and i8 %3186, 1
  %3188 = xor i8 %3187, 1
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3188, i8* %3189, align 1
  %3190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3190, align 1
  %3191 = icmp eq i32 %3182, 0
  %3192 = zext i1 %3191 to i8
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3192, i8* %3193, align 1
  %3194 = lshr i32 %3182, 31
  %3195 = trunc i32 %3194 to i8
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3195, i8* %3196, align 1
  %3197 = lshr i32 %3182, 31
  %3198 = xor i32 %3194, %3197
  %3199 = add i32 %3198, %3197
  %3200 = icmp eq i32 %3199, 2
  %3201 = zext i1 %3200 to i8
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3201, i8* %3202, align 1
  store %struct.Memory* %loadMem_47d140, %struct.Memory** %MEMORY
  %loadMem_47d147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3204 = getelementptr inbounds %struct.GPR, %struct.GPR* %3203, i32 0, i32 33
  %3205 = getelementptr inbounds %struct.Reg, %struct.Reg* %3204, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %3205 to i64*
  %3206 = load i64, i64* %PC.i1031
  %3207 = add i64 %3206, 100
  %3208 = load i64, i64* %PC.i1031
  %3209 = add i64 %3208, 6
  %3210 = load i64, i64* %PC.i1031
  %3211 = add i64 %3210, 6
  store i64 %3211, i64* %PC.i1031
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3213 = load i8, i8* %3212, align 1
  %3214 = icmp eq i8 %3213, 0
  %3215 = zext i1 %3214 to i8
  store i8 %3215, i8* %BRANCH_TAKEN, align 1
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3217 = select i1 %3214, i64 %3207, i64 %3209
  store i64 %3217, i64* %3216, align 8
  store %struct.Memory* %loadMem_47d147, %struct.Memory** %MEMORY
  %loadBr_47d147 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d147 = icmp eq i8 %loadBr_47d147, 1
  br i1 %cmpBr_47d147, label %block_.L_47d1ab, label %block_47d14d

block_47d14d:                                     ; preds = %block_47d138
  %loadMem_47d14d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 33
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %3220 to i64*
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3222 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3221, i64 0, i64 0
  %YMM0.i1030 = bitcast %union.VectorReg* %3222 to %"class.std::bitset"*
  %3223 = bitcast %"class.std::bitset"* %YMM0.i1030 to i8*
  %3224 = load i64, i64* %PC.i1029
  %3225 = add i64 %3224, 9
  store i64 %3225, i64* %PC.i1029
  %3226 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %3227 = bitcast i8* %3223 to double*
  store double %3226, double* %3227, align 1
  %3228 = getelementptr inbounds i8, i8* %3223, i64 8
  %3229 = bitcast i8* %3228 to double*
  store double 0.000000e+00, double* %3229, align 1
  store %struct.Memory* %loadMem_47d14d, %struct.Memory** %MEMORY
  %loadMem_47d156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3231 = getelementptr inbounds %struct.GPR, %struct.GPR* %3230, i32 0, i32 33
  %3232 = getelementptr inbounds %struct.Reg, %struct.Reg* %3231, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %3232 to i64*
  %3233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3234 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3233, i64 0, i64 0
  %XMM0.i1028 = bitcast %union.VectorReg* %3234 to %union.vec128_t*
  %3235 = bitcast %union.vec128_t* %XMM0.i1028 to i8*
  %3236 = load i64, i64* %PC.i1027
  %3237 = add i64 %3236, 9
  store i64 %3237, i64* %PC.i1027
  %3238 = bitcast i8* %3235 to double*
  %3239 = load double, double* %3238, align 1
  store double %3239, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47d156, %struct.Memory** %MEMORY
  %loadMem_47d15f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 33
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %3242 to i64*
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3244 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3243, i64 0, i64 0
  %YMM0.i1026 = bitcast %union.VectorReg* %3244 to %"class.std::bitset"*
  %3245 = bitcast %"class.std::bitset"* %YMM0.i1026 to i8*
  %3246 = load i64, i64* %PC.i1025
  %3247 = add i64 %3246, 9
  store i64 %3247, i64* %PC.i1025
  %3248 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %3249 = bitcast i8* %3245 to double*
  store double %3248, double* %3249, align 1
  %3250 = getelementptr inbounds i8, i8* %3245, i64 8
  %3251 = bitcast i8* %3250 to double*
  store double 0.000000e+00, double* %3251, align 1
  store %struct.Memory* %loadMem_47d15f, %struct.Memory** %MEMORY
  %loadMem_47d168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3253 = getelementptr inbounds %struct.GPR, %struct.GPR* %3252, i32 0, i32 33
  %3254 = getelementptr inbounds %struct.Reg, %struct.Reg* %3253, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %3254 to i64*
  %3255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3256 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3255, i64 0, i64 0
  %YMM0.i1024 = bitcast %union.VectorReg* %3256 to %"class.std::bitset"*
  %3257 = bitcast %"class.std::bitset"* %YMM0.i1024 to i8*
  %3258 = bitcast %"class.std::bitset"* %YMM0.i1024 to i8*
  %3259 = load i64, i64* %PC.i1023
  %3260 = add i64 %3259, 9
  store i64 %3260, i64* %PC.i1023
  %3261 = bitcast i8* %3258 to double*
  %3262 = load double, double* %3261, align 1
  %3263 = getelementptr inbounds i8, i8* %3258, i64 8
  %3264 = bitcast i8* %3263 to i64*
  %3265 = load i64, i64* %3264, align 1
  %3266 = load double, double* bitcast (%G_0x722fe0_type* @G_0x722fe0 to double*)
  %3267 = fsub double %3262, %3266
  %3268 = bitcast i8* %3257 to double*
  store double %3267, double* %3268, align 1
  %3269 = getelementptr inbounds i8, i8* %3257, i64 8
  %3270 = bitcast i8* %3269 to i64*
  store i64 %3265, i64* %3270, align 1
  store %struct.Memory* %loadMem_47d168, %struct.Memory** %MEMORY
  %loadMem_47d171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3272 = getelementptr inbounds %struct.GPR, %struct.GPR* %3271, i32 0, i32 33
  %3273 = getelementptr inbounds %struct.Reg, %struct.Reg* %3272, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %3273 to i64*
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3274, i64 0, i64 1
  %YMM1.i1022 = bitcast %union.VectorReg* %3275 to %"class.std::bitset"*
  %3276 = bitcast %"class.std::bitset"* %YMM1.i1022 to i8*
  %3277 = load i64, i64* %PC.i1021
  %3278 = add i64 %3277, 9
  store i64 %3278, i64* %PC.i1021
  %3279 = load i32, i32* bitcast (%G_0x722fd8_type* @G_0x722fd8 to i32*)
  %3280 = sitofp i32 %3279 to double
  %3281 = bitcast i8* %3276 to double*
  store double %3280, double* %3281, align 1
  store %struct.Memory* %loadMem_47d171, %struct.Memory** %MEMORY
  %loadMem_47d17a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3283 = getelementptr inbounds %struct.GPR, %struct.GPR* %3282, i32 0, i32 33
  %3284 = getelementptr inbounds %struct.Reg, %struct.Reg* %3283, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %3284 to i64*
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3286 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3285, i64 0, i64 0
  %YMM0.i1019 = bitcast %union.VectorReg* %3286 to %"class.std::bitset"*
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3288 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3287, i64 0, i64 1
  %XMM1.i1020 = bitcast %union.VectorReg* %3288 to %union.vec128_t*
  %3289 = bitcast %"class.std::bitset"* %YMM0.i1019 to i8*
  %3290 = bitcast %"class.std::bitset"* %YMM0.i1019 to i8*
  %3291 = bitcast %union.vec128_t* %XMM1.i1020 to i8*
  %3292 = load i64, i64* %PC.i1018
  %3293 = add i64 %3292, 4
  store i64 %3293, i64* %PC.i1018
  %3294 = bitcast i8* %3290 to double*
  %3295 = load double, double* %3294, align 1
  %3296 = getelementptr inbounds i8, i8* %3290, i64 8
  %3297 = bitcast i8* %3296 to i64*
  %3298 = load i64, i64* %3297, align 1
  %3299 = bitcast i8* %3291 to double*
  %3300 = load double, double* %3299, align 1
  %3301 = fdiv double %3295, %3300
  %3302 = bitcast i8* %3289 to double*
  store double %3301, double* %3302, align 1
  %3303 = getelementptr inbounds i8, i8* %3289, i64 8
  %3304 = bitcast i8* %3303 to i64*
  store i64 %3298, i64* %3304, align 1
  store %struct.Memory* %loadMem_47d17a, %struct.Memory** %MEMORY
  %loadMem_47d17e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3306 = getelementptr inbounds %struct.GPR, %struct.GPR* %3305, i32 0, i32 33
  %3307 = getelementptr inbounds %struct.Reg, %struct.Reg* %3306, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %3307 to i64*
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3308, i64 0, i64 0
  %XMM0.i1017 = bitcast %union.VectorReg* %3309 to %union.vec128_t*
  %3310 = bitcast %union.vec128_t* %XMM0.i1017 to i8*
  %3311 = load i64, i64* %PC.i1016
  %3312 = add i64 %3311, 9
  store i64 %3312, i64* %PC.i1016
  %3313 = bitcast i8* %3310 to double*
  %3314 = load double, double* %3313, align 1
  store double %3314, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  store %struct.Memory* %loadMem_47d17e, %struct.Memory** %MEMORY
  %loadMem_47d187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3316 = getelementptr inbounds %struct.GPR, %struct.GPR* %3315, i32 0, i32 33
  %3317 = getelementptr inbounds %struct.Reg, %struct.Reg* %3316, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %3317 to i64*
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3318, i64 0, i64 0
  %YMM0.i1015 = bitcast %union.VectorReg* %3319 to %"class.std::bitset"*
  %3320 = bitcast %"class.std::bitset"* %YMM0.i1015 to i8*
  %3321 = load i64, i64* %PC.i1014
  %3322 = add i64 %3321, 9
  store i64 %3322, i64* %PC.i1014
  %3323 = load double, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  %3324 = bitcast i8* %3320 to double*
  store double %3323, double* %3324, align 1
  %3325 = getelementptr inbounds i8, i8* %3320, i64 8
  %3326 = bitcast i8* %3325 to double*
  store double 0.000000e+00, double* %3326, align 1
  store %struct.Memory* %loadMem_47d187, %struct.Memory** %MEMORY
  %loadMem_47d190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3328 = getelementptr inbounds %struct.GPR, %struct.GPR* %3327, i32 0, i32 33
  %3329 = getelementptr inbounds %struct.Reg, %struct.Reg* %3328, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %3329 to i64*
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3331 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3330, i64 0, i64 1
  %YMM1.i1013 = bitcast %union.VectorReg* %3331 to %"class.std::bitset"*
  %3332 = bitcast %"class.std::bitset"* %YMM1.i1013 to i8*
  %3333 = load i64, i64* %PC.i1012
  %3334 = add i64 %3333, 9
  store i64 %3334, i64* %PC.i1012
  %3335 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %3336 = bitcast i8* %3332 to double*
  store double %3335, double* %3336, align 1
  %3337 = getelementptr inbounds i8, i8* %3332, i64 8
  %3338 = bitcast i8* %3337 to double*
  store double 0.000000e+00, double* %3338, align 1
  store %struct.Memory* %loadMem_47d190, %struct.Memory** %MEMORY
  %loadMem_47d199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 33
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %3341 to i64*
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3343 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3342, i64 0, i64 1
  %YMM1.i1010 = bitcast %union.VectorReg* %3343 to %"class.std::bitset"*
  %3344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3345 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3344, i64 0, i64 0
  %XMM0.i1011 = bitcast %union.VectorReg* %3345 to %union.vec128_t*
  %3346 = bitcast %"class.std::bitset"* %YMM1.i1010 to i8*
  %3347 = bitcast %"class.std::bitset"* %YMM1.i1010 to i8*
  %3348 = bitcast %union.vec128_t* %XMM0.i1011 to i8*
  %3349 = load i64, i64* %PC.i1009
  %3350 = add i64 %3349, 4
  store i64 %3350, i64* %PC.i1009
  %3351 = bitcast i8* %3347 to double*
  %3352 = load double, double* %3351, align 1
  %3353 = getelementptr inbounds i8, i8* %3347, i64 8
  %3354 = bitcast i8* %3353 to i64*
  %3355 = load i64, i64* %3354, align 1
  %3356 = bitcast i8* %3348 to double*
  %3357 = load double, double* %3356, align 1
  %3358 = fsub double %3352, %3357
  %3359 = bitcast i8* %3346 to double*
  store double %3358, double* %3359, align 1
  %3360 = getelementptr inbounds i8, i8* %3346, i64 8
  %3361 = bitcast i8* %3360 to i64*
  store i64 %3355, i64* %3361, align 1
  store %struct.Memory* %loadMem_47d199, %struct.Memory** %MEMORY
  %loadMem_47d19d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3363 = getelementptr inbounds %struct.GPR, %struct.GPR* %3362, i32 0, i32 33
  %3364 = getelementptr inbounds %struct.Reg, %struct.Reg* %3363, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %3364 to i64*
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3366 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3365, i64 0, i64 1
  %XMM1.i1008 = bitcast %union.VectorReg* %3366 to %union.vec128_t*
  %3367 = bitcast %union.vec128_t* %XMM1.i1008 to i8*
  %3368 = load i64, i64* %PC.i1007
  %3369 = add i64 %3368, 9
  store i64 %3369, i64* %PC.i1007
  %3370 = bitcast i8* %3367 to double*
  %3371 = load double, double* %3370, align 1
  store double %3371, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47d19d, %struct.Memory** %MEMORY
  %loadMem_47d1a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3373 = getelementptr inbounds %struct.GPR, %struct.GPR* %3372, i32 0, i32 33
  %3374 = getelementptr inbounds %struct.Reg, %struct.Reg* %3373, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %3374 to i64*
  %3375 = load i64, i64* %PC.i1006
  %3376 = add i64 %3375, 62
  %3377 = load i64, i64* %PC.i1006
  %3378 = add i64 %3377, 5
  store i64 %3378, i64* %PC.i1006
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3376, i64* %3379, align 8
  store %struct.Memory* %loadMem_47d1a6, %struct.Memory** %MEMORY
  br label %block_.L_47d1e4

block_.L_47d1ab:                                  ; preds = %block_47d138
  %loadMem_47d1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 33
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %PC.i1004 = bitcast %union.anon* %3382 to i64*
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3384 = getelementptr inbounds %struct.GPR, %struct.GPR* %3383, i32 0, i32 1
  %3385 = getelementptr inbounds %struct.Reg, %struct.Reg* %3384, i32 0, i32 0
  %RAX.i1005 = bitcast %union.anon* %3385 to i64*
  %3386 = load i64, i64* %PC.i1004
  %3387 = add i64 %3386, 8
  store i64 %3387, i64* %PC.i1004
  %3388 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3388, i64* %RAX.i1005, align 8
  store %struct.Memory* %loadMem_47d1ab, %struct.Memory** %MEMORY
  %loadMem_47d1b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3390 = getelementptr inbounds %struct.GPR, %struct.GPR* %3389, i32 0, i32 33
  %3391 = getelementptr inbounds %struct.Reg, %struct.Reg* %3390, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %3391 to i64*
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3393 = getelementptr inbounds %struct.GPR, %struct.GPR* %3392, i32 0, i32 1
  %3394 = getelementptr inbounds %struct.Reg, %struct.Reg* %3393, i32 0, i32 0
  %RAX.i1003 = bitcast %union.anon* %3394 to i64*
  %3395 = load i64, i64* %RAX.i1003
  %3396 = add i64 %3395, 72576
  %3397 = load i64, i64* %PC.i1002
  %3398 = add i64 %3397, 7
  store i64 %3398, i64* %PC.i1002
  %3399 = inttoptr i64 %3396 to i32*
  %3400 = load i32, i32* %3399
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3401, align 1
  %3402 = and i32 %3400, 255
  %3403 = call i32 @llvm.ctpop.i32(i32 %3402)
  %3404 = trunc i32 %3403 to i8
  %3405 = and i8 %3404, 1
  %3406 = xor i8 %3405, 1
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3406, i8* %3407, align 1
  %3408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3408, align 1
  %3409 = icmp eq i32 %3400, 0
  %3410 = zext i1 %3409 to i8
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3410, i8* %3411, align 1
  %3412 = lshr i32 %3400, 31
  %3413 = trunc i32 %3412 to i8
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3413, i8* %3414, align 1
  %3415 = lshr i32 %3400, 31
  %3416 = xor i32 %3412, %3415
  %3417 = add i32 %3416, %3415
  %3418 = icmp eq i32 %3417, 2
  %3419 = zext i1 %3418 to i8
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3419, i8* %3420, align 1
  store %struct.Memory* %loadMem_47d1b3, %struct.Memory** %MEMORY
  %loadMem_47d1ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3422 = getelementptr inbounds %struct.GPR, %struct.GPR* %3421, i32 0, i32 33
  %3423 = getelementptr inbounds %struct.Reg, %struct.Reg* %3422, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %3423 to i64*
  %3424 = load i64, i64* %PC.i1001
  %3425 = add i64 %3424, 37
  %3426 = load i64, i64* %PC.i1001
  %3427 = add i64 %3426, 6
  %3428 = load i64, i64* %PC.i1001
  %3429 = add i64 %3428, 6
  store i64 %3429, i64* %PC.i1001
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3431 = load i8, i8* %3430, align 1
  %3432 = icmp ne i8 %3431, 0
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3434 = load i8, i8* %3433, align 1
  %3435 = icmp ne i8 %3434, 0
  %3436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3437 = load i8, i8* %3436, align 1
  %3438 = icmp ne i8 %3437, 0
  %3439 = xor i1 %3435, %3438
  %3440 = or i1 %3432, %3439
  %3441 = zext i1 %3440 to i8
  store i8 %3441, i8* %BRANCH_TAKEN, align 1
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3443 = select i1 %3440, i64 %3425, i64 %3427
  store i64 %3443, i64* %3442, align 8
  store %struct.Memory* %loadMem_47d1ba, %struct.Memory** %MEMORY
  %loadBr_47d1ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d1ba = icmp eq i8 %loadBr_47d1ba, 1
  br i1 %cmpBr_47d1ba, label %block_.L_47d1df, label %block_47d1c0

block_47d1c0:                                     ; preds = %block_.L_47d1ab
  %loadMem_47d1c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3445 = getelementptr inbounds %struct.GPR, %struct.GPR* %3444, i32 0, i32 33
  %3446 = getelementptr inbounds %struct.Reg, %struct.Reg* %3445, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %3446 to i64*
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3448 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3447, i64 0, i64 0
  %YMM0.i1000 = bitcast %union.VectorReg* %3448 to %"class.std::bitset"*
  %3449 = bitcast %"class.std::bitset"* %YMM0.i1000 to i8*
  %3450 = load i64, i64* %PC.i999
  %3451 = add i64 %3450, 9
  store i64 %3451, i64* %PC.i999
  %3452 = load double, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  %3453 = bitcast i8* %3449 to double*
  store double %3452, double* %3453, align 1
  %3454 = getelementptr inbounds i8, i8* %3449, i64 8
  %3455 = bitcast i8* %3454 to double*
  store double 0.000000e+00, double* %3455, align 1
  store %struct.Memory* %loadMem_47d1c0, %struct.Memory** %MEMORY
  %loadMem_47d1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3457 = getelementptr inbounds %struct.GPR, %struct.GPR* %3456, i32 0, i32 33
  %3458 = getelementptr inbounds %struct.Reg, %struct.Reg* %3457, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %3458 to i64*
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3460 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3459, i64 0, i64 1
  %YMM1.i998 = bitcast %union.VectorReg* %3460 to %"class.std::bitset"*
  %3461 = bitcast %"class.std::bitset"* %YMM1.i998 to i8*
  %3462 = load i64, i64* %PC.i997
  %3463 = add i64 %3462, 9
  store i64 %3463, i64* %PC.i997
  %3464 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %3465 = bitcast i8* %3461 to double*
  store double %3464, double* %3465, align 1
  %3466 = getelementptr inbounds i8, i8* %3461, i64 8
  %3467 = bitcast i8* %3466 to double*
  store double 0.000000e+00, double* %3467, align 1
  store %struct.Memory* %loadMem_47d1c9, %struct.Memory** %MEMORY
  %loadMem_47d1d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3469 = getelementptr inbounds %struct.GPR, %struct.GPR* %3468, i32 0, i32 33
  %3470 = getelementptr inbounds %struct.Reg, %struct.Reg* %3469, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %3470 to i64*
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3472 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3471, i64 0, i64 1
  %YMM1.i995 = bitcast %union.VectorReg* %3472 to %"class.std::bitset"*
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3474 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3473, i64 0, i64 0
  %XMM0.i996 = bitcast %union.VectorReg* %3474 to %union.vec128_t*
  %3475 = bitcast %"class.std::bitset"* %YMM1.i995 to i8*
  %3476 = bitcast %"class.std::bitset"* %YMM1.i995 to i8*
  %3477 = bitcast %union.vec128_t* %XMM0.i996 to i8*
  %3478 = load i64, i64* %PC.i994
  %3479 = add i64 %3478, 4
  store i64 %3479, i64* %PC.i994
  %3480 = bitcast i8* %3476 to double*
  %3481 = load double, double* %3480, align 1
  %3482 = getelementptr inbounds i8, i8* %3476, i64 8
  %3483 = bitcast i8* %3482 to i64*
  %3484 = load i64, i64* %3483, align 1
  %3485 = bitcast i8* %3477 to double*
  %3486 = load double, double* %3485, align 1
  %3487 = fsub double %3481, %3486
  %3488 = bitcast i8* %3475 to double*
  store double %3487, double* %3488, align 1
  %3489 = getelementptr inbounds i8, i8* %3475, i64 8
  %3490 = bitcast i8* %3489 to i64*
  store i64 %3484, i64* %3490, align 1
  store %struct.Memory* %loadMem_47d1d2, %struct.Memory** %MEMORY
  %loadMem_47d1d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3492 = getelementptr inbounds %struct.GPR, %struct.GPR* %3491, i32 0, i32 33
  %3493 = getelementptr inbounds %struct.Reg, %struct.Reg* %3492, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %3493 to i64*
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3495 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3494, i64 0, i64 1
  %XMM1.i993 = bitcast %union.VectorReg* %3495 to %union.vec128_t*
  %3496 = bitcast %union.vec128_t* %XMM1.i993 to i8*
  %3497 = load i64, i64* %PC.i992
  %3498 = add i64 %3497, 9
  store i64 %3498, i64* %PC.i992
  %3499 = bitcast i8* %3496 to double*
  %3500 = load double, double* %3499, align 1
  store double %3500, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47d1d6, %struct.Memory** %MEMORY
  br label %block_.L_47d1df

block_.L_47d1df:                                  ; preds = %block_47d1c0, %block_.L_47d1ab
  %loadMem_47d1df = load %struct.Memory*, %struct.Memory** %MEMORY
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3502 = getelementptr inbounds %struct.GPR, %struct.GPR* %3501, i32 0, i32 33
  %3503 = getelementptr inbounds %struct.Reg, %struct.Reg* %3502, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %3503 to i64*
  %3504 = load i64, i64* %PC.i991
  %3505 = add i64 %3504, 5
  %3506 = load i64, i64* %PC.i991
  %3507 = add i64 %3506, 5
  store i64 %3507, i64* %PC.i991
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3505, i64* %3508, align 8
  store %struct.Memory* %loadMem_47d1df, %struct.Memory** %MEMORY
  br label %block_.L_47d1e4

block_.L_47d1e4:                                  ; preds = %block_.L_47d1df, %block_47d14d
  %loadMem_47d1e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3510 = getelementptr inbounds %struct.GPR, %struct.GPR* %3509, i32 0, i32 33
  %3511 = getelementptr inbounds %struct.Reg, %struct.Reg* %3510, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %3511 to i64*
  %3512 = load i64, i64* %PC.i990
  %3513 = add i64 %3512, 5
  %3514 = load i64, i64* %PC.i990
  %3515 = add i64 %3514, 5
  store i64 %3515, i64* %PC.i990
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3513, i64* %3516, align 8
  store %struct.Memory* %loadMem_47d1e4, %struct.Memory** %MEMORY
  br label %block_.L_47d1e9

block_.L_47d1e9:                                  ; preds = %block_.L_47d1e4, %block_.L_47d123
  %loadMem_47d1e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3518 = getelementptr inbounds %struct.GPR, %struct.GPR* %3517, i32 0, i32 33
  %3519 = getelementptr inbounds %struct.Reg, %struct.Reg* %3518, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %3519 to i64*
  %3520 = load i64, i64* %PC.i989
  %3521 = add i64 %3520, 5
  %3522 = load i64, i64* %PC.i989
  %3523 = add i64 %3522, 5
  store i64 %3523, i64* %PC.i989
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3521, i64* %3524, align 8
  store %struct.Memory* %loadMem_47d1e9, %struct.Memory** %MEMORY
  br label %block_.L_47d1ee

block_.L_47d1ee:                                  ; preds = %block_.L_47d1e9, %block_.L_47d11e
  %loadMem_47d1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3526 = getelementptr inbounds %struct.GPR, %struct.GPR* %3525, i32 0, i32 33
  %3527 = getelementptr inbounds %struct.Reg, %struct.Reg* %3526, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %3527 to i64*
  %3528 = load i64, i64* %PC.i988
  %3529 = add i64 %3528, 5
  %3530 = load i64, i64* %PC.i988
  %3531 = add i64 %3530, 5
  store i64 %3531, i64* %PC.i988
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3529, i64* %3532, align 8
  store %struct.Memory* %loadMem_47d1ee, %struct.Memory** %MEMORY
  br label %block_.L_47d1f3

block_.L_47d1f3:                                  ; preds = %block_.L_47d1ee, %block_.L_47cf62
  %loadMem_47d1f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 33
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 1
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %RAX.i987 = bitcast %union.anon* %3538 to i64*
  %3539 = load i64, i64* %PC.i986
  %3540 = add i64 %3539, 8
  store i64 %3540, i64* %PC.i986
  %3541 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3541, i64* %RAX.i987, align 8
  store %struct.Memory* %loadMem_47d1f3, %struct.Memory** %MEMORY
  %loadMem_47d1fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3543 = getelementptr inbounds %struct.GPR, %struct.GPR* %3542, i32 0, i32 33
  %3544 = getelementptr inbounds %struct.Reg, %struct.Reg* %3543, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %3544 to i64*
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3546 = getelementptr inbounds %struct.GPR, %struct.GPR* %3545, i32 0, i32 1
  %3547 = getelementptr inbounds %struct.Reg, %struct.Reg* %3546, i32 0, i32 0
  %RAX.i985 = bitcast %union.anon* %3547 to i64*
  %3548 = load i64, i64* %RAX.i985
  %3549 = add i64 %3548, 72564
  %3550 = load i64, i64* %PC.i984
  %3551 = add i64 %3550, 7
  store i64 %3551, i64* %PC.i984
  %3552 = inttoptr i64 %3549 to i32*
  %3553 = load i32, i32* %3552
  %3554 = sub i32 %3553, 1
  %3555 = icmp ult i32 %3553, 1
  %3556 = zext i1 %3555 to i8
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3556, i8* %3557, align 1
  %3558 = and i32 %3554, 255
  %3559 = call i32 @llvm.ctpop.i32(i32 %3558)
  %3560 = trunc i32 %3559 to i8
  %3561 = and i8 %3560, 1
  %3562 = xor i8 %3561, 1
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3562, i8* %3563, align 1
  %3564 = xor i32 %3553, 1
  %3565 = xor i32 %3564, %3554
  %3566 = lshr i32 %3565, 4
  %3567 = trunc i32 %3566 to i8
  %3568 = and i8 %3567, 1
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3568, i8* %3569, align 1
  %3570 = icmp eq i32 %3554, 0
  %3571 = zext i1 %3570 to i8
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3571, i8* %3572, align 1
  %3573 = lshr i32 %3554, 31
  %3574 = trunc i32 %3573 to i8
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3574, i8* %3575, align 1
  %3576 = lshr i32 %3553, 31
  %3577 = xor i32 %3573, %3576
  %3578 = add i32 %3577, %3576
  %3579 = icmp eq i32 %3578, 2
  %3580 = zext i1 %3579 to i8
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3580, i8* %3581, align 1
  store %struct.Memory* %loadMem_47d1fb, %struct.Memory** %MEMORY
  %loadMem_47d202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3583 = getelementptr inbounds %struct.GPR, %struct.GPR* %3582, i32 0, i32 33
  %3584 = getelementptr inbounds %struct.Reg, %struct.Reg* %3583, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %3584 to i64*
  %3585 = load i64, i64* %PC.i983
  %3586 = add i64 %3585, 24
  %3587 = load i64, i64* %PC.i983
  %3588 = add i64 %3587, 6
  %3589 = load i64, i64* %PC.i983
  %3590 = add i64 %3589, 6
  store i64 %3590, i64* %PC.i983
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3592 = load i8, i8* %3591, align 1
  %3593 = icmp eq i8 %3592, 0
  %3594 = zext i1 %3593 to i8
  store i8 %3594, i8* %BRANCH_TAKEN, align 1
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3596 = select i1 %3593, i64 %3586, i64 %3588
  store i64 %3596, i64* %3595, align 8
  store %struct.Memory* %loadMem_47d202, %struct.Memory** %MEMORY
  %loadBr_47d202 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d202 = icmp eq i8 %loadBr_47d202, 1
  br i1 %cmpBr_47d202, label %block_.L_47d21a, label %block_47d208

block_47d208:                                     ; preds = %block_.L_47d1f3
  %loadMem_47d208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 33
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %3599 to i64*
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3601 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3600, i64 0, i64 0
  %YMM0.i982 = bitcast %union.VectorReg* %3601 to %"class.std::bitset"*
  %3602 = bitcast %"class.std::bitset"* %YMM0.i982 to i8*
  %3603 = load i64, i64* %PC.i981
  %3604 = add i64 %3603, 9
  store i64 %3604, i64* %PC.i981
  %3605 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %3606 = bitcast i8* %3602 to double*
  store double %3605, double* %3606, align 1
  %3607 = getelementptr inbounds i8, i8* %3602, i64 8
  %3608 = bitcast i8* %3607 to double*
  store double 0.000000e+00, double* %3608, align 1
  store %struct.Memory* %loadMem_47d208, %struct.Memory** %MEMORY
  %loadMem_47d211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3610 = getelementptr inbounds %struct.GPR, %struct.GPR* %3609, i32 0, i32 33
  %3611 = getelementptr inbounds %struct.Reg, %struct.Reg* %3610, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %3611 to i64*
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3613 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3612, i64 0, i64 0
  %XMM0.i980 = bitcast %union.VectorReg* %3613 to %union.vec128_t*
  %3614 = bitcast %union.vec128_t* %XMM0.i980 to i8*
  %3615 = load i64, i64* %PC.i979
  %3616 = add i64 %3615, 9
  store i64 %3616, i64* %PC.i979
  %3617 = bitcast i8* %3614 to double*
  %3618 = load double, double* %3617, align 1
  store double %3618, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  store %struct.Memory* %loadMem_47d211, %struct.Memory** %MEMORY
  br label %block_.L_47d21a

block_.L_47d21a:                                  ; preds = %block_47d208, %block_.L_47d1f3
  %loadMem_47d21a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3620 = getelementptr inbounds %struct.GPR, %struct.GPR* %3619, i32 0, i32 33
  %3621 = getelementptr inbounds %struct.Reg, %struct.Reg* %3620, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %3621 to i64*
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3623 = getelementptr inbounds %struct.GPR, %struct.GPR* %3622, i32 0, i32 1
  %3624 = getelementptr inbounds %struct.Reg, %struct.Reg* %3623, i32 0, i32 0
  %RAX.i978 = bitcast %union.anon* %3624 to i64*
  %3625 = load i64, i64* %PC.i977
  %3626 = add i64 %3625, 8
  store i64 %3626, i64* %PC.i977
  %3627 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3627, i64* %RAX.i978, align 8
  store %struct.Memory* %loadMem_47d21a, %struct.Memory** %MEMORY
  %loadMem_47d222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3629 = getelementptr inbounds %struct.GPR, %struct.GPR* %3628, i32 0, i32 33
  %3630 = getelementptr inbounds %struct.Reg, %struct.Reg* %3629, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %3630 to i64*
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3632 = getelementptr inbounds %struct.GPR, %struct.GPR* %3631, i32 0, i32 1
  %3633 = getelementptr inbounds %struct.Reg, %struct.Reg* %3632, i32 0, i32 0
  %RAX.i976 = bitcast %union.anon* %3633 to i64*
  %3634 = load i64, i64* %RAX.i976
  %3635 = add i64 %3634, 72564
  %3636 = load i64, i64* %PC.i975
  %3637 = add i64 %3636, 7
  store i64 %3637, i64* %PC.i975
  %3638 = inttoptr i64 %3635 to i32*
  %3639 = load i32, i32* %3638
  %3640 = sub i32 %3639, 8
  %3641 = icmp ult i32 %3639, 8
  %3642 = zext i1 %3641 to i8
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3642, i8* %3643, align 1
  %3644 = and i32 %3640, 255
  %3645 = call i32 @llvm.ctpop.i32(i32 %3644)
  %3646 = trunc i32 %3645 to i8
  %3647 = and i8 %3646, 1
  %3648 = xor i8 %3647, 1
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3648, i8* %3649, align 1
  %3650 = xor i32 %3639, 8
  %3651 = xor i32 %3650, %3640
  %3652 = lshr i32 %3651, 4
  %3653 = trunc i32 %3652 to i8
  %3654 = and i8 %3653, 1
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3654, i8* %3655, align 1
  %3656 = icmp eq i32 %3640, 0
  %3657 = zext i1 %3656 to i8
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3657, i8* %3658, align 1
  %3659 = lshr i32 %3640, 31
  %3660 = trunc i32 %3659 to i8
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3660, i8* %3661, align 1
  %3662 = lshr i32 %3639, 31
  %3663 = xor i32 %3659, %3662
  %3664 = add i32 %3663, %3662
  %3665 = icmp eq i32 %3664, 2
  %3666 = zext i1 %3665 to i8
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3666, i8* %3667, align 1
  store %struct.Memory* %loadMem_47d222, %struct.Memory** %MEMORY
  %loadMem_47d229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3669 = getelementptr inbounds %struct.GPR, %struct.GPR* %3668, i32 0, i32 33
  %3670 = getelementptr inbounds %struct.Reg, %struct.Reg* %3669, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %3670 to i64*
  %3671 = load i64, i64* %PC.i974
  %3672 = add i64 %3671, 128
  %3673 = load i64, i64* %PC.i974
  %3674 = add i64 %3673, 6
  %3675 = load i64, i64* %PC.i974
  %3676 = add i64 %3675, 6
  store i64 %3676, i64* %PC.i974
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3678 = load i8, i8* %3677, align 1
  %3679 = icmp ne i8 %3678, 0
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3681 = load i8, i8* %3680, align 1
  %3682 = icmp ne i8 %3681, 0
  %3683 = xor i1 %3679, %3682
  %3684 = xor i1 %3683, true
  %3685 = zext i1 %3684 to i8
  store i8 %3685, i8* %BRANCH_TAKEN, align 1
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3687 = select i1 %3683, i64 %3674, i64 %3672
  store i64 %3687, i64* %3686, align 8
  store %struct.Memory* %loadMem_47d229, %struct.Memory** %MEMORY
  %loadBr_47d229 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d229 = icmp eq i8 %loadBr_47d229, 1
  br i1 %cmpBr_47d229, label %block_.L_47d2a9, label %block_47d22f

block_47d22f:                                     ; preds = %block_.L_47d21a
  %loadMem_47d22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 33
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %3690 to i64*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 1
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %RAX.i973 = bitcast %union.anon* %3693 to i64*
  %3694 = load i64, i64* %PC.i972
  %3695 = add i64 %3694, 8
  store i64 %3695, i64* %PC.i972
  %3696 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3696, i64* %RAX.i973, align 8
  store %struct.Memory* %loadMem_47d22f, %struct.Memory** %MEMORY
  %loadMem_47d237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3698 = getelementptr inbounds %struct.GPR, %struct.GPR* %3697, i32 0, i32 33
  %3699 = getelementptr inbounds %struct.Reg, %struct.Reg* %3698, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %3699 to i64*
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3701 = getelementptr inbounds %struct.GPR, %struct.GPR* %3700, i32 0, i32 1
  %3702 = getelementptr inbounds %struct.Reg, %struct.Reg* %3701, i32 0, i32 0
  %RAX.i971 = bitcast %union.anon* %3702 to i64*
  %3703 = load i64, i64* %RAX.i971
  %3704 = add i64 %3703, 72564
  %3705 = load i64, i64* %PC.i970
  %3706 = add i64 %3705, 7
  store i64 %3706, i64* %PC.i970
  %3707 = inttoptr i64 %3704 to i32*
  %3708 = load i32, i32* %3707
  %3709 = sub i32 %3708, 1
  %3710 = icmp ult i32 %3708, 1
  %3711 = zext i1 %3710 to i8
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3711, i8* %3712, align 1
  %3713 = and i32 %3709, 255
  %3714 = call i32 @llvm.ctpop.i32(i32 %3713)
  %3715 = trunc i32 %3714 to i8
  %3716 = and i8 %3715, 1
  %3717 = xor i8 %3716, 1
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3717, i8* %3718, align 1
  %3719 = xor i32 %3708, 1
  %3720 = xor i32 %3719, %3709
  %3721 = lshr i32 %3720, 4
  %3722 = trunc i32 %3721 to i8
  %3723 = and i8 %3722, 1
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3723, i8* %3724, align 1
  %3725 = icmp eq i32 %3709, 0
  %3726 = zext i1 %3725 to i8
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3726, i8* %3727, align 1
  %3728 = lshr i32 %3709, 31
  %3729 = trunc i32 %3728 to i8
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3729, i8* %3730, align 1
  %3731 = lshr i32 %3708, 31
  %3732 = xor i32 %3728, %3731
  %3733 = add i32 %3732, %3731
  %3734 = icmp eq i32 %3733, 2
  %3735 = zext i1 %3734 to i8
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3735, i8* %3736, align 1
  store %struct.Memory* %loadMem_47d237, %struct.Memory** %MEMORY
  %loadMem_47d23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3738 = getelementptr inbounds %struct.GPR, %struct.GPR* %3737, i32 0, i32 33
  %3739 = getelementptr inbounds %struct.Reg, %struct.Reg* %3738, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %3739 to i64*
  %3740 = load i64, i64* %PC.i969
  %3741 = add i64 %3740, 107
  %3742 = load i64, i64* %PC.i969
  %3743 = add i64 %3742, 6
  %3744 = load i64, i64* %PC.i969
  %3745 = add i64 %3744, 6
  store i64 %3745, i64* %PC.i969
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3747 = load i8, i8* %3746, align 1
  %3748 = icmp ne i8 %3747, 0
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3750 = load i8, i8* %3749, align 1
  %3751 = icmp ne i8 %3750, 0
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3753 = load i8, i8* %3752, align 1
  %3754 = icmp ne i8 %3753, 0
  %3755 = xor i1 %3751, %3754
  %3756 = or i1 %3748, %3755
  %3757 = zext i1 %3756 to i8
  store i8 %3757, i8* %BRANCH_TAKEN, align 1
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3759 = select i1 %3756, i64 %3741, i64 %3743
  store i64 %3759, i64* %3758, align 8
  store %struct.Memory* %loadMem_47d23e, %struct.Memory** %MEMORY
  %loadBr_47d23e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d23e = icmp eq i8 %loadBr_47d23e, 1
  br i1 %cmpBr_47d23e, label %block_.L_47d2a9, label %block_47d244

block_47d244:                                     ; preds = %block_47d22f
  %loadMem_47d244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 33
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %3762 to i64*
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3764 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3763, i64 0, i64 0
  %YMM0.i968 = bitcast %union.VectorReg* %3764 to %"class.std::bitset"*
  %3765 = bitcast %"class.std::bitset"* %YMM0.i968 to i8*
  %3766 = load i64, i64* %PC.i967
  %3767 = add i64 %3766, 9
  store i64 %3767, i64* %PC.i967
  %3768 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %3769 = bitcast i8* %3765 to double*
  store double %3768, double* %3769, align 1
  %3770 = getelementptr inbounds i8, i8* %3765, i64 8
  %3771 = bitcast i8* %3770 to double*
  store double 0.000000e+00, double* %3771, align 1
  store %struct.Memory* %loadMem_47d244, %struct.Memory** %MEMORY
  %loadMem_47d24d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3773 = getelementptr inbounds %struct.GPR, %struct.GPR* %3772, i32 0, i32 33
  %3774 = getelementptr inbounds %struct.Reg, %struct.Reg* %3773, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %3774 to i64*
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3776 = getelementptr inbounds %struct.GPR, %struct.GPR* %3775, i32 0, i32 1
  %3777 = getelementptr inbounds %struct.Reg, %struct.Reg* %3776, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %3777 to i64*
  %3778 = load i64, i64* %PC.i965
  %3779 = add i64 %3778, 8
  store i64 %3779, i64* %PC.i965
  %3780 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3780, i64* %RAX.i966, align 8
  store %struct.Memory* %loadMem_47d24d, %struct.Memory** %MEMORY
  %loadMem_47d255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 33
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 1
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RAX.i963 = bitcast %union.anon* %3786 to i64*
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3788 = getelementptr inbounds %struct.GPR, %struct.GPR* %3787, i32 0, i32 5
  %3789 = getelementptr inbounds %struct.Reg, %struct.Reg* %3788, i32 0, i32 0
  %RCX.i964 = bitcast %union.anon* %3789 to i64*
  %3790 = load i64, i64* %RAX.i963
  %3791 = add i64 %3790, 72564
  %3792 = load i64, i64* %PC.i962
  %3793 = add i64 %3792, 6
  store i64 %3793, i64* %PC.i962
  %3794 = inttoptr i64 %3791 to i32*
  %3795 = load i32, i32* %3794
  %3796 = zext i32 %3795 to i64
  store i64 %3796, i64* %RCX.i964, align 8
  store %struct.Memory* %loadMem_47d255, %struct.Memory** %MEMORY
  %loadMem_47d25b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 33
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %3799 to i64*
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 5
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %RCX.i961 = bitcast %union.anon* %3802 to i64*
  %3803 = load i64, i64* %RCX.i961
  %3804 = load i64, i64* %PC.i960
  %3805 = add i64 %3804, 3
  store i64 %3805, i64* %PC.i960
  %3806 = trunc i64 %3803 to i32
  %3807 = sub i32 %3806, 1
  %3808 = zext i32 %3807 to i64
  store i64 %3808, i64* %RCX.i961, align 8
  %3809 = icmp ult i32 %3806, 1
  %3810 = zext i1 %3809 to i8
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3810, i8* %3811, align 1
  %3812 = and i32 %3807, 255
  %3813 = call i32 @llvm.ctpop.i32(i32 %3812)
  %3814 = trunc i32 %3813 to i8
  %3815 = and i8 %3814, 1
  %3816 = xor i8 %3815, 1
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3816, i8* %3817, align 1
  %3818 = xor i64 1, %3803
  %3819 = trunc i64 %3818 to i32
  %3820 = xor i32 %3819, %3807
  %3821 = lshr i32 %3820, 4
  %3822 = trunc i32 %3821 to i8
  %3823 = and i8 %3822, 1
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3823, i8* %3824, align 1
  %3825 = icmp eq i32 %3807, 0
  %3826 = zext i1 %3825 to i8
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3826, i8* %3827, align 1
  %3828 = lshr i32 %3807, 31
  %3829 = trunc i32 %3828 to i8
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3829, i8* %3830, align 1
  %3831 = lshr i32 %3806, 31
  %3832 = xor i32 %3828, %3831
  %3833 = add i32 %3832, %3831
  %3834 = icmp eq i32 %3833, 2
  %3835 = zext i1 %3834 to i8
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3835, i8* %3836, align 1
  store %struct.Memory* %loadMem_47d25b, %struct.Memory** %MEMORY
  %loadMem_47d25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3838 = getelementptr inbounds %struct.GPR, %struct.GPR* %3837, i32 0, i32 33
  %3839 = getelementptr inbounds %struct.Reg, %struct.Reg* %3838, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %3839 to i64*
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3841 = getelementptr inbounds %struct.GPR, %struct.GPR* %3840, i32 0, i32 5
  %3842 = getelementptr inbounds %struct.Reg, %struct.Reg* %3841, i32 0, i32 0
  %ECX.i958 = bitcast %union.anon* %3842 to i32*
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3844 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3843, i64 0, i64 1
  %YMM1.i959 = bitcast %union.VectorReg* %3844 to %"class.std::bitset"*
  %3845 = bitcast %"class.std::bitset"* %YMM1.i959 to i8*
  %3846 = load i32, i32* %ECX.i958
  %3847 = zext i32 %3846 to i64
  %3848 = load i64, i64* %PC.i957
  %3849 = add i64 %3848, 4
  store i64 %3849, i64* %PC.i957
  %3850 = sitofp i32 %3846 to double
  %3851 = bitcast i8* %3845 to double*
  store double %3850, double* %3851, align 1
  store %struct.Memory* %loadMem_47d25e, %struct.Memory** %MEMORY
  %loadMem_47d262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3853 = getelementptr inbounds %struct.GPR, %struct.GPR* %3852, i32 0, i32 33
  %3854 = getelementptr inbounds %struct.Reg, %struct.Reg* %3853, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %3854 to i64*
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3856 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3855, i64 0, i64 0
  %YMM0.i955 = bitcast %union.VectorReg* %3856 to %"class.std::bitset"*
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3858 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3857, i64 0, i64 1
  %XMM1.i956 = bitcast %union.VectorReg* %3858 to %union.vec128_t*
  %3859 = bitcast %"class.std::bitset"* %YMM0.i955 to i8*
  %3860 = bitcast %"class.std::bitset"* %YMM0.i955 to i8*
  %3861 = bitcast %union.vec128_t* %XMM1.i956 to i8*
  %3862 = load i64, i64* %PC.i954
  %3863 = add i64 %3862, 4
  store i64 %3863, i64* %PC.i954
  %3864 = bitcast i8* %3860 to double*
  %3865 = load double, double* %3864, align 1
  %3866 = getelementptr inbounds i8, i8* %3860, i64 8
  %3867 = bitcast i8* %3866 to i64*
  %3868 = load i64, i64* %3867, align 1
  %3869 = bitcast i8* %3861 to double*
  %3870 = load double, double* %3869, align 1
  %3871 = fmul double %3865, %3870
  %3872 = bitcast i8* %3859 to double*
  store double %3871, double* %3872, align 1
  %3873 = getelementptr inbounds i8, i8* %3859, i64 8
  %3874 = bitcast i8* %3873 to i64*
  store i64 %3868, i64* %3874, align 1
  store %struct.Memory* %loadMem_47d262, %struct.Memory** %MEMORY
  %loadMem_47d266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3876 = getelementptr inbounds %struct.GPR, %struct.GPR* %3875, i32 0, i32 33
  %3877 = getelementptr inbounds %struct.Reg, %struct.Reg* %3876, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %3877 to i64*
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3879 = getelementptr inbounds %struct.GPR, %struct.GPR* %3878, i32 0, i32 1
  %3880 = getelementptr inbounds %struct.Reg, %struct.Reg* %3879, i32 0, i32 0
  %RAX.i953 = bitcast %union.anon* %3880 to i64*
  %3881 = load i64, i64* %PC.i952
  %3882 = add i64 %3881, 8
  store i64 %3882, i64* %PC.i952
  %3883 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3883, i64* %RAX.i953, align 8
  store %struct.Memory* %loadMem_47d266, %struct.Memory** %MEMORY
  %loadMem_47d26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3885 = getelementptr inbounds %struct.GPR, %struct.GPR* %3884, i32 0, i32 33
  %3886 = getelementptr inbounds %struct.Reg, %struct.Reg* %3885, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %3886 to i64*
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3888 = getelementptr inbounds %struct.GPR, %struct.GPR* %3887, i32 0, i32 1
  %3889 = getelementptr inbounds %struct.Reg, %struct.Reg* %3888, i32 0, i32 0
  %RAX.i950 = bitcast %union.anon* %3889 to i64*
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3891 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3890, i64 0, i64 1
  %YMM1.i951 = bitcast %union.VectorReg* %3891 to %"class.std::bitset"*
  %3892 = bitcast %"class.std::bitset"* %YMM1.i951 to i8*
  %3893 = load i64, i64* %RAX.i950
  %3894 = add i64 %3893, 72564
  %3895 = load i64, i64* %PC.i949
  %3896 = add i64 %3895, 8
  store i64 %3896, i64* %PC.i949
  %3897 = inttoptr i64 %3894 to i32*
  %3898 = load i32, i32* %3897
  %3899 = sitofp i32 %3898 to double
  %3900 = bitcast i8* %3892 to double*
  store double %3899, double* %3900, align 1
  store %struct.Memory* %loadMem_47d26e, %struct.Memory** %MEMORY
  %loadMem_47d276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3902 = getelementptr inbounds %struct.GPR, %struct.GPR* %3901, i32 0, i32 33
  %3903 = getelementptr inbounds %struct.Reg, %struct.Reg* %3902, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %3903 to i64*
  %3904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3904, i64 0, i64 0
  %YMM0.i947 = bitcast %union.VectorReg* %3905 to %"class.std::bitset"*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3907 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3906, i64 0, i64 1
  %XMM1.i948 = bitcast %union.VectorReg* %3907 to %union.vec128_t*
  %3908 = bitcast %"class.std::bitset"* %YMM0.i947 to i8*
  %3909 = bitcast %"class.std::bitset"* %YMM0.i947 to i8*
  %3910 = bitcast %union.vec128_t* %XMM1.i948 to i8*
  %3911 = load i64, i64* %PC.i946
  %3912 = add i64 %3911, 4
  store i64 %3912, i64* %PC.i946
  %3913 = bitcast i8* %3909 to double*
  %3914 = load double, double* %3913, align 1
  %3915 = getelementptr inbounds i8, i8* %3909, i64 8
  %3916 = bitcast i8* %3915 to i64*
  %3917 = load i64, i64* %3916, align 1
  %3918 = bitcast i8* %3910 to double*
  %3919 = load double, double* %3918, align 1
  %3920 = fdiv double %3914, %3919
  %3921 = bitcast i8* %3908 to double*
  store double %3920, double* %3921, align 1
  %3922 = getelementptr inbounds i8, i8* %3908, i64 8
  %3923 = bitcast i8* %3922 to i64*
  store i64 %3917, i64* %3923, align 1
  store %struct.Memory* %loadMem_47d276, %struct.Memory** %MEMORY
  %loadMem_47d27a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3925 = getelementptr inbounds %struct.GPR, %struct.GPR* %3924, i32 0, i32 33
  %3926 = getelementptr inbounds %struct.Reg, %struct.Reg* %3925, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %3926 to i64*
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3928 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3927, i64 0, i64 1
  %YMM1.i945 = bitcast %union.VectorReg* %3928 to %"class.std::bitset"*
  %3929 = bitcast %"class.std::bitset"* %YMM1.i945 to i8*
  %3930 = load i64, i64* %PC.i944
  %3931 = add i64 %3930, 9
  store i64 %3931, i64* %PC.i944
  %3932 = load double, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  %3933 = bitcast i8* %3929 to double*
  store double %3932, double* %3933, align 1
  %3934 = getelementptr inbounds i8, i8* %3929, i64 8
  %3935 = bitcast i8* %3934 to double*
  store double 0.000000e+00, double* %3935, align 1
  store %struct.Memory* %loadMem_47d27a, %struct.Memory** %MEMORY
  %loadMem_47d283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3937 = getelementptr inbounds %struct.GPR, %struct.GPR* %3936, i32 0, i32 33
  %3938 = getelementptr inbounds %struct.Reg, %struct.Reg* %3937, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %3938 to i64*
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3940 = getelementptr inbounds %struct.GPR, %struct.GPR* %3939, i32 0, i32 1
  %3941 = getelementptr inbounds %struct.Reg, %struct.Reg* %3940, i32 0, i32 0
  %RAX.i943 = bitcast %union.anon* %3941 to i64*
  %3942 = load i64, i64* %PC.i942
  %3943 = add i64 %3942, 8
  store i64 %3943, i64* %PC.i942
  %3944 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %3944, i64* %RAX.i943, align 8
  store %struct.Memory* %loadMem_47d283, %struct.Memory** %MEMORY
  %loadMem_47d28b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3946 = getelementptr inbounds %struct.GPR, %struct.GPR* %3945, i32 0, i32 33
  %3947 = getelementptr inbounds %struct.Reg, %struct.Reg* %3946, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %3947 to i64*
  %3948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3949 = getelementptr inbounds %struct.GPR, %struct.GPR* %3948, i32 0, i32 1
  %3950 = getelementptr inbounds %struct.Reg, %struct.Reg* %3949, i32 0, i32 0
  %RAX.i940 = bitcast %union.anon* %3950 to i64*
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3952 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3951, i64 0, i64 2
  %YMM2.i941 = bitcast %union.VectorReg* %3952 to %"class.std::bitset"*
  %3953 = bitcast %"class.std::bitset"* %YMM2.i941 to i8*
  %3954 = load i64, i64* %RAX.i940
  %3955 = add i64 %3954, 72564
  %3956 = load i64, i64* %PC.i939
  %3957 = add i64 %3956, 8
  store i64 %3957, i64* %PC.i939
  %3958 = inttoptr i64 %3955 to i32*
  %3959 = load i32, i32* %3958
  %3960 = sitofp i32 %3959 to double
  %3961 = bitcast i8* %3953 to double*
  store double %3960, double* %3961, align 1
  store %struct.Memory* %loadMem_47d28b, %struct.Memory** %MEMORY
  %loadMem_47d293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 33
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %3964 to i64*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3965, i64 0, i64 1
  %YMM1.i937 = bitcast %union.VectorReg* %3966 to %"class.std::bitset"*
  %3967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3967, i64 0, i64 2
  %XMM2.i938 = bitcast %union.VectorReg* %3968 to %union.vec128_t*
  %3969 = bitcast %"class.std::bitset"* %YMM1.i937 to i8*
  %3970 = bitcast %"class.std::bitset"* %YMM1.i937 to i8*
  %3971 = bitcast %union.vec128_t* %XMM2.i938 to i8*
  %3972 = load i64, i64* %PC.i936
  %3973 = add i64 %3972, 4
  store i64 %3973, i64* %PC.i936
  %3974 = bitcast i8* %3970 to double*
  %3975 = load double, double* %3974, align 1
  %3976 = getelementptr inbounds i8, i8* %3970, i64 8
  %3977 = bitcast i8* %3976 to i64*
  %3978 = load i64, i64* %3977, align 1
  %3979 = bitcast i8* %3971 to double*
  %3980 = load double, double* %3979, align 1
  %3981 = fdiv double %3975, %3980
  %3982 = bitcast i8* %3969 to double*
  store double %3981, double* %3982, align 1
  %3983 = getelementptr inbounds i8, i8* %3969, i64 8
  %3984 = bitcast i8* %3983 to i64*
  store i64 %3978, i64* %3984, align 1
  store %struct.Memory* %loadMem_47d293, %struct.Memory** %MEMORY
  %loadMem_47d297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 33
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %3987 to i64*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3989 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3988, i64 0, i64 0
  %YMM0.i934 = bitcast %union.VectorReg* %3989 to %"class.std::bitset"*
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3991 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3990, i64 0, i64 1
  %XMM1.i935 = bitcast %union.VectorReg* %3991 to %union.vec128_t*
  %3992 = bitcast %"class.std::bitset"* %YMM0.i934 to i8*
  %3993 = bitcast %"class.std::bitset"* %YMM0.i934 to i8*
  %3994 = bitcast %union.vec128_t* %XMM1.i935 to i8*
  %3995 = load i64, i64* %PC.i933
  %3996 = add i64 %3995, 4
  store i64 %3996, i64* %PC.i933
  %3997 = bitcast i8* %3993 to double*
  %3998 = load double, double* %3997, align 1
  %3999 = getelementptr inbounds i8, i8* %3993, i64 8
  %4000 = bitcast i8* %3999 to i64*
  %4001 = load i64, i64* %4000, align 1
  %4002 = bitcast i8* %3994 to double*
  %4003 = load double, double* %4002, align 1
  %4004 = fadd double %3998, %4003
  %4005 = bitcast i8* %3992 to double*
  store double %4004, double* %4005, align 1
  %4006 = getelementptr inbounds i8, i8* %3992, i64 8
  %4007 = bitcast i8* %4006 to i64*
  store i64 %4001, i64* %4007, align 1
  store %struct.Memory* %loadMem_47d297, %struct.Memory** %MEMORY
  %loadMem_47d29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4009 = getelementptr inbounds %struct.GPR, %struct.GPR* %4008, i32 0, i32 33
  %4010 = getelementptr inbounds %struct.Reg, %struct.Reg* %4009, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %4010 to i64*
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4012 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4011, i64 0, i64 0
  %XMM0.i932 = bitcast %union.VectorReg* %4012 to %union.vec128_t*
  %4013 = bitcast %union.vec128_t* %XMM0.i932 to i8*
  %4014 = load i64, i64* %PC.i931
  %4015 = add i64 %4014, 9
  store i64 %4015, i64* %PC.i931
  %4016 = bitcast i8* %4013 to double*
  %4017 = load double, double* %4016, align 1
  store double %4017, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  store %struct.Memory* %loadMem_47d29b, %struct.Memory** %MEMORY
  %loadMem_47d2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4019 = getelementptr inbounds %struct.GPR, %struct.GPR* %4018, i32 0, i32 33
  %4020 = getelementptr inbounds %struct.Reg, %struct.Reg* %4019, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %4020 to i64*
  %4021 = load i64, i64* %PC.i930
  %4022 = add i64 %4021, 86
  %4023 = load i64, i64* %PC.i930
  %4024 = add i64 %4023, 5
  store i64 %4024, i64* %PC.i930
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4022, i64* %4025, align 8
  store %struct.Memory* %loadMem_47d2a4, %struct.Memory** %MEMORY
  br label %block_.L_47d2fa

block_.L_47d2a9:                                  ; preds = %block_47d22f, %block_.L_47d21a
  %loadMem_47d2a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4027 = getelementptr inbounds %struct.GPR, %struct.GPR* %4026, i32 0, i32 33
  %4028 = getelementptr inbounds %struct.Reg, %struct.Reg* %4027, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %4028 to i64*
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4030 = getelementptr inbounds %struct.GPR, %struct.GPR* %4029, i32 0, i32 1
  %4031 = getelementptr inbounds %struct.Reg, %struct.Reg* %4030, i32 0, i32 0
  %RAX.i929 = bitcast %union.anon* %4031 to i64*
  %4032 = load i64, i64* %PC.i928
  %4033 = add i64 %4032, 8
  store i64 %4033, i64* %PC.i928
  %4034 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %4034, i64* %RAX.i929, align 8
  store %struct.Memory* %loadMem_47d2a9, %struct.Memory** %MEMORY
  %loadMem_47d2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4036 = getelementptr inbounds %struct.GPR, %struct.GPR* %4035, i32 0, i32 33
  %4037 = getelementptr inbounds %struct.Reg, %struct.Reg* %4036, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %4037 to i64*
  %4038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4039 = getelementptr inbounds %struct.GPR, %struct.GPR* %4038, i32 0, i32 1
  %4040 = getelementptr inbounds %struct.Reg, %struct.Reg* %4039, i32 0, i32 0
  %RAX.i927 = bitcast %union.anon* %4040 to i64*
  %4041 = load i64, i64* %RAX.i927
  %4042 = add i64 %4041, 72564
  %4043 = load i64, i64* %PC.i926
  %4044 = add i64 %4043, 7
  store i64 %4044, i64* %PC.i926
  %4045 = inttoptr i64 %4042 to i32*
  %4046 = load i32, i32* %4045
  %4047 = sub i32 %4046, 1
  %4048 = icmp ult i32 %4046, 1
  %4049 = zext i1 %4048 to i8
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4049, i8* %4050, align 1
  %4051 = and i32 %4047, 255
  %4052 = call i32 @llvm.ctpop.i32(i32 %4051)
  %4053 = trunc i32 %4052 to i8
  %4054 = and i8 %4053, 1
  %4055 = xor i8 %4054, 1
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4055, i8* %4056, align 1
  %4057 = xor i32 %4046, 1
  %4058 = xor i32 %4057, %4047
  %4059 = lshr i32 %4058, 4
  %4060 = trunc i32 %4059 to i8
  %4061 = and i8 %4060, 1
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4061, i8* %4062, align 1
  %4063 = icmp eq i32 %4047, 0
  %4064 = zext i1 %4063 to i8
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4064, i8* %4065, align 1
  %4066 = lshr i32 %4047, 31
  %4067 = trunc i32 %4066 to i8
  %4068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4067, i8* %4068, align 1
  %4069 = lshr i32 %4046, 31
  %4070 = xor i32 %4066, %4069
  %4071 = add i32 %4070, %4069
  %4072 = icmp eq i32 %4071, 2
  %4073 = zext i1 %4072 to i8
  %4074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4073, i8* %4074, align 1
  store %struct.Memory* %loadMem_47d2b1, %struct.Memory** %MEMORY
  %loadMem_47d2b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4076 = getelementptr inbounds %struct.GPR, %struct.GPR* %4075, i32 0, i32 33
  %4077 = getelementptr inbounds %struct.Reg, %struct.Reg* %4076, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %4077 to i64*
  %4078 = load i64, i64* %PC.i925
  %4079 = add i64 %4078, 61
  %4080 = load i64, i64* %PC.i925
  %4081 = add i64 %4080, 6
  %4082 = load i64, i64* %PC.i925
  %4083 = add i64 %4082, 6
  store i64 %4083, i64* %PC.i925
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4085 = load i8, i8* %4084, align 1
  %4086 = icmp ne i8 %4085, 0
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4088 = load i8, i8* %4087, align 1
  %4089 = icmp ne i8 %4088, 0
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4091 = load i8, i8* %4090, align 1
  %4092 = icmp ne i8 %4091, 0
  %4093 = xor i1 %4089, %4092
  %4094 = or i1 %4086, %4093
  %4095 = zext i1 %4094 to i8
  store i8 %4095, i8* %BRANCH_TAKEN, align 1
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4097 = select i1 %4094, i64 %4079, i64 %4081
  store i64 %4097, i64* %4096, align 8
  store %struct.Memory* %loadMem_47d2b8, %struct.Memory** %MEMORY
  %loadBr_47d2b8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d2b8 = icmp eq i8 %loadBr_47d2b8, 1
  br i1 %cmpBr_47d2b8, label %block_.L_47d2f5, label %block_47d2be

block_47d2be:                                     ; preds = %block_.L_47d2a9
  %loadMem_47d2be = load %struct.Memory*, %struct.Memory** %MEMORY
  %4098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4099 = getelementptr inbounds %struct.GPR, %struct.GPR* %4098, i32 0, i32 33
  %4100 = getelementptr inbounds %struct.Reg, %struct.Reg* %4099, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %4100 to i64*
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4102 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4101, i64 0, i64 0
  %YMM0.i924 = bitcast %union.VectorReg* %4102 to %"class.std::bitset"*
  %4103 = bitcast %"class.std::bitset"* %YMM0.i924 to i8*
  %4104 = load i64, i64* %PC.i923
  %4105 = add i64 %4104, ptrtoint (%G_0x345fa__rip__type* @G_0x345fa__rip_ to i64)
  %4106 = load i64, i64* %PC.i923
  %4107 = add i64 %4106, 8
  store i64 %4107, i64* %PC.i923
  %4108 = inttoptr i64 %4105 to double*
  %4109 = load double, double* %4108
  %4110 = bitcast i8* %4103 to double*
  store double %4109, double* %4110, align 1
  %4111 = getelementptr inbounds i8, i8* %4103, i64 8
  %4112 = bitcast i8* %4111 to double*
  store double 0.000000e+00, double* %4112, align 1
  store %struct.Memory* %loadMem_47d2be, %struct.Memory** %MEMORY
  %loadMem_47d2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4114 = getelementptr inbounds %struct.GPR, %struct.GPR* %4113, i32 0, i32 33
  %4115 = getelementptr inbounds %struct.Reg, %struct.Reg* %4114, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %4115 to i64*
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4117 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4116, i64 0, i64 1
  %YMM1.i922 = bitcast %union.VectorReg* %4117 to %"class.std::bitset"*
  %4118 = bitcast %"class.std::bitset"* %YMM1.i922 to i8*
  %4119 = load i64, i64* %PC.i921
  %4120 = add i64 %4119, ptrtoint (%G_0x34662__rip__type* @G_0x34662__rip_ to i64)
  %4121 = load i64, i64* %PC.i921
  %4122 = add i64 %4121, 8
  store i64 %4122, i64* %PC.i921
  %4123 = inttoptr i64 %4120 to double*
  %4124 = load double, double* %4123
  %4125 = bitcast i8* %4118 to double*
  store double %4124, double* %4125, align 1
  %4126 = getelementptr inbounds i8, i8* %4118, i64 8
  %4127 = bitcast i8* %4126 to double*
  store double 0.000000e+00, double* %4127, align 1
  store %struct.Memory* %loadMem_47d2c6, %struct.Memory** %MEMORY
  %loadMem_47d2ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 33
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %4130 to i64*
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4132 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4131, i64 0, i64 2
  %YMM2.i920 = bitcast %union.VectorReg* %4132 to %"class.std::bitset"*
  %4133 = bitcast %"class.std::bitset"* %YMM2.i920 to i8*
  %4134 = load i64, i64* %PC.i919
  %4135 = add i64 %4134, 9
  store i64 %4135, i64* %PC.i919
  %4136 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %4137 = bitcast i8* %4133 to double*
  store double %4136, double* %4137, align 1
  %4138 = getelementptr inbounds i8, i8* %4133, i64 8
  %4139 = bitcast i8* %4138 to double*
  store double 0.000000e+00, double* %4139, align 1
  store %struct.Memory* %loadMem_47d2ce, %struct.Memory** %MEMORY
  %loadMem_47d2d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 33
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %4142 to i64*
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4144 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4143, i64 0, i64 2
  %YMM2.i917 = bitcast %union.VectorReg* %4144 to %"class.std::bitset"*
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4146 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4145, i64 0, i64 0
  %XMM0.i918 = bitcast %union.VectorReg* %4146 to %union.vec128_t*
  %4147 = bitcast %"class.std::bitset"* %YMM2.i917 to i8*
  %4148 = bitcast %"class.std::bitset"* %YMM2.i917 to i8*
  %4149 = bitcast %union.vec128_t* %XMM0.i918 to i8*
  %4150 = load i64, i64* %PC.i916
  %4151 = add i64 %4150, 4
  store i64 %4151, i64* %PC.i916
  %4152 = bitcast i8* %4148 to double*
  %4153 = load double, double* %4152, align 1
  %4154 = getelementptr inbounds i8, i8* %4148, i64 8
  %4155 = bitcast i8* %4154 to i64*
  %4156 = load i64, i64* %4155, align 1
  %4157 = bitcast i8* %4149 to double*
  %4158 = load double, double* %4157, align 1
  %4159 = fdiv double %4153, %4158
  %4160 = bitcast i8* %4147 to double*
  store double %4159, double* %4160, align 1
  %4161 = getelementptr inbounds i8, i8* %4147, i64 8
  %4162 = bitcast i8* %4161 to i64*
  store i64 %4156, i64* %4162, align 1
  store %struct.Memory* %loadMem_47d2d7, %struct.Memory** %MEMORY
  %loadMem_47d2db = load %struct.Memory*, %struct.Memory** %MEMORY
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 33
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %4165 to i64*
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4167 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4166, i64 0, i64 1
  %YMM1.i915 = bitcast %union.VectorReg* %4167 to %"class.std::bitset"*
  %4168 = bitcast %"class.std::bitset"* %YMM1.i915 to i8*
  %4169 = bitcast %"class.std::bitset"* %YMM1.i915 to i8*
  %4170 = load i64, i64* %PC.i914
  %4171 = add i64 %4170, 9
  store i64 %4171, i64* %PC.i914
  %4172 = bitcast i8* %4169 to double*
  %4173 = load double, double* %4172, align 1
  %4174 = getelementptr inbounds i8, i8* %4169, i64 8
  %4175 = bitcast i8* %4174 to i64*
  %4176 = load i64, i64* %4175, align 1
  %4177 = load double, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  %4178 = fmul double %4173, %4177
  %4179 = bitcast i8* %4168 to double*
  store double %4178, double* %4179, align 1
  %4180 = getelementptr inbounds i8, i8* %4168, i64 8
  %4181 = bitcast i8* %4180 to i64*
  store i64 %4176, i64* %4181, align 1
  store %struct.Memory* %loadMem_47d2db, %struct.Memory** %MEMORY
  %loadMem_47d2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 33
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %4184 to i64*
  %4185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4186 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4185, i64 0, i64 1
  %YMM1.i912 = bitcast %union.VectorReg* %4186 to %"class.std::bitset"*
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4188 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4187, i64 0, i64 0
  %XMM0.i913 = bitcast %union.VectorReg* %4188 to %union.vec128_t*
  %4189 = bitcast %"class.std::bitset"* %YMM1.i912 to i8*
  %4190 = bitcast %"class.std::bitset"* %YMM1.i912 to i8*
  %4191 = bitcast %union.vec128_t* %XMM0.i913 to i8*
  %4192 = load i64, i64* %PC.i911
  %4193 = add i64 %4192, 4
  store i64 %4193, i64* %PC.i911
  %4194 = bitcast i8* %4190 to double*
  %4195 = load double, double* %4194, align 1
  %4196 = getelementptr inbounds i8, i8* %4190, i64 8
  %4197 = bitcast i8* %4196 to i64*
  %4198 = load i64, i64* %4197, align 1
  %4199 = bitcast i8* %4191 to double*
  %4200 = load double, double* %4199, align 1
  %4201 = fdiv double %4195, %4200
  %4202 = bitcast i8* %4189 to double*
  store double %4201, double* %4202, align 1
  %4203 = getelementptr inbounds i8, i8* %4189, i64 8
  %4204 = bitcast i8* %4203 to i64*
  store i64 %4198, i64* %4204, align 1
  store %struct.Memory* %loadMem_47d2e4, %struct.Memory** %MEMORY
  %loadMem_47d2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 33
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %4207 to i64*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4208, i64 0, i64 2
  %YMM2.i909 = bitcast %union.VectorReg* %4209 to %"class.std::bitset"*
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4210, i64 0, i64 1
  %XMM1.i910 = bitcast %union.VectorReg* %4211 to %union.vec128_t*
  %4212 = bitcast %"class.std::bitset"* %YMM2.i909 to i8*
  %4213 = bitcast %"class.std::bitset"* %YMM2.i909 to i8*
  %4214 = bitcast %union.vec128_t* %XMM1.i910 to i8*
  %4215 = load i64, i64* %PC.i908
  %4216 = add i64 %4215, 4
  store i64 %4216, i64* %PC.i908
  %4217 = bitcast i8* %4213 to double*
  %4218 = load double, double* %4217, align 1
  %4219 = getelementptr inbounds i8, i8* %4213, i64 8
  %4220 = bitcast i8* %4219 to i64*
  %4221 = load i64, i64* %4220, align 1
  %4222 = bitcast i8* %4214 to double*
  %4223 = load double, double* %4222, align 1
  %4224 = fadd double %4218, %4223
  %4225 = bitcast i8* %4212 to double*
  store double %4224, double* %4225, align 1
  %4226 = getelementptr inbounds i8, i8* %4212, i64 8
  %4227 = bitcast i8* %4226 to i64*
  store i64 %4221, i64* %4227, align 1
  store %struct.Memory* %loadMem_47d2e8, %struct.Memory** %MEMORY
  %loadMem_47d2ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4229 = getelementptr inbounds %struct.GPR, %struct.GPR* %4228, i32 0, i32 33
  %4230 = getelementptr inbounds %struct.Reg, %struct.Reg* %4229, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %4230 to i64*
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4232 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4231, i64 0, i64 2
  %XMM2.i907 = bitcast %union.VectorReg* %4232 to %union.vec128_t*
  %4233 = bitcast %union.vec128_t* %XMM2.i907 to i8*
  %4234 = load i64, i64* %PC.i906
  %4235 = add i64 %4234, 9
  store i64 %4235, i64* %PC.i906
  %4236 = bitcast i8* %4233 to double*
  %4237 = load double, double* %4236, align 1
  store double %4237, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  store %struct.Memory* %loadMem_47d2ec, %struct.Memory** %MEMORY
  br label %block_.L_47d2f5

block_.L_47d2f5:                                  ; preds = %block_47d2be, %block_.L_47d2a9
  %loadMem_47d2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 33
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %4240 to i64*
  %4241 = load i64, i64* %PC.i905
  %4242 = add i64 %4241, 5
  %4243 = load i64, i64* %PC.i905
  %4244 = add i64 %4243, 5
  store i64 %4244, i64* %PC.i905
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4242, i64* %4245, align 8
  store %struct.Memory* %loadMem_47d2f5, %struct.Memory** %MEMORY
  br label %block_.L_47d2fa

block_.L_47d2fa:                                  ; preds = %block_.L_47d2f5, %block_47d244
  %loadMem_47d2fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4247 = getelementptr inbounds %struct.GPR, %struct.GPR* %4246, i32 0, i32 33
  %4248 = getelementptr inbounds %struct.Reg, %struct.Reg* %4247, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %4248 to i64*
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4250 = getelementptr inbounds %struct.GPR, %struct.GPR* %4249, i32 0, i32 1
  %4251 = getelementptr inbounds %struct.Reg, %struct.Reg* %4250, i32 0, i32 0
  %RAX.i904 = bitcast %union.anon* %4251 to i64*
  %4252 = load i64, i64* %PC.i903
  %4253 = add i64 %4252, 8
  store i64 %4253, i64* %PC.i903
  %4254 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4254, i64* %RAX.i904, align 8
  store %struct.Memory* %loadMem_47d2fa, %struct.Memory** %MEMORY
  %loadMem_47d302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4256 = getelementptr inbounds %struct.GPR, %struct.GPR* %4255, i32 0, i32 33
  %4257 = getelementptr inbounds %struct.Reg, %struct.Reg* %4256, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %4257 to i64*
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4259 = getelementptr inbounds %struct.GPR, %struct.GPR* %4258, i32 0, i32 1
  %4260 = getelementptr inbounds %struct.Reg, %struct.Reg* %4259, i32 0, i32 0
  %RAX.i902 = bitcast %union.anon* %4260 to i64*
  %4261 = load i64, i64* %RAX.i902
  %4262 = add i64 %4261, 1236
  %4263 = load i64, i64* %PC.i901
  %4264 = add i64 %4263, 7
  store i64 %4264, i64* %PC.i901
  %4265 = inttoptr i64 %4262 to i32*
  %4266 = load i32, i32* %4265
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4267, align 1
  %4268 = and i32 %4266, 255
  %4269 = call i32 @llvm.ctpop.i32(i32 %4268)
  %4270 = trunc i32 %4269 to i8
  %4271 = and i8 %4270, 1
  %4272 = xor i8 %4271, 1
  %4273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4272, i8* %4273, align 1
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4274, align 1
  %4275 = icmp eq i32 %4266, 0
  %4276 = zext i1 %4275 to i8
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4276, i8* %4277, align 1
  %4278 = lshr i32 %4266, 31
  %4279 = trunc i32 %4278 to i8
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4279, i8* %4280, align 1
  %4281 = lshr i32 %4266, 31
  %4282 = xor i32 %4278, %4281
  %4283 = add i32 %4282, %4281
  %4284 = icmp eq i32 %4283, 2
  %4285 = zext i1 %4284 to i8
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4285, i8* %4286, align 1
  store %struct.Memory* %loadMem_47d302, %struct.Memory** %MEMORY
  %loadMem_47d309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4288 = getelementptr inbounds %struct.GPR, %struct.GPR* %4287, i32 0, i32 33
  %4289 = getelementptr inbounds %struct.Reg, %struct.Reg* %4288, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %4289 to i64*
  %4290 = load i64, i64* %PC.i900
  %4291 = add i64 %4290, 148
  %4292 = load i64, i64* %PC.i900
  %4293 = add i64 %4292, 6
  %4294 = load i64, i64* %PC.i900
  %4295 = add i64 %4294, 6
  store i64 %4295, i64* %PC.i900
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4297 = load i8, i8* %4296, align 1
  %4298 = icmp ne i8 %4297, 0
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4300 = load i8, i8* %4299, align 1
  %4301 = icmp ne i8 %4300, 0
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4303 = load i8, i8* %4302, align 1
  %4304 = icmp ne i8 %4303, 0
  %4305 = xor i1 %4301, %4304
  %4306 = or i1 %4298, %4305
  %4307 = zext i1 %4306 to i8
  store i8 %4307, i8* %BRANCH_TAKEN, align 1
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4309 = select i1 %4306, i64 %4291, i64 %4293
  store i64 %4309, i64* %4308, align 8
  store %struct.Memory* %loadMem_47d309, %struct.Memory** %MEMORY
  %loadBr_47d309 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d309 = icmp eq i8 %loadBr_47d309, 1
  br i1 %cmpBr_47d309, label %block_.L_47d39d, label %block_47d30f

block_47d30f:                                     ; preds = %block_.L_47d2fa
  %loadMem_47d30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4311 = getelementptr inbounds %struct.GPR, %struct.GPR* %4310, i32 0, i32 33
  %4312 = getelementptr inbounds %struct.Reg, %struct.Reg* %4311, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %4312 to i64*
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4314 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4313, i64 0, i64 0
  %YMM0.i899 = bitcast %union.VectorReg* %4314 to %"class.std::bitset"*
  %4315 = bitcast %"class.std::bitset"* %YMM0.i899 to i8*
  %4316 = load i64, i64* %PC.i898
  %4317 = add i64 %4316, 9
  store i64 %4317, i64* %PC.i898
  %4318 = load double, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  %4319 = bitcast i8* %4315 to double*
  store double %4318, double* %4319, align 1
  %4320 = getelementptr inbounds i8, i8* %4315, i64 8
  %4321 = bitcast i8* %4320 to double*
  store double 0.000000e+00, double* %4321, align 1
  store %struct.Memory* %loadMem_47d30f, %struct.Memory** %MEMORY
  %loadMem_47d318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 33
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %4324 to i64*
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 1
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %RAX.i897 = bitcast %union.anon* %4327 to i64*
  %4328 = load i64, i64* %PC.i896
  %4329 = add i64 %4328, 8
  store i64 %4329, i64* %PC.i896
  %4330 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4330, i64* %RAX.i897, align 8
  store %struct.Memory* %loadMem_47d318, %struct.Memory** %MEMORY
  %loadMem_47d320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 33
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %4333 to i64*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 1
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RAX.i894 = bitcast %union.anon* %4336 to i64*
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4338 = getelementptr inbounds %struct.GPR, %struct.GPR* %4337, i32 0, i32 5
  %4339 = getelementptr inbounds %struct.Reg, %struct.Reg* %4338, i32 0, i32 0
  %RCX.i895 = bitcast %union.anon* %4339 to i64*
  %4340 = load i64, i64* %RAX.i894
  %4341 = add i64 %4340, 1236
  %4342 = load i64, i64* %PC.i893
  %4343 = add i64 %4342, 6
  store i64 %4343, i64* %PC.i893
  %4344 = inttoptr i64 %4341 to i32*
  %4345 = load i32, i32* %4344
  %4346 = zext i32 %4345 to i64
  store i64 %4346, i64* %RCX.i895, align 8
  store %struct.Memory* %loadMem_47d320, %struct.Memory** %MEMORY
  %loadMem_47d326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4348 = getelementptr inbounds %struct.GPR, %struct.GPR* %4347, i32 0, i32 33
  %4349 = getelementptr inbounds %struct.Reg, %struct.Reg* %4348, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %4349 to i64*
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4351 = getelementptr inbounds %struct.GPR, %struct.GPR* %4350, i32 0, i32 5
  %4352 = getelementptr inbounds %struct.Reg, %struct.Reg* %4351, i32 0, i32 0
  %RCX.i892 = bitcast %union.anon* %4352 to i64*
  %4353 = load i64, i64* %RCX.i892
  %4354 = load i64, i64* %PC.i891
  %4355 = add i64 %4354, 3
  store i64 %4355, i64* %PC.i891
  %4356 = trunc i64 %4353 to i32
  %4357 = add i32 1, %4356
  %4358 = zext i32 %4357 to i64
  store i64 %4358, i64* %RCX.i892, align 8
  %4359 = icmp ult i32 %4357, %4356
  %4360 = icmp ult i32 %4357, 1
  %4361 = or i1 %4359, %4360
  %4362 = zext i1 %4361 to i8
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4362, i8* %4363, align 1
  %4364 = and i32 %4357, 255
  %4365 = call i32 @llvm.ctpop.i32(i32 %4364)
  %4366 = trunc i32 %4365 to i8
  %4367 = and i8 %4366, 1
  %4368 = xor i8 %4367, 1
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4368, i8* %4369, align 1
  %4370 = xor i64 1, %4353
  %4371 = trunc i64 %4370 to i32
  %4372 = xor i32 %4371, %4357
  %4373 = lshr i32 %4372, 4
  %4374 = trunc i32 %4373 to i8
  %4375 = and i8 %4374, 1
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4375, i8* %4376, align 1
  %4377 = icmp eq i32 %4357, 0
  %4378 = zext i1 %4377 to i8
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4378, i8* %4379, align 1
  %4380 = lshr i32 %4357, 31
  %4381 = trunc i32 %4380 to i8
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4381, i8* %4382, align 1
  %4383 = lshr i32 %4356, 31
  %4384 = xor i32 %4380, %4383
  %4385 = add i32 %4384, %4380
  %4386 = icmp eq i32 %4385, 2
  %4387 = zext i1 %4386 to i8
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4387, i8* %4388, align 1
  store %struct.Memory* %loadMem_47d326, %struct.Memory** %MEMORY
  %loadMem_47d329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4390 = getelementptr inbounds %struct.GPR, %struct.GPR* %4389, i32 0, i32 33
  %4391 = getelementptr inbounds %struct.Reg, %struct.Reg* %4390, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %4391 to i64*
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 5
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %ECX.i889 = bitcast %union.anon* %4394 to i32*
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4396 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4395, i64 0, i64 1
  %YMM1.i890 = bitcast %union.VectorReg* %4396 to %"class.std::bitset"*
  %4397 = bitcast %"class.std::bitset"* %YMM1.i890 to i8*
  %4398 = load i32, i32* %ECX.i889
  %4399 = zext i32 %4398 to i64
  %4400 = load i64, i64* %PC.i888
  %4401 = add i64 %4400, 4
  store i64 %4401, i64* %PC.i888
  %4402 = sitofp i32 %4398 to double
  %4403 = bitcast i8* %4397 to double*
  store double %4402, double* %4403, align 1
  store %struct.Memory* %loadMem_47d329, %struct.Memory** %MEMORY
  %loadMem_47d32d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4405 = getelementptr inbounds %struct.GPR, %struct.GPR* %4404, i32 0, i32 33
  %4406 = getelementptr inbounds %struct.Reg, %struct.Reg* %4405, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %4406 to i64*
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4408 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4407, i64 0, i64 0
  %YMM0.i886 = bitcast %union.VectorReg* %4408 to %"class.std::bitset"*
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4410 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4409, i64 0, i64 1
  %XMM1.i887 = bitcast %union.VectorReg* %4410 to %union.vec128_t*
  %4411 = bitcast %"class.std::bitset"* %YMM0.i886 to i8*
  %4412 = bitcast %"class.std::bitset"* %YMM0.i886 to i8*
  %4413 = bitcast %union.vec128_t* %XMM1.i887 to i8*
  %4414 = load i64, i64* %PC.i885
  %4415 = add i64 %4414, 4
  store i64 %4415, i64* %PC.i885
  %4416 = bitcast i8* %4412 to double*
  %4417 = load double, double* %4416, align 1
  %4418 = getelementptr inbounds i8, i8* %4412, i64 8
  %4419 = bitcast i8* %4418 to i64*
  %4420 = load i64, i64* %4419, align 1
  %4421 = bitcast i8* %4413 to double*
  %4422 = load double, double* %4421, align 1
  %4423 = fmul double %4417, %4422
  %4424 = bitcast i8* %4411 to double*
  store double %4423, double* %4424, align 1
  %4425 = getelementptr inbounds i8, i8* %4411, i64 8
  %4426 = bitcast i8* %4425 to i64*
  store i64 %4420, i64* %4426, align 1
  store %struct.Memory* %loadMem_47d32d, %struct.Memory** %MEMORY
  %loadMem_47d331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4428 = getelementptr inbounds %struct.GPR, %struct.GPR* %4427, i32 0, i32 33
  %4429 = getelementptr inbounds %struct.Reg, %struct.Reg* %4428, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %4429 to i64*
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4431 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4430, i64 0, i64 0
  %YMM0.i884 = bitcast %union.VectorReg* %4431 to %"class.std::bitset"*
  %4432 = bitcast %"class.std::bitset"* %YMM0.i884 to i8*
  %4433 = bitcast %"class.std::bitset"* %YMM0.i884 to i8*
  %4434 = load i64, i64* %PC.i883
  %4435 = add i64 %4434, 9
  store i64 %4435, i64* %PC.i883
  %4436 = bitcast i8* %4433 to double*
  %4437 = load double, double* %4436, align 1
  %4438 = getelementptr inbounds i8, i8* %4433, i64 8
  %4439 = bitcast i8* %4438 to i64*
  %4440 = load i64, i64* %4439, align 1
  %4441 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %4442 = fmul double %4437, %4441
  %4443 = bitcast i8* %4432 to double*
  store double %4442, double* %4443, align 1
  %4444 = getelementptr inbounds i8, i8* %4432, i64 8
  %4445 = bitcast i8* %4444 to i64*
  store i64 %4440, i64* %4445, align 1
  store %struct.Memory* %loadMem_47d331, %struct.Memory** %MEMORY
  %loadMem_47d33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4447 = getelementptr inbounds %struct.GPR, %struct.GPR* %4446, i32 0, i32 33
  %4448 = getelementptr inbounds %struct.Reg, %struct.Reg* %4447, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %4448 to i64*
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4450 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4449, i64 0, i64 1
  %YMM1.i882 = bitcast %union.VectorReg* %4450 to %"class.std::bitset"*
  %4451 = bitcast %"class.std::bitset"* %YMM1.i882 to i8*
  %4452 = load i64, i64* %PC.i881
  %4453 = add i64 %4452, 9
  store i64 %4453, i64* %PC.i881
  %4454 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %4455 = bitcast i8* %4451 to double*
  store double %4454, double* %4455, align 1
  %4456 = getelementptr inbounds i8, i8* %4451, i64 8
  %4457 = bitcast i8* %4456 to double*
  store double 0.000000e+00, double* %4457, align 1
  store %struct.Memory* %loadMem_47d33a, %struct.Memory** %MEMORY
  %loadMem_47d343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4459 = getelementptr inbounds %struct.GPR, %struct.GPR* %4458, i32 0, i32 33
  %4460 = getelementptr inbounds %struct.Reg, %struct.Reg* %4459, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %4460 to i64*
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4462 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4461, i64 0, i64 2
  %YMM2.i880 = bitcast %union.VectorReg* %4462 to %"class.std::bitset"*
  %4463 = bitcast %"class.std::bitset"* %YMM2.i880 to i8*
  %4464 = load i64, i64* %PC.i879
  %4465 = add i64 %4464, 9
  store i64 %4465, i64* %PC.i879
  %4466 = load double, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  %4467 = bitcast i8* %4463 to double*
  store double %4466, double* %4467, align 1
  %4468 = getelementptr inbounds i8, i8* %4463, i64 8
  %4469 = bitcast i8* %4468 to double*
  store double 0.000000e+00, double* %4469, align 1
  store %struct.Memory* %loadMem_47d343, %struct.Memory** %MEMORY
  %loadMem_47d34c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4471 = getelementptr inbounds %struct.GPR, %struct.GPR* %4470, i32 0, i32 33
  %4472 = getelementptr inbounds %struct.Reg, %struct.Reg* %4471, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %4472 to i64*
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4474 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4473, i64 0, i64 3
  %YMM3.i878 = bitcast %union.VectorReg* %4474 to %"class.std::bitset"*
  %4475 = bitcast %"class.std::bitset"* %YMM3.i878 to i8*
  %4476 = load i64, i64* %PC.i877
  %4477 = add i64 %4476, 9
  store i64 %4477, i64* %PC.i877
  %4478 = load double, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  %4479 = bitcast i8* %4475 to double*
  store double %4478, double* %4479, align 1
  %4480 = getelementptr inbounds i8, i8* %4475, i64 8
  %4481 = bitcast i8* %4480 to double*
  store double 0.000000e+00, double* %4481, align 1
  store %struct.Memory* %loadMem_47d34c, %struct.Memory** %MEMORY
  %loadMem_47d355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4483 = getelementptr inbounds %struct.GPR, %struct.GPR* %4482, i32 0, i32 33
  %4484 = getelementptr inbounds %struct.Reg, %struct.Reg* %4483, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %4484 to i64*
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 1
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %RAX.i876 = bitcast %union.anon* %4487 to i64*
  %4488 = load i64, i64* %PC.i875
  %4489 = add i64 %4488, 8
  store i64 %4489, i64* %PC.i875
  %4490 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %4490, i64* %RAX.i876, align 8
  store %struct.Memory* %loadMem_47d355, %struct.Memory** %MEMORY
  %loadMem_47d35d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4492 = getelementptr inbounds %struct.GPR, %struct.GPR* %4491, i32 0, i32 33
  %4493 = getelementptr inbounds %struct.Reg, %struct.Reg* %4492, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %4493 to i64*
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4495 = getelementptr inbounds %struct.GPR, %struct.GPR* %4494, i32 0, i32 1
  %4496 = getelementptr inbounds %struct.Reg, %struct.Reg* %4495, i32 0, i32 0
  %RAX.i874 = bitcast %union.anon* %4496 to i64*
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4498 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4497, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %4498 to %"class.std::bitset"*
  %4499 = bitcast %"class.std::bitset"* %YMM4.i to i8*
  %4500 = load i64, i64* %RAX.i874
  %4501 = add i64 %4500, 1236
  %4502 = load i64, i64* %PC.i873
  %4503 = add i64 %4502, 8
  store i64 %4503, i64* %PC.i873
  %4504 = inttoptr i64 %4501 to i32*
  %4505 = load i32, i32* %4504
  %4506 = sitofp i32 %4505 to double
  %4507 = bitcast i8* %4499 to double*
  store double %4506, double* %4507, align 1
  store %struct.Memory* %loadMem_47d35d, %struct.Memory** %MEMORY
  %loadMem_47d365 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4509 = getelementptr inbounds %struct.GPR, %struct.GPR* %4508, i32 0, i32 33
  %4510 = getelementptr inbounds %struct.Reg, %struct.Reg* %4509, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %4510 to i64*
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4512 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4511, i64 0, i64 3
  %YMM3.i872 = bitcast %union.VectorReg* %4512 to %"class.std::bitset"*
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4514 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4513, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %4514 to %union.vec128_t*
  %4515 = bitcast %"class.std::bitset"* %YMM3.i872 to i8*
  %4516 = bitcast %"class.std::bitset"* %YMM3.i872 to i8*
  %4517 = bitcast %union.vec128_t* %XMM4.i to i8*
  %4518 = load i64, i64* %PC.i871
  %4519 = add i64 %4518, 4
  store i64 %4519, i64* %PC.i871
  %4520 = bitcast i8* %4516 to double*
  %4521 = load double, double* %4520, align 1
  %4522 = getelementptr inbounds i8, i8* %4516, i64 8
  %4523 = bitcast i8* %4522 to i64*
  %4524 = load i64, i64* %4523, align 1
  %4525 = bitcast i8* %4517 to double*
  %4526 = load double, double* %4525, align 1
  %4527 = fmul double %4521, %4526
  %4528 = bitcast i8* %4515 to double*
  store double %4527, double* %4528, align 1
  %4529 = getelementptr inbounds i8, i8* %4515, i64 8
  %4530 = bitcast i8* %4529 to i64*
  store i64 %4524, i64* %4530, align 1
  store %struct.Memory* %loadMem_47d365, %struct.Memory** %MEMORY
  %loadMem_47d369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4532 = getelementptr inbounds %struct.GPR, %struct.GPR* %4531, i32 0, i32 33
  %4533 = getelementptr inbounds %struct.Reg, %struct.Reg* %4532, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %4533 to i64*
  %4534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4535 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4534, i64 0, i64 2
  %YMM2.i869 = bitcast %union.VectorReg* %4535 to %"class.std::bitset"*
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4537 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4536, i64 0, i64 3
  %XMM3.i870 = bitcast %union.VectorReg* %4537 to %union.vec128_t*
  %4538 = bitcast %"class.std::bitset"* %YMM2.i869 to i8*
  %4539 = bitcast %"class.std::bitset"* %YMM2.i869 to i8*
  %4540 = bitcast %union.vec128_t* %XMM3.i870 to i8*
  %4541 = load i64, i64* %PC.i868
  %4542 = add i64 %4541, 4
  store i64 %4542, i64* %PC.i868
  %4543 = bitcast i8* %4539 to double*
  %4544 = load double, double* %4543, align 1
  %4545 = getelementptr inbounds i8, i8* %4539, i64 8
  %4546 = bitcast i8* %4545 to i64*
  %4547 = load i64, i64* %4546, align 1
  %4548 = bitcast i8* %4540 to double*
  %4549 = load double, double* %4548, align 1
  %4550 = fadd double %4544, %4549
  %4551 = bitcast i8* %4538 to double*
  store double %4550, double* %4551, align 1
  %4552 = getelementptr inbounds i8, i8* %4538, i64 8
  %4553 = bitcast i8* %4552 to i64*
  store i64 %4547, i64* %4553, align 1
  store %struct.Memory* %loadMem_47d369, %struct.Memory** %MEMORY
  %loadMem_47d36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4555 = getelementptr inbounds %struct.GPR, %struct.GPR* %4554, i32 0, i32 33
  %4556 = getelementptr inbounds %struct.Reg, %struct.Reg* %4555, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %4556 to i64*
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4558 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4557, i64 0, i64 1
  %YMM1.i866 = bitcast %union.VectorReg* %4558 to %"class.std::bitset"*
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4560 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4559, i64 0, i64 2
  %XMM2.i867 = bitcast %union.VectorReg* %4560 to %union.vec128_t*
  %4561 = bitcast %"class.std::bitset"* %YMM1.i866 to i8*
  %4562 = bitcast %"class.std::bitset"* %YMM1.i866 to i8*
  %4563 = bitcast %union.vec128_t* %XMM2.i867 to i8*
  %4564 = load i64, i64* %PC.i865
  %4565 = add i64 %4564, 4
  store i64 %4565, i64* %PC.i865
  %4566 = bitcast i8* %4562 to double*
  %4567 = load double, double* %4566, align 1
  %4568 = getelementptr inbounds i8, i8* %4562, i64 8
  %4569 = bitcast i8* %4568 to i64*
  %4570 = load i64, i64* %4569, align 1
  %4571 = bitcast i8* %4563 to double*
  %4572 = load double, double* %4571, align 1
  %4573 = fmul double %4567, %4572
  %4574 = bitcast i8* %4561 to double*
  store double %4573, double* %4574, align 1
  %4575 = getelementptr inbounds i8, i8* %4561, i64 8
  %4576 = bitcast i8* %4575 to i64*
  store i64 %4570, i64* %4576, align 1
  store %struct.Memory* %loadMem_47d36d, %struct.Memory** %MEMORY
  %loadMem_47d371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 33
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %4579 to i64*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4581 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4580, i64 0, i64 0
  %YMM0.i863 = bitcast %union.VectorReg* %4581 to %"class.std::bitset"*
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4583 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4582, i64 0, i64 1
  %XMM1.i864 = bitcast %union.VectorReg* %4583 to %union.vec128_t*
  %4584 = bitcast %"class.std::bitset"* %YMM0.i863 to i8*
  %4585 = bitcast %"class.std::bitset"* %YMM0.i863 to i8*
  %4586 = bitcast %union.vec128_t* %XMM1.i864 to i8*
  %4587 = load i64, i64* %PC.i862
  %4588 = add i64 %4587, 4
  store i64 %4588, i64* %PC.i862
  %4589 = bitcast i8* %4585 to double*
  %4590 = load double, double* %4589, align 1
  %4591 = getelementptr inbounds i8, i8* %4585, i64 8
  %4592 = bitcast i8* %4591 to i64*
  %4593 = load i64, i64* %4592, align 1
  %4594 = bitcast i8* %4586 to double*
  %4595 = load double, double* %4594, align 1
  %4596 = fdiv double %4590, %4595
  %4597 = bitcast i8* %4584 to double*
  store double %4596, double* %4597, align 1
  %4598 = getelementptr inbounds i8, i8* %4584, i64 8
  %4599 = bitcast i8* %4598 to i64*
  store i64 %4593, i64* %4599, align 1
  store %struct.Memory* %loadMem_47d371, %struct.Memory** %MEMORY
  %loadMem_47d375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4601 = getelementptr inbounds %struct.GPR, %struct.GPR* %4600, i32 0, i32 33
  %4602 = getelementptr inbounds %struct.Reg, %struct.Reg* %4601, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %4602 to i64*
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4604 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4603, i64 0, i64 1
  %YMM1.i861 = bitcast %union.VectorReg* %4604 to %"class.std::bitset"*
  %4605 = bitcast %"class.std::bitset"* %YMM1.i861 to i8*
  %4606 = load i64, i64* %PC.i860
  %4607 = add i64 %4606, 9
  store i64 %4607, i64* %PC.i860
  %4608 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %4609 = bitcast i8* %4605 to double*
  store double %4608, double* %4609, align 1
  %4610 = getelementptr inbounds i8, i8* %4605, i64 8
  %4611 = bitcast i8* %4610 to double*
  store double 0.000000e+00, double* %4611, align 1
  store %struct.Memory* %loadMem_47d375, %struct.Memory** %MEMORY
  %loadMem_47d37e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4613 = getelementptr inbounds %struct.GPR, %struct.GPR* %4612, i32 0, i32 33
  %4614 = getelementptr inbounds %struct.Reg, %struct.Reg* %4613, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %4614 to i64*
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4616 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4615, i64 0, i64 1
  %YMM1.i859 = bitcast %union.VectorReg* %4616 to %"class.std::bitset"*
  %4617 = bitcast %"class.std::bitset"* %YMM1.i859 to i8*
  %4618 = bitcast %"class.std::bitset"* %YMM1.i859 to i8*
  %4619 = load i64, i64* %PC.i858
  %4620 = add i64 %4619, 9
  store i64 %4620, i64* %PC.i858
  %4621 = bitcast i8* %4618 to double*
  %4622 = load double, double* %4621, align 1
  %4623 = getelementptr inbounds i8, i8* %4618, i64 8
  %4624 = bitcast i8* %4623 to i64*
  %4625 = load i64, i64* %4624, align 1
  %4626 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %4627 = fdiv double %4622, %4626
  %4628 = bitcast i8* %4617 to double*
  store double %4627, double* %4628, align 1
  %4629 = getelementptr inbounds i8, i8* %4617, i64 8
  %4630 = bitcast i8* %4629 to i64*
  store i64 %4625, i64* %4630, align 1
  store %struct.Memory* %loadMem_47d37e, %struct.Memory** %MEMORY
  %loadMem_47d387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4632 = getelementptr inbounds %struct.GPR, %struct.GPR* %4631, i32 0, i32 33
  %4633 = getelementptr inbounds %struct.Reg, %struct.Reg* %4632, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %4633 to i64*
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4635 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4634, i64 0, i64 0
  %YMM0.i856 = bitcast %union.VectorReg* %4635 to %"class.std::bitset"*
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4637 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4636, i64 0, i64 1
  %XMM1.i857 = bitcast %union.VectorReg* %4637 to %union.vec128_t*
  %4638 = bitcast %"class.std::bitset"* %YMM0.i856 to i8*
  %4639 = bitcast %"class.std::bitset"* %YMM0.i856 to i8*
  %4640 = bitcast %union.vec128_t* %XMM1.i857 to i8*
  %4641 = load i64, i64* %PC.i855
  %4642 = add i64 %4641, 4
  store i64 %4642, i64* %PC.i855
  %4643 = bitcast i8* %4639 to double*
  %4644 = load double, double* %4643, align 1
  %4645 = getelementptr inbounds i8, i8* %4639, i64 8
  %4646 = bitcast i8* %4645 to i64*
  %4647 = load i64, i64* %4646, align 1
  %4648 = bitcast i8* %4640 to double*
  %4649 = load double, double* %4648, align 1
  %4650 = fsub double %4644, %4649
  %4651 = bitcast i8* %4638 to double*
  store double %4650, double* %4651, align 1
  %4652 = getelementptr inbounds i8, i8* %4638, i64 8
  %4653 = bitcast i8* %4652 to i64*
  store i64 %4647, i64* %4653, align 1
  store %struct.Memory* %loadMem_47d387, %struct.Memory** %MEMORY
  %loadMem_47d38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4655 = getelementptr inbounds %struct.GPR, %struct.GPR* %4654, i32 0, i32 33
  %4656 = getelementptr inbounds %struct.Reg, %struct.Reg* %4655, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %4656 to i64*
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4658 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4657, i64 0, i64 0
  %YMM0.i854 = bitcast %union.VectorReg* %4658 to %"class.std::bitset"*
  %4659 = bitcast %"class.std::bitset"* %YMM0.i854 to i8*
  %4660 = bitcast %"class.std::bitset"* %YMM0.i854 to i8*
  %4661 = load i64, i64* %PC.i853
  %4662 = add i64 %4661, 9
  store i64 %4662, i64* %PC.i853
  %4663 = bitcast i8* %4660 to double*
  %4664 = load double, double* %4663, align 1
  %4665 = getelementptr inbounds i8, i8* %4660, i64 8
  %4666 = bitcast i8* %4665 to i64*
  %4667 = load i64, i64* %4666, align 1
  %4668 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %4669 = fadd double %4664, %4668
  %4670 = bitcast i8* %4659 to double*
  store double %4669, double* %4670, align 1
  %4671 = getelementptr inbounds i8, i8* %4659, i64 8
  %4672 = bitcast i8* %4671 to i64*
  store i64 %4667, i64* %4672, align 1
  store %struct.Memory* %loadMem_47d38b, %struct.Memory** %MEMORY
  %loadMem_47d394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 33
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %4675 to i64*
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4677 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4676, i64 0, i64 0
  %XMM0.i852 = bitcast %union.VectorReg* %4677 to %union.vec128_t*
  %4678 = bitcast %union.vec128_t* %XMM0.i852 to i8*
  %4679 = load i64, i64* %PC.i851
  %4680 = add i64 %4679, 9
  store i64 %4680, i64* %PC.i851
  %4681 = bitcast i8* %4678 to double*
  %4682 = load double, double* %4681, align 1
  store double %4682, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  store %struct.Memory* %loadMem_47d394, %struct.Memory** %MEMORY
  br label %block_.L_47d39d

block_.L_47d39d:                                  ; preds = %block_47d30f, %block_.L_47d2fa
  %loadMem_47d39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 33
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %4685 to i64*
  %4686 = load i64, i64* %PC.i850
  %4687 = add i64 %4686, 423
  %4688 = load i64, i64* %PC.i850
  %4689 = add i64 %4688, 5
  store i64 %4689, i64* %PC.i850
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4687, i64* %4690, align 8
  store %struct.Memory* %loadMem_47d39d, %struct.Memory** %MEMORY
  br label %block_.L_47d544

block_.L_47d3a2:                                  ; preds = %block_.L_47ce01
  %loadMem_47d3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4692 = getelementptr inbounds %struct.GPR, %struct.GPR* %4691, i32 0, i32 33
  %4693 = getelementptr inbounds %struct.Reg, %struct.Reg* %4692, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %4693 to i64*
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4695 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4694, i64 0, i64 0
  %YMM0.i849 = bitcast %union.VectorReg* %4695 to %"class.std::bitset"*
  %4696 = bitcast %"class.std::bitset"* %YMM0.i849 to i8*
  %4697 = load i64, i64* %PC.i848
  %4698 = add i64 %4697, 9
  store i64 %4698, i64* %PC.i848
  %4699 = load double, double* bitcast (%G_0x6f6f80_type* @G_0x6f6f80 to double*)
  %4700 = bitcast i8* %4696 to double*
  store double %4699, double* %4700, align 1
  %4701 = getelementptr inbounds i8, i8* %4696, i64 8
  %4702 = bitcast i8* %4701 to double*
  store double 0.000000e+00, double* %4702, align 1
  store %struct.Memory* %loadMem_47d3a2, %struct.Memory** %MEMORY
  %loadMem_47d3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %4703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4704 = getelementptr inbounds %struct.GPR, %struct.GPR* %4703, i32 0, i32 33
  %4705 = getelementptr inbounds %struct.Reg, %struct.Reg* %4704, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %4705 to i64*
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4707 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4706, i64 0, i64 0
  %XMM0.i843 = bitcast %union.VectorReg* %4707 to %union.vec128_t*
  %4708 = bitcast %union.vec128_t* %XMM0.i843 to i8*
  %4709 = load i64, i64* %PC.i842
  %4710 = add i64 %4709, 9
  store i64 %4710, i64* %PC.i842
  %4711 = bitcast i8* %4708 to double*
  %4712 = load double, double* %4711, align 1
  %4713 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %4714 = fcmp uno double %4712, %4713
  br i1 %4714, label %4715, label %4727

; <label>:4715:                                   ; preds = %block_.L_47d3a2
  %4716 = fadd double %4712, %4713
  %4717 = bitcast double %4716 to i64
  %4718 = and i64 %4717, 9221120237041090560
  %4719 = icmp eq i64 %4718, 9218868437227405312
  %4720 = and i64 %4717, 2251799813685247
  %4721 = icmp ne i64 %4720, 0
  %4722 = and i1 %4719, %4721
  br i1 %4722, label %4723, label %4733

; <label>:4723:                                   ; preds = %4715
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4725 = load i64, i64* %4724, align 8
  %4726 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4725, %struct.Memory* %loadMem_47d3ab)
  br label %routine_ucomisd_0x6ccf88___xmm0.exit

; <label>:4727:                                   ; preds = %block_.L_47d3a2
  %4728 = fcmp ogt double %4712, %4713
  br i1 %4728, label %4733, label %4729

; <label>:4729:                                   ; preds = %4727
  %4730 = fcmp olt double %4712, %4713
  br i1 %4730, label %4733, label %4731

; <label>:4731:                                   ; preds = %4729
  %4732 = fcmp oeq double %4712, %4713
  br i1 %4732, label %4733, label %4740

; <label>:4733:                                   ; preds = %4731, %4729, %4727, %4715
  %4734 = phi i8 [ 0, %4727 ], [ 0, %4729 ], [ 1, %4731 ], [ 1, %4715 ]
  %4735 = phi i8 [ 0, %4727 ], [ 0, %4729 ], [ 0, %4731 ], [ 1, %4715 ]
  %4736 = phi i8 [ 0, %4727 ], [ 1, %4729 ], [ 0, %4731 ], [ 1, %4715 ]
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4734, i8* %4737, align 1
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4735, i8* %4738, align 1
  %4739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4736, i8* %4739, align 1
  br label %4740

; <label>:4740:                                   ; preds = %4733, %4731
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4741, align 1
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4742, align 1
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4743, align 1
  br label %routine_ucomisd_0x6ccf88___xmm0.exit

routine_ucomisd_0x6ccf88___xmm0.exit:             ; preds = %4723, %4740
  %4744 = phi %struct.Memory* [ %4726, %4723 ], [ %loadMem_47d3ab, %4740 ]
  store %struct.Memory* %4744, %struct.Memory** %MEMORY
  %loadMem_47d3b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 33
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %4747 to i64*
  %4748 = load i64, i64* %PC.i841
  %4749 = add i64 %4748, 17
  %4750 = load i64, i64* %PC.i841
  %4751 = add i64 %4750, 6
  %4752 = load i64, i64* %PC.i841
  %4753 = add i64 %4752, 6
  store i64 %4753, i64* %PC.i841
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4755 = load i8, i8* %4754, align 1
  %4756 = icmp eq i8 %4755, 0
  %4757 = zext i1 %4756 to i8
  store i8 %4757, i8* %BRANCH_TAKEN, align 1
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4759 = select i1 %4756, i64 %4749, i64 %4751
  store i64 %4759, i64* %4758, align 8
  store %struct.Memory* %loadMem_47d3b4, %struct.Memory** %MEMORY
  %loadBr_47d3b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d3b4 = icmp eq i8 %loadBr_47d3b4, 1
  br i1 %cmpBr_47d3b4, label %block_.L_47d3c5, label %block_47d3ba

block_47d3ba:                                     ; preds = %routine_ucomisd_0x6ccf88___xmm0.exit
  %loadMem_47d3ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4761 = getelementptr inbounds %struct.GPR, %struct.GPR* %4760, i32 0, i32 33
  %4762 = getelementptr inbounds %struct.Reg, %struct.Reg* %4761, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %4762 to i64*
  %4763 = load i64, i64* %PC.i840
  %4764 = add i64 %4763, 11
  %4765 = load i64, i64* %PC.i840
  %4766 = add i64 %4765, 6
  %4767 = load i64, i64* %PC.i840
  %4768 = add i64 %4767, 6
  store i64 %4768, i64* %PC.i840
  %4769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4770 = load i8, i8* %4769, align 1
  store i8 %4770, i8* %BRANCH_TAKEN, align 1
  %4771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4772 = icmp ne i8 %4770, 0
  %4773 = select i1 %4772, i64 %4764, i64 %4766
  store i64 %4773, i64* %4771, align 8
  store %struct.Memory* %loadMem_47d3ba, %struct.Memory** %MEMORY
  %loadBr_47d3ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d3ba = icmp eq i8 %loadBr_47d3ba, 1
  br i1 %cmpBr_47d3ba, label %block_.L_47d3c5, label %block_47d3c0

block_47d3c0:                                     ; preds = %block_47d3ba
  %loadMem_47d3c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 33
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %4776 to i64*
  %4777 = load i64, i64* %PC.i839
  %4778 = add i64 %4777, 92
  %4779 = load i64, i64* %PC.i839
  %4780 = add i64 %4779, 5
  store i64 %4780, i64* %PC.i839
  %4781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4778, i64* %4781, align 8
  store %struct.Memory* %loadMem_47d3c0, %struct.Memory** %MEMORY
  br label %block_.L_47d41c

block_.L_47d3c5:                                  ; preds = %block_47d3ba, %routine_ucomisd_0x6ccf88___xmm0.exit
  %loadMem_47d3c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4783 = getelementptr inbounds %struct.GPR, %struct.GPR* %4782, i32 0, i32 33
  %4784 = getelementptr inbounds %struct.Reg, %struct.Reg* %4783, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %4784 to i64*
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4786 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4785, i64 0, i64 0
  %YMM0.i838 = bitcast %union.VectorReg* %4786 to %"class.std::bitset"*
  %4787 = bitcast %"class.std::bitset"* %YMM0.i838 to i8*
  %4788 = load i64, i64* %PC.i837
  %4789 = add i64 %4788, ptrtoint (%G_0x344bb__rip__type* @G_0x344bb__rip_ to i64)
  %4790 = load i64, i64* %PC.i837
  %4791 = add i64 %4790, 8
  store i64 %4791, i64* %PC.i837
  %4792 = inttoptr i64 %4789 to double*
  %4793 = load double, double* %4792
  %4794 = bitcast i8* %4787 to double*
  store double %4793, double* %4794, align 1
  %4795 = getelementptr inbounds i8, i8* %4787, i64 8
  %4796 = bitcast i8* %4795 to double*
  store double 0.000000e+00, double* %4796, align 1
  store %struct.Memory* %loadMem_47d3c5, %struct.Memory** %MEMORY
  %loadMem_47d3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4798 = getelementptr inbounds %struct.GPR, %struct.GPR* %4797, i32 0, i32 33
  %4799 = getelementptr inbounds %struct.Reg, %struct.Reg* %4798, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %4799 to i64*
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4801 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4800, i64 0, i64 1
  %YMM1.i836 = bitcast %union.VectorReg* %4801 to %"class.std::bitset"*
  %4802 = bitcast %"class.std::bitset"* %YMM1.i836 to i8*
  %4803 = load i64, i64* %PC.i835
  %4804 = add i64 %4803, 9
  store i64 %4804, i64* %PC.i835
  %4805 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %4806 = bitcast i8* %4802 to double*
  store double %4805, double* %4806, align 1
  %4807 = getelementptr inbounds i8, i8* %4802, i64 8
  %4808 = bitcast i8* %4807 to double*
  store double 0.000000e+00, double* %4808, align 1
  store %struct.Memory* %loadMem_47d3cd, %struct.Memory** %MEMORY
  %loadMem_47d3d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 33
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4813 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4812, i64 0, i64 1
  %YMM1.i834 = bitcast %union.VectorReg* %4813 to %"class.std::bitset"*
  %4814 = bitcast %"class.std::bitset"* %YMM1.i834 to i8*
  %4815 = bitcast %"class.std::bitset"* %YMM1.i834 to i8*
  %4816 = load i64, i64* %PC.i833
  %4817 = add i64 %4816, 9
  store i64 %4817, i64* %PC.i833
  %4818 = bitcast i8* %4815 to double*
  %4819 = load double, double* %4818, align 1
  %4820 = getelementptr inbounds i8, i8* %4815, i64 8
  %4821 = bitcast i8* %4820 to i64*
  %4822 = load i64, i64* %4821, align 1
  %4823 = load double, double* bitcast (%G_0x6f6f80_type* @G_0x6f6f80 to double*)
  %4824 = fsub double %4819, %4823
  %4825 = bitcast i8* %4814 to double*
  store double %4824, double* %4825, align 1
  %4826 = getelementptr inbounds i8, i8* %4814, i64 8
  %4827 = bitcast i8* %4826 to i64*
  store i64 %4822, i64* %4827, align 1
  store %struct.Memory* %loadMem_47d3d6, %struct.Memory** %MEMORY
  %loadMem_47d3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 33
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %4830 to i64*
  %4831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4832 = getelementptr inbounds %struct.GPR, %struct.GPR* %4831, i32 0, i32 1
  %4833 = getelementptr inbounds %struct.Reg, %struct.Reg* %4832, i32 0, i32 0
  %RAX.i832 = bitcast %union.anon* %4833 to i64*
  %4834 = load i64, i64* %PC.i831
  %4835 = add i64 %4834, 7
  store i64 %4835, i64* %PC.i831
  %4836 = load i32, i32* bitcast (%G_0x6cc5dc_type* @G_0x6cc5dc to i32*)
  %4837 = zext i32 %4836 to i64
  store i64 %4837, i64* %RAX.i832, align 8
  store %struct.Memory* %loadMem_47d3df, %struct.Memory** %MEMORY
  %loadMem_47d3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4839 = getelementptr inbounds %struct.GPR, %struct.GPR* %4838, i32 0, i32 33
  %4840 = getelementptr inbounds %struct.Reg, %struct.Reg* %4839, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %4840 to i64*
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4842 = getelementptr inbounds %struct.GPR, %struct.GPR* %4841, i32 0, i32 1
  %4843 = getelementptr inbounds %struct.Reg, %struct.Reg* %4842, i32 0, i32 0
  %RAX.i830 = bitcast %union.anon* %4843 to i64*
  %4844 = load i64, i64* %RAX.i830
  %4845 = load i64, i64* %PC.i829
  %4846 = add i64 %4845, 7
  store i64 %4846, i64* %PC.i829
  %4847 = trunc i64 %4844 to i32
  %4848 = load i32, i32* bitcast (%G_0x6cc5e0_type* @G_0x6cc5e0 to i32*)
  %4849 = add i32 %4848, %4847
  %4850 = zext i32 %4849 to i64
  store i64 %4850, i64* %RAX.i830, align 8
  %4851 = icmp ult i32 %4849, %4847
  %4852 = icmp ult i32 %4849, %4848
  %4853 = or i1 %4851, %4852
  %4854 = zext i1 %4853 to i8
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4854, i8* %4855, align 1
  %4856 = and i32 %4849, 255
  %4857 = call i32 @llvm.ctpop.i32(i32 %4856)
  %4858 = trunc i32 %4857 to i8
  %4859 = and i8 %4858, 1
  %4860 = xor i8 %4859, 1
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4860, i8* %4861, align 1
  %4862 = xor i32 %4848, %4847
  %4863 = xor i32 %4862, %4849
  %4864 = lshr i32 %4863, 4
  %4865 = trunc i32 %4864 to i8
  %4866 = and i8 %4865, 1
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4866, i8* %4867, align 1
  %4868 = icmp eq i32 %4849, 0
  %4869 = zext i1 %4868 to i8
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4869, i8* %4870, align 1
  %4871 = lshr i32 %4849, 31
  %4872 = trunc i32 %4871 to i8
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4872, i8* %4873, align 1
  %4874 = lshr i32 %4847, 31
  %4875 = lshr i32 %4848, 31
  %4876 = xor i32 %4871, %4874
  %4877 = xor i32 %4871, %4875
  %4878 = add i32 %4876, %4877
  %4879 = icmp eq i32 %4878, 2
  %4880 = zext i1 %4879 to i8
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4880, i8* %4881, align 1
  store %struct.Memory* %loadMem_47d3e6, %struct.Memory** %MEMORY
  %loadMem_47d3ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4883 = getelementptr inbounds %struct.GPR, %struct.GPR* %4882, i32 0, i32 33
  %4884 = getelementptr inbounds %struct.Reg, %struct.Reg* %4883, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %4884 to i64*
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 1
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %EAX.i827 = bitcast %union.anon* %4887 to i32*
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4889 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4888, i64 0, i64 2
  %YMM2.i828 = bitcast %union.VectorReg* %4889 to %"class.std::bitset"*
  %4890 = bitcast %"class.std::bitset"* %YMM2.i828 to i8*
  %4891 = load i32, i32* %EAX.i827
  %4892 = zext i32 %4891 to i64
  %4893 = load i64, i64* %PC.i826
  %4894 = add i64 %4893, 4
  store i64 %4894, i64* %PC.i826
  %4895 = sitofp i32 %4891 to double
  %4896 = bitcast i8* %4890 to double*
  store double %4895, double* %4896, align 1
  store %struct.Memory* %loadMem_47d3ed, %struct.Memory** %MEMORY
  %loadMem_47d3f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4898 = getelementptr inbounds %struct.GPR, %struct.GPR* %4897, i32 0, i32 33
  %4899 = getelementptr inbounds %struct.Reg, %struct.Reg* %4898, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %4899 to i64*
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4901 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4900, i64 0, i64 1
  %YMM1.i824 = bitcast %union.VectorReg* %4901 to %"class.std::bitset"*
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4903 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4902, i64 0, i64 2
  %XMM2.i825 = bitcast %union.VectorReg* %4903 to %union.vec128_t*
  %4904 = bitcast %"class.std::bitset"* %YMM1.i824 to i8*
  %4905 = bitcast %"class.std::bitset"* %YMM1.i824 to i8*
  %4906 = bitcast %union.vec128_t* %XMM2.i825 to i8*
  %4907 = load i64, i64* %PC.i823
  %4908 = add i64 %4907, 4
  store i64 %4908, i64* %PC.i823
  %4909 = bitcast i8* %4905 to double*
  %4910 = load double, double* %4909, align 1
  %4911 = getelementptr inbounds i8, i8* %4905, i64 8
  %4912 = bitcast i8* %4911 to i64*
  %4913 = load i64, i64* %4912, align 1
  %4914 = bitcast i8* %4906 to double*
  %4915 = load double, double* %4914, align 1
  %4916 = fmul double %4910, %4915
  %4917 = bitcast i8* %4904 to double*
  store double %4916, double* %4917, align 1
  %4918 = getelementptr inbounds i8, i8* %4904, i64 8
  %4919 = bitcast i8* %4918 to i64*
  store i64 %4913, i64* %4919, align 1
  store %struct.Memory* %loadMem_47d3f1, %struct.Memory** %MEMORY
  %loadMem_47d3f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 33
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %4922 to i64*
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4924 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4923, i64 0, i64 1
  %YMM1.i822 = bitcast %union.VectorReg* %4924 to %"class.std::bitset"*
  %4925 = bitcast %"class.std::bitset"* %YMM1.i822 to i8*
  %4926 = bitcast %"class.std::bitset"* %YMM1.i822 to i8*
  %4927 = load i64, i64* %PC.i821
  %4928 = add i64 %4927, 9
  store i64 %4928, i64* %PC.i821
  %4929 = bitcast i8* %4926 to double*
  %4930 = load double, double* %4929, align 1
  %4931 = getelementptr inbounds i8, i8* %4926, i64 8
  %4932 = bitcast i8* %4931 to i64*
  %4933 = load i64, i64* %4932, align 1
  %4934 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %4935 = fdiv double %4930, %4934
  %4936 = bitcast i8* %4925 to double*
  store double %4935, double* %4936, align 1
  %4937 = getelementptr inbounds i8, i8* %4925, i64 8
  %4938 = bitcast i8* %4937 to i64*
  store i64 %4933, i64* %4938, align 1
  store %struct.Memory* %loadMem_47d3f5, %struct.Memory** %MEMORY
  %loadMem_47d3fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 33
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %4941 to i64*
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4942, i64 0, i64 1
  %YMM1.i819 = bitcast %union.VectorReg* %4943 to %"class.std::bitset"*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4945 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4944, i64 0, i64 0
  %XMM0.i820 = bitcast %union.VectorReg* %4945 to %union.vec128_t*
  %4946 = bitcast %"class.std::bitset"* %YMM1.i819 to i8*
  %4947 = bitcast %"class.std::bitset"* %YMM1.i819 to i8*
  %4948 = bitcast %union.vec128_t* %XMM0.i820 to i8*
  %4949 = load i64, i64* %PC.i818
  %4950 = add i64 %4949, 4
  store i64 %4950, i64* %PC.i818
  %4951 = bitcast i8* %4947 to double*
  %4952 = load double, double* %4951, align 1
  %4953 = getelementptr inbounds i8, i8* %4947, i64 8
  %4954 = bitcast i8* %4953 to i64*
  %4955 = load i64, i64* %4954, align 1
  %4956 = bitcast i8* %4948 to double*
  %4957 = load double, double* %4956, align 1
  %4958 = fadd double %4952, %4957
  %4959 = bitcast i8* %4946 to double*
  store double %4958, double* %4959, align 1
  %4960 = getelementptr inbounds i8, i8* %4946, i64 8
  %4961 = bitcast i8* %4960 to i64*
  store i64 %4955, i64* %4961, align 1
  store %struct.Memory* %loadMem_47d3fe, %struct.Memory** %MEMORY
  %loadMem_47d402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4963 = getelementptr inbounds %struct.GPR, %struct.GPR* %4962, i32 0, i32 33
  %4964 = getelementptr inbounds %struct.Reg, %struct.Reg* %4963, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %4964 to i64*
  %4965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4965, i64 0, i64 0
  %YMM0.i816 = bitcast %union.VectorReg* %4966 to %"class.std::bitset"*
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4967, i64 0, i64 1
  %XMM1.i817 = bitcast %union.VectorReg* %4968 to %union.vec128_t*
  %4969 = bitcast %"class.std::bitset"* %YMM0.i816 to i8*
  %4970 = bitcast %union.vec128_t* %XMM1.i817 to i8*
  %4971 = load i64, i64* %PC.i815
  %4972 = add i64 %4971, 3
  store i64 %4972, i64* %PC.i815
  %4973 = bitcast i8* %4970 to <2 x i32>*
  %4974 = load <2 x i32>, <2 x i32>* %4973, align 1
  %4975 = getelementptr inbounds i8, i8* %4970, i64 8
  %4976 = bitcast i8* %4975 to <2 x i32>*
  %4977 = load <2 x i32>, <2 x i32>* %4976, align 1
  %4978 = extractelement <2 x i32> %4974, i32 0
  %4979 = bitcast i8* %4969 to i32*
  store i32 %4978, i32* %4979, align 1
  %4980 = extractelement <2 x i32> %4974, i32 1
  %4981 = getelementptr inbounds i8, i8* %4969, i64 4
  %4982 = bitcast i8* %4981 to i32*
  store i32 %4980, i32* %4982, align 1
  %4983 = extractelement <2 x i32> %4977, i32 0
  %4984 = getelementptr inbounds i8, i8* %4969, i64 8
  %4985 = bitcast i8* %4984 to i32*
  store i32 %4983, i32* %4985, align 1
  %4986 = extractelement <2 x i32> %4977, i32 1
  %4987 = getelementptr inbounds i8, i8* %4969, i64 12
  %4988 = bitcast i8* %4987 to i32*
  store i32 %4986, i32* %4988, align 1
  store %struct.Memory* %loadMem_47d402, %struct.Memory** %MEMORY
  %loadMem1_47d405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4990 = getelementptr inbounds %struct.GPR, %struct.GPR* %4989, i32 0, i32 33
  %4991 = getelementptr inbounds %struct.Reg, %struct.Reg* %4990, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %4991 to i64*
  %4992 = load i64, i64* %PC.i814
  %4993 = add i64 %4992, -508501
  %4994 = load i64, i64* %PC.i814
  %4995 = add i64 %4994, 5
  %4996 = load i64, i64* %PC.i814
  %4997 = add i64 %4996, 5
  store i64 %4997, i64* %PC.i814
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4999 = load i64, i64* %4998, align 8
  %5000 = add i64 %4999, -8
  %5001 = inttoptr i64 %5000 to i64*
  store i64 %4995, i64* %5001
  store i64 %5000, i64* %4998, align 8
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4993, i64* %5002, align 8
  store %struct.Memory* %loadMem1_47d405, %struct.Memory** %MEMORY
  %loadMem2_47d405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d405 = load i64, i64* %3
  %5003 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d405)
  store %struct.Memory* %5003, %struct.Memory** %MEMORY
  %loadMem_47d40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5005 = getelementptr inbounds %struct.GPR, %struct.GPR* %5004, i32 0, i32 33
  %5006 = getelementptr inbounds %struct.Reg, %struct.Reg* %5005, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %5006 to i64*
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5008 = getelementptr inbounds %struct.GPR, %struct.GPR* %5007, i32 0, i32 1
  %5009 = getelementptr inbounds %struct.Reg, %struct.Reg* %5008, i32 0, i32 0
  %RAX.i811 = bitcast %union.anon* %5009 to i64*
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5011 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5010, i64 0, i64 0
  %XMM0.i812 = bitcast %union.VectorReg* %5011 to %union.vec128_t*
  %5012 = bitcast %union.vec128_t* %XMM0.i812 to i8*
  %5013 = load i64, i64* %PC.i810
  %5014 = add i64 %5013, 4
  store i64 %5014, i64* %PC.i810
  %5015 = bitcast i8* %5012 to double*
  %5016 = load double, double* %5015, align 1
  %5017 = call double @llvm.trunc.f64(double %5016)
  %5018 = call double @llvm.fabs.f64(double %5017)
  %5019 = fcmp ogt double %5018, 0x41DFFFFFFFC00000
  %5020 = fptosi double %5017 to i32
  %5021 = zext i32 %5020 to i64
  %5022 = select i1 %5019, i64 2147483648, i64 %5021
  store i64 %5022, i64* %RAX.i811, align 8
  store %struct.Memory* %loadMem_47d40a, %struct.Memory** %MEMORY
  %loadMem_47d40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5024 = getelementptr inbounds %struct.GPR, %struct.GPR* %5023, i32 0, i32 33
  %5025 = getelementptr inbounds %struct.Reg, %struct.Reg* %5024, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %5025 to i64*
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5027 = getelementptr inbounds %struct.GPR, %struct.GPR* %5026, i32 0, i32 1
  %5028 = getelementptr inbounds %struct.Reg, %struct.Reg* %5027, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %5028 to i64*
  %5029 = load i64, i64* %RAX.i809
  %5030 = load i64, i64* %PC.i808
  %5031 = add i64 %5030, 7
  store i64 %5031, i64* %PC.i808
  %5032 = trunc i64 %5029 to i32
  %5033 = load i32, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  %5034 = add i32 %5033, %5032
  %5035 = zext i32 %5034 to i64
  store i64 %5035, i64* %RAX.i809, align 8
  %5036 = icmp ult i32 %5034, %5032
  %5037 = icmp ult i32 %5034, %5033
  %5038 = or i1 %5036, %5037
  %5039 = zext i1 %5038 to i8
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5039, i8* %5040, align 1
  %5041 = and i32 %5034, 255
  %5042 = call i32 @llvm.ctpop.i32(i32 %5041)
  %5043 = trunc i32 %5042 to i8
  %5044 = and i8 %5043, 1
  %5045 = xor i8 %5044, 1
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5045, i8* %5046, align 1
  %5047 = xor i32 %5033, %5032
  %5048 = xor i32 %5047, %5034
  %5049 = lshr i32 %5048, 4
  %5050 = trunc i32 %5049 to i8
  %5051 = and i8 %5050, 1
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5051, i8* %5052, align 1
  %5053 = icmp eq i32 %5034, 0
  %5054 = zext i1 %5053 to i8
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5054, i8* %5055, align 1
  %5056 = lshr i32 %5034, 31
  %5057 = trunc i32 %5056 to i8
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5057, i8* %5058, align 1
  %5059 = lshr i32 %5032, 31
  %5060 = lshr i32 %5033, 31
  %5061 = xor i32 %5056, %5059
  %5062 = xor i32 %5056, %5060
  %5063 = add i32 %5061, %5062
  %5064 = icmp eq i32 %5063, 2
  %5065 = zext i1 %5064 to i8
  %5066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5065, i8* %5066, align 1
  store %struct.Memory* %loadMem_47d40e, %struct.Memory** %MEMORY
  %loadMem_47d415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 33
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %5069 to i64*
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 1
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %EAX.i807 = bitcast %union.anon* %5072 to i32*
  %5073 = load i32, i32* %EAX.i807
  %5074 = zext i32 %5073 to i64
  %5075 = load i64, i64* %PC.i806
  %5076 = add i64 %5075, 7
  store i64 %5076, i64* %PC.i806
  store i32 %5073, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  store %struct.Memory* %loadMem_47d415, %struct.Memory** %MEMORY
  br label %block_.L_47d41c

block_.L_47d41c:                                  ; preds = %block_.L_47d3c5, %block_47d3c0
  %loadMem_47d41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5078 = getelementptr inbounds %struct.GPR, %struct.GPR* %5077, i32 0, i32 33
  %5079 = getelementptr inbounds %struct.Reg, %struct.Reg* %5078, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %5079 to i64*
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5081 = getelementptr inbounds %struct.GPR, %struct.GPR* %5080, i32 0, i32 1
  %5082 = getelementptr inbounds %struct.Reg, %struct.Reg* %5081, i32 0, i32 0
  %RAX.i805 = bitcast %union.anon* %5082 to i64*
  %5083 = load i64, i64* %PC.i804
  %5084 = add i64 %5083, 8
  store i64 %5084, i64* %PC.i804
  %5085 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5085, i64* %RAX.i805, align 8
  store %struct.Memory* %loadMem_47d41c, %struct.Memory** %MEMORY
  %loadMem_47d424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5087 = getelementptr inbounds %struct.GPR, %struct.GPR* %5086, i32 0, i32 33
  %5088 = getelementptr inbounds %struct.Reg, %struct.Reg* %5087, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %5088 to i64*
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5090 = getelementptr inbounds %struct.GPR, %struct.GPR* %5089, i32 0, i32 1
  %5091 = getelementptr inbounds %struct.Reg, %struct.Reg* %5090, i32 0, i32 0
  %RAX.i803 = bitcast %union.anon* %5091 to i64*
  %5092 = load i64, i64* %RAX.i803
  %5093 = add i64 %5092, 72564
  %5094 = load i64, i64* %PC.i802
  %5095 = add i64 %5094, 7
  store i64 %5095, i64* %PC.i802
  %5096 = inttoptr i64 %5093 to i32*
  %5097 = load i32, i32* %5096
  %5098 = sub i32 %5097, 1
  %5099 = icmp ult i32 %5097, 1
  %5100 = zext i1 %5099 to i8
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5100, i8* %5101, align 1
  %5102 = and i32 %5098, 255
  %5103 = call i32 @llvm.ctpop.i32(i32 %5102)
  %5104 = trunc i32 %5103 to i8
  %5105 = and i8 %5104, 1
  %5106 = xor i8 %5105, 1
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5106, i8* %5107, align 1
  %5108 = xor i32 %5097, 1
  %5109 = xor i32 %5108, %5098
  %5110 = lshr i32 %5109, 4
  %5111 = trunc i32 %5110 to i8
  %5112 = and i8 %5111, 1
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5112, i8* %5113, align 1
  %5114 = icmp eq i32 %5098, 0
  %5115 = zext i1 %5114 to i8
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5115, i8* %5116, align 1
  %5117 = lshr i32 %5098, 31
  %5118 = trunc i32 %5117 to i8
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5118, i8* %5119, align 1
  %5120 = lshr i32 %5097, 31
  %5121 = xor i32 %5117, %5120
  %5122 = add i32 %5121, %5120
  %5123 = icmp eq i32 %5122, 2
  %5124 = zext i1 %5123 to i8
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5124, i8* %5125, align 1
  store %struct.Memory* %loadMem_47d424, %struct.Memory** %MEMORY
  %loadMem_47d42b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5127 = getelementptr inbounds %struct.GPR, %struct.GPR* %5126, i32 0, i32 33
  %5128 = getelementptr inbounds %struct.Reg, %struct.Reg* %5127, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %5128 to i64*
  %5129 = load i64, i64* %PC.i801
  %5130 = add i64 %5129, 68
  %5131 = load i64, i64* %PC.i801
  %5132 = add i64 %5131, 6
  %5133 = load i64, i64* %PC.i801
  %5134 = add i64 %5133, 6
  store i64 %5134, i64* %PC.i801
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5136 = load i8, i8* %5135, align 1
  %5137 = icmp eq i8 %5136, 0
  %5138 = zext i1 %5137 to i8
  store i8 %5138, i8* %BRANCH_TAKEN, align 1
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5140 = select i1 %5137, i64 %5130, i64 %5132
  store i64 %5140, i64* %5139, align 8
  store %struct.Memory* %loadMem_47d42b, %struct.Memory** %MEMORY
  %loadBr_47d42b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d42b = icmp eq i8 %loadBr_47d42b, 1
  br i1 %cmpBr_47d42b, label %block_.L_47d46f, label %block_47d431

block_47d431:                                     ; preds = %block_.L_47d41c
  %loadMem_47d431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5142 = getelementptr inbounds %struct.GPR, %struct.GPR* %5141, i32 0, i32 33
  %5143 = getelementptr inbounds %struct.Reg, %struct.Reg* %5142, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %5143 to i64*
  %5144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5145 = getelementptr inbounds %struct.GPR, %struct.GPR* %5144, i32 0, i32 1
  %5146 = getelementptr inbounds %struct.Reg, %struct.Reg* %5145, i32 0, i32 0
  %RAX.i800 = bitcast %union.anon* %5146 to i64*
  %5147 = load i64, i64* %PC.i799
  %5148 = add i64 %5147, 8
  store i64 %5148, i64* %PC.i799
  %5149 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5149, i64* %RAX.i800, align 8
  store %struct.Memory* %loadMem_47d431, %struct.Memory** %MEMORY
  %loadMem_47d439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 33
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %5152 to i64*
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 1
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %5155 to i64*
  %5156 = load i64, i64* %RAX.i798
  %5157 = add i64 %5156, 72560
  %5158 = load i64, i64* %PC.i797
  %5159 = add i64 %5158, 7
  store i64 %5159, i64* %PC.i797
  %5160 = inttoptr i64 %5157 to i32*
  %5161 = load i32, i32* %5160
  %5162 = sub i32 %5161, 1
  %5163 = icmp ult i32 %5161, 1
  %5164 = zext i1 %5163 to i8
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5164, i8* %5165, align 1
  %5166 = and i32 %5162, 255
  %5167 = call i32 @llvm.ctpop.i32(i32 %5166)
  %5168 = trunc i32 %5167 to i8
  %5169 = and i8 %5168, 1
  %5170 = xor i8 %5169, 1
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5170, i8* %5171, align 1
  %5172 = xor i32 %5161, 1
  %5173 = xor i32 %5172, %5162
  %5174 = lshr i32 %5173, 4
  %5175 = trunc i32 %5174 to i8
  %5176 = and i8 %5175, 1
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5176, i8* %5177, align 1
  %5178 = icmp eq i32 %5162, 0
  %5179 = zext i1 %5178 to i8
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5179, i8* %5180, align 1
  %5181 = lshr i32 %5162, 31
  %5182 = trunc i32 %5181 to i8
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5182, i8* %5183, align 1
  %5184 = lshr i32 %5161, 31
  %5185 = xor i32 %5181, %5184
  %5186 = add i32 %5185, %5184
  %5187 = icmp eq i32 %5186, 2
  %5188 = zext i1 %5187 to i8
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5188, i8* %5189, align 1
  store %struct.Memory* %loadMem_47d439, %struct.Memory** %MEMORY
  %loadMem_47d440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5191 = getelementptr inbounds %struct.GPR, %struct.GPR* %5190, i32 0, i32 33
  %5192 = getelementptr inbounds %struct.Reg, %struct.Reg* %5191, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %5192 to i64*
  %5193 = load i64, i64* %PC.i796
  %5194 = add i64 %5193, 47
  %5195 = load i64, i64* %PC.i796
  %5196 = add i64 %5195, 6
  %5197 = load i64, i64* %PC.i796
  %5198 = add i64 %5197, 6
  store i64 %5198, i64* %PC.i796
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5200 = load i8, i8* %5199, align 1
  %5201 = icmp eq i8 %5200, 0
  %5202 = zext i1 %5201 to i8
  store i8 %5202, i8* %BRANCH_TAKEN, align 1
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5204 = select i1 %5201, i64 %5194, i64 %5196
  store i64 %5204, i64* %5203, align 8
  store %struct.Memory* %loadMem_47d440, %struct.Memory** %MEMORY
  %loadBr_47d440 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d440 = icmp eq i8 %loadBr_47d440, 1
  br i1 %cmpBr_47d440, label %block_.L_47d46f, label %block_47d446

block_47d446:                                     ; preds = %block_47d431
  %loadMem_47d446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5206 = getelementptr inbounds %struct.GPR, %struct.GPR* %5205, i32 0, i32 33
  %5207 = getelementptr inbounds %struct.Reg, %struct.Reg* %5206, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %5207 to i64*
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5208, i64 0, i64 0
  %YMM0.i795 = bitcast %union.VectorReg* %5209 to %"class.std::bitset"*
  %5210 = bitcast %"class.std::bitset"* %YMM0.i795 to i8*
  %5211 = load i64, i64* %PC.i794
  %5212 = add i64 %5211, 9
  store i64 %5212, i64* %PC.i794
  %5213 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %5214 = bitcast i8* %5210 to double*
  store double %5213, double* %5214, align 1
  %5215 = getelementptr inbounds i8, i8* %5210, i64 8
  %5216 = bitcast i8* %5215 to double*
  store double 0.000000e+00, double* %5216, align 1
  store %struct.Memory* %loadMem_47d446, %struct.Memory** %MEMORY
  %loadMem_47d44f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5218 = getelementptr inbounds %struct.GPR, %struct.GPR* %5217, i32 0, i32 33
  %5219 = getelementptr inbounds %struct.Reg, %struct.Reg* %5218, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %5219 to i64*
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5221 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5220, i64 0, i64 0
  %XMM0.i793 = bitcast %union.VectorReg* %5221 to %union.vec128_t*
  %5222 = bitcast %union.vec128_t* %XMM0.i793 to i8*
  %5223 = load i64, i64* %PC.i792
  %5224 = add i64 %5223, 9
  store i64 %5224, i64* %PC.i792
  %5225 = bitcast i8* %5222 to double*
  %5226 = load double, double* %5225, align 1
  store double %5226, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  store %struct.Memory* %loadMem_47d44f, %struct.Memory** %MEMORY
  %loadMem_47d458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5228 = getelementptr inbounds %struct.GPR, %struct.GPR* %5227, i32 0, i32 33
  %5229 = getelementptr inbounds %struct.Reg, %struct.Reg* %5228, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %5229 to i64*
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5231 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5230, i64 0, i64 0
  %YMM0.i791 = bitcast %union.VectorReg* %5231 to %"class.std::bitset"*
  %5232 = bitcast %"class.std::bitset"* %YMM0.i791 to i8*
  %5233 = load i64, i64* %PC.i790
  %5234 = add i64 %5233, 9
  store i64 %5234, i64* %PC.i790
  %5235 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %5236 = bitcast i8* %5232 to double*
  store double %5235, double* %5236, align 1
  %5237 = getelementptr inbounds i8, i8* %5232, i64 8
  %5238 = bitcast i8* %5237 to double*
  store double 0.000000e+00, double* %5238, align 1
  store %struct.Memory* %loadMem_47d458, %struct.Memory** %MEMORY
  %loadMem_47d461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5240 = getelementptr inbounds %struct.GPR, %struct.GPR* %5239, i32 0, i32 33
  %5241 = getelementptr inbounds %struct.Reg, %struct.Reg* %5240, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %5241 to i64*
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5243 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5242, i64 0, i64 0
  %XMM0.i789 = bitcast %union.VectorReg* %5243 to %union.vec128_t*
  %5244 = bitcast %union.vec128_t* %XMM0.i789 to i8*
  %5245 = load i64, i64* %PC.i788
  %5246 = add i64 %5245, 9
  store i64 %5246, i64* %PC.i788
  %5247 = bitcast i8* %5244 to double*
  %5248 = load double, double* %5247, align 1
  store double %5248, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  store %struct.Memory* %loadMem_47d461, %struct.Memory** %MEMORY
  %loadMem_47d46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5250 = getelementptr inbounds %struct.GPR, %struct.GPR* %5249, i32 0, i32 33
  %5251 = getelementptr inbounds %struct.Reg, %struct.Reg* %5250, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %5251 to i64*
  %5252 = load i64, i64* %PC.i787
  %5253 = add i64 %5252, 213
  %5254 = load i64, i64* %PC.i787
  %5255 = add i64 %5254, 5
  store i64 %5255, i64* %PC.i787
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5253, i64* %5256, align 8
  store %struct.Memory* %loadMem_47d46a, %struct.Memory** %MEMORY
  br label %block_.L_47d53f

block_.L_47d46f:                                  ; preds = %block_47d431, %block_.L_47d41c
  %loadMem_47d46f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5258 = getelementptr inbounds %struct.GPR, %struct.GPR* %5257, i32 0, i32 33
  %5259 = getelementptr inbounds %struct.Reg, %struct.Reg* %5258, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %5259 to i64*
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5261 = getelementptr inbounds %struct.GPR, %struct.GPR* %5260, i32 0, i32 1
  %5262 = getelementptr inbounds %struct.Reg, %struct.Reg* %5261, i32 0, i32 0
  %RAX.i786 = bitcast %union.anon* %5262 to i64*
  %5263 = load i64, i64* %PC.i785
  %5264 = add i64 %5263, 8
  store i64 %5264, i64* %PC.i785
  %5265 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5265, i64* %RAX.i786, align 8
  store %struct.Memory* %loadMem_47d46f, %struct.Memory** %MEMORY
  %loadMem_47d477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 33
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %5268 to i64*
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5270 = getelementptr inbounds %struct.GPR, %struct.GPR* %5269, i32 0, i32 1
  %5271 = getelementptr inbounds %struct.Reg, %struct.Reg* %5270, i32 0, i32 0
  %RAX.i784 = bitcast %union.anon* %5271 to i64*
  %5272 = load i64, i64* %RAX.i784
  %5273 = add i64 %5272, 72560
  %5274 = load i64, i64* %PC.i783
  %5275 = add i64 %5274, 7
  store i64 %5275, i64* %PC.i783
  %5276 = inttoptr i64 %5273 to i32*
  %5277 = load i32, i32* %5276
  %5278 = sub i32 %5277, 1
  %5279 = icmp ult i32 %5277, 1
  %5280 = zext i1 %5279 to i8
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5280, i8* %5281, align 1
  %5282 = and i32 %5278, 255
  %5283 = call i32 @llvm.ctpop.i32(i32 %5282)
  %5284 = trunc i32 %5283 to i8
  %5285 = and i8 %5284, 1
  %5286 = xor i8 %5285, 1
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5286, i8* %5287, align 1
  %5288 = xor i32 %5277, 1
  %5289 = xor i32 %5288, %5278
  %5290 = lshr i32 %5289, 4
  %5291 = trunc i32 %5290 to i8
  %5292 = and i8 %5291, 1
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5292, i8* %5293, align 1
  %5294 = icmp eq i32 %5278, 0
  %5295 = zext i1 %5294 to i8
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5295, i8* %5296, align 1
  %5297 = lshr i32 %5278, 31
  %5298 = trunc i32 %5297 to i8
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5298, i8* %5299, align 1
  %5300 = lshr i32 %5277, 31
  %5301 = xor i32 %5297, %5300
  %5302 = add i32 %5301, %5300
  %5303 = icmp eq i32 %5302, 2
  %5304 = zext i1 %5303 to i8
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5304, i8* %5305, align 1
  store %struct.Memory* %loadMem_47d477, %struct.Memory** %MEMORY
  %loadMem_47d47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5307 = getelementptr inbounds %struct.GPR, %struct.GPR* %5306, i32 0, i32 33
  %5308 = getelementptr inbounds %struct.Reg, %struct.Reg* %5307, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %5308 to i64*
  %5309 = load i64, i64* %PC.i782
  %5310 = add i64 %5309, 188
  %5311 = load i64, i64* %PC.i782
  %5312 = add i64 %5311, 6
  %5313 = load i64, i64* %PC.i782
  %5314 = add i64 %5313, 6
  store i64 %5314, i64* %PC.i782
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5316 = load i8, i8* %5315, align 1
  %5317 = icmp ne i8 %5316, 0
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5319 = load i8, i8* %5318, align 1
  %5320 = icmp ne i8 %5319, 0
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5322 = load i8, i8* %5321, align 1
  %5323 = icmp ne i8 %5322, 0
  %5324 = xor i1 %5320, %5323
  %5325 = or i1 %5317, %5324
  %5326 = zext i1 %5325 to i8
  store i8 %5326, i8* %BRANCH_TAKEN, align 1
  %5327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5328 = select i1 %5325, i64 %5310, i64 %5312
  store i64 %5328, i64* %5327, align 8
  store %struct.Memory* %loadMem_47d47e, %struct.Memory** %MEMORY
  %loadBr_47d47e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d47e = icmp eq i8 %loadBr_47d47e, 1
  br i1 %cmpBr_47d47e, label %block_.L_47d53a, label %block_47d484

block_47d484:                                     ; preds = %block_.L_47d46f
  %loadMem_47d484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5330 = getelementptr inbounds %struct.GPR, %struct.GPR* %5329, i32 0, i32 33
  %5331 = getelementptr inbounds %struct.Reg, %struct.Reg* %5330, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %5331 to i64*
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5333 = getelementptr inbounds %struct.GPR, %struct.GPR* %5332, i32 0, i32 1
  %5334 = getelementptr inbounds %struct.Reg, %struct.Reg* %5333, i32 0, i32 0
  %RAX.i781 = bitcast %union.anon* %5334 to i64*
  %5335 = load i64, i64* %PC.i780
  %5336 = add i64 %5335, 8
  store i64 %5336, i64* %PC.i780
  %5337 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5337, i64* %RAX.i781, align 8
  store %struct.Memory* %loadMem_47d484, %struct.Memory** %MEMORY
  %loadMem_47d48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 33
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %5340 to i64*
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 1
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %RAX.i779 = bitcast %union.anon* %5343 to i64*
  %5344 = load i64, i64* %RAX.i779
  %5345 = add i64 %5344, 72560
  %5346 = load i64, i64* %PC.i778
  %5347 = add i64 %5346, 7
  store i64 %5347, i64* %PC.i778
  %5348 = inttoptr i64 %5345 to i32*
  %5349 = load i32, i32* %5348
  %5350 = sub i32 %5349, 8
  %5351 = icmp ult i32 %5349, 8
  %5352 = zext i1 %5351 to i8
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5352, i8* %5353, align 1
  %5354 = and i32 %5350, 255
  %5355 = call i32 @llvm.ctpop.i32(i32 %5354)
  %5356 = trunc i32 %5355 to i8
  %5357 = and i8 %5356, 1
  %5358 = xor i8 %5357, 1
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5358, i8* %5359, align 1
  %5360 = xor i32 %5349, 8
  %5361 = xor i32 %5360, %5350
  %5362 = lshr i32 %5361, 4
  %5363 = trunc i32 %5362 to i8
  %5364 = and i8 %5363, 1
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5364, i8* %5365, align 1
  %5366 = icmp eq i32 %5350, 0
  %5367 = zext i1 %5366 to i8
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5367, i8* %5368, align 1
  %5369 = lshr i32 %5350, 31
  %5370 = trunc i32 %5369 to i8
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5370, i8* %5371, align 1
  %5372 = lshr i32 %5349, 31
  %5373 = xor i32 %5369, %5372
  %5374 = add i32 %5373, %5372
  %5375 = icmp eq i32 %5374, 2
  %5376 = zext i1 %5375 to i8
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5376, i8* %5377, align 1
  store %struct.Memory* %loadMem_47d48c, %struct.Memory** %MEMORY
  %loadMem_47d493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5379 = getelementptr inbounds %struct.GPR, %struct.GPR* %5378, i32 0, i32 33
  %5380 = getelementptr inbounds %struct.Reg, %struct.Reg* %5379, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %5380 to i64*
  %5381 = load i64, i64* %PC.i777
  %5382 = add i64 %5381, 107
  %5383 = load i64, i64* %PC.i777
  %5384 = add i64 %5383, 6
  %5385 = load i64, i64* %PC.i777
  %5386 = add i64 %5385, 6
  store i64 %5386, i64* %PC.i777
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5388 = load i8, i8* %5387, align 1
  %5389 = icmp ne i8 %5388, 0
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5391 = load i8, i8* %5390, align 1
  %5392 = icmp ne i8 %5391, 0
  %5393 = xor i1 %5389, %5392
  %5394 = xor i1 %5393, true
  %5395 = zext i1 %5394 to i8
  store i8 %5395, i8* %BRANCH_TAKEN, align 1
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5397 = select i1 %5393, i64 %5384, i64 %5382
  store i64 %5397, i64* %5396, align 8
  store %struct.Memory* %loadMem_47d493, %struct.Memory** %MEMORY
  %loadBr_47d493 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d493 = icmp eq i8 %loadBr_47d493, 1
  br i1 %cmpBr_47d493, label %block_.L_47d4fe, label %block_47d499

block_47d499:                                     ; preds = %block_47d484
  %loadMem_47d499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5399 = getelementptr inbounds %struct.GPR, %struct.GPR* %5398, i32 0, i32 33
  %5400 = getelementptr inbounds %struct.Reg, %struct.Reg* %5399, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %5400 to i64*
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5402 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5401, i64 0, i64 0
  %YMM0.i776 = bitcast %union.VectorReg* %5402 to %"class.std::bitset"*
  %5403 = bitcast %"class.std::bitset"* %YMM0.i776 to i8*
  %5404 = load i64, i64* %PC.i775
  %5405 = add i64 %5404, 9
  store i64 %5405, i64* %PC.i775
  %5406 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %5407 = bitcast i8* %5403 to double*
  store double %5406, double* %5407, align 1
  %5408 = getelementptr inbounds i8, i8* %5403, i64 8
  %5409 = bitcast i8* %5408 to double*
  store double 0.000000e+00, double* %5409, align 1
  store %struct.Memory* %loadMem_47d499, %struct.Memory** %MEMORY
  %loadMem_47d4a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5411 = getelementptr inbounds %struct.GPR, %struct.GPR* %5410, i32 0, i32 33
  %5412 = getelementptr inbounds %struct.Reg, %struct.Reg* %5411, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %5412 to i64*
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5414 = getelementptr inbounds %struct.GPR, %struct.GPR* %5413, i32 0, i32 1
  %5415 = getelementptr inbounds %struct.Reg, %struct.Reg* %5414, i32 0, i32 0
  %RAX.i774 = bitcast %union.anon* %5415 to i64*
  %5416 = load i64, i64* %PC.i773
  %5417 = add i64 %5416, 8
  store i64 %5417, i64* %PC.i773
  %5418 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5418, i64* %RAX.i774, align 8
  store %struct.Memory* %loadMem_47d4a2, %struct.Memory** %MEMORY
  %loadMem_47d4aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5420 = getelementptr inbounds %struct.GPR, %struct.GPR* %5419, i32 0, i32 33
  %5421 = getelementptr inbounds %struct.Reg, %struct.Reg* %5420, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %5421 to i64*
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5423 = getelementptr inbounds %struct.GPR, %struct.GPR* %5422, i32 0, i32 1
  %5424 = getelementptr inbounds %struct.Reg, %struct.Reg* %5423, i32 0, i32 0
  %RAX.i771 = bitcast %union.anon* %5424 to i64*
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5426 = getelementptr inbounds %struct.GPR, %struct.GPR* %5425, i32 0, i32 5
  %5427 = getelementptr inbounds %struct.Reg, %struct.Reg* %5426, i32 0, i32 0
  %RCX.i772 = bitcast %union.anon* %5427 to i64*
  %5428 = load i64, i64* %RAX.i771
  %5429 = add i64 %5428, 72560
  %5430 = load i64, i64* %PC.i770
  %5431 = add i64 %5430, 6
  store i64 %5431, i64* %PC.i770
  %5432 = inttoptr i64 %5429 to i32*
  %5433 = load i32, i32* %5432
  %5434 = zext i32 %5433 to i64
  store i64 %5434, i64* %RCX.i772, align 8
  store %struct.Memory* %loadMem_47d4aa, %struct.Memory** %MEMORY
  %loadMem_47d4b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5436 = getelementptr inbounds %struct.GPR, %struct.GPR* %5435, i32 0, i32 33
  %5437 = getelementptr inbounds %struct.Reg, %struct.Reg* %5436, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %5437 to i64*
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5439 = getelementptr inbounds %struct.GPR, %struct.GPR* %5438, i32 0, i32 5
  %5440 = getelementptr inbounds %struct.Reg, %struct.Reg* %5439, i32 0, i32 0
  %RCX.i769 = bitcast %union.anon* %5440 to i64*
  %5441 = load i64, i64* %RCX.i769
  %5442 = load i64, i64* %PC.i768
  %5443 = add i64 %5442, 3
  store i64 %5443, i64* %PC.i768
  %5444 = trunc i64 %5441 to i32
  %5445 = sub i32 %5444, 1
  %5446 = zext i32 %5445 to i64
  store i64 %5446, i64* %RCX.i769, align 8
  %5447 = icmp ult i32 %5444, 1
  %5448 = zext i1 %5447 to i8
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5448, i8* %5449, align 1
  %5450 = and i32 %5445, 255
  %5451 = call i32 @llvm.ctpop.i32(i32 %5450)
  %5452 = trunc i32 %5451 to i8
  %5453 = and i8 %5452, 1
  %5454 = xor i8 %5453, 1
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5454, i8* %5455, align 1
  %5456 = xor i64 1, %5441
  %5457 = trunc i64 %5456 to i32
  %5458 = xor i32 %5457, %5445
  %5459 = lshr i32 %5458, 4
  %5460 = trunc i32 %5459 to i8
  %5461 = and i8 %5460, 1
  %5462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5461, i8* %5462, align 1
  %5463 = icmp eq i32 %5445, 0
  %5464 = zext i1 %5463 to i8
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5464, i8* %5465, align 1
  %5466 = lshr i32 %5445, 31
  %5467 = trunc i32 %5466 to i8
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5467, i8* %5468, align 1
  %5469 = lshr i32 %5444, 31
  %5470 = xor i32 %5466, %5469
  %5471 = add i32 %5470, %5469
  %5472 = icmp eq i32 %5471, 2
  %5473 = zext i1 %5472 to i8
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5473, i8* %5474, align 1
  store %struct.Memory* %loadMem_47d4b0, %struct.Memory** %MEMORY
  %loadMem_47d4b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 33
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %5477 to i64*
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5479 = getelementptr inbounds %struct.GPR, %struct.GPR* %5478, i32 0, i32 5
  %5480 = getelementptr inbounds %struct.Reg, %struct.Reg* %5479, i32 0, i32 0
  %ECX.i766 = bitcast %union.anon* %5480 to i32*
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5482 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5481, i64 0, i64 1
  %YMM1.i767 = bitcast %union.VectorReg* %5482 to %"class.std::bitset"*
  %5483 = bitcast %"class.std::bitset"* %YMM1.i767 to i8*
  %5484 = load i32, i32* %ECX.i766
  %5485 = zext i32 %5484 to i64
  %5486 = load i64, i64* %PC.i765
  %5487 = add i64 %5486, 4
  store i64 %5487, i64* %PC.i765
  %5488 = sitofp i32 %5484 to double
  %5489 = bitcast i8* %5483 to double*
  store double %5488, double* %5489, align 1
  store %struct.Memory* %loadMem_47d4b3, %struct.Memory** %MEMORY
  %loadMem_47d4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5491 = getelementptr inbounds %struct.GPR, %struct.GPR* %5490, i32 0, i32 33
  %5492 = getelementptr inbounds %struct.Reg, %struct.Reg* %5491, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %5492 to i64*
  %5493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5494 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5493, i64 0, i64 0
  %YMM0.i763 = bitcast %union.VectorReg* %5494 to %"class.std::bitset"*
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5496 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5495, i64 0, i64 1
  %XMM1.i764 = bitcast %union.VectorReg* %5496 to %union.vec128_t*
  %5497 = bitcast %"class.std::bitset"* %YMM0.i763 to i8*
  %5498 = bitcast %"class.std::bitset"* %YMM0.i763 to i8*
  %5499 = bitcast %union.vec128_t* %XMM1.i764 to i8*
  %5500 = load i64, i64* %PC.i762
  %5501 = add i64 %5500, 4
  store i64 %5501, i64* %PC.i762
  %5502 = bitcast i8* %5498 to double*
  %5503 = load double, double* %5502, align 1
  %5504 = getelementptr inbounds i8, i8* %5498, i64 8
  %5505 = bitcast i8* %5504 to i64*
  %5506 = load i64, i64* %5505, align 1
  %5507 = bitcast i8* %5499 to double*
  %5508 = load double, double* %5507, align 1
  %5509 = fmul double %5503, %5508
  %5510 = bitcast i8* %5497 to double*
  store double %5509, double* %5510, align 1
  %5511 = getelementptr inbounds i8, i8* %5497, i64 8
  %5512 = bitcast i8* %5511 to i64*
  store i64 %5506, i64* %5512, align 1
  store %struct.Memory* %loadMem_47d4b7, %struct.Memory** %MEMORY
  %loadMem_47d4bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5514 = getelementptr inbounds %struct.GPR, %struct.GPR* %5513, i32 0, i32 33
  %5515 = getelementptr inbounds %struct.Reg, %struct.Reg* %5514, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %5515 to i64*
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5517 = getelementptr inbounds %struct.GPR, %struct.GPR* %5516, i32 0, i32 1
  %5518 = getelementptr inbounds %struct.Reg, %struct.Reg* %5517, i32 0, i32 0
  %RAX.i761 = bitcast %union.anon* %5518 to i64*
  %5519 = load i64, i64* %PC.i760
  %5520 = add i64 %5519, 8
  store i64 %5520, i64* %PC.i760
  %5521 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5521, i64* %RAX.i761, align 8
  store %struct.Memory* %loadMem_47d4bb, %struct.Memory** %MEMORY
  %loadMem_47d4c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5523 = getelementptr inbounds %struct.GPR, %struct.GPR* %5522, i32 0, i32 33
  %5524 = getelementptr inbounds %struct.Reg, %struct.Reg* %5523, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %5524 to i64*
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5526 = getelementptr inbounds %struct.GPR, %struct.GPR* %5525, i32 0, i32 1
  %5527 = getelementptr inbounds %struct.Reg, %struct.Reg* %5526, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %5527 to i64*
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5529 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5528, i64 0, i64 1
  %YMM1.i759 = bitcast %union.VectorReg* %5529 to %"class.std::bitset"*
  %5530 = bitcast %"class.std::bitset"* %YMM1.i759 to i8*
  %5531 = load i64, i64* %RAX.i758
  %5532 = add i64 %5531, 72560
  %5533 = load i64, i64* %PC.i757
  %5534 = add i64 %5533, 8
  store i64 %5534, i64* %PC.i757
  %5535 = inttoptr i64 %5532 to i32*
  %5536 = load i32, i32* %5535
  %5537 = sitofp i32 %5536 to double
  %5538 = bitcast i8* %5530 to double*
  store double %5537, double* %5538, align 1
  store %struct.Memory* %loadMem_47d4c3, %struct.Memory** %MEMORY
  %loadMem_47d4cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5540 = getelementptr inbounds %struct.GPR, %struct.GPR* %5539, i32 0, i32 33
  %5541 = getelementptr inbounds %struct.Reg, %struct.Reg* %5540, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %5541 to i64*
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5543 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5542, i64 0, i64 0
  %YMM0.i755 = bitcast %union.VectorReg* %5543 to %"class.std::bitset"*
  %5544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5545 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5544, i64 0, i64 1
  %XMM1.i756 = bitcast %union.VectorReg* %5545 to %union.vec128_t*
  %5546 = bitcast %"class.std::bitset"* %YMM0.i755 to i8*
  %5547 = bitcast %"class.std::bitset"* %YMM0.i755 to i8*
  %5548 = bitcast %union.vec128_t* %XMM1.i756 to i8*
  %5549 = load i64, i64* %PC.i754
  %5550 = add i64 %5549, 4
  store i64 %5550, i64* %PC.i754
  %5551 = bitcast i8* %5547 to double*
  %5552 = load double, double* %5551, align 1
  %5553 = getelementptr inbounds i8, i8* %5547, i64 8
  %5554 = bitcast i8* %5553 to i64*
  %5555 = load i64, i64* %5554, align 1
  %5556 = bitcast i8* %5548 to double*
  %5557 = load double, double* %5556, align 1
  %5558 = fdiv double %5552, %5557
  %5559 = bitcast i8* %5546 to double*
  store double %5558, double* %5559, align 1
  %5560 = getelementptr inbounds i8, i8* %5546, i64 8
  %5561 = bitcast i8* %5560 to i64*
  store i64 %5555, i64* %5561, align 1
  store %struct.Memory* %loadMem_47d4cb, %struct.Memory** %MEMORY
  %loadMem_47d4cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 33
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %5564 to i64*
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5566 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5565, i64 0, i64 1
  %YMM1.i753 = bitcast %union.VectorReg* %5566 to %"class.std::bitset"*
  %5567 = bitcast %"class.std::bitset"* %YMM1.i753 to i8*
  %5568 = load i64, i64* %PC.i752
  %5569 = add i64 %5568, 9
  store i64 %5569, i64* %PC.i752
  %5570 = load double, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  %5571 = bitcast i8* %5567 to double*
  store double %5570, double* %5571, align 1
  %5572 = getelementptr inbounds i8, i8* %5567, i64 8
  %5573 = bitcast i8* %5572 to double*
  store double 0.000000e+00, double* %5573, align 1
  store %struct.Memory* %loadMem_47d4cf, %struct.Memory** %MEMORY
  %loadMem_47d4d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5575 = getelementptr inbounds %struct.GPR, %struct.GPR* %5574, i32 0, i32 33
  %5576 = getelementptr inbounds %struct.Reg, %struct.Reg* %5575, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %5576 to i64*
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5578 = getelementptr inbounds %struct.GPR, %struct.GPR* %5577, i32 0, i32 1
  %5579 = getelementptr inbounds %struct.Reg, %struct.Reg* %5578, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %5579 to i64*
  %5580 = load i64, i64* %PC.i750
  %5581 = add i64 %5580, 8
  store i64 %5581, i64* %PC.i750
  %5582 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5582, i64* %RAX.i751, align 8
  store %struct.Memory* %loadMem_47d4d8, %struct.Memory** %MEMORY
  %loadMem_47d4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5584 = getelementptr inbounds %struct.GPR, %struct.GPR* %5583, i32 0, i32 33
  %5585 = getelementptr inbounds %struct.Reg, %struct.Reg* %5584, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %5585 to i64*
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5587 = getelementptr inbounds %struct.GPR, %struct.GPR* %5586, i32 0, i32 1
  %5588 = getelementptr inbounds %struct.Reg, %struct.Reg* %5587, i32 0, i32 0
  %RAX.i748 = bitcast %union.anon* %5588 to i64*
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5590 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5589, i64 0, i64 2
  %YMM2.i749 = bitcast %union.VectorReg* %5590 to %"class.std::bitset"*
  %5591 = bitcast %"class.std::bitset"* %YMM2.i749 to i8*
  %5592 = load i64, i64* %RAX.i748
  %5593 = add i64 %5592, 72560
  %5594 = load i64, i64* %PC.i747
  %5595 = add i64 %5594, 8
  store i64 %5595, i64* %PC.i747
  %5596 = inttoptr i64 %5593 to i32*
  %5597 = load i32, i32* %5596
  %5598 = sitofp i32 %5597 to double
  %5599 = bitcast i8* %5591 to double*
  store double %5598, double* %5599, align 1
  store %struct.Memory* %loadMem_47d4e0, %struct.Memory** %MEMORY
  %loadMem_47d4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 33
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %5602 to i64*
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5604 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5603, i64 0, i64 1
  %YMM1.i745 = bitcast %union.VectorReg* %5604 to %"class.std::bitset"*
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5606 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5605, i64 0, i64 2
  %XMM2.i746 = bitcast %union.VectorReg* %5606 to %union.vec128_t*
  %5607 = bitcast %"class.std::bitset"* %YMM1.i745 to i8*
  %5608 = bitcast %"class.std::bitset"* %YMM1.i745 to i8*
  %5609 = bitcast %union.vec128_t* %XMM2.i746 to i8*
  %5610 = load i64, i64* %PC.i744
  %5611 = add i64 %5610, 4
  store i64 %5611, i64* %PC.i744
  %5612 = bitcast i8* %5608 to double*
  %5613 = load double, double* %5612, align 1
  %5614 = getelementptr inbounds i8, i8* %5608, i64 8
  %5615 = bitcast i8* %5614 to i64*
  %5616 = load i64, i64* %5615, align 1
  %5617 = bitcast i8* %5609 to double*
  %5618 = load double, double* %5617, align 1
  %5619 = fdiv double %5613, %5618
  %5620 = bitcast i8* %5607 to double*
  store double %5619, double* %5620, align 1
  %5621 = getelementptr inbounds i8, i8* %5607, i64 8
  %5622 = bitcast i8* %5621 to i64*
  store i64 %5616, i64* %5622, align 1
  store %struct.Memory* %loadMem_47d4e8, %struct.Memory** %MEMORY
  %loadMem_47d4ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 33
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %5625 to i64*
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5627 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5626, i64 0, i64 0
  %YMM0.i742 = bitcast %union.VectorReg* %5627 to %"class.std::bitset"*
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5629 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5628, i64 0, i64 1
  %XMM1.i743 = bitcast %union.VectorReg* %5629 to %union.vec128_t*
  %5630 = bitcast %"class.std::bitset"* %YMM0.i742 to i8*
  %5631 = bitcast %"class.std::bitset"* %YMM0.i742 to i8*
  %5632 = bitcast %union.vec128_t* %XMM1.i743 to i8*
  %5633 = load i64, i64* %PC.i741
  %5634 = add i64 %5633, 4
  store i64 %5634, i64* %PC.i741
  %5635 = bitcast i8* %5631 to double*
  %5636 = load double, double* %5635, align 1
  %5637 = getelementptr inbounds i8, i8* %5631, i64 8
  %5638 = bitcast i8* %5637 to i64*
  %5639 = load i64, i64* %5638, align 1
  %5640 = bitcast i8* %5632 to double*
  %5641 = load double, double* %5640, align 1
  %5642 = fadd double %5636, %5641
  %5643 = bitcast i8* %5630 to double*
  store double %5642, double* %5643, align 1
  %5644 = getelementptr inbounds i8, i8* %5630, i64 8
  %5645 = bitcast i8* %5644 to i64*
  store i64 %5639, i64* %5645, align 1
  store %struct.Memory* %loadMem_47d4ec, %struct.Memory** %MEMORY
  %loadMem_47d4f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5647 = getelementptr inbounds %struct.GPR, %struct.GPR* %5646, i32 0, i32 33
  %5648 = getelementptr inbounds %struct.Reg, %struct.Reg* %5647, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %5648 to i64*
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5650 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5649, i64 0, i64 0
  %XMM0.i740 = bitcast %union.VectorReg* %5650 to %union.vec128_t*
  %5651 = bitcast %union.vec128_t* %XMM0.i740 to i8*
  %5652 = load i64, i64* %PC.i739
  %5653 = add i64 %5652, 9
  store i64 %5653, i64* %PC.i739
  %5654 = bitcast i8* %5651 to double*
  %5655 = load double, double* %5654, align 1
  store double %5655, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  store %struct.Memory* %loadMem_47d4f0, %struct.Memory** %MEMORY
  %loadMem_47d4f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5657 = getelementptr inbounds %struct.GPR, %struct.GPR* %5656, i32 0, i32 33
  %5658 = getelementptr inbounds %struct.Reg, %struct.Reg* %5657, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %5658 to i64*
  %5659 = load i64, i64* %PC.i738
  %5660 = add i64 %5659, 60
  %5661 = load i64, i64* %PC.i738
  %5662 = add i64 %5661, 5
  store i64 %5662, i64* %PC.i738
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5660, i64* %5663, align 8
  store %struct.Memory* %loadMem_47d4f9, %struct.Memory** %MEMORY
  br label %block_.L_47d535

block_.L_47d4fe:                                  ; preds = %block_47d484
  %loadMem_47d4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5665 = getelementptr inbounds %struct.GPR, %struct.GPR* %5664, i32 0, i32 33
  %5666 = getelementptr inbounds %struct.Reg, %struct.Reg* %5665, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %5666 to i64*
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5668 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5667, i64 0, i64 0
  %YMM0.i737 = bitcast %union.VectorReg* %5668 to %"class.std::bitset"*
  %5669 = bitcast %"class.std::bitset"* %YMM0.i737 to i8*
  %5670 = load i64, i64* %PC.i736
  %5671 = add i64 %5670, ptrtoint (%G_0x343ba__rip__type* @G_0x343ba__rip_ to i64)
  %5672 = load i64, i64* %PC.i736
  %5673 = add i64 %5672, 8
  store i64 %5673, i64* %PC.i736
  %5674 = inttoptr i64 %5671 to double*
  %5675 = load double, double* %5674
  %5676 = bitcast i8* %5669 to double*
  store double %5675, double* %5676, align 1
  %5677 = getelementptr inbounds i8, i8* %5669, i64 8
  %5678 = bitcast i8* %5677 to double*
  store double 0.000000e+00, double* %5678, align 1
  store %struct.Memory* %loadMem_47d4fe, %struct.Memory** %MEMORY
  %loadMem_47d506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5680 = getelementptr inbounds %struct.GPR, %struct.GPR* %5679, i32 0, i32 33
  %5681 = getelementptr inbounds %struct.Reg, %struct.Reg* %5680, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %5681 to i64*
  %5682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5683 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5682, i64 0, i64 1
  %YMM1.i735 = bitcast %union.VectorReg* %5683 to %"class.std::bitset"*
  %5684 = bitcast %"class.std::bitset"* %YMM1.i735 to i8*
  %5685 = load i64, i64* %PC.i734
  %5686 = add i64 %5685, ptrtoint (%G_0x34422__rip__type* @G_0x34422__rip_ to i64)
  %5687 = load i64, i64* %PC.i734
  %5688 = add i64 %5687, 8
  store i64 %5688, i64* %PC.i734
  %5689 = inttoptr i64 %5686 to double*
  %5690 = load double, double* %5689
  %5691 = bitcast i8* %5684 to double*
  store double %5690, double* %5691, align 1
  %5692 = getelementptr inbounds i8, i8* %5684, i64 8
  %5693 = bitcast i8* %5692 to double*
  store double 0.000000e+00, double* %5693, align 1
  store %struct.Memory* %loadMem_47d506, %struct.Memory** %MEMORY
  %loadMem_47d50e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5695 = getelementptr inbounds %struct.GPR, %struct.GPR* %5694, i32 0, i32 33
  %5696 = getelementptr inbounds %struct.Reg, %struct.Reg* %5695, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %5696 to i64*
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5698 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5697, i64 0, i64 2
  %YMM2.i733 = bitcast %union.VectorReg* %5698 to %"class.std::bitset"*
  %5699 = bitcast %"class.std::bitset"* %YMM2.i733 to i8*
  %5700 = load i64, i64* %PC.i732
  %5701 = add i64 %5700, 9
  store i64 %5701, i64* %PC.i732
  %5702 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %5703 = bitcast i8* %5699 to double*
  store double %5702, double* %5703, align 1
  %5704 = getelementptr inbounds i8, i8* %5699, i64 8
  %5705 = bitcast i8* %5704 to double*
  store double 0.000000e+00, double* %5705, align 1
  store %struct.Memory* %loadMem_47d50e, %struct.Memory** %MEMORY
  %loadMem_47d517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5707 = getelementptr inbounds %struct.GPR, %struct.GPR* %5706, i32 0, i32 33
  %5708 = getelementptr inbounds %struct.Reg, %struct.Reg* %5707, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %5708 to i64*
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5710 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5709, i64 0, i64 2
  %YMM2.i730 = bitcast %union.VectorReg* %5710 to %"class.std::bitset"*
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5712 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5711, i64 0, i64 0
  %XMM0.i731 = bitcast %union.VectorReg* %5712 to %union.vec128_t*
  %5713 = bitcast %"class.std::bitset"* %YMM2.i730 to i8*
  %5714 = bitcast %"class.std::bitset"* %YMM2.i730 to i8*
  %5715 = bitcast %union.vec128_t* %XMM0.i731 to i8*
  %5716 = load i64, i64* %PC.i729
  %5717 = add i64 %5716, 4
  store i64 %5717, i64* %PC.i729
  %5718 = bitcast i8* %5714 to double*
  %5719 = load double, double* %5718, align 1
  %5720 = getelementptr inbounds i8, i8* %5714, i64 8
  %5721 = bitcast i8* %5720 to i64*
  %5722 = load i64, i64* %5721, align 1
  %5723 = bitcast i8* %5715 to double*
  %5724 = load double, double* %5723, align 1
  %5725 = fdiv double %5719, %5724
  %5726 = bitcast i8* %5713 to double*
  store double %5725, double* %5726, align 1
  %5727 = getelementptr inbounds i8, i8* %5713, i64 8
  %5728 = bitcast i8* %5727 to i64*
  store i64 %5722, i64* %5728, align 1
  store %struct.Memory* %loadMem_47d517, %struct.Memory** %MEMORY
  %loadMem_47d51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5730 = getelementptr inbounds %struct.GPR, %struct.GPR* %5729, i32 0, i32 33
  %5731 = getelementptr inbounds %struct.Reg, %struct.Reg* %5730, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %5731 to i64*
  %5732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5733 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5732, i64 0, i64 1
  %YMM1.i728 = bitcast %union.VectorReg* %5733 to %"class.std::bitset"*
  %5734 = bitcast %"class.std::bitset"* %YMM1.i728 to i8*
  %5735 = bitcast %"class.std::bitset"* %YMM1.i728 to i8*
  %5736 = load i64, i64* %PC.i727
  %5737 = add i64 %5736, 9
  store i64 %5737, i64* %PC.i727
  %5738 = bitcast i8* %5735 to double*
  %5739 = load double, double* %5738, align 1
  %5740 = getelementptr inbounds i8, i8* %5735, i64 8
  %5741 = bitcast i8* %5740 to i64*
  %5742 = load i64, i64* %5741, align 1
  %5743 = load double, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  %5744 = fmul double %5739, %5743
  %5745 = bitcast i8* %5734 to double*
  store double %5744, double* %5745, align 1
  %5746 = getelementptr inbounds i8, i8* %5734, i64 8
  %5747 = bitcast i8* %5746 to i64*
  store i64 %5742, i64* %5747, align 1
  store %struct.Memory* %loadMem_47d51b, %struct.Memory** %MEMORY
  %loadMem_47d524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5749 = getelementptr inbounds %struct.GPR, %struct.GPR* %5748, i32 0, i32 33
  %5750 = getelementptr inbounds %struct.Reg, %struct.Reg* %5749, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %5750 to i64*
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5752 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5751, i64 0, i64 1
  %YMM1.i725 = bitcast %union.VectorReg* %5752 to %"class.std::bitset"*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5754 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5753, i64 0, i64 0
  %XMM0.i726 = bitcast %union.VectorReg* %5754 to %union.vec128_t*
  %5755 = bitcast %"class.std::bitset"* %YMM1.i725 to i8*
  %5756 = bitcast %"class.std::bitset"* %YMM1.i725 to i8*
  %5757 = bitcast %union.vec128_t* %XMM0.i726 to i8*
  %5758 = load i64, i64* %PC.i724
  %5759 = add i64 %5758, 4
  store i64 %5759, i64* %PC.i724
  %5760 = bitcast i8* %5756 to double*
  %5761 = load double, double* %5760, align 1
  %5762 = getelementptr inbounds i8, i8* %5756, i64 8
  %5763 = bitcast i8* %5762 to i64*
  %5764 = load i64, i64* %5763, align 1
  %5765 = bitcast i8* %5757 to double*
  %5766 = load double, double* %5765, align 1
  %5767 = fdiv double %5761, %5766
  %5768 = bitcast i8* %5755 to double*
  store double %5767, double* %5768, align 1
  %5769 = getelementptr inbounds i8, i8* %5755, i64 8
  %5770 = bitcast i8* %5769 to i64*
  store i64 %5764, i64* %5770, align 1
  store %struct.Memory* %loadMem_47d524, %struct.Memory** %MEMORY
  %loadMem_47d528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5772 = getelementptr inbounds %struct.GPR, %struct.GPR* %5771, i32 0, i32 33
  %5773 = getelementptr inbounds %struct.Reg, %struct.Reg* %5772, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %5773 to i64*
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5775 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5774, i64 0, i64 2
  %YMM2.i722 = bitcast %union.VectorReg* %5775 to %"class.std::bitset"*
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5777 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5776, i64 0, i64 1
  %XMM1.i723 = bitcast %union.VectorReg* %5777 to %union.vec128_t*
  %5778 = bitcast %"class.std::bitset"* %YMM2.i722 to i8*
  %5779 = bitcast %"class.std::bitset"* %YMM2.i722 to i8*
  %5780 = bitcast %union.vec128_t* %XMM1.i723 to i8*
  %5781 = load i64, i64* %PC.i721
  %5782 = add i64 %5781, 4
  store i64 %5782, i64* %PC.i721
  %5783 = bitcast i8* %5779 to double*
  %5784 = load double, double* %5783, align 1
  %5785 = getelementptr inbounds i8, i8* %5779, i64 8
  %5786 = bitcast i8* %5785 to i64*
  %5787 = load i64, i64* %5786, align 1
  %5788 = bitcast i8* %5780 to double*
  %5789 = load double, double* %5788, align 1
  %5790 = fadd double %5784, %5789
  %5791 = bitcast i8* %5778 to double*
  store double %5790, double* %5791, align 1
  %5792 = getelementptr inbounds i8, i8* %5778, i64 8
  %5793 = bitcast i8* %5792 to i64*
  store i64 %5787, i64* %5793, align 1
  store %struct.Memory* %loadMem_47d528, %struct.Memory** %MEMORY
  %loadMem_47d52c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5795 = getelementptr inbounds %struct.GPR, %struct.GPR* %5794, i32 0, i32 33
  %5796 = getelementptr inbounds %struct.Reg, %struct.Reg* %5795, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %5796 to i64*
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5798 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5797, i64 0, i64 2
  %XMM2.i720 = bitcast %union.VectorReg* %5798 to %union.vec128_t*
  %5799 = bitcast %union.vec128_t* %XMM2.i720 to i8*
  %5800 = load i64, i64* %PC.i719
  %5801 = add i64 %5800, 9
  store i64 %5801, i64* %PC.i719
  %5802 = bitcast i8* %5799 to double*
  %5803 = load double, double* %5802, align 1
  store double %5803, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  store %struct.Memory* %loadMem_47d52c, %struct.Memory** %MEMORY
  br label %block_.L_47d535

block_.L_47d535:                                  ; preds = %block_.L_47d4fe, %block_47d499
  %loadMem_47d535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5805 = getelementptr inbounds %struct.GPR, %struct.GPR* %5804, i32 0, i32 33
  %5806 = getelementptr inbounds %struct.Reg, %struct.Reg* %5805, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %5806 to i64*
  %5807 = load i64, i64* %PC.i718
  %5808 = add i64 %5807, 5
  %5809 = load i64, i64* %PC.i718
  %5810 = add i64 %5809, 5
  store i64 %5810, i64* %PC.i718
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5808, i64* %5811, align 8
  store %struct.Memory* %loadMem_47d535, %struct.Memory** %MEMORY
  br label %block_.L_47d53a

block_.L_47d53a:                                  ; preds = %block_.L_47d535, %block_.L_47d46f
  %loadMem_47d53a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5813 = getelementptr inbounds %struct.GPR, %struct.GPR* %5812, i32 0, i32 33
  %5814 = getelementptr inbounds %struct.Reg, %struct.Reg* %5813, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %5814 to i64*
  %5815 = load i64, i64* %PC.i717
  %5816 = add i64 %5815, 5
  %5817 = load i64, i64* %PC.i717
  %5818 = add i64 %5817, 5
  store i64 %5818, i64* %PC.i717
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5816, i64* %5819, align 8
  store %struct.Memory* %loadMem_47d53a, %struct.Memory** %MEMORY
  br label %block_.L_47d53f

block_.L_47d53f:                                  ; preds = %block_.L_47d53a, %block_47d446
  %loadMem_47d53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 33
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %5822 to i64*
  %5823 = load i64, i64* %PC.i716
  %5824 = add i64 %5823, 5
  %5825 = load i64, i64* %PC.i716
  %5826 = add i64 %5825, 5
  store i64 %5826, i64* %PC.i716
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5824, i64* %5827, align 8
  store %struct.Memory* %loadMem_47d53f, %struct.Memory** %MEMORY
  br label %block_.L_47d544

block_.L_47d544:                                  ; preds = %block_.L_47d53f, %block_.L_47d39d, %block_47ce10
  %loadMem_47d544 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 33
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %5830 to i64*
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 1
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %RAX.i715 = bitcast %union.anon* %5833 to i64*
  %5834 = load i64, i64* %PC.i714
  %5835 = add i64 %5834, 8
  store i64 %5835, i64* %PC.i714
  %5836 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5836, i64* %RAX.i715, align 8
  store %struct.Memory* %loadMem_47d544, %struct.Memory** %MEMORY
  %loadMem_47d54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5838 = getelementptr inbounds %struct.GPR, %struct.GPR* %5837, i32 0, i32 33
  %5839 = getelementptr inbounds %struct.Reg, %struct.Reg* %5838, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %5839 to i64*
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5841 = getelementptr inbounds %struct.GPR, %struct.GPR* %5840, i32 0, i32 1
  %5842 = getelementptr inbounds %struct.Reg, %struct.Reg* %5841, i32 0, i32 0
  %RAX.i713 = bitcast %union.anon* %5842 to i64*
  %5843 = load i64, i64* %RAX.i713
  %5844 = add i64 %5843, 24
  %5845 = load i64, i64* %PC.i712
  %5846 = add i64 %5845, 4
  store i64 %5846, i64* %PC.i712
  %5847 = inttoptr i64 %5844 to i32*
  %5848 = load i32, i32* %5847
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5849, align 1
  %5850 = and i32 %5848, 255
  %5851 = call i32 @llvm.ctpop.i32(i32 %5850)
  %5852 = trunc i32 %5851 to i8
  %5853 = and i8 %5852, 1
  %5854 = xor i8 %5853, 1
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5854, i8* %5855, align 1
  %5856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5856, align 1
  %5857 = icmp eq i32 %5848, 0
  %5858 = zext i1 %5857 to i8
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5858, i8* %5859, align 1
  %5860 = lshr i32 %5848, 31
  %5861 = trunc i32 %5860 to i8
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5861, i8* %5862, align 1
  %5863 = lshr i32 %5848, 31
  %5864 = xor i32 %5860, %5863
  %5865 = add i32 %5864, %5863
  %5866 = icmp eq i32 %5865, 2
  %5867 = zext i1 %5866 to i8
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5867, i8* %5868, align 1
  store %struct.Memory* %loadMem_47d54c, %struct.Memory** %MEMORY
  %loadMem_47d550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5870 = getelementptr inbounds %struct.GPR, %struct.GPR* %5869, i32 0, i32 33
  %5871 = getelementptr inbounds %struct.Reg, %struct.Reg* %5870, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %5871 to i64*
  %5872 = load i64, i64* %PC.i711
  %5873 = add i64 %5872, 1451
  %5874 = load i64, i64* %PC.i711
  %5875 = add i64 %5874, 6
  %5876 = load i64, i64* %PC.i711
  %5877 = add i64 %5876, 6
  store i64 %5877, i64* %PC.i711
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5879 = load i8, i8* %5878, align 1
  %5880 = icmp eq i8 %5879, 0
  %5881 = zext i1 %5880 to i8
  store i8 %5881, i8* %BRANCH_TAKEN, align 1
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5883 = select i1 %5880, i64 %5873, i64 %5875
  store i64 %5883, i64* %5882, align 8
  store %struct.Memory* %loadMem_47d550, %struct.Memory** %MEMORY
  %loadBr_47d550 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d550 = icmp eq i8 %loadBr_47d550, 1
  br i1 %cmpBr_47d550, label %block_.L_47dafb, label %block_47d556

block_47d556:                                     ; preds = %block_.L_47d544
  %loadMem_47d556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5885 = getelementptr inbounds %struct.GPR, %struct.GPR* %5884, i32 0, i32 33
  %5886 = getelementptr inbounds %struct.Reg, %struct.Reg* %5885, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %5886 to i64*
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5888 = getelementptr inbounds %struct.GPR, %struct.GPR* %5887, i32 0, i32 1
  %5889 = getelementptr inbounds %struct.Reg, %struct.Reg* %5888, i32 0, i32 0
  %RAX.i710 = bitcast %union.anon* %5889 to i64*
  %5890 = load i64, i64* %PC.i709
  %5891 = add i64 %5890, 8
  store i64 %5891, i64* %PC.i709
  %5892 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5892, i64* %RAX.i710, align 8
  store %struct.Memory* %loadMem_47d556, %struct.Memory** %MEMORY
  %loadMem_47d55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5894 = getelementptr inbounds %struct.GPR, %struct.GPR* %5893, i32 0, i32 33
  %5895 = getelementptr inbounds %struct.Reg, %struct.Reg* %5894, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %5895 to i64*
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5897 = getelementptr inbounds %struct.GPR, %struct.GPR* %5896, i32 0, i32 1
  %5898 = getelementptr inbounds %struct.Reg, %struct.Reg* %5897, i32 0, i32 0
  %RAX.i707 = bitcast %union.anon* %5898 to i64*
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5900 = getelementptr inbounds %struct.GPR, %struct.GPR* %5899, i32 0, i32 5
  %5901 = getelementptr inbounds %struct.Reg, %struct.Reg* %5900, i32 0, i32 0
  %RCX.i708 = bitcast %union.anon* %5901 to i64*
  %5902 = load i64, i64* %RAX.i707
  %5903 = add i64 %5902, 72620
  %5904 = load i64, i64* %PC.i706
  %5905 = add i64 %5904, 6
  store i64 %5905, i64* %PC.i706
  %5906 = inttoptr i64 %5903 to i32*
  %5907 = load i32, i32* %5906
  %5908 = zext i32 %5907 to i64
  store i64 %5908, i64* %RCX.i708, align 8
  store %struct.Memory* %loadMem_47d55e, %struct.Memory** %MEMORY
  %loadMem_47d564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5910 = getelementptr inbounds %struct.GPR, %struct.GPR* %5909, i32 0, i32 33
  %5911 = getelementptr inbounds %struct.Reg, %struct.Reg* %5910, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %5911 to i64*
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5913 = getelementptr inbounds %struct.GPR, %struct.GPR* %5912, i32 0, i32 1
  %5914 = getelementptr inbounds %struct.Reg, %struct.Reg* %5913, i32 0, i32 0
  %RAX.i705 = bitcast %union.anon* %5914 to i64*
  %5915 = load i64, i64* %PC.i704
  %5916 = add i64 %5915, 8
  store i64 %5916, i64* %PC.i704
  %5917 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5917, i64* %RAX.i705, align 8
  store %struct.Memory* %loadMem_47d564, %struct.Memory** %MEMORY
  %loadMem_47d56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5919 = getelementptr inbounds %struct.GPR, %struct.GPR* %5918, i32 0, i32 33
  %5920 = getelementptr inbounds %struct.Reg, %struct.Reg* %5919, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %5920 to i64*
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5922 = getelementptr inbounds %struct.GPR, %struct.GPR* %5921, i32 0, i32 5
  %5923 = getelementptr inbounds %struct.Reg, %struct.Reg* %5922, i32 0, i32 0
  %ECX.i702 = bitcast %union.anon* %5923 to i32*
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5925 = getelementptr inbounds %struct.GPR, %struct.GPR* %5924, i32 0, i32 1
  %5926 = getelementptr inbounds %struct.Reg, %struct.Reg* %5925, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %5926 to i64*
  %5927 = load i32, i32* %ECX.i702
  %5928 = zext i32 %5927 to i64
  %5929 = load i64, i64* %RAX.i703
  %5930 = add i64 %5929, 72608
  %5931 = load i64, i64* %PC.i701
  %5932 = add i64 %5931, 6
  store i64 %5932, i64* %PC.i701
  %5933 = inttoptr i64 %5930 to i32*
  %5934 = load i32, i32* %5933
  %5935 = sub i32 %5927, %5934
  %5936 = icmp ult i32 %5927, %5934
  %5937 = zext i1 %5936 to i8
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5937, i8* %5938, align 1
  %5939 = and i32 %5935, 255
  %5940 = call i32 @llvm.ctpop.i32(i32 %5939)
  %5941 = trunc i32 %5940 to i8
  %5942 = and i8 %5941, 1
  %5943 = xor i8 %5942, 1
  %5944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5943, i8* %5944, align 1
  %5945 = xor i32 %5934, %5927
  %5946 = xor i32 %5945, %5935
  %5947 = lshr i32 %5946, 4
  %5948 = trunc i32 %5947 to i8
  %5949 = and i8 %5948, 1
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5949, i8* %5950, align 1
  %5951 = icmp eq i32 %5935, 0
  %5952 = zext i1 %5951 to i8
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5952, i8* %5953, align 1
  %5954 = lshr i32 %5935, 31
  %5955 = trunc i32 %5954 to i8
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5955, i8* %5956, align 1
  %5957 = lshr i32 %5927, 31
  %5958 = lshr i32 %5934, 31
  %5959 = xor i32 %5958, %5957
  %5960 = xor i32 %5954, %5957
  %5961 = add i32 %5960, %5959
  %5962 = icmp eq i32 %5961, 2
  %5963 = zext i1 %5962 to i8
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5963, i8* %5964, align 1
  store %struct.Memory* %loadMem_47d56c, %struct.Memory** %MEMORY
  %loadMem_47d572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5966 = getelementptr inbounds %struct.GPR, %struct.GPR* %5965, i32 0, i32 33
  %5967 = getelementptr inbounds %struct.Reg, %struct.Reg* %5966, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %5967 to i64*
  %5968 = load i64, i64* %PC.i700
  %5969 = add i64 %5968, 375
  %5970 = load i64, i64* %PC.i700
  %5971 = add i64 %5970, 6
  %5972 = load i64, i64* %PC.i700
  %5973 = add i64 %5972, 6
  store i64 %5973, i64* %PC.i700
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5975 = load i8, i8* %5974, align 1
  %5976 = icmp eq i8 %5975, 0
  %5977 = zext i1 %5976 to i8
  store i8 %5977, i8* %BRANCH_TAKEN, align 1
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5979 = select i1 %5976, i64 %5969, i64 %5971
  store i64 %5979, i64* %5978, align 8
  store %struct.Memory* %loadMem_47d572, %struct.Memory** %MEMORY
  %loadBr_47d572 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d572 = icmp eq i8 %loadBr_47d572, 1
  br i1 %cmpBr_47d572, label %block_.L_47d6e9, label %block_47d578

block_47d578:                                     ; preds = %block_47d556
  %loadMem_47d578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 33
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %5982 to i64*
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5984 = getelementptr inbounds %struct.GPR, %struct.GPR* %5983, i32 0, i32 1
  %5985 = getelementptr inbounds %struct.Reg, %struct.Reg* %5984, i32 0, i32 0
  %RAX.i699 = bitcast %union.anon* %5985 to i64*
  %5986 = load i64, i64* %PC.i698
  %5987 = add i64 %5986, 8
  store i64 %5987, i64* %PC.i698
  %5988 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %5988, i64* %RAX.i699, align 8
  store %struct.Memory* %loadMem_47d578, %struct.Memory** %MEMORY
  %loadMem_47d580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5990 = getelementptr inbounds %struct.GPR, %struct.GPR* %5989, i32 0, i32 33
  %5991 = getelementptr inbounds %struct.Reg, %struct.Reg* %5990, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %5991 to i64*
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5993 = getelementptr inbounds %struct.GPR, %struct.GPR* %5992, i32 0, i32 1
  %5994 = getelementptr inbounds %struct.Reg, %struct.Reg* %5993, i32 0, i32 0
  %RAX.i697 = bitcast %union.anon* %5994 to i64*
  %5995 = load i64, i64* %RAX.i697
  %5996 = add i64 %5995, 72564
  %5997 = load i64, i64* %PC.i696
  %5998 = add i64 %5997, 7
  store i64 %5998, i64* %PC.i696
  %5999 = inttoptr i64 %5996 to i32*
  %6000 = load i32, i32* %5999
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6001, align 1
  %6002 = and i32 %6000, 255
  %6003 = call i32 @llvm.ctpop.i32(i32 %6002)
  %6004 = trunc i32 %6003 to i8
  %6005 = and i8 %6004, 1
  %6006 = xor i8 %6005, 1
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6006, i8* %6007, align 1
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6008, align 1
  %6009 = icmp eq i32 %6000, 0
  %6010 = zext i1 %6009 to i8
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6010, i8* %6011, align 1
  %6012 = lshr i32 %6000, 31
  %6013 = trunc i32 %6012 to i8
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6013, i8* %6014, align 1
  %6015 = lshr i32 %6000, 31
  %6016 = xor i32 %6012, %6015
  %6017 = add i32 %6016, %6015
  %6018 = icmp eq i32 %6017, 2
  %6019 = zext i1 %6018 to i8
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6019, i8* %6020, align 1
  store %struct.Memory* %loadMem_47d580, %struct.Memory** %MEMORY
  %loadMem_47d587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6022 = getelementptr inbounds %struct.GPR, %struct.GPR* %6021, i32 0, i32 33
  %6023 = getelementptr inbounds %struct.Reg, %struct.Reg* %6022, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %6023 to i64*
  %6024 = load i64, i64* %PC.i695
  %6025 = add i64 %6024, 349
  %6026 = load i64, i64* %PC.i695
  %6027 = add i64 %6026, 6
  %6028 = load i64, i64* %PC.i695
  %6029 = add i64 %6028, 6
  store i64 %6029, i64* %PC.i695
  %6030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6031 = load i8, i8* %6030, align 1
  %6032 = icmp ne i8 %6031, 0
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6034 = load i8, i8* %6033, align 1
  %6035 = icmp ne i8 %6034, 0
  %6036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6037 = load i8, i8* %6036, align 1
  %6038 = icmp ne i8 %6037, 0
  %6039 = xor i1 %6035, %6038
  %6040 = or i1 %6032, %6039
  %6041 = zext i1 %6040 to i8
  store i8 %6041, i8* %BRANCH_TAKEN, align 1
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6043 = select i1 %6040, i64 %6025, i64 %6027
  store i64 %6043, i64* %6042, align 8
  store %struct.Memory* %loadMem_47d587, %struct.Memory** %MEMORY
  %loadBr_47d587 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d587 = icmp eq i8 %loadBr_47d587, 1
  br i1 %cmpBr_47d587, label %block_.L_47d6e4, label %block_47d58d

block_47d58d:                                     ; preds = %block_47d578
  %loadMem_47d58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6045 = getelementptr inbounds %struct.GPR, %struct.GPR* %6044, i32 0, i32 33
  %6046 = getelementptr inbounds %struct.Reg, %struct.Reg* %6045, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %6046 to i64*
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6048 = getelementptr inbounds %struct.GPR, %struct.GPR* %6047, i32 0, i32 1
  %6049 = getelementptr inbounds %struct.Reg, %struct.Reg* %6048, i32 0, i32 0
  %EAX.i693 = bitcast %union.anon* %6049 to i32*
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 1
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %6052 to i64*
  %6053 = load i64, i64* %RAX.i694
  %6054 = load i32, i32* %EAX.i693
  %6055 = zext i32 %6054 to i64
  %6056 = load i64, i64* %PC.i692
  %6057 = add i64 %6056, 2
  store i64 %6057, i64* %PC.i692
  %6058 = xor i64 %6055, %6053
  %6059 = trunc i64 %6058 to i32
  %6060 = and i64 %6058, 4294967295
  store i64 %6060, i64* %RAX.i694, align 8
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6061, align 1
  %6062 = and i32 %6059, 255
  %6063 = call i32 @llvm.ctpop.i32(i32 %6062)
  %6064 = trunc i32 %6063 to i8
  %6065 = and i8 %6064, 1
  %6066 = xor i8 %6065, 1
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6066, i8* %6067, align 1
  %6068 = icmp eq i32 %6059, 0
  %6069 = zext i1 %6068 to i8
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6069, i8* %6070, align 1
  %6071 = lshr i32 %6059, 31
  %6072 = trunc i32 %6071 to i8
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6072, i8* %6073, align 1
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6074, align 1
  %6075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6075, align 1
  store %struct.Memory* %loadMem_47d58d, %struct.Memory** %MEMORY
  %loadMem_47d58f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6077 = getelementptr inbounds %struct.GPR, %struct.GPR* %6076, i32 0, i32 33
  %6078 = getelementptr inbounds %struct.Reg, %struct.Reg* %6077, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %6078 to i64*
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6080 = getelementptr inbounds %struct.GPR, %struct.GPR* %6079, i32 0, i32 1
  %6081 = getelementptr inbounds %struct.Reg, %struct.Reg* %6080, i32 0, i32 0
  %EAX.i690 = bitcast %union.anon* %6081 to i32*
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 5
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %RCX.i691 = bitcast %union.anon* %6084 to i64*
  %6085 = load i32, i32* %EAX.i690
  %6086 = zext i32 %6085 to i64
  %6087 = load i64, i64* %PC.i689
  %6088 = add i64 %6087, 2
  store i64 %6088, i64* %PC.i689
  %6089 = and i64 %6086, 4294967295
  store i64 %6089, i64* %RCX.i691, align 8
  store %struct.Memory* %loadMem_47d58f, %struct.Memory** %MEMORY
  %loadMem_47d591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6091 = getelementptr inbounds %struct.GPR, %struct.GPR* %6090, i32 0, i32 33
  %6092 = getelementptr inbounds %struct.Reg, %struct.Reg* %6091, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %6092 to i64*
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6094 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6093, i64 0, i64 0
  %YMM0.i688 = bitcast %union.VectorReg* %6094 to %"class.std::bitset"*
  %6095 = bitcast %"class.std::bitset"* %YMM0.i688 to i8*
  %6096 = load i64, i64* %PC.i687
  %6097 = add i64 %6096, ptrtoint (%G_0x342ef__rip__type* @G_0x342ef__rip_ to i64)
  %6098 = load i64, i64* %PC.i687
  %6099 = add i64 %6098, 8
  store i64 %6099, i64* %PC.i687
  %6100 = inttoptr i64 %6097 to double*
  %6101 = load double, double* %6100
  %6102 = bitcast i8* %6095 to double*
  store double %6101, double* %6102, align 1
  %6103 = getelementptr inbounds i8, i8* %6095, i64 8
  %6104 = bitcast i8* %6103 to double*
  store double 0.000000e+00, double* %6104, align 1
  store %struct.Memory* %loadMem_47d591, %struct.Memory** %MEMORY
  %loadMem_47d599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6106 = getelementptr inbounds %struct.GPR, %struct.GPR* %6105, i32 0, i32 33
  %6107 = getelementptr inbounds %struct.Reg, %struct.Reg* %6106, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %6107 to i64*
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6109 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6108, i64 0, i64 1
  %YMM1.i686 = bitcast %union.VectorReg* %6109 to %"class.std::bitset"*
  %6110 = bitcast %"class.std::bitset"* %YMM1.i686 to i8*
  %6111 = load i64, i64* %PC.i685
  %6112 = add i64 %6111, 9
  store i64 %6112, i64* %PC.i685
  %6113 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %6114 = bitcast i8* %6110 to double*
  store double %6113, double* %6114, align 1
  %6115 = getelementptr inbounds i8, i8* %6110, i64 8
  %6116 = bitcast i8* %6115 to double*
  store double 0.000000e+00, double* %6116, align 1
  store %struct.Memory* %loadMem_47d599, %struct.Memory** %MEMORY
  %loadMem_47d5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6118 = getelementptr inbounds %struct.GPR, %struct.GPR* %6117, i32 0, i32 33
  %6119 = getelementptr inbounds %struct.Reg, %struct.Reg* %6118, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %6119 to i64*
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6121 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6120, i64 0, i64 2
  %YMM2.i684 = bitcast %union.VectorReg* %6121 to %"class.std::bitset"*
  %6122 = bitcast %"class.std::bitset"* %YMM2.i684 to i8*
  %6123 = load i64, i64* %PC.i683
  %6124 = add i64 %6123, 9
  store i64 %6124, i64* %PC.i683
  %6125 = load i32, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  %6126 = sitofp i32 %6125 to double
  %6127 = bitcast i8* %6122 to double*
  store double %6126, double* %6127, align 1
  store %struct.Memory* %loadMem_47d5a2, %struct.Memory** %MEMORY
  %loadMem_47d5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6129 = getelementptr inbounds %struct.GPR, %struct.GPR* %6128, i32 0, i32 33
  %6130 = getelementptr inbounds %struct.Reg, %struct.Reg* %6129, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %6130 to i64*
  %6131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6132 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6131, i64 0, i64 1
  %YMM1.i681 = bitcast %union.VectorReg* %6132 to %"class.std::bitset"*
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6134 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6133, i64 0, i64 2
  %XMM2.i682 = bitcast %union.VectorReg* %6134 to %union.vec128_t*
  %6135 = bitcast %"class.std::bitset"* %YMM1.i681 to i8*
  %6136 = bitcast %"class.std::bitset"* %YMM1.i681 to i8*
  %6137 = bitcast %union.vec128_t* %XMM2.i682 to i8*
  %6138 = load i64, i64* %PC.i680
  %6139 = add i64 %6138, 4
  store i64 %6139, i64* %PC.i680
  %6140 = bitcast i8* %6136 to double*
  %6141 = load double, double* %6140, align 1
  %6142 = getelementptr inbounds i8, i8* %6136, i64 8
  %6143 = bitcast i8* %6142 to i64*
  %6144 = load i64, i64* %6143, align 1
  %6145 = bitcast i8* %6137 to double*
  %6146 = load double, double* %6145, align 1
  %6147 = fmul double %6141, %6146
  %6148 = bitcast i8* %6135 to double*
  store double %6147, double* %6148, align 1
  %6149 = getelementptr inbounds i8, i8* %6135, i64 8
  %6150 = bitcast i8* %6149 to i64*
  store i64 %6144, i64* %6150, align 1
  store %struct.Memory* %loadMem_47d5ab, %struct.Memory** %MEMORY
  %loadMem_47d5af = load %struct.Memory*, %struct.Memory** %MEMORY
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6152 = getelementptr inbounds %struct.GPR, %struct.GPR* %6151, i32 0, i32 33
  %6153 = getelementptr inbounds %struct.Reg, %struct.Reg* %6152, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %6153 to i64*
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6155 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6154, i64 0, i64 2
  %YMM2.i679 = bitcast %union.VectorReg* %6155 to %"class.std::bitset"*
  %6156 = bitcast %"class.std::bitset"* %YMM2.i679 to i8*
  %6157 = load i64, i64* %PC.i678
  %6158 = add i64 %6157, 9
  store i64 %6158, i64* %PC.i678
  %6159 = load i32, i32* bitcast (%G_0x6cc5dc_type* @G_0x6cc5dc to i32*)
  %6160 = sitofp i32 %6159 to double
  %6161 = bitcast i8* %6156 to double*
  store double %6160, double* %6161, align 1
  store %struct.Memory* %loadMem_47d5af, %struct.Memory** %MEMORY
  %loadMem_47d5b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6163 = getelementptr inbounds %struct.GPR, %struct.GPR* %6162, i32 0, i32 33
  %6164 = getelementptr inbounds %struct.Reg, %struct.Reg* %6163, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %6164 to i64*
  %6165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6166 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6165, i64 0, i64 2
  %YMM2.i677 = bitcast %union.VectorReg* %6166 to %"class.std::bitset"*
  %6167 = bitcast %"class.std::bitset"* %YMM2.i677 to i8*
  %6168 = bitcast %"class.std::bitset"* %YMM2.i677 to i8*
  %6169 = load i64, i64* %PC.i676
  %6170 = add i64 %6169, 9
  store i64 %6170, i64* %PC.i676
  %6171 = bitcast i8* %6168 to double*
  %6172 = load double, double* %6171, align 1
  %6173 = getelementptr inbounds i8, i8* %6168, i64 8
  %6174 = bitcast i8* %6173 to i64*
  %6175 = load i64, i64* %6174, align 1
  %6176 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %6177 = fmul double %6172, %6176
  %6178 = bitcast i8* %6167 to double*
  store double %6177, double* %6178, align 1
  %6179 = getelementptr inbounds i8, i8* %6167, i64 8
  %6180 = bitcast i8* %6179 to i64*
  store i64 %6175, i64* %6180, align 1
  store %struct.Memory* %loadMem_47d5b8, %struct.Memory** %MEMORY
  %loadMem_47d5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6182 = getelementptr inbounds %struct.GPR, %struct.GPR* %6181, i32 0, i32 33
  %6183 = getelementptr inbounds %struct.Reg, %struct.Reg* %6182, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %6183 to i64*
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6185 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6184, i64 0, i64 3
  %YMM3.i675 = bitcast %union.VectorReg* %6185 to %"class.std::bitset"*
  %6186 = bitcast %"class.std::bitset"* %YMM3.i675 to i8*
  %6187 = load i64, i64* %PC.i674
  %6188 = add i64 %6187, 9
  store i64 %6188, i64* %PC.i674
  %6189 = load i32, i32* bitcast (%G_0x6cc5e0_type* @G_0x6cc5e0 to i32*)
  %6190 = sitofp i32 %6189 to double
  %6191 = bitcast i8* %6186 to double*
  store double %6190, double* %6191, align 1
  store %struct.Memory* %loadMem_47d5c1, %struct.Memory** %MEMORY
  %loadMem_47d5ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6193 = getelementptr inbounds %struct.GPR, %struct.GPR* %6192, i32 0, i32 33
  %6194 = getelementptr inbounds %struct.Reg, %struct.Reg* %6193, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %6194 to i64*
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6196 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6195, i64 0, i64 3
  %YMM3.i673 = bitcast %union.VectorReg* %6196 to %"class.std::bitset"*
  %6197 = bitcast %"class.std::bitset"* %YMM3.i673 to i8*
  %6198 = bitcast %"class.std::bitset"* %YMM3.i673 to i8*
  %6199 = load i64, i64* %PC.i672
  %6200 = add i64 %6199, 9
  store i64 %6200, i64* %PC.i672
  %6201 = bitcast i8* %6198 to double*
  %6202 = load double, double* %6201, align 1
  %6203 = getelementptr inbounds i8, i8* %6198, i64 8
  %6204 = bitcast i8* %6203 to i64*
  %6205 = load i64, i64* %6204, align 1
  %6206 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %6207 = fmul double %6202, %6206
  %6208 = bitcast i8* %6197 to double*
  store double %6207, double* %6208, align 1
  %6209 = getelementptr inbounds i8, i8* %6197, i64 8
  %6210 = bitcast i8* %6209 to i64*
  store i64 %6205, i64* %6210, align 1
  store %struct.Memory* %loadMem_47d5ca, %struct.Memory** %MEMORY
  %loadMem_47d5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6212 = getelementptr inbounds %struct.GPR, %struct.GPR* %6211, i32 0, i32 33
  %6213 = getelementptr inbounds %struct.Reg, %struct.Reg* %6212, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %6213 to i64*
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6215 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6214, i64 0, i64 2
  %YMM2.i670 = bitcast %union.VectorReg* %6215 to %"class.std::bitset"*
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6216, i64 0, i64 3
  %XMM3.i671 = bitcast %union.VectorReg* %6217 to %union.vec128_t*
  %6218 = bitcast %"class.std::bitset"* %YMM2.i670 to i8*
  %6219 = bitcast %"class.std::bitset"* %YMM2.i670 to i8*
  %6220 = bitcast %union.vec128_t* %XMM3.i671 to i8*
  %6221 = load i64, i64* %PC.i669
  %6222 = add i64 %6221, 4
  store i64 %6222, i64* %PC.i669
  %6223 = bitcast i8* %6219 to double*
  %6224 = load double, double* %6223, align 1
  %6225 = getelementptr inbounds i8, i8* %6219, i64 8
  %6226 = bitcast i8* %6225 to i64*
  %6227 = load i64, i64* %6226, align 1
  %6228 = bitcast i8* %6220 to double*
  %6229 = load double, double* %6228, align 1
  %6230 = fadd double %6224, %6229
  %6231 = bitcast i8* %6218 to double*
  store double %6230, double* %6231, align 1
  %6232 = getelementptr inbounds i8, i8* %6218, i64 8
  %6233 = bitcast i8* %6232 to i64*
  store i64 %6227, i64* %6233, align 1
  store %struct.Memory* %loadMem_47d5d3, %struct.Memory** %MEMORY
  %loadMem_47d5d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6235 = getelementptr inbounds %struct.GPR, %struct.GPR* %6234, i32 0, i32 33
  %6236 = getelementptr inbounds %struct.Reg, %struct.Reg* %6235, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %6236 to i64*
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6238 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6237, i64 0, i64 1
  %YMM1.i667 = bitcast %union.VectorReg* %6238 to %"class.std::bitset"*
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6240 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6239, i64 0, i64 2
  %XMM2.i668 = bitcast %union.VectorReg* %6240 to %union.vec128_t*
  %6241 = bitcast %"class.std::bitset"* %YMM1.i667 to i8*
  %6242 = bitcast %"class.std::bitset"* %YMM1.i667 to i8*
  %6243 = bitcast %union.vec128_t* %XMM2.i668 to i8*
  %6244 = load i64, i64* %PC.i666
  %6245 = add i64 %6244, 4
  store i64 %6245, i64* %PC.i666
  %6246 = bitcast i8* %6242 to double*
  %6247 = load double, double* %6246, align 1
  %6248 = getelementptr inbounds i8, i8* %6242, i64 8
  %6249 = bitcast i8* %6248 to i64*
  %6250 = load i64, i64* %6249, align 1
  %6251 = bitcast i8* %6243 to double*
  %6252 = load double, double* %6251, align 1
  %6253 = fdiv double %6247, %6252
  %6254 = bitcast i8* %6241 to double*
  store double %6253, double* %6254, align 1
  %6255 = getelementptr inbounds i8, i8* %6241, i64 8
  %6256 = bitcast i8* %6255 to i64*
  store i64 %6250, i64* %6256, align 1
  store %struct.Memory* %loadMem_47d5d7, %struct.Memory** %MEMORY
  %loadMem_47d5db = load %struct.Memory*, %struct.Memory** %MEMORY
  %6257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6258 = getelementptr inbounds %struct.GPR, %struct.GPR* %6257, i32 0, i32 33
  %6259 = getelementptr inbounds %struct.Reg, %struct.Reg* %6258, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %6259 to i64*
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6260, i64 0, i64 1
  %YMM1.i664 = bitcast %union.VectorReg* %6261 to %"class.std::bitset"*
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6262, i64 0, i64 0
  %XMM0.i665 = bitcast %union.VectorReg* %6263 to %union.vec128_t*
  %6264 = bitcast %"class.std::bitset"* %YMM1.i664 to i8*
  %6265 = bitcast %"class.std::bitset"* %YMM1.i664 to i8*
  %6266 = bitcast %union.vec128_t* %XMM0.i665 to i8*
  %6267 = load i64, i64* %PC.i663
  %6268 = add i64 %6267, 4
  store i64 %6268, i64* %PC.i663
  %6269 = bitcast i8* %6265 to double*
  %6270 = load double, double* %6269, align 1
  %6271 = getelementptr inbounds i8, i8* %6265, i64 8
  %6272 = bitcast i8* %6271 to i64*
  %6273 = load i64, i64* %6272, align 1
  %6274 = bitcast i8* %6266 to double*
  %6275 = load double, double* %6274, align 1
  %6276 = fadd double %6270, %6275
  %6277 = bitcast i8* %6264 to double*
  store double %6276, double* %6277, align 1
  %6278 = getelementptr inbounds i8, i8* %6264, i64 8
  %6279 = bitcast i8* %6278 to i64*
  store i64 %6273, i64* %6279, align 1
  store %struct.Memory* %loadMem_47d5db, %struct.Memory** %MEMORY
  %loadMem_47d5df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6281 = getelementptr inbounds %struct.GPR, %struct.GPR* %6280, i32 0, i32 33
  %6282 = getelementptr inbounds %struct.Reg, %struct.Reg* %6281, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %6282 to i64*
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6284 = getelementptr inbounds %struct.GPR, %struct.GPR* %6283, i32 0, i32 15
  %6285 = getelementptr inbounds %struct.Reg, %struct.Reg* %6284, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %6285 to i64*
  %6286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6286, i64 0, i64 0
  %XMM0.i662 = bitcast %union.VectorReg* %6287 to %union.vec128_t*
  %6288 = load i64, i64* %RBP.i661
  %6289 = sub i64 %6288, 32
  %6290 = bitcast %union.vec128_t* %XMM0.i662 to i8*
  %6291 = load i64, i64* %PC.i660
  %6292 = add i64 %6291, 5
  store i64 %6292, i64* %PC.i660
  %6293 = bitcast i8* %6290 to double*
  %6294 = load double, double* %6293, align 1
  %6295 = inttoptr i64 %6289 to double*
  store double %6294, double* %6295
  store %struct.Memory* %loadMem_47d5df, %struct.Memory** %MEMORY
  %loadMem_47d5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6297 = getelementptr inbounds %struct.GPR, %struct.GPR* %6296, i32 0, i32 33
  %6298 = getelementptr inbounds %struct.Reg, %struct.Reg* %6297, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %6298 to i64*
  %6299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6300 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6299, i64 0, i64 0
  %YMM0.i658 = bitcast %union.VectorReg* %6300 to %"class.std::bitset"*
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6302 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6301, i64 0, i64 1
  %XMM1.i659 = bitcast %union.VectorReg* %6302 to %union.vec128_t*
  %6303 = bitcast %"class.std::bitset"* %YMM0.i658 to i8*
  %6304 = bitcast %union.vec128_t* %XMM1.i659 to i8*
  %6305 = load i64, i64* %PC.i657
  %6306 = add i64 %6305, 3
  store i64 %6306, i64* %PC.i657
  %6307 = bitcast i8* %6304 to <2 x i32>*
  %6308 = load <2 x i32>, <2 x i32>* %6307, align 1
  %6309 = getelementptr inbounds i8, i8* %6304, i64 8
  %6310 = bitcast i8* %6309 to <2 x i32>*
  %6311 = load <2 x i32>, <2 x i32>* %6310, align 1
  %6312 = extractelement <2 x i32> %6308, i32 0
  %6313 = bitcast i8* %6303 to i32*
  store i32 %6312, i32* %6313, align 1
  %6314 = extractelement <2 x i32> %6308, i32 1
  %6315 = getelementptr inbounds i8, i8* %6303, i64 4
  %6316 = bitcast i8* %6315 to i32*
  store i32 %6314, i32* %6316, align 1
  %6317 = extractelement <2 x i32> %6311, i32 0
  %6318 = getelementptr inbounds i8, i8* %6303, i64 8
  %6319 = bitcast i8* %6318 to i32*
  store i32 %6317, i32* %6319, align 1
  %6320 = extractelement <2 x i32> %6311, i32 1
  %6321 = getelementptr inbounds i8, i8* %6303, i64 12
  %6322 = bitcast i8* %6321 to i32*
  store i32 %6320, i32* %6322, align 1
  store %struct.Memory* %loadMem_47d5e4, %struct.Memory** %MEMORY
  %loadMem_47d5e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6324 = getelementptr inbounds %struct.GPR, %struct.GPR* %6323, i32 0, i32 33
  %6325 = getelementptr inbounds %struct.Reg, %struct.Reg* %6324, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %6325 to i64*
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6327 = getelementptr inbounds %struct.GPR, %struct.GPR* %6326, i32 0, i32 5
  %6328 = getelementptr inbounds %struct.Reg, %struct.Reg* %6327, i32 0, i32 0
  %RCX.i655 = bitcast %union.anon* %6328 to i64*
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 15
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %6331 to i64*
  %6332 = load i64, i64* %RBP.i656
  %6333 = sub i64 %6332, 40
  %6334 = load i64, i64* %RCX.i655
  %6335 = load i64, i64* %PC.i654
  %6336 = add i64 %6335, 4
  store i64 %6336, i64* %PC.i654
  %6337 = inttoptr i64 %6333 to i64*
  store i64 %6334, i64* %6337
  store %struct.Memory* %loadMem_47d5e7, %struct.Memory** %MEMORY
  %loadMem1_47d5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6339 = getelementptr inbounds %struct.GPR, %struct.GPR* %6338, i32 0, i32 33
  %6340 = getelementptr inbounds %struct.Reg, %struct.Reg* %6339, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %6340 to i64*
  %6341 = load i64, i64* %PC.i653
  %6342 = add i64 %6341, -508987
  %6343 = load i64, i64* %PC.i653
  %6344 = add i64 %6343, 5
  %6345 = load i64, i64* %PC.i653
  %6346 = add i64 %6345, 5
  store i64 %6346, i64* %PC.i653
  %6347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6348 = load i64, i64* %6347, align 8
  %6349 = add i64 %6348, -8
  %6350 = inttoptr i64 %6349 to i64*
  store i64 %6344, i64* %6350
  store i64 %6349, i64* %6347, align 8
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6342, i64* %6351, align 8
  store %struct.Memory* %loadMem1_47d5eb, %struct.Memory** %MEMORY
  %loadMem2_47d5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d5eb = load i64, i64* %3
  %6352 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d5eb)
  store %struct.Memory* %6352, %struct.Memory** %MEMORY
  %loadMem_47d5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6354 = getelementptr inbounds %struct.GPR, %struct.GPR* %6353, i32 0, i32 33
  %6355 = getelementptr inbounds %struct.Reg, %struct.Reg* %6354, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %6355 to i64*
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6357 = getelementptr inbounds %struct.GPR, %struct.GPR* %6356, i32 0, i32 5
  %6358 = getelementptr inbounds %struct.Reg, %struct.Reg* %6357, i32 0, i32 0
  %RCX.i649 = bitcast %union.anon* %6358 to i64*
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6360 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6359, i64 0, i64 0
  %XMM0.i650 = bitcast %union.VectorReg* %6360 to %union.vec128_t*
  %6361 = bitcast %union.vec128_t* %XMM0.i650 to i8*
  %6362 = load i64, i64* %PC.i648
  %6363 = add i64 %6362, 5
  store i64 %6363, i64* %PC.i648
  %6364 = bitcast i8* %6361 to double*
  %6365 = load double, double* %6364, align 1
  %6366 = call double @llvm.trunc.f64(double %6365)
  %6367 = call double @llvm.fabs.f64(double %6366)
  %6368 = fcmp ogt double %6367, 0x43E0000000000000
  %6369 = fptosi double %6366 to i64
  %6370 = select i1 %6368, i64 -9223372036854775808, i64 %6369
  store i64 %6370, i64* %RCX.i649, align 8
  store %struct.Memory* %loadMem_47d5f0, %struct.Memory** %MEMORY
  %loadMem_47d5f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6372 = getelementptr inbounds %struct.GPR, %struct.GPR* %6371, i32 0, i32 33
  %6373 = getelementptr inbounds %struct.Reg, %struct.Reg* %6372, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %6373 to i64*
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6375 = getelementptr inbounds %struct.GPR, %struct.GPR* %6374, i32 0, i32 5
  %6376 = getelementptr inbounds %struct.Reg, %struct.Reg* %6375, i32 0, i32 0
  %RCX.i647 = bitcast %union.anon* %6376 to i64*
  %6377 = load i64, i64* %RCX.i647
  %6378 = load i64, i64* %PC.i646
  %6379 = add i64 %6378, 8
  store i64 %6379, i64* %PC.i646
  store i64 %6377, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47d5f5, %struct.Memory** %MEMORY
  %loadMem_47d5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6381 = getelementptr inbounds %struct.GPR, %struct.GPR* %6380, i32 0, i32 33
  %6382 = getelementptr inbounds %struct.Reg, %struct.Reg* %6381, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %6382 to i64*
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6384 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6383, i64 0, i64 0
  %YMM0.i645 = bitcast %union.VectorReg* %6384 to %"class.std::bitset"*
  %6385 = bitcast %"class.std::bitset"* %YMM0.i645 to i8*
  %6386 = load i64, i64* %PC.i644
  %6387 = add i64 %6386, 9
  store i64 %6387, i64* %PC.i644
  %6388 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %6389 = bitcast i8* %6385 to double*
  store double %6388, double* %6389, align 1
  %6390 = getelementptr inbounds i8, i8* %6385, i64 8
  %6391 = bitcast i8* %6390 to double*
  store double 0.000000e+00, double* %6391, align 1
  store %struct.Memory* %loadMem_47d5fd, %struct.Memory** %MEMORY
  %loadMem_47d606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 33
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %6394 to i64*
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6396 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6395, i64 0, i64 0
  %YMM0.i643 = bitcast %union.VectorReg* %6396 to %"class.std::bitset"*
  %6397 = bitcast %"class.std::bitset"* %YMM0.i643 to i8*
  %6398 = bitcast %"class.std::bitset"* %YMM0.i643 to i8*
  %6399 = load i64, i64* %PC.i642
  %6400 = add i64 %6399, 9
  store i64 %6400, i64* %PC.i642
  %6401 = bitcast i8* %6398 to double*
  %6402 = load double, double* %6401, align 1
  %6403 = getelementptr inbounds i8, i8* %6398, i64 8
  %6404 = bitcast i8* %6403 to i64*
  %6405 = load i64, i64* %6404, align 1
  %6406 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %6407 = fdiv double %6402, %6406
  %6408 = bitcast i8* %6397 to double*
  store double %6407, double* %6408, align 1
  %6409 = getelementptr inbounds i8, i8* %6397, i64 8
  %6410 = bitcast i8* %6409 to i64*
  store i64 %6405, i64* %6410, align 1
  store %struct.Memory* %loadMem_47d606, %struct.Memory** %MEMORY
  %loadMem_47d60f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6412 = getelementptr inbounds %struct.GPR, %struct.GPR* %6411, i32 0, i32 33
  %6413 = getelementptr inbounds %struct.Reg, %struct.Reg* %6412, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %6413 to i64*
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6415 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6414, i64 0, i64 1
  %YMM1.i641 = bitcast %union.VectorReg* %6415 to %"class.std::bitset"*
  %6416 = bitcast %"class.std::bitset"* %YMM1.i641 to i8*
  %6417 = load i64, i64* %PC.i640
  %6418 = add i64 %6417, 9
  store i64 %6418, i64* %PC.i640
  %6419 = load double, double* bitcast (%G_0x725570_type* @G_0x725570 to double*)
  %6420 = bitcast i8* %6416 to double*
  store double %6419, double* %6420, align 1
  %6421 = getelementptr inbounds i8, i8* %6416, i64 8
  %6422 = bitcast i8* %6421 to double*
  store double 0.000000e+00, double* %6422, align 1
  store %struct.Memory* %loadMem_47d60f, %struct.Memory** %MEMORY
  %loadMem_47d618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6427 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6426, i64 0, i64 2
  %YMM2.i639 = bitcast %union.VectorReg* %6427 to %"class.std::bitset"*
  %6428 = bitcast %"class.std::bitset"* %YMM2.i639 to i8*
  %6429 = load i64, i64* %PC.i638
  %6430 = add i64 %6429, 9
  store i64 %6430, i64* %PC.i638
  %6431 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %6432 = bitcast i8* %6428 to double*
  store double %6431, double* %6432, align 1
  %6433 = getelementptr inbounds i8, i8* %6428, i64 8
  %6434 = bitcast i8* %6433 to double*
  store double 0.000000e+00, double* %6434, align 1
  store %struct.Memory* %loadMem_47d618, %struct.Memory** %MEMORY
  %loadMem_47d621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6436 = getelementptr inbounds %struct.GPR, %struct.GPR* %6435, i32 0, i32 33
  %6437 = getelementptr inbounds %struct.Reg, %struct.Reg* %6436, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %6437 to i64*
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6439 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6438, i64 0, i64 2
  %YMM2.i637 = bitcast %union.VectorReg* %6439 to %"class.std::bitset"*
  %6440 = bitcast %"class.std::bitset"* %YMM2.i637 to i8*
  %6441 = bitcast %"class.std::bitset"* %YMM2.i637 to i8*
  %6442 = load i64, i64* %PC.i636
  %6443 = add i64 %6442, 9
  store i64 %6443, i64* %PC.i636
  %6444 = bitcast i8* %6441 to double*
  %6445 = load double, double* %6444, align 1
  %6446 = getelementptr inbounds i8, i8* %6441, i64 8
  %6447 = bitcast i8* %6446 to i64*
  %6448 = load i64, i64* %6447, align 1
  %6449 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %6450 = fsub double %6445, %6449
  %6451 = bitcast i8* %6440 to double*
  store double %6450, double* %6451, align 1
  %6452 = getelementptr inbounds i8, i8* %6440, i64 8
  %6453 = bitcast i8* %6452 to i64*
  store i64 %6448, i64* %6453, align 1
  store %struct.Memory* %loadMem_47d621, %struct.Memory** %MEMORY
  %loadMem_47d62a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 33
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %6456 to i64*
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6458 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6457, i64 0, i64 1
  %YMM1.i634 = bitcast %union.VectorReg* %6458 to %"class.std::bitset"*
  %6459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6460 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6459, i64 0, i64 2
  %XMM2.i635 = bitcast %union.VectorReg* %6460 to %union.vec128_t*
  %6461 = bitcast %"class.std::bitset"* %YMM1.i634 to i8*
  %6462 = bitcast %"class.std::bitset"* %YMM1.i634 to i8*
  %6463 = bitcast %union.vec128_t* %XMM2.i635 to i8*
  %6464 = load i64, i64* %PC.i633
  %6465 = add i64 %6464, 4
  store i64 %6465, i64* %PC.i633
  %6466 = bitcast i8* %6462 to double*
  %6467 = load double, double* %6466, align 1
  %6468 = getelementptr inbounds i8, i8* %6462, i64 8
  %6469 = bitcast i8* %6468 to i64*
  %6470 = load i64, i64* %6469, align 1
  %6471 = bitcast i8* %6463 to double*
  %6472 = load double, double* %6471, align 1
  %6473 = fmul double %6467, %6472
  %6474 = bitcast i8* %6461 to double*
  store double %6473, double* %6474, align 1
  %6475 = getelementptr inbounds i8, i8* %6461, i64 8
  %6476 = bitcast i8* %6475 to i64*
  store i64 %6470, i64* %6476, align 1
  store %struct.Memory* %loadMem_47d62a, %struct.Memory** %MEMORY
  %loadMem_47d62e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6478 = getelementptr inbounds %struct.GPR, %struct.GPR* %6477, i32 0, i32 33
  %6479 = getelementptr inbounds %struct.Reg, %struct.Reg* %6478, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %6479 to i64*
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6481 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6480, i64 0, i64 0
  %YMM0.i631 = bitcast %union.VectorReg* %6481 to %"class.std::bitset"*
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6483 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6482, i64 0, i64 1
  %XMM1.i632 = bitcast %union.VectorReg* %6483 to %union.vec128_t*
  %6484 = bitcast %"class.std::bitset"* %YMM0.i631 to i8*
  %6485 = bitcast %"class.std::bitset"* %YMM0.i631 to i8*
  %6486 = bitcast %union.vec128_t* %XMM1.i632 to i8*
  %6487 = load i64, i64* %PC.i630
  %6488 = add i64 %6487, 4
  store i64 %6488, i64* %PC.i630
  %6489 = bitcast i8* %6485 to double*
  %6490 = load double, double* %6489, align 1
  %6491 = getelementptr inbounds i8, i8* %6485, i64 8
  %6492 = bitcast i8* %6491 to i64*
  %6493 = load i64, i64* %6492, align 1
  %6494 = bitcast i8* %6486 to double*
  %6495 = load double, double* %6494, align 1
  %6496 = fsub double %6490, %6495
  %6497 = bitcast i8* %6484 to double*
  store double %6496, double* %6497, align 1
  %6498 = getelementptr inbounds i8, i8* %6484, i64 8
  %6499 = bitcast i8* %6498 to i64*
  store i64 %6493, i64* %6499, align 1
  store %struct.Memory* %loadMem_47d62e, %struct.Memory** %MEMORY
  %loadMem_47d632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 33
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %6502 to i64*
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6504 = getelementptr inbounds %struct.GPR, %struct.GPR* %6503, i32 0, i32 15
  %6505 = getelementptr inbounds %struct.Reg, %struct.Reg* %6504, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %6505 to i64*
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6507 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6506, i64 0, i64 1
  %YMM1.i629 = bitcast %union.VectorReg* %6507 to %"class.std::bitset"*
  %6508 = bitcast %"class.std::bitset"* %YMM1.i629 to i8*
  %6509 = load i64, i64* %RBP.i628
  %6510 = sub i64 %6509, 32
  %6511 = load i64, i64* %PC.i627
  %6512 = add i64 %6511, 5
  store i64 %6512, i64* %PC.i627
  %6513 = inttoptr i64 %6510 to double*
  %6514 = load double, double* %6513
  %6515 = bitcast i8* %6508 to double*
  store double %6514, double* %6515, align 1
  %6516 = getelementptr inbounds i8, i8* %6508, i64 8
  %6517 = bitcast i8* %6516 to double*
  store double 0.000000e+00, double* %6517, align 1
  store %struct.Memory* %loadMem_47d632, %struct.Memory** %MEMORY
  %loadMem_47d637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6519 = getelementptr inbounds %struct.GPR, %struct.GPR* %6518, i32 0, i32 33
  %6520 = getelementptr inbounds %struct.Reg, %struct.Reg* %6519, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %6520 to i64*
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6522 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6521, i64 0, i64 0
  %YMM0.i625 = bitcast %union.VectorReg* %6522 to %"class.std::bitset"*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6524 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6523, i64 0, i64 1
  %XMM1.i626 = bitcast %union.VectorReg* %6524 to %union.vec128_t*
  %6525 = bitcast %"class.std::bitset"* %YMM0.i625 to i8*
  %6526 = bitcast %"class.std::bitset"* %YMM0.i625 to i8*
  %6527 = bitcast %union.vec128_t* %XMM1.i626 to i8*
  %6528 = load i64, i64* %PC.i624
  %6529 = add i64 %6528, 4
  store i64 %6529, i64* %PC.i624
  %6530 = bitcast i8* %6526 to double*
  %6531 = load double, double* %6530, align 1
  %6532 = getelementptr inbounds i8, i8* %6526, i64 8
  %6533 = bitcast i8* %6532 to i64*
  %6534 = load i64, i64* %6533, align 1
  %6535 = bitcast i8* %6527 to double*
  %6536 = load double, double* %6535, align 1
  %6537 = fadd double %6531, %6536
  %6538 = bitcast i8* %6525 to double*
  store double %6537, double* %6538, align 1
  %6539 = getelementptr inbounds i8, i8* %6525, i64 8
  %6540 = bitcast i8* %6539 to i64*
  store i64 %6534, i64* %6540, align 1
  store %struct.Memory* %loadMem_47d637, %struct.Memory** %MEMORY
  %loadMem1_47d63b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6542 = getelementptr inbounds %struct.GPR, %struct.GPR* %6541, i32 0, i32 33
  %6543 = getelementptr inbounds %struct.Reg, %struct.Reg* %6542, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %6543 to i64*
  %6544 = load i64, i64* %PC.i623
  %6545 = add i64 %6544, -509067
  %6546 = load i64, i64* %PC.i623
  %6547 = add i64 %6546, 5
  %6548 = load i64, i64* %PC.i623
  %6549 = add i64 %6548, 5
  store i64 %6549, i64* %PC.i623
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6551 = load i64, i64* %6550, align 8
  %6552 = add i64 %6551, -8
  %6553 = inttoptr i64 %6552 to i64*
  store i64 %6547, i64* %6553
  store i64 %6552, i64* %6550, align 8
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6545, i64* %6554, align 8
  store %struct.Memory* %loadMem1_47d63b, %struct.Memory** %MEMORY
  %loadMem2_47d63b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d63b = load i64, i64* %3
  %6555 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d63b)
  store %struct.Memory* %6555, %struct.Memory** %MEMORY
  %loadMem_47d640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6557 = getelementptr inbounds %struct.GPR, %struct.GPR* %6556, i32 0, i32 33
  %6558 = getelementptr inbounds %struct.Reg, %struct.Reg* %6557, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %6558 to i64*
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6560 = getelementptr inbounds %struct.GPR, %struct.GPR* %6559, i32 0, i32 5
  %6561 = getelementptr inbounds %struct.Reg, %struct.Reg* %6560, i32 0, i32 0
  %RCX.i619 = bitcast %union.anon* %6561 to i64*
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6563 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6562, i64 0, i64 0
  %XMM0.i620 = bitcast %union.VectorReg* %6563 to %union.vec128_t*
  %6564 = bitcast %union.vec128_t* %XMM0.i620 to i8*
  %6565 = load i64, i64* %PC.i618
  %6566 = add i64 %6565, 5
  store i64 %6566, i64* %PC.i618
  %6567 = bitcast i8* %6564 to double*
  %6568 = load double, double* %6567, align 1
  %6569 = call double @llvm.trunc.f64(double %6568)
  %6570 = call double @llvm.fabs.f64(double %6569)
  %6571 = fcmp ogt double %6570, 0x43E0000000000000
  %6572 = fptosi double %6569 to i64
  %6573 = select i1 %6571, i64 -9223372036854775808, i64 %6572
  store i64 %6573, i64* %RCX.i619, align 8
  store %struct.Memory* %loadMem_47d640, %struct.Memory** %MEMORY
  %loadMem_47d645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6575 = getelementptr inbounds %struct.GPR, %struct.GPR* %6574, i32 0, i32 33
  %6576 = getelementptr inbounds %struct.Reg, %struct.Reg* %6575, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %6576 to i64*
  %6577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6578 = getelementptr inbounds %struct.GPR, %struct.GPR* %6577, i32 0, i32 5
  %6579 = getelementptr inbounds %struct.Reg, %struct.Reg* %6578, i32 0, i32 0
  %RCX.i617 = bitcast %union.anon* %6579 to i64*
  %6580 = load i64, i64* %RCX.i617
  %6581 = load i64, i64* %PC.i616
  %6582 = add i64 %6581, 8
  store i64 %6582, i64* %PC.i616
  store i64 %6580, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store %struct.Memory* %loadMem_47d645, %struct.Memory** %MEMORY
  %loadMem_47d64d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6584 = getelementptr inbounds %struct.GPR, %struct.GPR* %6583, i32 0, i32 33
  %6585 = getelementptr inbounds %struct.Reg, %struct.Reg* %6584, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %6585 to i64*
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6587 = getelementptr inbounds %struct.GPR, %struct.GPR* %6586, i32 0, i32 5
  %6588 = getelementptr inbounds %struct.Reg, %struct.Reg* %6587, i32 0, i32 0
  %RCX.i614 = bitcast %union.anon* %6588 to i64*
  %6589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6590 = getelementptr inbounds %struct.GPR, %struct.GPR* %6589, i32 0, i32 15
  %6591 = getelementptr inbounds %struct.Reg, %struct.Reg* %6590, i32 0, i32 0
  %RBP.i615 = bitcast %union.anon* %6591 to i64*
  %6592 = load i64, i64* %RBP.i615
  %6593 = sub i64 %6592, 40
  %6594 = load i64, i64* %PC.i613
  %6595 = add i64 %6594, 4
  store i64 %6595, i64* %PC.i613
  %6596 = inttoptr i64 %6593 to i64*
  %6597 = load i64, i64* %6596
  store i64 %6597, i64* %RCX.i614, align 8
  store %struct.Memory* %loadMem_47d64d, %struct.Memory** %MEMORY
  %loadMem_47d651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6599 = getelementptr inbounds %struct.GPR, %struct.GPR* %6598, i32 0, i32 33
  %6600 = getelementptr inbounds %struct.Reg, %struct.Reg* %6599, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %6600 to i64*
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 5
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %RCX.i612 = bitcast %union.anon* %6603 to i64*
  %6604 = load i64, i64* %RCX.i612
  %6605 = load i64, i64* %PC.i611
  %6606 = add i64 %6605, 8
  store i64 %6606, i64* %PC.i611
  %6607 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  %6608 = sub i64 %6604, %6607
  %6609 = icmp ugt i64 %6607, %6604
  %6610 = zext i1 %6609 to i8
  %6611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6610, i8* %6611, align 1
  %6612 = trunc i64 %6608 to i32
  %6613 = and i32 %6612, 255
  %6614 = call i32 @llvm.ctpop.i32(i32 %6613)
  %6615 = trunc i32 %6614 to i8
  %6616 = and i8 %6615, 1
  %6617 = xor i8 %6616, 1
  %6618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6617, i8* %6618, align 1
  %6619 = xor i64 %6607, %6604
  %6620 = xor i64 %6619, %6608
  %6621 = lshr i64 %6620, 4
  %6622 = trunc i64 %6621 to i8
  %6623 = and i8 %6622, 1
  %6624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6623, i8* %6624, align 1
  %6625 = icmp eq i64 %6608, 0
  %6626 = zext i1 %6625 to i8
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6626, i8* %6627, align 1
  %6628 = lshr i64 %6608, 63
  %6629 = trunc i64 %6628 to i8
  %6630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6629, i8* %6630, align 1
  %6631 = lshr i64 %6604, 63
  %6632 = lshr i64 %6607, 63
  %6633 = xor i64 %6632, %6631
  %6634 = xor i64 %6628, %6631
  %6635 = add i64 %6634, %6633
  %6636 = icmp eq i64 %6635, 2
  %6637 = zext i1 %6636 to i8
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6637, i8* %6638, align 1
  store %struct.Memory* %loadMem_47d651, %struct.Memory** %MEMORY
  %loadMem_47d659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6640 = getelementptr inbounds %struct.GPR, %struct.GPR* %6639, i32 0, i32 33
  %6641 = getelementptr inbounds %struct.Reg, %struct.Reg* %6640, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %6641 to i64*
  %6642 = load i64, i64* %PC.i610
  %6643 = add i64 %6642, 23
  %6644 = load i64, i64* %PC.i610
  %6645 = add i64 %6644, 6
  %6646 = load i64, i64* %PC.i610
  %6647 = add i64 %6646, 6
  store i64 %6647, i64* %PC.i610
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6649 = load i8, i8* %6648, align 1
  %6650 = icmp ne i8 %6649, 0
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6652 = load i8, i8* %6651, align 1
  %6653 = icmp ne i8 %6652, 0
  %6654 = xor i1 %6650, %6653
  %6655 = xor i1 %6654, true
  %6656 = zext i1 %6655 to i8
  store i8 %6656, i8* %BRANCH_TAKEN, align 1
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6658 = select i1 %6654, i64 %6645, i64 %6643
  store i64 %6658, i64* %6657, align 8
  store %struct.Memory* %loadMem_47d659, %struct.Memory** %MEMORY
  %loadBr_47d659 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d659 = icmp eq i8 %loadBr_47d659, 1
  br i1 %cmpBr_47d659, label %block_.L_47d670, label %block_47d65f

block_47d65f:                                     ; preds = %block_47d58d
  %loadMem_47d65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6660 = getelementptr inbounds %struct.GPR, %struct.GPR* %6659, i32 0, i32 33
  %6661 = getelementptr inbounds %struct.Reg, %struct.Reg* %6660, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %6661 to i64*
  %6662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6663 = getelementptr inbounds %struct.GPR, %struct.GPR* %6662, i32 0, i32 1
  %6664 = getelementptr inbounds %struct.Reg, %struct.Reg* %6663, i32 0, i32 0
  %RAX.i609 = bitcast %union.anon* %6664 to i64*
  %6665 = load i64, i64* %PC.i608
  %6666 = add i64 %6665, 8
  store i64 %6666, i64* %PC.i608
  %6667 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store i64 %6667, i64* %RAX.i609, align 8
  store %struct.Memory* %loadMem_47d65f, %struct.Memory** %MEMORY
  %loadMem_47d667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6669 = getelementptr inbounds %struct.GPR, %struct.GPR* %6668, i32 0, i32 33
  %6670 = getelementptr inbounds %struct.Reg, %struct.Reg* %6669, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %6670 to i64*
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6672 = getelementptr inbounds %struct.GPR, %struct.GPR* %6671, i32 0, i32 1
  %6673 = getelementptr inbounds %struct.Reg, %struct.Reg* %6672, i32 0, i32 0
  %RAX.i606 = bitcast %union.anon* %6673 to i64*
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6675 = getelementptr inbounds %struct.GPR, %struct.GPR* %6674, i32 0, i32 15
  %6676 = getelementptr inbounds %struct.Reg, %struct.Reg* %6675, i32 0, i32 0
  %RBP.i607 = bitcast %union.anon* %6676 to i64*
  %6677 = load i64, i64* %RBP.i607
  %6678 = sub i64 %6677, 48
  %6679 = load i64, i64* %RAX.i606
  %6680 = load i64, i64* %PC.i605
  %6681 = add i64 %6680, 4
  store i64 %6681, i64* %PC.i605
  %6682 = inttoptr i64 %6678 to i64*
  store i64 %6679, i64* %6682
  store %struct.Memory* %loadMem_47d667, %struct.Memory** %MEMORY
  %loadMem_47d66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6684 = getelementptr inbounds %struct.GPR, %struct.GPR* %6683, i32 0, i32 33
  %6685 = getelementptr inbounds %struct.Reg, %struct.Reg* %6684, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %6685 to i64*
  %6686 = load i64, i64* %PC.i604
  %6687 = add i64 %6686, 18
  %6688 = load i64, i64* %PC.i604
  %6689 = add i64 %6688, 5
  store i64 %6689, i64* %PC.i604
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6687, i64* %6690, align 8
  store %struct.Memory* %loadMem_47d66b, %struct.Memory** %MEMORY
  br label %block_.L_47d67d

block_.L_47d670:                                  ; preds = %block_47d58d
  %loadMem_47d670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6692 = getelementptr inbounds %struct.GPR, %struct.GPR* %6691, i32 0, i32 33
  %6693 = getelementptr inbounds %struct.Reg, %struct.Reg* %6692, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %6693 to i64*
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6695 = getelementptr inbounds %struct.GPR, %struct.GPR* %6694, i32 0, i32 1
  %6696 = getelementptr inbounds %struct.Reg, %struct.Reg* %6695, i32 0, i32 0
  %EAX.i602 = bitcast %union.anon* %6696 to i32*
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 1
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %RAX.i603 = bitcast %union.anon* %6699 to i64*
  %6700 = load i64, i64* %RAX.i603
  %6701 = load i32, i32* %EAX.i602
  %6702 = zext i32 %6701 to i64
  %6703 = load i64, i64* %PC.i601
  %6704 = add i64 %6703, 2
  store i64 %6704, i64* %PC.i601
  %6705 = xor i64 %6702, %6700
  %6706 = trunc i64 %6705 to i32
  %6707 = and i64 %6705, 4294967295
  store i64 %6707, i64* %RAX.i603, align 8
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6708, align 1
  %6709 = and i32 %6706, 255
  %6710 = call i32 @llvm.ctpop.i32(i32 %6709)
  %6711 = trunc i32 %6710 to i8
  %6712 = and i8 %6711, 1
  %6713 = xor i8 %6712, 1
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6713, i8* %6714, align 1
  %6715 = icmp eq i32 %6706, 0
  %6716 = zext i1 %6715 to i8
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6716, i8* %6717, align 1
  %6718 = lshr i32 %6706, 31
  %6719 = trunc i32 %6718 to i8
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6719, i8* %6720, align 1
  %6721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6721, align 1
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6722, align 1
  store %struct.Memory* %loadMem_47d670, %struct.Memory** %MEMORY
  %loadMem_47d672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6724 = getelementptr inbounds %struct.GPR, %struct.GPR* %6723, i32 0, i32 33
  %6725 = getelementptr inbounds %struct.Reg, %struct.Reg* %6724, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %6725 to i64*
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6727 = getelementptr inbounds %struct.GPR, %struct.GPR* %6726, i32 0, i32 1
  %6728 = getelementptr inbounds %struct.Reg, %struct.Reg* %6727, i32 0, i32 0
  %EAX.i599 = bitcast %union.anon* %6728 to i32*
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6730 = getelementptr inbounds %struct.GPR, %struct.GPR* %6729, i32 0, i32 5
  %6731 = getelementptr inbounds %struct.Reg, %struct.Reg* %6730, i32 0, i32 0
  %RCX.i600 = bitcast %union.anon* %6731 to i64*
  %6732 = load i32, i32* %EAX.i599
  %6733 = zext i32 %6732 to i64
  %6734 = load i64, i64* %PC.i598
  %6735 = add i64 %6734, 2
  store i64 %6735, i64* %PC.i598
  %6736 = and i64 %6733, 4294967295
  store i64 %6736, i64* %RCX.i600, align 8
  store %struct.Memory* %loadMem_47d672, %struct.Memory** %MEMORY
  %loadMem_47d674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6738 = getelementptr inbounds %struct.GPR, %struct.GPR* %6737, i32 0, i32 33
  %6739 = getelementptr inbounds %struct.Reg, %struct.Reg* %6738, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %6739 to i64*
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6741 = getelementptr inbounds %struct.GPR, %struct.GPR* %6740, i32 0, i32 5
  %6742 = getelementptr inbounds %struct.Reg, %struct.Reg* %6741, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %6742 to i64*
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6744 = getelementptr inbounds %struct.GPR, %struct.GPR* %6743, i32 0, i32 15
  %6745 = getelementptr inbounds %struct.Reg, %struct.Reg* %6744, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %6745 to i64*
  %6746 = load i64, i64* %RBP.i597
  %6747 = sub i64 %6746, 48
  %6748 = load i64, i64* %RCX.i596
  %6749 = load i64, i64* %PC.i595
  %6750 = add i64 %6749, 4
  store i64 %6750, i64* %PC.i595
  %6751 = inttoptr i64 %6747 to i64*
  store i64 %6748, i64* %6751
  store %struct.Memory* %loadMem_47d674, %struct.Memory** %MEMORY
  %loadMem_47d678 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6753 = getelementptr inbounds %struct.GPR, %struct.GPR* %6752, i32 0, i32 33
  %6754 = getelementptr inbounds %struct.Reg, %struct.Reg* %6753, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %6754 to i64*
  %6755 = load i64, i64* %PC.i594
  %6756 = add i64 %6755, 5
  %6757 = load i64, i64* %PC.i594
  %6758 = add i64 %6757, 5
  store i64 %6758, i64* %PC.i594
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6756, i64* %6759, align 8
  store %struct.Memory* %loadMem_47d678, %struct.Memory** %MEMORY
  br label %block_.L_47d67d

block_.L_47d67d:                                  ; preds = %block_.L_47d670, %block_47d65f
  %loadMem_47d67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6761 = getelementptr inbounds %struct.GPR, %struct.GPR* %6760, i32 0, i32 33
  %6762 = getelementptr inbounds %struct.Reg, %struct.Reg* %6761, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %6762 to i64*
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6764 = getelementptr inbounds %struct.GPR, %struct.GPR* %6763, i32 0, i32 1
  %6765 = getelementptr inbounds %struct.Reg, %struct.Reg* %6764, i32 0, i32 0
  %RAX.i592 = bitcast %union.anon* %6765 to i64*
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 15
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %RBP.i593 = bitcast %union.anon* %6768 to i64*
  %6769 = load i64, i64* %RBP.i593
  %6770 = sub i64 %6769, 48
  %6771 = load i64, i64* %PC.i591
  %6772 = add i64 %6771, 4
  store i64 %6772, i64* %PC.i591
  %6773 = inttoptr i64 %6770 to i64*
  %6774 = load i64, i64* %6773
  store i64 %6774, i64* %RAX.i592, align 8
  store %struct.Memory* %loadMem_47d67d, %struct.Memory** %MEMORY
  %loadMem_47d681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6776 = getelementptr inbounds %struct.GPR, %struct.GPR* %6775, i32 0, i32 33
  %6777 = getelementptr inbounds %struct.Reg, %struct.Reg* %6776, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %6777 to i64*
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6779 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6778, i64 0, i64 0
  %YMM0.i590 = bitcast %union.VectorReg* %6779 to %"class.std::bitset"*
  %6780 = bitcast %"class.std::bitset"* %YMM0.i590 to i8*
  %6781 = load i64, i64* %PC.i589
  %6782 = add i64 %6781, ptrtoint (%G_0x341ff__rip__type* @G_0x341ff__rip_ to i64)
  %6783 = load i64, i64* %PC.i589
  %6784 = add i64 %6783, 8
  store i64 %6784, i64* %PC.i589
  %6785 = inttoptr i64 %6782 to double*
  %6786 = load double, double* %6785
  %6787 = bitcast i8* %6780 to double*
  store double %6786, double* %6787, align 1
  %6788 = getelementptr inbounds i8, i8* %6780, i64 8
  %6789 = bitcast i8* %6788 to double*
  store double 0.000000e+00, double* %6789, align 1
  store %struct.Memory* %loadMem_47d681, %struct.Memory** %MEMORY
  %loadMem_47d689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6791 = getelementptr inbounds %struct.GPR, %struct.GPR* %6790, i32 0, i32 33
  %6792 = getelementptr inbounds %struct.Reg, %struct.Reg* %6791, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %6792 to i64*
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6794 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6793, i64 0, i64 1
  %YMM1.i588 = bitcast %union.VectorReg* %6794 to %"class.std::bitset"*
  %6795 = bitcast %"class.std::bitset"* %YMM1.i588 to i8*
  %6796 = load i64, i64* %PC.i587
  %6797 = add i64 %6796, ptrtoint (%G_0x341cf__rip__type* @G_0x341cf__rip_ to i64)
  %6798 = load i64, i64* %PC.i587
  %6799 = add i64 %6798, 8
  store i64 %6799, i64* %PC.i587
  %6800 = inttoptr i64 %6797 to double*
  %6801 = load double, double* %6800
  %6802 = bitcast i8* %6795 to double*
  store double %6801, double* %6802, align 1
  %6803 = getelementptr inbounds i8, i8* %6795, i64 8
  %6804 = bitcast i8* %6803 to double*
  store double 0.000000e+00, double* %6804, align 1
  store %struct.Memory* %loadMem_47d689, %struct.Memory** %MEMORY
  %loadMem_47d691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 33
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 1
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %6810 to i64*
  %6811 = load i64, i64* %RAX.i586
  %6812 = load i64, i64* %PC.i585
  %6813 = add i64 %6812, 8
  store i64 %6813, i64* %PC.i585
  store i64 %6811, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store %struct.Memory* %loadMem_47d691, %struct.Memory** %MEMORY
  %loadMem_47d699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6815 = getelementptr inbounds %struct.GPR, %struct.GPR* %6814, i32 0, i32 33
  %6816 = getelementptr inbounds %struct.Reg, %struct.Reg* %6815, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %6816 to i64*
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6818 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6817, i64 0, i64 2
  %YMM2.i584 = bitcast %union.VectorReg* %6818 to %"class.std::bitset"*
  %6819 = bitcast %"class.std::bitset"* %YMM2.i584 to i8*
  %6820 = load i64, i64* %PC.i583
  %6821 = add i64 %6820, 9
  store i64 %6821, i64* %PC.i583
  %6822 = load double, double* bitcast (%G_0x6cea40_type* @G_0x6cea40 to double*)
  %6823 = bitcast i8* %6819 to double*
  store double %6822, double* %6823, align 1
  %6824 = getelementptr inbounds i8, i8* %6819, i64 8
  %6825 = bitcast i8* %6824 to double*
  store double 0.000000e+00, double* %6825, align 1
  store %struct.Memory* %loadMem_47d699, %struct.Memory** %MEMORY
  %loadMem_47d6a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 33
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6830 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6829, i64 0, i64 3
  %YMM3.i582 = bitcast %union.VectorReg* %6830 to %"class.std::bitset"*
  %6831 = bitcast %"class.std::bitset"* %YMM3.i582 to i8*
  %6832 = load i64, i64* %PC.i581
  %6833 = add i64 %6832, 10
  store i64 %6833, i64* %PC.i581
  %6834 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  %6835 = sitofp i64 %6834 to double
  %6836 = bitcast i8* %6831 to double*
  store double %6835, double* %6836, align 1
  store %struct.Memory* %loadMem_47d6a2, %struct.Memory** %MEMORY
  %loadMem_47d6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %6837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6838 = getelementptr inbounds %struct.GPR, %struct.GPR* %6837, i32 0, i32 33
  %6839 = getelementptr inbounds %struct.Reg, %struct.Reg* %6838, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %6839 to i64*
  %6840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6841 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6840, i64 0, i64 2
  %YMM2.i579 = bitcast %union.VectorReg* %6841 to %"class.std::bitset"*
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6843 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6842, i64 0, i64 3
  %XMM3.i580 = bitcast %union.VectorReg* %6843 to %union.vec128_t*
  %6844 = bitcast %"class.std::bitset"* %YMM2.i579 to i8*
  %6845 = bitcast %"class.std::bitset"* %YMM2.i579 to i8*
  %6846 = bitcast %union.vec128_t* %XMM3.i580 to i8*
  %6847 = load i64, i64* %PC.i578
  %6848 = add i64 %6847, 4
  store i64 %6848, i64* %PC.i578
  %6849 = bitcast i8* %6845 to double*
  %6850 = load double, double* %6849, align 1
  %6851 = getelementptr inbounds i8, i8* %6845, i64 8
  %6852 = bitcast i8* %6851 to i64*
  %6853 = load i64, i64* %6852, align 1
  %6854 = bitcast i8* %6846 to double*
  %6855 = load double, double* %6854, align 1
  %6856 = fmul double %6850, %6855
  %6857 = bitcast i8* %6844 to double*
  store double %6856, double* %6857, align 1
  %6858 = getelementptr inbounds i8, i8* %6844, i64 8
  %6859 = bitcast i8* %6858 to i64*
  store i64 %6853, i64* %6859, align 1
  store %struct.Memory* %loadMem_47d6ac, %struct.Memory** %MEMORY
  %loadMem_47d6b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 33
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %6862 to i64*
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6864 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6863, i64 0, i64 1
  %YMM1.i577 = bitcast %union.VectorReg* %6864 to %"class.std::bitset"*
  %6865 = bitcast %"class.std::bitset"* %YMM1.i577 to i8*
  %6866 = bitcast %"class.std::bitset"* %YMM1.i577 to i8*
  %6867 = load i64, i64* %PC.i576
  %6868 = add i64 %6867, 9
  store i64 %6868, i64* %PC.i576
  %6869 = bitcast i8* %6866 to double*
  %6870 = load double, double* %6869, align 1
  %6871 = getelementptr inbounds i8, i8* %6866, i64 8
  %6872 = bitcast i8* %6871 to i64*
  %6873 = load i64, i64* %6872, align 1
  %6874 = load double, double* bitcast (%G_0x6cea40_type* @G_0x6cea40 to double*)
  %6875 = fsub double %6870, %6874
  %6876 = bitcast i8* %6865 to double*
  store double %6875, double* %6876, align 1
  %6877 = getelementptr inbounds i8, i8* %6865, i64 8
  %6878 = bitcast i8* %6877 to i64*
  store i64 %6873, i64* %6878, align 1
  store %struct.Memory* %loadMem_47d6b0, %struct.Memory** %MEMORY
  %loadMem_47d6b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6880 = getelementptr inbounds %struct.GPR, %struct.GPR* %6879, i32 0, i32 33
  %6881 = getelementptr inbounds %struct.Reg, %struct.Reg* %6880, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %6881 to i64*
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6883 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6882, i64 0, i64 3
  %YMM3.i575 = bitcast %union.VectorReg* %6883 to %"class.std::bitset"*
  %6884 = bitcast %"class.std::bitset"* %YMM3.i575 to i8*
  %6885 = load i64, i64* %PC.i574
  %6886 = add i64 %6885, 10
  store i64 %6886, i64* %PC.i574
  %6887 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  %6888 = sitofp i64 %6887 to double
  %6889 = bitcast i8* %6884 to double*
  store double %6888, double* %6889, align 1
  store %struct.Memory* %loadMem_47d6b9, %struct.Memory** %MEMORY
  %loadMem_47d6c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 33
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %6892 to i64*
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6894 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6893, i64 0, i64 1
  %YMM1.i572 = bitcast %union.VectorReg* %6894 to %"class.std::bitset"*
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6896 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6895, i64 0, i64 3
  %XMM3.i573 = bitcast %union.VectorReg* %6896 to %union.vec128_t*
  %6897 = bitcast %"class.std::bitset"* %YMM1.i572 to i8*
  %6898 = bitcast %"class.std::bitset"* %YMM1.i572 to i8*
  %6899 = bitcast %union.vec128_t* %XMM3.i573 to i8*
  %6900 = load i64, i64* %PC.i571
  %6901 = add i64 %6900, 4
  store i64 %6901, i64* %PC.i571
  %6902 = bitcast i8* %6898 to double*
  %6903 = load double, double* %6902, align 1
  %6904 = getelementptr inbounds i8, i8* %6898, i64 8
  %6905 = bitcast i8* %6904 to i64*
  %6906 = load i64, i64* %6905, align 1
  %6907 = bitcast i8* %6899 to double*
  %6908 = load double, double* %6907, align 1
  %6909 = fmul double %6903, %6908
  %6910 = bitcast i8* %6897 to double*
  store double %6909, double* %6910, align 1
  %6911 = getelementptr inbounds i8, i8* %6897, i64 8
  %6912 = bitcast i8* %6911 to i64*
  store i64 %6906, i64* %6912, align 1
  store %struct.Memory* %loadMem_47d6c3, %struct.Memory** %MEMORY
  %loadMem_47d6c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6914 = getelementptr inbounds %struct.GPR, %struct.GPR* %6913, i32 0, i32 33
  %6915 = getelementptr inbounds %struct.Reg, %struct.Reg* %6914, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %6915 to i64*
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6917 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6916, i64 0, i64 2
  %YMM2.i569 = bitcast %union.VectorReg* %6917 to %"class.std::bitset"*
  %6918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6919 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6918, i64 0, i64 1
  %XMM1.i570 = bitcast %union.VectorReg* %6919 to %union.vec128_t*
  %6920 = bitcast %"class.std::bitset"* %YMM2.i569 to i8*
  %6921 = bitcast %"class.std::bitset"* %YMM2.i569 to i8*
  %6922 = bitcast %union.vec128_t* %XMM1.i570 to i8*
  %6923 = load i64, i64* %PC.i568
  %6924 = add i64 %6923, 4
  store i64 %6924, i64* %PC.i568
  %6925 = bitcast i8* %6921 to double*
  %6926 = load double, double* %6925, align 1
  %6927 = getelementptr inbounds i8, i8* %6921, i64 8
  %6928 = bitcast i8* %6927 to i64*
  %6929 = load i64, i64* %6928, align 1
  %6930 = bitcast i8* %6922 to double*
  %6931 = load double, double* %6930, align 1
  %6932 = fadd double %6926, %6931
  %6933 = bitcast i8* %6920 to double*
  store double %6932, double* %6933, align 1
  %6934 = getelementptr inbounds i8, i8* %6920, i64 8
  %6935 = bitcast i8* %6934 to i64*
  store i64 %6929, i64* %6935, align 1
  store %struct.Memory* %loadMem_47d6c7, %struct.Memory** %MEMORY
  %loadMem_47d6cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 33
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %6938 to i64*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6940 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6939, i64 0, i64 2
  %YMM2.i566 = bitcast %union.VectorReg* %6940 to %"class.std::bitset"*
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6942 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6941, i64 0, i64 0
  %XMM0.i567 = bitcast %union.VectorReg* %6942 to %union.vec128_t*
  %6943 = bitcast %"class.std::bitset"* %YMM2.i566 to i8*
  %6944 = bitcast %"class.std::bitset"* %YMM2.i566 to i8*
  %6945 = bitcast %union.vec128_t* %XMM0.i567 to i8*
  %6946 = load i64, i64* %PC.i565
  %6947 = add i64 %6946, 4
  store i64 %6947, i64* %PC.i565
  %6948 = bitcast i8* %6944 to double*
  %6949 = load double, double* %6948, align 1
  %6950 = getelementptr inbounds i8, i8* %6944, i64 8
  %6951 = bitcast i8* %6950 to i64*
  %6952 = load i64, i64* %6951, align 1
  %6953 = bitcast i8* %6945 to double*
  %6954 = load double, double* %6953, align 1
  %6955 = fadd double %6949, %6954
  %6956 = bitcast i8* %6943 to double*
  store double %6955, double* %6956, align 1
  %6957 = getelementptr inbounds i8, i8* %6943, i64 8
  %6958 = bitcast i8* %6957 to i64*
  store i64 %6952, i64* %6958, align 1
  store %struct.Memory* %loadMem_47d6cb, %struct.Memory** %MEMORY
  %loadMem_47d6cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6960 = getelementptr inbounds %struct.GPR, %struct.GPR* %6959, i32 0, i32 33
  %6961 = getelementptr inbounds %struct.Reg, %struct.Reg* %6960, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %6961 to i64*
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6963 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6962, i64 0, i64 0
  %YMM0.i563 = bitcast %union.VectorReg* %6963 to %"class.std::bitset"*
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6965 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6964, i64 0, i64 2
  %XMM2.i564 = bitcast %union.VectorReg* %6965 to %union.vec128_t*
  %6966 = bitcast %"class.std::bitset"* %YMM0.i563 to i8*
  %6967 = bitcast %union.vec128_t* %XMM2.i564 to i8*
  %6968 = load i64, i64* %PC.i562
  %6969 = add i64 %6968, 3
  store i64 %6969, i64* %PC.i562
  %6970 = bitcast i8* %6967 to <2 x i32>*
  %6971 = load <2 x i32>, <2 x i32>* %6970, align 1
  %6972 = getelementptr inbounds i8, i8* %6967, i64 8
  %6973 = bitcast i8* %6972 to <2 x i32>*
  %6974 = load <2 x i32>, <2 x i32>* %6973, align 1
  %6975 = extractelement <2 x i32> %6971, i32 0
  %6976 = bitcast i8* %6966 to i32*
  store i32 %6975, i32* %6976, align 1
  %6977 = extractelement <2 x i32> %6971, i32 1
  %6978 = getelementptr inbounds i8, i8* %6966, i64 4
  %6979 = bitcast i8* %6978 to i32*
  store i32 %6977, i32* %6979, align 1
  %6980 = extractelement <2 x i32> %6974, i32 0
  %6981 = getelementptr inbounds i8, i8* %6966, i64 8
  %6982 = bitcast i8* %6981 to i32*
  store i32 %6980, i32* %6982, align 1
  %6983 = extractelement <2 x i32> %6974, i32 1
  %6984 = getelementptr inbounds i8, i8* %6966, i64 12
  %6985 = bitcast i8* %6984 to i32*
  store i32 %6983, i32* %6985, align 1
  store %struct.Memory* %loadMem_47d6cf, %struct.Memory** %MEMORY
  %loadMem1_47d6d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6987 = getelementptr inbounds %struct.GPR, %struct.GPR* %6986, i32 0, i32 33
  %6988 = getelementptr inbounds %struct.Reg, %struct.Reg* %6987, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %6988 to i64*
  %6989 = load i64, i64* %PC.i561
  %6990 = add i64 %6989, -509218
  %6991 = load i64, i64* %PC.i561
  %6992 = add i64 %6991, 5
  %6993 = load i64, i64* %PC.i561
  %6994 = add i64 %6993, 5
  store i64 %6994, i64* %PC.i561
  %6995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6996 = load i64, i64* %6995, align 8
  %6997 = add i64 %6996, -8
  %6998 = inttoptr i64 %6997 to i64*
  store i64 %6992, i64* %6998
  store i64 %6997, i64* %6995, align 8
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6990, i64* %6999, align 8
  store %struct.Memory* %loadMem1_47d6d2, %struct.Memory** %MEMORY
  %loadMem2_47d6d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d6d2 = load i64, i64* %3
  %7000 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d6d2)
  store %struct.Memory* %7000, %struct.Memory** %MEMORY
  %loadMem_47d6d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7002 = getelementptr inbounds %struct.GPR, %struct.GPR* %7001, i32 0, i32 33
  %7003 = getelementptr inbounds %struct.Reg, %struct.Reg* %7002, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %7003 to i64*
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7005 = getelementptr inbounds %struct.GPR, %struct.GPR* %7004, i32 0, i32 1
  %7006 = getelementptr inbounds %struct.Reg, %struct.Reg* %7005, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %7006 to i64*
  %7007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7008 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7007, i64 0, i64 0
  %XMM0.i558 = bitcast %union.VectorReg* %7008 to %union.vec128_t*
  %7009 = bitcast %union.vec128_t* %XMM0.i558 to i8*
  %7010 = load i64, i64* %PC.i556
  %7011 = add i64 %7010, 5
  store i64 %7011, i64* %PC.i556
  %7012 = bitcast i8* %7009 to double*
  %7013 = load double, double* %7012, align 1
  %7014 = call double @llvm.trunc.f64(double %7013)
  %7015 = call double @llvm.fabs.f64(double %7014)
  %7016 = fcmp ogt double %7015, 0x43E0000000000000
  %7017 = fptosi double %7014 to i64
  %7018 = select i1 %7016, i64 -9223372036854775808, i64 %7017
  store i64 %7018, i64* %RAX.i557, align 8
  store %struct.Memory* %loadMem_47d6d7, %struct.Memory** %MEMORY
  %loadMem_47d6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7020 = getelementptr inbounds %struct.GPR, %struct.GPR* %7019, i32 0, i32 33
  %7021 = getelementptr inbounds %struct.Reg, %struct.Reg* %7020, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %7021 to i64*
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7023 = getelementptr inbounds %struct.GPR, %struct.GPR* %7022, i32 0, i32 1
  %7024 = getelementptr inbounds %struct.Reg, %struct.Reg* %7023, i32 0, i32 0
  %RAX.i555 = bitcast %union.anon* %7024 to i64*
  %7025 = load i64, i64* %RAX.i555
  %7026 = load i64, i64* %PC.i554
  %7027 = add i64 %7026, 8
  store i64 %7027, i64* %PC.i554
  store i64 %7025, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47d6dc, %struct.Memory** %MEMORY
  br label %block_.L_47d6e4

block_.L_47d6e4:                                  ; preds = %block_.L_47d67d, %block_47d578
  %loadMem_47d6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 33
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %7030 to i64*
  %7031 = load i64, i64* %PC.i553
  %7032 = add i64 %7031, 775
  %7033 = load i64, i64* %PC.i553
  %7034 = add i64 %7033, 5
  store i64 %7034, i64* %PC.i553
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7032, i64* %7035, align 8
  store %struct.Memory* %loadMem_47d6e4, %struct.Memory** %MEMORY
  br label %block_.L_47d9eb

block_.L_47d6e9:                                  ; preds = %block_47d556
  %loadMem_47d6e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7037 = getelementptr inbounds %struct.GPR, %struct.GPR* %7036, i32 0, i32 33
  %7038 = getelementptr inbounds %struct.Reg, %struct.Reg* %7037, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %7038 to i64*
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7040 = getelementptr inbounds %struct.GPR, %struct.GPR* %7039, i32 0, i32 1
  %7041 = getelementptr inbounds %struct.Reg, %struct.Reg* %7040, i32 0, i32 0
  %RAX.i552 = bitcast %union.anon* %7041 to i64*
  %7042 = load i64, i64* %PC.i551
  %7043 = add i64 %7042, 8
  store i64 %7043, i64* %PC.i551
  %7044 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7044, i64* %RAX.i552, align 8
  store %struct.Memory* %loadMem_47d6e9, %struct.Memory** %MEMORY
  %loadMem_47d6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7046 = getelementptr inbounds %struct.GPR, %struct.GPR* %7045, i32 0, i32 33
  %7047 = getelementptr inbounds %struct.Reg, %struct.Reg* %7046, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %7047 to i64*
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7049 = getelementptr inbounds %struct.GPR, %struct.GPR* %7048, i32 0, i32 1
  %7050 = getelementptr inbounds %struct.Reg, %struct.Reg* %7049, i32 0, i32 0
  %RAX.i550 = bitcast %union.anon* %7050 to i64*
  %7051 = load i64, i64* %RAX.i550
  %7052 = add i64 %7051, 72568
  %7053 = load i64, i64* %PC.i549
  %7054 = add i64 %7053, 7
  store i64 %7054, i64* %PC.i549
  %7055 = inttoptr i64 %7052 to i32*
  %7056 = load i32, i32* %7055
  %7057 = sub i32 %7056, 1
  %7058 = icmp ult i32 %7056, 1
  %7059 = zext i1 %7058 to i8
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7059, i8* %7060, align 1
  %7061 = and i32 %7057, 255
  %7062 = call i32 @llvm.ctpop.i32(i32 %7061)
  %7063 = trunc i32 %7062 to i8
  %7064 = and i8 %7063, 1
  %7065 = xor i8 %7064, 1
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7065, i8* %7066, align 1
  %7067 = xor i32 %7056, 1
  %7068 = xor i32 %7067, %7057
  %7069 = lshr i32 %7068, 4
  %7070 = trunc i32 %7069 to i8
  %7071 = and i8 %7070, 1
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7071, i8* %7072, align 1
  %7073 = icmp eq i32 %7057, 0
  %7074 = zext i1 %7073 to i8
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7074, i8* %7075, align 1
  %7076 = lshr i32 %7057, 31
  %7077 = trunc i32 %7076 to i8
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7077, i8* %7078, align 1
  %7079 = lshr i32 %7056, 31
  %7080 = xor i32 %7076, %7079
  %7081 = add i32 %7080, %7079
  %7082 = icmp eq i32 %7081, 2
  %7083 = zext i1 %7082 to i8
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7083, i8* %7084, align 1
  store %struct.Memory* %loadMem_47d6f1, %struct.Memory** %MEMORY
  %loadMem_47d6f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7086 = getelementptr inbounds %struct.GPR, %struct.GPR* %7085, i32 0, i32 33
  %7087 = getelementptr inbounds %struct.Reg, %struct.Reg* %7086, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %7087 to i64*
  %7088 = load i64, i64* %PC.i548
  %7089 = add i64 %7088, 381
  %7090 = load i64, i64* %PC.i548
  %7091 = add i64 %7090, 6
  %7092 = load i64, i64* %PC.i548
  %7093 = add i64 %7092, 6
  store i64 %7093, i64* %PC.i548
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7095 = load i8, i8* %7094, align 1
  %7096 = icmp eq i8 %7095, 0
  %7097 = zext i1 %7096 to i8
  store i8 %7097, i8* %BRANCH_TAKEN, align 1
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7099 = select i1 %7096, i64 %7089, i64 %7091
  store i64 %7099, i64* %7098, align 8
  store %struct.Memory* %loadMem_47d6f8, %struct.Memory** %MEMORY
  %loadBr_47d6f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d6f8 = icmp eq i8 %loadBr_47d6f8, 1
  br i1 %cmpBr_47d6f8, label %block_.L_47d875, label %block_47d6fe

block_47d6fe:                                     ; preds = %block_.L_47d6e9
  %loadMem_47d6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7101 = getelementptr inbounds %struct.GPR, %struct.GPR* %7100, i32 0, i32 33
  %7102 = getelementptr inbounds %struct.Reg, %struct.Reg* %7101, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %7102 to i64*
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7104 = getelementptr inbounds %struct.GPR, %struct.GPR* %7103, i32 0, i32 1
  %7105 = getelementptr inbounds %struct.Reg, %struct.Reg* %7104, i32 0, i32 0
  %RAX.i547 = bitcast %union.anon* %7105 to i64*
  %7106 = load i64, i64* %PC.i546
  %7107 = add i64 %7106, 8
  store i64 %7107, i64* %PC.i546
  %7108 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %7108, i64* %RAX.i547, align 8
  store %struct.Memory* %loadMem_47d6fe, %struct.Memory** %MEMORY
  %loadMem_47d706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7110 = getelementptr inbounds %struct.GPR, %struct.GPR* %7109, i32 0, i32 33
  %7111 = getelementptr inbounds %struct.Reg, %struct.Reg* %7110, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %7111 to i64*
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7113 = getelementptr inbounds %struct.GPR, %struct.GPR* %7112, i32 0, i32 1
  %7114 = getelementptr inbounds %struct.Reg, %struct.Reg* %7113, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %7114 to i64*
  %7115 = load i64, i64* %RAX.i545
  %7116 = add i64 %7115, 72564
  %7117 = load i64, i64* %PC.i544
  %7118 = add i64 %7117, 7
  store i64 %7118, i64* %PC.i544
  %7119 = inttoptr i64 %7116 to i32*
  %7120 = load i32, i32* %7119
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7121, align 1
  %7122 = and i32 %7120, 255
  %7123 = call i32 @llvm.ctpop.i32(i32 %7122)
  %7124 = trunc i32 %7123 to i8
  %7125 = and i8 %7124, 1
  %7126 = xor i8 %7125, 1
  %7127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7126, i8* %7127, align 1
  %7128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7128, align 1
  %7129 = icmp eq i32 %7120, 0
  %7130 = zext i1 %7129 to i8
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7130, i8* %7131, align 1
  %7132 = lshr i32 %7120, 31
  %7133 = trunc i32 %7132 to i8
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7133, i8* %7134, align 1
  %7135 = lshr i32 %7120, 31
  %7136 = xor i32 %7132, %7135
  %7137 = add i32 %7136, %7135
  %7138 = icmp eq i32 %7137, 2
  %7139 = zext i1 %7138 to i8
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7139, i8* %7140, align 1
  store %struct.Memory* %loadMem_47d706, %struct.Memory** %MEMORY
  %loadMem_47d70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7142 = getelementptr inbounds %struct.GPR, %struct.GPR* %7141, i32 0, i32 33
  %7143 = getelementptr inbounds %struct.Reg, %struct.Reg* %7142, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %7143 to i64*
  %7144 = load i64, i64* %PC.i543
  %7145 = add i64 %7144, 360
  %7146 = load i64, i64* %PC.i543
  %7147 = add i64 %7146, 6
  %7148 = load i64, i64* %PC.i543
  %7149 = add i64 %7148, 6
  store i64 %7149, i64* %PC.i543
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7151 = load i8, i8* %7150, align 1
  %7152 = icmp ne i8 %7151, 0
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7154 = load i8, i8* %7153, align 1
  %7155 = icmp ne i8 %7154, 0
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7157 = load i8, i8* %7156, align 1
  %7158 = icmp ne i8 %7157, 0
  %7159 = xor i1 %7155, %7158
  %7160 = or i1 %7152, %7159
  %7161 = zext i1 %7160 to i8
  store i8 %7161, i8* %BRANCH_TAKEN, align 1
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7163 = select i1 %7160, i64 %7145, i64 %7147
  store i64 %7163, i64* %7162, align 8
  store %struct.Memory* %loadMem_47d70d, %struct.Memory** %MEMORY
  %loadBr_47d70d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d70d = icmp eq i8 %loadBr_47d70d, 1
  br i1 %cmpBr_47d70d, label %block_.L_47d875, label %block_47d713

block_47d713:                                     ; preds = %block_47d6fe
  %loadMem_47d713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 33
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %7166 to i64*
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 1
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %EAX.i541 = bitcast %union.anon* %7169 to i32*
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 1
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %RAX.i542 = bitcast %union.anon* %7172 to i64*
  %7173 = load i64, i64* %RAX.i542
  %7174 = load i32, i32* %EAX.i541
  %7175 = zext i32 %7174 to i64
  %7176 = load i64, i64* %PC.i540
  %7177 = add i64 %7176, 2
  store i64 %7177, i64* %PC.i540
  %7178 = xor i64 %7175, %7173
  %7179 = trunc i64 %7178 to i32
  %7180 = and i64 %7178, 4294967295
  store i64 %7180, i64* %RAX.i542, align 8
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7181, align 1
  %7182 = and i32 %7179, 255
  %7183 = call i32 @llvm.ctpop.i32(i32 %7182)
  %7184 = trunc i32 %7183 to i8
  %7185 = and i8 %7184, 1
  %7186 = xor i8 %7185, 1
  %7187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7186, i8* %7187, align 1
  %7188 = icmp eq i32 %7179, 0
  %7189 = zext i1 %7188 to i8
  %7190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7189, i8* %7190, align 1
  %7191 = lshr i32 %7179, 31
  %7192 = trunc i32 %7191 to i8
  %7193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7192, i8* %7193, align 1
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7194, align 1
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7195, align 1
  store %struct.Memory* %loadMem_47d713, %struct.Memory** %MEMORY
  %loadMem_47d715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7197 = getelementptr inbounds %struct.GPR, %struct.GPR* %7196, i32 0, i32 33
  %7198 = getelementptr inbounds %struct.Reg, %struct.Reg* %7197, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %7198 to i64*
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7200 = getelementptr inbounds %struct.GPR, %struct.GPR* %7199, i32 0, i32 1
  %7201 = getelementptr inbounds %struct.Reg, %struct.Reg* %7200, i32 0, i32 0
  %EAX.i538 = bitcast %union.anon* %7201 to i32*
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7203 = getelementptr inbounds %struct.GPR, %struct.GPR* %7202, i32 0, i32 5
  %7204 = getelementptr inbounds %struct.Reg, %struct.Reg* %7203, i32 0, i32 0
  %RCX.i539 = bitcast %union.anon* %7204 to i64*
  %7205 = load i32, i32* %EAX.i538
  %7206 = zext i32 %7205 to i64
  %7207 = load i64, i64* %PC.i537
  %7208 = add i64 %7207, 2
  store i64 %7208, i64* %PC.i537
  %7209 = and i64 %7206, 4294967295
  store i64 %7209, i64* %RCX.i539, align 8
  store %struct.Memory* %loadMem_47d715, %struct.Memory** %MEMORY
  %loadMem_47d717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 33
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %7212 to i64*
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7214 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7213, i64 0, i64 0
  %YMM0.i536 = bitcast %union.VectorReg* %7214 to %"class.std::bitset"*
  %7215 = bitcast %"class.std::bitset"* %YMM0.i536 to i8*
  %7216 = load i64, i64* %PC.i535
  %7217 = add i64 %7216, ptrtoint (%G_0x34169__rip__type* @G_0x34169__rip_ to i64)
  %7218 = load i64, i64* %PC.i535
  %7219 = add i64 %7218, 8
  store i64 %7219, i64* %PC.i535
  %7220 = inttoptr i64 %7217 to double*
  %7221 = load double, double* %7220
  %7222 = bitcast i8* %7215 to double*
  store double %7221, double* %7222, align 1
  %7223 = getelementptr inbounds i8, i8* %7215, i64 8
  %7224 = bitcast i8* %7223 to double*
  store double 0.000000e+00, double* %7224, align 1
  store %struct.Memory* %loadMem_47d717, %struct.Memory** %MEMORY
  %loadMem_47d71f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 33
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %7227 to i64*
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7229 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7228, i64 0, i64 1
  %YMM1.i534 = bitcast %union.VectorReg* %7229 to %"class.std::bitset"*
  %7230 = bitcast %"class.std::bitset"* %YMM1.i534 to i8*
  %7231 = load i64, i64* %PC.i533
  %7232 = add i64 %7231, 9
  store i64 %7232, i64* %PC.i533
  %7233 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %7234 = bitcast i8* %7230 to double*
  store double %7233, double* %7234, align 1
  %7235 = getelementptr inbounds i8, i8* %7230, i64 8
  %7236 = bitcast i8* %7235 to double*
  store double 0.000000e+00, double* %7236, align 1
  store %struct.Memory* %loadMem_47d71f, %struct.Memory** %MEMORY
  %loadMem_47d728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7238 = getelementptr inbounds %struct.GPR, %struct.GPR* %7237, i32 0, i32 33
  %7239 = getelementptr inbounds %struct.Reg, %struct.Reg* %7238, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %7239 to i64*
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7241 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7240, i64 0, i64 2
  %YMM2.i532 = bitcast %union.VectorReg* %7241 to %"class.std::bitset"*
  %7242 = bitcast %"class.std::bitset"* %YMM2.i532 to i8*
  %7243 = load i64, i64* %PC.i531
  %7244 = add i64 %7243, 9
  store i64 %7244, i64* %PC.i531
  %7245 = load i32, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  %7246 = sitofp i32 %7245 to double
  %7247 = bitcast i8* %7242 to double*
  store double %7246, double* %7247, align 1
  store %struct.Memory* %loadMem_47d728, %struct.Memory** %MEMORY
  %loadMem_47d731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 33
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %7250 to i64*
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7252 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7251, i64 0, i64 1
  %YMM1.i529 = bitcast %union.VectorReg* %7252 to %"class.std::bitset"*
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7254 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7253, i64 0, i64 2
  %XMM2.i530 = bitcast %union.VectorReg* %7254 to %union.vec128_t*
  %7255 = bitcast %"class.std::bitset"* %YMM1.i529 to i8*
  %7256 = bitcast %"class.std::bitset"* %YMM1.i529 to i8*
  %7257 = bitcast %union.vec128_t* %XMM2.i530 to i8*
  %7258 = load i64, i64* %PC.i528
  %7259 = add i64 %7258, 4
  store i64 %7259, i64* %PC.i528
  %7260 = bitcast i8* %7256 to double*
  %7261 = load double, double* %7260, align 1
  %7262 = getelementptr inbounds i8, i8* %7256, i64 8
  %7263 = bitcast i8* %7262 to i64*
  %7264 = load i64, i64* %7263, align 1
  %7265 = bitcast i8* %7257 to double*
  %7266 = load double, double* %7265, align 1
  %7267 = fmul double %7261, %7266
  %7268 = bitcast i8* %7255 to double*
  store double %7267, double* %7268, align 1
  %7269 = getelementptr inbounds i8, i8* %7255, i64 8
  %7270 = bitcast i8* %7269 to i64*
  store i64 %7264, i64* %7270, align 1
  store %struct.Memory* %loadMem_47d731, %struct.Memory** %MEMORY
  %loadMem_47d735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 33
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %7273 to i64*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7274, i64 0, i64 2
  %YMM2.i527 = bitcast %union.VectorReg* %7275 to %"class.std::bitset"*
  %7276 = bitcast %"class.std::bitset"* %YMM2.i527 to i8*
  %7277 = load i64, i64* %PC.i526
  %7278 = add i64 %7277, 9
  store i64 %7278, i64* %PC.i526
  %7279 = load i32, i32* bitcast (%G_0x6cc5dc_type* @G_0x6cc5dc to i32*)
  %7280 = sitofp i32 %7279 to double
  %7281 = bitcast i8* %7276 to double*
  store double %7280, double* %7281, align 1
  store %struct.Memory* %loadMem_47d735, %struct.Memory** %MEMORY
  %loadMem_47d73e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7283 = getelementptr inbounds %struct.GPR, %struct.GPR* %7282, i32 0, i32 33
  %7284 = getelementptr inbounds %struct.Reg, %struct.Reg* %7283, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %7284 to i64*
  %7285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7286 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7285, i64 0, i64 2
  %YMM2.i525 = bitcast %union.VectorReg* %7286 to %"class.std::bitset"*
  %7287 = bitcast %"class.std::bitset"* %YMM2.i525 to i8*
  %7288 = bitcast %"class.std::bitset"* %YMM2.i525 to i8*
  %7289 = load i64, i64* %PC.i524
  %7290 = add i64 %7289, 9
  store i64 %7290, i64* %PC.i524
  %7291 = bitcast i8* %7288 to double*
  %7292 = load double, double* %7291, align 1
  %7293 = getelementptr inbounds i8, i8* %7288, i64 8
  %7294 = bitcast i8* %7293 to i64*
  %7295 = load i64, i64* %7294, align 1
  %7296 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %7297 = fmul double %7292, %7296
  %7298 = bitcast i8* %7287 to double*
  store double %7297, double* %7298, align 1
  %7299 = getelementptr inbounds i8, i8* %7287, i64 8
  %7300 = bitcast i8* %7299 to i64*
  store i64 %7295, i64* %7300, align 1
  store %struct.Memory* %loadMem_47d73e, %struct.Memory** %MEMORY
  %loadMem_47d747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7302 = getelementptr inbounds %struct.GPR, %struct.GPR* %7301, i32 0, i32 33
  %7303 = getelementptr inbounds %struct.Reg, %struct.Reg* %7302, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %7303 to i64*
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7304, i64 0, i64 3
  %YMM3.i523 = bitcast %union.VectorReg* %7305 to %"class.std::bitset"*
  %7306 = bitcast %"class.std::bitset"* %YMM3.i523 to i8*
  %7307 = load i64, i64* %PC.i522
  %7308 = add i64 %7307, 9
  store i64 %7308, i64* %PC.i522
  %7309 = load i32, i32* bitcast (%G_0x6cc5e0_type* @G_0x6cc5e0 to i32*)
  %7310 = sitofp i32 %7309 to double
  %7311 = bitcast i8* %7306 to double*
  store double %7310, double* %7311, align 1
  store %struct.Memory* %loadMem_47d747, %struct.Memory** %MEMORY
  %loadMem_47d750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7313 = getelementptr inbounds %struct.GPR, %struct.GPR* %7312, i32 0, i32 33
  %7314 = getelementptr inbounds %struct.Reg, %struct.Reg* %7313, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %7314 to i64*
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7316 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7315, i64 0, i64 3
  %YMM3.i521 = bitcast %union.VectorReg* %7316 to %"class.std::bitset"*
  %7317 = bitcast %"class.std::bitset"* %YMM3.i521 to i8*
  %7318 = bitcast %"class.std::bitset"* %YMM3.i521 to i8*
  %7319 = load i64, i64* %PC.i520
  %7320 = add i64 %7319, 9
  store i64 %7320, i64* %PC.i520
  %7321 = bitcast i8* %7318 to double*
  %7322 = load double, double* %7321, align 1
  %7323 = getelementptr inbounds i8, i8* %7318, i64 8
  %7324 = bitcast i8* %7323 to i64*
  %7325 = load i64, i64* %7324, align 1
  %7326 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %7327 = fmul double %7322, %7326
  %7328 = bitcast i8* %7317 to double*
  store double %7327, double* %7328, align 1
  %7329 = getelementptr inbounds i8, i8* %7317, i64 8
  %7330 = bitcast i8* %7329 to i64*
  store i64 %7325, i64* %7330, align 1
  store %struct.Memory* %loadMem_47d750, %struct.Memory** %MEMORY
  %loadMem_47d759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7332 = getelementptr inbounds %struct.GPR, %struct.GPR* %7331, i32 0, i32 33
  %7333 = getelementptr inbounds %struct.Reg, %struct.Reg* %7332, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %7333 to i64*
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7335 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7334, i64 0, i64 2
  %YMM2.i518 = bitcast %union.VectorReg* %7335 to %"class.std::bitset"*
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7337 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7336, i64 0, i64 3
  %XMM3.i519 = bitcast %union.VectorReg* %7337 to %union.vec128_t*
  %7338 = bitcast %"class.std::bitset"* %YMM2.i518 to i8*
  %7339 = bitcast %"class.std::bitset"* %YMM2.i518 to i8*
  %7340 = bitcast %union.vec128_t* %XMM3.i519 to i8*
  %7341 = load i64, i64* %PC.i517
  %7342 = add i64 %7341, 4
  store i64 %7342, i64* %PC.i517
  %7343 = bitcast i8* %7339 to double*
  %7344 = load double, double* %7343, align 1
  %7345 = getelementptr inbounds i8, i8* %7339, i64 8
  %7346 = bitcast i8* %7345 to i64*
  %7347 = load i64, i64* %7346, align 1
  %7348 = bitcast i8* %7340 to double*
  %7349 = load double, double* %7348, align 1
  %7350 = fadd double %7344, %7349
  %7351 = bitcast i8* %7338 to double*
  store double %7350, double* %7351, align 1
  %7352 = getelementptr inbounds i8, i8* %7338, i64 8
  %7353 = bitcast i8* %7352 to i64*
  store i64 %7347, i64* %7353, align 1
  store %struct.Memory* %loadMem_47d759, %struct.Memory** %MEMORY
  %loadMem_47d75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7355 = getelementptr inbounds %struct.GPR, %struct.GPR* %7354, i32 0, i32 33
  %7356 = getelementptr inbounds %struct.Reg, %struct.Reg* %7355, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %7356 to i64*
  %7357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7358 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7357, i64 0, i64 1
  %YMM1.i515 = bitcast %union.VectorReg* %7358 to %"class.std::bitset"*
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7360 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7359, i64 0, i64 2
  %XMM2.i516 = bitcast %union.VectorReg* %7360 to %union.vec128_t*
  %7361 = bitcast %"class.std::bitset"* %YMM1.i515 to i8*
  %7362 = bitcast %"class.std::bitset"* %YMM1.i515 to i8*
  %7363 = bitcast %union.vec128_t* %XMM2.i516 to i8*
  %7364 = load i64, i64* %PC.i514
  %7365 = add i64 %7364, 4
  store i64 %7365, i64* %PC.i514
  %7366 = bitcast i8* %7362 to double*
  %7367 = load double, double* %7366, align 1
  %7368 = getelementptr inbounds i8, i8* %7362, i64 8
  %7369 = bitcast i8* %7368 to i64*
  %7370 = load i64, i64* %7369, align 1
  %7371 = bitcast i8* %7363 to double*
  %7372 = load double, double* %7371, align 1
  %7373 = fdiv double %7367, %7372
  %7374 = bitcast i8* %7361 to double*
  store double %7373, double* %7374, align 1
  %7375 = getelementptr inbounds i8, i8* %7361, i64 8
  %7376 = bitcast i8* %7375 to i64*
  store i64 %7370, i64* %7376, align 1
  store %struct.Memory* %loadMem_47d75d, %struct.Memory** %MEMORY
  %loadMem_47d761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7378 = getelementptr inbounds %struct.GPR, %struct.GPR* %7377, i32 0, i32 33
  %7379 = getelementptr inbounds %struct.Reg, %struct.Reg* %7378, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %7379 to i64*
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7381 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7380, i64 0, i64 1
  %YMM1.i512 = bitcast %union.VectorReg* %7381 to %"class.std::bitset"*
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7383 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7382, i64 0, i64 0
  %XMM0.i513 = bitcast %union.VectorReg* %7383 to %union.vec128_t*
  %7384 = bitcast %"class.std::bitset"* %YMM1.i512 to i8*
  %7385 = bitcast %"class.std::bitset"* %YMM1.i512 to i8*
  %7386 = bitcast %union.vec128_t* %XMM0.i513 to i8*
  %7387 = load i64, i64* %PC.i511
  %7388 = add i64 %7387, 4
  store i64 %7388, i64* %PC.i511
  %7389 = bitcast i8* %7385 to double*
  %7390 = load double, double* %7389, align 1
  %7391 = getelementptr inbounds i8, i8* %7385, i64 8
  %7392 = bitcast i8* %7391 to i64*
  %7393 = load i64, i64* %7392, align 1
  %7394 = bitcast i8* %7386 to double*
  %7395 = load double, double* %7394, align 1
  %7396 = fadd double %7390, %7395
  %7397 = bitcast i8* %7384 to double*
  store double %7396, double* %7397, align 1
  %7398 = getelementptr inbounds i8, i8* %7384, i64 8
  %7399 = bitcast i8* %7398 to i64*
  store i64 %7393, i64* %7399, align 1
  store %struct.Memory* %loadMem_47d761, %struct.Memory** %MEMORY
  %loadMem_47d765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 33
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 15
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %RBP.i509 = bitcast %union.anon* %7405 to i64*
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7407 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7406, i64 0, i64 0
  %XMM0.i510 = bitcast %union.VectorReg* %7407 to %union.vec128_t*
  %7408 = load i64, i64* %RBP.i509
  %7409 = sub i64 %7408, 56
  %7410 = bitcast %union.vec128_t* %XMM0.i510 to i8*
  %7411 = load i64, i64* %PC.i508
  %7412 = add i64 %7411, 5
  store i64 %7412, i64* %PC.i508
  %7413 = bitcast i8* %7410 to double*
  %7414 = load double, double* %7413, align 1
  %7415 = inttoptr i64 %7409 to double*
  store double %7414, double* %7415
  store %struct.Memory* %loadMem_47d765, %struct.Memory** %MEMORY
  %loadMem_47d76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7417 = getelementptr inbounds %struct.GPR, %struct.GPR* %7416, i32 0, i32 33
  %7418 = getelementptr inbounds %struct.Reg, %struct.Reg* %7417, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %7418 to i64*
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7420 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7419, i64 0, i64 0
  %YMM0.i506 = bitcast %union.VectorReg* %7420 to %"class.std::bitset"*
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7422 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7421, i64 0, i64 1
  %XMM1.i507 = bitcast %union.VectorReg* %7422 to %union.vec128_t*
  %7423 = bitcast %"class.std::bitset"* %YMM0.i506 to i8*
  %7424 = bitcast %union.vec128_t* %XMM1.i507 to i8*
  %7425 = load i64, i64* %PC.i505
  %7426 = add i64 %7425, 3
  store i64 %7426, i64* %PC.i505
  %7427 = bitcast i8* %7424 to <2 x i32>*
  %7428 = load <2 x i32>, <2 x i32>* %7427, align 1
  %7429 = getelementptr inbounds i8, i8* %7424, i64 8
  %7430 = bitcast i8* %7429 to <2 x i32>*
  %7431 = load <2 x i32>, <2 x i32>* %7430, align 1
  %7432 = extractelement <2 x i32> %7428, i32 0
  %7433 = bitcast i8* %7423 to i32*
  store i32 %7432, i32* %7433, align 1
  %7434 = extractelement <2 x i32> %7428, i32 1
  %7435 = getelementptr inbounds i8, i8* %7423, i64 4
  %7436 = bitcast i8* %7435 to i32*
  store i32 %7434, i32* %7436, align 1
  %7437 = extractelement <2 x i32> %7431, i32 0
  %7438 = getelementptr inbounds i8, i8* %7423, i64 8
  %7439 = bitcast i8* %7438 to i32*
  store i32 %7437, i32* %7439, align 1
  %7440 = extractelement <2 x i32> %7431, i32 1
  %7441 = getelementptr inbounds i8, i8* %7423, i64 12
  %7442 = bitcast i8* %7441 to i32*
  store i32 %7440, i32* %7442, align 1
  store %struct.Memory* %loadMem_47d76a, %struct.Memory** %MEMORY
  %loadMem_47d76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7444 = getelementptr inbounds %struct.GPR, %struct.GPR* %7443, i32 0, i32 33
  %7445 = getelementptr inbounds %struct.Reg, %struct.Reg* %7444, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %7445 to i64*
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7447 = getelementptr inbounds %struct.GPR, %struct.GPR* %7446, i32 0, i32 5
  %7448 = getelementptr inbounds %struct.Reg, %struct.Reg* %7447, i32 0, i32 0
  %RCX.i503 = bitcast %union.anon* %7448 to i64*
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7450 = getelementptr inbounds %struct.GPR, %struct.GPR* %7449, i32 0, i32 15
  %7451 = getelementptr inbounds %struct.Reg, %struct.Reg* %7450, i32 0, i32 0
  %RBP.i504 = bitcast %union.anon* %7451 to i64*
  %7452 = load i64, i64* %RBP.i504
  %7453 = sub i64 %7452, 64
  %7454 = load i64, i64* %RCX.i503
  %7455 = load i64, i64* %PC.i502
  %7456 = add i64 %7455, 4
  store i64 %7456, i64* %PC.i502
  %7457 = inttoptr i64 %7453 to i64*
  store i64 %7454, i64* %7457
  store %struct.Memory* %loadMem_47d76d, %struct.Memory** %MEMORY
  %loadMem1_47d771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7459 = getelementptr inbounds %struct.GPR, %struct.GPR* %7458, i32 0, i32 33
  %7460 = getelementptr inbounds %struct.Reg, %struct.Reg* %7459, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %7460 to i64*
  %7461 = load i64, i64* %PC.i501
  %7462 = add i64 %7461, -509377
  %7463 = load i64, i64* %PC.i501
  %7464 = add i64 %7463, 5
  %7465 = load i64, i64* %PC.i501
  %7466 = add i64 %7465, 5
  store i64 %7466, i64* %PC.i501
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7468 = load i64, i64* %7467, align 8
  %7469 = add i64 %7468, -8
  %7470 = inttoptr i64 %7469 to i64*
  store i64 %7464, i64* %7470
  store i64 %7469, i64* %7467, align 8
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7462, i64* %7471, align 8
  store %struct.Memory* %loadMem1_47d771, %struct.Memory** %MEMORY
  %loadMem2_47d771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d771 = load i64, i64* %3
  %7472 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d771)
  store %struct.Memory* %7472, %struct.Memory** %MEMORY
  %loadMem_47d776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7474 = getelementptr inbounds %struct.GPR, %struct.GPR* %7473, i32 0, i32 33
  %7475 = getelementptr inbounds %struct.Reg, %struct.Reg* %7474, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %7475 to i64*
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7477 = getelementptr inbounds %struct.GPR, %struct.GPR* %7476, i32 0, i32 1
  %7478 = getelementptr inbounds %struct.Reg, %struct.Reg* %7477, i32 0, i32 0
  %RAX.i498 = bitcast %union.anon* %7478 to i64*
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7480 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7479, i64 0, i64 0
  %XMM0.i499 = bitcast %union.VectorReg* %7480 to %union.vec128_t*
  %7481 = bitcast %union.vec128_t* %XMM0.i499 to i8*
  %7482 = load i64, i64* %PC.i497
  %7483 = add i64 %7482, 4
  store i64 %7483, i64* %PC.i497
  %7484 = bitcast i8* %7481 to double*
  %7485 = load double, double* %7484, align 1
  %7486 = call double @llvm.trunc.f64(double %7485)
  %7487 = call double @llvm.fabs.f64(double %7486)
  %7488 = fcmp ogt double %7487, 0x41DFFFFFFFC00000
  %7489 = fptosi double %7486 to i32
  %7490 = zext i32 %7489 to i64
  %7491 = select i1 %7488, i64 2147483648, i64 %7490
  store i64 %7491, i64* %RAX.i498, align 8
  store %struct.Memory* %loadMem_47d776, %struct.Memory** %MEMORY
  %loadMem_47d77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 33
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %7494 to i64*
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7496 = getelementptr inbounds %struct.GPR, %struct.GPR* %7495, i32 0, i32 1
  %7497 = getelementptr inbounds %struct.Reg, %struct.Reg* %7496, i32 0, i32 0
  %EAX.i495 = bitcast %union.anon* %7497 to i32*
  %7498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7499 = getelementptr inbounds %struct.GPR, %struct.GPR* %7498, i32 0, i32 5
  %7500 = getelementptr inbounds %struct.Reg, %struct.Reg* %7499, i32 0, i32 0
  %RCX.i496 = bitcast %union.anon* %7500 to i64*
  %7501 = load i32, i32* %EAX.i495
  %7502 = zext i32 %7501 to i64
  %7503 = load i64, i64* %PC.i494
  %7504 = add i64 %7503, 3
  store i64 %7504, i64* %PC.i494
  %7505 = shl i64 %7502, 32
  %7506 = ashr exact i64 %7505, 32
  store i64 %7506, i64* %RCX.i496, align 8
  store %struct.Memory* %loadMem_47d77a, %struct.Memory** %MEMORY
  %loadMem_47d77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7508 = getelementptr inbounds %struct.GPR, %struct.GPR* %7507, i32 0, i32 33
  %7509 = getelementptr inbounds %struct.Reg, %struct.Reg* %7508, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %7509 to i64*
  %7510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7511 = getelementptr inbounds %struct.GPR, %struct.GPR* %7510, i32 0, i32 5
  %7512 = getelementptr inbounds %struct.Reg, %struct.Reg* %7511, i32 0, i32 0
  %RCX.i493 = bitcast %union.anon* %7512 to i64*
  %7513 = load i64, i64* %RCX.i493
  %7514 = load i64, i64* %PC.i492
  %7515 = add i64 %7514, 8
  store i64 %7515, i64* %PC.i492
  store i64 %7513, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47d77d, %struct.Memory** %MEMORY
  %loadMem_47d785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7517 = getelementptr inbounds %struct.GPR, %struct.GPR* %7516, i32 0, i32 33
  %7518 = getelementptr inbounds %struct.Reg, %struct.Reg* %7517, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %7518 to i64*
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7520 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7519, i64 0, i64 0
  %YMM0.i491 = bitcast %union.VectorReg* %7520 to %"class.std::bitset"*
  %7521 = bitcast %"class.std::bitset"* %YMM0.i491 to i8*
  %7522 = load i64, i64* %PC.i490
  %7523 = add i64 %7522, 9
  store i64 %7523, i64* %PC.i490
  %7524 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %7525 = bitcast i8* %7521 to double*
  store double %7524, double* %7525, align 1
  %7526 = getelementptr inbounds i8, i8* %7521, i64 8
  %7527 = bitcast i8* %7526 to double*
  store double 0.000000e+00, double* %7527, align 1
  store %struct.Memory* %loadMem_47d785, %struct.Memory** %MEMORY
  %loadMem_47d78e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7529 = getelementptr inbounds %struct.GPR, %struct.GPR* %7528, i32 0, i32 33
  %7530 = getelementptr inbounds %struct.Reg, %struct.Reg* %7529, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %7530 to i64*
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7532 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7531, i64 0, i64 0
  %YMM0.i489 = bitcast %union.VectorReg* %7532 to %"class.std::bitset"*
  %7533 = bitcast %"class.std::bitset"* %YMM0.i489 to i8*
  %7534 = bitcast %"class.std::bitset"* %YMM0.i489 to i8*
  %7535 = load i64, i64* %PC.i488
  %7536 = add i64 %7535, 9
  store i64 %7536, i64* %PC.i488
  %7537 = bitcast i8* %7534 to double*
  %7538 = load double, double* %7537, align 1
  %7539 = getelementptr inbounds i8, i8* %7534, i64 8
  %7540 = bitcast i8* %7539 to i64*
  %7541 = load i64, i64* %7540, align 1
  %7542 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %7543 = fdiv double %7538, %7542
  %7544 = bitcast i8* %7533 to double*
  store double %7543, double* %7544, align 1
  %7545 = getelementptr inbounds i8, i8* %7533, i64 8
  %7546 = bitcast i8* %7545 to i64*
  store i64 %7541, i64* %7546, align 1
  store %struct.Memory* %loadMem_47d78e, %struct.Memory** %MEMORY
  %loadMem_47d797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7548 = getelementptr inbounds %struct.GPR, %struct.GPR* %7547, i32 0, i32 33
  %7549 = getelementptr inbounds %struct.Reg, %struct.Reg* %7548, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %7549 to i64*
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7551 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7550, i64 0, i64 1
  %YMM1.i487 = bitcast %union.VectorReg* %7551 to %"class.std::bitset"*
  %7552 = bitcast %"class.std::bitset"* %YMM1.i487 to i8*
  %7553 = load i64, i64* %PC.i486
  %7554 = add i64 %7553, 9
  store i64 %7554, i64* %PC.i486
  %7555 = load double, double* bitcast (%G_0x725570_type* @G_0x725570 to double*)
  %7556 = bitcast i8* %7552 to double*
  store double %7555, double* %7556, align 1
  %7557 = getelementptr inbounds i8, i8* %7552, i64 8
  %7558 = bitcast i8* %7557 to double*
  store double 0.000000e+00, double* %7558, align 1
  store %struct.Memory* %loadMem_47d797, %struct.Memory** %MEMORY
  %loadMem_47d7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7560 = getelementptr inbounds %struct.GPR, %struct.GPR* %7559, i32 0, i32 33
  %7561 = getelementptr inbounds %struct.Reg, %struct.Reg* %7560, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %7561 to i64*
  %7562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7563 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7562, i64 0, i64 2
  %YMM2.i485 = bitcast %union.VectorReg* %7563 to %"class.std::bitset"*
  %7564 = bitcast %"class.std::bitset"* %YMM2.i485 to i8*
  %7565 = load i64, i64* %PC.i484
  %7566 = add i64 %7565, 9
  store i64 %7566, i64* %PC.i484
  %7567 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %7568 = bitcast i8* %7564 to double*
  store double %7567, double* %7568, align 1
  %7569 = getelementptr inbounds i8, i8* %7564, i64 8
  %7570 = bitcast i8* %7569 to double*
  store double 0.000000e+00, double* %7570, align 1
  store %struct.Memory* %loadMem_47d7a0, %struct.Memory** %MEMORY
  %loadMem_47d7a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7572 = getelementptr inbounds %struct.GPR, %struct.GPR* %7571, i32 0, i32 33
  %7573 = getelementptr inbounds %struct.Reg, %struct.Reg* %7572, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %7573 to i64*
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7575 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7574, i64 0, i64 2
  %YMM2.i483 = bitcast %union.VectorReg* %7575 to %"class.std::bitset"*
  %7576 = bitcast %"class.std::bitset"* %YMM2.i483 to i8*
  %7577 = bitcast %"class.std::bitset"* %YMM2.i483 to i8*
  %7578 = load i64, i64* %PC.i482
  %7579 = add i64 %7578, 9
  store i64 %7579, i64* %PC.i482
  %7580 = bitcast i8* %7577 to double*
  %7581 = load double, double* %7580, align 1
  %7582 = getelementptr inbounds i8, i8* %7577, i64 8
  %7583 = bitcast i8* %7582 to i64*
  %7584 = load i64, i64* %7583, align 1
  %7585 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %7586 = fsub double %7581, %7585
  %7587 = bitcast i8* %7576 to double*
  store double %7586, double* %7587, align 1
  %7588 = getelementptr inbounds i8, i8* %7576, i64 8
  %7589 = bitcast i8* %7588 to i64*
  store i64 %7584, i64* %7589, align 1
  store %struct.Memory* %loadMem_47d7a9, %struct.Memory** %MEMORY
  %loadMem_47d7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7591 = getelementptr inbounds %struct.GPR, %struct.GPR* %7590, i32 0, i32 33
  %7592 = getelementptr inbounds %struct.Reg, %struct.Reg* %7591, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %7592 to i64*
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7594 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7593, i64 0, i64 1
  %YMM1.i480 = bitcast %union.VectorReg* %7594 to %"class.std::bitset"*
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7596 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7595, i64 0, i64 2
  %XMM2.i481 = bitcast %union.VectorReg* %7596 to %union.vec128_t*
  %7597 = bitcast %"class.std::bitset"* %YMM1.i480 to i8*
  %7598 = bitcast %"class.std::bitset"* %YMM1.i480 to i8*
  %7599 = bitcast %union.vec128_t* %XMM2.i481 to i8*
  %7600 = load i64, i64* %PC.i479
  %7601 = add i64 %7600, 4
  store i64 %7601, i64* %PC.i479
  %7602 = bitcast i8* %7598 to double*
  %7603 = load double, double* %7602, align 1
  %7604 = getelementptr inbounds i8, i8* %7598, i64 8
  %7605 = bitcast i8* %7604 to i64*
  %7606 = load i64, i64* %7605, align 1
  %7607 = bitcast i8* %7599 to double*
  %7608 = load double, double* %7607, align 1
  %7609 = fmul double %7603, %7608
  %7610 = bitcast i8* %7597 to double*
  store double %7609, double* %7610, align 1
  %7611 = getelementptr inbounds i8, i8* %7597, i64 8
  %7612 = bitcast i8* %7611 to i64*
  store i64 %7606, i64* %7612, align 1
  store %struct.Memory* %loadMem_47d7b2, %struct.Memory** %MEMORY
  %loadMem_47d7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 33
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %7615 to i64*
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7617 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7616, i64 0, i64 0
  %YMM0.i477 = bitcast %union.VectorReg* %7617 to %"class.std::bitset"*
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7619 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7618, i64 0, i64 1
  %XMM1.i478 = bitcast %union.VectorReg* %7619 to %union.vec128_t*
  %7620 = bitcast %"class.std::bitset"* %YMM0.i477 to i8*
  %7621 = bitcast %"class.std::bitset"* %YMM0.i477 to i8*
  %7622 = bitcast %union.vec128_t* %XMM1.i478 to i8*
  %7623 = load i64, i64* %PC.i476
  %7624 = add i64 %7623, 4
  store i64 %7624, i64* %PC.i476
  %7625 = bitcast i8* %7621 to double*
  %7626 = load double, double* %7625, align 1
  %7627 = getelementptr inbounds i8, i8* %7621, i64 8
  %7628 = bitcast i8* %7627 to i64*
  %7629 = load i64, i64* %7628, align 1
  %7630 = bitcast i8* %7622 to double*
  %7631 = load double, double* %7630, align 1
  %7632 = fsub double %7626, %7631
  %7633 = bitcast i8* %7620 to double*
  store double %7632, double* %7633, align 1
  %7634 = getelementptr inbounds i8, i8* %7620, i64 8
  %7635 = bitcast i8* %7634 to i64*
  store i64 %7629, i64* %7635, align 1
  store %struct.Memory* %loadMem_47d7b6, %struct.Memory** %MEMORY
  %loadMem_47d7ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7637 = getelementptr inbounds %struct.GPR, %struct.GPR* %7636, i32 0, i32 33
  %7638 = getelementptr inbounds %struct.Reg, %struct.Reg* %7637, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %7638 to i64*
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7640 = getelementptr inbounds %struct.GPR, %struct.GPR* %7639, i32 0, i32 15
  %7641 = getelementptr inbounds %struct.Reg, %struct.Reg* %7640, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %7641 to i64*
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7643 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7642, i64 0, i64 1
  %YMM1.i475 = bitcast %union.VectorReg* %7643 to %"class.std::bitset"*
  %7644 = bitcast %"class.std::bitset"* %YMM1.i475 to i8*
  %7645 = load i64, i64* %RBP.i474
  %7646 = sub i64 %7645, 56
  %7647 = load i64, i64* %PC.i473
  %7648 = add i64 %7647, 5
  store i64 %7648, i64* %PC.i473
  %7649 = inttoptr i64 %7646 to double*
  %7650 = load double, double* %7649
  %7651 = bitcast i8* %7644 to double*
  store double %7650, double* %7651, align 1
  %7652 = getelementptr inbounds i8, i8* %7644, i64 8
  %7653 = bitcast i8* %7652 to double*
  store double 0.000000e+00, double* %7653, align 1
  store %struct.Memory* %loadMem_47d7ba, %struct.Memory** %MEMORY
  %loadMem_47d7bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 33
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %7656 to i64*
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7658 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7657, i64 0, i64 0
  %YMM0.i471 = bitcast %union.VectorReg* %7658 to %"class.std::bitset"*
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7660 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7659, i64 0, i64 1
  %XMM1.i472 = bitcast %union.VectorReg* %7660 to %union.vec128_t*
  %7661 = bitcast %"class.std::bitset"* %YMM0.i471 to i8*
  %7662 = bitcast %"class.std::bitset"* %YMM0.i471 to i8*
  %7663 = bitcast %union.vec128_t* %XMM1.i472 to i8*
  %7664 = load i64, i64* %PC.i470
  %7665 = add i64 %7664, 4
  store i64 %7665, i64* %PC.i470
  %7666 = bitcast i8* %7662 to double*
  %7667 = load double, double* %7666, align 1
  %7668 = getelementptr inbounds i8, i8* %7662, i64 8
  %7669 = bitcast i8* %7668 to i64*
  %7670 = load i64, i64* %7669, align 1
  %7671 = bitcast i8* %7663 to double*
  %7672 = load double, double* %7671, align 1
  %7673 = fadd double %7667, %7672
  %7674 = bitcast i8* %7661 to double*
  store double %7673, double* %7674, align 1
  %7675 = getelementptr inbounds i8, i8* %7661, i64 8
  %7676 = bitcast i8* %7675 to i64*
  store i64 %7670, i64* %7676, align 1
  store %struct.Memory* %loadMem_47d7bf, %struct.Memory** %MEMORY
  %loadMem1_47d7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7678 = getelementptr inbounds %struct.GPR, %struct.GPR* %7677, i32 0, i32 33
  %7679 = getelementptr inbounds %struct.Reg, %struct.Reg* %7678, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %7679 to i64*
  %7680 = load i64, i64* %PC.i469
  %7681 = add i64 %7680, -509459
  %7682 = load i64, i64* %PC.i469
  %7683 = add i64 %7682, 5
  %7684 = load i64, i64* %PC.i469
  %7685 = add i64 %7684, 5
  store i64 %7685, i64* %PC.i469
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7687 = load i64, i64* %7686, align 8
  %7688 = add i64 %7687, -8
  %7689 = inttoptr i64 %7688 to i64*
  store i64 %7683, i64* %7689
  store i64 %7688, i64* %7686, align 8
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7681, i64* %7690, align 8
  store %struct.Memory* %loadMem1_47d7c3, %struct.Memory** %MEMORY
  %loadMem2_47d7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d7c3 = load i64, i64* %3
  %7691 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d7c3)
  store %struct.Memory* %7691, %struct.Memory** %MEMORY
  %loadMem_47d7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 33
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %7694 to i64*
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7696 = getelementptr inbounds %struct.GPR, %struct.GPR* %7695, i32 0, i32 1
  %7697 = getelementptr inbounds %struct.Reg, %struct.Reg* %7696, i32 0, i32 0
  %RAX.i465 = bitcast %union.anon* %7697 to i64*
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7699 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7698, i64 0, i64 0
  %XMM0.i466 = bitcast %union.VectorReg* %7699 to %union.vec128_t*
  %7700 = bitcast %union.vec128_t* %XMM0.i466 to i8*
  %7701 = load i64, i64* %PC.i464
  %7702 = add i64 %7701, 4
  store i64 %7702, i64* %PC.i464
  %7703 = bitcast i8* %7700 to double*
  %7704 = load double, double* %7703, align 1
  %7705 = call double @llvm.trunc.f64(double %7704)
  %7706 = call double @llvm.fabs.f64(double %7705)
  %7707 = fcmp ogt double %7706, 0x41DFFFFFFFC00000
  %7708 = fptosi double %7705 to i32
  %7709 = zext i32 %7708 to i64
  %7710 = select i1 %7707, i64 2147483648, i64 %7709
  store i64 %7710, i64* %RAX.i465, align 8
  store %struct.Memory* %loadMem_47d7c8, %struct.Memory** %MEMORY
  %loadMem_47d7cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7712 = getelementptr inbounds %struct.GPR, %struct.GPR* %7711, i32 0, i32 33
  %7713 = getelementptr inbounds %struct.Reg, %struct.Reg* %7712, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %7713 to i64*
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 1
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %EAX.i462 = bitcast %union.anon* %7716 to i32*
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 5
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %RCX.i463 = bitcast %union.anon* %7719 to i64*
  %7720 = load i32, i32* %EAX.i462
  %7721 = zext i32 %7720 to i64
  %7722 = load i64, i64* %PC.i461
  %7723 = add i64 %7722, 3
  store i64 %7723, i64* %PC.i461
  %7724 = shl i64 %7721, 32
  %7725 = ashr exact i64 %7724, 32
  store i64 %7725, i64* %RCX.i463, align 8
  store %struct.Memory* %loadMem_47d7cc, %struct.Memory** %MEMORY
  %loadMem_47d7cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7727 = getelementptr inbounds %struct.GPR, %struct.GPR* %7726, i32 0, i32 33
  %7728 = getelementptr inbounds %struct.Reg, %struct.Reg* %7727, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %7728 to i64*
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 5
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %RCX.i460 = bitcast %union.anon* %7731 to i64*
  %7732 = load i64, i64* %RCX.i460
  %7733 = load i64, i64* %PC.i459
  %7734 = add i64 %7733, 8
  store i64 %7734, i64* %PC.i459
  store i64 %7732, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store %struct.Memory* %loadMem_47d7cf, %struct.Memory** %MEMORY
  %loadMem_47d7d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7736 = getelementptr inbounds %struct.GPR, %struct.GPR* %7735, i32 0, i32 33
  %7737 = getelementptr inbounds %struct.Reg, %struct.Reg* %7736, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %7737 to i64*
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 5
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %RCX.i457 = bitcast %union.anon* %7740 to i64*
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7742 = getelementptr inbounds %struct.GPR, %struct.GPR* %7741, i32 0, i32 15
  %7743 = getelementptr inbounds %struct.Reg, %struct.Reg* %7742, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %7743 to i64*
  %7744 = load i64, i64* %RBP.i458
  %7745 = sub i64 %7744, 64
  %7746 = load i64, i64* %PC.i456
  %7747 = add i64 %7746, 4
  store i64 %7747, i64* %PC.i456
  %7748 = inttoptr i64 %7745 to i64*
  %7749 = load i64, i64* %7748
  store i64 %7749, i64* %RCX.i457, align 8
  store %struct.Memory* %loadMem_47d7d7, %struct.Memory** %MEMORY
  %loadMem_47d7db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 33
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %7752 to i64*
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7754 = getelementptr inbounds %struct.GPR, %struct.GPR* %7753, i32 0, i32 5
  %7755 = getelementptr inbounds %struct.Reg, %struct.Reg* %7754, i32 0, i32 0
  %RCX.i455 = bitcast %union.anon* %7755 to i64*
  %7756 = load i64, i64* %RCX.i455
  %7757 = load i64, i64* %PC.i454
  %7758 = add i64 %7757, 8
  store i64 %7758, i64* %PC.i454
  %7759 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  %7760 = sub i64 %7756, %7759
  %7761 = icmp ugt i64 %7759, %7756
  %7762 = zext i1 %7761 to i8
  %7763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7762, i8* %7763, align 1
  %7764 = trunc i64 %7760 to i32
  %7765 = and i32 %7764, 255
  %7766 = call i32 @llvm.ctpop.i32(i32 %7765)
  %7767 = trunc i32 %7766 to i8
  %7768 = and i8 %7767, 1
  %7769 = xor i8 %7768, 1
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7769, i8* %7770, align 1
  %7771 = xor i64 %7759, %7756
  %7772 = xor i64 %7771, %7760
  %7773 = lshr i64 %7772, 4
  %7774 = trunc i64 %7773 to i8
  %7775 = and i8 %7774, 1
  %7776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7775, i8* %7776, align 1
  %7777 = icmp eq i64 %7760, 0
  %7778 = zext i1 %7777 to i8
  %7779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7778, i8* %7779, align 1
  %7780 = lshr i64 %7760, 63
  %7781 = trunc i64 %7780 to i8
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7781, i8* %7782, align 1
  %7783 = lshr i64 %7756, 63
  %7784 = lshr i64 %7759, 63
  %7785 = xor i64 %7784, %7783
  %7786 = xor i64 %7780, %7783
  %7787 = add i64 %7786, %7785
  %7788 = icmp eq i64 %7787, 2
  %7789 = zext i1 %7788 to i8
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7789, i8* %7790, align 1
  store %struct.Memory* %loadMem_47d7db, %struct.Memory** %MEMORY
  %loadMem_47d7e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7792 = getelementptr inbounds %struct.GPR, %struct.GPR* %7791, i32 0, i32 33
  %7793 = getelementptr inbounds %struct.Reg, %struct.Reg* %7792, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %7793 to i64*
  %7794 = load i64, i64* %PC.i453
  %7795 = add i64 %7794, 23
  %7796 = load i64, i64* %PC.i453
  %7797 = add i64 %7796, 6
  %7798 = load i64, i64* %PC.i453
  %7799 = add i64 %7798, 6
  store i64 %7799, i64* %PC.i453
  %7800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7801 = load i8, i8* %7800, align 1
  %7802 = icmp ne i8 %7801, 0
  %7803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7804 = load i8, i8* %7803, align 1
  %7805 = icmp ne i8 %7804, 0
  %7806 = xor i1 %7802, %7805
  %7807 = xor i1 %7806, true
  %7808 = zext i1 %7807 to i8
  store i8 %7808, i8* %BRANCH_TAKEN, align 1
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7810 = select i1 %7806, i64 %7797, i64 %7795
  store i64 %7810, i64* %7809, align 8
  store %struct.Memory* %loadMem_47d7e3, %struct.Memory** %MEMORY
  %loadBr_47d7e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d7e3 = icmp eq i8 %loadBr_47d7e3, 1
  br i1 %cmpBr_47d7e3, label %block_.L_47d7fa, label %block_47d7e9

block_47d7e9:                                     ; preds = %block_47d713
  %loadMem_47d7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7812 = getelementptr inbounds %struct.GPR, %struct.GPR* %7811, i32 0, i32 33
  %7813 = getelementptr inbounds %struct.Reg, %struct.Reg* %7812, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %7813 to i64*
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 1
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %RAX.i452 = bitcast %union.anon* %7816 to i64*
  %7817 = load i64, i64* %PC.i451
  %7818 = add i64 %7817, 8
  store i64 %7818, i64* %PC.i451
  %7819 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store i64 %7819, i64* %RAX.i452, align 8
  store %struct.Memory* %loadMem_47d7e9, %struct.Memory** %MEMORY
  %loadMem_47d7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7821 = getelementptr inbounds %struct.GPR, %struct.GPR* %7820, i32 0, i32 33
  %7822 = getelementptr inbounds %struct.Reg, %struct.Reg* %7821, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %7822 to i64*
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7824 = getelementptr inbounds %struct.GPR, %struct.GPR* %7823, i32 0, i32 1
  %7825 = getelementptr inbounds %struct.Reg, %struct.Reg* %7824, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %7825 to i64*
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7827 = getelementptr inbounds %struct.GPR, %struct.GPR* %7826, i32 0, i32 15
  %7828 = getelementptr inbounds %struct.Reg, %struct.Reg* %7827, i32 0, i32 0
  %RBP.i450 = bitcast %union.anon* %7828 to i64*
  %7829 = load i64, i64* %RBP.i450
  %7830 = sub i64 %7829, 72
  %7831 = load i64, i64* %RAX.i449
  %7832 = load i64, i64* %PC.i448
  %7833 = add i64 %7832, 4
  store i64 %7833, i64* %PC.i448
  %7834 = inttoptr i64 %7830 to i64*
  store i64 %7831, i64* %7834
  store %struct.Memory* %loadMem_47d7f1, %struct.Memory** %MEMORY
  %loadMem_47d7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 33
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %7837 to i64*
  %7838 = load i64, i64* %PC.i447
  %7839 = add i64 %7838, 18
  %7840 = load i64, i64* %PC.i447
  %7841 = add i64 %7840, 5
  store i64 %7841, i64* %PC.i447
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7839, i64* %7842, align 8
  store %struct.Memory* %loadMem_47d7f5, %struct.Memory** %MEMORY
  br label %block_.L_47d807

block_.L_47d7fa:                                  ; preds = %block_47d713
  %loadMem_47d7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7844 = getelementptr inbounds %struct.GPR, %struct.GPR* %7843, i32 0, i32 33
  %7845 = getelementptr inbounds %struct.Reg, %struct.Reg* %7844, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %7845 to i64*
  %7846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7847 = getelementptr inbounds %struct.GPR, %struct.GPR* %7846, i32 0, i32 1
  %7848 = getelementptr inbounds %struct.Reg, %struct.Reg* %7847, i32 0, i32 0
  %EAX.i445 = bitcast %union.anon* %7848 to i32*
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7850 = getelementptr inbounds %struct.GPR, %struct.GPR* %7849, i32 0, i32 1
  %7851 = getelementptr inbounds %struct.Reg, %struct.Reg* %7850, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %7851 to i64*
  %7852 = load i64, i64* %RAX.i446
  %7853 = load i32, i32* %EAX.i445
  %7854 = zext i32 %7853 to i64
  %7855 = load i64, i64* %PC.i444
  %7856 = add i64 %7855, 2
  store i64 %7856, i64* %PC.i444
  %7857 = xor i64 %7854, %7852
  %7858 = trunc i64 %7857 to i32
  %7859 = and i64 %7857, 4294967295
  store i64 %7859, i64* %RAX.i446, align 8
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7860, align 1
  %7861 = and i32 %7858, 255
  %7862 = call i32 @llvm.ctpop.i32(i32 %7861)
  %7863 = trunc i32 %7862 to i8
  %7864 = and i8 %7863, 1
  %7865 = xor i8 %7864, 1
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7865, i8* %7866, align 1
  %7867 = icmp eq i32 %7858, 0
  %7868 = zext i1 %7867 to i8
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7868, i8* %7869, align 1
  %7870 = lshr i32 %7858, 31
  %7871 = trunc i32 %7870 to i8
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7871, i8* %7872, align 1
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7873, align 1
  %7874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7874, align 1
  store %struct.Memory* %loadMem_47d7fa, %struct.Memory** %MEMORY
  %loadMem_47d7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 33
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %7877 to i64*
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 1
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %EAX.i442 = bitcast %union.anon* %7880 to i32*
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 5
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %RCX.i443 = bitcast %union.anon* %7883 to i64*
  %7884 = load i32, i32* %EAX.i442
  %7885 = zext i32 %7884 to i64
  %7886 = load i64, i64* %PC.i441
  %7887 = add i64 %7886, 2
  store i64 %7887, i64* %PC.i441
  %7888 = and i64 %7885, 4294967295
  store i64 %7888, i64* %RCX.i443, align 8
  store %struct.Memory* %loadMem_47d7fc, %struct.Memory** %MEMORY
  %loadMem_47d7fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7890 = getelementptr inbounds %struct.GPR, %struct.GPR* %7889, i32 0, i32 33
  %7891 = getelementptr inbounds %struct.Reg, %struct.Reg* %7890, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %7891 to i64*
  %7892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7893 = getelementptr inbounds %struct.GPR, %struct.GPR* %7892, i32 0, i32 5
  %7894 = getelementptr inbounds %struct.Reg, %struct.Reg* %7893, i32 0, i32 0
  %RCX.i439 = bitcast %union.anon* %7894 to i64*
  %7895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7896 = getelementptr inbounds %struct.GPR, %struct.GPR* %7895, i32 0, i32 15
  %7897 = getelementptr inbounds %struct.Reg, %struct.Reg* %7896, i32 0, i32 0
  %RBP.i440 = bitcast %union.anon* %7897 to i64*
  %7898 = load i64, i64* %RBP.i440
  %7899 = sub i64 %7898, 72
  %7900 = load i64, i64* %RCX.i439
  %7901 = load i64, i64* %PC.i438
  %7902 = add i64 %7901, 4
  store i64 %7902, i64* %PC.i438
  %7903 = inttoptr i64 %7899 to i64*
  store i64 %7900, i64* %7903
  store %struct.Memory* %loadMem_47d7fe, %struct.Memory** %MEMORY
  %loadMem_47d802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7905 = getelementptr inbounds %struct.GPR, %struct.GPR* %7904, i32 0, i32 33
  %7906 = getelementptr inbounds %struct.Reg, %struct.Reg* %7905, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %7906 to i64*
  %7907 = load i64, i64* %PC.i437
  %7908 = add i64 %7907, 5
  %7909 = load i64, i64* %PC.i437
  %7910 = add i64 %7909, 5
  store i64 %7910, i64* %PC.i437
  %7911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7908, i64* %7911, align 8
  store %struct.Memory* %loadMem_47d802, %struct.Memory** %MEMORY
  br label %block_.L_47d807

block_.L_47d807:                                  ; preds = %block_.L_47d7fa, %block_47d7e9
  %loadMem_47d807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 33
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %PC.i434 = bitcast %union.anon* %7914 to i64*
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 1
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %RAX.i435 = bitcast %union.anon* %7917 to i64*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 15
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %RBP.i436 = bitcast %union.anon* %7920 to i64*
  %7921 = load i64, i64* %RBP.i436
  %7922 = sub i64 %7921, 72
  %7923 = load i64, i64* %PC.i434
  %7924 = add i64 %7923, 4
  store i64 %7924, i64* %PC.i434
  %7925 = inttoptr i64 %7922 to i64*
  %7926 = load i64, i64* %7925
  store i64 %7926, i64* %RAX.i435, align 8
  store %struct.Memory* %loadMem_47d807, %struct.Memory** %MEMORY
  %loadMem_47d80b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 33
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %7929 to i64*
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7931 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7930, i64 0, i64 0
  %YMM0.i433 = bitcast %union.VectorReg* %7931 to %"class.std::bitset"*
  %7932 = bitcast %"class.std::bitset"* %YMM0.i433 to i8*
  %7933 = load i64, i64* %PC.i432
  %7934 = add i64 %7933, ptrtoint (%G_0x34075__rip__type* @G_0x34075__rip_ to i64)
  %7935 = load i64, i64* %PC.i432
  %7936 = add i64 %7935, 8
  store i64 %7936, i64* %PC.i432
  %7937 = inttoptr i64 %7934 to double*
  %7938 = load double, double* %7937
  %7939 = bitcast i8* %7932 to double*
  store double %7938, double* %7939, align 1
  %7940 = getelementptr inbounds i8, i8* %7932, i64 8
  %7941 = bitcast i8* %7940 to double*
  store double 0.000000e+00, double* %7941, align 1
  store %struct.Memory* %loadMem_47d80b, %struct.Memory** %MEMORY
  %loadMem_47d813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7943 = getelementptr inbounds %struct.GPR, %struct.GPR* %7942, i32 0, i32 33
  %7944 = getelementptr inbounds %struct.Reg, %struct.Reg* %7943, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %7944 to i64*
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7946 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7945, i64 0, i64 1
  %YMM1.i431 = bitcast %union.VectorReg* %7946 to %"class.std::bitset"*
  %7947 = bitcast %"class.std::bitset"* %YMM1.i431 to i8*
  %7948 = load i64, i64* %PC.i430
  %7949 = add i64 %7948, ptrtoint (%G_0x34045__rip__type* @G_0x34045__rip_ to i64)
  %7950 = load i64, i64* %PC.i430
  %7951 = add i64 %7950, 8
  store i64 %7951, i64* %PC.i430
  %7952 = inttoptr i64 %7949 to double*
  %7953 = load double, double* %7952
  %7954 = bitcast i8* %7947 to double*
  store double %7953, double* %7954, align 1
  %7955 = getelementptr inbounds i8, i8* %7947, i64 8
  %7956 = bitcast i8* %7955 to double*
  store double 0.000000e+00, double* %7956, align 1
  store %struct.Memory* %loadMem_47d813, %struct.Memory** %MEMORY
  %loadMem_47d81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7958 = getelementptr inbounds %struct.GPR, %struct.GPR* %7957, i32 0, i32 33
  %7959 = getelementptr inbounds %struct.Reg, %struct.Reg* %7958, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %7959 to i64*
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7961 = getelementptr inbounds %struct.GPR, %struct.GPR* %7960, i32 0, i32 1
  %7962 = getelementptr inbounds %struct.Reg, %struct.Reg* %7961, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %7962 to i64*
  %7963 = load i64, i64* %RAX.i429
  %7964 = load i64, i64* %PC.i428
  %7965 = add i64 %7964, 8
  store i64 %7965, i64* %PC.i428
  store i64 %7963, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store %struct.Memory* %loadMem_47d81b, %struct.Memory** %MEMORY
  %loadMem_47d823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7967 = getelementptr inbounds %struct.GPR, %struct.GPR* %7966, i32 0, i32 33
  %7968 = getelementptr inbounds %struct.Reg, %struct.Reg* %7967, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %7968 to i64*
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7970 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7969, i64 0, i64 2
  %YMM2.i427 = bitcast %union.VectorReg* %7970 to %"class.std::bitset"*
  %7971 = bitcast %"class.std::bitset"* %YMM2.i427 to i8*
  %7972 = load i64, i64* %PC.i426
  %7973 = add i64 %7972, 9
  store i64 %7973, i64* %PC.i426
  %7974 = load double, double* bitcast (%G_0x6cea40_type* @G_0x6cea40 to double*)
  %7975 = bitcast i8* %7971 to double*
  store double %7974, double* %7975, align 1
  %7976 = getelementptr inbounds i8, i8* %7971, i64 8
  %7977 = bitcast i8* %7976 to double*
  store double 0.000000e+00, double* %7977, align 1
  store %struct.Memory* %loadMem_47d823, %struct.Memory** %MEMORY
  %loadMem_47d82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7979 = getelementptr inbounds %struct.GPR, %struct.GPR* %7978, i32 0, i32 33
  %7980 = getelementptr inbounds %struct.Reg, %struct.Reg* %7979, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %7980 to i64*
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7982 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7981, i64 0, i64 3
  %YMM3.i425 = bitcast %union.VectorReg* %7982 to %"class.std::bitset"*
  %7983 = bitcast %"class.std::bitset"* %YMM3.i425 to i8*
  %7984 = load i64, i64* %PC.i424
  %7985 = add i64 %7984, 10
  store i64 %7985, i64* %PC.i424
  %7986 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  %7987 = sitofp i64 %7986 to double
  %7988 = bitcast i8* %7983 to double*
  store double %7987, double* %7988, align 1
  store %struct.Memory* %loadMem_47d82c, %struct.Memory** %MEMORY
  %loadMem_47d836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 33
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %7991 to i64*
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7993 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7992, i64 0, i64 2
  %YMM2.i422 = bitcast %union.VectorReg* %7993 to %"class.std::bitset"*
  %7994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7995 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7994, i64 0, i64 3
  %XMM3.i423 = bitcast %union.VectorReg* %7995 to %union.vec128_t*
  %7996 = bitcast %"class.std::bitset"* %YMM2.i422 to i8*
  %7997 = bitcast %"class.std::bitset"* %YMM2.i422 to i8*
  %7998 = bitcast %union.vec128_t* %XMM3.i423 to i8*
  %7999 = load i64, i64* %PC.i421
  %8000 = add i64 %7999, 4
  store i64 %8000, i64* %PC.i421
  %8001 = bitcast i8* %7997 to double*
  %8002 = load double, double* %8001, align 1
  %8003 = getelementptr inbounds i8, i8* %7997, i64 8
  %8004 = bitcast i8* %8003 to i64*
  %8005 = load i64, i64* %8004, align 1
  %8006 = bitcast i8* %7998 to double*
  %8007 = load double, double* %8006, align 1
  %8008 = fmul double %8002, %8007
  %8009 = bitcast i8* %7996 to double*
  store double %8008, double* %8009, align 1
  %8010 = getelementptr inbounds i8, i8* %7996, i64 8
  %8011 = bitcast i8* %8010 to i64*
  store i64 %8005, i64* %8011, align 1
  store %struct.Memory* %loadMem_47d836, %struct.Memory** %MEMORY
  %loadMem_47d83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8013 = getelementptr inbounds %struct.GPR, %struct.GPR* %8012, i32 0, i32 33
  %8014 = getelementptr inbounds %struct.Reg, %struct.Reg* %8013, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %8014 to i64*
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8016 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8015, i64 0, i64 1
  %YMM1.i420 = bitcast %union.VectorReg* %8016 to %"class.std::bitset"*
  %8017 = bitcast %"class.std::bitset"* %YMM1.i420 to i8*
  %8018 = bitcast %"class.std::bitset"* %YMM1.i420 to i8*
  %8019 = load i64, i64* %PC.i419
  %8020 = add i64 %8019, 9
  store i64 %8020, i64* %PC.i419
  %8021 = bitcast i8* %8018 to double*
  %8022 = load double, double* %8021, align 1
  %8023 = getelementptr inbounds i8, i8* %8018, i64 8
  %8024 = bitcast i8* %8023 to i64*
  %8025 = load i64, i64* %8024, align 1
  %8026 = load double, double* bitcast (%G_0x6cea40_type* @G_0x6cea40 to double*)
  %8027 = fsub double %8022, %8026
  %8028 = bitcast i8* %8017 to double*
  store double %8027, double* %8028, align 1
  %8029 = getelementptr inbounds i8, i8* %8017, i64 8
  %8030 = bitcast i8* %8029 to i64*
  store i64 %8025, i64* %8030, align 1
  store %struct.Memory* %loadMem_47d83a, %struct.Memory** %MEMORY
  %loadMem_47d843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8032 = getelementptr inbounds %struct.GPR, %struct.GPR* %8031, i32 0, i32 33
  %8033 = getelementptr inbounds %struct.Reg, %struct.Reg* %8032, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %8033 to i64*
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8035 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8034, i64 0, i64 3
  %YMM3.i418 = bitcast %union.VectorReg* %8035 to %"class.std::bitset"*
  %8036 = bitcast %"class.std::bitset"* %YMM3.i418 to i8*
  %8037 = load i64, i64* %PC.i417
  %8038 = add i64 %8037, 10
  store i64 %8038, i64* %PC.i417
  %8039 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  %8040 = sitofp i64 %8039 to double
  %8041 = bitcast i8* %8036 to double*
  store double %8040, double* %8041, align 1
  store %struct.Memory* %loadMem_47d843, %struct.Memory** %MEMORY
  %loadMem_47d84d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8043 = getelementptr inbounds %struct.GPR, %struct.GPR* %8042, i32 0, i32 33
  %8044 = getelementptr inbounds %struct.Reg, %struct.Reg* %8043, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %8044 to i64*
  %8045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8046 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8045, i64 0, i64 1
  %YMM1.i415 = bitcast %union.VectorReg* %8046 to %"class.std::bitset"*
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8048 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8047, i64 0, i64 3
  %XMM3.i416 = bitcast %union.VectorReg* %8048 to %union.vec128_t*
  %8049 = bitcast %"class.std::bitset"* %YMM1.i415 to i8*
  %8050 = bitcast %"class.std::bitset"* %YMM1.i415 to i8*
  %8051 = bitcast %union.vec128_t* %XMM3.i416 to i8*
  %8052 = load i64, i64* %PC.i414
  %8053 = add i64 %8052, 4
  store i64 %8053, i64* %PC.i414
  %8054 = bitcast i8* %8050 to double*
  %8055 = load double, double* %8054, align 1
  %8056 = getelementptr inbounds i8, i8* %8050, i64 8
  %8057 = bitcast i8* %8056 to i64*
  %8058 = load i64, i64* %8057, align 1
  %8059 = bitcast i8* %8051 to double*
  %8060 = load double, double* %8059, align 1
  %8061 = fmul double %8055, %8060
  %8062 = bitcast i8* %8049 to double*
  store double %8061, double* %8062, align 1
  %8063 = getelementptr inbounds i8, i8* %8049, i64 8
  %8064 = bitcast i8* %8063 to i64*
  store i64 %8058, i64* %8064, align 1
  store %struct.Memory* %loadMem_47d84d, %struct.Memory** %MEMORY
  %loadMem_47d851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8066 = getelementptr inbounds %struct.GPR, %struct.GPR* %8065, i32 0, i32 33
  %8067 = getelementptr inbounds %struct.Reg, %struct.Reg* %8066, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %8067 to i64*
  %8068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8069 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8068, i64 0, i64 2
  %YMM2.i412 = bitcast %union.VectorReg* %8069 to %"class.std::bitset"*
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8071 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8070, i64 0, i64 1
  %XMM1.i413 = bitcast %union.VectorReg* %8071 to %union.vec128_t*
  %8072 = bitcast %"class.std::bitset"* %YMM2.i412 to i8*
  %8073 = bitcast %"class.std::bitset"* %YMM2.i412 to i8*
  %8074 = bitcast %union.vec128_t* %XMM1.i413 to i8*
  %8075 = load i64, i64* %PC.i411
  %8076 = add i64 %8075, 4
  store i64 %8076, i64* %PC.i411
  %8077 = bitcast i8* %8073 to double*
  %8078 = load double, double* %8077, align 1
  %8079 = getelementptr inbounds i8, i8* %8073, i64 8
  %8080 = bitcast i8* %8079 to i64*
  %8081 = load i64, i64* %8080, align 1
  %8082 = bitcast i8* %8074 to double*
  %8083 = load double, double* %8082, align 1
  %8084 = fadd double %8078, %8083
  %8085 = bitcast i8* %8072 to double*
  store double %8084, double* %8085, align 1
  %8086 = getelementptr inbounds i8, i8* %8072, i64 8
  %8087 = bitcast i8* %8086 to i64*
  store i64 %8081, i64* %8087, align 1
  store %struct.Memory* %loadMem_47d851, %struct.Memory** %MEMORY
  %loadMem_47d855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 33
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %8090 to i64*
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8092 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8091, i64 0, i64 2
  %YMM2.i409 = bitcast %union.VectorReg* %8092 to %"class.std::bitset"*
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8094 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8093, i64 0, i64 0
  %XMM0.i410 = bitcast %union.VectorReg* %8094 to %union.vec128_t*
  %8095 = bitcast %"class.std::bitset"* %YMM2.i409 to i8*
  %8096 = bitcast %"class.std::bitset"* %YMM2.i409 to i8*
  %8097 = bitcast %union.vec128_t* %XMM0.i410 to i8*
  %8098 = load i64, i64* %PC.i408
  %8099 = add i64 %8098, 4
  store i64 %8099, i64* %PC.i408
  %8100 = bitcast i8* %8096 to double*
  %8101 = load double, double* %8100, align 1
  %8102 = getelementptr inbounds i8, i8* %8096, i64 8
  %8103 = bitcast i8* %8102 to i64*
  %8104 = load i64, i64* %8103, align 1
  %8105 = bitcast i8* %8097 to double*
  %8106 = load double, double* %8105, align 1
  %8107 = fadd double %8101, %8106
  %8108 = bitcast i8* %8095 to double*
  store double %8107, double* %8108, align 1
  %8109 = getelementptr inbounds i8, i8* %8095, i64 8
  %8110 = bitcast i8* %8109 to i64*
  store i64 %8104, i64* %8110, align 1
  store %struct.Memory* %loadMem_47d855, %struct.Memory** %MEMORY
  %loadMem_47d859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8112 = getelementptr inbounds %struct.GPR, %struct.GPR* %8111, i32 0, i32 33
  %8113 = getelementptr inbounds %struct.Reg, %struct.Reg* %8112, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %8113 to i64*
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8115 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8114, i64 0, i64 0
  %YMM0.i406 = bitcast %union.VectorReg* %8115 to %"class.std::bitset"*
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8117 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8116, i64 0, i64 2
  %XMM2.i407 = bitcast %union.VectorReg* %8117 to %union.vec128_t*
  %8118 = bitcast %"class.std::bitset"* %YMM0.i406 to i8*
  %8119 = bitcast %union.vec128_t* %XMM2.i407 to i8*
  %8120 = load i64, i64* %PC.i405
  %8121 = add i64 %8120, 3
  store i64 %8121, i64* %PC.i405
  %8122 = bitcast i8* %8119 to <2 x i32>*
  %8123 = load <2 x i32>, <2 x i32>* %8122, align 1
  %8124 = getelementptr inbounds i8, i8* %8119, i64 8
  %8125 = bitcast i8* %8124 to <2 x i32>*
  %8126 = load <2 x i32>, <2 x i32>* %8125, align 1
  %8127 = extractelement <2 x i32> %8123, i32 0
  %8128 = bitcast i8* %8118 to i32*
  store i32 %8127, i32* %8128, align 1
  %8129 = extractelement <2 x i32> %8123, i32 1
  %8130 = getelementptr inbounds i8, i8* %8118, i64 4
  %8131 = bitcast i8* %8130 to i32*
  store i32 %8129, i32* %8131, align 1
  %8132 = extractelement <2 x i32> %8126, i32 0
  %8133 = getelementptr inbounds i8, i8* %8118, i64 8
  %8134 = bitcast i8* %8133 to i32*
  store i32 %8132, i32* %8134, align 1
  %8135 = extractelement <2 x i32> %8126, i32 1
  %8136 = getelementptr inbounds i8, i8* %8118, i64 12
  %8137 = bitcast i8* %8136 to i32*
  store i32 %8135, i32* %8137, align 1
  store %struct.Memory* %loadMem_47d859, %struct.Memory** %MEMORY
  %loadMem1_47d85c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8139 = getelementptr inbounds %struct.GPR, %struct.GPR* %8138, i32 0, i32 33
  %8140 = getelementptr inbounds %struct.Reg, %struct.Reg* %8139, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %8140 to i64*
  %8141 = load i64, i64* %PC.i404
  %8142 = add i64 %8141, -509612
  %8143 = load i64, i64* %PC.i404
  %8144 = add i64 %8143, 5
  %8145 = load i64, i64* %PC.i404
  %8146 = add i64 %8145, 5
  store i64 %8146, i64* %PC.i404
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8148 = load i64, i64* %8147, align 8
  %8149 = add i64 %8148, -8
  %8150 = inttoptr i64 %8149 to i64*
  store i64 %8144, i64* %8150
  store i64 %8149, i64* %8147, align 8
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8142, i64* %8151, align 8
  store %struct.Memory* %loadMem1_47d85c, %struct.Memory** %MEMORY
  %loadMem2_47d85c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d85c = load i64, i64* %3
  %8152 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d85c)
  store %struct.Memory* %8152, %struct.Memory** %MEMORY
  %loadMem_47d861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8154 = getelementptr inbounds %struct.GPR, %struct.GPR* %8153, i32 0, i32 33
  %8155 = getelementptr inbounds %struct.Reg, %struct.Reg* %8154, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %8155 to i64*
  %8156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8157 = getelementptr inbounds %struct.GPR, %struct.GPR* %8156, i32 0, i32 5
  %8158 = getelementptr inbounds %struct.Reg, %struct.Reg* %8157, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %8158 to i64*
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8160 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8159, i64 0, i64 0
  %XMM0.i401 = bitcast %union.VectorReg* %8160 to %union.vec128_t*
  %8161 = bitcast %union.vec128_t* %XMM0.i401 to i8*
  %8162 = load i64, i64* %PC.i399
  %8163 = add i64 %8162, 4
  store i64 %8163, i64* %PC.i399
  %8164 = bitcast i8* %8161 to double*
  %8165 = load double, double* %8164, align 1
  %8166 = call double @llvm.trunc.f64(double %8165)
  %8167 = call double @llvm.fabs.f64(double %8166)
  %8168 = fcmp ogt double %8167, 0x41DFFFFFFFC00000
  %8169 = fptosi double %8166 to i32
  %8170 = zext i32 %8169 to i64
  %8171 = select i1 %8168, i64 2147483648, i64 %8170
  store i64 %8171, i64* %RCX.i400, align 8
  store %struct.Memory* %loadMem_47d861, %struct.Memory** %MEMORY
  %loadMem_47d865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 33
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %8174 to i64*
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 5
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %ECX.i397 = bitcast %union.anon* %8177 to i32*
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8179 = getelementptr inbounds %struct.GPR, %struct.GPR* %8178, i32 0, i32 1
  %8180 = getelementptr inbounds %struct.Reg, %struct.Reg* %8179, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %8180 to i64*
  %8181 = load i32, i32* %ECX.i397
  %8182 = zext i32 %8181 to i64
  %8183 = load i64, i64* %PC.i396
  %8184 = add i64 %8183, 3
  store i64 %8184, i64* %PC.i396
  %8185 = shl i64 %8182, 32
  %8186 = ashr exact i64 %8185, 32
  store i64 %8186, i64* %RAX.i398, align 8
  store %struct.Memory* %loadMem_47d865, %struct.Memory** %MEMORY
  %loadMem_47d868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8188 = getelementptr inbounds %struct.GPR, %struct.GPR* %8187, i32 0, i32 33
  %8189 = getelementptr inbounds %struct.Reg, %struct.Reg* %8188, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %8189 to i64*
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8191 = getelementptr inbounds %struct.GPR, %struct.GPR* %8190, i32 0, i32 1
  %8192 = getelementptr inbounds %struct.Reg, %struct.Reg* %8191, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %8192 to i64*
  %8193 = load i64, i64* %RAX.i395
  %8194 = load i64, i64* %PC.i394
  %8195 = add i64 %8194, 8
  store i64 %8195, i64* %PC.i394
  store i64 %8193, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47d868, %struct.Memory** %MEMORY
  %loadMem_47d870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8197 = getelementptr inbounds %struct.GPR, %struct.GPR* %8196, i32 0, i32 33
  %8198 = getelementptr inbounds %struct.Reg, %struct.Reg* %8197, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %8198 to i64*
  %8199 = load i64, i64* %PC.i393
  %8200 = add i64 %8199, 374
  %8201 = load i64, i64* %PC.i393
  %8202 = add i64 %8201, 5
  store i64 %8202, i64* %PC.i393
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8200, i64* %8203, align 8
  store %struct.Memory* %loadMem_47d870, %struct.Memory** %MEMORY
  br label %block_.L_47d9e6

block_.L_47d875:                                  ; preds = %block_47d6fe, %block_.L_47d6e9
  %loadMem_47d875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8205 = getelementptr inbounds %struct.GPR, %struct.GPR* %8204, i32 0, i32 33
  %8206 = getelementptr inbounds %struct.Reg, %struct.Reg* %8205, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %8206 to i64*
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8208 = getelementptr inbounds %struct.GPR, %struct.GPR* %8207, i32 0, i32 1
  %8209 = getelementptr inbounds %struct.Reg, %struct.Reg* %8208, i32 0, i32 0
  %RAX.i392 = bitcast %union.anon* %8209 to i64*
  %8210 = load i64, i64* %PC.i391
  %8211 = add i64 %8210, 8
  store i64 %8211, i64* %PC.i391
  %8212 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %8212, i64* %RAX.i392, align 8
  store %struct.Memory* %loadMem_47d875, %struct.Memory** %MEMORY
  %loadMem_47d87d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 33
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %8215 to i64*
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 1
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %RAX.i390 = bitcast %union.anon* %8218 to i64*
  %8219 = load i64, i64* %RAX.i390
  %8220 = add i64 %8219, 72568
  %8221 = load i64, i64* %PC.i389
  %8222 = add i64 %8221, 7
  store i64 %8222, i64* %PC.i389
  %8223 = inttoptr i64 %8220 to i32*
  %8224 = load i32, i32* %8223
  %8225 = sub i32 %8224, 1
  %8226 = icmp ult i32 %8224, 1
  %8227 = zext i1 %8226 to i8
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8227, i8* %8228, align 1
  %8229 = and i32 %8225, 255
  %8230 = call i32 @llvm.ctpop.i32(i32 %8229)
  %8231 = trunc i32 %8230 to i8
  %8232 = and i8 %8231, 1
  %8233 = xor i8 %8232, 1
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8233, i8* %8234, align 1
  %8235 = xor i32 %8224, 1
  %8236 = xor i32 %8235, %8225
  %8237 = lshr i32 %8236, 4
  %8238 = trunc i32 %8237 to i8
  %8239 = and i8 %8238, 1
  %8240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8239, i8* %8240, align 1
  %8241 = icmp eq i32 %8225, 0
  %8242 = zext i1 %8241 to i8
  %8243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8242, i8* %8243, align 1
  %8244 = lshr i32 %8225, 31
  %8245 = trunc i32 %8244 to i8
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8245, i8* %8246, align 1
  %8247 = lshr i32 %8224, 31
  %8248 = xor i32 %8244, %8247
  %8249 = add i32 %8248, %8247
  %8250 = icmp eq i32 %8249, 2
  %8251 = zext i1 %8250 to i8
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8251, i8* %8252, align 1
  store %struct.Memory* %loadMem_47d87d, %struct.Memory** %MEMORY
  %loadMem_47d884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8254 = getelementptr inbounds %struct.GPR, %struct.GPR* %8253, i32 0, i32 33
  %8255 = getelementptr inbounds %struct.Reg, %struct.Reg* %8254, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %8255 to i64*
  %8256 = load i64, i64* %PC.i388
  %8257 = add i64 %8256, 349
  %8258 = load i64, i64* %PC.i388
  %8259 = add i64 %8258, 6
  %8260 = load i64, i64* %PC.i388
  %8261 = add i64 %8260, 6
  store i64 %8261, i64* %PC.i388
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8263 = load i8, i8* %8262, align 1
  %8264 = icmp ne i8 %8263, 0
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8266 = load i8, i8* %8265, align 1
  %8267 = icmp ne i8 %8266, 0
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8269 = load i8, i8* %8268, align 1
  %8270 = icmp ne i8 %8269, 0
  %8271 = xor i1 %8267, %8270
  %8272 = or i1 %8264, %8271
  %8273 = zext i1 %8272 to i8
  store i8 %8273, i8* %BRANCH_TAKEN, align 1
  %8274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8275 = select i1 %8272, i64 %8257, i64 %8259
  store i64 %8275, i64* %8274, align 8
  store %struct.Memory* %loadMem_47d884, %struct.Memory** %MEMORY
  %loadBr_47d884 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d884 = icmp eq i8 %loadBr_47d884, 1
  br i1 %cmpBr_47d884, label %block_.L_47d9e1, label %block_47d88a

block_47d88a:                                     ; preds = %block_.L_47d875
  %loadMem_47d88a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8277 = getelementptr inbounds %struct.GPR, %struct.GPR* %8276, i32 0, i32 33
  %8278 = getelementptr inbounds %struct.Reg, %struct.Reg* %8277, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %8278 to i64*
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8280 = getelementptr inbounds %struct.GPR, %struct.GPR* %8279, i32 0, i32 1
  %8281 = getelementptr inbounds %struct.Reg, %struct.Reg* %8280, i32 0, i32 0
  %EAX.i386 = bitcast %union.anon* %8281 to i32*
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8283 = getelementptr inbounds %struct.GPR, %struct.GPR* %8282, i32 0, i32 1
  %8284 = getelementptr inbounds %struct.Reg, %struct.Reg* %8283, i32 0, i32 0
  %RAX.i387 = bitcast %union.anon* %8284 to i64*
  %8285 = load i64, i64* %RAX.i387
  %8286 = load i32, i32* %EAX.i386
  %8287 = zext i32 %8286 to i64
  %8288 = load i64, i64* %PC.i385
  %8289 = add i64 %8288, 2
  store i64 %8289, i64* %PC.i385
  %8290 = xor i64 %8287, %8285
  %8291 = trunc i64 %8290 to i32
  %8292 = and i64 %8290, 4294967295
  store i64 %8292, i64* %RAX.i387, align 8
  %8293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8293, align 1
  %8294 = and i32 %8291, 255
  %8295 = call i32 @llvm.ctpop.i32(i32 %8294)
  %8296 = trunc i32 %8295 to i8
  %8297 = and i8 %8296, 1
  %8298 = xor i8 %8297, 1
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8298, i8* %8299, align 1
  %8300 = icmp eq i32 %8291, 0
  %8301 = zext i1 %8300 to i8
  %8302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8301, i8* %8302, align 1
  %8303 = lshr i32 %8291, 31
  %8304 = trunc i32 %8303 to i8
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8304, i8* %8305, align 1
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8306, align 1
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8307, align 1
  store %struct.Memory* %loadMem_47d88a, %struct.Memory** %MEMORY
  %loadMem_47d88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8309 = getelementptr inbounds %struct.GPR, %struct.GPR* %8308, i32 0, i32 33
  %8310 = getelementptr inbounds %struct.Reg, %struct.Reg* %8309, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %8310 to i64*
  %8311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8312 = getelementptr inbounds %struct.GPR, %struct.GPR* %8311, i32 0, i32 1
  %8313 = getelementptr inbounds %struct.Reg, %struct.Reg* %8312, i32 0, i32 0
  %EAX.i383 = bitcast %union.anon* %8313 to i32*
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8315 = getelementptr inbounds %struct.GPR, %struct.GPR* %8314, i32 0, i32 5
  %8316 = getelementptr inbounds %struct.Reg, %struct.Reg* %8315, i32 0, i32 0
  %RCX.i384 = bitcast %union.anon* %8316 to i64*
  %8317 = load i32, i32* %EAX.i383
  %8318 = zext i32 %8317 to i64
  %8319 = load i64, i64* %PC.i382
  %8320 = add i64 %8319, 2
  store i64 %8320, i64* %PC.i382
  %8321 = and i64 %8318, 4294967295
  store i64 %8321, i64* %RCX.i384, align 8
  store %struct.Memory* %loadMem_47d88c, %struct.Memory** %MEMORY
  %loadMem_47d88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8323 = getelementptr inbounds %struct.GPR, %struct.GPR* %8322, i32 0, i32 33
  %8324 = getelementptr inbounds %struct.Reg, %struct.Reg* %8323, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %8324 to i64*
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8326 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8325, i64 0, i64 0
  %YMM0.i381 = bitcast %union.VectorReg* %8326 to %"class.std::bitset"*
  %8327 = bitcast %"class.std::bitset"* %YMM0.i381 to i8*
  %8328 = load i64, i64* %PC.i380
  %8329 = add i64 %8328, ptrtoint (%G_0x33ff2__rip__type* @G_0x33ff2__rip_ to i64)
  %8330 = load i64, i64* %PC.i380
  %8331 = add i64 %8330, 8
  store i64 %8331, i64* %PC.i380
  %8332 = inttoptr i64 %8329 to double*
  %8333 = load double, double* %8332
  %8334 = bitcast i8* %8327 to double*
  store double %8333, double* %8334, align 1
  %8335 = getelementptr inbounds i8, i8* %8327, i64 8
  %8336 = bitcast i8* %8335 to double*
  store double 0.000000e+00, double* %8336, align 1
  store %struct.Memory* %loadMem_47d88e, %struct.Memory** %MEMORY
  %loadMem_47d896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8338 = getelementptr inbounds %struct.GPR, %struct.GPR* %8337, i32 0, i32 33
  %8339 = getelementptr inbounds %struct.Reg, %struct.Reg* %8338, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %8339 to i64*
  %8340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8341 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8340, i64 0, i64 1
  %YMM1.i379 = bitcast %union.VectorReg* %8341 to %"class.std::bitset"*
  %8342 = bitcast %"class.std::bitset"* %YMM1.i379 to i8*
  %8343 = load i64, i64* %PC.i378
  %8344 = add i64 %8343, 9
  store i64 %8344, i64* %PC.i378
  %8345 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %8346 = bitcast i8* %8342 to double*
  store double %8345, double* %8346, align 1
  %8347 = getelementptr inbounds i8, i8* %8342, i64 8
  %8348 = bitcast i8* %8347 to double*
  store double 0.000000e+00, double* %8348, align 1
  store %struct.Memory* %loadMem_47d896, %struct.Memory** %MEMORY
  %loadMem_47d89f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8350 = getelementptr inbounds %struct.GPR, %struct.GPR* %8349, i32 0, i32 33
  %8351 = getelementptr inbounds %struct.Reg, %struct.Reg* %8350, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %8351 to i64*
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8353 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8352, i64 0, i64 2
  %YMM2.i377 = bitcast %union.VectorReg* %8353 to %"class.std::bitset"*
  %8354 = bitcast %"class.std::bitset"* %YMM2.i377 to i8*
  %8355 = load i64, i64* %PC.i376
  %8356 = add i64 %8355, 9
  store i64 %8356, i64* %PC.i376
  %8357 = load i32, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  %8358 = sitofp i32 %8357 to double
  %8359 = bitcast i8* %8354 to double*
  store double %8358, double* %8359, align 1
  store %struct.Memory* %loadMem_47d89f, %struct.Memory** %MEMORY
  %loadMem_47d8a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8361 = getelementptr inbounds %struct.GPR, %struct.GPR* %8360, i32 0, i32 33
  %8362 = getelementptr inbounds %struct.Reg, %struct.Reg* %8361, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %8362 to i64*
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8364 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8363, i64 0, i64 1
  %YMM1.i374 = bitcast %union.VectorReg* %8364 to %"class.std::bitset"*
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8366 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8365, i64 0, i64 2
  %XMM2.i375 = bitcast %union.VectorReg* %8366 to %union.vec128_t*
  %8367 = bitcast %"class.std::bitset"* %YMM1.i374 to i8*
  %8368 = bitcast %"class.std::bitset"* %YMM1.i374 to i8*
  %8369 = bitcast %union.vec128_t* %XMM2.i375 to i8*
  %8370 = load i64, i64* %PC.i373
  %8371 = add i64 %8370, 4
  store i64 %8371, i64* %PC.i373
  %8372 = bitcast i8* %8368 to double*
  %8373 = load double, double* %8372, align 1
  %8374 = getelementptr inbounds i8, i8* %8368, i64 8
  %8375 = bitcast i8* %8374 to i64*
  %8376 = load i64, i64* %8375, align 1
  %8377 = bitcast i8* %8369 to double*
  %8378 = load double, double* %8377, align 1
  %8379 = fmul double %8373, %8378
  %8380 = bitcast i8* %8367 to double*
  store double %8379, double* %8380, align 1
  %8381 = getelementptr inbounds i8, i8* %8367, i64 8
  %8382 = bitcast i8* %8381 to i64*
  store i64 %8376, i64* %8382, align 1
  store %struct.Memory* %loadMem_47d8a8, %struct.Memory** %MEMORY
  %loadMem_47d8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8384 = getelementptr inbounds %struct.GPR, %struct.GPR* %8383, i32 0, i32 33
  %8385 = getelementptr inbounds %struct.Reg, %struct.Reg* %8384, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %8385 to i64*
  %8386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8387 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8386, i64 0, i64 2
  %YMM2.i372 = bitcast %union.VectorReg* %8387 to %"class.std::bitset"*
  %8388 = bitcast %"class.std::bitset"* %YMM2.i372 to i8*
  %8389 = load i64, i64* %PC.i371
  %8390 = add i64 %8389, 9
  store i64 %8390, i64* %PC.i371
  %8391 = load i32, i32* bitcast (%G_0x6cc5dc_type* @G_0x6cc5dc to i32*)
  %8392 = sitofp i32 %8391 to double
  %8393 = bitcast i8* %8388 to double*
  store double %8392, double* %8393, align 1
  store %struct.Memory* %loadMem_47d8ac, %struct.Memory** %MEMORY
  %loadMem_47d8b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 33
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %8396 to i64*
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8398 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8397, i64 0, i64 2
  %YMM2.i370 = bitcast %union.VectorReg* %8398 to %"class.std::bitset"*
  %8399 = bitcast %"class.std::bitset"* %YMM2.i370 to i8*
  %8400 = bitcast %"class.std::bitset"* %YMM2.i370 to i8*
  %8401 = load i64, i64* %PC.i369
  %8402 = add i64 %8401, 9
  store i64 %8402, i64* %PC.i369
  %8403 = bitcast i8* %8400 to double*
  %8404 = load double, double* %8403, align 1
  %8405 = getelementptr inbounds i8, i8* %8400, i64 8
  %8406 = bitcast i8* %8405 to i64*
  %8407 = load i64, i64* %8406, align 1
  %8408 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %8409 = fmul double %8404, %8408
  %8410 = bitcast i8* %8399 to double*
  store double %8409, double* %8410, align 1
  %8411 = getelementptr inbounds i8, i8* %8399, i64 8
  %8412 = bitcast i8* %8411 to i64*
  store i64 %8407, i64* %8412, align 1
  store %struct.Memory* %loadMem_47d8b5, %struct.Memory** %MEMORY
  %loadMem_47d8be = load %struct.Memory*, %struct.Memory** %MEMORY
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8414 = getelementptr inbounds %struct.GPR, %struct.GPR* %8413, i32 0, i32 33
  %8415 = getelementptr inbounds %struct.Reg, %struct.Reg* %8414, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %8415 to i64*
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8417 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8416, i64 0, i64 3
  %YMM3.i368 = bitcast %union.VectorReg* %8417 to %"class.std::bitset"*
  %8418 = bitcast %"class.std::bitset"* %YMM3.i368 to i8*
  %8419 = load i64, i64* %PC.i367
  %8420 = add i64 %8419, 9
  store i64 %8420, i64* %PC.i367
  %8421 = load i32, i32* bitcast (%G_0x6cc5e0_type* @G_0x6cc5e0 to i32*)
  %8422 = sitofp i32 %8421 to double
  %8423 = bitcast i8* %8418 to double*
  store double %8422, double* %8423, align 1
  store %struct.Memory* %loadMem_47d8be, %struct.Memory** %MEMORY
  %loadMem_47d8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %8426 to i64*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8428 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8427, i64 0, i64 3
  %YMM3.i366 = bitcast %union.VectorReg* %8428 to %"class.std::bitset"*
  %8429 = bitcast %"class.std::bitset"* %YMM3.i366 to i8*
  %8430 = bitcast %"class.std::bitset"* %YMM3.i366 to i8*
  %8431 = load i64, i64* %PC.i365
  %8432 = add i64 %8431, 9
  store i64 %8432, i64* %PC.i365
  %8433 = bitcast i8* %8430 to double*
  %8434 = load double, double* %8433, align 1
  %8435 = getelementptr inbounds i8, i8* %8430, i64 8
  %8436 = bitcast i8* %8435 to i64*
  %8437 = load i64, i64* %8436, align 1
  %8438 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %8439 = fmul double %8434, %8438
  %8440 = bitcast i8* %8429 to double*
  store double %8439, double* %8440, align 1
  %8441 = getelementptr inbounds i8, i8* %8429, i64 8
  %8442 = bitcast i8* %8441 to i64*
  store i64 %8437, i64* %8442, align 1
  store %struct.Memory* %loadMem_47d8c7, %struct.Memory** %MEMORY
  %loadMem_47d8d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 33
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %8445 to i64*
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8447 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8446, i64 0, i64 2
  %YMM2.i363 = bitcast %union.VectorReg* %8447 to %"class.std::bitset"*
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8449 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8448, i64 0, i64 3
  %XMM3.i364 = bitcast %union.VectorReg* %8449 to %union.vec128_t*
  %8450 = bitcast %"class.std::bitset"* %YMM2.i363 to i8*
  %8451 = bitcast %"class.std::bitset"* %YMM2.i363 to i8*
  %8452 = bitcast %union.vec128_t* %XMM3.i364 to i8*
  %8453 = load i64, i64* %PC.i362
  %8454 = add i64 %8453, 4
  store i64 %8454, i64* %PC.i362
  %8455 = bitcast i8* %8451 to double*
  %8456 = load double, double* %8455, align 1
  %8457 = getelementptr inbounds i8, i8* %8451, i64 8
  %8458 = bitcast i8* %8457 to i64*
  %8459 = load i64, i64* %8458, align 1
  %8460 = bitcast i8* %8452 to double*
  %8461 = load double, double* %8460, align 1
  %8462 = fadd double %8456, %8461
  %8463 = bitcast i8* %8450 to double*
  store double %8462, double* %8463, align 1
  %8464 = getelementptr inbounds i8, i8* %8450, i64 8
  %8465 = bitcast i8* %8464 to i64*
  store i64 %8459, i64* %8465, align 1
  store %struct.Memory* %loadMem_47d8d0, %struct.Memory** %MEMORY
  %loadMem_47d8d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8467 = getelementptr inbounds %struct.GPR, %struct.GPR* %8466, i32 0, i32 33
  %8468 = getelementptr inbounds %struct.Reg, %struct.Reg* %8467, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %8468 to i64*
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8470 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8469, i64 0, i64 1
  %YMM1.i360 = bitcast %union.VectorReg* %8470 to %"class.std::bitset"*
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8472 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8471, i64 0, i64 2
  %XMM2.i361 = bitcast %union.VectorReg* %8472 to %union.vec128_t*
  %8473 = bitcast %"class.std::bitset"* %YMM1.i360 to i8*
  %8474 = bitcast %"class.std::bitset"* %YMM1.i360 to i8*
  %8475 = bitcast %union.vec128_t* %XMM2.i361 to i8*
  %8476 = load i64, i64* %PC.i359
  %8477 = add i64 %8476, 4
  store i64 %8477, i64* %PC.i359
  %8478 = bitcast i8* %8474 to double*
  %8479 = load double, double* %8478, align 1
  %8480 = getelementptr inbounds i8, i8* %8474, i64 8
  %8481 = bitcast i8* %8480 to i64*
  %8482 = load i64, i64* %8481, align 1
  %8483 = bitcast i8* %8475 to double*
  %8484 = load double, double* %8483, align 1
  %8485 = fdiv double %8479, %8484
  %8486 = bitcast i8* %8473 to double*
  store double %8485, double* %8486, align 1
  %8487 = getelementptr inbounds i8, i8* %8473, i64 8
  %8488 = bitcast i8* %8487 to i64*
  store i64 %8482, i64* %8488, align 1
  store %struct.Memory* %loadMem_47d8d4, %struct.Memory** %MEMORY
  %loadMem_47d8d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8490 = getelementptr inbounds %struct.GPR, %struct.GPR* %8489, i32 0, i32 33
  %8491 = getelementptr inbounds %struct.Reg, %struct.Reg* %8490, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %8491 to i64*
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8493 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8492, i64 0, i64 1
  %YMM1.i357 = bitcast %union.VectorReg* %8493 to %"class.std::bitset"*
  %8494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8495 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8494, i64 0, i64 0
  %XMM0.i358 = bitcast %union.VectorReg* %8495 to %union.vec128_t*
  %8496 = bitcast %"class.std::bitset"* %YMM1.i357 to i8*
  %8497 = bitcast %"class.std::bitset"* %YMM1.i357 to i8*
  %8498 = bitcast %union.vec128_t* %XMM0.i358 to i8*
  %8499 = load i64, i64* %PC.i356
  %8500 = add i64 %8499, 4
  store i64 %8500, i64* %PC.i356
  %8501 = bitcast i8* %8497 to double*
  %8502 = load double, double* %8501, align 1
  %8503 = getelementptr inbounds i8, i8* %8497, i64 8
  %8504 = bitcast i8* %8503 to i64*
  %8505 = load i64, i64* %8504, align 1
  %8506 = bitcast i8* %8498 to double*
  %8507 = load double, double* %8506, align 1
  %8508 = fadd double %8502, %8507
  %8509 = bitcast i8* %8496 to double*
  store double %8508, double* %8509, align 1
  %8510 = getelementptr inbounds i8, i8* %8496, i64 8
  %8511 = bitcast i8* %8510 to i64*
  store i64 %8505, i64* %8511, align 1
  store %struct.Memory* %loadMem_47d8d8, %struct.Memory** %MEMORY
  %loadMem_47d8dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8513 = getelementptr inbounds %struct.GPR, %struct.GPR* %8512, i32 0, i32 33
  %8514 = getelementptr inbounds %struct.Reg, %struct.Reg* %8513, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %8514 to i64*
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8516 = getelementptr inbounds %struct.GPR, %struct.GPR* %8515, i32 0, i32 15
  %8517 = getelementptr inbounds %struct.Reg, %struct.Reg* %8516, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %8517 to i64*
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8519 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8518, i64 0, i64 0
  %XMM0.i355 = bitcast %union.VectorReg* %8519 to %union.vec128_t*
  %8520 = load i64, i64* %RBP.i354
  %8521 = sub i64 %8520, 80
  %8522 = bitcast %union.vec128_t* %XMM0.i355 to i8*
  %8523 = load i64, i64* %PC.i353
  %8524 = add i64 %8523, 5
  store i64 %8524, i64* %PC.i353
  %8525 = bitcast i8* %8522 to double*
  %8526 = load double, double* %8525, align 1
  %8527 = inttoptr i64 %8521 to double*
  store double %8526, double* %8527
  store %struct.Memory* %loadMem_47d8dc, %struct.Memory** %MEMORY
  %loadMem_47d8e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 33
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %8530 to i64*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8532 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8531, i64 0, i64 0
  %YMM0.i351 = bitcast %union.VectorReg* %8532 to %"class.std::bitset"*
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8534 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8533, i64 0, i64 1
  %XMM1.i352 = bitcast %union.VectorReg* %8534 to %union.vec128_t*
  %8535 = bitcast %"class.std::bitset"* %YMM0.i351 to i8*
  %8536 = bitcast %union.vec128_t* %XMM1.i352 to i8*
  %8537 = load i64, i64* %PC.i350
  %8538 = add i64 %8537, 3
  store i64 %8538, i64* %PC.i350
  %8539 = bitcast i8* %8536 to <2 x i32>*
  %8540 = load <2 x i32>, <2 x i32>* %8539, align 1
  %8541 = getelementptr inbounds i8, i8* %8536, i64 8
  %8542 = bitcast i8* %8541 to <2 x i32>*
  %8543 = load <2 x i32>, <2 x i32>* %8542, align 1
  %8544 = extractelement <2 x i32> %8540, i32 0
  %8545 = bitcast i8* %8535 to i32*
  store i32 %8544, i32* %8545, align 1
  %8546 = extractelement <2 x i32> %8540, i32 1
  %8547 = getelementptr inbounds i8, i8* %8535, i64 4
  %8548 = bitcast i8* %8547 to i32*
  store i32 %8546, i32* %8548, align 1
  %8549 = extractelement <2 x i32> %8543, i32 0
  %8550 = getelementptr inbounds i8, i8* %8535, i64 8
  %8551 = bitcast i8* %8550 to i32*
  store i32 %8549, i32* %8551, align 1
  %8552 = extractelement <2 x i32> %8543, i32 1
  %8553 = getelementptr inbounds i8, i8* %8535, i64 12
  %8554 = bitcast i8* %8553 to i32*
  store i32 %8552, i32* %8554, align 1
  store %struct.Memory* %loadMem_47d8e1, %struct.Memory** %MEMORY
  %loadMem_47d8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 33
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %8557 to i64*
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8559 = getelementptr inbounds %struct.GPR, %struct.GPR* %8558, i32 0, i32 5
  %8560 = getelementptr inbounds %struct.Reg, %struct.Reg* %8559, i32 0, i32 0
  %RCX.i348 = bitcast %union.anon* %8560 to i64*
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8562 = getelementptr inbounds %struct.GPR, %struct.GPR* %8561, i32 0, i32 15
  %8563 = getelementptr inbounds %struct.Reg, %struct.Reg* %8562, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %8563 to i64*
  %8564 = load i64, i64* %RBP.i349
  %8565 = sub i64 %8564, 88
  %8566 = load i64, i64* %RCX.i348
  %8567 = load i64, i64* %PC.i347
  %8568 = add i64 %8567, 4
  store i64 %8568, i64* %PC.i347
  %8569 = inttoptr i64 %8565 to i64*
  store i64 %8566, i64* %8569
  store %struct.Memory* %loadMem_47d8e4, %struct.Memory** %MEMORY
  %loadMem1_47d8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8571 = getelementptr inbounds %struct.GPR, %struct.GPR* %8570, i32 0, i32 33
  %8572 = getelementptr inbounds %struct.Reg, %struct.Reg* %8571, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %8572 to i64*
  %8573 = load i64, i64* %PC.i346
  %8574 = add i64 %8573, -509752
  %8575 = load i64, i64* %PC.i346
  %8576 = add i64 %8575, 5
  %8577 = load i64, i64* %PC.i346
  %8578 = add i64 %8577, 5
  store i64 %8578, i64* %PC.i346
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8580 = load i64, i64* %8579, align 8
  %8581 = add i64 %8580, -8
  %8582 = inttoptr i64 %8581 to i64*
  store i64 %8576, i64* %8582
  store i64 %8581, i64* %8579, align 8
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8574, i64* %8583, align 8
  store %struct.Memory* %loadMem1_47d8e8, %struct.Memory** %MEMORY
  %loadMem2_47d8e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d8e8 = load i64, i64* %3
  %8584 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d8e8)
  store %struct.Memory* %8584, %struct.Memory** %MEMORY
  %loadMem_47d8ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8586 = getelementptr inbounds %struct.GPR, %struct.GPR* %8585, i32 0, i32 33
  %8587 = getelementptr inbounds %struct.Reg, %struct.Reg* %8586, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %8587 to i64*
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8589 = getelementptr inbounds %struct.GPR, %struct.GPR* %8588, i32 0, i32 5
  %8590 = getelementptr inbounds %struct.Reg, %struct.Reg* %8589, i32 0, i32 0
  %RCX.i342 = bitcast %union.anon* %8590 to i64*
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8592 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8591, i64 0, i64 0
  %XMM0.i343 = bitcast %union.VectorReg* %8592 to %union.vec128_t*
  %8593 = bitcast %union.vec128_t* %XMM0.i343 to i8*
  %8594 = load i64, i64* %PC.i341
  %8595 = add i64 %8594, 5
  store i64 %8595, i64* %PC.i341
  %8596 = bitcast i8* %8593 to double*
  %8597 = load double, double* %8596, align 1
  %8598 = call double @llvm.trunc.f64(double %8597)
  %8599 = call double @llvm.fabs.f64(double %8598)
  %8600 = fcmp ogt double %8599, 0x43E0000000000000
  %8601 = fptosi double %8598 to i64
  %8602 = select i1 %8600, i64 -9223372036854775808, i64 %8601
  store i64 %8602, i64* %RCX.i342, align 8
  store %struct.Memory* %loadMem_47d8ed, %struct.Memory** %MEMORY
  %loadMem_47d8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8604 = getelementptr inbounds %struct.GPR, %struct.GPR* %8603, i32 0, i32 33
  %8605 = getelementptr inbounds %struct.Reg, %struct.Reg* %8604, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %8605 to i64*
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8607 = getelementptr inbounds %struct.GPR, %struct.GPR* %8606, i32 0, i32 5
  %8608 = getelementptr inbounds %struct.Reg, %struct.Reg* %8607, i32 0, i32 0
  %RCX.i340 = bitcast %union.anon* %8608 to i64*
  %8609 = load i64, i64* %RCX.i340
  %8610 = load i64, i64* %PC.i339
  %8611 = add i64 %8610, 8
  store i64 %8611, i64* %PC.i339
  store i64 %8609, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47d8f2, %struct.Memory** %MEMORY
  %loadMem_47d8fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8613 = getelementptr inbounds %struct.GPR, %struct.GPR* %8612, i32 0, i32 33
  %8614 = getelementptr inbounds %struct.Reg, %struct.Reg* %8613, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %8614 to i64*
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8616 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8615, i64 0, i64 0
  %YMM0.i338 = bitcast %union.VectorReg* %8616 to %"class.std::bitset"*
  %8617 = bitcast %"class.std::bitset"* %YMM0.i338 to i8*
  %8618 = load i64, i64* %PC.i337
  %8619 = add i64 %8618, 9
  store i64 %8619, i64* %PC.i337
  %8620 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %8621 = bitcast i8* %8617 to double*
  store double %8620, double* %8621, align 1
  %8622 = getelementptr inbounds i8, i8* %8617, i64 8
  %8623 = bitcast i8* %8622 to double*
  store double 0.000000e+00, double* %8623, align 1
  store %struct.Memory* %loadMem_47d8fa, %struct.Memory** %MEMORY
  %loadMem_47d903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 33
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %8626 to i64*
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8628 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8627, i64 0, i64 0
  %YMM0.i336 = bitcast %union.VectorReg* %8628 to %"class.std::bitset"*
  %8629 = bitcast %"class.std::bitset"* %YMM0.i336 to i8*
  %8630 = bitcast %"class.std::bitset"* %YMM0.i336 to i8*
  %8631 = load i64, i64* %PC.i335
  %8632 = add i64 %8631, 9
  store i64 %8632, i64* %PC.i335
  %8633 = bitcast i8* %8630 to double*
  %8634 = load double, double* %8633, align 1
  %8635 = getelementptr inbounds i8, i8* %8630, i64 8
  %8636 = bitcast i8* %8635 to i64*
  %8637 = load i64, i64* %8636, align 1
  %8638 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %8639 = fdiv double %8634, %8638
  %8640 = bitcast i8* %8629 to double*
  store double %8639, double* %8640, align 1
  %8641 = getelementptr inbounds i8, i8* %8629, i64 8
  %8642 = bitcast i8* %8641 to i64*
  store i64 %8637, i64* %8642, align 1
  store %struct.Memory* %loadMem_47d903, %struct.Memory** %MEMORY
  %loadMem_47d90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 33
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8647 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8646, i64 0, i64 1
  %YMM1.i334 = bitcast %union.VectorReg* %8647 to %"class.std::bitset"*
  %8648 = bitcast %"class.std::bitset"* %YMM1.i334 to i8*
  %8649 = load i64, i64* %PC.i333
  %8650 = add i64 %8649, 9
  store i64 %8650, i64* %PC.i333
  %8651 = load double, double* bitcast (%G_0x725570_type* @G_0x725570 to double*)
  %8652 = bitcast i8* %8648 to double*
  store double %8651, double* %8652, align 1
  %8653 = getelementptr inbounds i8, i8* %8648, i64 8
  %8654 = bitcast i8* %8653 to double*
  store double 0.000000e+00, double* %8654, align 1
  store %struct.Memory* %loadMem_47d90c, %struct.Memory** %MEMORY
  %loadMem_47d915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8656 = getelementptr inbounds %struct.GPR, %struct.GPR* %8655, i32 0, i32 33
  %8657 = getelementptr inbounds %struct.Reg, %struct.Reg* %8656, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %8657 to i64*
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8659 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8658, i64 0, i64 2
  %YMM2.i332 = bitcast %union.VectorReg* %8659 to %"class.std::bitset"*
  %8660 = bitcast %"class.std::bitset"* %YMM2.i332 to i8*
  %8661 = load i64, i64* %PC.i331
  %8662 = add i64 %8661, 9
  store i64 %8662, i64* %PC.i331
  %8663 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %8664 = bitcast i8* %8660 to double*
  store double %8663, double* %8664, align 1
  %8665 = getelementptr inbounds i8, i8* %8660, i64 8
  %8666 = bitcast i8* %8665 to double*
  store double 0.000000e+00, double* %8666, align 1
  store %struct.Memory* %loadMem_47d915, %struct.Memory** %MEMORY
  %loadMem_47d91e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8668 = getelementptr inbounds %struct.GPR, %struct.GPR* %8667, i32 0, i32 33
  %8669 = getelementptr inbounds %struct.Reg, %struct.Reg* %8668, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %8669 to i64*
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8671 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8670, i64 0, i64 2
  %YMM2.i330 = bitcast %union.VectorReg* %8671 to %"class.std::bitset"*
  %8672 = bitcast %"class.std::bitset"* %YMM2.i330 to i8*
  %8673 = bitcast %"class.std::bitset"* %YMM2.i330 to i8*
  %8674 = load i64, i64* %PC.i329
  %8675 = add i64 %8674, 9
  store i64 %8675, i64* %PC.i329
  %8676 = bitcast i8* %8673 to double*
  %8677 = load double, double* %8676, align 1
  %8678 = getelementptr inbounds i8, i8* %8673, i64 8
  %8679 = bitcast i8* %8678 to i64*
  %8680 = load i64, i64* %8679, align 1
  %8681 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %8682 = fsub double %8677, %8681
  %8683 = bitcast i8* %8672 to double*
  store double %8682, double* %8683, align 1
  %8684 = getelementptr inbounds i8, i8* %8672, i64 8
  %8685 = bitcast i8* %8684 to i64*
  store i64 %8680, i64* %8685, align 1
  store %struct.Memory* %loadMem_47d91e, %struct.Memory** %MEMORY
  %loadMem_47d927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 33
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %8688 to i64*
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8690 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8689, i64 0, i64 1
  %YMM1.i327 = bitcast %union.VectorReg* %8690 to %"class.std::bitset"*
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8692 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8691, i64 0, i64 2
  %XMM2.i328 = bitcast %union.VectorReg* %8692 to %union.vec128_t*
  %8693 = bitcast %"class.std::bitset"* %YMM1.i327 to i8*
  %8694 = bitcast %"class.std::bitset"* %YMM1.i327 to i8*
  %8695 = bitcast %union.vec128_t* %XMM2.i328 to i8*
  %8696 = load i64, i64* %PC.i326
  %8697 = add i64 %8696, 4
  store i64 %8697, i64* %PC.i326
  %8698 = bitcast i8* %8694 to double*
  %8699 = load double, double* %8698, align 1
  %8700 = getelementptr inbounds i8, i8* %8694, i64 8
  %8701 = bitcast i8* %8700 to i64*
  %8702 = load i64, i64* %8701, align 1
  %8703 = bitcast i8* %8695 to double*
  %8704 = load double, double* %8703, align 1
  %8705 = fmul double %8699, %8704
  %8706 = bitcast i8* %8693 to double*
  store double %8705, double* %8706, align 1
  %8707 = getelementptr inbounds i8, i8* %8693, i64 8
  %8708 = bitcast i8* %8707 to i64*
  store i64 %8702, i64* %8708, align 1
  store %struct.Memory* %loadMem_47d927, %struct.Memory** %MEMORY
  %loadMem_47d92b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8710 = getelementptr inbounds %struct.GPR, %struct.GPR* %8709, i32 0, i32 33
  %8711 = getelementptr inbounds %struct.Reg, %struct.Reg* %8710, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %8711 to i64*
  %8712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8713 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8712, i64 0, i64 0
  %YMM0.i324 = bitcast %union.VectorReg* %8713 to %"class.std::bitset"*
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8715 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8714, i64 0, i64 1
  %XMM1.i325 = bitcast %union.VectorReg* %8715 to %union.vec128_t*
  %8716 = bitcast %"class.std::bitset"* %YMM0.i324 to i8*
  %8717 = bitcast %"class.std::bitset"* %YMM0.i324 to i8*
  %8718 = bitcast %union.vec128_t* %XMM1.i325 to i8*
  %8719 = load i64, i64* %PC.i323
  %8720 = add i64 %8719, 4
  store i64 %8720, i64* %PC.i323
  %8721 = bitcast i8* %8717 to double*
  %8722 = load double, double* %8721, align 1
  %8723 = getelementptr inbounds i8, i8* %8717, i64 8
  %8724 = bitcast i8* %8723 to i64*
  %8725 = load i64, i64* %8724, align 1
  %8726 = bitcast i8* %8718 to double*
  %8727 = load double, double* %8726, align 1
  %8728 = fsub double %8722, %8727
  %8729 = bitcast i8* %8716 to double*
  store double %8728, double* %8729, align 1
  %8730 = getelementptr inbounds i8, i8* %8716, i64 8
  %8731 = bitcast i8* %8730 to i64*
  store i64 %8725, i64* %8731, align 1
  store %struct.Memory* %loadMem_47d92b, %struct.Memory** %MEMORY
  %loadMem_47d92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8733 = getelementptr inbounds %struct.GPR, %struct.GPR* %8732, i32 0, i32 33
  %8734 = getelementptr inbounds %struct.Reg, %struct.Reg* %8733, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %8734 to i64*
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8736 = getelementptr inbounds %struct.GPR, %struct.GPR* %8735, i32 0, i32 15
  %8737 = getelementptr inbounds %struct.Reg, %struct.Reg* %8736, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %8737 to i64*
  %8738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8739 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8738, i64 0, i64 1
  %YMM1.i322 = bitcast %union.VectorReg* %8739 to %"class.std::bitset"*
  %8740 = bitcast %"class.std::bitset"* %YMM1.i322 to i8*
  %8741 = load i64, i64* %RBP.i321
  %8742 = sub i64 %8741, 80
  %8743 = load i64, i64* %PC.i320
  %8744 = add i64 %8743, 5
  store i64 %8744, i64* %PC.i320
  %8745 = inttoptr i64 %8742 to double*
  %8746 = load double, double* %8745
  %8747 = bitcast i8* %8740 to double*
  store double %8746, double* %8747, align 1
  %8748 = getelementptr inbounds i8, i8* %8740, i64 8
  %8749 = bitcast i8* %8748 to double*
  store double 0.000000e+00, double* %8749, align 1
  store %struct.Memory* %loadMem_47d92f, %struct.Memory** %MEMORY
  %loadMem_47d934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 33
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %8752 to i64*
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8754 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8753, i64 0, i64 0
  %YMM0.i318 = bitcast %union.VectorReg* %8754 to %"class.std::bitset"*
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8756 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8755, i64 0, i64 1
  %XMM1.i319 = bitcast %union.VectorReg* %8756 to %union.vec128_t*
  %8757 = bitcast %"class.std::bitset"* %YMM0.i318 to i8*
  %8758 = bitcast %"class.std::bitset"* %YMM0.i318 to i8*
  %8759 = bitcast %union.vec128_t* %XMM1.i319 to i8*
  %8760 = load i64, i64* %PC.i317
  %8761 = add i64 %8760, 4
  store i64 %8761, i64* %PC.i317
  %8762 = bitcast i8* %8758 to double*
  %8763 = load double, double* %8762, align 1
  %8764 = getelementptr inbounds i8, i8* %8758, i64 8
  %8765 = bitcast i8* %8764 to i64*
  %8766 = load i64, i64* %8765, align 1
  %8767 = bitcast i8* %8759 to double*
  %8768 = load double, double* %8767, align 1
  %8769 = fadd double %8763, %8768
  %8770 = bitcast i8* %8757 to double*
  store double %8769, double* %8770, align 1
  %8771 = getelementptr inbounds i8, i8* %8757, i64 8
  %8772 = bitcast i8* %8771 to i64*
  store i64 %8766, i64* %8772, align 1
  store %struct.Memory* %loadMem_47d934, %struct.Memory** %MEMORY
  %loadMem1_47d938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8774 = getelementptr inbounds %struct.GPR, %struct.GPR* %8773, i32 0, i32 33
  %8775 = getelementptr inbounds %struct.Reg, %struct.Reg* %8774, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %8775 to i64*
  %8776 = load i64, i64* %PC.i316
  %8777 = add i64 %8776, -509832
  %8778 = load i64, i64* %PC.i316
  %8779 = add i64 %8778, 5
  %8780 = load i64, i64* %PC.i316
  %8781 = add i64 %8780, 5
  store i64 %8781, i64* %PC.i316
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8783 = load i64, i64* %8782, align 8
  %8784 = add i64 %8783, -8
  %8785 = inttoptr i64 %8784 to i64*
  store i64 %8779, i64* %8785
  store i64 %8784, i64* %8782, align 8
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8777, i64* %8786, align 8
  store %struct.Memory* %loadMem1_47d938, %struct.Memory** %MEMORY
  %loadMem2_47d938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d938 = load i64, i64* %3
  %8787 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d938)
  store %struct.Memory* %8787, %struct.Memory** %MEMORY
  %loadMem_47d93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8789 = getelementptr inbounds %struct.GPR, %struct.GPR* %8788, i32 0, i32 33
  %8790 = getelementptr inbounds %struct.Reg, %struct.Reg* %8789, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %8790 to i64*
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8792 = getelementptr inbounds %struct.GPR, %struct.GPR* %8791, i32 0, i32 5
  %8793 = getelementptr inbounds %struct.Reg, %struct.Reg* %8792, i32 0, i32 0
  %RCX.i312 = bitcast %union.anon* %8793 to i64*
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8795 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8794, i64 0, i64 0
  %XMM0.i313 = bitcast %union.VectorReg* %8795 to %union.vec128_t*
  %8796 = bitcast %union.vec128_t* %XMM0.i313 to i8*
  %8797 = load i64, i64* %PC.i311
  %8798 = add i64 %8797, 5
  store i64 %8798, i64* %PC.i311
  %8799 = bitcast i8* %8796 to double*
  %8800 = load double, double* %8799, align 1
  %8801 = call double @llvm.trunc.f64(double %8800)
  %8802 = call double @llvm.fabs.f64(double %8801)
  %8803 = fcmp ogt double %8802, 0x43E0000000000000
  %8804 = fptosi double %8801 to i64
  %8805 = select i1 %8803, i64 -9223372036854775808, i64 %8804
  store i64 %8805, i64* %RCX.i312, align 8
  store %struct.Memory* %loadMem_47d93d, %struct.Memory** %MEMORY
  %loadMem_47d942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8807 = getelementptr inbounds %struct.GPR, %struct.GPR* %8806, i32 0, i32 33
  %8808 = getelementptr inbounds %struct.Reg, %struct.Reg* %8807, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %8808 to i64*
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8810 = getelementptr inbounds %struct.GPR, %struct.GPR* %8809, i32 0, i32 5
  %8811 = getelementptr inbounds %struct.Reg, %struct.Reg* %8810, i32 0, i32 0
  %RCX.i310 = bitcast %union.anon* %8811 to i64*
  %8812 = load i64, i64* %RCX.i310
  %8813 = load i64, i64* %PC.i309
  %8814 = add i64 %8813, 8
  store i64 %8814, i64* %PC.i309
  store i64 %8812, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store %struct.Memory* %loadMem_47d942, %struct.Memory** %MEMORY
  %loadMem_47d94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8816 = getelementptr inbounds %struct.GPR, %struct.GPR* %8815, i32 0, i32 33
  %8817 = getelementptr inbounds %struct.Reg, %struct.Reg* %8816, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %8817 to i64*
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8819 = getelementptr inbounds %struct.GPR, %struct.GPR* %8818, i32 0, i32 5
  %8820 = getelementptr inbounds %struct.Reg, %struct.Reg* %8819, i32 0, i32 0
  %RCX.i307 = bitcast %union.anon* %8820 to i64*
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8822 = getelementptr inbounds %struct.GPR, %struct.GPR* %8821, i32 0, i32 15
  %8823 = getelementptr inbounds %struct.Reg, %struct.Reg* %8822, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %8823 to i64*
  %8824 = load i64, i64* %RBP.i308
  %8825 = sub i64 %8824, 88
  %8826 = load i64, i64* %PC.i306
  %8827 = add i64 %8826, 4
  store i64 %8827, i64* %PC.i306
  %8828 = inttoptr i64 %8825 to i64*
  %8829 = load i64, i64* %8828
  store i64 %8829, i64* %RCX.i307, align 8
  store %struct.Memory* %loadMem_47d94a, %struct.Memory** %MEMORY
  %loadMem_47d94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8831 = getelementptr inbounds %struct.GPR, %struct.GPR* %8830, i32 0, i32 33
  %8832 = getelementptr inbounds %struct.Reg, %struct.Reg* %8831, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %8832 to i64*
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8834 = getelementptr inbounds %struct.GPR, %struct.GPR* %8833, i32 0, i32 5
  %8835 = getelementptr inbounds %struct.Reg, %struct.Reg* %8834, i32 0, i32 0
  %RCX.i305 = bitcast %union.anon* %8835 to i64*
  %8836 = load i64, i64* %RCX.i305
  %8837 = load i64, i64* %PC.i304
  %8838 = add i64 %8837, 8
  store i64 %8838, i64* %PC.i304
  %8839 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  %8840 = sub i64 %8836, %8839
  %8841 = icmp ugt i64 %8839, %8836
  %8842 = zext i1 %8841 to i8
  %8843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8842, i8* %8843, align 1
  %8844 = trunc i64 %8840 to i32
  %8845 = and i32 %8844, 255
  %8846 = call i32 @llvm.ctpop.i32(i32 %8845)
  %8847 = trunc i32 %8846 to i8
  %8848 = and i8 %8847, 1
  %8849 = xor i8 %8848, 1
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8849, i8* %8850, align 1
  %8851 = xor i64 %8839, %8836
  %8852 = xor i64 %8851, %8840
  %8853 = lshr i64 %8852, 4
  %8854 = trunc i64 %8853 to i8
  %8855 = and i8 %8854, 1
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8855, i8* %8856, align 1
  %8857 = icmp eq i64 %8840, 0
  %8858 = zext i1 %8857 to i8
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8858, i8* %8859, align 1
  %8860 = lshr i64 %8840, 63
  %8861 = trunc i64 %8860 to i8
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8861, i8* %8862, align 1
  %8863 = lshr i64 %8836, 63
  %8864 = lshr i64 %8839, 63
  %8865 = xor i64 %8864, %8863
  %8866 = xor i64 %8860, %8863
  %8867 = add i64 %8866, %8865
  %8868 = icmp eq i64 %8867, 2
  %8869 = zext i1 %8868 to i8
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8869, i8* %8870, align 1
  store %struct.Memory* %loadMem_47d94e, %struct.Memory** %MEMORY
  %loadMem_47d956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 33
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %8873 to i64*
  %8874 = load i64, i64* %PC.i303
  %8875 = add i64 %8874, 23
  %8876 = load i64, i64* %PC.i303
  %8877 = add i64 %8876, 6
  %8878 = load i64, i64* %PC.i303
  %8879 = add i64 %8878, 6
  store i64 %8879, i64* %PC.i303
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8881 = load i8, i8* %8880, align 1
  %8882 = icmp ne i8 %8881, 0
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8884 = load i8, i8* %8883, align 1
  %8885 = icmp ne i8 %8884, 0
  %8886 = xor i1 %8882, %8885
  %8887 = xor i1 %8886, true
  %8888 = zext i1 %8887 to i8
  store i8 %8888, i8* %BRANCH_TAKEN, align 1
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8890 = select i1 %8886, i64 %8877, i64 %8875
  store i64 %8890, i64* %8889, align 8
  store %struct.Memory* %loadMem_47d956, %struct.Memory** %MEMORY
  %loadBr_47d956 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47d956 = icmp eq i8 %loadBr_47d956, 1
  br i1 %cmpBr_47d956, label %block_.L_47d96d, label %block_47d95c

block_47d95c:                                     ; preds = %block_47d88a
  %loadMem_47d95c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8892 = getelementptr inbounds %struct.GPR, %struct.GPR* %8891, i32 0, i32 33
  %8893 = getelementptr inbounds %struct.Reg, %struct.Reg* %8892, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %8893 to i64*
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8895 = getelementptr inbounds %struct.GPR, %struct.GPR* %8894, i32 0, i32 1
  %8896 = getelementptr inbounds %struct.Reg, %struct.Reg* %8895, i32 0, i32 0
  %RAX.i302 = bitcast %union.anon* %8896 to i64*
  %8897 = load i64, i64* %PC.i301
  %8898 = add i64 %8897, 8
  store i64 %8898, i64* %PC.i301
  %8899 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store i64 %8899, i64* %RAX.i302, align 8
  store %struct.Memory* %loadMem_47d95c, %struct.Memory** %MEMORY
  %loadMem_47d964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8901 = getelementptr inbounds %struct.GPR, %struct.GPR* %8900, i32 0, i32 33
  %8902 = getelementptr inbounds %struct.Reg, %struct.Reg* %8901, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %8902 to i64*
  %8903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8904 = getelementptr inbounds %struct.GPR, %struct.GPR* %8903, i32 0, i32 1
  %8905 = getelementptr inbounds %struct.Reg, %struct.Reg* %8904, i32 0, i32 0
  %RAX.i299 = bitcast %union.anon* %8905 to i64*
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8907 = getelementptr inbounds %struct.GPR, %struct.GPR* %8906, i32 0, i32 15
  %8908 = getelementptr inbounds %struct.Reg, %struct.Reg* %8907, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %8908 to i64*
  %8909 = load i64, i64* %RBP.i300
  %8910 = sub i64 %8909, 96
  %8911 = load i64, i64* %RAX.i299
  %8912 = load i64, i64* %PC.i298
  %8913 = add i64 %8912, 4
  store i64 %8913, i64* %PC.i298
  %8914 = inttoptr i64 %8910 to i64*
  store i64 %8911, i64* %8914
  store %struct.Memory* %loadMem_47d964, %struct.Memory** %MEMORY
  %loadMem_47d968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8916 = getelementptr inbounds %struct.GPR, %struct.GPR* %8915, i32 0, i32 33
  %8917 = getelementptr inbounds %struct.Reg, %struct.Reg* %8916, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %8917 to i64*
  %8918 = load i64, i64* %PC.i297
  %8919 = add i64 %8918, 18
  %8920 = load i64, i64* %PC.i297
  %8921 = add i64 %8920, 5
  store i64 %8921, i64* %PC.i297
  %8922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8919, i64* %8922, align 8
  store %struct.Memory* %loadMem_47d968, %struct.Memory** %MEMORY
  br label %block_.L_47d97a

block_.L_47d96d:                                  ; preds = %block_47d88a
  %loadMem_47d96d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8924 = getelementptr inbounds %struct.GPR, %struct.GPR* %8923, i32 0, i32 33
  %8925 = getelementptr inbounds %struct.Reg, %struct.Reg* %8924, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %8925 to i64*
  %8926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8927 = getelementptr inbounds %struct.GPR, %struct.GPR* %8926, i32 0, i32 1
  %8928 = getelementptr inbounds %struct.Reg, %struct.Reg* %8927, i32 0, i32 0
  %EAX.i295 = bitcast %union.anon* %8928 to i32*
  %8929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8930 = getelementptr inbounds %struct.GPR, %struct.GPR* %8929, i32 0, i32 1
  %8931 = getelementptr inbounds %struct.Reg, %struct.Reg* %8930, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %8931 to i64*
  %8932 = load i64, i64* %RAX.i296
  %8933 = load i32, i32* %EAX.i295
  %8934 = zext i32 %8933 to i64
  %8935 = load i64, i64* %PC.i294
  %8936 = add i64 %8935, 2
  store i64 %8936, i64* %PC.i294
  %8937 = xor i64 %8934, %8932
  %8938 = trunc i64 %8937 to i32
  %8939 = and i64 %8937, 4294967295
  store i64 %8939, i64* %RAX.i296, align 8
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8940, align 1
  %8941 = and i32 %8938, 255
  %8942 = call i32 @llvm.ctpop.i32(i32 %8941)
  %8943 = trunc i32 %8942 to i8
  %8944 = and i8 %8943, 1
  %8945 = xor i8 %8944, 1
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8945, i8* %8946, align 1
  %8947 = icmp eq i32 %8938, 0
  %8948 = zext i1 %8947 to i8
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8948, i8* %8949, align 1
  %8950 = lshr i32 %8938, 31
  %8951 = trunc i32 %8950 to i8
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8951, i8* %8952, align 1
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8953, align 1
  %8954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8954, align 1
  store %struct.Memory* %loadMem_47d96d, %struct.Memory** %MEMORY
  %loadMem_47d96f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8956 = getelementptr inbounds %struct.GPR, %struct.GPR* %8955, i32 0, i32 33
  %8957 = getelementptr inbounds %struct.Reg, %struct.Reg* %8956, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %8957 to i64*
  %8958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8959 = getelementptr inbounds %struct.GPR, %struct.GPR* %8958, i32 0, i32 1
  %8960 = getelementptr inbounds %struct.Reg, %struct.Reg* %8959, i32 0, i32 0
  %EAX.i292 = bitcast %union.anon* %8960 to i32*
  %8961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8962 = getelementptr inbounds %struct.GPR, %struct.GPR* %8961, i32 0, i32 5
  %8963 = getelementptr inbounds %struct.Reg, %struct.Reg* %8962, i32 0, i32 0
  %RCX.i293 = bitcast %union.anon* %8963 to i64*
  %8964 = load i32, i32* %EAX.i292
  %8965 = zext i32 %8964 to i64
  %8966 = load i64, i64* %PC.i291
  %8967 = add i64 %8966, 2
  store i64 %8967, i64* %PC.i291
  %8968 = and i64 %8965, 4294967295
  store i64 %8968, i64* %RCX.i293, align 8
  store %struct.Memory* %loadMem_47d96f, %struct.Memory** %MEMORY
  %loadMem_47d971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8970 = getelementptr inbounds %struct.GPR, %struct.GPR* %8969, i32 0, i32 33
  %8971 = getelementptr inbounds %struct.Reg, %struct.Reg* %8970, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %8971 to i64*
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8973 = getelementptr inbounds %struct.GPR, %struct.GPR* %8972, i32 0, i32 5
  %8974 = getelementptr inbounds %struct.Reg, %struct.Reg* %8973, i32 0, i32 0
  %RCX.i289 = bitcast %union.anon* %8974 to i64*
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8976 = getelementptr inbounds %struct.GPR, %struct.GPR* %8975, i32 0, i32 15
  %8977 = getelementptr inbounds %struct.Reg, %struct.Reg* %8976, i32 0, i32 0
  %RBP.i290 = bitcast %union.anon* %8977 to i64*
  %8978 = load i64, i64* %RBP.i290
  %8979 = sub i64 %8978, 96
  %8980 = load i64, i64* %RCX.i289
  %8981 = load i64, i64* %PC.i288
  %8982 = add i64 %8981, 4
  store i64 %8982, i64* %PC.i288
  %8983 = inttoptr i64 %8979 to i64*
  store i64 %8980, i64* %8983
  store %struct.Memory* %loadMem_47d971, %struct.Memory** %MEMORY
  %loadMem_47d975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8985 = getelementptr inbounds %struct.GPR, %struct.GPR* %8984, i32 0, i32 33
  %8986 = getelementptr inbounds %struct.Reg, %struct.Reg* %8985, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %8986 to i64*
  %8987 = load i64, i64* %PC.i287
  %8988 = add i64 %8987, 5
  %8989 = load i64, i64* %PC.i287
  %8990 = add i64 %8989, 5
  store i64 %8990, i64* %PC.i287
  %8991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8988, i64* %8991, align 8
  store %struct.Memory* %loadMem_47d975, %struct.Memory** %MEMORY
  br label %block_.L_47d97a

block_.L_47d97a:                                  ; preds = %block_.L_47d96d, %block_47d95c
  %loadMem_47d97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 33
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %8994 to i64*
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 1
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %RAX.i285 = bitcast %union.anon* %8997 to i64*
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8999 = getelementptr inbounds %struct.GPR, %struct.GPR* %8998, i32 0, i32 15
  %9000 = getelementptr inbounds %struct.Reg, %struct.Reg* %8999, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %9000 to i64*
  %9001 = load i64, i64* %RBP.i286
  %9002 = sub i64 %9001, 96
  %9003 = load i64, i64* %PC.i284
  %9004 = add i64 %9003, 4
  store i64 %9004, i64* %PC.i284
  %9005 = inttoptr i64 %9002 to i64*
  %9006 = load i64, i64* %9005
  store i64 %9006, i64* %RAX.i285, align 8
  store %struct.Memory* %loadMem_47d97a, %struct.Memory** %MEMORY
  %loadMem_47d97e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9008 = getelementptr inbounds %struct.GPR, %struct.GPR* %9007, i32 0, i32 33
  %9009 = getelementptr inbounds %struct.Reg, %struct.Reg* %9008, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %9009 to i64*
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9011 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9010, i64 0, i64 0
  %YMM0.i283 = bitcast %union.VectorReg* %9011 to %"class.std::bitset"*
  %9012 = bitcast %"class.std::bitset"* %YMM0.i283 to i8*
  %9013 = load i64, i64* %PC.i282
  %9014 = add i64 %9013, ptrtoint (%G_0x33f02__rip__type* @G_0x33f02__rip_ to i64)
  %9015 = load i64, i64* %PC.i282
  %9016 = add i64 %9015, 8
  store i64 %9016, i64* %PC.i282
  %9017 = inttoptr i64 %9014 to double*
  %9018 = load double, double* %9017
  %9019 = bitcast i8* %9012 to double*
  store double %9018, double* %9019, align 1
  %9020 = getelementptr inbounds i8, i8* %9012, i64 8
  %9021 = bitcast i8* %9020 to double*
  store double 0.000000e+00, double* %9021, align 1
  store %struct.Memory* %loadMem_47d97e, %struct.Memory** %MEMORY
  %loadMem_47d986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9023 = getelementptr inbounds %struct.GPR, %struct.GPR* %9022, i32 0, i32 33
  %9024 = getelementptr inbounds %struct.Reg, %struct.Reg* %9023, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %9024 to i64*
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9026 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9025, i64 0, i64 1
  %YMM1.i281 = bitcast %union.VectorReg* %9026 to %"class.std::bitset"*
  %9027 = bitcast %"class.std::bitset"* %YMM1.i281 to i8*
  %9028 = load i64, i64* %PC.i280
  %9029 = add i64 %9028, ptrtoint (%G_0x33ed2__rip__type* @G_0x33ed2__rip_ to i64)
  %9030 = load i64, i64* %PC.i280
  %9031 = add i64 %9030, 8
  store i64 %9031, i64* %PC.i280
  %9032 = inttoptr i64 %9029 to double*
  %9033 = load double, double* %9032
  %9034 = bitcast i8* %9027 to double*
  store double %9033, double* %9034, align 1
  %9035 = getelementptr inbounds i8, i8* %9027, i64 8
  %9036 = bitcast i8* %9035 to double*
  store double 0.000000e+00, double* %9036, align 1
  store %struct.Memory* %loadMem_47d986, %struct.Memory** %MEMORY
  %loadMem_47d98e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9038 = getelementptr inbounds %struct.GPR, %struct.GPR* %9037, i32 0, i32 33
  %9039 = getelementptr inbounds %struct.Reg, %struct.Reg* %9038, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %9039 to i64*
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9041 = getelementptr inbounds %struct.GPR, %struct.GPR* %9040, i32 0, i32 1
  %9042 = getelementptr inbounds %struct.Reg, %struct.Reg* %9041, i32 0, i32 0
  %RAX.i279 = bitcast %union.anon* %9042 to i64*
  %9043 = load i64, i64* %RAX.i279
  %9044 = load i64, i64* %PC.i278
  %9045 = add i64 %9044, 8
  store i64 %9045, i64* %PC.i278
  store i64 %9043, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store %struct.Memory* %loadMem_47d98e, %struct.Memory** %MEMORY
  %loadMem_47d996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9047 = getelementptr inbounds %struct.GPR, %struct.GPR* %9046, i32 0, i32 33
  %9048 = getelementptr inbounds %struct.Reg, %struct.Reg* %9047, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %9048 to i64*
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9050 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9049, i64 0, i64 2
  %YMM2.i277 = bitcast %union.VectorReg* %9050 to %"class.std::bitset"*
  %9051 = bitcast %"class.std::bitset"* %YMM2.i277 to i8*
  %9052 = load i64, i64* %PC.i276
  %9053 = add i64 %9052, 9
  store i64 %9053, i64* %PC.i276
  %9054 = load double, double* bitcast (%G_0x6cea40_type* @G_0x6cea40 to double*)
  %9055 = bitcast i8* %9051 to double*
  store double %9054, double* %9055, align 1
  %9056 = getelementptr inbounds i8, i8* %9051, i64 8
  %9057 = bitcast i8* %9056 to double*
  store double 0.000000e+00, double* %9057, align 1
  store %struct.Memory* %loadMem_47d996, %struct.Memory** %MEMORY
  %loadMem_47d99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 33
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %9060 to i64*
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9062 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9061, i64 0, i64 3
  %YMM3.i275 = bitcast %union.VectorReg* %9062 to %"class.std::bitset"*
  %9063 = bitcast %"class.std::bitset"* %YMM3.i275 to i8*
  %9064 = load i64, i64* %PC.i274
  %9065 = add i64 %9064, 10
  store i64 %9065, i64* %PC.i274
  %9066 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  %9067 = sitofp i64 %9066 to double
  %9068 = bitcast i8* %9063 to double*
  store double %9067, double* %9068, align 1
  store %struct.Memory* %loadMem_47d99f, %struct.Memory** %MEMORY
  %loadMem_47d9a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9070 = getelementptr inbounds %struct.GPR, %struct.GPR* %9069, i32 0, i32 33
  %9071 = getelementptr inbounds %struct.Reg, %struct.Reg* %9070, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %9071 to i64*
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9073 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9072, i64 0, i64 2
  %YMM2.i272 = bitcast %union.VectorReg* %9073 to %"class.std::bitset"*
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9075 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9074, i64 0, i64 3
  %XMM3.i273 = bitcast %union.VectorReg* %9075 to %union.vec128_t*
  %9076 = bitcast %"class.std::bitset"* %YMM2.i272 to i8*
  %9077 = bitcast %"class.std::bitset"* %YMM2.i272 to i8*
  %9078 = bitcast %union.vec128_t* %XMM3.i273 to i8*
  %9079 = load i64, i64* %PC.i271
  %9080 = add i64 %9079, 4
  store i64 %9080, i64* %PC.i271
  %9081 = bitcast i8* %9077 to double*
  %9082 = load double, double* %9081, align 1
  %9083 = getelementptr inbounds i8, i8* %9077, i64 8
  %9084 = bitcast i8* %9083 to i64*
  %9085 = load i64, i64* %9084, align 1
  %9086 = bitcast i8* %9078 to double*
  %9087 = load double, double* %9086, align 1
  %9088 = fmul double %9082, %9087
  %9089 = bitcast i8* %9076 to double*
  store double %9088, double* %9089, align 1
  %9090 = getelementptr inbounds i8, i8* %9076, i64 8
  %9091 = bitcast i8* %9090 to i64*
  store i64 %9085, i64* %9091, align 1
  store %struct.Memory* %loadMem_47d9a9, %struct.Memory** %MEMORY
  %loadMem_47d9ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 33
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %9094 to i64*
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9096 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9095, i64 0, i64 1
  %YMM1.i270 = bitcast %union.VectorReg* %9096 to %"class.std::bitset"*
  %9097 = bitcast %"class.std::bitset"* %YMM1.i270 to i8*
  %9098 = bitcast %"class.std::bitset"* %YMM1.i270 to i8*
  %9099 = load i64, i64* %PC.i269
  %9100 = add i64 %9099, 9
  store i64 %9100, i64* %PC.i269
  %9101 = bitcast i8* %9098 to double*
  %9102 = load double, double* %9101, align 1
  %9103 = getelementptr inbounds i8, i8* %9098, i64 8
  %9104 = bitcast i8* %9103 to i64*
  %9105 = load i64, i64* %9104, align 1
  %9106 = load double, double* bitcast (%G_0x6cea40_type* @G_0x6cea40 to double*)
  %9107 = fsub double %9102, %9106
  %9108 = bitcast i8* %9097 to double*
  store double %9107, double* %9108, align 1
  %9109 = getelementptr inbounds i8, i8* %9097, i64 8
  %9110 = bitcast i8* %9109 to i64*
  store i64 %9105, i64* %9110, align 1
  store %struct.Memory* %loadMem_47d9ad, %struct.Memory** %MEMORY
  %loadMem_47d9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9112 = getelementptr inbounds %struct.GPR, %struct.GPR* %9111, i32 0, i32 33
  %9113 = getelementptr inbounds %struct.Reg, %struct.Reg* %9112, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %9113 to i64*
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9115 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9114, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %9115 to %"class.std::bitset"*
  %9116 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %9117 = load i64, i64* %PC.i268
  %9118 = add i64 %9117, 10
  store i64 %9118, i64* %PC.i268
  %9119 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  %9120 = sitofp i64 %9119 to double
  %9121 = bitcast i8* %9116 to double*
  store double %9120, double* %9121, align 1
  store %struct.Memory* %loadMem_47d9b6, %struct.Memory** %MEMORY
  %loadMem_47d9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 33
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %9124 to i64*
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9126 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9125, i64 0, i64 1
  %YMM1.i267 = bitcast %union.VectorReg* %9126 to %"class.std::bitset"*
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9128 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9127, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %9128 to %union.vec128_t*
  %9129 = bitcast %"class.std::bitset"* %YMM1.i267 to i8*
  %9130 = bitcast %"class.std::bitset"* %YMM1.i267 to i8*
  %9131 = bitcast %union.vec128_t* %XMM3.i to i8*
  %9132 = load i64, i64* %PC.i266
  %9133 = add i64 %9132, 4
  store i64 %9133, i64* %PC.i266
  %9134 = bitcast i8* %9130 to double*
  %9135 = load double, double* %9134, align 1
  %9136 = getelementptr inbounds i8, i8* %9130, i64 8
  %9137 = bitcast i8* %9136 to i64*
  %9138 = load i64, i64* %9137, align 1
  %9139 = bitcast i8* %9131 to double*
  %9140 = load double, double* %9139, align 1
  %9141 = fmul double %9135, %9140
  %9142 = bitcast i8* %9129 to double*
  store double %9141, double* %9142, align 1
  %9143 = getelementptr inbounds i8, i8* %9129, i64 8
  %9144 = bitcast i8* %9143 to i64*
  store i64 %9138, i64* %9144, align 1
  store %struct.Memory* %loadMem_47d9c0, %struct.Memory** %MEMORY
  %loadMem_47d9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9146 = getelementptr inbounds %struct.GPR, %struct.GPR* %9145, i32 0, i32 33
  %9147 = getelementptr inbounds %struct.Reg, %struct.Reg* %9146, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %9147 to i64*
  %9148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9149 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9148, i64 0, i64 2
  %YMM2.i264 = bitcast %union.VectorReg* %9149 to %"class.std::bitset"*
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9151 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9150, i64 0, i64 1
  %XMM1.i265 = bitcast %union.VectorReg* %9151 to %union.vec128_t*
  %9152 = bitcast %"class.std::bitset"* %YMM2.i264 to i8*
  %9153 = bitcast %"class.std::bitset"* %YMM2.i264 to i8*
  %9154 = bitcast %union.vec128_t* %XMM1.i265 to i8*
  %9155 = load i64, i64* %PC.i263
  %9156 = add i64 %9155, 4
  store i64 %9156, i64* %PC.i263
  %9157 = bitcast i8* %9153 to double*
  %9158 = load double, double* %9157, align 1
  %9159 = getelementptr inbounds i8, i8* %9153, i64 8
  %9160 = bitcast i8* %9159 to i64*
  %9161 = load i64, i64* %9160, align 1
  %9162 = bitcast i8* %9154 to double*
  %9163 = load double, double* %9162, align 1
  %9164 = fadd double %9158, %9163
  %9165 = bitcast i8* %9152 to double*
  store double %9164, double* %9165, align 1
  %9166 = getelementptr inbounds i8, i8* %9152, i64 8
  %9167 = bitcast i8* %9166 to i64*
  store i64 %9161, i64* %9167, align 1
  store %struct.Memory* %loadMem_47d9c4, %struct.Memory** %MEMORY
  %loadMem_47d9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9169 = getelementptr inbounds %struct.GPR, %struct.GPR* %9168, i32 0, i32 33
  %9170 = getelementptr inbounds %struct.Reg, %struct.Reg* %9169, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %9170 to i64*
  %9171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9172 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9171, i64 0, i64 2
  %YMM2.i261 = bitcast %union.VectorReg* %9172 to %"class.std::bitset"*
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9174 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9173, i64 0, i64 0
  %XMM0.i262 = bitcast %union.VectorReg* %9174 to %union.vec128_t*
  %9175 = bitcast %"class.std::bitset"* %YMM2.i261 to i8*
  %9176 = bitcast %"class.std::bitset"* %YMM2.i261 to i8*
  %9177 = bitcast %union.vec128_t* %XMM0.i262 to i8*
  %9178 = load i64, i64* %PC.i260
  %9179 = add i64 %9178, 4
  store i64 %9179, i64* %PC.i260
  %9180 = bitcast i8* %9176 to double*
  %9181 = load double, double* %9180, align 1
  %9182 = getelementptr inbounds i8, i8* %9176, i64 8
  %9183 = bitcast i8* %9182 to i64*
  %9184 = load i64, i64* %9183, align 1
  %9185 = bitcast i8* %9177 to double*
  %9186 = load double, double* %9185, align 1
  %9187 = fadd double %9181, %9186
  %9188 = bitcast i8* %9175 to double*
  store double %9187, double* %9188, align 1
  %9189 = getelementptr inbounds i8, i8* %9175, i64 8
  %9190 = bitcast i8* %9189 to i64*
  store i64 %9184, i64* %9190, align 1
  store %struct.Memory* %loadMem_47d9c8, %struct.Memory** %MEMORY
  %loadMem_47d9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9192 = getelementptr inbounds %struct.GPR, %struct.GPR* %9191, i32 0, i32 33
  %9193 = getelementptr inbounds %struct.Reg, %struct.Reg* %9192, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %9193 to i64*
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9195 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9194, i64 0, i64 0
  %YMM0.i258 = bitcast %union.VectorReg* %9195 to %"class.std::bitset"*
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9197 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9196, i64 0, i64 2
  %XMM2.i259 = bitcast %union.VectorReg* %9197 to %union.vec128_t*
  %9198 = bitcast %"class.std::bitset"* %YMM0.i258 to i8*
  %9199 = bitcast %union.vec128_t* %XMM2.i259 to i8*
  %9200 = load i64, i64* %PC.i257
  %9201 = add i64 %9200, 3
  store i64 %9201, i64* %PC.i257
  %9202 = bitcast i8* %9199 to <2 x i32>*
  %9203 = load <2 x i32>, <2 x i32>* %9202, align 1
  %9204 = getelementptr inbounds i8, i8* %9199, i64 8
  %9205 = bitcast i8* %9204 to <2 x i32>*
  %9206 = load <2 x i32>, <2 x i32>* %9205, align 1
  %9207 = extractelement <2 x i32> %9203, i32 0
  %9208 = bitcast i8* %9198 to i32*
  store i32 %9207, i32* %9208, align 1
  %9209 = extractelement <2 x i32> %9203, i32 1
  %9210 = getelementptr inbounds i8, i8* %9198, i64 4
  %9211 = bitcast i8* %9210 to i32*
  store i32 %9209, i32* %9211, align 1
  %9212 = extractelement <2 x i32> %9206, i32 0
  %9213 = getelementptr inbounds i8, i8* %9198, i64 8
  %9214 = bitcast i8* %9213 to i32*
  store i32 %9212, i32* %9214, align 1
  %9215 = extractelement <2 x i32> %9206, i32 1
  %9216 = getelementptr inbounds i8, i8* %9198, i64 12
  %9217 = bitcast i8* %9216 to i32*
  store i32 %9215, i32* %9217, align 1
  store %struct.Memory* %loadMem_47d9cc, %struct.Memory** %MEMORY
  %loadMem1_47d9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9219 = getelementptr inbounds %struct.GPR, %struct.GPR* %9218, i32 0, i32 33
  %9220 = getelementptr inbounds %struct.Reg, %struct.Reg* %9219, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %9220 to i64*
  %9221 = load i64, i64* %PC.i256
  %9222 = add i64 %9221, -509983
  %9223 = load i64, i64* %PC.i256
  %9224 = add i64 %9223, 5
  %9225 = load i64, i64* %PC.i256
  %9226 = add i64 %9225, 5
  store i64 %9226, i64* %PC.i256
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9228 = load i64, i64* %9227, align 8
  %9229 = add i64 %9228, -8
  %9230 = inttoptr i64 %9229 to i64*
  store i64 %9224, i64* %9230
  store i64 %9229, i64* %9227, align 8
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9222, i64* %9231, align 8
  store %struct.Memory* %loadMem1_47d9cf, %struct.Memory** %MEMORY
  %loadMem2_47d9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_47d9cf = load i64, i64* %3
  %9232 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %loadMem2_47d9cf)
  store %struct.Memory* %9232, %struct.Memory** %MEMORY
  %loadMem_47d9d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9234 = getelementptr inbounds %struct.GPR, %struct.GPR* %9233, i32 0, i32 33
  %9235 = getelementptr inbounds %struct.Reg, %struct.Reg* %9234, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %9235 to i64*
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9237 = getelementptr inbounds %struct.GPR, %struct.GPR* %9236, i32 0, i32 1
  %9238 = getelementptr inbounds %struct.Reg, %struct.Reg* %9237, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %9238 to i64*
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9240 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9239, i64 0, i64 0
  %XMM0.i253 = bitcast %union.VectorReg* %9240 to %union.vec128_t*
  %9241 = bitcast %union.vec128_t* %XMM0.i253 to i8*
  %9242 = load i64, i64* %PC.i251
  %9243 = add i64 %9242, 5
  store i64 %9243, i64* %PC.i251
  %9244 = bitcast i8* %9241 to double*
  %9245 = load double, double* %9244, align 1
  %9246 = call double @llvm.trunc.f64(double %9245)
  %9247 = call double @llvm.fabs.f64(double %9246)
  %9248 = fcmp ogt double %9247, 0x43E0000000000000
  %9249 = fptosi double %9246 to i64
  %9250 = select i1 %9248, i64 -9223372036854775808, i64 %9249
  store i64 %9250, i64* %RAX.i252, align 8
  store %struct.Memory* %loadMem_47d9d4, %struct.Memory** %MEMORY
  %loadMem_47d9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9252 = getelementptr inbounds %struct.GPR, %struct.GPR* %9251, i32 0, i32 33
  %9253 = getelementptr inbounds %struct.Reg, %struct.Reg* %9252, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %9253 to i64*
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9255 = getelementptr inbounds %struct.GPR, %struct.GPR* %9254, i32 0, i32 1
  %9256 = getelementptr inbounds %struct.Reg, %struct.Reg* %9255, i32 0, i32 0
  %RAX.i250 = bitcast %union.anon* %9256 to i64*
  %9257 = load i64, i64* %RAX.i250
  %9258 = load i64, i64* %PC.i249
  %9259 = add i64 %9258, 8
  store i64 %9259, i64* %PC.i249
  store i64 %9257, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47d9d9, %struct.Memory** %MEMORY
  br label %block_.L_47d9e1

block_.L_47d9e1:                                  ; preds = %block_.L_47d97a, %block_.L_47d875
  %loadMem_47d9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9261 = getelementptr inbounds %struct.GPR, %struct.GPR* %9260, i32 0, i32 33
  %9262 = getelementptr inbounds %struct.Reg, %struct.Reg* %9261, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %9262 to i64*
  %9263 = load i64, i64* %PC.i248
  %9264 = add i64 %9263, 5
  %9265 = load i64, i64* %PC.i248
  %9266 = add i64 %9265, 5
  store i64 %9266, i64* %PC.i248
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9264, i64* %9267, align 8
  store %struct.Memory* %loadMem_47d9e1, %struct.Memory** %MEMORY
  br label %block_.L_47d9e6

block_.L_47d9e6:                                  ; preds = %block_.L_47d9e1, %block_.L_47d807
  %loadMem_47d9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9269 = getelementptr inbounds %struct.GPR, %struct.GPR* %9268, i32 0, i32 33
  %9270 = getelementptr inbounds %struct.Reg, %struct.Reg* %9269, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %9270 to i64*
  %9271 = load i64, i64* %PC.i247
  %9272 = add i64 %9271, 5
  %9273 = load i64, i64* %PC.i247
  %9274 = add i64 %9273, 5
  store i64 %9274, i64* %PC.i247
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9272, i64* %9275, align 8
  store %struct.Memory* %loadMem_47d9e6, %struct.Memory** %MEMORY
  br label %block_.L_47d9eb

block_.L_47d9eb:                                  ; preds = %block_.L_47d9e6, %block_.L_47d6e4
  %loadMem_47d9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 33
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %9278 to i64*
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9280 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9279, i64 0, i64 0
  %YMM0.i246 = bitcast %union.VectorReg* %9280 to %"class.std::bitset"*
  %9281 = bitcast %"class.std::bitset"* %YMM0.i246 to i8*
  %9282 = load i64, i64* %PC.i245
  %9283 = add i64 %9282, ptrtoint (%G_0x33e6d__rip__type* @G_0x33e6d__rip_ to i64)
  %9284 = load i64, i64* %PC.i245
  %9285 = add i64 %9284, 8
  store i64 %9285, i64* %PC.i245
  %9286 = inttoptr i64 %9283 to double*
  %9287 = load double, double* %9286
  %9288 = bitcast i8* %9281 to double*
  store double %9287, double* %9288, align 1
  %9289 = getelementptr inbounds i8, i8* %9281, i64 8
  %9290 = bitcast i8* %9289 to double*
  store double 0.000000e+00, double* %9290, align 1
  store %struct.Memory* %loadMem_47d9eb, %struct.Memory** %MEMORY
  %loadMem_47d9f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9292 = getelementptr inbounds %struct.GPR, %struct.GPR* %9291, i32 0, i32 33
  %9293 = getelementptr inbounds %struct.Reg, %struct.Reg* %9292, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %9293 to i64*
  %9294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9294, i64 0, i64 1
  %YMM1.i243 = bitcast %union.VectorReg* %9295 to %"class.std::bitset"*
  %9296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9296, i64 0, i64 1
  %XMM1.i244 = bitcast %union.VectorReg* %9297 to %union.vec128_t*
  %9298 = bitcast %"class.std::bitset"* %YMM1.i243 to i8*
  %9299 = bitcast %"class.std::bitset"* %YMM1.i243 to i8*
  %9300 = bitcast %union.vec128_t* %XMM1.i244 to i8*
  %9301 = load i64, i64* %PC.i242
  %9302 = add i64 %9301, 3
  store i64 %9302, i64* %PC.i242
  %9303 = bitcast i8* %9299 to i64*
  %9304 = load i64, i64* %9303, align 1
  %9305 = getelementptr inbounds i8, i8* %9299, i64 8
  %9306 = bitcast i8* %9305 to i64*
  %9307 = load i64, i64* %9306, align 1
  %9308 = bitcast i8* %9300 to i64*
  %9309 = load i64, i64* %9308, align 1
  %9310 = getelementptr inbounds i8, i8* %9300, i64 8
  %9311 = bitcast i8* %9310 to i64*
  %9312 = load i64, i64* %9311, align 1
  %9313 = xor i64 %9309, %9304
  %9314 = xor i64 %9312, %9307
  %9315 = trunc i64 %9313 to i32
  %9316 = lshr i64 %9313, 32
  %9317 = trunc i64 %9316 to i32
  %9318 = bitcast i8* %9298 to i32*
  store i32 %9315, i32* %9318, align 1
  %9319 = getelementptr inbounds i8, i8* %9298, i64 4
  %9320 = bitcast i8* %9319 to i32*
  store i32 %9317, i32* %9320, align 1
  %9321 = trunc i64 %9314 to i32
  %9322 = getelementptr inbounds i8, i8* %9298, i64 8
  %9323 = bitcast i8* %9322 to i32*
  store i32 %9321, i32* %9323, align 1
  %9324 = lshr i64 %9314, 32
  %9325 = trunc i64 %9324 to i32
  %9326 = getelementptr inbounds i8, i8* %9298, i64 12
  %9327 = bitcast i8* %9326 to i32*
  store i32 %9325, i32* %9327, align 1
  store %struct.Memory* %loadMem_47d9f3, %struct.Memory** %MEMORY
  %loadMem_47d9f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9329 = getelementptr inbounds %struct.GPR, %struct.GPR* %9328, i32 0, i32 33
  %9330 = getelementptr inbounds %struct.Reg, %struct.Reg* %9329, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %9330 to i64*
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 1
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %RAX.i241 = bitcast %union.anon* %9333 to i64*
  %9334 = load i64, i64* %PC.i240
  %9335 = add i64 %9334, 8
  store i64 %9335, i64* %PC.i240
  %9336 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %9336, i64* %RAX.i241, align 8
  store %struct.Memory* %loadMem_47d9f6, %struct.Memory** %MEMORY
  %loadMem_47d9fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 33
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %9339 to i64*
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 1
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %RAX.i239 = bitcast %union.anon* %9342 to i64*
  %9343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9344 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9343, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %9344 to %"class.std::bitset"*
  %9345 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %9346 = load i64, i64* %RAX.i239
  %9347 = add i64 %9346, 1236
  %9348 = load i64, i64* %PC.i238
  %9349 = add i64 %9348, 8
  store i64 %9349, i64* %PC.i238
  %9350 = inttoptr i64 %9347 to i32*
  %9351 = load i32, i32* %9350
  %9352 = sitofp i32 %9351 to double
  %9353 = bitcast i8* %9345 to double*
  store double %9352, double* %9353, align 1
  store %struct.Memory* %loadMem_47d9fe, %struct.Memory** %MEMORY
  %loadMem_47da06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9355 = getelementptr inbounds %struct.GPR, %struct.GPR* %9354, i32 0, i32 33
  %9356 = getelementptr inbounds %struct.Reg, %struct.Reg* %9355, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %9356 to i64*
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9358 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9357, i64 0, i64 1
  %YMM1.i237 = bitcast %union.VectorReg* %9358 to %"class.std::bitset"*
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9360 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9359, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %9360 to %union.vec128_t*
  %9361 = bitcast %"class.std::bitset"* %YMM1.i237 to i8*
  %9362 = bitcast %"class.std::bitset"* %YMM1.i237 to i8*
  %9363 = bitcast %union.vec128_t* %XMM2.i to i8*
  %9364 = load i64, i64* %PC.i236
  %9365 = add i64 %9364, 4
  store i64 %9365, i64* %PC.i236
  %9366 = bitcast i8* %9362 to double*
  %9367 = load double, double* %9366, align 1
  %9368 = getelementptr inbounds i8, i8* %9362, i64 8
  %9369 = bitcast i8* %9368 to i64*
  %9370 = load i64, i64* %9369, align 1
  %9371 = bitcast i8* %9363 to double*
  %9372 = load double, double* %9371, align 1
  %9373 = fmul double %9367, %9372
  %9374 = bitcast i8* %9361 to double*
  store double %9373, double* %9374, align 1
  %9375 = getelementptr inbounds i8, i8* %9361, i64 8
  %9376 = bitcast i8* %9375 to i64*
  store i64 %9370, i64* %9376, align 1
  store %struct.Memory* %loadMem_47da06, %struct.Memory** %MEMORY
  %loadMem_47da0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9378 = getelementptr inbounds %struct.GPR, %struct.GPR* %9377, i32 0, i32 33
  %9379 = getelementptr inbounds %struct.Reg, %struct.Reg* %9378, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %9379 to i64*
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9381 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9380, i64 0, i64 0
  %YMM0.i234 = bitcast %union.VectorReg* %9381 to %"class.std::bitset"*
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9383 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9382, i64 0, i64 1
  %XMM1.i235 = bitcast %union.VectorReg* %9383 to %union.vec128_t*
  %9384 = bitcast %"class.std::bitset"* %YMM0.i234 to i8*
  %9385 = bitcast %"class.std::bitset"* %YMM0.i234 to i8*
  %9386 = bitcast %union.vec128_t* %XMM1.i235 to i8*
  %9387 = load i64, i64* %PC.i233
  %9388 = add i64 %9387, 4
  store i64 %9388, i64* %PC.i233
  %9389 = bitcast i8* %9385 to double*
  %9390 = load double, double* %9389, align 1
  %9391 = getelementptr inbounds i8, i8* %9385, i64 8
  %9392 = bitcast i8* %9391 to i64*
  %9393 = load i64, i64* %9392, align 1
  %9394 = bitcast i8* %9386 to double*
  %9395 = load double, double* %9394, align 1
  %9396 = fsub double %9390, %9395
  %9397 = bitcast i8* %9384 to double*
  store double %9396, double* %9397, align 1
  %9398 = getelementptr inbounds i8, i8* %9384, i64 8
  %9399 = bitcast i8* %9398 to i64*
  store i64 %9393, i64* %9399, align 1
  store %struct.Memory* %loadMem_47da0a, %struct.Memory** %MEMORY
  %loadMem_47da0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 33
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %9402 to i64*
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9403, i64 0, i64 1
  %YMM1.i232 = bitcast %union.VectorReg* %9404 to %"class.std::bitset"*
  %9405 = bitcast %"class.std::bitset"* %YMM1.i232 to i8*
  %9406 = load i64, i64* %PC.i231
  %9407 = add i64 %9406, 10
  store i64 %9407, i64* %PC.i231
  %9408 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  %9409 = sitofp i64 %9408 to double
  %9410 = bitcast i8* %9405 to double*
  store double %9409, double* %9410, align 1
  store %struct.Memory* %loadMem_47da0e, %struct.Memory** %MEMORY
  %loadMem_47da18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9412 = getelementptr inbounds %struct.GPR, %struct.GPR* %9411, i32 0, i32 33
  %9413 = getelementptr inbounds %struct.Reg, %struct.Reg* %9412, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %9413 to i64*
  %9414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9415 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9414, i64 0, i64 0
  %YMM0.i229 = bitcast %union.VectorReg* %9415 to %"class.std::bitset"*
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9417 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9416, i64 0, i64 1
  %XMM1.i230 = bitcast %union.VectorReg* %9417 to %union.vec128_t*
  %9418 = bitcast %"class.std::bitset"* %YMM0.i229 to i8*
  %9419 = bitcast %"class.std::bitset"* %YMM0.i229 to i8*
  %9420 = bitcast %union.vec128_t* %XMM1.i230 to i8*
  %9421 = load i64, i64* %PC.i228
  %9422 = add i64 %9421, 4
  store i64 %9422, i64* %PC.i228
  %9423 = bitcast i8* %9419 to double*
  %9424 = load double, double* %9423, align 1
  %9425 = getelementptr inbounds i8, i8* %9419, i64 8
  %9426 = bitcast i8* %9425 to i64*
  %9427 = load i64, i64* %9426, align 1
  %9428 = bitcast i8* %9420 to double*
  %9429 = load double, double* %9428, align 1
  %9430 = fmul double %9424, %9429
  %9431 = bitcast i8* %9418 to double*
  store double %9430, double* %9431, align 1
  %9432 = getelementptr inbounds i8, i8* %9418, i64 8
  %9433 = bitcast i8* %9432 to i64*
  store i64 %9427, i64* %9433, align 1
  store %struct.Memory* %loadMem_47da18, %struct.Memory** %MEMORY
  %loadMem_47da1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9435 = getelementptr inbounds %struct.GPR, %struct.GPR* %9434, i32 0, i32 33
  %9436 = getelementptr inbounds %struct.Reg, %struct.Reg* %9435, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %9436 to i64*
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9438 = getelementptr inbounds %struct.GPR, %struct.GPR* %9437, i32 0, i32 1
  %9439 = getelementptr inbounds %struct.Reg, %struct.Reg* %9438, i32 0, i32 0
  %RAX.i226 = bitcast %union.anon* %9439 to i64*
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9441 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9440, i64 0, i64 0
  %XMM0.i227 = bitcast %union.VectorReg* %9441 to %union.vec128_t*
  %9442 = bitcast %union.vec128_t* %XMM0.i227 to i8*
  %9443 = load i64, i64* %PC.i225
  %9444 = add i64 %9443, 5
  store i64 %9444, i64* %PC.i225
  %9445 = bitcast i8* %9442 to double*
  %9446 = load double, double* %9445, align 1
  %9447 = call double @llvm.trunc.f64(double %9446)
  %9448 = call double @llvm.fabs.f64(double %9447)
  %9449 = fcmp ogt double %9448, 0x43E0000000000000
  %9450 = fptosi double %9447 to i64
  %9451 = select i1 %9449, i64 -9223372036854775808, i64 %9450
  store i64 %9451, i64* %RAX.i226, align 8
  store %struct.Memory* %loadMem_47da1c, %struct.Memory** %MEMORY
  %loadMem_47da21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9453 = getelementptr inbounds %struct.GPR, %struct.GPR* %9452, i32 0, i32 33
  %9454 = getelementptr inbounds %struct.Reg, %struct.Reg* %9453, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %9454 to i64*
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9456 = getelementptr inbounds %struct.GPR, %struct.GPR* %9455, i32 0, i32 1
  %9457 = getelementptr inbounds %struct.Reg, %struct.Reg* %9456, i32 0, i32 0
  %RAX.i224 = bitcast %union.anon* %9457 to i64*
  %9458 = load i64, i64* %RAX.i224
  %9459 = load i64, i64* %PC.i223
  %9460 = add i64 %9459, 8
  store i64 %9460, i64* %PC.i223
  store i64 %9458, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47da21, %struct.Memory** %MEMORY
  %loadMem_47da29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9462 = getelementptr inbounds %struct.GPR, %struct.GPR* %9461, i32 0, i32 33
  %9463 = getelementptr inbounds %struct.Reg, %struct.Reg* %9462, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %9463 to i64*
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 1
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %RAX.i222 = bitcast %union.anon* %9466 to i64*
  %9467 = load i64, i64* %PC.i221
  %9468 = add i64 %9467, 8
  store i64 %9468, i64* %PC.i221
  %9469 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store i64 %9469, i64* %RAX.i222, align 8
  store %struct.Memory* %loadMem_47da29, %struct.Memory** %MEMORY
  %loadMem_47da31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9471 = getelementptr inbounds %struct.GPR, %struct.GPR* %9470, i32 0, i32 33
  %9472 = getelementptr inbounds %struct.Reg, %struct.Reg* %9471, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %9472 to i64*
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9474 = getelementptr inbounds %struct.GPR, %struct.GPR* %9473, i32 0, i32 1
  %9475 = getelementptr inbounds %struct.Reg, %struct.Reg* %9474, i32 0, i32 0
  %RAX.i220 = bitcast %union.anon* %9475 to i64*
  %9476 = load i64, i64* %RAX.i220
  %9477 = load i64, i64* %PC.i219
  %9478 = add i64 %9477, 8
  store i64 %9478, i64* %PC.i219
  %9479 = load i64, i64* bitcast (%G_0x710a48_type* @G_0x710a48 to i64*)
  %9480 = sub i64 %9476, %9479
  %9481 = icmp ugt i64 %9479, %9476
  %9482 = zext i1 %9481 to i8
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9482, i8* %9483, align 1
  %9484 = trunc i64 %9480 to i32
  %9485 = and i32 %9484, 255
  %9486 = call i32 @llvm.ctpop.i32(i32 %9485)
  %9487 = trunc i32 %9486 to i8
  %9488 = and i8 %9487, 1
  %9489 = xor i8 %9488, 1
  %9490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9489, i8* %9490, align 1
  %9491 = xor i64 %9479, %9476
  %9492 = xor i64 %9491, %9480
  %9493 = lshr i64 %9492, 4
  %9494 = trunc i64 %9493 to i8
  %9495 = and i8 %9494, 1
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9495, i8* %9496, align 1
  %9497 = icmp eq i64 %9480, 0
  %9498 = zext i1 %9497 to i8
  %9499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9498, i8* %9499, align 1
  %9500 = lshr i64 %9480, 63
  %9501 = trunc i64 %9500 to i8
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9501, i8* %9502, align 1
  %9503 = lshr i64 %9476, 63
  %9504 = lshr i64 %9479, 63
  %9505 = xor i64 %9504, %9503
  %9506 = xor i64 %9500, %9503
  %9507 = add i64 %9506, %9505
  %9508 = icmp eq i64 %9507, 2
  %9509 = zext i1 %9508 to i8
  %9510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9509, i8* %9510, align 1
  store %struct.Memory* %loadMem_47da31, %struct.Memory** %MEMORY
  %loadMem_47da39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9512 = getelementptr inbounds %struct.GPR, %struct.GPR* %9511, i32 0, i32 33
  %9513 = getelementptr inbounds %struct.Reg, %struct.Reg* %9512, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %9513 to i64*
  %9514 = load i64, i64* %PC.i218
  %9515 = add i64 %9514, 23
  %9516 = load i64, i64* %PC.i218
  %9517 = add i64 %9516, 6
  %9518 = load i64, i64* %PC.i218
  %9519 = add i64 %9518, 6
  store i64 %9519, i64* %PC.i218
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9521 = load i8, i8* %9520, align 1
  %9522 = icmp ne i8 %9521, 0
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9524 = load i8, i8* %9523, align 1
  %9525 = icmp ne i8 %9524, 0
  %9526 = xor i1 %9522, %9525
  %9527 = xor i1 %9526, true
  %9528 = zext i1 %9527 to i8
  store i8 %9528, i8* %BRANCH_TAKEN, align 1
  %9529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9530 = select i1 %9526, i64 %9517, i64 %9515
  store i64 %9530, i64* %9529, align 8
  store %struct.Memory* %loadMem_47da39, %struct.Memory** %MEMORY
  %loadBr_47da39 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47da39 = icmp eq i8 %loadBr_47da39, 1
  br i1 %cmpBr_47da39, label %block_.L_47da50, label %block_47da3f

block_47da3f:                                     ; preds = %block_.L_47d9eb
  %loadMem_47da3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9532 = getelementptr inbounds %struct.GPR, %struct.GPR* %9531, i32 0, i32 33
  %9533 = getelementptr inbounds %struct.Reg, %struct.Reg* %9532, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %9533 to i64*
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9535 = getelementptr inbounds %struct.GPR, %struct.GPR* %9534, i32 0, i32 1
  %9536 = getelementptr inbounds %struct.Reg, %struct.Reg* %9535, i32 0, i32 0
  %RAX.i217 = bitcast %union.anon* %9536 to i64*
  %9537 = load i64, i64* %PC.i216
  %9538 = add i64 %9537, 8
  store i64 %9538, i64* %PC.i216
  %9539 = load i64, i64* bitcast (%G_0x710a48_type* @G_0x710a48 to i64*)
  store i64 %9539, i64* %RAX.i217, align 8
  store %struct.Memory* %loadMem_47da3f, %struct.Memory** %MEMORY
  %loadMem_47da47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9541 = getelementptr inbounds %struct.GPR, %struct.GPR* %9540, i32 0, i32 33
  %9542 = getelementptr inbounds %struct.Reg, %struct.Reg* %9541, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %9542 to i64*
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9544 = getelementptr inbounds %struct.GPR, %struct.GPR* %9543, i32 0, i32 1
  %9545 = getelementptr inbounds %struct.Reg, %struct.Reg* %9544, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %9545 to i64*
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9547 = getelementptr inbounds %struct.GPR, %struct.GPR* %9546, i32 0, i32 15
  %9548 = getelementptr inbounds %struct.Reg, %struct.Reg* %9547, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %9548 to i64*
  %9549 = load i64, i64* %RBP.i215
  %9550 = sub i64 %9549, 104
  %9551 = load i64, i64* %RAX.i214
  %9552 = load i64, i64* %PC.i213
  %9553 = add i64 %9552, 4
  store i64 %9553, i64* %PC.i213
  %9554 = inttoptr i64 %9550 to i64*
  store i64 %9551, i64* %9554
  store %struct.Memory* %loadMem_47da47, %struct.Memory** %MEMORY
  %loadMem_47da4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9556 = getelementptr inbounds %struct.GPR, %struct.GPR* %9555, i32 0, i32 33
  %9557 = getelementptr inbounds %struct.Reg, %struct.Reg* %9556, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %9557 to i64*
  %9558 = load i64, i64* %PC.i212
  %9559 = add i64 %9558, 17
  %9560 = load i64, i64* %PC.i212
  %9561 = add i64 %9560, 5
  store i64 %9561, i64* %PC.i212
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9559, i64* %9562, align 8
  store %struct.Memory* %loadMem_47da4b, %struct.Memory** %MEMORY
  br label %block_.L_47da5c

block_.L_47da50:                                  ; preds = %block_.L_47d9eb
  %loadMem_47da50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9564 = getelementptr inbounds %struct.GPR, %struct.GPR* %9563, i32 0, i32 33
  %9565 = getelementptr inbounds %struct.Reg, %struct.Reg* %9564, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %9565 to i64*
  %9566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9567 = getelementptr inbounds %struct.GPR, %struct.GPR* %9566, i32 0, i32 1
  %9568 = getelementptr inbounds %struct.Reg, %struct.Reg* %9567, i32 0, i32 0
  %RAX.i211 = bitcast %union.anon* %9568 to i64*
  %9569 = load i64, i64* %PC.i210
  %9570 = add i64 %9569, 8
  store i64 %9570, i64* %PC.i210
  %9571 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store i64 %9571, i64* %RAX.i211, align 8
  store %struct.Memory* %loadMem_47da50, %struct.Memory** %MEMORY
  %loadMem_47da58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 33
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %9574 to i64*
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9576 = getelementptr inbounds %struct.GPR, %struct.GPR* %9575, i32 0, i32 1
  %9577 = getelementptr inbounds %struct.Reg, %struct.Reg* %9576, i32 0, i32 0
  %RAX.i208 = bitcast %union.anon* %9577 to i64*
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9579 = getelementptr inbounds %struct.GPR, %struct.GPR* %9578, i32 0, i32 15
  %9580 = getelementptr inbounds %struct.Reg, %struct.Reg* %9579, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %9580 to i64*
  %9581 = load i64, i64* %RBP.i209
  %9582 = sub i64 %9581, 104
  %9583 = load i64, i64* %RAX.i208
  %9584 = load i64, i64* %PC.i207
  %9585 = add i64 %9584, 4
  store i64 %9585, i64* %PC.i207
  %9586 = inttoptr i64 %9582 to i64*
  store i64 %9583, i64* %9586
  store %struct.Memory* %loadMem_47da58, %struct.Memory** %MEMORY
  br label %block_.L_47da5c

block_.L_47da5c:                                  ; preds = %block_.L_47da50, %block_47da3f
  %loadMem_47da5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9588 = getelementptr inbounds %struct.GPR, %struct.GPR* %9587, i32 0, i32 33
  %9589 = getelementptr inbounds %struct.Reg, %struct.Reg* %9588, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %9589 to i64*
  %9590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9591 = getelementptr inbounds %struct.GPR, %struct.GPR* %9590, i32 0, i32 1
  %9592 = getelementptr inbounds %struct.Reg, %struct.Reg* %9591, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %9592 to i64*
  %9593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9594 = getelementptr inbounds %struct.GPR, %struct.GPR* %9593, i32 0, i32 15
  %9595 = getelementptr inbounds %struct.Reg, %struct.Reg* %9594, i32 0, i32 0
  %RBP.i206 = bitcast %union.anon* %9595 to i64*
  %9596 = load i64, i64* %RBP.i206
  %9597 = sub i64 %9596, 104
  %9598 = load i64, i64* %PC.i204
  %9599 = add i64 %9598, 4
  store i64 %9599, i64* %PC.i204
  %9600 = inttoptr i64 %9597 to i64*
  %9601 = load i64, i64* %9600
  store i64 %9601, i64* %RAX.i205, align 8
  store %struct.Memory* %loadMem_47da5c, %struct.Memory** %MEMORY
  %loadMem_47da60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9603 = getelementptr inbounds %struct.GPR, %struct.GPR* %9602, i32 0, i32 33
  %9604 = getelementptr inbounds %struct.Reg, %struct.Reg* %9603, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %9604 to i64*
  %9605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9606 = getelementptr inbounds %struct.GPR, %struct.GPR* %9605, i32 0, i32 1
  %9607 = getelementptr inbounds %struct.Reg, %struct.Reg* %9606, i32 0, i32 0
  %RAX.i203 = bitcast %union.anon* %9607 to i64*
  %9608 = load i64, i64* %RAX.i203
  %9609 = load i64, i64* %PC.i202
  %9610 = add i64 %9609, 8
  store i64 %9610, i64* %PC.i202
  store i64 %9608, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47da60, %struct.Memory** %MEMORY
  %loadMem_47da68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9612 = getelementptr inbounds %struct.GPR, %struct.GPR* %9611, i32 0, i32 33
  %9613 = getelementptr inbounds %struct.Reg, %struct.Reg* %9612, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %9613 to i64*
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9615 = getelementptr inbounds %struct.GPR, %struct.GPR* %9614, i32 0, i32 1
  %9616 = getelementptr inbounds %struct.Reg, %struct.Reg* %9615, i32 0, i32 0
  %RAX.i201 = bitcast %union.anon* %9616 to i64*
  %9617 = load i64, i64* %PC.i200
  %9618 = add i64 %9617, 8
  store i64 %9618, i64* %PC.i200
  %9619 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store i64 %9619, i64* %RAX.i201, align 8
  store %struct.Memory* %loadMem_47da68, %struct.Memory** %MEMORY
  %loadMem_47da70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9621 = getelementptr inbounds %struct.GPR, %struct.GPR* %9620, i32 0, i32 33
  %9622 = getelementptr inbounds %struct.Reg, %struct.Reg* %9621, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %9622 to i64*
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9624 = getelementptr inbounds %struct.GPR, %struct.GPR* %9623, i32 0, i32 1
  %9625 = getelementptr inbounds %struct.Reg, %struct.Reg* %9624, i32 0, i32 0
  %RAX.i199 = bitcast %union.anon* %9625 to i64*
  %9626 = load i64, i64* %RAX.i199
  %9627 = load i64, i64* %PC.i198
  %9628 = add i64 %9627, 8
  store i64 %9628, i64* %PC.i198
  %9629 = load i64, i64* bitcast (%G_0x6cd478_type* @G_0x6cd478 to i64*)
  %9630 = sub i64 %9626, %9629
  %9631 = icmp ugt i64 %9629, %9626
  %9632 = zext i1 %9631 to i8
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9632, i8* %9633, align 1
  %9634 = trunc i64 %9630 to i32
  %9635 = and i32 %9634, 255
  %9636 = call i32 @llvm.ctpop.i32(i32 %9635)
  %9637 = trunc i32 %9636 to i8
  %9638 = and i8 %9637, 1
  %9639 = xor i8 %9638, 1
  %9640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9639, i8* %9640, align 1
  %9641 = xor i64 %9629, %9626
  %9642 = xor i64 %9641, %9630
  %9643 = lshr i64 %9642, 4
  %9644 = trunc i64 %9643 to i8
  %9645 = and i8 %9644, 1
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9645, i8* %9646, align 1
  %9647 = icmp eq i64 %9630, 0
  %9648 = zext i1 %9647 to i8
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9648, i8* %9649, align 1
  %9650 = lshr i64 %9630, 63
  %9651 = trunc i64 %9650 to i8
  %9652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9651, i8* %9652, align 1
  %9653 = lshr i64 %9626, 63
  %9654 = lshr i64 %9629, 63
  %9655 = xor i64 %9654, %9653
  %9656 = xor i64 %9650, %9653
  %9657 = add i64 %9656, %9655
  %9658 = icmp eq i64 %9657, 2
  %9659 = zext i1 %9658 to i8
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9659, i8* %9660, align 1
  store %struct.Memory* %loadMem_47da70, %struct.Memory** %MEMORY
  %loadMem_47da78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9662 = getelementptr inbounds %struct.GPR, %struct.GPR* %9661, i32 0, i32 33
  %9663 = getelementptr inbounds %struct.Reg, %struct.Reg* %9662, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %9663 to i64*
  %9664 = load i64, i64* %PC.i197
  %9665 = add i64 %9664, 23
  %9666 = load i64, i64* %PC.i197
  %9667 = add i64 %9666, 6
  %9668 = load i64, i64* %PC.i197
  %9669 = add i64 %9668, 6
  store i64 %9669, i64* %PC.i197
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9671 = load i8, i8* %9670, align 1
  %9672 = icmp ne i8 %9671, 0
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9674 = load i8, i8* %9673, align 1
  %9675 = icmp ne i8 %9674, 0
  %9676 = xor i1 %9672, %9675
  %9677 = xor i1 %9676, true
  %9678 = zext i1 %9677 to i8
  store i8 %9678, i8* %BRANCH_TAKEN, align 1
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9680 = select i1 %9676, i64 %9667, i64 %9665
  store i64 %9680, i64* %9679, align 8
  store %struct.Memory* %loadMem_47da78, %struct.Memory** %MEMORY
  %loadBr_47da78 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47da78 = icmp eq i8 %loadBr_47da78, 1
  br i1 %cmpBr_47da78, label %block_.L_47da8f, label %block_47da7e

block_47da7e:                                     ; preds = %block_.L_47da5c
  %loadMem_47da7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9682 = getelementptr inbounds %struct.GPR, %struct.GPR* %9681, i32 0, i32 33
  %9683 = getelementptr inbounds %struct.Reg, %struct.Reg* %9682, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %9683 to i64*
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9685 = getelementptr inbounds %struct.GPR, %struct.GPR* %9684, i32 0, i32 1
  %9686 = getelementptr inbounds %struct.Reg, %struct.Reg* %9685, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %9686 to i64*
  %9687 = load i64, i64* %PC.i195
  %9688 = add i64 %9687, 8
  store i64 %9688, i64* %PC.i195
  %9689 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store i64 %9689, i64* %RAX.i196, align 8
  store %struct.Memory* %loadMem_47da7e, %struct.Memory** %MEMORY
  %loadMem_47da86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9691 = getelementptr inbounds %struct.GPR, %struct.GPR* %9690, i32 0, i32 33
  %9692 = getelementptr inbounds %struct.Reg, %struct.Reg* %9691, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %9692 to i64*
  %9693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9694 = getelementptr inbounds %struct.GPR, %struct.GPR* %9693, i32 0, i32 1
  %9695 = getelementptr inbounds %struct.Reg, %struct.Reg* %9694, i32 0, i32 0
  %RAX.i193 = bitcast %union.anon* %9695 to i64*
  %9696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9697 = getelementptr inbounds %struct.GPR, %struct.GPR* %9696, i32 0, i32 15
  %9698 = getelementptr inbounds %struct.Reg, %struct.Reg* %9697, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %9698 to i64*
  %9699 = load i64, i64* %RBP.i194
  %9700 = sub i64 %9699, 112
  %9701 = load i64, i64* %RAX.i193
  %9702 = load i64, i64* %PC.i192
  %9703 = add i64 %9702, 4
  store i64 %9703, i64* %PC.i192
  %9704 = inttoptr i64 %9700 to i64*
  store i64 %9701, i64* %9704
  store %struct.Memory* %loadMem_47da86, %struct.Memory** %MEMORY
  %loadMem_47da8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9706 = getelementptr inbounds %struct.GPR, %struct.GPR* %9705, i32 0, i32 33
  %9707 = getelementptr inbounds %struct.Reg, %struct.Reg* %9706, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %9707 to i64*
  %9708 = load i64, i64* %PC.i191
  %9709 = add i64 %9708, 17
  %9710 = load i64, i64* %PC.i191
  %9711 = add i64 %9710, 5
  store i64 %9711, i64* %PC.i191
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9709, i64* %9712, align 8
  store %struct.Memory* %loadMem_47da8a, %struct.Memory** %MEMORY
  br label %block_.L_47da9b

block_.L_47da8f:                                  ; preds = %block_.L_47da5c
  %loadMem_47da8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9714 = getelementptr inbounds %struct.GPR, %struct.GPR* %9713, i32 0, i32 33
  %9715 = getelementptr inbounds %struct.Reg, %struct.Reg* %9714, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %9715 to i64*
  %9716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9717 = getelementptr inbounds %struct.GPR, %struct.GPR* %9716, i32 0, i32 1
  %9718 = getelementptr inbounds %struct.Reg, %struct.Reg* %9717, i32 0, i32 0
  %RAX.i190 = bitcast %union.anon* %9718 to i64*
  %9719 = load i64, i64* %PC.i189
  %9720 = add i64 %9719, 8
  store i64 %9720, i64* %PC.i189
  %9721 = load i64, i64* bitcast (%G_0x6cd478_type* @G_0x6cd478 to i64*)
  store i64 %9721, i64* %RAX.i190, align 8
  store %struct.Memory* %loadMem_47da8f, %struct.Memory** %MEMORY
  %loadMem_47da97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9723 = getelementptr inbounds %struct.GPR, %struct.GPR* %9722, i32 0, i32 33
  %9724 = getelementptr inbounds %struct.Reg, %struct.Reg* %9723, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %9724 to i64*
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9726 = getelementptr inbounds %struct.GPR, %struct.GPR* %9725, i32 0, i32 1
  %9727 = getelementptr inbounds %struct.Reg, %struct.Reg* %9726, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %9727 to i64*
  %9728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9729 = getelementptr inbounds %struct.GPR, %struct.GPR* %9728, i32 0, i32 15
  %9730 = getelementptr inbounds %struct.Reg, %struct.Reg* %9729, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %9730 to i64*
  %9731 = load i64, i64* %RBP.i188
  %9732 = sub i64 %9731, 112
  %9733 = load i64, i64* %RAX.i187
  %9734 = load i64, i64* %PC.i186
  %9735 = add i64 %9734, 4
  store i64 %9735, i64* %PC.i186
  %9736 = inttoptr i64 %9732 to i64*
  store i64 %9733, i64* %9736
  store %struct.Memory* %loadMem_47da97, %struct.Memory** %MEMORY
  br label %block_.L_47da9b

block_.L_47da9b:                                  ; preds = %block_.L_47da8f, %block_47da7e
  %loadMem_47da9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9738 = getelementptr inbounds %struct.GPR, %struct.GPR* %9737, i32 0, i32 33
  %9739 = getelementptr inbounds %struct.Reg, %struct.Reg* %9738, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %9739 to i64*
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9741 = getelementptr inbounds %struct.GPR, %struct.GPR* %9740, i32 0, i32 1
  %9742 = getelementptr inbounds %struct.Reg, %struct.Reg* %9741, i32 0, i32 0
  %RAX.i184 = bitcast %union.anon* %9742 to i64*
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9744 = getelementptr inbounds %struct.GPR, %struct.GPR* %9743, i32 0, i32 15
  %9745 = getelementptr inbounds %struct.Reg, %struct.Reg* %9744, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %9745 to i64*
  %9746 = load i64, i64* %RBP.i185
  %9747 = sub i64 %9746, 112
  %9748 = load i64, i64* %PC.i183
  %9749 = add i64 %9748, 4
  store i64 %9749, i64* %PC.i183
  %9750 = inttoptr i64 %9747 to i64*
  %9751 = load i64, i64* %9750
  store i64 %9751, i64* %RAX.i184, align 8
  store %struct.Memory* %loadMem_47da9b, %struct.Memory** %MEMORY
  %loadMem_47da9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9753 = getelementptr inbounds %struct.GPR, %struct.GPR* %9752, i32 0, i32 33
  %9754 = getelementptr inbounds %struct.Reg, %struct.Reg* %9753, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %9754 to i64*
  %9755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9756 = getelementptr inbounds %struct.GPR, %struct.GPR* %9755, i32 0, i32 1
  %9757 = getelementptr inbounds %struct.Reg, %struct.Reg* %9756, i32 0, i32 0
  %RAX.i182 = bitcast %union.anon* %9757 to i64*
  %9758 = load i64, i64* %RAX.i182
  %9759 = load i64, i64* %PC.i181
  %9760 = add i64 %9759, 8
  store i64 %9760, i64* %PC.i181
  store i64 %9758, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47da9f, %struct.Memory** %MEMORY
  %loadMem_47daa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 33
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 15
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RBP.i180 = bitcast %union.anon* %9766 to i64*
  %9767 = load i64, i64* %RBP.i180
  %9768 = sub i64 %9767, 8
  %9769 = load i64, i64* %PC.i179
  %9770 = add i64 %9769, 4
  store i64 %9770, i64* %PC.i179
  %9771 = inttoptr i64 %9768 to i32*
  %9772 = load i32, i32* %9771
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9773, align 1
  %9774 = and i32 %9772, 255
  %9775 = call i32 @llvm.ctpop.i32(i32 %9774)
  %9776 = trunc i32 %9775 to i8
  %9777 = and i8 %9776, 1
  %9778 = xor i8 %9777, 1
  %9779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9778, i8* %9779, align 1
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9780, align 1
  %9781 = icmp eq i32 %9772, 0
  %9782 = zext i1 %9781 to i8
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9782, i8* %9783, align 1
  %9784 = lshr i32 %9772, 31
  %9785 = trunc i32 %9784 to i8
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9785, i8* %9786, align 1
  %9787 = lshr i32 %9772, 31
  %9788 = xor i32 %9784, %9787
  %9789 = add i32 %9788, %9787
  %9790 = icmp eq i32 %9789, 2
  %9791 = zext i1 %9790 to i8
  %9792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9791, i8* %9792, align 1
  store %struct.Memory* %loadMem_47daa7, %struct.Memory** %MEMORY
  %loadMem_47daab = load %struct.Memory*, %struct.Memory** %MEMORY
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 33
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %9795 to i64*
  %9796 = load i64, i64* %PC.i178
  %9797 = add i64 %9796, 58
  %9798 = load i64, i64* %PC.i178
  %9799 = add i64 %9798, 6
  %9800 = load i64, i64* %PC.i178
  %9801 = add i64 %9800, 6
  store i64 %9801, i64* %PC.i178
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9803 = load i8, i8* %9802, align 1
  %9804 = icmp eq i8 %9803, 0
  %9805 = zext i1 %9804 to i8
  store i8 %9805, i8* %BRANCH_TAKEN, align 1
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9807 = select i1 %9804, i64 %9797, i64 %9799
  store i64 %9807, i64* %9806, align 8
  store %struct.Memory* %loadMem_47daab, %struct.Memory** %MEMORY
  %loadBr_47daab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47daab = icmp eq i8 %loadBr_47daab, 1
  br i1 %cmpBr_47daab, label %block_.L_47dae5, label %block_47dab1

block_47dab1:                                     ; preds = %block_.L_47da9b
  %loadMem_47dab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9809 = getelementptr inbounds %struct.GPR, %struct.GPR* %9808, i32 0, i32 33
  %9810 = getelementptr inbounds %struct.Reg, %struct.Reg* %9809, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %9810 to i64*
  %9811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9812 = getelementptr inbounds %struct.GPR, %struct.GPR* %9811, i32 0, i32 15
  %9813 = getelementptr inbounds %struct.Reg, %struct.Reg* %9812, i32 0, i32 0
  %RBP.i177 = bitcast %union.anon* %9813 to i64*
  %9814 = load i64, i64* %RBP.i177
  %9815 = sub i64 %9814, 4
  %9816 = load i64, i64* %PC.i176
  %9817 = add i64 %9816, 4
  store i64 %9817, i64* %PC.i176
  %9818 = inttoptr i64 %9815 to i32*
  %9819 = load i32, i32* %9818
  %9820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9820, align 1
  %9821 = and i32 %9819, 255
  %9822 = call i32 @llvm.ctpop.i32(i32 %9821)
  %9823 = trunc i32 %9822 to i8
  %9824 = and i8 %9823, 1
  %9825 = xor i8 %9824, 1
  %9826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9825, i8* %9826, align 1
  %9827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9827, align 1
  %9828 = icmp eq i32 %9819, 0
  %9829 = zext i1 %9828 to i8
  %9830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9829, i8* %9830, align 1
  %9831 = lshr i32 %9819, 31
  %9832 = trunc i32 %9831 to i8
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9832, i8* %9833, align 1
  %9834 = lshr i32 %9819, 31
  %9835 = xor i32 %9831, %9834
  %9836 = add i32 %9835, %9834
  %9837 = icmp eq i32 %9836, 2
  %9838 = zext i1 %9837 to i8
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9838, i8* %9839, align 1
  store %struct.Memory* %loadMem_47dab1, %struct.Memory** %MEMORY
  %loadMem_47dab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9841 = getelementptr inbounds %struct.GPR, %struct.GPR* %9840, i32 0, i32 33
  %9842 = getelementptr inbounds %struct.Reg, %struct.Reg* %9841, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %9842 to i64*
  %9843 = load i64, i64* %PC.i175
  %9844 = add i64 %9843, 65
  %9845 = load i64, i64* %PC.i175
  %9846 = add i64 %9845, 6
  %9847 = load i64, i64* %PC.i175
  %9848 = add i64 %9847, 6
  store i64 %9848, i64* %PC.i175
  %9849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9850 = load i8, i8* %9849, align 1
  store i8 %9850, i8* %BRANCH_TAKEN, align 1
  %9851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9852 = icmp ne i8 %9850, 0
  %9853 = select i1 %9852, i64 %9844, i64 %9846
  store i64 %9853, i64* %9851, align 8
  store %struct.Memory* %loadMem_47dab5, %struct.Memory** %MEMORY
  %loadBr_47dab5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47dab5 = icmp eq i8 %loadBr_47dab5, 1
  br i1 %cmpBr_47dab5, label %block_.L_47daf6, label %block_47dabb

block_47dabb:                                     ; preds = %block_47dab1
  %loadMem_47dabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9855 = getelementptr inbounds %struct.GPR, %struct.GPR* %9854, i32 0, i32 33
  %9856 = getelementptr inbounds %struct.Reg, %struct.Reg* %9855, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %9856 to i64*
  %9857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9858 = getelementptr inbounds %struct.GPR, %struct.GPR* %9857, i32 0, i32 1
  %9859 = getelementptr inbounds %struct.Reg, %struct.Reg* %9858, i32 0, i32 0
  %RAX.i174 = bitcast %union.anon* %9859 to i64*
  %9860 = load i64, i64* %PC.i173
  %9861 = add i64 %9860, 8
  store i64 %9861, i64* %PC.i173
  %9862 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %9862, i64* %RAX.i174, align 8
  store %struct.Memory* %loadMem_47dabb, %struct.Memory** %MEMORY
  %loadMem_47dac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9864 = getelementptr inbounds %struct.GPR, %struct.GPR* %9863, i32 0, i32 33
  %9865 = getelementptr inbounds %struct.Reg, %struct.Reg* %9864, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %9865 to i64*
  %9866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9867 = getelementptr inbounds %struct.GPR, %struct.GPR* %9866, i32 0, i32 1
  %9868 = getelementptr inbounds %struct.Reg, %struct.Reg* %9867, i32 0, i32 0
  %RAX.i172 = bitcast %union.anon* %9868 to i64*
  %9869 = load i64, i64* %RAX.i172
  %9870 = add i64 %9869, 2880
  %9871 = load i64, i64* %PC.i171
  %9872 = add i64 %9871, 7
  store i64 %9872, i64* %PC.i171
  %9873 = inttoptr i64 %9870 to i32*
  %9874 = load i32, i32* %9873
  %9875 = sub i32 %9874, 2
  %9876 = icmp ult i32 %9874, 2
  %9877 = zext i1 %9876 to i8
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9877, i8* %9878, align 1
  %9879 = and i32 %9875, 255
  %9880 = call i32 @llvm.ctpop.i32(i32 %9879)
  %9881 = trunc i32 %9880 to i8
  %9882 = and i8 %9881, 1
  %9883 = xor i8 %9882, 1
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9883, i8* %9884, align 1
  %9885 = xor i32 %9874, 2
  %9886 = xor i32 %9885, %9875
  %9887 = lshr i32 %9886, 4
  %9888 = trunc i32 %9887 to i8
  %9889 = and i8 %9888, 1
  %9890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9889, i8* %9890, align 1
  %9891 = icmp eq i32 %9875, 0
  %9892 = zext i1 %9891 to i8
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9892, i8* %9893, align 1
  %9894 = lshr i32 %9875, 31
  %9895 = trunc i32 %9894 to i8
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9895, i8* %9896, align 1
  %9897 = lshr i32 %9874, 31
  %9898 = xor i32 %9894, %9897
  %9899 = add i32 %9898, %9897
  %9900 = icmp eq i32 %9899, 2
  %9901 = zext i1 %9900 to i8
  %9902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9901, i8* %9902, align 1
  store %struct.Memory* %loadMem_47dac3, %struct.Memory** %MEMORY
  %loadMem_47daca = load %struct.Memory*, %struct.Memory** %MEMORY
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9904 = getelementptr inbounds %struct.GPR, %struct.GPR* %9903, i32 0, i32 33
  %9905 = getelementptr inbounds %struct.Reg, %struct.Reg* %9904, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %9905 to i64*
  %9906 = load i64, i64* %PC.i170
  %9907 = add i64 %9906, 27
  %9908 = load i64, i64* %PC.i170
  %9909 = add i64 %9908, 6
  %9910 = load i64, i64* %PC.i170
  %9911 = add i64 %9910, 6
  store i64 %9911, i64* %PC.i170
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9913 = load i8, i8* %9912, align 1
  store i8 %9913, i8* %BRANCH_TAKEN, align 1
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9915 = icmp ne i8 %9913, 0
  %9916 = select i1 %9915, i64 %9907, i64 %9909
  store i64 %9916, i64* %9914, align 8
  store %struct.Memory* %loadMem_47daca, %struct.Memory** %MEMORY
  %loadBr_47daca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47daca = icmp eq i8 %loadBr_47daca, 1
  br i1 %cmpBr_47daca, label %block_.L_47dae5, label %block_47dad0

block_47dad0:                                     ; preds = %block_47dabb
  %loadMem_47dad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9918 = getelementptr inbounds %struct.GPR, %struct.GPR* %9917, i32 0, i32 33
  %9919 = getelementptr inbounds %struct.Reg, %struct.Reg* %9918, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %9919 to i64*
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9921 = getelementptr inbounds %struct.GPR, %struct.GPR* %9920, i32 0, i32 1
  %9922 = getelementptr inbounds %struct.Reg, %struct.Reg* %9921, i32 0, i32 0
  %RAX.i169 = bitcast %union.anon* %9922 to i64*
  %9923 = load i64, i64* %PC.i168
  %9924 = add i64 %9923, 8
  store i64 %9924, i64* %PC.i168
  %9925 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %9925, i64* %RAX.i169, align 8
  store %struct.Memory* %loadMem_47dad0, %struct.Memory** %MEMORY
  %loadMem_47dad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 33
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %9928 to i64*
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9930 = getelementptr inbounds %struct.GPR, %struct.GPR* %9929, i32 0, i32 1
  %9931 = getelementptr inbounds %struct.Reg, %struct.Reg* %9930, i32 0, i32 0
  %RAX.i167 = bitcast %union.anon* %9931 to i64*
  %9932 = load i64, i64* %RAX.i167
  %9933 = add i64 %9932, 2884
  %9934 = load i64, i64* %PC.i166
  %9935 = add i64 %9934, 7
  store i64 %9935, i64* %PC.i166
  %9936 = inttoptr i64 %9933 to i32*
  %9937 = load i32, i32* %9936
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9938, align 1
  %9939 = and i32 %9937, 255
  %9940 = call i32 @llvm.ctpop.i32(i32 %9939)
  %9941 = trunc i32 %9940 to i8
  %9942 = and i8 %9941, 1
  %9943 = xor i8 %9942, 1
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9943, i8* %9944, align 1
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9945, align 1
  %9946 = icmp eq i32 %9937, 0
  %9947 = zext i1 %9946 to i8
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9947, i8* %9948, align 1
  %9949 = lshr i32 %9937, 31
  %9950 = trunc i32 %9949 to i8
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9950, i8* %9951, align 1
  %9952 = lshr i32 %9937, 31
  %9953 = xor i32 %9949, %9952
  %9954 = add i32 %9953, %9952
  %9955 = icmp eq i32 %9954, 2
  %9956 = zext i1 %9955 to i8
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9956, i8* %9957, align 1
  store %struct.Memory* %loadMem_47dad8, %struct.Memory** %MEMORY
  %loadMem_47dadf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 33
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %9960 to i64*
  %9961 = load i64, i64* %PC.i165
  %9962 = add i64 %9961, 23
  %9963 = load i64, i64* %PC.i165
  %9964 = add i64 %9963, 6
  %9965 = load i64, i64* %PC.i165
  %9966 = add i64 %9965, 6
  store i64 %9966, i64* %PC.i165
  %9967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9968 = load i8, i8* %9967, align 1
  store i8 %9968, i8* %BRANCH_TAKEN, align 1
  %9969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9970 = icmp ne i8 %9968, 0
  %9971 = select i1 %9970, i64 %9962, i64 %9964
  store i64 %9971, i64* %9969, align 8
  store %struct.Memory* %loadMem_47dadf, %struct.Memory** %MEMORY
  %loadBr_47dadf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47dadf = icmp eq i8 %loadBr_47dadf, 1
  br i1 %cmpBr_47dadf, label %block_.L_47daf6, label %block_.L_47dae5

block_.L_47dae5:                                  ; preds = %block_47dad0, %block_47dabb, %block_.L_47da9b
  %loadMem_47dae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9973 = getelementptr inbounds %struct.GPR, %struct.GPR* %9972, i32 0, i32 33
  %9974 = getelementptr inbounds %struct.Reg, %struct.Reg* %9973, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %9974 to i64*
  %9975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9976 = getelementptr inbounds %struct.GPR, %struct.GPR* %9975, i32 0, i32 1
  %9977 = getelementptr inbounds %struct.Reg, %struct.Reg* %9976, i32 0, i32 0
  %RAX.i164 = bitcast %union.anon* %9977 to i64*
  %9978 = load i64, i64* %PC.i163
  %9979 = add i64 %9978, 8
  store i64 %9979, i64* %PC.i163
  %9980 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store i64 %9980, i64* %RAX.i164, align 8
  store %struct.Memory* %loadMem_47dae5, %struct.Memory** %MEMORY
  %loadMem_47daed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9982 = getelementptr inbounds %struct.GPR, %struct.GPR* %9981, i32 0, i32 33
  %9983 = getelementptr inbounds %struct.Reg, %struct.Reg* %9982, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %9983 to i64*
  %9984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9985 = getelementptr inbounds %struct.GPR, %struct.GPR* %9984, i32 0, i32 1
  %9986 = getelementptr inbounds %struct.Reg, %struct.Reg* %9985, i32 0, i32 0
  %EAX.i161 = bitcast %union.anon* %9986 to i32*
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9988 = getelementptr inbounds %struct.GPR, %struct.GPR* %9987, i32 0, i32 5
  %9989 = getelementptr inbounds %struct.Reg, %struct.Reg* %9988, i32 0, i32 0
  %RCX.i162 = bitcast %union.anon* %9989 to i64*
  %9990 = load i32, i32* %EAX.i161
  %9991 = zext i32 %9990 to i64
  %9992 = load i64, i64* %PC.i160
  %9993 = add i64 %9992, 2
  store i64 %9993, i64* %PC.i160
  %9994 = and i64 %9991, 4294967295
  store i64 %9994, i64* %RCX.i162, align 8
  store %struct.Memory* %loadMem_47daed, %struct.Memory** %MEMORY
  %loadMem_47daef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9996 = getelementptr inbounds %struct.GPR, %struct.GPR* %9995, i32 0, i32 33
  %9997 = getelementptr inbounds %struct.Reg, %struct.Reg* %9996, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %9997 to i64*
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9999 = getelementptr inbounds %struct.GPR, %struct.GPR* %9998, i32 0, i32 5
  %10000 = getelementptr inbounds %struct.Reg, %struct.Reg* %9999, i32 0, i32 0
  %ECX.i159 = bitcast %union.anon* %10000 to i32*
  %10001 = load i32, i32* %ECX.i159
  %10002 = zext i32 %10001 to i64
  %10003 = load i64, i64* %PC.i158
  %10004 = add i64 %10003, 7
  store i64 %10004, i64* %PC.i158
  store i32 %10001, i32* bitcast (%G_0x6cc5e4_type* @G_0x6cc5e4 to i32*)
  store %struct.Memory* %loadMem_47daef, %struct.Memory** %MEMORY
  br label %block_.L_47daf6

block_.L_47daf6:                                  ; preds = %block_.L_47dae5, %block_47dad0, %block_47dab1
  %loadMem_47daf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10006 = getelementptr inbounds %struct.GPR, %struct.GPR* %10005, i32 0, i32 33
  %10007 = getelementptr inbounds %struct.Reg, %struct.Reg* %10006, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %10007 to i64*
  %10008 = load i64, i64* %PC.i157
  %10009 = add i64 %10008, 5
  %10010 = load i64, i64* %PC.i157
  %10011 = add i64 %10010, 5
  store i64 %10011, i64* %PC.i157
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10009, i64* %10012, align 8
  store %struct.Memory* %loadMem_47daf6, %struct.Memory** %MEMORY
  br label %block_.L_47dafb

block_.L_47dafb:                                  ; preds = %block_.L_47daf6, %block_.L_47d544
  %loadMem_47dafb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10014 = getelementptr inbounds %struct.GPR, %struct.GPR* %10013, i32 0, i32 33
  %10015 = getelementptr inbounds %struct.Reg, %struct.Reg* %10014, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %10015 to i64*
  %10016 = load i64, i64* %PC.i156
  %10017 = add i64 %10016, 5
  %10018 = load i64, i64* %PC.i156
  %10019 = add i64 %10018, 5
  store i64 %10019, i64* %PC.i156
  %10020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10017, i64* %10020, align 8
  store %struct.Memory* %loadMem_47dafb, %struct.Memory** %MEMORY
  br label %block_.L_47db00

block_.L_47db00:                                  ; preds = %block_.L_47dafb, %block_.L_47cddd, %block_47cdd3
  %loadMem_47db00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10022 = getelementptr inbounds %struct.GPR, %struct.GPR* %10021, i32 0, i32 33
  %10023 = getelementptr inbounds %struct.Reg, %struct.Reg* %10022, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %10023 to i64*
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10025 = getelementptr inbounds %struct.GPR, %struct.GPR* %10024, i32 0, i32 15
  %10026 = getelementptr inbounds %struct.Reg, %struct.Reg* %10025, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %10026 to i64*
  %10027 = load i64, i64* %RBP.i155
  %10028 = sub i64 %10027, 4
  %10029 = load i64, i64* %PC.i154
  %10030 = add i64 %10029, 4
  store i64 %10030, i64* %PC.i154
  %10031 = inttoptr i64 %10028 to i32*
  %10032 = load i32, i32* %10031
  %10033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10033, align 1
  %10034 = and i32 %10032, 255
  %10035 = call i32 @llvm.ctpop.i32(i32 %10034)
  %10036 = trunc i32 %10035 to i8
  %10037 = and i8 %10036, 1
  %10038 = xor i8 %10037, 1
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10038, i8* %10039, align 1
  %10040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10040, align 1
  %10041 = icmp eq i32 %10032, 0
  %10042 = zext i1 %10041 to i8
  %10043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10042, i8* %10043, align 1
  %10044 = lshr i32 %10032, 31
  %10045 = trunc i32 %10044 to i8
  %10046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10045, i8* %10046, align 1
  %10047 = lshr i32 %10032, 31
  %10048 = xor i32 %10044, %10047
  %10049 = add i32 %10048, %10047
  %10050 = icmp eq i32 %10049, 2
  %10051 = zext i1 %10050 to i8
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10051, i8* %10052, align 1
  store %struct.Memory* %loadMem_47db00, %struct.Memory** %MEMORY
  %loadMem_47db04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10054 = getelementptr inbounds %struct.GPR, %struct.GPR* %10053, i32 0, i32 33
  %10055 = getelementptr inbounds %struct.Reg, %struct.Reg* %10054, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %10055 to i64*
  %10056 = load i64, i64* %PC.i153
  %10057 = add i64 %10056, 16
  %10058 = load i64, i64* %PC.i153
  %10059 = add i64 %10058, 6
  %10060 = load i64, i64* %PC.i153
  %10061 = add i64 %10060, 6
  store i64 %10061, i64* %PC.i153
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10063 = load i8, i8* %10062, align 1
  %10064 = icmp eq i8 %10063, 0
  %10065 = zext i1 %10064 to i8
  store i8 %10065, i8* %BRANCH_TAKEN, align 1
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10067 = select i1 %10064, i64 %10057, i64 %10059
  store i64 %10067, i64* %10066, align 8
  store %struct.Memory* %loadMem_47db04, %struct.Memory** %MEMORY
  %loadBr_47db04 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47db04 = icmp eq i8 %loadBr_47db04, 1
  br i1 %cmpBr_47db04, label %block_.L_47db14, label %block_47db0a

block_47db0a:                                     ; preds = %block_.L_47db00
  %loadMem_47db0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10069 = getelementptr inbounds %struct.GPR, %struct.GPR* %10068, i32 0, i32 33
  %10070 = getelementptr inbounds %struct.Reg, %struct.Reg* %10069, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %10070 to i64*
  %10071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10072 = getelementptr inbounds %struct.GPR, %struct.GPR* %10071, i32 0, i32 15
  %10073 = getelementptr inbounds %struct.Reg, %struct.Reg* %10072, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %10073 to i64*
  %10074 = load i64, i64* %RBP.i152
  %10075 = sub i64 %10074, 8
  %10076 = load i64, i64* %PC.i151
  %10077 = add i64 %10076, 4
  store i64 %10077, i64* %PC.i151
  %10078 = inttoptr i64 %10075 to i32*
  %10079 = load i32, i32* %10078
  %10080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10080, align 1
  %10081 = and i32 %10079, 255
  %10082 = call i32 @llvm.ctpop.i32(i32 %10081)
  %10083 = trunc i32 %10082 to i8
  %10084 = and i8 %10083, 1
  %10085 = xor i8 %10084, 1
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10085, i8* %10086, align 1
  %10087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10087, align 1
  %10088 = icmp eq i32 %10079, 0
  %10089 = zext i1 %10088 to i8
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10089, i8* %10090, align 1
  %10091 = lshr i32 %10079, 31
  %10092 = trunc i32 %10091 to i8
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10092, i8* %10093, align 1
  %10094 = lshr i32 %10079, 31
  %10095 = xor i32 %10091, %10094
  %10096 = add i32 %10095, %10094
  %10097 = icmp eq i32 %10096, 2
  %10098 = zext i1 %10097 to i8
  %10099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10098, i8* %10099, align 1
  store %struct.Memory* %loadMem_47db0a, %struct.Memory** %MEMORY
  %loadMem_47db0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10101 = getelementptr inbounds %struct.GPR, %struct.GPR* %10100, i32 0, i32 33
  %10102 = getelementptr inbounds %struct.Reg, %struct.Reg* %10101, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %10102 to i64*
  %10103 = load i64, i64* %PC.i150
  %10104 = add i64 %10103, 222
  %10105 = load i64, i64* %PC.i150
  %10106 = add i64 %10105, 6
  %10107 = load i64, i64* %PC.i150
  %10108 = add i64 %10107, 6
  store i64 %10108, i64* %PC.i150
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10110 = load i8, i8* %10109, align 1
  store i8 %10110, i8* %BRANCH_TAKEN, align 1
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10112 = icmp ne i8 %10110, 0
  %10113 = select i1 %10112, i64 %10104, i64 %10106
  store i64 %10113, i64* %10111, align 8
  store %struct.Memory* %loadMem_47db0e, %struct.Memory** %MEMORY
  %loadBr_47db0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47db0e = icmp eq i8 %loadBr_47db0e, 1
  br i1 %cmpBr_47db0e, label %block_.L_47dbec, label %block_.L_47db14

block_.L_47db14:                                  ; preds = %block_47db0a, %block_.L_47db00
  %loadMem_47db14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10115 = getelementptr inbounds %struct.GPR, %struct.GPR* %10114, i32 0, i32 33
  %10116 = getelementptr inbounds %struct.Reg, %struct.Reg* %10115, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %10116 to i64*
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10118 = getelementptr inbounds %struct.GPR, %struct.GPR* %10117, i32 0, i32 1
  %10119 = getelementptr inbounds %struct.Reg, %struct.Reg* %10118, i32 0, i32 0
  %RAX.i149 = bitcast %union.anon* %10119 to i64*
  %10120 = load i64, i64* %PC.i148
  %10121 = add i64 %10120, 8
  store i64 %10121, i64* %PC.i148
  %10122 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10122, i64* %RAX.i149, align 8
  store %struct.Memory* %loadMem_47db14, %struct.Memory** %MEMORY
  %loadMem_47db1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10124 = getelementptr inbounds %struct.GPR, %struct.GPR* %10123, i32 0, i32 33
  %10125 = getelementptr inbounds %struct.Reg, %struct.Reg* %10124, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %10125 to i64*
  %10126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10127 = getelementptr inbounds %struct.GPR, %struct.GPR* %10126, i32 0, i32 1
  %10128 = getelementptr inbounds %struct.Reg, %struct.Reg* %10127, i32 0, i32 0
  %RAX.i147 = bitcast %union.anon* %10128 to i64*
  %10129 = load i64, i64* %RAX.i147
  %10130 = add i64 %10129, 72524
  %10131 = load i64, i64* %PC.i146
  %10132 = add i64 %10131, 10
  store i64 %10132, i64* %PC.i146
  %10133 = inttoptr i64 %10130 to i32*
  store i32 0, i32* %10133
  store %struct.Memory* %loadMem_47db1c, %struct.Memory** %MEMORY
  %loadMem_47db26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 33
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %10136 to i64*
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10138 = getelementptr inbounds %struct.GPR, %struct.GPR* %10137, i32 0, i32 1
  %10139 = getelementptr inbounds %struct.Reg, %struct.Reg* %10138, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %10139 to i64*
  %10140 = load i64, i64* %PC.i144
  %10141 = add i64 %10140, 8
  store i64 %10141, i64* %PC.i144
  %10142 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10142, i64* %RAX.i145, align 8
  store %struct.Memory* %loadMem_47db26, %struct.Memory** %MEMORY
  %loadMem_47db2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10144 = getelementptr inbounds %struct.GPR, %struct.GPR* %10143, i32 0, i32 33
  %10145 = getelementptr inbounds %struct.Reg, %struct.Reg* %10144, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %10145 to i64*
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10147 = getelementptr inbounds %struct.GPR, %struct.GPR* %10146, i32 0, i32 1
  %10148 = getelementptr inbounds %struct.Reg, %struct.Reg* %10147, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %10148 to i64*
  %10149 = load i64, i64* %RAX.i143
  %10150 = add i64 %10149, 72528
  %10151 = load i64, i64* %PC.i142
  %10152 = add i64 %10151, 10
  store i64 %10152, i64* %PC.i142
  %10153 = inttoptr i64 %10150 to i32*
  store i32 0, i32* %10153
  store %struct.Memory* %loadMem_47db2e, %struct.Memory** %MEMORY
  %loadMem_47db38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10155 = getelementptr inbounds %struct.GPR, %struct.GPR* %10154, i32 0, i32 33
  %10156 = getelementptr inbounds %struct.Reg, %struct.Reg* %10155, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %10156 to i64*
  %10157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10158 = getelementptr inbounds %struct.GPR, %struct.GPR* %10157, i32 0, i32 1
  %10159 = getelementptr inbounds %struct.Reg, %struct.Reg* %10158, i32 0, i32 0
  %RAX.i141 = bitcast %union.anon* %10159 to i64*
  %10160 = load i64, i64* %PC.i140
  %10161 = add i64 %10160, 8
  store i64 %10161, i64* %PC.i140
  %10162 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10162, i64* %RAX.i141, align 8
  store %struct.Memory* %loadMem_47db38, %struct.Memory** %MEMORY
  %loadMem_47db40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10164 = getelementptr inbounds %struct.GPR, %struct.GPR* %10163, i32 0, i32 33
  %10165 = getelementptr inbounds %struct.Reg, %struct.Reg* %10164, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %10165 to i64*
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10167 = getelementptr inbounds %struct.GPR, %struct.GPR* %10166, i32 0, i32 1
  %10168 = getelementptr inbounds %struct.Reg, %struct.Reg* %10167, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %10168 to i64*
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10170 = getelementptr inbounds %struct.GPR, %struct.GPR* %10169, i32 0, i32 5
  %10171 = getelementptr inbounds %struct.Reg, %struct.Reg* %10170, i32 0, i32 0
  %RCX.i139 = bitcast %union.anon* %10171 to i64*
  %10172 = load i64, i64* %RAX.i138
  %10173 = add i64 %10172, 72620
  %10174 = load i64, i64* %PC.i137
  %10175 = add i64 %10174, 6
  store i64 %10175, i64* %PC.i137
  %10176 = inttoptr i64 %10173 to i32*
  %10177 = load i32, i32* %10176
  %10178 = zext i32 %10177 to i64
  store i64 %10178, i64* %RCX.i139, align 8
  store %struct.Memory* %loadMem_47db40, %struct.Memory** %MEMORY
  %loadMem_47db46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10180 = getelementptr inbounds %struct.GPR, %struct.GPR* %10179, i32 0, i32 33
  %10181 = getelementptr inbounds %struct.Reg, %struct.Reg* %10180, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %10181 to i64*
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10183 = getelementptr inbounds %struct.GPR, %struct.GPR* %10182, i32 0, i32 1
  %10184 = getelementptr inbounds %struct.Reg, %struct.Reg* %10183, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %10184 to i64*
  %10185 = load i64, i64* %PC.i135
  %10186 = add i64 %10185, 8
  store i64 %10186, i64* %PC.i135
  %10187 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10187, i64* %RAX.i136, align 8
  store %struct.Memory* %loadMem_47db46, %struct.Memory** %MEMORY
  %loadMem_47db4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10189 = getelementptr inbounds %struct.GPR, %struct.GPR* %10188, i32 0, i32 33
  %10190 = getelementptr inbounds %struct.Reg, %struct.Reg* %10189, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %10190 to i64*
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10192 = getelementptr inbounds %struct.GPR, %struct.GPR* %10191, i32 0, i32 5
  %10193 = getelementptr inbounds %struct.Reg, %struct.Reg* %10192, i32 0, i32 0
  %ECX.i133 = bitcast %union.anon* %10193 to i32*
  %10194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10195 = getelementptr inbounds %struct.GPR, %struct.GPR* %10194, i32 0, i32 1
  %10196 = getelementptr inbounds %struct.Reg, %struct.Reg* %10195, i32 0, i32 0
  %RAX.i134 = bitcast %union.anon* %10196 to i64*
  %10197 = load i32, i32* %ECX.i133
  %10198 = zext i32 %10197 to i64
  %10199 = load i64, i64* %RAX.i134
  %10200 = add i64 %10199, 72608
  %10201 = load i64, i64* %PC.i132
  %10202 = add i64 %10201, 6
  store i64 %10202, i64* %PC.i132
  %10203 = inttoptr i64 %10200 to i32*
  %10204 = load i32, i32* %10203
  %10205 = sub i32 %10197, %10204
  %10206 = icmp ult i32 %10197, %10204
  %10207 = zext i1 %10206 to i8
  %10208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10207, i8* %10208, align 1
  %10209 = and i32 %10205, 255
  %10210 = call i32 @llvm.ctpop.i32(i32 %10209)
  %10211 = trunc i32 %10210 to i8
  %10212 = and i8 %10211, 1
  %10213 = xor i8 %10212, 1
  %10214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10213, i8* %10214, align 1
  %10215 = xor i32 %10204, %10197
  %10216 = xor i32 %10215, %10205
  %10217 = lshr i32 %10216, 4
  %10218 = trunc i32 %10217 to i8
  %10219 = and i8 %10218, 1
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10219, i8* %10220, align 1
  %10221 = icmp eq i32 %10205, 0
  %10222 = zext i1 %10221 to i8
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10222, i8* %10223, align 1
  %10224 = lshr i32 %10205, 31
  %10225 = trunc i32 %10224 to i8
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10225, i8* %10226, align 1
  %10227 = lshr i32 %10197, 31
  %10228 = lshr i32 %10204, 31
  %10229 = xor i32 %10228, %10227
  %10230 = xor i32 %10224, %10227
  %10231 = add i32 %10230, %10229
  %10232 = icmp eq i32 %10231, 2
  %10233 = zext i1 %10232 to i8
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10233, i8* %10234, align 1
  store %struct.Memory* %loadMem_47db4e, %struct.Memory** %MEMORY
  %loadMem_47db54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 33
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %10237 to i64*
  %10238 = load i64, i64* %PC.i131
  %10239 = add i64 %10238, 147
  %10240 = load i64, i64* %PC.i131
  %10241 = add i64 %10240, 6
  %10242 = load i64, i64* %PC.i131
  %10243 = add i64 %10242, 6
  store i64 %10243, i64* %PC.i131
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10245 = load i8, i8* %10244, align 1
  %10246 = icmp ne i8 %10245, 0
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10248 = load i8, i8* %10247, align 1
  %10249 = icmp ne i8 %10248, 0
  %10250 = xor i1 %10246, %10249
  %10251 = xor i1 %10250, true
  %10252 = zext i1 %10251 to i8
  store i8 %10252, i8* %BRANCH_TAKEN, align 1
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10254 = select i1 %10250, i64 %10241, i64 %10239
  store i64 %10254, i64* %10253, align 8
  store %struct.Memory* %loadMem_47db54, %struct.Memory** %MEMORY
  %loadBr_47db54 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47db54 = icmp eq i8 %loadBr_47db54, 1
  br i1 %cmpBr_47db54, label %block_.L_47dbe7, label %block_47db5a

block_47db5a:                                     ; preds = %block_.L_47db14
  %loadMem_47db5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10256 = getelementptr inbounds %struct.GPR, %struct.GPR* %10255, i32 0, i32 33
  %10257 = getelementptr inbounds %struct.Reg, %struct.Reg* %10256, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %10257 to i64*
  %10258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10258, i64 0, i64 0
  %YMM0.i129 = bitcast %union.VectorReg* %10259 to %"class.std::bitset"*
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10260, i64 0, i64 0
  %XMM0.i130 = bitcast %union.VectorReg* %10261 to %union.vec128_t*
  %10262 = bitcast %"class.std::bitset"* %YMM0.i129 to i8*
  %10263 = bitcast %"class.std::bitset"* %YMM0.i129 to i8*
  %10264 = bitcast %union.vec128_t* %XMM0.i130 to i8*
  %10265 = load i64, i64* %PC.i128
  %10266 = add i64 %10265, 3
  store i64 %10266, i64* %PC.i128
  %10267 = bitcast i8* %10263 to i64*
  %10268 = load i64, i64* %10267, align 1
  %10269 = getelementptr inbounds i8, i8* %10263, i64 8
  %10270 = bitcast i8* %10269 to i64*
  %10271 = load i64, i64* %10270, align 1
  %10272 = bitcast i8* %10264 to i64*
  %10273 = load i64, i64* %10272, align 1
  %10274 = getelementptr inbounds i8, i8* %10264, i64 8
  %10275 = bitcast i8* %10274 to i64*
  %10276 = load i64, i64* %10275, align 1
  %10277 = xor i64 %10273, %10268
  %10278 = xor i64 %10276, %10271
  %10279 = trunc i64 %10277 to i32
  %10280 = lshr i64 %10277, 32
  %10281 = trunc i64 %10280 to i32
  %10282 = bitcast i8* %10262 to i32*
  store i32 %10279, i32* %10282, align 1
  %10283 = getelementptr inbounds i8, i8* %10262, i64 4
  %10284 = bitcast i8* %10283 to i32*
  store i32 %10281, i32* %10284, align 1
  %10285 = trunc i64 %10278 to i32
  %10286 = getelementptr inbounds i8, i8* %10262, i64 8
  %10287 = bitcast i8* %10286 to i32*
  store i32 %10285, i32* %10287, align 1
  %10288 = lshr i64 %10278, 32
  %10289 = trunc i64 %10288 to i32
  %10290 = getelementptr inbounds i8, i8* %10262, i64 12
  %10291 = bitcast i8* %10290 to i32*
  store i32 %10289, i32* %10291, align 1
  store %struct.Memory* %loadMem_47db5a, %struct.Memory** %MEMORY
  %loadMem_47db5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10293 = getelementptr inbounds %struct.GPR, %struct.GPR* %10292, i32 0, i32 33
  %10294 = getelementptr inbounds %struct.Reg, %struct.Reg* %10293, i32 0, i32 0
  %PC.i127 = bitcast %union.anon* %10294 to i64*
  %10295 = load i64, i64* %PC.i127
  %10296 = add i64 %10295, 11
  store i64 %10296, i64* %PC.i127
  store i32 0, i32* bitcast (%G_0x722b78_type* @G_0x722b78 to i32*)
  store %struct.Memory* %loadMem_47db5d, %struct.Memory** %MEMORY
  %loadMem_47db68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10298 = getelementptr inbounds %struct.GPR, %struct.GPR* %10297, i32 0, i32 33
  %10299 = getelementptr inbounds %struct.Reg, %struct.Reg* %10298, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %10299 to i64*
  %10300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10301 = getelementptr inbounds %struct.GPR, %struct.GPR* %10300, i32 0, i32 1
  %10302 = getelementptr inbounds %struct.Reg, %struct.Reg* %10301, i32 0, i32 0
  %RAX.i126 = bitcast %union.anon* %10302 to i64*
  %10303 = load i64, i64* %PC.i125
  %10304 = add i64 %10303, 8
  store i64 %10304, i64* %PC.i125
  %10305 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10305, i64* %RAX.i126, align 8
  store %struct.Memory* %loadMem_47db68, %struct.Memory** %MEMORY
  %loadMem_47db70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10307 = getelementptr inbounds %struct.GPR, %struct.GPR* %10306, i32 0, i32 33
  %10308 = getelementptr inbounds %struct.Reg, %struct.Reg* %10307, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %10308 to i64*
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10310 = getelementptr inbounds %struct.GPR, %struct.GPR* %10309, i32 0, i32 1
  %10311 = getelementptr inbounds %struct.Reg, %struct.Reg* %10310, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %10311 to i64*
  %10312 = load i64, i64* %RAX.i124
  %10313 = add i64 %10312, 72532
  %10314 = load i64, i64* %PC.i123
  %10315 = add i64 %10314, 10
  store i64 %10315, i64* %PC.i123
  %10316 = inttoptr i64 %10313 to i32*
  store i32 0, i32* %10316
  store %struct.Memory* %loadMem_47db70, %struct.Memory** %MEMORY
  %loadMem_47db7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10318 = getelementptr inbounds %struct.GPR, %struct.GPR* %10317, i32 0, i32 33
  %10319 = getelementptr inbounds %struct.Reg, %struct.Reg* %10318, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %10319 to i64*
  %10320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10321 = getelementptr inbounds %struct.GPR, %struct.GPR* %10320, i32 0, i32 1
  %10322 = getelementptr inbounds %struct.Reg, %struct.Reg* %10321, i32 0, i32 0
  %RAX.i122 = bitcast %union.anon* %10322 to i64*
  %10323 = load i64, i64* %PC.i121
  %10324 = add i64 %10323, 8
  store i64 %10324, i64* %PC.i121
  %10325 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10325, i64* %RAX.i122, align 8
  store %struct.Memory* %loadMem_47db7a, %struct.Memory** %MEMORY
  %loadMem_47db82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10327 = getelementptr inbounds %struct.GPR, %struct.GPR* %10326, i32 0, i32 33
  %10328 = getelementptr inbounds %struct.Reg, %struct.Reg* %10327, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %10328 to i64*
  %10329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10330 = getelementptr inbounds %struct.GPR, %struct.GPR* %10329, i32 0, i32 1
  %10331 = getelementptr inbounds %struct.Reg, %struct.Reg* %10330, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %10331 to i64*
  %10332 = load i64, i64* %RAX.i120
  %10333 = add i64 %10332, 72536
  %10334 = load i64, i64* %PC.i119
  %10335 = add i64 %10334, 10
  store i64 %10335, i64* %PC.i119
  %10336 = inttoptr i64 %10333 to i32*
  store i32 0, i32* %10336
  store %struct.Memory* %loadMem_47db82, %struct.Memory** %MEMORY
  %loadMem_47db8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10338 = getelementptr inbounds %struct.GPR, %struct.GPR* %10337, i32 0, i32 33
  %10339 = getelementptr inbounds %struct.Reg, %struct.Reg* %10338, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %10339 to i64*
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10341 = getelementptr inbounds %struct.GPR, %struct.GPR* %10340, i32 0, i32 1
  %10342 = getelementptr inbounds %struct.Reg, %struct.Reg* %10341, i32 0, i32 0
  %RAX.i118 = bitcast %union.anon* %10342 to i64*
  %10343 = load i64, i64* %PC.i117
  %10344 = add i64 %10343, 8
  store i64 %10344, i64* %PC.i117
  %10345 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10345, i64* %RAX.i118, align 8
  store %struct.Memory* %loadMem_47db8c, %struct.Memory** %MEMORY
  %loadMem_47db94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10347 = getelementptr inbounds %struct.GPR, %struct.GPR* %10346, i32 0, i32 33
  %10348 = getelementptr inbounds %struct.Reg, %struct.Reg* %10347, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %10348 to i64*
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10350 = getelementptr inbounds %struct.GPR, %struct.GPR* %10349, i32 0, i32 1
  %10351 = getelementptr inbounds %struct.Reg, %struct.Reg* %10350, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %10351 to i64*
  %10352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10353 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10352, i64 0, i64 0
  %XMM0.i116 = bitcast %union.VectorReg* %10353 to %union.vec128_t*
  %10354 = load i64, i64* %RAX.i115
  %10355 = add i64 %10354, 72544
  %10356 = bitcast %union.vec128_t* %XMM0.i116 to i8*
  %10357 = load i64, i64* %PC.i114
  %10358 = add i64 %10357, 8
  store i64 %10358, i64* %PC.i114
  %10359 = bitcast i8* %10356 to double*
  %10360 = load double, double* %10359, align 1
  %10361 = inttoptr i64 %10355 to double*
  store double %10360, double* %10361
  store %struct.Memory* %loadMem_47db94, %struct.Memory** %MEMORY
  %loadMem_47db9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10363 = getelementptr inbounds %struct.GPR, %struct.GPR* %10362, i32 0, i32 33
  %10364 = getelementptr inbounds %struct.Reg, %struct.Reg* %10363, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %10364 to i64*
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 1
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %10367 to i64*
  %10368 = load i64, i64* %PC.i112
  %10369 = add i64 %10368, 8
  store i64 %10369, i64* %PC.i112
  %10370 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10370, i64* %RAX.i113, align 8
  store %struct.Memory* %loadMem_47db9c, %struct.Memory** %MEMORY
  %loadMem_47dba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10372 = getelementptr inbounds %struct.GPR, %struct.GPR* %10371, i32 0, i32 33
  %10373 = getelementptr inbounds %struct.Reg, %struct.Reg* %10372, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %10373 to i64*
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10375 = getelementptr inbounds %struct.GPR, %struct.GPR* %10374, i32 0, i32 1
  %10376 = getelementptr inbounds %struct.Reg, %struct.Reg* %10375, i32 0, i32 0
  %RAX.i111 = bitcast %union.anon* %10376 to i64*
  %10377 = load i64, i64* %RAX.i111
  %10378 = add i64 %10377, 72600
  %10379 = load i64, i64* %PC.i110
  %10380 = add i64 %10379, 7
  store i64 %10380, i64* %PC.i110
  %10381 = inttoptr i64 %10378 to i32*
  %10382 = load i32, i32* %10381
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10383, align 1
  %10384 = and i32 %10382, 255
  %10385 = call i32 @llvm.ctpop.i32(i32 %10384)
  %10386 = trunc i32 %10385 to i8
  %10387 = and i8 %10386, 1
  %10388 = xor i8 %10387, 1
  %10389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10388, i8* %10389, align 1
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10390, align 1
  %10391 = icmp eq i32 %10382, 0
  %10392 = zext i1 %10391 to i8
  %10393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10392, i8* %10393, align 1
  %10394 = lshr i32 %10382, 31
  %10395 = trunc i32 %10394 to i8
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10395, i8* %10396, align 1
  %10397 = lshr i32 %10382, 31
  %10398 = xor i32 %10394, %10397
  %10399 = add i32 %10398, %10397
  %10400 = icmp eq i32 %10399, 2
  %10401 = zext i1 %10400 to i8
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10401, i8* %10402, align 1
  store %struct.Memory* %loadMem_47dba4, %struct.Memory** %MEMORY
  %loadMem_47dbab = load %struct.Memory*, %struct.Memory** %MEMORY
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10404 = getelementptr inbounds %struct.GPR, %struct.GPR* %10403, i32 0, i32 33
  %10405 = getelementptr inbounds %struct.Reg, %struct.Reg* %10404, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %10405 to i64*
  %10406 = load i64, i64* %PC.i109
  %10407 = add i64 %10406, 25
  %10408 = load i64, i64* %PC.i109
  %10409 = add i64 %10408, 6
  %10410 = load i64, i64* %PC.i109
  %10411 = add i64 %10410, 6
  store i64 %10411, i64* %PC.i109
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10413 = load i8, i8* %10412, align 1
  %10414 = icmp eq i8 %10413, 0
  %10415 = zext i1 %10414 to i8
  store i8 %10415, i8* %BRANCH_TAKEN, align 1
  %10416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10417 = select i1 %10414, i64 %10407, i64 %10409
  store i64 %10417, i64* %10416, align 8
  store %struct.Memory* %loadMem_47dbab, %struct.Memory** %MEMORY
  %loadBr_47dbab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47dbab = icmp eq i8 %loadBr_47dbab, 1
  br i1 %cmpBr_47dbab, label %block_.L_47dbc4, label %block_47dbb1

block_47dbb1:                                     ; preds = %block_47db5a
  %loadMem_47dbb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10419 = getelementptr inbounds %struct.GPR, %struct.GPR* %10418, i32 0, i32 33
  %10420 = getelementptr inbounds %struct.Reg, %struct.Reg* %10419, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %10420 to i64*
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 1
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %RAX.i108 = bitcast %union.anon* %10423 to i64*
  %10424 = load i64, i64* %PC.i107
  %10425 = add i64 %10424, 7
  store i64 %10425, i64* %PC.i107
  %10426 = load i32, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  %10427 = zext i32 %10426 to i64
  store i64 %10427, i64* %RAX.i108, align 8
  store %struct.Memory* %loadMem_47dbb1, %struct.Memory** %MEMORY
  %loadMem_47dbb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10429 = getelementptr inbounds %struct.GPR, %struct.GPR* %10428, i32 0, i32 33
  %10430 = getelementptr inbounds %struct.Reg, %struct.Reg* %10429, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %10430 to i64*
  %10431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10432 = getelementptr inbounds %struct.GPR, %struct.GPR* %10431, i32 0, i32 1
  %10433 = getelementptr inbounds %struct.Reg, %struct.Reg* %10432, i32 0, i32 0
  %EAX.i106 = bitcast %union.anon* %10433 to i32*
  %10434 = load i32, i32* %EAX.i106
  %10435 = zext i32 %10434 to i64
  %10436 = load i64, i64* %PC.i105
  %10437 = add i64 %10436, 7
  store i64 %10437, i64* %PC.i105
  store i32 %10434, i32* bitcast (%G_0x6f9688_type* @G_0x6f9688 to i32*)
  store %struct.Memory* %loadMem_47dbb8, %struct.Memory** %MEMORY
  %loadMem_47dbbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10439 = getelementptr inbounds %struct.GPR, %struct.GPR* %10438, i32 0, i32 33
  %10440 = getelementptr inbounds %struct.Reg, %struct.Reg* %10439, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %10440 to i64*
  %10441 = load i64, i64* %PC.i104
  %10442 = add i64 %10441, 35
  %10443 = load i64, i64* %PC.i104
  %10444 = add i64 %10443, 5
  store i64 %10444, i64* %PC.i104
  %10445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10442, i64* %10445, align 8
  store %struct.Memory* %loadMem_47dbbf, %struct.Memory** %MEMORY
  br label %block_.L_47dbe2

block_.L_47dbc4:                                  ; preds = %block_47db5a
  %loadMem_47dbc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10447 = getelementptr inbounds %struct.GPR, %struct.GPR* %10446, i32 0, i32 33
  %10448 = getelementptr inbounds %struct.Reg, %struct.Reg* %10447, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %10448 to i64*
  %10449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10450 = getelementptr inbounds %struct.GPR, %struct.GPR* %10449, i32 0, i32 1
  %10451 = getelementptr inbounds %struct.Reg, %struct.Reg* %10450, i32 0, i32 0
  %RAX.i103 = bitcast %union.anon* %10451 to i64*
  %10452 = load i64, i64* %PC.i102
  %10453 = add i64 %10452, 5
  store i64 %10453, i64* %PC.i102
  store i64 2, i64* %RAX.i103, align 8
  store %struct.Memory* %loadMem_47dbc4, %struct.Memory** %MEMORY
  %loadMem_47dbc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10455 = getelementptr inbounds %struct.GPR, %struct.GPR* %10454, i32 0, i32 33
  %10456 = getelementptr inbounds %struct.Reg, %struct.Reg* %10455, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %10456 to i64*
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10458 = getelementptr inbounds %struct.GPR, %struct.GPR* %10457, i32 0, i32 5
  %10459 = getelementptr inbounds %struct.Reg, %struct.Reg* %10458, i32 0, i32 0
  %RCX.i101 = bitcast %union.anon* %10459 to i64*
  %10460 = load i64, i64* %PC.i100
  %10461 = add i64 %10460, 7
  store i64 %10461, i64* %PC.i100
  %10462 = load i32, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  %10463 = zext i32 %10462 to i64
  store i64 %10463, i64* %RCX.i101, align 8
  store %struct.Memory* %loadMem_47dbc9, %struct.Memory** %MEMORY
  %loadMem_47dbd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10465 = getelementptr inbounds %struct.GPR, %struct.GPR* %10464, i32 0, i32 33
  %10466 = getelementptr inbounds %struct.Reg, %struct.Reg* %10465, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %10466 to i64*
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10468 = getelementptr inbounds %struct.GPR, %struct.GPR* %10467, i32 0, i32 1
  %10469 = getelementptr inbounds %struct.Reg, %struct.Reg* %10468, i32 0, i32 0
  %EAX.i98 = bitcast %union.anon* %10469 to i32*
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 15
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %RBP.i99 = bitcast %union.anon* %10472 to i64*
  %10473 = load i64, i64* %RBP.i99
  %10474 = sub i64 %10473, 116
  %10475 = load i32, i32* %EAX.i98
  %10476 = zext i32 %10475 to i64
  %10477 = load i64, i64* %PC.i97
  %10478 = add i64 %10477, 3
  store i64 %10478, i64* %PC.i97
  %10479 = inttoptr i64 %10474 to i32*
  store i32 %10475, i32* %10479
  store %struct.Memory* %loadMem_47dbd0, %struct.Memory** %MEMORY
  %loadMem_47dbd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10481 = getelementptr inbounds %struct.GPR, %struct.GPR* %10480, i32 0, i32 33
  %10482 = getelementptr inbounds %struct.Reg, %struct.Reg* %10481, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %10482 to i64*
  %10483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10484 = getelementptr inbounds %struct.GPR, %struct.GPR* %10483, i32 0, i32 5
  %10485 = getelementptr inbounds %struct.Reg, %struct.Reg* %10484, i32 0, i32 0
  %ECX.i95 = bitcast %union.anon* %10485 to i32*
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10487 = getelementptr inbounds %struct.GPR, %struct.GPR* %10486, i32 0, i32 1
  %10488 = getelementptr inbounds %struct.Reg, %struct.Reg* %10487, i32 0, i32 0
  %RAX.i96 = bitcast %union.anon* %10488 to i64*
  %10489 = load i32, i32* %ECX.i95
  %10490 = zext i32 %10489 to i64
  %10491 = load i64, i64* %PC.i94
  %10492 = add i64 %10491, 2
  store i64 %10492, i64* %PC.i94
  %10493 = and i64 %10490, 4294967295
  store i64 %10493, i64* %RAX.i96, align 8
  store %struct.Memory* %loadMem_47dbd3, %struct.Memory** %MEMORY
  %loadMem_47dbd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10495 = getelementptr inbounds %struct.GPR, %struct.GPR* %10494, i32 0, i32 33
  %10496 = getelementptr inbounds %struct.Reg, %struct.Reg* %10495, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %10496 to i64*
  %10497 = load i64, i64* %PC.i93
  %10498 = add i64 %10497, 1
  store i64 %10498, i64* %PC.i93
  %10499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10501 = bitcast %union.anon* %10500 to i32*
  %10502 = load i32, i32* %10501, align 8
  %10503 = sext i32 %10502 to i64
  %10504 = lshr i64 %10503, 32
  store i64 %10504, i64* %10499, align 8
  store %struct.Memory* %loadMem_47dbd5, %struct.Memory** %MEMORY
  %loadMem_47dbd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10506 = getelementptr inbounds %struct.GPR, %struct.GPR* %10505, i32 0, i32 33
  %10507 = getelementptr inbounds %struct.Reg, %struct.Reg* %10506, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %10507 to i64*
  %10508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10509 = getelementptr inbounds %struct.GPR, %struct.GPR* %10508, i32 0, i32 5
  %10510 = getelementptr inbounds %struct.Reg, %struct.Reg* %10509, i32 0, i32 0
  %RCX.i91 = bitcast %union.anon* %10510 to i64*
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10512 = getelementptr inbounds %struct.GPR, %struct.GPR* %10511, i32 0, i32 15
  %10513 = getelementptr inbounds %struct.Reg, %struct.Reg* %10512, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %10513 to i64*
  %10514 = load i64, i64* %RBP.i92
  %10515 = sub i64 %10514, 116
  %10516 = load i64, i64* %PC.i90
  %10517 = add i64 %10516, 3
  store i64 %10517, i64* %PC.i90
  %10518 = inttoptr i64 %10515 to i32*
  %10519 = load i32, i32* %10518
  %10520 = zext i32 %10519 to i64
  store i64 %10520, i64* %RCX.i91, align 8
  store %struct.Memory* %loadMem_47dbd6, %struct.Memory** %MEMORY
  %loadMem_47dbd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10522 = getelementptr inbounds %struct.GPR, %struct.GPR* %10521, i32 0, i32 33
  %10523 = getelementptr inbounds %struct.Reg, %struct.Reg* %10522, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %10523 to i64*
  %10524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10525 = getelementptr inbounds %struct.GPR, %struct.GPR* %10524, i32 0, i32 5
  %10526 = getelementptr inbounds %struct.Reg, %struct.Reg* %10525, i32 0, i32 0
  %ECX.i86 = bitcast %union.anon* %10526 to i32*
  %10527 = load i32, i32* %ECX.i86
  %10528 = zext i32 %10527 to i64
  %10529 = load i64, i64* %PC.i85
  %10530 = add i64 %10529, 2
  store i64 %10530, i64* %PC.i85
  %10531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10532 = bitcast %union.anon* %10531 to i32*
  %10533 = load i32, i32* %10532, align 8
  %10534 = zext i32 %10533 to i64
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %10536 = bitcast %union.anon* %10535 to i32*
  %10537 = load i32, i32* %10536, align 8
  %10538 = zext i32 %10537 to i64
  %10539 = shl i64 %10528, 32
  %10540 = ashr exact i64 %10539, 32
  %10541 = shl i64 %10538, 32
  %10542 = or i64 %10541, %10534
  %10543 = sdiv i64 %10542, %10540
  %10544 = shl i64 %10543, 32
  %10545 = ashr exact i64 %10544, 32
  %10546 = icmp eq i64 %10543, %10545
  br i1 %10546, label %10551, label %10547

; <label>:10547:                                  ; preds = %block_.L_47dbc4
  %10548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10549 = load i64, i64* %10548, align 8
  %10550 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %10549, %struct.Memory* %loadMem_47dbd9)
  br label %routine_idivl__ecx.exit87

; <label>:10551:                                  ; preds = %block_.L_47dbc4
  %10552 = srem i64 %10542, %10540
  %10553 = getelementptr inbounds %union.anon, %union.anon* %10531, i64 0, i32 0
  %10554 = and i64 %10543, 4294967295
  store i64 %10554, i64* %10553, align 8
  %10555 = getelementptr inbounds %union.anon, %union.anon* %10535, i64 0, i32 0
  %10556 = and i64 %10552, 4294967295
  store i64 %10556, i64* %10555, align 8
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10557, align 1
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %10558, align 1
  %10559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10559, align 1
  %10560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10560, align 1
  %10561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %10561, align 1
  %10562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10562, align 1
  br label %routine_idivl__ecx.exit87

routine_idivl__ecx.exit87:                        ; preds = %10547, %10551
  %10563 = phi %struct.Memory* [ %10550, %10547 ], [ %loadMem_47dbd9, %10551 ]
  store %struct.Memory* %10563, %struct.Memory** %MEMORY
  %loadMem_47dbdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10565 = getelementptr inbounds %struct.GPR, %struct.GPR* %10564, i32 0, i32 33
  %10566 = getelementptr inbounds %struct.Reg, %struct.Reg* %10565, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %10566 to i64*
  %10567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10568 = getelementptr inbounds %struct.GPR, %struct.GPR* %10567, i32 0, i32 1
  %10569 = getelementptr inbounds %struct.Reg, %struct.Reg* %10568, i32 0, i32 0
  %EAX.i84 = bitcast %union.anon* %10569 to i32*
  %10570 = load i32, i32* %EAX.i84
  %10571 = zext i32 %10570 to i64
  %10572 = load i64, i64* %PC.i83
  %10573 = add i64 %10572, 7
  store i64 %10573, i64* %PC.i83
  store i32 %10570, i32* bitcast (%G_0x6f9688_type* @G_0x6f9688 to i32*)
  store %struct.Memory* %loadMem_47dbdb, %struct.Memory** %MEMORY
  br label %block_.L_47dbe2

block_.L_47dbe2:                                  ; preds = %routine_idivl__ecx.exit87, %block_47dbb1
  %loadMem_47dbe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10575 = getelementptr inbounds %struct.GPR, %struct.GPR* %10574, i32 0, i32 33
  %10576 = getelementptr inbounds %struct.Reg, %struct.Reg* %10575, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %10576 to i64*
  %10577 = load i64, i64* %PC.i82
  %10578 = add i64 %10577, 5
  %10579 = load i64, i64* %PC.i82
  %10580 = add i64 %10579, 5
  store i64 %10580, i64* %PC.i82
  %10581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10578, i64* %10581, align 8
  store %struct.Memory* %loadMem_47dbe2, %struct.Memory** %MEMORY
  br label %block_.L_47dbe7

block_.L_47dbe7:                                  ; preds = %block_.L_47dbe2, %block_.L_47db14
  %loadMem_47dbe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10583 = getelementptr inbounds %struct.GPR, %struct.GPR* %10582, i32 0, i32 33
  %10584 = getelementptr inbounds %struct.Reg, %struct.Reg* %10583, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %10584 to i64*
  %10585 = load i64, i64* %PC.i81
  %10586 = add i64 %10585, 5
  %10587 = load i64, i64* %PC.i81
  %10588 = add i64 %10587, 5
  store i64 %10588, i64* %PC.i81
  %10589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10586, i64* %10589, align 8
  store %struct.Memory* %loadMem_47dbe7, %struct.Memory** %MEMORY
  br label %block_.L_47dbec

block_.L_47dbec:                                  ; preds = %block_.L_47dbe7, %block_47db0a
  %loadMem_47dbec = load %struct.Memory*, %struct.Memory** %MEMORY
  %10590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10591 = getelementptr inbounds %struct.GPR, %struct.GPR* %10590, i32 0, i32 33
  %10592 = getelementptr inbounds %struct.Reg, %struct.Reg* %10591, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %10592 to i64*
  %10593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10594 = getelementptr inbounds %struct.GPR, %struct.GPR* %10593, i32 0, i32 1
  %10595 = getelementptr inbounds %struct.Reg, %struct.Reg* %10594, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %10595 to i64*
  %10596 = load i64, i64* %PC.i79
  %10597 = add i64 %10596, 8
  store i64 %10597, i64* %PC.i79
  %10598 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10598, i64* %RAX.i80, align 8
  store %struct.Memory* %loadMem_47dbec, %struct.Memory** %MEMORY
  %loadMem_47dbf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10600 = getelementptr inbounds %struct.GPR, %struct.GPR* %10599, i32 0, i32 33
  %10601 = getelementptr inbounds %struct.Reg, %struct.Reg* %10600, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %10601 to i64*
  %10602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10603 = getelementptr inbounds %struct.GPR, %struct.GPR* %10602, i32 0, i32 1
  %10604 = getelementptr inbounds %struct.Reg, %struct.Reg* %10603, i32 0, i32 0
  %RAX.i78 = bitcast %union.anon* %10604 to i64*
  %10605 = load i64, i64* %RAX.i78
  %10606 = add i64 %10605, 24
  %10607 = load i64, i64* %PC.i77
  %10608 = add i64 %10607, 4
  store i64 %10608, i64* %PC.i77
  %10609 = inttoptr i64 %10606 to i32*
  %10610 = load i32, i32* %10609
  %10611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10611, align 1
  %10612 = and i32 %10610, 255
  %10613 = call i32 @llvm.ctpop.i32(i32 %10612)
  %10614 = trunc i32 %10613 to i8
  %10615 = and i8 %10614, 1
  %10616 = xor i8 %10615, 1
  %10617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10616, i8* %10617, align 1
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10618, align 1
  %10619 = icmp eq i32 %10610, 0
  %10620 = zext i1 %10619 to i8
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10620, i8* %10621, align 1
  %10622 = lshr i32 %10610, 31
  %10623 = trunc i32 %10622 to i8
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10623, i8* %10624, align 1
  %10625 = lshr i32 %10610, 31
  %10626 = xor i32 %10622, %10625
  %10627 = add i32 %10626, %10625
  %10628 = icmp eq i32 %10627, 2
  %10629 = zext i1 %10628 to i8
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10629, i8* %10630, align 1
  store %struct.Memory* %loadMem_47dbf4, %struct.Memory** %MEMORY
  %loadMem_47dbf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10632 = getelementptr inbounds %struct.GPR, %struct.GPR* %10631, i32 0, i32 33
  %10633 = getelementptr inbounds %struct.Reg, %struct.Reg* %10632, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %10633 to i64*
  %10634 = load i64, i64* %PC.i76
  %10635 = add i64 %10634, 236
  %10636 = load i64, i64* %PC.i76
  %10637 = add i64 %10636, 6
  %10638 = load i64, i64* %PC.i76
  %10639 = add i64 %10638, 6
  store i64 %10639, i64* %PC.i76
  %10640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10641 = load i8, i8* %10640, align 1
  %10642 = icmp eq i8 %10641, 0
  %10643 = zext i1 %10642 to i8
  store i8 %10643, i8* %BRANCH_TAKEN, align 1
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10645 = select i1 %10642, i64 %10635, i64 %10637
  store i64 %10645, i64* %10644, align 8
  store %struct.Memory* %loadMem_47dbf8, %struct.Memory** %MEMORY
  %loadBr_47dbf8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47dbf8 = icmp eq i8 %loadBr_47dbf8, 1
  br i1 %cmpBr_47dbf8, label %block_.L_47dce4, label %block_47dbfe

block_47dbfe:                                     ; preds = %block_.L_47dbec
  %loadMem_47dbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10647 = getelementptr inbounds %struct.GPR, %struct.GPR* %10646, i32 0, i32 33
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %10648 to i64*
  %10649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10650 = getelementptr inbounds %struct.GPR, %struct.GPR* %10649, i32 0, i32 1
  %10651 = getelementptr inbounds %struct.Reg, %struct.Reg* %10650, i32 0, i32 0
  %RAX.i75 = bitcast %union.anon* %10651 to i64*
  %10652 = load i64, i64* %PC.i74
  %10653 = add i64 %10652, 8
  store i64 %10653, i64* %PC.i74
  %10654 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10654, i64* %RAX.i75, align 8
  store %struct.Memory* %loadMem_47dbfe, %struct.Memory** %MEMORY
  %loadMem_47dc06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10656 = getelementptr inbounds %struct.GPR, %struct.GPR* %10655, i32 0, i32 33
  %10657 = getelementptr inbounds %struct.Reg, %struct.Reg* %10656, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %10657 to i64*
  %10658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10659 = getelementptr inbounds %struct.GPR, %struct.GPR* %10658, i32 0, i32 1
  %10660 = getelementptr inbounds %struct.Reg, %struct.Reg* %10659, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %10660 to i64*
  %10661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10662 = getelementptr inbounds %struct.GPR, %struct.GPR* %10661, i32 0, i32 5
  %10663 = getelementptr inbounds %struct.Reg, %struct.Reg* %10662, i32 0, i32 0
  %RCX.i73 = bitcast %union.anon* %10663 to i64*
  %10664 = load i64, i64* %RAX.i72
  %10665 = add i64 %10664, 72620
  %10666 = load i64, i64* %PC.i71
  %10667 = add i64 %10666, 6
  store i64 %10667, i64* %PC.i71
  %10668 = inttoptr i64 %10665 to i32*
  %10669 = load i32, i32* %10668
  %10670 = zext i32 %10669 to i64
  store i64 %10670, i64* %RCX.i73, align 8
  store %struct.Memory* %loadMem_47dc06, %struct.Memory** %MEMORY
  %loadMem_47dc0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10672 = getelementptr inbounds %struct.GPR, %struct.GPR* %10671, i32 0, i32 33
  %10673 = getelementptr inbounds %struct.Reg, %struct.Reg* %10672, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %10673 to i64*
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10675 = getelementptr inbounds %struct.GPR, %struct.GPR* %10674, i32 0, i32 1
  %10676 = getelementptr inbounds %struct.Reg, %struct.Reg* %10675, i32 0, i32 0
  %RAX.i70 = bitcast %union.anon* %10676 to i64*
  %10677 = load i64, i64* %PC.i69
  %10678 = add i64 %10677, 8
  store i64 %10678, i64* %PC.i69
  %10679 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10679, i64* %RAX.i70, align 8
  store %struct.Memory* %loadMem_47dc0c, %struct.Memory** %MEMORY
  %loadMem_47dc14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10681 = getelementptr inbounds %struct.GPR, %struct.GPR* %10680, i32 0, i32 33
  %10682 = getelementptr inbounds %struct.Reg, %struct.Reg* %10681, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %10682 to i64*
  %10683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10684 = getelementptr inbounds %struct.GPR, %struct.GPR* %10683, i32 0, i32 5
  %10685 = getelementptr inbounds %struct.Reg, %struct.Reg* %10684, i32 0, i32 0
  %ECX.i67 = bitcast %union.anon* %10685 to i32*
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10687 = getelementptr inbounds %struct.GPR, %struct.GPR* %10686, i32 0, i32 1
  %10688 = getelementptr inbounds %struct.Reg, %struct.Reg* %10687, i32 0, i32 0
  %RAX.i68 = bitcast %union.anon* %10688 to i64*
  %10689 = load i32, i32* %ECX.i67
  %10690 = zext i32 %10689 to i64
  %10691 = load i64, i64* %RAX.i68
  %10692 = add i64 %10691, 72608
  %10693 = load i64, i64* %PC.i66
  %10694 = add i64 %10693, 6
  store i64 %10694, i64* %PC.i66
  %10695 = inttoptr i64 %10692 to i32*
  %10696 = load i32, i32* %10695
  %10697 = sub i32 %10689, %10696
  %10698 = icmp ult i32 %10689, %10696
  %10699 = zext i1 %10698 to i8
  %10700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10699, i8* %10700, align 1
  %10701 = and i32 %10697, 255
  %10702 = call i32 @llvm.ctpop.i32(i32 %10701)
  %10703 = trunc i32 %10702 to i8
  %10704 = and i8 %10703, 1
  %10705 = xor i8 %10704, 1
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10705, i8* %10706, align 1
  %10707 = xor i32 %10696, %10689
  %10708 = xor i32 %10707, %10697
  %10709 = lshr i32 %10708, 4
  %10710 = trunc i32 %10709 to i8
  %10711 = and i8 %10710, 1
  %10712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10711, i8* %10712, align 1
  %10713 = icmp eq i32 %10697, 0
  %10714 = zext i1 %10713 to i8
  %10715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10714, i8* %10715, align 1
  %10716 = lshr i32 %10697, 31
  %10717 = trunc i32 %10716 to i8
  %10718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10717, i8* %10718, align 1
  %10719 = lshr i32 %10689, 31
  %10720 = lshr i32 %10696, 31
  %10721 = xor i32 %10720, %10719
  %10722 = xor i32 %10716, %10719
  %10723 = add i32 %10722, %10721
  %10724 = icmp eq i32 %10723, 2
  %10725 = zext i1 %10724 to i8
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10725, i8* %10726, align 1
  store %struct.Memory* %loadMem_47dc14, %struct.Memory** %MEMORY
  %loadMem_47dc1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10728 = getelementptr inbounds %struct.GPR, %struct.GPR* %10727, i32 0, i32 33
  %10729 = getelementptr inbounds %struct.Reg, %struct.Reg* %10728, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %10729 to i64*
  %10730 = load i64, i64* %PC.i65
  %10731 = add i64 %10730, 202
  %10732 = load i64, i64* %PC.i65
  %10733 = add i64 %10732, 6
  %10734 = load i64, i64* %PC.i65
  %10735 = add i64 %10734, 6
  store i64 %10735, i64* %PC.i65
  %10736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10737 = load i8, i8* %10736, align 1
  %10738 = icmp ne i8 %10737, 0
  %10739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10740 = load i8, i8* %10739, align 1
  %10741 = icmp ne i8 %10740, 0
  %10742 = xor i1 %10738, %10741
  %10743 = xor i1 %10742, true
  %10744 = zext i1 %10743 to i8
  store i8 %10744, i8* %BRANCH_TAKEN, align 1
  %10745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10746 = select i1 %10742, i64 %10733, i64 %10731
  store i64 %10746, i64* %10745, align 8
  store %struct.Memory* %loadMem_47dc1a, %struct.Memory** %MEMORY
  %loadBr_47dc1a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47dc1a = icmp eq i8 %loadBr_47dc1a, 1
  br i1 %cmpBr_47dc1a, label %block_.L_47dce4, label %block_47dc20

block_47dc20:                                     ; preds = %block_47dbfe
  %loadMem_47dc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10748 = getelementptr inbounds %struct.GPR, %struct.GPR* %10747, i32 0, i32 33
  %10749 = getelementptr inbounds %struct.Reg, %struct.Reg* %10748, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %10749 to i64*
  %10750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10751 = getelementptr inbounds %struct.GPR, %struct.GPR* %10750, i32 0, i32 1
  %10752 = getelementptr inbounds %struct.Reg, %struct.Reg* %10751, i32 0, i32 0
  %RAX.i64 = bitcast %union.anon* %10752 to i64*
  %10753 = load i64, i64* %PC.i63
  %10754 = add i64 %10753, 8
  store i64 %10754, i64* %PC.i63
  %10755 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %10755, i64* %RAX.i64, align 8
  store %struct.Memory* %loadMem_47dc20, %struct.Memory** %MEMORY
  %loadMem_47dc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10757 = getelementptr inbounds %struct.GPR, %struct.GPR* %10756, i32 0, i32 33
  %10758 = getelementptr inbounds %struct.Reg, %struct.Reg* %10757, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %10758 to i64*
  %10759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10760 = getelementptr inbounds %struct.GPR, %struct.GPR* %10759, i32 0, i32 1
  %10761 = getelementptr inbounds %struct.Reg, %struct.Reg* %10760, i32 0, i32 0
  %RAX.i62 = bitcast %union.anon* %10761 to i64*
  %10762 = load i64, i64* %RAX.i62
  %10763 = add i64 %10762, 72600
  %10764 = load i64, i64* %PC.i61
  %10765 = add i64 %10764, 7
  store i64 %10765, i64* %PC.i61
  %10766 = inttoptr i64 %10763 to i32*
  %10767 = load i32, i32* %10766
  %10768 = sub i32 %10767, 1
  %10769 = icmp ult i32 %10767, 1
  %10770 = zext i1 %10769 to i8
  %10771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10770, i8* %10771, align 1
  %10772 = and i32 %10768, 255
  %10773 = call i32 @llvm.ctpop.i32(i32 %10772)
  %10774 = trunc i32 %10773 to i8
  %10775 = and i8 %10774, 1
  %10776 = xor i8 %10775, 1
  %10777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10776, i8* %10777, align 1
  %10778 = xor i32 %10767, 1
  %10779 = xor i32 %10778, %10768
  %10780 = lshr i32 %10779, 4
  %10781 = trunc i32 %10780 to i8
  %10782 = and i8 %10781, 1
  %10783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10782, i8* %10783, align 1
  %10784 = icmp eq i32 %10768, 0
  %10785 = zext i1 %10784 to i8
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10785, i8* %10786, align 1
  %10787 = lshr i32 %10768, 31
  %10788 = trunc i32 %10787 to i8
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10788, i8* %10789, align 1
  %10790 = lshr i32 %10767, 31
  %10791 = xor i32 %10787, %10790
  %10792 = add i32 %10791, %10790
  %10793 = icmp eq i32 %10792, 2
  %10794 = zext i1 %10793 to i8
  %10795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10794, i8* %10795, align 1
  store %struct.Memory* %loadMem_47dc28, %struct.Memory** %MEMORY
  %loadMem_47dc2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10797 = getelementptr inbounds %struct.GPR, %struct.GPR* %10796, i32 0, i32 33
  %10798 = getelementptr inbounds %struct.Reg, %struct.Reg* %10797, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %10798 to i64*
  %10799 = load i64, i64* %PC.i60
  %10800 = add i64 %10799, 181
  %10801 = load i64, i64* %PC.i60
  %10802 = add i64 %10801, 6
  %10803 = load i64, i64* %PC.i60
  %10804 = add i64 %10803, 6
  store i64 %10804, i64* %PC.i60
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10806 = load i8, i8* %10805, align 1
  %10807 = icmp eq i8 %10806, 0
  %10808 = zext i1 %10807 to i8
  store i8 %10808, i8* %BRANCH_TAKEN, align 1
  %10809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10810 = select i1 %10807, i64 %10800, i64 %10802
  store i64 %10810, i64* %10809, align 8
  store %struct.Memory* %loadMem_47dc2f, %struct.Memory** %MEMORY
  %loadBr_47dc2f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47dc2f = icmp eq i8 %loadBr_47dc2f, 1
  br i1 %cmpBr_47dc2f, label %block_.L_47dce4, label %block_47dc35

block_47dc35:                                     ; preds = %block_47dc20
  %loadMem_47dc35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10812 = getelementptr inbounds %struct.GPR, %struct.GPR* %10811, i32 0, i32 33
  %10813 = getelementptr inbounds %struct.Reg, %struct.Reg* %10812, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %10813 to i64*
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10815 = getelementptr inbounds %struct.GPR, %struct.GPR* %10814, i32 0, i32 15
  %10816 = getelementptr inbounds %struct.Reg, %struct.Reg* %10815, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %10816 to i64*
  %10817 = load i64, i64* %RBP.i59
  %10818 = sub i64 %10817, 8
  %10819 = load i64, i64* %PC.i58
  %10820 = add i64 %10819, 4
  store i64 %10820, i64* %PC.i58
  %10821 = inttoptr i64 %10818 to i32*
  %10822 = load i32, i32* %10821
  %10823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10823, align 1
  %10824 = and i32 %10822, 255
  %10825 = call i32 @llvm.ctpop.i32(i32 %10824)
  %10826 = trunc i32 %10825 to i8
  %10827 = and i8 %10826, 1
  %10828 = xor i8 %10827, 1
  %10829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10828, i8* %10829, align 1
  %10830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10830, align 1
  %10831 = icmp eq i32 %10822, 0
  %10832 = zext i1 %10831 to i8
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10832, i8* %10833, align 1
  %10834 = lshr i32 %10822, 31
  %10835 = trunc i32 %10834 to i8
  %10836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10835, i8* %10836, align 1
  %10837 = lshr i32 %10822, 31
  %10838 = xor i32 %10834, %10837
  %10839 = add i32 %10838, %10837
  %10840 = icmp eq i32 %10839, 2
  %10841 = zext i1 %10840 to i8
  %10842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10841, i8* %10842, align 1
  store %struct.Memory* %loadMem_47dc35, %struct.Memory** %MEMORY
  %loadMem_47dc39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10844 = getelementptr inbounds %struct.GPR, %struct.GPR* %10843, i32 0, i32 33
  %10845 = getelementptr inbounds %struct.Reg, %struct.Reg* %10844, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %10845 to i64*
  %10846 = load i64, i64* %PC.i57
  %10847 = add i64 %10846, 56
  %10848 = load i64, i64* %PC.i57
  %10849 = add i64 %10848, 6
  %10850 = load i64, i64* %PC.i57
  %10851 = add i64 %10850, 6
  store i64 %10851, i64* %PC.i57
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10853 = load i8, i8* %10852, align 1
  store i8 %10853, i8* %BRANCH_TAKEN, align 1
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10855 = icmp ne i8 %10853, 0
  %10856 = select i1 %10855, i64 %10847, i64 %10849
  store i64 %10856, i64* %10854, align 8
  store %struct.Memory* %loadMem_47dc39, %struct.Memory** %MEMORY
  %loadBr_47dc39 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_47dc39 = icmp eq i8 %loadBr_47dc39, 1
  br i1 %cmpBr_47dc39, label %block_.L_47dc71, label %block_47dc3f

block_47dc3f:                                     ; preds = %block_47dc35
  %loadMem_47dc3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10858 = getelementptr inbounds %struct.GPR, %struct.GPR* %10857, i32 0, i32 33
  %10859 = getelementptr inbounds %struct.Reg, %struct.Reg* %10858, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %10859 to i64*
  %10860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10861 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10860, i64 0, i64 0
  %YMM0.i56 = bitcast %union.VectorReg* %10861 to %"class.std::bitset"*
  %10862 = bitcast %"class.std::bitset"* %YMM0.i56 to i8*
  %10863 = load i64, i64* %PC.i55
  %10864 = add i64 %10863, ptrtoint (%G_0x33cb1__rip__type* @G_0x33cb1__rip_ to i64)
  %10865 = load i64, i64* %PC.i55
  %10866 = add i64 %10865, 8
  store i64 %10866, i64* %PC.i55
  %10867 = inttoptr i64 %10864 to double*
  %10868 = load double, double* %10867
  %10869 = bitcast i8* %10862 to double*
  store double %10868, double* %10869, align 1
  %10870 = getelementptr inbounds i8, i8* %10862, i64 8
  %10871 = bitcast i8* %10870 to double*
  store double 0.000000e+00, double* %10871, align 1
  store %struct.Memory* %loadMem_47dc3f, %struct.Memory** %MEMORY
  %loadMem_47dc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10873 = getelementptr inbounds %struct.GPR, %struct.GPR* %10872, i32 0, i32 33
  %10874 = getelementptr inbounds %struct.Reg, %struct.Reg* %10873, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %10874 to i64*
  %10875 = load i64, i64* %PC.i54
  %10876 = add i64 %10875, 11
  store i64 %10876, i64* %PC.i54
  store i32 0, i32* bitcast (%G_0x6cc5e8_type* @G_0x6cc5e8 to i32*)
  store %struct.Memory* %loadMem_47dc47, %struct.Memory** %MEMORY
  %loadMem_47dc52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10878 = getelementptr inbounds %struct.GPR, %struct.GPR* %10877, i32 0, i32 33
  %10879 = getelementptr inbounds %struct.Reg, %struct.Reg* %10878, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %10879 to i64*
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10881 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10880, i64 0, i64 1
  %YMM1.i53 = bitcast %union.VectorReg* %10881 to %"class.std::bitset"*
  %10882 = bitcast %"class.std::bitset"* %YMM1.i53 to i8*
  %10883 = load i64, i64* %PC.i52
  %10884 = add i64 %10883, 9
  store i64 %10884, i64* %PC.i52
  %10885 = load i32, i32* bitcast (%G_0x6cc5e4_type* @G_0x6cc5e4 to i32*)
  %10886 = sitofp i32 %10885 to double
  %10887 = bitcast i8* %10882 to double*
  store double %10886, double* %10887, align 1
  store %struct.Memory* %loadMem_47dc52, %struct.Memory** %MEMORY
  %loadMem_47dc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10889 = getelementptr inbounds %struct.GPR, %struct.GPR* %10888, i32 0, i32 33
  %10890 = getelementptr inbounds %struct.Reg, %struct.Reg* %10889, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %10890 to i64*
  %10891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10892 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10891, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %10892 to %"class.std::bitset"*
  %10893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10894 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10893, i64 0, i64 0
  %XMM0.i51 = bitcast %union.VectorReg* %10894 to %union.vec128_t*
  %10895 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %10896 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %10897 = bitcast %union.vec128_t* %XMM0.i51 to i8*
  %10898 = load i64, i64* %PC.i50
  %10899 = add i64 %10898, 4
  store i64 %10899, i64* %PC.i50
  %10900 = bitcast i8* %10896 to double*
  %10901 = load double, double* %10900, align 1
  %10902 = getelementptr inbounds i8, i8* %10896, i64 8
  %10903 = bitcast i8* %10902 to i64*
  %10904 = load i64, i64* %10903, align 1
  %10905 = bitcast i8* %10897 to double*
  %10906 = load double, double* %10905, align 1
  %10907 = fmul double %10901, %10906
  %10908 = bitcast i8* %10895 to double*
  store double %10907, double* %10908, align 1
  %10909 = getelementptr inbounds i8, i8* %10895, i64 8
  %10910 = bitcast i8* %10909 to i64*
  store i64 %10904, i64* %10910, align 1
  store %struct.Memory* %loadMem_47dc5b, %struct.Memory** %MEMORY
  %loadMem_47dc5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10912 = getelementptr inbounds %struct.GPR, %struct.GPR* %10911, i32 0, i32 33
  %10913 = getelementptr inbounds %struct.Reg, %struct.Reg* %10912, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %10913 to i64*
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10915 = getelementptr inbounds %struct.GPR, %struct.GPR* %10914, i32 0, i32 1
  %10916 = getelementptr inbounds %struct.Reg, %struct.Reg* %10915, i32 0, i32 0
  %RAX.i49 = bitcast %union.anon* %10916 to i64*
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10918 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10917, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %10918 to %union.vec128_t*
  %10919 = bitcast %union.vec128_t* %XMM1.i to i8*
  %10920 = load i64, i64* %PC.i48
  %10921 = add i64 %10920, 5
  store i64 %10921, i64* %PC.i48
  %10922 = bitcast i8* %10919 to double*
  %10923 = load double, double* %10922, align 1
  %10924 = call double @llvm.trunc.f64(double %10923)
  %10925 = call double @llvm.fabs.f64(double %10924)
  %10926 = fcmp ogt double %10925, 0x43E0000000000000
  %10927 = fptosi double %10924 to i64
  %10928 = select i1 %10926, i64 -9223372036854775808, i64 %10927
  store i64 %10928, i64* %RAX.i49, align 8
  store %struct.Memory* %loadMem_47dc5f, %struct.Memory** %MEMORY
  %loadMem_47dc64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10930 = getelementptr inbounds %struct.GPR, %struct.GPR* %10929, i32 0, i32 33
  %10931 = getelementptr inbounds %struct.Reg, %struct.Reg* %10930, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %10931 to i64*
  %10932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10933 = getelementptr inbounds %struct.GPR, %struct.GPR* %10932, i32 0, i32 1
  %10934 = getelementptr inbounds %struct.Reg, %struct.Reg* %10933, i32 0, i32 0
  %RAX.i47 = bitcast %union.anon* %10934 to i64*
  %10935 = load i64, i64* %RAX.i47
  %10936 = load i64, i64* %PC.i46
  %10937 = add i64 %10936, 8
  store i64 %10937, i64* %PC.i46
  store i64 %10935, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47dc64, %struct.Memory** %MEMORY
  %loadMem_47dc6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10939 = getelementptr inbounds %struct.GPR, %struct.GPR* %10938, i32 0, i32 33
  %10940 = getelementptr inbounds %struct.Reg, %struct.Reg* %10939, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %10940 to i64*
  %10941 = load i64, i64* %PC.i45
  %10942 = add i64 %10941, 115
  %10943 = load i64, i64* %PC.i45
  %10944 = add i64 %10943, 5
  store i64 %10944, i64* %PC.i45
  %10945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10942, i64* %10945, align 8
  store %struct.Memory* %loadMem_47dc6c, %struct.Memory** %MEMORY
  br label %block_.L_47dcdf

block_.L_47dc71:                                  ; preds = %block_47dc35
  %loadMem_47dc71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10947 = getelementptr inbounds %struct.GPR, %struct.GPR* %10946, i32 0, i32 33
  %10948 = getelementptr inbounds %struct.Reg, %struct.Reg* %10947, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %10948 to i64*
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 1
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %10951 to i64*
  %10952 = load i64, i64* %PC.i43
  %10953 = add i64 %10952, 5
  store i64 %10953, i64* %PC.i43
  store i64 2, i64* %RAX.i44, align 8
  store %struct.Memory* %loadMem_47dc71, %struct.Memory** %MEMORY
  %loadMem_47dc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10955 = getelementptr inbounds %struct.GPR, %struct.GPR* %10954, i32 0, i32 33
  %10956 = getelementptr inbounds %struct.Reg, %struct.Reg* %10955, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %10956 to i64*
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10958 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10957, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %10958 to %"class.std::bitset"*
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10960 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %10959, i64 0, i64 0
  %XMM0.i42 = bitcast %union.VectorReg* %10960 to %union.vec128_t*
  %10961 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %10962 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %10963 = bitcast %union.vec128_t* %XMM0.i42 to i8*
  %10964 = load i64, i64* %PC.i41
  %10965 = add i64 %10964, 3
  store i64 %10965, i64* %PC.i41
  %10966 = bitcast i8* %10962 to i64*
  %10967 = load i64, i64* %10966, align 1
  %10968 = getelementptr inbounds i8, i8* %10962, i64 8
  %10969 = bitcast i8* %10968 to i64*
  %10970 = load i64, i64* %10969, align 1
  %10971 = bitcast i8* %10963 to i64*
  %10972 = load i64, i64* %10971, align 1
  %10973 = getelementptr inbounds i8, i8* %10963, i64 8
  %10974 = bitcast i8* %10973 to i64*
  %10975 = load i64, i64* %10974, align 1
  %10976 = xor i64 %10972, %10967
  %10977 = xor i64 %10975, %10970
  %10978 = trunc i64 %10976 to i32
  %10979 = lshr i64 %10976, 32
  %10980 = trunc i64 %10979 to i32
  %10981 = bitcast i8* %10961 to i32*
  store i32 %10978, i32* %10981, align 1
  %10982 = getelementptr inbounds i8, i8* %10961, i64 4
  %10983 = bitcast i8* %10982 to i32*
  store i32 %10980, i32* %10983, align 1
  %10984 = trunc i64 %10977 to i32
  %10985 = getelementptr inbounds i8, i8* %10961, i64 8
  %10986 = bitcast i8* %10985 to i32*
  store i32 %10984, i32* %10986, align 1
  %10987 = lshr i64 %10977, 32
  %10988 = trunc i64 %10987 to i32
  %10989 = getelementptr inbounds i8, i8* %10961, i64 12
  %10990 = bitcast i8* %10989 to i32*
  store i32 %10988, i32* %10990, align 1
  store %struct.Memory* %loadMem_47dc76, %struct.Memory** %MEMORY
  %loadMem_47dc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10992 = getelementptr inbounds %struct.GPR, %struct.GPR* %10991, i32 0, i32 33
  %10993 = getelementptr inbounds %struct.Reg, %struct.Reg* %10992, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %10993 to i64*
  %10994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10995 = getelementptr inbounds %struct.GPR, %struct.GPR* %10994, i32 0, i32 5
  %10996 = getelementptr inbounds %struct.Reg, %struct.Reg* %10995, i32 0, i32 0
  %RCX.i40 = bitcast %union.anon* %10996 to i64*
  %10997 = load i64, i64* %PC.i39
  %10998 = add i64 %10997, 7
  store i64 %10998, i64* %PC.i39
  %10999 = load i32, i32* bitcast (%G_0x6cc5e4_type* @G_0x6cc5e4 to i32*)
  %11000 = zext i32 %10999 to i64
  store i64 %11000, i64* %RCX.i40, align 8
  store %struct.Memory* %loadMem_47dc79, %struct.Memory** %MEMORY
  %loadMem_47dc80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11002 = getelementptr inbounds %struct.GPR, %struct.GPR* %11001, i32 0, i32 33
  %11003 = getelementptr inbounds %struct.Reg, %struct.Reg* %11002, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %11003 to i64*
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11005 = getelementptr inbounds %struct.GPR, %struct.GPR* %11004, i32 0, i32 5
  %11006 = getelementptr inbounds %struct.Reg, %struct.Reg* %11005, i32 0, i32 0
  %RCX.i38 = bitcast %union.anon* %11006 to i64*
  %11007 = load i64, i64* %RCX.i38
  %11008 = load i64, i64* %PC.i37
  %11009 = add i64 %11008, 7
  store i64 %11009, i64* %PC.i37
  %11010 = trunc i64 %11007 to i32
  %11011 = load i32, i32* bitcast (%G_0x6cc5e8_type* @G_0x6cc5e8 to i32*)
  %11012 = sub i32 %11010, %11011
  %11013 = zext i32 %11012 to i64
  store i64 %11013, i64* %RCX.i38, align 8
  %11014 = icmp ult i32 %11010, %11011
  %11015 = zext i1 %11014 to i8
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11015, i8* %11016, align 1
  %11017 = and i32 %11012, 255
  %11018 = call i32 @llvm.ctpop.i32(i32 %11017)
  %11019 = trunc i32 %11018 to i8
  %11020 = and i8 %11019, 1
  %11021 = xor i8 %11020, 1
  %11022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11021, i8* %11022, align 1
  %11023 = xor i32 %11011, %11010
  %11024 = xor i32 %11023, %11012
  %11025 = lshr i32 %11024, 4
  %11026 = trunc i32 %11025 to i8
  %11027 = and i8 %11026, 1
  %11028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11027, i8* %11028, align 1
  %11029 = icmp eq i32 %11012, 0
  %11030 = zext i1 %11029 to i8
  %11031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11030, i8* %11031, align 1
  %11032 = lshr i32 %11012, 31
  %11033 = trunc i32 %11032 to i8
  %11034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11033, i8* %11034, align 1
  %11035 = lshr i32 %11010, 31
  %11036 = lshr i32 %11011, 31
  %11037 = xor i32 %11036, %11035
  %11038 = xor i32 %11032, %11035
  %11039 = add i32 %11038, %11037
  %11040 = icmp eq i32 %11039, 2
  %11041 = zext i1 %11040 to i8
  %11042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11041, i8* %11042, align 1
  store %struct.Memory* %loadMem_47dc80, %struct.Memory** %MEMORY
  %loadMem_47dc87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11044 = getelementptr inbounds %struct.GPR, %struct.GPR* %11043, i32 0, i32 33
  %11045 = getelementptr inbounds %struct.Reg, %struct.Reg* %11044, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %11045 to i64*
  %11046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11047 = getelementptr inbounds %struct.GPR, %struct.GPR* %11046, i32 0, i32 5
  %11048 = getelementptr inbounds %struct.Reg, %struct.Reg* %11047, i32 0, i32 0
  %ECX.i35 = bitcast %union.anon* %11048 to i32*
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11050 = getelementptr inbounds %struct.GPR, %struct.GPR* %11049, i32 0, i32 7
  %11051 = getelementptr inbounds %struct.Reg, %struct.Reg* %11050, i32 0, i32 0
  %RDX.i36 = bitcast %union.anon* %11051 to i64*
  %11052 = load i32, i32* %ECX.i35
  %11053 = zext i32 %11052 to i64
  %11054 = load i64, i64* %PC.i34
  %11055 = add i64 %11054, 3
  store i64 %11055, i64* %PC.i34
  %11056 = shl i64 %11053, 32
  %11057 = ashr exact i64 %11056, 32
  store i64 %11057, i64* %RDX.i36, align 8
  store %struct.Memory* %loadMem_47dc87, %struct.Memory** %MEMORY
  %loadMem_47dc8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11059 = getelementptr inbounds %struct.GPR, %struct.GPR* %11058, i32 0, i32 33
  %11060 = getelementptr inbounds %struct.Reg, %struct.Reg* %11059, i32 0, i32 0
  %PC.i32 = bitcast %union.anon* %11060 to i64*
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11062 = getelementptr inbounds %struct.GPR, %struct.GPR* %11061, i32 0, i32 7
  %11063 = getelementptr inbounds %struct.Reg, %struct.Reg* %11062, i32 0, i32 0
  %RDX.i33 = bitcast %union.anon* %11063 to i64*
  %11064 = load i64, i64* %RDX.i33
  %11065 = load i64, i64* %PC.i32
  %11066 = add i64 %11065, 8
  store i64 %11066, i64* %PC.i32
  store i64 %11064, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store %struct.Memory* %loadMem_47dc8a, %struct.Memory** %MEMORY
  %loadMem_47dc92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11068 = getelementptr inbounds %struct.GPR, %struct.GPR* %11067, i32 0, i32 33
  %11069 = getelementptr inbounds %struct.Reg, %struct.Reg* %11068, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %11069 to i64*
  %11070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11071 = getelementptr inbounds %struct.GPR, %struct.GPR* %11070, i32 0, i32 7
  %11072 = getelementptr inbounds %struct.Reg, %struct.Reg* %11071, i32 0, i32 0
  %RDX.i31 = bitcast %union.anon* %11072 to i64*
  %11073 = load i64, i64* %PC.i30
  %11074 = add i64 %11073, 8
  store i64 %11074, i64* %PC.i30
  %11075 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11075, i64* %RDX.i31, align 8
  store %struct.Memory* %loadMem_47dc92, %struct.Memory** %MEMORY
  %loadMem_47dc9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11077 = getelementptr inbounds %struct.GPR, %struct.GPR* %11076, i32 0, i32 33
  %11078 = getelementptr inbounds %struct.Reg, %struct.Reg* %11077, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %11078 to i64*
  %11079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11080 = getelementptr inbounds %struct.GPR, %struct.GPR* %11079, i32 0, i32 7
  %11081 = getelementptr inbounds %struct.Reg, %struct.Reg* %11080, i32 0, i32 0
  %RDX.i29 = bitcast %union.anon* %11081 to i64*
  %11082 = load i64, i64* %RDX.i29
  %11083 = add i64 %11082, 72532
  %11084 = load i64, i64* %PC.i28
  %11085 = add i64 %11084, 10
  store i64 %11085, i64* %PC.i28
  %11086 = inttoptr i64 %11083 to i32*
  store i32 0, i32* %11086
  store %struct.Memory* %loadMem_47dc9a, %struct.Memory** %MEMORY
  %loadMem_47dca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11088 = getelementptr inbounds %struct.GPR, %struct.GPR* %11087, i32 0, i32 33
  %11089 = getelementptr inbounds %struct.Reg, %struct.Reg* %11088, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %11089 to i64*
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11091 = getelementptr inbounds %struct.GPR, %struct.GPR* %11090, i32 0, i32 7
  %11092 = getelementptr inbounds %struct.Reg, %struct.Reg* %11091, i32 0, i32 0
  %RDX.i27 = bitcast %union.anon* %11092 to i64*
  %11093 = load i64, i64* %PC.i26
  %11094 = add i64 %11093, 8
  store i64 %11094, i64* %PC.i26
  %11095 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11095, i64* %RDX.i27, align 8
  store %struct.Memory* %loadMem_47dca4, %struct.Memory** %MEMORY
  %loadMem_47dcac = load %struct.Memory*, %struct.Memory** %MEMORY
  %11096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11097 = getelementptr inbounds %struct.GPR, %struct.GPR* %11096, i32 0, i32 33
  %11098 = getelementptr inbounds %struct.Reg, %struct.Reg* %11097, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %11098 to i64*
  %11099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11100 = getelementptr inbounds %struct.GPR, %struct.GPR* %11099, i32 0, i32 7
  %11101 = getelementptr inbounds %struct.Reg, %struct.Reg* %11100, i32 0, i32 0
  %RDX.i25 = bitcast %union.anon* %11101 to i64*
  %11102 = load i64, i64* %RDX.i25
  %11103 = add i64 %11102, 72536
  %11104 = load i64, i64* %PC.i24
  %11105 = add i64 %11104, 10
  store i64 %11105, i64* %PC.i24
  %11106 = inttoptr i64 %11103 to i32*
  store i32 0, i32* %11106
  store %struct.Memory* %loadMem_47dcac, %struct.Memory** %MEMORY
  %loadMem_47dcb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11108 = getelementptr inbounds %struct.GPR, %struct.GPR* %11107, i32 0, i32 33
  %11109 = getelementptr inbounds %struct.Reg, %struct.Reg* %11108, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %11109 to i64*
  %11110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11111 = getelementptr inbounds %struct.GPR, %struct.GPR* %11110, i32 0, i32 7
  %11112 = getelementptr inbounds %struct.Reg, %struct.Reg* %11111, i32 0, i32 0
  %RDX.i23 = bitcast %union.anon* %11112 to i64*
  %11113 = load i64, i64* %PC.i22
  %11114 = add i64 %11113, 8
  store i64 %11114, i64* %PC.i22
  %11115 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11115, i64* %RDX.i23, align 8
  store %struct.Memory* %loadMem_47dcb6, %struct.Memory** %MEMORY
  %loadMem_47dcbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11117 = getelementptr inbounds %struct.GPR, %struct.GPR* %11116, i32 0, i32 33
  %11118 = getelementptr inbounds %struct.Reg, %struct.Reg* %11117, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %11118 to i64*
  %11119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11120 = getelementptr inbounds %struct.GPR, %struct.GPR* %11119, i32 0, i32 7
  %11121 = getelementptr inbounds %struct.Reg, %struct.Reg* %11120, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11121 to i64*
  %11122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %11123 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %11122, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %11123 to %union.vec128_t*
  %11124 = load i64, i64* %RDX.i
  %11125 = add i64 %11124, 72544
  %11126 = bitcast %union.vec128_t* %XMM0.i to i8*
  %11127 = load i64, i64* %PC.i21
  %11128 = add i64 %11127, 8
  store i64 %11128, i64* %PC.i21
  %11129 = bitcast i8* %11126 to double*
  %11130 = load double, double* %11129, align 1
  %11131 = inttoptr i64 %11125 to double*
  store double %11130, double* %11131
  store %struct.Memory* %loadMem_47dcbe, %struct.Memory** %MEMORY
  %loadMem_47dcc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11133 = getelementptr inbounds %struct.GPR, %struct.GPR* %11132, i32 0, i32 33
  %11134 = getelementptr inbounds %struct.Reg, %struct.Reg* %11133, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %11134 to i64*
  %11135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11136 = getelementptr inbounds %struct.GPR, %struct.GPR* %11135, i32 0, i32 5
  %11137 = getelementptr inbounds %struct.Reg, %struct.Reg* %11136, i32 0, i32 0
  %RCX.i20 = bitcast %union.anon* %11137 to i64*
  %11138 = load i64, i64* %PC.i19
  %11139 = add i64 %11138, 7
  store i64 %11139, i64* %PC.i19
  %11140 = load i32, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  %11141 = zext i32 %11140 to i64
  store i64 %11141, i64* %RCX.i20, align 8
  store %struct.Memory* %loadMem_47dcc6, %struct.Memory** %MEMORY
  %loadMem_47dccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11143 = getelementptr inbounds %struct.GPR, %struct.GPR* %11142, i32 0, i32 33
  %11144 = getelementptr inbounds %struct.Reg, %struct.Reg* %11143, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %11144 to i64*
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11146 = getelementptr inbounds %struct.GPR, %struct.GPR* %11145, i32 0, i32 1
  %11147 = getelementptr inbounds %struct.Reg, %struct.Reg* %11146, i32 0, i32 0
  %EAX.i17 = bitcast %union.anon* %11147 to i32*
  %11148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11149 = getelementptr inbounds %struct.GPR, %struct.GPR* %11148, i32 0, i32 15
  %11150 = getelementptr inbounds %struct.Reg, %struct.Reg* %11149, i32 0, i32 0
  %RBP.i18 = bitcast %union.anon* %11150 to i64*
  %11151 = load i64, i64* %RBP.i18
  %11152 = sub i64 %11151, 120
  %11153 = load i32, i32* %EAX.i17
  %11154 = zext i32 %11153 to i64
  %11155 = load i64, i64* %PC.i16
  %11156 = add i64 %11155, 3
  store i64 %11156, i64* %PC.i16
  %11157 = inttoptr i64 %11152 to i32*
  store i32 %11153, i32* %11157
  store %struct.Memory* %loadMem_47dccd, %struct.Memory** %MEMORY
  %loadMem_47dcd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11159 = getelementptr inbounds %struct.GPR, %struct.GPR* %11158, i32 0, i32 33
  %11160 = getelementptr inbounds %struct.Reg, %struct.Reg* %11159, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %11160 to i64*
  %11161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11162 = getelementptr inbounds %struct.GPR, %struct.GPR* %11161, i32 0, i32 5
  %11163 = getelementptr inbounds %struct.Reg, %struct.Reg* %11162, i32 0, i32 0
  %ECX.i15 = bitcast %union.anon* %11163 to i32*
  %11164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11165 = getelementptr inbounds %struct.GPR, %struct.GPR* %11164, i32 0, i32 1
  %11166 = getelementptr inbounds %struct.Reg, %struct.Reg* %11165, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %11166 to i64*
  %11167 = load i32, i32* %ECX.i15
  %11168 = zext i32 %11167 to i64
  %11169 = load i64, i64* %PC.i14
  %11170 = add i64 %11169, 2
  store i64 %11170, i64* %PC.i14
  %11171 = and i64 %11168, 4294967295
  store i64 %11171, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_47dcd0, %struct.Memory** %MEMORY
  %loadMem_47dcd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11173 = getelementptr inbounds %struct.GPR, %struct.GPR* %11172, i32 0, i32 33
  %11174 = getelementptr inbounds %struct.Reg, %struct.Reg* %11173, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %11174 to i64*
  %11175 = load i64, i64* %PC.i13
  %11176 = add i64 %11175, 1
  store i64 %11176, i64* %PC.i13
  %11177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11179 = bitcast %union.anon* %11178 to i32*
  %11180 = load i32, i32* %11179, align 8
  %11181 = sext i32 %11180 to i64
  %11182 = lshr i64 %11181, 32
  store i64 %11182, i64* %11177, align 8
  store %struct.Memory* %loadMem_47dcd2, %struct.Memory** %MEMORY
  %loadMem_47dcd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11184 = getelementptr inbounds %struct.GPR, %struct.GPR* %11183, i32 0, i32 33
  %11185 = getelementptr inbounds %struct.Reg, %struct.Reg* %11184, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %11185 to i64*
  %11186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11187 = getelementptr inbounds %struct.GPR, %struct.GPR* %11186, i32 0, i32 5
  %11188 = getelementptr inbounds %struct.Reg, %struct.Reg* %11187, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %11188 to i64*
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11190 = getelementptr inbounds %struct.GPR, %struct.GPR* %11189, i32 0, i32 15
  %11191 = getelementptr inbounds %struct.Reg, %struct.Reg* %11190, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %11191 to i64*
  %11192 = load i64, i64* %RBP.i12
  %11193 = sub i64 %11192, 120
  %11194 = load i64, i64* %PC.i11
  %11195 = add i64 %11194, 3
  store i64 %11195, i64* %PC.i11
  %11196 = inttoptr i64 %11193 to i32*
  %11197 = load i32, i32* %11196
  %11198 = zext i32 %11197 to i64
  store i64 %11198, i64* %RCX.i, align 8
  store %struct.Memory* %loadMem_47dcd3, %struct.Memory** %MEMORY
  %loadMem_47dcd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11200 = getelementptr inbounds %struct.GPR, %struct.GPR* %11199, i32 0, i32 33
  %11201 = getelementptr inbounds %struct.Reg, %struct.Reg* %11200, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %11201 to i64*
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11203 = getelementptr inbounds %struct.GPR, %struct.GPR* %11202, i32 0, i32 5
  %11204 = getelementptr inbounds %struct.Reg, %struct.Reg* %11203, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %11204 to i32*
  %11205 = load i32, i32* %ECX.i
  %11206 = zext i32 %11205 to i64
  %11207 = load i64, i64* %PC.i7
  %11208 = add i64 %11207, 2
  store i64 %11208, i64* %PC.i7
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %11210 = bitcast %union.anon* %11209 to i32*
  %11211 = load i32, i32* %11210, align 8
  %11212 = zext i32 %11211 to i64
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %11214 = bitcast %union.anon* %11213 to i32*
  %11215 = load i32, i32* %11214, align 8
  %11216 = zext i32 %11215 to i64
  %11217 = shl i64 %11206, 32
  %11218 = ashr exact i64 %11217, 32
  %11219 = shl i64 %11216, 32
  %11220 = or i64 %11219, %11212
  %11221 = sdiv i64 %11220, %11218
  %11222 = shl i64 %11221, 32
  %11223 = ashr exact i64 %11222, 32
  %11224 = icmp eq i64 %11221, %11223
  br i1 %11224, label %11229, label %11225

; <label>:11225:                                  ; preds = %block_.L_47dc71
  %11226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11227 = load i64, i64* %11226, align 8
  %11228 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %11227, %struct.Memory* %loadMem_47dcd6)
  br label %routine_idivl__ecx.exit

; <label>:11229:                                  ; preds = %block_.L_47dc71
  %11230 = srem i64 %11220, %11218
  %11231 = getelementptr inbounds %union.anon, %union.anon* %11209, i64 0, i32 0
  %11232 = and i64 %11221, 4294967295
  store i64 %11232, i64* %11231, align 8
  %11233 = getelementptr inbounds %union.anon, %union.anon* %11213, i64 0, i32 0
  %11234 = and i64 %11230, 4294967295
  store i64 %11234, i64* %11233, align 8
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11235, align 1
  %11236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %11236, align 1
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11237, align 1
  %11238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11238, align 1
  %11239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %11239, align 1
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11240, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %11225, %11229
  %11241 = phi %struct.Memory* [ %11228, %11225 ], [ %loadMem_47dcd6, %11229 ]
  store %struct.Memory* %11241, %struct.Memory** %MEMORY
  %loadMem_47dcd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11243 = getelementptr inbounds %struct.GPR, %struct.GPR* %11242, i32 0, i32 33
  %11244 = getelementptr inbounds %struct.Reg, %struct.Reg* %11243, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %11244 to i64*
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11246 = getelementptr inbounds %struct.GPR, %struct.GPR* %11245, i32 0, i32 1
  %11247 = getelementptr inbounds %struct.Reg, %struct.Reg* %11246, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %11247 to i32*
  %11248 = load i32, i32* %EAX.i
  %11249 = zext i32 %11248 to i64
  %11250 = load i64, i64* %PC.i6
  %11251 = add i64 %11250, 7
  store i64 %11251, i64* %PC.i6
  store i32 %11248, i32* bitcast (%G_0x6f9688_type* @G_0x6f9688 to i32*)
  store %struct.Memory* %loadMem_47dcd8, %struct.Memory** %MEMORY
  br label %block_.L_47dcdf

block_.L_47dcdf:                                  ; preds = %routine_idivl__ecx.exit, %block_47dc3f
  %loadMem_47dcdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11253 = getelementptr inbounds %struct.GPR, %struct.GPR* %11252, i32 0, i32 33
  %11254 = getelementptr inbounds %struct.Reg, %struct.Reg* %11253, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %11254 to i64*
  %11255 = load i64, i64* %PC.i5
  %11256 = add i64 %11255, 5
  %11257 = load i64, i64* %PC.i5
  %11258 = add i64 %11257, 5
  store i64 %11258, i64* %PC.i5
  %11259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11256, i64* %11259, align 8
  store %struct.Memory* %loadMem_47dcdf, %struct.Memory** %MEMORY
  br label %block_.L_47dce4

block_.L_47dce4:                                  ; preds = %block_.L_47dcdf, %block_47dc20, %block_47dbfe, %block_.L_47dbec
  %loadMem_47dce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11261 = getelementptr inbounds %struct.GPR, %struct.GPR* %11260, i32 0, i32 33
  %11262 = getelementptr inbounds %struct.Reg, %struct.Reg* %11261, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %11262 to i64*
  %11263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11264 = getelementptr inbounds %struct.GPR, %struct.GPR* %11263, i32 0, i32 13
  %11265 = getelementptr inbounds %struct.Reg, %struct.Reg* %11264, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %11265 to i64*
  %11266 = load i64, i64* %RSP.i
  %11267 = load i64, i64* %PC.i4
  %11268 = add i64 %11267, 7
  store i64 %11268, i64* %PC.i4
  %11269 = add i64 128, %11266
  store i64 %11269, i64* %RSP.i, align 8
  %11270 = icmp ult i64 %11269, %11266
  %11271 = icmp ult i64 %11269, 128
  %11272 = or i1 %11270, %11271
  %11273 = zext i1 %11272 to i8
  %11274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11273, i8* %11274, align 1
  %11275 = trunc i64 %11269 to i32
  %11276 = and i32 %11275, 255
  %11277 = call i32 @llvm.ctpop.i32(i32 %11276)
  %11278 = trunc i32 %11277 to i8
  %11279 = and i8 %11278, 1
  %11280 = xor i8 %11279, 1
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11280, i8* %11281, align 1
  %11282 = xor i64 128, %11266
  %11283 = xor i64 %11282, %11269
  %11284 = lshr i64 %11283, 4
  %11285 = trunc i64 %11284 to i8
  %11286 = and i8 %11285, 1
  %11287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11286, i8* %11287, align 1
  %11288 = icmp eq i64 %11269, 0
  %11289 = zext i1 %11288 to i8
  %11290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11289, i8* %11290, align 1
  %11291 = lshr i64 %11269, 63
  %11292 = trunc i64 %11291 to i8
  %11293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11292, i8* %11293, align 1
  %11294 = lshr i64 %11266, 63
  %11295 = xor i64 %11291, %11294
  %11296 = add i64 %11295, %11291
  %11297 = icmp eq i64 %11296, 2
  %11298 = zext i1 %11297 to i8
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11298, i8* %11299, align 1
  store %struct.Memory* %loadMem_47dce4, %struct.Memory** %MEMORY
  %loadMem_47dceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11301 = getelementptr inbounds %struct.GPR, %struct.GPR* %11300, i32 0, i32 33
  %11302 = getelementptr inbounds %struct.Reg, %struct.Reg* %11301, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %11302 to i64*
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11304 = getelementptr inbounds %struct.GPR, %struct.GPR* %11303, i32 0, i32 15
  %11305 = getelementptr inbounds %struct.Reg, %struct.Reg* %11304, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %11305 to i64*
  %11306 = load i64, i64* %PC.i2
  %11307 = add i64 %11306, 1
  store i64 %11307, i64* %PC.i2
  %11308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11309 = load i64, i64* %11308, align 8
  %11310 = add i64 %11309, 8
  %11311 = inttoptr i64 %11309 to i64*
  %11312 = load i64, i64* %11311
  store i64 %11312, i64* %RBP.i3, align 8
  store i64 %11310, i64* %11308, align 8
  store %struct.Memory* %loadMem_47dceb, %struct.Memory** %MEMORY
  %loadMem_47dcec = load %struct.Memory*, %struct.Memory** %MEMORY
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11314 = getelementptr inbounds %struct.GPR, %struct.GPR* %11313, i32 0, i32 33
  %11315 = getelementptr inbounds %struct.Reg, %struct.Reg* %11314, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %11315 to i64*
  %11316 = load i64, i64* %PC.i1
  %11317 = add i64 %11316, 1
  store i64 %11317, i64* %PC.i1
  %11318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11320 = load i64, i64* %11319, align 8
  %11321 = inttoptr i64 %11320 to i64*
  %11322 = load i64, i64* %11321
  store i64 %11322, i64* %11318, align 8
  %11323 = add i64 %11320, 8
  store i64 %11323, i64* %11319, align 8
  store %struct.Memory* %loadMem_47dcec, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_47dcec
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x80___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 128
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 128
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 128, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb8f8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb8f8_type* @G_0x6cb8f8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0xb44__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47cd3d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11ba0__rax____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72608
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_0x11bac__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 72620
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_movl__eax__0x6f80a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11ba8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72616
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0xcb4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 3252
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47cdc9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3a__0x11b74__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72564
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 58
  %16 = icmp ult i32 %14, 58
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 58
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47cd98(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x34ba7__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x34ba7__rip__type* @G_0x34ba7__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_0x6ccf88___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %18 = fmul double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6ccf88(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47cdc4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3b__0x11b74__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72564
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 59
  %16 = icmp ult i32 %14, 59
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 59
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47cdbf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6ccf88___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6f6f80(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6f6f80_type* @G_0x6f6f80 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47cdc9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47cddd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47db00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x24eb12__rip____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x24eb12__rip__type* @G_0x24eb12__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x18__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %ECX
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = and i64 %12, %10
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17, align 1
  %18 = and i32 %16, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %16, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %16, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47ce15(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ce01(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d3a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d544(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6f6f80___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6f6f80_type* @G_0x6f6f80 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd_0x6ccf88___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  %13 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %14 = fcmp uno double %12, %13
  br i1 %14, label %15, label %27

; <label>:15:                                     ; preds = %block_400488
  %16 = fadd double %12, %13
  %17 = bitcast double %16 to i64
  %18 = and i64 %17, 9221120237041090560
  %19 = icmp eq i64 %18, 9218868437227405312
  %20 = and i64 %17, 2251799813685247
  %21 = icmp ne i64 %20, 0
  %22 = and i1 %19, %21
  br i1 %22, label %23, label %33

; <label>:23:                                     ; preds = %15
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %25, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_.exit

; <label>:27:                                     ; preds = %block_400488
  %28 = fcmp ogt double %12, %13
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %27
  %30 = fcmp olt double %12, %13
  br i1 %30, label %33, label %31

; <label>:31:                                     ; preds = %29
  %32 = fcmp oeq double %12, %13
  br i1 %32, label %33, label %40

; <label>:33:                                     ; preds = %31, %29, %27, %15
  %34 = phi i8 [ 0, %27 ], [ 0, %29 ], [ 1, %31 ], [ 1, %15 ]
  %35 = phi i8 [ 0, %27 ], [ 0, %29 ], [ 0, %31 ], [ 1, %15 ]
  %36 = phi i8 [ 0, %27 ], [ 1, %29 ], [ 0, %31 ], [ 1, %15 ]
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %38, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %36, i8* %39, align 1
  br label %40

; <label>:40:                                     ; preds = %33, %31
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %43, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_.exit: ; preds = %23, %40
  %44 = phi %struct.Memory* [ %26, %23 ], [ %2, %40 ]
  ret %struct.Memory* %44
}

define %struct.Memory* @routine_jne_.L_47ce38(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_47ce38(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47ce8f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x34a48__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x34a48__rip__type* @G_0x34a48__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6ccf88___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6ccf88_type* @G_0x6ccf88 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6f6f80___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6f6f80_type* @G_0x6f6f80 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6cc5dc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6cc5dc_type* @G_0x6cc5dc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6cc5e0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6cc5e0_type* @G_0x6cc5e0 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__eax___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd_0x6d1fb0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %18 = fdiv double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.floor_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6cc5d8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x6cc5d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11bac__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72620
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x11ba0__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 72608
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47cf67(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11b80__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72576
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47cf29(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6d45f0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6d4680(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x722fe0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x722fe0_type* @G_0x722fe0 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x722fd8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x722fd8_type* @G_0x722fd8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__eax___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6f9690(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6f9690___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6f9690_type* @G_0x6f9690 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6d4680___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6d4680(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47cf62(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47cf5d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d1f3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11b74__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72564
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d058(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0xb40__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 2880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47cfa6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47d007(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11b98__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72600
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d007(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x6f80a0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d002(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x723630___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x723630_type* @G_0x723630 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd___rax__rcx_8____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to double*
  %22 = load double, double* %21
  %23 = bitcast i8* %14 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %14, i64 8
  %25 = bitcast i8* %24 to double*
  store double 0.000000e+00, double* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cea38___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cea38_type* @G_0x6cea38 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0____rax__rcx_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %RCX
  %16 = mul i64 %15, 8
  %17 = add i64 %16, %14
  %18 = bitcast %union.vec128_t* %XMM0 to i8*
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = bitcast i8* %18 to double*
  %22 = load double, double* %21, align 1
  %23 = inttoptr i64 %17 to double*
  store double %22, double* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47cfc2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d053(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d04e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x724bd8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x724bd8_type* @G_0x724bd8 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6f9350___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6f9350_type* @G_0x6f9350 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d00e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d058(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11b78__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72568
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d123(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d0e5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d11e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d119(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d1ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d1e9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11b80__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72576
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d1ab(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x722fd8___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x722fd8_type* @G_0x722fd8 to i32*)
  %12 = sitofp i32 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d1e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d1df(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d1e9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11b74__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72564
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d21a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x70f6d8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6ccaf0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__0x11b74__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72564
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d2a9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d2a9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b74__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__ecx___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x11b74__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6ccaf0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x11b74__rax____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72564
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d2fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d2f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x345fa__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x345fa__rip__type* @G_0x345fa__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x34662__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x34662__rip__type* @G_0x34662__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x70f6d8___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_0x6ccaf0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  %18 = fmul double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__0x6ccaf0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x4d4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 1236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d39d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6ccaf0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4d4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6d1fb0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6ccaf0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6ccaf0_type* @G_0x6ccaf0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x726838___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x4d4__rax____xmm4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm4___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = bitcast %union.vec128_t* %XMM4 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm3___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM3 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6d4680___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d3c5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jp_.L_47d3c5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d41c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x344bb__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x344bb__rip__type* @G_0x344bb__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d46f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x11b70__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x710368___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x726838(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d53f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d53a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__0x11b70__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72560
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d4fe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x11b70__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x11b70__rax____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x726838___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x11b70__rax____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 72560
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d535(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x343ba__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x343ba__rip__type* @G_0x343ba__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x34422__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x34422__rip__type* @G_0x34422__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x710368___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_0x726838___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  %18 = fmul double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__0x726838(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x726838_type* @G_0x726838 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d53a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x18__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47dafb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d6e9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d6e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x342ef__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x342ef__rip__type* @G_0x342ef__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x70f6d8___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x6cc5d8___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6cc5d8_type* @G_0x6cc5d8 to i32*)
  %12 = sitofp i32 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x6cc5dc___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6cc5dc_type* @G_0x6cc5dc to i32*)
  %12 = sitofp i32 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_0x70f6d8___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x70f6d8_type* @G_0x70f6d8 to double*)
  %18 = fmul double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x6cc5e0___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6cc5e0_type* @G_0x6cc5e0 to i32*)
  %12 = sitofp i32 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_0x710368___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x710368_type* @G_0x710368 to double*)
  %18 = fmul double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 32
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x43E0000000000000
  %19 = fptosi double %16 to i64
  %20 = select i1 %18, i64 -9223372036854775808, i64 %19
  store i64 %20, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__0x6cea28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd_0x6d1fb0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6d1fb0_type* @G_0x6d1fb0 to double*)
  %18 = fdiv double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x725570___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x725570_type* @G_0x725570 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6d45f0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6d45f0_type* @G_0x6d45f0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6d4680___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6d4680_type* @G_0x6d4680 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x20__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__0x6d0270(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_0x6d0270___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  %13 = sub i64 %9, %12
  %14 = icmp ugt i64 %12, %9
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = trunc i64 %13 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 %12, %9
  %25 = xor i64 %24, %13
  %26 = lshr i64 %25, 4
  %27 = trunc i64 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i64 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i64 %13, 63
  %34 = trunc i64 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %9, 63
  %37 = lshr i64 %12, 63
  %38 = xor i64 %37, %36
  %39 = xor i64 %33, %36
  %40 = add i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d670(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6d0270___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d67d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x341ff__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x341ff__rip__type* @G_0x341ff__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x341cf__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x341cf__rip__type* @G_0x341cf__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x6d0270(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6cea40___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6cea40_type* @G_0x6cea40 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdq_0x6cea28___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  %12 = sitofp i64 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm3___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM3 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6cea40___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6cea40_type* @G_0x6cea40 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdq_0x6d0270___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6d0270_type* @G_0x6d0270 to i64*)
  %12 = sitofp i64 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm3___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM3 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x43E0000000000000
  %19 = fptosi double %16 to i64
  %20 = select i1 %18, i64 -9223372036854775808, i64 %19
  store i64 %20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x6cea28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d9eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47d875(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d875(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x34169__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x34169__rip__type* @G_0x34169__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 56
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x38__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d7fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d807(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x34075__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x34075__rip__type* @G_0x34075__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x34045__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x34045__rip__type* @G_0x34045__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d9e6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_47d9e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x33ff2__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x33ff2__rip__type* @G_0x33ff2__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 80
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x50__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47d96d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47d97a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x33f02__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x33f02__rip__type* @G_0x33f02__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x33ed2__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x33ed2__rip__type* @G_0x33ed2__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x33e6d__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x33e6d__rip__type* @G_0x33e6d__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm1___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x4d4__rax____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 1236
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdq_0x6cea28___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  %12 = sitofp i64 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cea28___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_0x710a48___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i64, i64* bitcast (%G_0x710a48_type* @G_0x710a48 to i64*)
  %13 = sub i64 %9, %12
  %14 = icmp ugt i64 %12, %9
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = trunc i64 %13 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 %12, %9
  %25 = xor i64 %24, %13
  %26 = lshr i64 %25, 4
  %27 = trunc i64 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i64 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i64 %13, 63
  %34 = trunc i64 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %9, 63
  %37 = lshr i64 %12, 63
  %38 = xor i64 %37, %36
  %39 = xor i64 %33, %36
  %40 = add i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47da50(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x710a48___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x710a48_type* @G_0x710a48 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47da5c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_0x6cd478___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i64, i64* bitcast (%G_0x6cd478_type* @G_0x6cd478 to i64*)
  %13 = sub i64 %9, %12
  %14 = icmp ugt i64 %12, %9
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = trunc i64 %13 to i32
  %18 = and i32 %17, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 %12, %9
  %25 = xor i64 %24, %13
  %26 = lshr i64 %25, 4
  %27 = trunc i64 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i64 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i64 %13, 63
  %34 = trunc i64 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i64 %9, 63
  %37 = lshr i64 %12, 63
  %38 = xor i64 %37, %36
  %39 = xor i64 %33, %36
  %40 = add i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47da8f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47da9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cd478___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cd478_type* @G_0x6cd478 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x70__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47dae5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47daf6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47dae5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x6cc5e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6cc5e4_type* @G_0x6cc5e4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47dafb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47db00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47db14(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47dbec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11b4c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72524
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11b50__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72528
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47dbe7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorps__xmm0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = getelementptr inbounds i8, i8* %12, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = xor i64 %21, %16
  %26 = xor i64 %24, %19
  %27 = trunc i64 %25 to i32
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = bitcast i8* %10 to i32*
  store i32 %27, i32* %30, align 1
  %31 = getelementptr inbounds i8, i8* %10, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 1
  %33 = trunc i64 %26 to i32
  %34 = getelementptr inbounds i8, i8* %10, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  %36 = lshr i64 %26, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i8, i8* %10, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x722b78(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x722b78_type* @G_0x722b78 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11b54__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11b58__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72536
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x11b60__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RAX
  %12 = add i64 %11, 72544
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x11b98__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 72600
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47dbc4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6f80a0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x6f9688(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6f9688_type* @G_0x6f9688 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47dbe2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6f80a0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6f80a0_type* @G_0x6f80a0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x74__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_jmpq_.L_47dbe7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47dbec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_47dce4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_47dce4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_47dc71(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x33cb1__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x33cb1__rip__type* @G_0x33cb1__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x6cc5e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x6cc5e8_type* @G_0x6cc5e8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x6cc5e4___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6cc5e4_type* @G_0x6cc5e4 to i32*)
  %12 = sitofp i32 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm1___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x43E0000000000000
  %19 = fptosi double %16 to i64
  %20 = select i1 %18, i64 -9223372036854775808, i64 %19
  store i64 %20, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47dcdf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6cc5e4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6cc5e4_type* @G_0x6cc5e4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x6cc5e8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6cc5e8_type* @G_0x6cc5e8 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__0x6cea28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x6cea28_type* @G_0x6cea28 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x6cb900___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x6cb900_type* @G_0x6cb900 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11b54__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72532
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x11b58__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 72536
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x11b60__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RDX
  %12 = add i64 %11, 72544
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_47dce4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x80___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 128, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 128
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 128, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
