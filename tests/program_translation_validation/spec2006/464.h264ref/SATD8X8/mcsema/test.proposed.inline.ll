; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x726840_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x726840 = global %G_0x726840_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

; Function Attrs: alwaysinline
define %struct.Memory* @SATD8X8(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_45f5b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_45f5b0, %struct.Memory** %MEMORY
  %loadMem_45f5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1744 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1745 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1746 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1745
  %27 = load i64, i64* %PC.i1744
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1744
  store i64 %26, i64* %RBP.i1746, align 8
  store %struct.Memory* %loadMem_45f5b1, %struct.Memory** %MEMORY
  %loadMem_45f5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1742 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1743 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1743
  %36 = load i64, i64* %PC.i1742
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1742
  %38 = sub i64 %35, 688
  store i64 %38, i64* %RSP.i1743, align 8
  %39 = icmp ult i64 %35, 688
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 688, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_45f5b4, %struct.Memory** %MEMORY
  %loadMem_45f5bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1739 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RDI.i1740 = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1741 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1741
  %77 = sub i64 %76, 8
  %78 = load i64, i64* %RDI.i1740
  %79 = load i64, i64* %PC.i1739
  %80 = add i64 %79, 4
  store i64 %80, i64* %PC.i1739
  %81 = inttoptr i64 %77 to i64*
  store i64 %78, i64* %81
  store %struct.Memory* %loadMem_45f5bb, %struct.Memory** %MEMORY
  %loadMem_45f5bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 33
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %PC.i1736 = bitcast %union.anon* %84 to i64*
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %86 = getelementptr inbounds %struct.GPR, %struct.GPR* %85, i32 0, i32 9
  %87 = getelementptr inbounds %struct.Reg, %struct.Reg* %86, i32 0, i32 0
  %ESI.i1737 = bitcast %union.anon* %87 to i32*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %89 = getelementptr inbounds %struct.GPR, %struct.GPR* %88, i32 0, i32 15
  %90 = getelementptr inbounds %struct.Reg, %struct.Reg* %89, i32 0, i32 0
  %RBP.i1738 = bitcast %union.anon* %90 to i64*
  %91 = load i64, i64* %RBP.i1738
  %92 = sub i64 %91, 12
  %93 = load i32, i32* %ESI.i1737
  %94 = zext i32 %93 to i64
  %95 = load i64, i64* %PC.i1736
  %96 = add i64 %95, 3
  store i64 %96, i64* %PC.i1736
  %97 = inttoptr i64 %92 to i32*
  store i32 %93, i32* %97
  store %struct.Memory* %loadMem_45f5bf, %struct.Memory** %MEMORY
  %loadMem_45f5c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %98 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %99 = getelementptr inbounds %struct.GPR, %struct.GPR* %98, i32 0, i32 33
  %100 = getelementptr inbounds %struct.Reg, %struct.Reg* %99, i32 0, i32 0
  %PC.i1734 = bitcast %union.anon* %100 to i64*
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %102 = getelementptr inbounds %struct.GPR, %struct.GPR* %101, i32 0, i32 15
  %103 = getelementptr inbounds %struct.Reg, %struct.Reg* %102, i32 0, i32 0
  %RBP.i1735 = bitcast %union.anon* %103 to i64*
  %104 = load i64, i64* %RBP.i1735
  %105 = sub i64 %104, 24
  %106 = load i64, i64* %PC.i1734
  %107 = add i64 %106, 7
  store i64 %107, i64* %PC.i1734
  %108 = inttoptr i64 %105 to i32*
  store i32 0, i32* %108
  store %struct.Memory* %loadMem_45f5c2, %struct.Memory** %MEMORY
  %loadMem_45f5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 33
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %PC.i1732 = bitcast %union.anon* %111 to i64*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i1733 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i1733
  %116 = sub i64 %115, 12
  %117 = load i64, i64* %PC.i1732
  %118 = add i64 %117, 4
  store i64 %118, i64* %PC.i1732
  %119 = inttoptr i64 %116 to i32*
  %120 = load i32, i32* %119
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %121, align 1
  %122 = and i32 %120, 255
  %123 = call i32 @llvm.ctpop.i32(i32 %122)
  %124 = trunc i32 %123 to i8
  %125 = and i8 %124, 1
  %126 = xor i8 %125, 1
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %128, align 1
  %129 = icmp eq i32 %120, 0
  %130 = zext i1 %129 to i8
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %130, i8* %131, align 1
  %132 = lshr i32 %120, 31
  %133 = trunc i32 %132 to i8
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %133, i8* %134, align 1
  %135 = lshr i32 %120, 31
  %136 = xor i32 %132, %135
  %137 = add i32 %136, %135
  %138 = icmp eq i32 %137, 2
  %139 = zext i1 %138 to i8
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %139, i8* %140, align 1
  store %struct.Memory* %loadMem_45f5c9, %struct.Memory** %MEMORY
  %loadMem_45f5cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 33
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %PC.i1731 = bitcast %union.anon* %143 to i64*
  %144 = load i64, i64* %PC.i1731
  %145 = add i64 %144, 2305
  %146 = load i64, i64* %PC.i1731
  %147 = add i64 %146, 6
  %148 = load i64, i64* %PC.i1731
  %149 = add i64 %148, 6
  store i64 %149, i64* %PC.i1731
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %151 = load i8, i8* %150, align 1
  store i8 %151, i8* %BRANCH_TAKEN, align 1
  %152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %153 = icmp ne i8 %151, 0
  %154 = select i1 %153, i64 %145, i64 %147
  store i64 %154, i64* %152, align 8
  store %struct.Memory* %loadMem_45f5cd, %struct.Memory** %MEMORY
  %loadBr_45f5cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45f5cd = icmp eq i8 %loadBr_45f5cd, 1
  br i1 %cmpBr_45f5cd, label %block_.L_45fece, label %block_45f5d3

block_45f5d3:                                     ; preds = %entry
  %loadMem_45f5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %156 = getelementptr inbounds %struct.GPR, %struct.GPR* %155, i32 0, i32 33
  %157 = getelementptr inbounds %struct.Reg, %struct.Reg* %156, i32 0, i32 0
  %PC.i1729 = bitcast %union.anon* %157 to i64*
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 15
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %RBP.i1730 = bitcast %union.anon* %160 to i64*
  %161 = load i64, i64* %RBP.i1730
  %162 = sub i64 %161, 20
  %163 = load i64, i64* %PC.i1729
  %164 = add i64 %163, 7
  store i64 %164, i64* %PC.i1729
  %165 = inttoptr i64 %162 to i32*
  store i32 0, i32* %165
  store %struct.Memory* %loadMem_45f5d3, %struct.Memory** %MEMORY
  br label %block_.L_45f5da

block_.L_45f5da:                                  ; preds = %block_45f5e4, %block_45f5d3
  %loadMem_45f5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 33
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %PC.i1727 = bitcast %union.anon* %168 to i64*
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 15
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %RBP.i1728 = bitcast %union.anon* %171 to i64*
  %172 = load i64, i64* %RBP.i1728
  %173 = sub i64 %172, 20
  %174 = load i64, i64* %PC.i1727
  %175 = add i64 %174, 4
  store i64 %175, i64* %PC.i1727
  %176 = inttoptr i64 %173 to i32*
  %177 = load i32, i32* %176
  %178 = sub i32 %177, 8
  %179 = icmp ult i32 %177, 8
  %180 = zext i1 %179 to i8
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %180, i8* %181, align 1
  %182 = and i32 %178, 255
  %183 = call i32 @llvm.ctpop.i32(i32 %182)
  %184 = trunc i32 %183 to i8
  %185 = and i8 %184, 1
  %186 = xor i8 %185, 1
  %187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %186, i8* %187, align 1
  %188 = xor i32 %177, 8
  %189 = xor i32 %188, %178
  %190 = lshr i32 %189, 4
  %191 = trunc i32 %190 to i8
  %192 = and i8 %191, 1
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %192, i8* %193, align 1
  %194 = icmp eq i32 %178, 0
  %195 = zext i1 %194 to i8
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %195, i8* %196, align 1
  %197 = lshr i32 %178, 31
  %198 = trunc i32 %197 to i8
  %199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %198, i8* %199, align 1
  %200 = lshr i32 %177, 31
  %201 = xor i32 %197, %200
  %202 = add i32 %201, %200
  %203 = icmp eq i32 %202, 2
  %204 = zext i1 %203 to i8
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %204, i8* %205, align 1
  store %struct.Memory* %loadMem_45f5da, %struct.Memory** %MEMORY
  %loadMem_45f5de = load %struct.Memory*, %struct.Memory** %MEMORY
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 33
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %PC.i1726 = bitcast %union.anon* %208 to i64*
  %209 = load i64, i64* %PC.i1726
  %210 = add i64 %209, 1295
  %211 = load i64, i64* %PC.i1726
  %212 = add i64 %211, 6
  %213 = load i64, i64* %PC.i1726
  %214 = add i64 %213, 6
  store i64 %214, i64* %PC.i1726
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %216 = load i8, i8* %215, align 1
  %217 = icmp ne i8 %216, 0
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %219 = load i8, i8* %218, align 1
  %220 = icmp ne i8 %219, 0
  %221 = xor i1 %217, %220
  %222 = xor i1 %221, true
  %223 = zext i1 %222 to i8
  store i8 %223, i8* %BRANCH_TAKEN, align 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %225 = select i1 %221, i64 %212, i64 %210
  store i64 %225, i64* %224, align 8
  store %struct.Memory* %loadMem_45f5de, %struct.Memory** %MEMORY
  %loadBr_45f5de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45f5de = icmp eq i8 %loadBr_45f5de, 1
  br i1 %cmpBr_45f5de, label %block_.L_45faed, label %block_45f5e4

block_45f5e4:                                     ; preds = %block_.L_45f5da
  %loadMem_45f5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %227 = getelementptr inbounds %struct.GPR, %struct.GPR* %226, i32 0, i32 33
  %228 = getelementptr inbounds %struct.Reg, %struct.Reg* %227, i32 0, i32 0
  %PC.i1723 = bitcast %union.anon* %228 to i64*
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 1
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %RAX.i1724 = bitcast %union.anon* %231 to i64*
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %233 = getelementptr inbounds %struct.GPR, %struct.GPR* %232, i32 0, i32 15
  %234 = getelementptr inbounds %struct.Reg, %struct.Reg* %233, i32 0, i32 0
  %RBP.i1725 = bitcast %union.anon* %234 to i64*
  %235 = load i64, i64* %RBP.i1725
  %236 = sub i64 %235, 544
  %237 = load i64, i64* %PC.i1723
  %238 = add i64 %237, 7
  store i64 %238, i64* %PC.i1723
  store i64 %236, i64* %RAX.i1724, align 8
  store %struct.Memory* %loadMem_45f5e4, %struct.Memory** %MEMORY
  %loadMem_45f5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %240 = getelementptr inbounds %struct.GPR, %struct.GPR* %239, i32 0, i32 33
  %241 = getelementptr inbounds %struct.Reg, %struct.Reg* %240, i32 0, i32 0
  %PC.i1720 = bitcast %union.anon* %241 to i64*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %243 = getelementptr inbounds %struct.GPR, %struct.GPR* %242, i32 0, i32 5
  %244 = getelementptr inbounds %struct.Reg, %struct.Reg* %243, i32 0, i32 0
  %RCX.i1721 = bitcast %union.anon* %244 to i64*
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %246 = getelementptr inbounds %struct.GPR, %struct.GPR* %245, i32 0, i32 15
  %247 = getelementptr inbounds %struct.Reg, %struct.Reg* %246, i32 0, i32 0
  %RBP.i1722 = bitcast %union.anon* %247 to i64*
  %248 = load i64, i64* %RBP.i1722
  %249 = sub i64 %248, 288
  %250 = load i64, i64* %PC.i1720
  %251 = add i64 %250, 7
  store i64 %251, i64* %PC.i1720
  store i64 %249, i64* %RCX.i1721, align 8
  store %struct.Memory* %loadMem_45f5eb, %struct.Memory** %MEMORY
  %loadMem_45f5f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %253 = getelementptr inbounds %struct.GPR, %struct.GPR* %252, i32 0, i32 33
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %PC.i1717 = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %256 = getelementptr inbounds %struct.GPR, %struct.GPR* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %RDX.i1718 = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %259 = getelementptr inbounds %struct.GPR, %struct.GPR* %258, i32 0, i32 15
  %260 = getelementptr inbounds %struct.Reg, %struct.Reg* %259, i32 0, i32 0
  %RBP.i1719 = bitcast %union.anon* %260 to i64*
  %261 = load i64, i64* %RBP.i1719
  %262 = sub i64 %261, 8
  %263 = load i64, i64* %PC.i1717
  %264 = add i64 %263, 4
  store i64 %264, i64* %PC.i1717
  %265 = inttoptr i64 %262 to i64*
  %266 = load i64, i64* %265
  store i64 %266, i64* %RDX.i1718, align 8
  store %struct.Memory* %loadMem_45f5f2, %struct.Memory** %MEMORY
  %loadMem_45f5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %268 = getelementptr inbounds %struct.GPR, %struct.GPR* %267, i32 0, i32 33
  %269 = getelementptr inbounds %struct.Reg, %struct.Reg* %268, i32 0, i32 0
  %PC.i1714 = bitcast %union.anon* %269 to i64*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %271 = getelementptr inbounds %struct.GPR, %struct.GPR* %270, i32 0, i32 9
  %272 = getelementptr inbounds %struct.Reg, %struct.Reg* %271, i32 0, i32 0
  %RSI.i1715 = bitcast %union.anon* %272 to i64*
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 15
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %RBP.i1716 = bitcast %union.anon* %275 to i64*
  %276 = load i64, i64* %RBP.i1716
  %277 = sub i64 %276, 20
  %278 = load i64, i64* %PC.i1714
  %279 = add i64 %278, 3
  store i64 %279, i64* %PC.i1714
  %280 = inttoptr i64 %277 to i32*
  %281 = load i32, i32* %280
  %282 = zext i32 %281 to i64
  store i64 %282, i64* %RSI.i1715, align 8
  store %struct.Memory* %loadMem_45f5f6, %struct.Memory** %MEMORY
  %loadMem_45f5f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %284 = getelementptr inbounds %struct.GPR, %struct.GPR* %283, i32 0, i32 33
  %285 = getelementptr inbounds %struct.Reg, %struct.Reg* %284, i32 0, i32 0
  %PC.i1712 = bitcast %union.anon* %285 to i64*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %287 = getelementptr inbounds %struct.GPR, %struct.GPR* %286, i32 0, i32 9
  %288 = getelementptr inbounds %struct.Reg, %struct.Reg* %287, i32 0, i32 0
  %RSI.i1713 = bitcast %union.anon* %288 to i64*
  %289 = load i64, i64* %RSI.i1713
  %290 = load i64, i64* %PC.i1712
  %291 = add i64 %290, 3
  store i64 %291, i64* %PC.i1712
  %292 = and i64 %289, 4294967295
  %293 = shl i64 %292, 2
  %294 = trunc i64 %293 to i32
  %295 = icmp slt i32 %294, 0
  %296 = shl i32 %294, 1
  %297 = zext i32 %296 to i64
  store i64 %297, i64* %RSI.i1713, align 8
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %299 = zext i1 %295 to i8
  store i8 %299, i8* %298, align 1
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %301 = and i32 %296, 254
  %302 = call i32 @llvm.ctpop.i32(i32 %301)
  %303 = trunc i32 %302 to i8
  %304 = and i8 %303, 1
  %305 = xor i8 %304, 1
  store i8 %305, i8* %300, align 1
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %306, align 1
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %308 = icmp eq i32 %296, 0
  %309 = zext i1 %308 to i8
  store i8 %309, i8* %307, align 1
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %311 = lshr i32 %296, 31
  %312 = trunc i32 %311 to i8
  store i8 %312, i8* %310, align 1
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %313, align 1
  store %struct.Memory* %loadMem_45f5f9, %struct.Memory** %MEMORY
  %loadMem_45f5fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %315 = getelementptr inbounds %struct.GPR, %struct.GPR* %314, i32 0, i32 33
  %316 = getelementptr inbounds %struct.Reg, %struct.Reg* %315, i32 0, i32 0
  %PC.i1709 = bitcast %union.anon* %316 to i64*
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %318 = getelementptr inbounds %struct.GPR, %struct.GPR* %317, i32 0, i32 9
  %319 = getelementptr inbounds %struct.Reg, %struct.Reg* %318, i32 0, i32 0
  %ESI.i1710 = bitcast %union.anon* %319 to i32*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %321 = getelementptr inbounds %struct.GPR, %struct.GPR* %320, i32 0, i32 11
  %322 = getelementptr inbounds %struct.Reg, %struct.Reg* %321, i32 0, i32 0
  %RDI.i1711 = bitcast %union.anon* %322 to i64*
  %323 = load i32, i32* %ESI.i1710
  %324 = zext i32 %323 to i64
  %325 = load i64, i64* %PC.i1709
  %326 = add i64 %325, 3
  store i64 %326, i64* %PC.i1709
  %327 = shl i64 %324, 32
  %328 = ashr exact i64 %327, 32
  store i64 %328, i64* %RDI.i1711, align 8
  store %struct.Memory* %loadMem_45f5fc, %struct.Memory** %MEMORY
  %loadMem_45f5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %330 = getelementptr inbounds %struct.GPR, %struct.GPR* %329, i32 0, i32 33
  %331 = getelementptr inbounds %struct.Reg, %struct.Reg* %330, i32 0, i32 0
  %PC.i1705 = bitcast %union.anon* %331 to i64*
  %332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %333 = getelementptr inbounds %struct.GPR, %struct.GPR* %332, i32 0, i32 7
  %334 = getelementptr inbounds %struct.Reg, %struct.Reg* %333, i32 0, i32 0
  %RDX.i1706 = bitcast %union.anon* %334 to i64*
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %336 = getelementptr inbounds %struct.GPR, %struct.GPR* %335, i32 0, i32 9
  %337 = getelementptr inbounds %struct.Reg, %struct.Reg* %336, i32 0, i32 0
  %RSI.i1707 = bitcast %union.anon* %337 to i64*
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %339 = getelementptr inbounds %struct.GPR, %struct.GPR* %338, i32 0, i32 11
  %340 = getelementptr inbounds %struct.Reg, %struct.Reg* %339, i32 0, i32 0
  %RDI.i1708 = bitcast %union.anon* %340 to i64*
  %341 = load i64, i64* %RDX.i1706
  %342 = load i64, i64* %RDI.i1708
  %343 = mul i64 %342, 4
  %344 = add i64 %343, %341
  %345 = load i64, i64* %PC.i1705
  %346 = add i64 %345, 3
  store i64 %346, i64* %PC.i1705
  %347 = inttoptr i64 %344 to i32*
  %348 = load i32, i32* %347
  %349 = zext i32 %348 to i64
  store i64 %349, i64* %RSI.i1707, align 8
  store %struct.Memory* %loadMem_45f5ff, %struct.Memory** %MEMORY
  %loadMem_45f602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %351 = getelementptr inbounds %struct.GPR, %struct.GPR* %350, i32 0, i32 33
  %352 = getelementptr inbounds %struct.Reg, %struct.Reg* %351, i32 0, i32 0
  %PC.i1702 = bitcast %union.anon* %352 to i64*
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %354 = getelementptr inbounds %struct.GPR, %struct.GPR* %353, i32 0, i32 7
  %355 = getelementptr inbounds %struct.Reg, %struct.Reg* %354, i32 0, i32 0
  %RDX.i1703 = bitcast %union.anon* %355 to i64*
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 15
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %RBP.i1704 = bitcast %union.anon* %358 to i64*
  %359 = load i64, i64* %RBP.i1704
  %360 = sub i64 %359, 8
  %361 = load i64, i64* %PC.i1702
  %362 = add i64 %361, 4
  store i64 %362, i64* %PC.i1702
  %363 = inttoptr i64 %360 to i64*
  %364 = load i64, i64* %363
  store i64 %364, i64* %RDX.i1703, align 8
  store %struct.Memory* %loadMem_45f602, %struct.Memory** %MEMORY
  %loadMem_45f606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %366 = getelementptr inbounds %struct.GPR, %struct.GPR* %365, i32 0, i32 33
  %367 = getelementptr inbounds %struct.Reg, %struct.Reg* %366, i32 0, i32 0
  %PC.i1699 = bitcast %union.anon* %367 to i64*
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 17
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %R8D.i1700 = bitcast %union.anon* %370 to i32*
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 15
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %RBP.i1701 = bitcast %union.anon* %373 to i64*
  %374 = bitcast i32* %R8D.i1700 to i64*
  %375 = load i64, i64* %RBP.i1701
  %376 = sub i64 %375, 20
  %377 = load i64, i64* %PC.i1699
  %378 = add i64 %377, 4
  store i64 %378, i64* %PC.i1699
  %379 = inttoptr i64 %376 to i32*
  %380 = load i32, i32* %379
  %381 = zext i32 %380 to i64
  store i64 %381, i64* %374, align 8
  store %struct.Memory* %loadMem_45f606, %struct.Memory** %MEMORY
  %loadMem_45f60a = load %struct.Memory*, %struct.Memory** %MEMORY
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %383 = getelementptr inbounds %struct.GPR, %struct.GPR* %382, i32 0, i32 33
  %384 = getelementptr inbounds %struct.Reg, %struct.Reg* %383, i32 0, i32 0
  %PC.i1697 = bitcast %union.anon* %384 to i64*
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %386 = getelementptr inbounds %struct.GPR, %struct.GPR* %385, i32 0, i32 17
  %387 = getelementptr inbounds %struct.Reg, %struct.Reg* %386, i32 0, i32 0
  %R8D.i1698 = bitcast %union.anon* %387 to i32*
  %388 = bitcast i32* %R8D.i1698 to i64*
  %389 = load i32, i32* %R8D.i1698
  %390 = zext i32 %389 to i64
  %391 = load i64, i64* %PC.i1697
  %392 = add i64 %391, 4
  store i64 %392, i64* %PC.i1697
  %393 = and i64 %390, 4294967295
  %394 = shl i64 %393, 2
  %395 = trunc i64 %394 to i32
  %396 = icmp slt i32 %395, 0
  %397 = shl i32 %395, 1
  %398 = zext i32 %397 to i64
  store i64 %398, i64* %388, align 8
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %400 = zext i1 %396 to i8
  store i8 %400, i8* %399, align 1
  %401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %402 = and i32 %397, 254
  %403 = call i32 @llvm.ctpop.i32(i32 %402)
  %404 = trunc i32 %403 to i8
  %405 = and i8 %404, 1
  %406 = xor i8 %405, 1
  store i8 %406, i8* %401, align 1
  %407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %407, align 1
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %409 = icmp eq i32 %397, 0
  %410 = zext i1 %409 to i8
  store i8 %410, i8* %408, align 1
  %411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %412 = lshr i32 %397, 31
  %413 = trunc i32 %412 to i8
  store i8 %413, i8* %411, align 1
  %414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %414, align 1
  store %struct.Memory* %loadMem_45f60a, %struct.Memory** %MEMORY
  %loadMem_45f60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 33
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %PC.i1695 = bitcast %union.anon* %417 to i64*
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 17
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %R8D.i1696 = bitcast %union.anon* %420 to i32*
  %421 = bitcast i32* %R8D.i1696 to i64*
  %422 = load i32, i32* %R8D.i1696
  %423 = zext i32 %422 to i64
  %424 = load i64, i64* %PC.i1695
  %425 = add i64 %424, 4
  store i64 %425, i64* %PC.i1695
  %426 = add i32 4, %422
  %427 = zext i32 %426 to i64
  store i64 %427, i64* %421, align 8
  %428 = icmp ult i32 %426, %422
  %429 = icmp ult i32 %426, 4
  %430 = or i1 %428, %429
  %431 = zext i1 %430 to i8
  %432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %431, i8* %432, align 1
  %433 = and i32 %426, 255
  %434 = call i32 @llvm.ctpop.i32(i32 %433)
  %435 = trunc i32 %434 to i8
  %436 = and i8 %435, 1
  %437 = xor i8 %436, 1
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %437, i8* %438, align 1
  %439 = xor i64 4, %423
  %440 = trunc i64 %439 to i32
  %441 = xor i32 %440, %426
  %442 = lshr i32 %441, 4
  %443 = trunc i32 %442 to i8
  %444 = and i8 %443, 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %444, i8* %445, align 1
  %446 = icmp eq i32 %426, 0
  %447 = zext i1 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %447, i8* %448, align 1
  %449 = lshr i32 %426, 31
  %450 = trunc i32 %449 to i8
  %451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %450, i8* %451, align 1
  %452 = lshr i32 %422, 31
  %453 = xor i32 %449, %452
  %454 = add i32 %453, %449
  %455 = icmp eq i32 %454, 2
  %456 = zext i1 %455 to i8
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %456, i8* %457, align 1
  store %struct.Memory* %loadMem_45f60e, %struct.Memory** %MEMORY
  %loadMem_45f612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %459 = getelementptr inbounds %struct.GPR, %struct.GPR* %458, i32 0, i32 33
  %460 = getelementptr inbounds %struct.Reg, %struct.Reg* %459, i32 0, i32 0
  %PC.i1692 = bitcast %union.anon* %460 to i64*
  %461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %462 = getelementptr inbounds %struct.GPR, %struct.GPR* %461, i32 0, i32 17
  %463 = getelementptr inbounds %struct.Reg, %struct.Reg* %462, i32 0, i32 0
  %R8D.i1693 = bitcast %union.anon* %463 to i32*
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %465 = getelementptr inbounds %struct.GPR, %struct.GPR* %464, i32 0, i32 11
  %466 = getelementptr inbounds %struct.Reg, %struct.Reg* %465, i32 0, i32 0
  %RDI.i1694 = bitcast %union.anon* %466 to i64*
  %467 = load i32, i32* %R8D.i1693
  %468 = zext i32 %467 to i64
  %469 = load i64, i64* %PC.i1692
  %470 = add i64 %469, 3
  store i64 %470, i64* %PC.i1692
  %471 = shl i64 %468, 32
  %472 = ashr exact i64 %471, 32
  store i64 %472, i64* %RDI.i1694, align 8
  store %struct.Memory* %loadMem_45f612, %struct.Memory** %MEMORY
  %loadMem_45f615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 33
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %PC.i1688 = bitcast %union.anon* %475 to i64*
  %476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %477 = getelementptr inbounds %struct.GPR, %struct.GPR* %476, i32 0, i32 7
  %478 = getelementptr inbounds %struct.Reg, %struct.Reg* %477, i32 0, i32 0
  %RDX.i1689 = bitcast %union.anon* %478 to i64*
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 9
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %RSI.i1690 = bitcast %union.anon* %481 to i64*
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %483 = getelementptr inbounds %struct.GPR, %struct.GPR* %482, i32 0, i32 11
  %484 = getelementptr inbounds %struct.Reg, %struct.Reg* %483, i32 0, i32 0
  %RDI.i1691 = bitcast %union.anon* %484 to i64*
  %485 = load i64, i64* %RSI.i1690
  %486 = load i64, i64* %RDX.i1689
  %487 = load i64, i64* %RDI.i1691
  %488 = mul i64 %487, 4
  %489 = add i64 %488, %486
  %490 = load i64, i64* %PC.i1688
  %491 = add i64 %490, 3
  store i64 %491, i64* %PC.i1688
  %492 = trunc i64 %485 to i32
  %493 = inttoptr i64 %489 to i32*
  %494 = load i32, i32* %493
  %495 = add i32 %494, %492
  %496 = zext i32 %495 to i64
  store i64 %496, i64* %RSI.i1690, align 8
  %497 = icmp ult i32 %495, %492
  %498 = icmp ult i32 %495, %494
  %499 = or i1 %497, %498
  %500 = zext i1 %499 to i8
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %500, i8* %501, align 1
  %502 = and i32 %495, 255
  %503 = call i32 @llvm.ctpop.i32(i32 %502)
  %504 = trunc i32 %503 to i8
  %505 = and i8 %504, 1
  %506 = xor i8 %505, 1
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %506, i8* %507, align 1
  %508 = xor i32 %494, %492
  %509 = xor i32 %508, %495
  %510 = lshr i32 %509, 4
  %511 = trunc i32 %510 to i8
  %512 = and i8 %511, 1
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %512, i8* %513, align 1
  %514 = icmp eq i32 %495, 0
  %515 = zext i1 %514 to i8
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %515, i8* %516, align 1
  %517 = lshr i32 %495, 31
  %518 = trunc i32 %517 to i8
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %518, i8* %519, align 1
  %520 = lshr i32 %492, 31
  %521 = lshr i32 %494, 31
  %522 = xor i32 %517, %520
  %523 = xor i32 %517, %521
  %524 = add i32 %522, %523
  %525 = icmp eq i32 %524, 2
  %526 = zext i1 %525 to i8
  %527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %526, i8* %527, align 1
  store %struct.Memory* %loadMem_45f615, %struct.Memory** %MEMORY
  %loadMem_45f618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %529 = getelementptr inbounds %struct.GPR, %struct.GPR* %528, i32 0, i32 33
  %530 = getelementptr inbounds %struct.Reg, %struct.Reg* %529, i32 0, i32 0
  %PC.i1685 = bitcast %union.anon* %530 to i64*
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %532 = getelementptr inbounds %struct.GPR, %struct.GPR* %531, i32 0, i32 7
  %533 = getelementptr inbounds %struct.Reg, %struct.Reg* %532, i32 0, i32 0
  %RDX.i1686 = bitcast %union.anon* %533 to i64*
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %535 = getelementptr inbounds %struct.GPR, %struct.GPR* %534, i32 0, i32 15
  %536 = getelementptr inbounds %struct.Reg, %struct.Reg* %535, i32 0, i32 0
  %RBP.i1687 = bitcast %union.anon* %536 to i64*
  %537 = load i64, i64* %RBP.i1687
  %538 = sub i64 %537, 20
  %539 = load i64, i64* %PC.i1685
  %540 = add i64 %539, 4
  store i64 %540, i64* %PC.i1685
  %541 = inttoptr i64 %538 to i32*
  %542 = load i32, i32* %541
  %543 = sext i32 %542 to i64
  store i64 %543, i64* %RDX.i1686, align 8
  store %struct.Memory* %loadMem_45f618, %struct.Memory** %MEMORY
  %loadMem_45f61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %545 = getelementptr inbounds %struct.GPR, %struct.GPR* %544, i32 0, i32 33
  %546 = getelementptr inbounds %struct.Reg, %struct.Reg* %545, i32 0, i32 0
  %PC.i1683 = bitcast %union.anon* %546 to i64*
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %548 = getelementptr inbounds %struct.GPR, %struct.GPR* %547, i32 0, i32 7
  %549 = getelementptr inbounds %struct.Reg, %struct.Reg* %548, i32 0, i32 0
  %RDX.i1684 = bitcast %union.anon* %549 to i64*
  %550 = load i64, i64* %RDX.i1684
  %551 = load i64, i64* %PC.i1683
  %552 = add i64 %551, 4
  store i64 %552, i64* %PC.i1683
  %553 = shl i64 %550, 4
  %554 = icmp slt i64 %553, 0
  %555 = shl i64 %553, 1
  store i64 %555, i64* %RDX.i1684, align 8
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %557 = zext i1 %554 to i8
  store i8 %557, i8* %556, align 1
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %559 = trunc i64 %555 to i32
  %560 = and i32 %559, 254
  %561 = call i32 @llvm.ctpop.i32(i32 %560)
  %562 = trunc i32 %561 to i8
  %563 = and i8 %562, 1
  %564 = xor i8 %563, 1
  store i8 %564, i8* %558, align 1
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %565, align 1
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %567 = icmp eq i64 %555, 0
  %568 = zext i1 %567 to i8
  store i8 %568, i8* %566, align 1
  %569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %570 = lshr i64 %555, 63
  %571 = trunc i64 %570 to i8
  store i8 %571, i8* %569, align 1
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %572, align 1
  store %struct.Memory* %loadMem_45f61c, %struct.Memory** %MEMORY
  %loadMem_45f620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %574 = getelementptr inbounds %struct.GPR, %struct.GPR* %573, i32 0, i32 33
  %575 = getelementptr inbounds %struct.Reg, %struct.Reg* %574, i32 0, i32 0
  %PC.i1680 = bitcast %union.anon* %575 to i64*
  %576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %577 = getelementptr inbounds %struct.GPR, %struct.GPR* %576, i32 0, i32 1
  %578 = getelementptr inbounds %struct.Reg, %struct.Reg* %577, i32 0, i32 0
  %RAX.i1681 = bitcast %union.anon* %578 to i64*
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %580 = getelementptr inbounds %struct.GPR, %struct.GPR* %579, i32 0, i32 11
  %581 = getelementptr inbounds %struct.Reg, %struct.Reg* %580, i32 0, i32 0
  %RDI.i1682 = bitcast %union.anon* %581 to i64*
  %582 = load i64, i64* %RAX.i1681
  %583 = load i64, i64* %PC.i1680
  %584 = add i64 %583, 3
  store i64 %584, i64* %PC.i1680
  store i64 %582, i64* %RDI.i1682, align 8
  store %struct.Memory* %loadMem_45f620, %struct.Memory** %MEMORY
  %loadMem_45f623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %586 = getelementptr inbounds %struct.GPR, %struct.GPR* %585, i32 0, i32 33
  %587 = getelementptr inbounds %struct.Reg, %struct.Reg* %586, i32 0, i32 0
  %PC.i1677 = bitcast %union.anon* %587 to i64*
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %589 = getelementptr inbounds %struct.GPR, %struct.GPR* %588, i32 0, i32 7
  %590 = getelementptr inbounds %struct.Reg, %struct.Reg* %589, i32 0, i32 0
  %RDX.i1678 = bitcast %union.anon* %590 to i64*
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %592 = getelementptr inbounds %struct.GPR, %struct.GPR* %591, i32 0, i32 11
  %593 = getelementptr inbounds %struct.Reg, %struct.Reg* %592, i32 0, i32 0
  %RDI.i1679 = bitcast %union.anon* %593 to i64*
  %594 = load i64, i64* %RDI.i1679
  %595 = load i64, i64* %RDX.i1678
  %596 = load i64, i64* %PC.i1677
  %597 = add i64 %596, 3
  store i64 %597, i64* %PC.i1677
  %598 = add i64 %595, %594
  store i64 %598, i64* %RDI.i1679, align 8
  %599 = icmp ult i64 %598, %594
  %600 = icmp ult i64 %598, %595
  %601 = or i1 %599, %600
  %602 = zext i1 %601 to i8
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %602, i8* %603, align 1
  %604 = trunc i64 %598 to i32
  %605 = and i32 %604, 255
  %606 = call i32 @llvm.ctpop.i32(i32 %605)
  %607 = trunc i32 %606 to i8
  %608 = and i8 %607, 1
  %609 = xor i8 %608, 1
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %609, i8* %610, align 1
  %611 = xor i64 %595, %594
  %612 = xor i64 %611, %598
  %613 = lshr i64 %612, 4
  %614 = trunc i64 %613 to i8
  %615 = and i8 %614, 1
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %615, i8* %616, align 1
  %617 = icmp eq i64 %598, 0
  %618 = zext i1 %617 to i8
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %618, i8* %619, align 1
  %620 = lshr i64 %598, 63
  %621 = trunc i64 %620 to i8
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %621, i8* %622, align 1
  %623 = lshr i64 %594, 63
  %624 = lshr i64 %595, 63
  %625 = xor i64 %620, %623
  %626 = xor i64 %620, %624
  %627 = add i64 %625, %626
  %628 = icmp eq i64 %627, 2
  %629 = zext i1 %628 to i8
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %629, i8* %630, align 1
  store %struct.Memory* %loadMem_45f623, %struct.Memory** %MEMORY
  %loadMem_45f626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %632 = getelementptr inbounds %struct.GPR, %struct.GPR* %631, i32 0, i32 33
  %633 = getelementptr inbounds %struct.Reg, %struct.Reg* %632, i32 0, i32 0
  %PC.i1674 = bitcast %union.anon* %633 to i64*
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %635 = getelementptr inbounds %struct.GPR, %struct.GPR* %634, i32 0, i32 9
  %636 = getelementptr inbounds %struct.Reg, %struct.Reg* %635, i32 0, i32 0
  %ESI.i1675 = bitcast %union.anon* %636 to i32*
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %638 = getelementptr inbounds %struct.GPR, %struct.GPR* %637, i32 0, i32 11
  %639 = getelementptr inbounds %struct.Reg, %struct.Reg* %638, i32 0, i32 0
  %RDI.i1676 = bitcast %union.anon* %639 to i64*
  %640 = load i64, i64* %RDI.i1676
  %641 = load i32, i32* %ESI.i1675
  %642 = zext i32 %641 to i64
  %643 = load i64, i64* %PC.i1674
  %644 = add i64 %643, 2
  store i64 %644, i64* %PC.i1674
  %645 = inttoptr i64 %640 to i32*
  store i32 %641, i32* %645
  store %struct.Memory* %loadMem_45f626, %struct.Memory** %MEMORY
  %loadMem_45f628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %647 = getelementptr inbounds %struct.GPR, %struct.GPR* %646, i32 0, i32 33
  %648 = getelementptr inbounds %struct.Reg, %struct.Reg* %647, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %648 to i64*
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %650 = getelementptr inbounds %struct.GPR, %struct.GPR* %649, i32 0, i32 7
  %651 = getelementptr inbounds %struct.Reg, %struct.Reg* %650, i32 0, i32 0
  %RDX.i1672 = bitcast %union.anon* %651 to i64*
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 15
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %RBP.i1673 = bitcast %union.anon* %654 to i64*
  %655 = load i64, i64* %RBP.i1673
  %656 = sub i64 %655, 8
  %657 = load i64, i64* %PC.i1671
  %658 = add i64 %657, 4
  store i64 %658, i64* %PC.i1671
  %659 = inttoptr i64 %656 to i64*
  %660 = load i64, i64* %659
  store i64 %660, i64* %RDX.i1672, align 8
  store %struct.Memory* %loadMem_45f628, %struct.Memory** %MEMORY
  %loadMem_45f62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %662 = getelementptr inbounds %struct.GPR, %struct.GPR* %661, i32 0, i32 33
  %663 = getelementptr inbounds %struct.Reg, %struct.Reg* %662, i32 0, i32 0
  %PC.i1668 = bitcast %union.anon* %663 to i64*
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 9
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %RSI.i1669 = bitcast %union.anon* %666 to i64*
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %668 = getelementptr inbounds %struct.GPR, %struct.GPR* %667, i32 0, i32 15
  %669 = getelementptr inbounds %struct.Reg, %struct.Reg* %668, i32 0, i32 0
  %RBP.i1670 = bitcast %union.anon* %669 to i64*
  %670 = load i64, i64* %RBP.i1670
  %671 = sub i64 %670, 20
  %672 = load i64, i64* %PC.i1668
  %673 = add i64 %672, 3
  store i64 %673, i64* %PC.i1668
  %674 = inttoptr i64 %671 to i32*
  %675 = load i32, i32* %674
  %676 = zext i32 %675 to i64
  store i64 %676, i64* %RSI.i1669, align 8
  store %struct.Memory* %loadMem_45f62c, %struct.Memory** %MEMORY
  %loadMem_45f62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %678 = getelementptr inbounds %struct.GPR, %struct.GPR* %677, i32 0, i32 33
  %679 = getelementptr inbounds %struct.Reg, %struct.Reg* %678, i32 0, i32 0
  %PC.i1666 = bitcast %union.anon* %679 to i64*
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %681 = getelementptr inbounds %struct.GPR, %struct.GPR* %680, i32 0, i32 9
  %682 = getelementptr inbounds %struct.Reg, %struct.Reg* %681, i32 0, i32 0
  %RSI.i1667 = bitcast %union.anon* %682 to i64*
  %683 = load i64, i64* %RSI.i1667
  %684 = load i64, i64* %PC.i1666
  %685 = add i64 %684, 3
  store i64 %685, i64* %PC.i1666
  %686 = and i64 %683, 4294967295
  %687 = shl i64 %686, 2
  %688 = trunc i64 %687 to i32
  %689 = icmp slt i32 %688, 0
  %690 = shl i32 %688, 1
  %691 = zext i32 %690 to i64
  store i64 %691, i64* %RSI.i1667, align 8
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %693 = zext i1 %689 to i8
  store i8 %693, i8* %692, align 1
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %695 = and i32 %690, 254
  %696 = call i32 @llvm.ctpop.i32(i32 %695)
  %697 = trunc i32 %696 to i8
  %698 = and i8 %697, 1
  %699 = xor i8 %698, 1
  store i8 %699, i8* %694, align 1
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %700, align 1
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %702 = icmp eq i32 %690, 0
  %703 = zext i1 %702 to i8
  store i8 %703, i8* %701, align 1
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %705 = lshr i32 %690, 31
  %706 = trunc i32 %705 to i8
  store i8 %706, i8* %704, align 1
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %707, align 1
  store %struct.Memory* %loadMem_45f62f, %struct.Memory** %MEMORY
  %loadMem_45f632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 33
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %PC.i1664 = bitcast %union.anon* %710 to i64*
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %712 = getelementptr inbounds %struct.GPR, %struct.GPR* %711, i32 0, i32 9
  %713 = getelementptr inbounds %struct.Reg, %struct.Reg* %712, i32 0, i32 0
  %RSI.i1665 = bitcast %union.anon* %713 to i64*
  %714 = load i64, i64* %RSI.i1665
  %715 = load i64, i64* %PC.i1664
  %716 = add i64 %715, 3
  store i64 %716, i64* %PC.i1664
  %717 = trunc i64 %714 to i32
  %718 = add i32 1, %717
  %719 = zext i32 %718 to i64
  store i64 %719, i64* %RSI.i1665, align 8
  %720 = icmp ult i32 %718, %717
  %721 = icmp ult i32 %718, 1
  %722 = or i1 %720, %721
  %723 = zext i1 %722 to i8
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %723, i8* %724, align 1
  %725 = and i32 %718, 255
  %726 = call i32 @llvm.ctpop.i32(i32 %725)
  %727 = trunc i32 %726 to i8
  %728 = and i8 %727, 1
  %729 = xor i8 %728, 1
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %729, i8* %730, align 1
  %731 = xor i64 1, %714
  %732 = trunc i64 %731 to i32
  %733 = xor i32 %732, %718
  %734 = lshr i32 %733, 4
  %735 = trunc i32 %734 to i8
  %736 = and i8 %735, 1
  %737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %736, i8* %737, align 1
  %738 = icmp eq i32 %718, 0
  %739 = zext i1 %738 to i8
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %739, i8* %740, align 1
  %741 = lshr i32 %718, 31
  %742 = trunc i32 %741 to i8
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %742, i8* %743, align 1
  %744 = lshr i32 %717, 31
  %745 = xor i32 %741, %744
  %746 = add i32 %745, %741
  %747 = icmp eq i32 %746, 2
  %748 = zext i1 %747 to i8
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %748, i8* %749, align 1
  store %struct.Memory* %loadMem_45f632, %struct.Memory** %MEMORY
  %loadMem_45f635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %751 = getelementptr inbounds %struct.GPR, %struct.GPR* %750, i32 0, i32 33
  %752 = getelementptr inbounds %struct.Reg, %struct.Reg* %751, i32 0, i32 0
  %PC.i1661 = bitcast %union.anon* %752 to i64*
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %754 = getelementptr inbounds %struct.GPR, %struct.GPR* %753, i32 0, i32 9
  %755 = getelementptr inbounds %struct.Reg, %struct.Reg* %754, i32 0, i32 0
  %ESI.i1662 = bitcast %union.anon* %755 to i32*
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %757 = getelementptr inbounds %struct.GPR, %struct.GPR* %756, i32 0, i32 11
  %758 = getelementptr inbounds %struct.Reg, %struct.Reg* %757, i32 0, i32 0
  %RDI.i1663 = bitcast %union.anon* %758 to i64*
  %759 = load i32, i32* %ESI.i1662
  %760 = zext i32 %759 to i64
  %761 = load i64, i64* %PC.i1661
  %762 = add i64 %761, 3
  store i64 %762, i64* %PC.i1661
  %763 = shl i64 %760, 32
  %764 = ashr exact i64 %763, 32
  store i64 %764, i64* %RDI.i1663, align 8
  store %struct.Memory* %loadMem_45f635, %struct.Memory** %MEMORY
  %loadMem_45f638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 33
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %767 to i64*
  %768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %769 = getelementptr inbounds %struct.GPR, %struct.GPR* %768, i32 0, i32 7
  %770 = getelementptr inbounds %struct.Reg, %struct.Reg* %769, i32 0, i32 0
  %RDX.i1658 = bitcast %union.anon* %770 to i64*
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %772 = getelementptr inbounds %struct.GPR, %struct.GPR* %771, i32 0, i32 9
  %773 = getelementptr inbounds %struct.Reg, %struct.Reg* %772, i32 0, i32 0
  %RSI.i1659 = bitcast %union.anon* %773 to i64*
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %775 = getelementptr inbounds %struct.GPR, %struct.GPR* %774, i32 0, i32 11
  %776 = getelementptr inbounds %struct.Reg, %struct.Reg* %775, i32 0, i32 0
  %RDI.i1660 = bitcast %union.anon* %776 to i64*
  %777 = load i64, i64* %RDX.i1658
  %778 = load i64, i64* %RDI.i1660
  %779 = mul i64 %778, 4
  %780 = add i64 %779, %777
  %781 = load i64, i64* %PC.i1657
  %782 = add i64 %781, 3
  store i64 %782, i64* %PC.i1657
  %783 = inttoptr i64 %780 to i32*
  %784 = load i32, i32* %783
  %785 = zext i32 %784 to i64
  store i64 %785, i64* %RSI.i1659, align 8
  store %struct.Memory* %loadMem_45f638, %struct.Memory** %MEMORY
  %loadMem_45f63b = load %struct.Memory*, %struct.Memory** %MEMORY
  %786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %787 = getelementptr inbounds %struct.GPR, %struct.GPR* %786, i32 0, i32 33
  %788 = getelementptr inbounds %struct.Reg, %struct.Reg* %787, i32 0, i32 0
  %PC.i1654 = bitcast %union.anon* %788 to i64*
  %789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %790 = getelementptr inbounds %struct.GPR, %struct.GPR* %789, i32 0, i32 7
  %791 = getelementptr inbounds %struct.Reg, %struct.Reg* %790, i32 0, i32 0
  %RDX.i1655 = bitcast %union.anon* %791 to i64*
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %793 = getelementptr inbounds %struct.GPR, %struct.GPR* %792, i32 0, i32 15
  %794 = getelementptr inbounds %struct.Reg, %struct.Reg* %793, i32 0, i32 0
  %RBP.i1656 = bitcast %union.anon* %794 to i64*
  %795 = load i64, i64* %RBP.i1656
  %796 = sub i64 %795, 8
  %797 = load i64, i64* %PC.i1654
  %798 = add i64 %797, 4
  store i64 %798, i64* %PC.i1654
  %799 = inttoptr i64 %796 to i64*
  %800 = load i64, i64* %799
  store i64 %800, i64* %RDX.i1655, align 8
  store %struct.Memory* %loadMem_45f63b, %struct.Memory** %MEMORY
  %loadMem_45f63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %802 = getelementptr inbounds %struct.GPR, %struct.GPR* %801, i32 0, i32 33
  %803 = getelementptr inbounds %struct.Reg, %struct.Reg* %802, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %803 to i64*
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %805 = getelementptr inbounds %struct.GPR, %struct.GPR* %804, i32 0, i32 17
  %806 = getelementptr inbounds %struct.Reg, %struct.Reg* %805, i32 0, i32 0
  %R8D.i1652 = bitcast %union.anon* %806 to i32*
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %808 = getelementptr inbounds %struct.GPR, %struct.GPR* %807, i32 0, i32 15
  %809 = getelementptr inbounds %struct.Reg, %struct.Reg* %808, i32 0, i32 0
  %RBP.i1653 = bitcast %union.anon* %809 to i64*
  %810 = bitcast i32* %R8D.i1652 to i64*
  %811 = load i64, i64* %RBP.i1653
  %812 = sub i64 %811, 20
  %813 = load i64, i64* %PC.i1651
  %814 = add i64 %813, 4
  store i64 %814, i64* %PC.i1651
  %815 = inttoptr i64 %812 to i32*
  %816 = load i32, i32* %815
  %817 = zext i32 %816 to i64
  store i64 %817, i64* %810, align 8
  store %struct.Memory* %loadMem_45f63f, %struct.Memory** %MEMORY
  %loadMem_45f643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 33
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %820 to i64*
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %822 = getelementptr inbounds %struct.GPR, %struct.GPR* %821, i32 0, i32 17
  %823 = getelementptr inbounds %struct.Reg, %struct.Reg* %822, i32 0, i32 0
  %R8D.i1650 = bitcast %union.anon* %823 to i32*
  %824 = bitcast i32* %R8D.i1650 to i64*
  %825 = load i32, i32* %R8D.i1650
  %826 = zext i32 %825 to i64
  %827 = load i64, i64* %PC.i1649
  %828 = add i64 %827, 4
  store i64 %828, i64* %PC.i1649
  %829 = and i64 %826, 4294967295
  %830 = shl i64 %829, 2
  %831 = trunc i64 %830 to i32
  %832 = icmp slt i32 %831, 0
  %833 = shl i32 %831, 1
  %834 = zext i32 %833 to i64
  store i64 %834, i64* %824, align 8
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %836 = zext i1 %832 to i8
  store i8 %836, i8* %835, align 1
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %838 = and i32 %833, 254
  %839 = call i32 @llvm.ctpop.i32(i32 %838)
  %840 = trunc i32 %839 to i8
  %841 = and i8 %840, 1
  %842 = xor i8 %841, 1
  store i8 %842, i8* %837, align 1
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %843, align 1
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %845 = icmp eq i32 %833, 0
  %846 = zext i1 %845 to i8
  store i8 %846, i8* %844, align 1
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %848 = lshr i32 %833, 31
  %849 = trunc i32 %848 to i8
  store i8 %849, i8* %847, align 1
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %850, align 1
  store %struct.Memory* %loadMem_45f643, %struct.Memory** %MEMORY
  %loadMem_45f647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 33
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %PC.i1647 = bitcast %union.anon* %853 to i64*
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %855 = getelementptr inbounds %struct.GPR, %struct.GPR* %854, i32 0, i32 17
  %856 = getelementptr inbounds %struct.Reg, %struct.Reg* %855, i32 0, i32 0
  %R8D.i1648 = bitcast %union.anon* %856 to i32*
  %857 = bitcast i32* %R8D.i1648 to i64*
  %858 = load i32, i32* %R8D.i1648
  %859 = zext i32 %858 to i64
  %860 = load i64, i64* %PC.i1647
  %861 = add i64 %860, 4
  store i64 %861, i64* %PC.i1647
  %862 = add i32 5, %858
  %863 = zext i32 %862 to i64
  store i64 %863, i64* %857, align 8
  %864 = icmp ult i32 %862, %858
  %865 = icmp ult i32 %862, 5
  %866 = or i1 %864, %865
  %867 = zext i1 %866 to i8
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %867, i8* %868, align 1
  %869 = and i32 %862, 255
  %870 = call i32 @llvm.ctpop.i32(i32 %869)
  %871 = trunc i32 %870 to i8
  %872 = and i8 %871, 1
  %873 = xor i8 %872, 1
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %873, i8* %874, align 1
  %875 = xor i64 5, %859
  %876 = trunc i64 %875 to i32
  %877 = xor i32 %876, %862
  %878 = lshr i32 %877, 4
  %879 = trunc i32 %878 to i8
  %880 = and i8 %879, 1
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %880, i8* %881, align 1
  %882 = icmp eq i32 %862, 0
  %883 = zext i1 %882 to i8
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %883, i8* %884, align 1
  %885 = lshr i32 %862, 31
  %886 = trunc i32 %885 to i8
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %886, i8* %887, align 1
  %888 = lshr i32 %858, 31
  %889 = xor i32 %885, %888
  %890 = add i32 %889, %885
  %891 = icmp eq i32 %890, 2
  %892 = zext i1 %891 to i8
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %892, i8* %893, align 1
  store %struct.Memory* %loadMem_45f647, %struct.Memory** %MEMORY
  %loadMem_45f64b = load %struct.Memory*, %struct.Memory** %MEMORY
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %895 = getelementptr inbounds %struct.GPR, %struct.GPR* %894, i32 0, i32 33
  %896 = getelementptr inbounds %struct.Reg, %struct.Reg* %895, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %896 to i64*
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %898 = getelementptr inbounds %struct.GPR, %struct.GPR* %897, i32 0, i32 17
  %899 = getelementptr inbounds %struct.Reg, %struct.Reg* %898, i32 0, i32 0
  %R8D.i1645 = bitcast %union.anon* %899 to i32*
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %901 = getelementptr inbounds %struct.GPR, %struct.GPR* %900, i32 0, i32 11
  %902 = getelementptr inbounds %struct.Reg, %struct.Reg* %901, i32 0, i32 0
  %RDI.i1646 = bitcast %union.anon* %902 to i64*
  %903 = load i32, i32* %R8D.i1645
  %904 = zext i32 %903 to i64
  %905 = load i64, i64* %PC.i1644
  %906 = add i64 %905, 3
  store i64 %906, i64* %PC.i1644
  %907 = shl i64 %904, 32
  %908 = ashr exact i64 %907, 32
  store i64 %908, i64* %RDI.i1646, align 8
  store %struct.Memory* %loadMem_45f64b, %struct.Memory** %MEMORY
  %loadMem_45f64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %910 = getelementptr inbounds %struct.GPR, %struct.GPR* %909, i32 0, i32 33
  %911 = getelementptr inbounds %struct.Reg, %struct.Reg* %910, i32 0, i32 0
  %PC.i1640 = bitcast %union.anon* %911 to i64*
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %913 = getelementptr inbounds %struct.GPR, %struct.GPR* %912, i32 0, i32 7
  %914 = getelementptr inbounds %struct.Reg, %struct.Reg* %913, i32 0, i32 0
  %RDX.i1641 = bitcast %union.anon* %914 to i64*
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %916 = getelementptr inbounds %struct.GPR, %struct.GPR* %915, i32 0, i32 9
  %917 = getelementptr inbounds %struct.Reg, %struct.Reg* %916, i32 0, i32 0
  %RSI.i1642 = bitcast %union.anon* %917 to i64*
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %919 = getelementptr inbounds %struct.GPR, %struct.GPR* %918, i32 0, i32 11
  %920 = getelementptr inbounds %struct.Reg, %struct.Reg* %919, i32 0, i32 0
  %RDI.i1643 = bitcast %union.anon* %920 to i64*
  %921 = load i64, i64* %RSI.i1642
  %922 = load i64, i64* %RDX.i1641
  %923 = load i64, i64* %RDI.i1643
  %924 = mul i64 %923, 4
  %925 = add i64 %924, %922
  %926 = load i64, i64* %PC.i1640
  %927 = add i64 %926, 3
  store i64 %927, i64* %PC.i1640
  %928 = trunc i64 %921 to i32
  %929 = inttoptr i64 %925 to i32*
  %930 = load i32, i32* %929
  %931 = add i32 %930, %928
  %932 = zext i32 %931 to i64
  store i64 %932, i64* %RSI.i1642, align 8
  %933 = icmp ult i32 %931, %928
  %934 = icmp ult i32 %931, %930
  %935 = or i1 %933, %934
  %936 = zext i1 %935 to i8
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %936, i8* %937, align 1
  %938 = and i32 %931, 255
  %939 = call i32 @llvm.ctpop.i32(i32 %938)
  %940 = trunc i32 %939 to i8
  %941 = and i8 %940, 1
  %942 = xor i8 %941, 1
  %943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %942, i8* %943, align 1
  %944 = xor i32 %930, %928
  %945 = xor i32 %944, %931
  %946 = lshr i32 %945, 4
  %947 = trunc i32 %946 to i8
  %948 = and i8 %947, 1
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %948, i8* %949, align 1
  %950 = icmp eq i32 %931, 0
  %951 = zext i1 %950 to i8
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %951, i8* %952, align 1
  %953 = lshr i32 %931, 31
  %954 = trunc i32 %953 to i8
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %954, i8* %955, align 1
  %956 = lshr i32 %928, 31
  %957 = lshr i32 %930, 31
  %958 = xor i32 %953, %956
  %959 = xor i32 %953, %957
  %960 = add i32 %958, %959
  %961 = icmp eq i32 %960, 2
  %962 = zext i1 %961 to i8
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %962, i8* %963, align 1
  store %struct.Memory* %loadMem_45f64e, %struct.Memory** %MEMORY
  %loadMem_45f651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %965 = getelementptr inbounds %struct.GPR, %struct.GPR* %964, i32 0, i32 33
  %966 = getelementptr inbounds %struct.Reg, %struct.Reg* %965, i32 0, i32 0
  %PC.i1637 = bitcast %union.anon* %966 to i64*
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %968 = getelementptr inbounds %struct.GPR, %struct.GPR* %967, i32 0, i32 7
  %969 = getelementptr inbounds %struct.Reg, %struct.Reg* %968, i32 0, i32 0
  %RDX.i1638 = bitcast %union.anon* %969 to i64*
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %971 = getelementptr inbounds %struct.GPR, %struct.GPR* %970, i32 0, i32 15
  %972 = getelementptr inbounds %struct.Reg, %struct.Reg* %971, i32 0, i32 0
  %RBP.i1639 = bitcast %union.anon* %972 to i64*
  %973 = load i64, i64* %RBP.i1639
  %974 = sub i64 %973, 20
  %975 = load i64, i64* %PC.i1637
  %976 = add i64 %975, 4
  store i64 %976, i64* %PC.i1637
  %977 = inttoptr i64 %974 to i32*
  %978 = load i32, i32* %977
  %979 = sext i32 %978 to i64
  store i64 %979, i64* %RDX.i1638, align 8
  store %struct.Memory* %loadMem_45f651, %struct.Memory** %MEMORY
  %loadMem_45f655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %981 = getelementptr inbounds %struct.GPR, %struct.GPR* %980, i32 0, i32 33
  %982 = getelementptr inbounds %struct.Reg, %struct.Reg* %981, i32 0, i32 0
  %PC.i1635 = bitcast %union.anon* %982 to i64*
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %984 = getelementptr inbounds %struct.GPR, %struct.GPR* %983, i32 0, i32 7
  %985 = getelementptr inbounds %struct.Reg, %struct.Reg* %984, i32 0, i32 0
  %RDX.i1636 = bitcast %union.anon* %985 to i64*
  %986 = load i64, i64* %RDX.i1636
  %987 = load i64, i64* %PC.i1635
  %988 = add i64 %987, 4
  store i64 %988, i64* %PC.i1635
  %989 = shl i64 %986, 4
  %990 = icmp slt i64 %989, 0
  %991 = shl i64 %989, 1
  store i64 %991, i64* %RDX.i1636, align 8
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %993 = zext i1 %990 to i8
  store i8 %993, i8* %992, align 1
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %995 = trunc i64 %991 to i32
  %996 = and i32 %995, 254
  %997 = call i32 @llvm.ctpop.i32(i32 %996)
  %998 = trunc i32 %997 to i8
  %999 = and i8 %998, 1
  %1000 = xor i8 %999, 1
  store i8 %1000, i8* %994, align 1
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1001, align 1
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1003 = icmp eq i64 %991, 0
  %1004 = zext i1 %1003 to i8
  store i8 %1004, i8* %1002, align 1
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1006 = lshr i64 %991, 63
  %1007 = trunc i64 %1006 to i8
  store i8 %1007, i8* %1005, align 1
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1008, align 1
  store %struct.Memory* %loadMem_45f655, %struct.Memory** %MEMORY
  %loadMem_45f659 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1010 = getelementptr inbounds %struct.GPR, %struct.GPR* %1009, i32 0, i32 33
  %1011 = getelementptr inbounds %struct.Reg, %struct.Reg* %1010, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %1011 to i64*
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 1
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %RAX.i1633 = bitcast %union.anon* %1014 to i64*
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 11
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %RDI.i1634 = bitcast %union.anon* %1017 to i64*
  %1018 = load i64, i64* %RAX.i1633
  %1019 = load i64, i64* %PC.i1632
  %1020 = add i64 %1019, 3
  store i64 %1020, i64* %PC.i1632
  store i64 %1018, i64* %RDI.i1634, align 8
  store %struct.Memory* %loadMem_45f659, %struct.Memory** %MEMORY
  %loadMem_45f65c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1022 = getelementptr inbounds %struct.GPR, %struct.GPR* %1021, i32 0, i32 33
  %1023 = getelementptr inbounds %struct.Reg, %struct.Reg* %1022, i32 0, i32 0
  %PC.i1629 = bitcast %union.anon* %1023 to i64*
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1025 = getelementptr inbounds %struct.GPR, %struct.GPR* %1024, i32 0, i32 7
  %1026 = getelementptr inbounds %struct.Reg, %struct.Reg* %1025, i32 0, i32 0
  %RDX.i1630 = bitcast %union.anon* %1026 to i64*
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 11
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %RDI.i1631 = bitcast %union.anon* %1029 to i64*
  %1030 = load i64, i64* %RDI.i1631
  %1031 = load i64, i64* %RDX.i1630
  %1032 = load i64, i64* %PC.i1629
  %1033 = add i64 %1032, 3
  store i64 %1033, i64* %PC.i1629
  %1034 = add i64 %1031, %1030
  store i64 %1034, i64* %RDI.i1631, align 8
  %1035 = icmp ult i64 %1034, %1030
  %1036 = icmp ult i64 %1034, %1031
  %1037 = or i1 %1035, %1036
  %1038 = zext i1 %1037 to i8
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1038, i8* %1039, align 1
  %1040 = trunc i64 %1034 to i32
  %1041 = and i32 %1040, 255
  %1042 = call i32 @llvm.ctpop.i32(i32 %1041)
  %1043 = trunc i32 %1042 to i8
  %1044 = and i8 %1043, 1
  %1045 = xor i8 %1044, 1
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1045, i8* %1046, align 1
  %1047 = xor i64 %1031, %1030
  %1048 = xor i64 %1047, %1034
  %1049 = lshr i64 %1048, 4
  %1050 = trunc i64 %1049 to i8
  %1051 = and i8 %1050, 1
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1051, i8* %1052, align 1
  %1053 = icmp eq i64 %1034, 0
  %1054 = zext i1 %1053 to i8
  %1055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1054, i8* %1055, align 1
  %1056 = lshr i64 %1034, 63
  %1057 = trunc i64 %1056 to i8
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1057, i8* %1058, align 1
  %1059 = lshr i64 %1030, 63
  %1060 = lshr i64 %1031, 63
  %1061 = xor i64 %1056, %1059
  %1062 = xor i64 %1056, %1060
  %1063 = add i64 %1061, %1062
  %1064 = icmp eq i64 %1063, 2
  %1065 = zext i1 %1064 to i8
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1065, i8* %1066, align 1
  store %struct.Memory* %loadMem_45f65c, %struct.Memory** %MEMORY
  %loadMem_45f65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 33
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %PC.i1626 = bitcast %union.anon* %1069 to i64*
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 9
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %ESI.i1627 = bitcast %union.anon* %1072 to i32*
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 11
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %RDI.i1628 = bitcast %union.anon* %1075 to i64*
  %1076 = load i64, i64* %RDI.i1628
  %1077 = add i64 %1076, 4
  %1078 = load i32, i32* %ESI.i1627
  %1079 = zext i32 %1078 to i64
  %1080 = load i64, i64* %PC.i1626
  %1081 = add i64 %1080, 3
  store i64 %1081, i64* %PC.i1626
  %1082 = inttoptr i64 %1077 to i32*
  store i32 %1078, i32* %1082
  store %struct.Memory* %loadMem_45f65f, %struct.Memory** %MEMORY
  %loadMem_45f662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1084 = getelementptr inbounds %struct.GPR, %struct.GPR* %1083, i32 0, i32 33
  %1085 = getelementptr inbounds %struct.Reg, %struct.Reg* %1084, i32 0, i32 0
  %PC.i1623 = bitcast %union.anon* %1085 to i64*
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 7
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %RDX.i1624 = bitcast %union.anon* %1088 to i64*
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 15
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %RBP.i1625 = bitcast %union.anon* %1091 to i64*
  %1092 = load i64, i64* %RBP.i1625
  %1093 = sub i64 %1092, 8
  %1094 = load i64, i64* %PC.i1623
  %1095 = add i64 %1094, 4
  store i64 %1095, i64* %PC.i1623
  %1096 = inttoptr i64 %1093 to i64*
  %1097 = load i64, i64* %1096
  store i64 %1097, i64* %RDX.i1624, align 8
  store %struct.Memory* %loadMem_45f662, %struct.Memory** %MEMORY
  %loadMem_45f666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1099 = getelementptr inbounds %struct.GPR, %struct.GPR* %1098, i32 0, i32 33
  %1100 = getelementptr inbounds %struct.Reg, %struct.Reg* %1099, i32 0, i32 0
  %PC.i1620 = bitcast %union.anon* %1100 to i64*
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1102 = getelementptr inbounds %struct.GPR, %struct.GPR* %1101, i32 0, i32 9
  %1103 = getelementptr inbounds %struct.Reg, %struct.Reg* %1102, i32 0, i32 0
  %RSI.i1621 = bitcast %union.anon* %1103 to i64*
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1105 = getelementptr inbounds %struct.GPR, %struct.GPR* %1104, i32 0, i32 15
  %1106 = getelementptr inbounds %struct.Reg, %struct.Reg* %1105, i32 0, i32 0
  %RBP.i1622 = bitcast %union.anon* %1106 to i64*
  %1107 = load i64, i64* %RBP.i1622
  %1108 = sub i64 %1107, 20
  %1109 = load i64, i64* %PC.i1620
  %1110 = add i64 %1109, 3
  store i64 %1110, i64* %PC.i1620
  %1111 = inttoptr i64 %1108 to i32*
  %1112 = load i32, i32* %1111
  %1113 = zext i32 %1112 to i64
  store i64 %1113, i64* %RSI.i1621, align 8
  store %struct.Memory* %loadMem_45f666, %struct.Memory** %MEMORY
  %loadMem_45f669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 33
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %1116 to i64*
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1118 = getelementptr inbounds %struct.GPR, %struct.GPR* %1117, i32 0, i32 9
  %1119 = getelementptr inbounds %struct.Reg, %struct.Reg* %1118, i32 0, i32 0
  %RSI.i1619 = bitcast %union.anon* %1119 to i64*
  %1120 = load i64, i64* %RSI.i1619
  %1121 = load i64, i64* %PC.i1618
  %1122 = add i64 %1121, 3
  store i64 %1122, i64* %PC.i1618
  %1123 = and i64 %1120, 4294967295
  %1124 = shl i64 %1123, 2
  %1125 = trunc i64 %1124 to i32
  %1126 = icmp slt i32 %1125, 0
  %1127 = shl i32 %1125, 1
  %1128 = zext i32 %1127 to i64
  store i64 %1128, i64* %RSI.i1619, align 8
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1130 = zext i1 %1126 to i8
  store i8 %1130, i8* %1129, align 1
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1132 = and i32 %1127, 254
  %1133 = call i32 @llvm.ctpop.i32(i32 %1132)
  %1134 = trunc i32 %1133 to i8
  %1135 = and i8 %1134, 1
  %1136 = xor i8 %1135, 1
  store i8 %1136, i8* %1131, align 1
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1137, align 1
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1139 = icmp eq i32 %1127, 0
  %1140 = zext i1 %1139 to i8
  store i8 %1140, i8* %1138, align 1
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1142 = lshr i32 %1127, 31
  %1143 = trunc i32 %1142 to i8
  store i8 %1143, i8* %1141, align 1
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1144, align 1
  store %struct.Memory* %loadMem_45f669, %struct.Memory** %MEMORY
  %loadMem_45f66c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 33
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %PC.i1616 = bitcast %union.anon* %1147 to i64*
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1149 = getelementptr inbounds %struct.GPR, %struct.GPR* %1148, i32 0, i32 9
  %1150 = getelementptr inbounds %struct.Reg, %struct.Reg* %1149, i32 0, i32 0
  %RSI.i1617 = bitcast %union.anon* %1150 to i64*
  %1151 = load i64, i64* %RSI.i1617
  %1152 = load i64, i64* %PC.i1616
  %1153 = add i64 %1152, 3
  store i64 %1153, i64* %PC.i1616
  %1154 = trunc i64 %1151 to i32
  %1155 = add i32 2, %1154
  %1156 = zext i32 %1155 to i64
  store i64 %1156, i64* %RSI.i1617, align 8
  %1157 = icmp ult i32 %1155, %1154
  %1158 = icmp ult i32 %1155, 2
  %1159 = or i1 %1157, %1158
  %1160 = zext i1 %1159 to i8
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1160, i8* %1161, align 1
  %1162 = and i32 %1155, 255
  %1163 = call i32 @llvm.ctpop.i32(i32 %1162)
  %1164 = trunc i32 %1163 to i8
  %1165 = and i8 %1164, 1
  %1166 = xor i8 %1165, 1
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1166, i8* %1167, align 1
  %1168 = xor i64 2, %1151
  %1169 = trunc i64 %1168 to i32
  %1170 = xor i32 %1169, %1155
  %1171 = lshr i32 %1170, 4
  %1172 = trunc i32 %1171 to i8
  %1173 = and i8 %1172, 1
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1173, i8* %1174, align 1
  %1175 = icmp eq i32 %1155, 0
  %1176 = zext i1 %1175 to i8
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1176, i8* %1177, align 1
  %1178 = lshr i32 %1155, 31
  %1179 = trunc i32 %1178 to i8
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1179, i8* %1180, align 1
  %1181 = lshr i32 %1154, 31
  %1182 = xor i32 %1178, %1181
  %1183 = add i32 %1182, %1178
  %1184 = icmp eq i32 %1183, 2
  %1185 = zext i1 %1184 to i8
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1185, i8* %1186, align 1
  store %struct.Memory* %loadMem_45f66c, %struct.Memory** %MEMORY
  %loadMem_45f66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1188 = getelementptr inbounds %struct.GPR, %struct.GPR* %1187, i32 0, i32 33
  %1189 = getelementptr inbounds %struct.Reg, %struct.Reg* %1188, i32 0, i32 0
  %PC.i1613 = bitcast %union.anon* %1189 to i64*
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1191 = getelementptr inbounds %struct.GPR, %struct.GPR* %1190, i32 0, i32 9
  %1192 = getelementptr inbounds %struct.Reg, %struct.Reg* %1191, i32 0, i32 0
  %ESI.i1614 = bitcast %union.anon* %1192 to i32*
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1194 = getelementptr inbounds %struct.GPR, %struct.GPR* %1193, i32 0, i32 11
  %1195 = getelementptr inbounds %struct.Reg, %struct.Reg* %1194, i32 0, i32 0
  %RDI.i1615 = bitcast %union.anon* %1195 to i64*
  %1196 = load i32, i32* %ESI.i1614
  %1197 = zext i32 %1196 to i64
  %1198 = load i64, i64* %PC.i1613
  %1199 = add i64 %1198, 3
  store i64 %1199, i64* %PC.i1613
  %1200 = shl i64 %1197, 32
  %1201 = ashr exact i64 %1200, 32
  store i64 %1201, i64* %RDI.i1615, align 8
  store %struct.Memory* %loadMem_45f66f, %struct.Memory** %MEMORY
  %loadMem_45f672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1203 = getelementptr inbounds %struct.GPR, %struct.GPR* %1202, i32 0, i32 33
  %1204 = getelementptr inbounds %struct.Reg, %struct.Reg* %1203, i32 0, i32 0
  %PC.i1609 = bitcast %union.anon* %1204 to i64*
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1206 = getelementptr inbounds %struct.GPR, %struct.GPR* %1205, i32 0, i32 7
  %1207 = getelementptr inbounds %struct.Reg, %struct.Reg* %1206, i32 0, i32 0
  %RDX.i1610 = bitcast %union.anon* %1207 to i64*
  %1208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1209 = getelementptr inbounds %struct.GPR, %struct.GPR* %1208, i32 0, i32 9
  %1210 = getelementptr inbounds %struct.Reg, %struct.Reg* %1209, i32 0, i32 0
  %RSI.i1611 = bitcast %union.anon* %1210 to i64*
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1212 = getelementptr inbounds %struct.GPR, %struct.GPR* %1211, i32 0, i32 11
  %1213 = getelementptr inbounds %struct.Reg, %struct.Reg* %1212, i32 0, i32 0
  %RDI.i1612 = bitcast %union.anon* %1213 to i64*
  %1214 = load i64, i64* %RDX.i1610
  %1215 = load i64, i64* %RDI.i1612
  %1216 = mul i64 %1215, 4
  %1217 = add i64 %1216, %1214
  %1218 = load i64, i64* %PC.i1609
  %1219 = add i64 %1218, 3
  store i64 %1219, i64* %PC.i1609
  %1220 = inttoptr i64 %1217 to i32*
  %1221 = load i32, i32* %1220
  %1222 = zext i32 %1221 to i64
  store i64 %1222, i64* %RSI.i1611, align 8
  store %struct.Memory* %loadMem_45f672, %struct.Memory** %MEMORY
  %loadMem_45f675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1224 = getelementptr inbounds %struct.GPR, %struct.GPR* %1223, i32 0, i32 33
  %1225 = getelementptr inbounds %struct.Reg, %struct.Reg* %1224, i32 0, i32 0
  %PC.i1606 = bitcast %union.anon* %1225 to i64*
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1227 = getelementptr inbounds %struct.GPR, %struct.GPR* %1226, i32 0, i32 7
  %1228 = getelementptr inbounds %struct.Reg, %struct.Reg* %1227, i32 0, i32 0
  %RDX.i1607 = bitcast %union.anon* %1228 to i64*
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 15
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %RBP.i1608 = bitcast %union.anon* %1231 to i64*
  %1232 = load i64, i64* %RBP.i1608
  %1233 = sub i64 %1232, 8
  %1234 = load i64, i64* %PC.i1606
  %1235 = add i64 %1234, 4
  store i64 %1235, i64* %PC.i1606
  %1236 = inttoptr i64 %1233 to i64*
  %1237 = load i64, i64* %1236
  store i64 %1237, i64* %RDX.i1607, align 8
  store %struct.Memory* %loadMem_45f675, %struct.Memory** %MEMORY
  %loadMem_45f679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1239 = getelementptr inbounds %struct.GPR, %struct.GPR* %1238, i32 0, i32 33
  %1240 = getelementptr inbounds %struct.Reg, %struct.Reg* %1239, i32 0, i32 0
  %PC.i1603 = bitcast %union.anon* %1240 to i64*
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1242 = getelementptr inbounds %struct.GPR, %struct.GPR* %1241, i32 0, i32 17
  %1243 = getelementptr inbounds %struct.Reg, %struct.Reg* %1242, i32 0, i32 0
  %R8D.i1604 = bitcast %union.anon* %1243 to i32*
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1245 = getelementptr inbounds %struct.GPR, %struct.GPR* %1244, i32 0, i32 15
  %1246 = getelementptr inbounds %struct.Reg, %struct.Reg* %1245, i32 0, i32 0
  %RBP.i1605 = bitcast %union.anon* %1246 to i64*
  %1247 = bitcast i32* %R8D.i1604 to i64*
  %1248 = load i64, i64* %RBP.i1605
  %1249 = sub i64 %1248, 20
  %1250 = load i64, i64* %PC.i1603
  %1251 = add i64 %1250, 4
  store i64 %1251, i64* %PC.i1603
  %1252 = inttoptr i64 %1249 to i32*
  %1253 = load i32, i32* %1252
  %1254 = zext i32 %1253 to i64
  store i64 %1254, i64* %1247, align 8
  store %struct.Memory* %loadMem_45f679, %struct.Memory** %MEMORY
  %loadMem_45f67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 33
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %1257 to i64*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 17
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %R8D.i1602 = bitcast %union.anon* %1260 to i32*
  %1261 = bitcast i32* %R8D.i1602 to i64*
  %1262 = load i32, i32* %R8D.i1602
  %1263 = zext i32 %1262 to i64
  %1264 = load i64, i64* %PC.i1601
  %1265 = add i64 %1264, 4
  store i64 %1265, i64* %PC.i1601
  %1266 = and i64 %1263, 4294967295
  %1267 = shl i64 %1266, 2
  %1268 = trunc i64 %1267 to i32
  %1269 = icmp slt i32 %1268, 0
  %1270 = shl i32 %1268, 1
  %1271 = zext i32 %1270 to i64
  store i64 %1271, i64* %1261, align 8
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1273 = zext i1 %1269 to i8
  store i8 %1273, i8* %1272, align 1
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1275 = and i32 %1270, 254
  %1276 = call i32 @llvm.ctpop.i32(i32 %1275)
  %1277 = trunc i32 %1276 to i8
  %1278 = and i8 %1277, 1
  %1279 = xor i8 %1278, 1
  store i8 %1279, i8* %1274, align 1
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1280, align 1
  %1281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1282 = icmp eq i32 %1270, 0
  %1283 = zext i1 %1282 to i8
  store i8 %1283, i8* %1281, align 1
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1285 = lshr i32 %1270, 31
  %1286 = trunc i32 %1285 to i8
  store i8 %1286, i8* %1284, align 1
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1287, align 1
  store %struct.Memory* %loadMem_45f67d, %struct.Memory** %MEMORY
  %loadMem_45f681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1289 = getelementptr inbounds %struct.GPR, %struct.GPR* %1288, i32 0, i32 33
  %1290 = getelementptr inbounds %struct.Reg, %struct.Reg* %1289, i32 0, i32 0
  %PC.i1599 = bitcast %union.anon* %1290 to i64*
  %1291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1292 = getelementptr inbounds %struct.GPR, %struct.GPR* %1291, i32 0, i32 17
  %1293 = getelementptr inbounds %struct.Reg, %struct.Reg* %1292, i32 0, i32 0
  %R8D.i1600 = bitcast %union.anon* %1293 to i32*
  %1294 = bitcast i32* %R8D.i1600 to i64*
  %1295 = load i32, i32* %R8D.i1600
  %1296 = zext i32 %1295 to i64
  %1297 = load i64, i64* %PC.i1599
  %1298 = add i64 %1297, 4
  store i64 %1298, i64* %PC.i1599
  %1299 = add i32 6, %1295
  %1300 = zext i32 %1299 to i64
  store i64 %1300, i64* %1294, align 8
  %1301 = icmp ult i32 %1299, %1295
  %1302 = icmp ult i32 %1299, 6
  %1303 = or i1 %1301, %1302
  %1304 = zext i1 %1303 to i8
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1304, i8* %1305, align 1
  %1306 = and i32 %1299, 255
  %1307 = call i32 @llvm.ctpop.i32(i32 %1306)
  %1308 = trunc i32 %1307 to i8
  %1309 = and i8 %1308, 1
  %1310 = xor i8 %1309, 1
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1310, i8* %1311, align 1
  %1312 = xor i64 6, %1296
  %1313 = trunc i64 %1312 to i32
  %1314 = xor i32 %1313, %1299
  %1315 = lshr i32 %1314, 4
  %1316 = trunc i32 %1315 to i8
  %1317 = and i8 %1316, 1
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1317, i8* %1318, align 1
  %1319 = icmp eq i32 %1299, 0
  %1320 = zext i1 %1319 to i8
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1320, i8* %1321, align 1
  %1322 = lshr i32 %1299, 31
  %1323 = trunc i32 %1322 to i8
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1323, i8* %1324, align 1
  %1325 = lshr i32 %1295, 31
  %1326 = xor i32 %1322, %1325
  %1327 = add i32 %1326, %1322
  %1328 = icmp eq i32 %1327, 2
  %1329 = zext i1 %1328 to i8
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1329, i8* %1330, align 1
  store %struct.Memory* %loadMem_45f681, %struct.Memory** %MEMORY
  %loadMem_45f685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1332 = getelementptr inbounds %struct.GPR, %struct.GPR* %1331, i32 0, i32 33
  %1333 = getelementptr inbounds %struct.Reg, %struct.Reg* %1332, i32 0, i32 0
  %PC.i1596 = bitcast %union.anon* %1333 to i64*
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1335 = getelementptr inbounds %struct.GPR, %struct.GPR* %1334, i32 0, i32 17
  %1336 = getelementptr inbounds %struct.Reg, %struct.Reg* %1335, i32 0, i32 0
  %R8D.i1597 = bitcast %union.anon* %1336 to i32*
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1338 = getelementptr inbounds %struct.GPR, %struct.GPR* %1337, i32 0, i32 11
  %1339 = getelementptr inbounds %struct.Reg, %struct.Reg* %1338, i32 0, i32 0
  %RDI.i1598 = bitcast %union.anon* %1339 to i64*
  %1340 = load i32, i32* %R8D.i1597
  %1341 = zext i32 %1340 to i64
  %1342 = load i64, i64* %PC.i1596
  %1343 = add i64 %1342, 3
  store i64 %1343, i64* %PC.i1596
  %1344 = shl i64 %1341, 32
  %1345 = ashr exact i64 %1344, 32
  store i64 %1345, i64* %RDI.i1598, align 8
  store %struct.Memory* %loadMem_45f685, %struct.Memory** %MEMORY
  %loadMem_45f688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 33
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %PC.i1592 = bitcast %union.anon* %1348 to i64*
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 7
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %RDX.i1593 = bitcast %union.anon* %1351 to i64*
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1353 = getelementptr inbounds %struct.GPR, %struct.GPR* %1352, i32 0, i32 9
  %1354 = getelementptr inbounds %struct.Reg, %struct.Reg* %1353, i32 0, i32 0
  %RSI.i1594 = bitcast %union.anon* %1354 to i64*
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1356 = getelementptr inbounds %struct.GPR, %struct.GPR* %1355, i32 0, i32 11
  %1357 = getelementptr inbounds %struct.Reg, %struct.Reg* %1356, i32 0, i32 0
  %RDI.i1595 = bitcast %union.anon* %1357 to i64*
  %1358 = load i64, i64* %RSI.i1594
  %1359 = load i64, i64* %RDX.i1593
  %1360 = load i64, i64* %RDI.i1595
  %1361 = mul i64 %1360, 4
  %1362 = add i64 %1361, %1359
  %1363 = load i64, i64* %PC.i1592
  %1364 = add i64 %1363, 3
  store i64 %1364, i64* %PC.i1592
  %1365 = trunc i64 %1358 to i32
  %1366 = inttoptr i64 %1362 to i32*
  %1367 = load i32, i32* %1366
  %1368 = add i32 %1367, %1365
  %1369 = zext i32 %1368 to i64
  store i64 %1369, i64* %RSI.i1594, align 8
  %1370 = icmp ult i32 %1368, %1365
  %1371 = icmp ult i32 %1368, %1367
  %1372 = or i1 %1370, %1371
  %1373 = zext i1 %1372 to i8
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1373, i8* %1374, align 1
  %1375 = and i32 %1368, 255
  %1376 = call i32 @llvm.ctpop.i32(i32 %1375)
  %1377 = trunc i32 %1376 to i8
  %1378 = and i8 %1377, 1
  %1379 = xor i8 %1378, 1
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1379, i8* %1380, align 1
  %1381 = xor i32 %1367, %1365
  %1382 = xor i32 %1381, %1368
  %1383 = lshr i32 %1382, 4
  %1384 = trunc i32 %1383 to i8
  %1385 = and i8 %1384, 1
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1385, i8* %1386, align 1
  %1387 = icmp eq i32 %1368, 0
  %1388 = zext i1 %1387 to i8
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1388, i8* %1389, align 1
  %1390 = lshr i32 %1368, 31
  %1391 = trunc i32 %1390 to i8
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1391, i8* %1392, align 1
  %1393 = lshr i32 %1365, 31
  %1394 = lshr i32 %1367, 31
  %1395 = xor i32 %1390, %1393
  %1396 = xor i32 %1390, %1394
  %1397 = add i32 %1395, %1396
  %1398 = icmp eq i32 %1397, 2
  %1399 = zext i1 %1398 to i8
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1399, i8* %1400, align 1
  store %struct.Memory* %loadMem_45f688, %struct.Memory** %MEMORY
  %loadMem_45f68b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1402 = getelementptr inbounds %struct.GPR, %struct.GPR* %1401, i32 0, i32 33
  %1403 = getelementptr inbounds %struct.Reg, %struct.Reg* %1402, i32 0, i32 0
  %PC.i1589 = bitcast %union.anon* %1403 to i64*
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1405 = getelementptr inbounds %struct.GPR, %struct.GPR* %1404, i32 0, i32 7
  %1406 = getelementptr inbounds %struct.Reg, %struct.Reg* %1405, i32 0, i32 0
  %RDX.i1590 = bitcast %union.anon* %1406 to i64*
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1408 = getelementptr inbounds %struct.GPR, %struct.GPR* %1407, i32 0, i32 15
  %1409 = getelementptr inbounds %struct.Reg, %struct.Reg* %1408, i32 0, i32 0
  %RBP.i1591 = bitcast %union.anon* %1409 to i64*
  %1410 = load i64, i64* %RBP.i1591
  %1411 = sub i64 %1410, 20
  %1412 = load i64, i64* %PC.i1589
  %1413 = add i64 %1412, 4
  store i64 %1413, i64* %PC.i1589
  %1414 = inttoptr i64 %1411 to i32*
  %1415 = load i32, i32* %1414
  %1416 = sext i32 %1415 to i64
  store i64 %1416, i64* %RDX.i1590, align 8
  store %struct.Memory* %loadMem_45f68b, %struct.Memory** %MEMORY
  %loadMem_45f68f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1418 = getelementptr inbounds %struct.GPR, %struct.GPR* %1417, i32 0, i32 33
  %1419 = getelementptr inbounds %struct.Reg, %struct.Reg* %1418, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %1419 to i64*
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1421 = getelementptr inbounds %struct.GPR, %struct.GPR* %1420, i32 0, i32 7
  %1422 = getelementptr inbounds %struct.Reg, %struct.Reg* %1421, i32 0, i32 0
  %RDX.i1588 = bitcast %union.anon* %1422 to i64*
  %1423 = load i64, i64* %RDX.i1588
  %1424 = load i64, i64* %PC.i1587
  %1425 = add i64 %1424, 4
  store i64 %1425, i64* %PC.i1587
  %1426 = shl i64 %1423, 4
  %1427 = icmp slt i64 %1426, 0
  %1428 = shl i64 %1426, 1
  store i64 %1428, i64* %RDX.i1588, align 8
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1430 = zext i1 %1427 to i8
  store i8 %1430, i8* %1429, align 1
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1432 = trunc i64 %1428 to i32
  %1433 = and i32 %1432, 254
  %1434 = call i32 @llvm.ctpop.i32(i32 %1433)
  %1435 = trunc i32 %1434 to i8
  %1436 = and i8 %1435, 1
  %1437 = xor i8 %1436, 1
  store i8 %1437, i8* %1431, align 1
  %1438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1438, align 1
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1440 = icmp eq i64 %1428, 0
  %1441 = zext i1 %1440 to i8
  store i8 %1441, i8* %1439, align 1
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1443 = lshr i64 %1428, 63
  %1444 = trunc i64 %1443 to i8
  store i8 %1444, i8* %1442, align 1
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1445, align 1
  store %struct.Memory* %loadMem_45f68f, %struct.Memory** %MEMORY
  %loadMem_45f693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1447 = getelementptr inbounds %struct.GPR, %struct.GPR* %1446, i32 0, i32 33
  %1448 = getelementptr inbounds %struct.Reg, %struct.Reg* %1447, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %1448 to i64*
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 1
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %RAX.i1585 = bitcast %union.anon* %1451 to i64*
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1453 = getelementptr inbounds %struct.GPR, %struct.GPR* %1452, i32 0, i32 11
  %1454 = getelementptr inbounds %struct.Reg, %struct.Reg* %1453, i32 0, i32 0
  %RDI.i1586 = bitcast %union.anon* %1454 to i64*
  %1455 = load i64, i64* %RAX.i1585
  %1456 = load i64, i64* %PC.i1584
  %1457 = add i64 %1456, 3
  store i64 %1457, i64* %PC.i1584
  store i64 %1455, i64* %RDI.i1586, align 8
  store %struct.Memory* %loadMem_45f693, %struct.Memory** %MEMORY
  %loadMem_45f696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1459 = getelementptr inbounds %struct.GPR, %struct.GPR* %1458, i32 0, i32 33
  %1460 = getelementptr inbounds %struct.Reg, %struct.Reg* %1459, i32 0, i32 0
  %PC.i1581 = bitcast %union.anon* %1460 to i64*
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1462 = getelementptr inbounds %struct.GPR, %struct.GPR* %1461, i32 0, i32 7
  %1463 = getelementptr inbounds %struct.Reg, %struct.Reg* %1462, i32 0, i32 0
  %RDX.i1582 = bitcast %union.anon* %1463 to i64*
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 11
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %RDI.i1583 = bitcast %union.anon* %1466 to i64*
  %1467 = load i64, i64* %RDI.i1583
  %1468 = load i64, i64* %RDX.i1582
  %1469 = load i64, i64* %PC.i1581
  %1470 = add i64 %1469, 3
  store i64 %1470, i64* %PC.i1581
  %1471 = add i64 %1468, %1467
  store i64 %1471, i64* %RDI.i1583, align 8
  %1472 = icmp ult i64 %1471, %1467
  %1473 = icmp ult i64 %1471, %1468
  %1474 = or i1 %1472, %1473
  %1475 = zext i1 %1474 to i8
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1475, i8* %1476, align 1
  %1477 = trunc i64 %1471 to i32
  %1478 = and i32 %1477, 255
  %1479 = call i32 @llvm.ctpop.i32(i32 %1478)
  %1480 = trunc i32 %1479 to i8
  %1481 = and i8 %1480, 1
  %1482 = xor i8 %1481, 1
  %1483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1482, i8* %1483, align 1
  %1484 = xor i64 %1468, %1467
  %1485 = xor i64 %1484, %1471
  %1486 = lshr i64 %1485, 4
  %1487 = trunc i64 %1486 to i8
  %1488 = and i8 %1487, 1
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1488, i8* %1489, align 1
  %1490 = icmp eq i64 %1471, 0
  %1491 = zext i1 %1490 to i8
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1491, i8* %1492, align 1
  %1493 = lshr i64 %1471, 63
  %1494 = trunc i64 %1493 to i8
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1494, i8* %1495, align 1
  %1496 = lshr i64 %1467, 63
  %1497 = lshr i64 %1468, 63
  %1498 = xor i64 %1493, %1496
  %1499 = xor i64 %1493, %1497
  %1500 = add i64 %1498, %1499
  %1501 = icmp eq i64 %1500, 2
  %1502 = zext i1 %1501 to i8
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1502, i8* %1503, align 1
  store %struct.Memory* %loadMem_45f696, %struct.Memory** %MEMORY
  %loadMem_45f699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1505 = getelementptr inbounds %struct.GPR, %struct.GPR* %1504, i32 0, i32 33
  %1506 = getelementptr inbounds %struct.Reg, %struct.Reg* %1505, i32 0, i32 0
  %PC.i1578 = bitcast %union.anon* %1506 to i64*
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1508 = getelementptr inbounds %struct.GPR, %struct.GPR* %1507, i32 0, i32 9
  %1509 = getelementptr inbounds %struct.Reg, %struct.Reg* %1508, i32 0, i32 0
  %ESI.i1579 = bitcast %union.anon* %1509 to i32*
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1511 = getelementptr inbounds %struct.GPR, %struct.GPR* %1510, i32 0, i32 11
  %1512 = getelementptr inbounds %struct.Reg, %struct.Reg* %1511, i32 0, i32 0
  %RDI.i1580 = bitcast %union.anon* %1512 to i64*
  %1513 = load i64, i64* %RDI.i1580
  %1514 = add i64 %1513, 8
  %1515 = load i32, i32* %ESI.i1579
  %1516 = zext i32 %1515 to i64
  %1517 = load i64, i64* %PC.i1578
  %1518 = add i64 %1517, 3
  store i64 %1518, i64* %PC.i1578
  %1519 = inttoptr i64 %1514 to i32*
  store i32 %1515, i32* %1519
  store %struct.Memory* %loadMem_45f699, %struct.Memory** %MEMORY
  %loadMem_45f69c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1521 = getelementptr inbounds %struct.GPR, %struct.GPR* %1520, i32 0, i32 33
  %1522 = getelementptr inbounds %struct.Reg, %struct.Reg* %1521, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %1522 to i64*
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1524 = getelementptr inbounds %struct.GPR, %struct.GPR* %1523, i32 0, i32 7
  %1525 = getelementptr inbounds %struct.Reg, %struct.Reg* %1524, i32 0, i32 0
  %RDX.i1576 = bitcast %union.anon* %1525 to i64*
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1527 = getelementptr inbounds %struct.GPR, %struct.GPR* %1526, i32 0, i32 15
  %1528 = getelementptr inbounds %struct.Reg, %struct.Reg* %1527, i32 0, i32 0
  %RBP.i1577 = bitcast %union.anon* %1528 to i64*
  %1529 = load i64, i64* %RBP.i1577
  %1530 = sub i64 %1529, 8
  %1531 = load i64, i64* %PC.i1575
  %1532 = add i64 %1531, 4
  store i64 %1532, i64* %PC.i1575
  %1533 = inttoptr i64 %1530 to i64*
  %1534 = load i64, i64* %1533
  store i64 %1534, i64* %RDX.i1576, align 8
  store %struct.Memory* %loadMem_45f69c, %struct.Memory** %MEMORY
  %loadMem_45f6a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1536 = getelementptr inbounds %struct.GPR, %struct.GPR* %1535, i32 0, i32 33
  %1537 = getelementptr inbounds %struct.Reg, %struct.Reg* %1536, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %1537 to i64*
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1539 = getelementptr inbounds %struct.GPR, %struct.GPR* %1538, i32 0, i32 9
  %1540 = getelementptr inbounds %struct.Reg, %struct.Reg* %1539, i32 0, i32 0
  %RSI.i1573 = bitcast %union.anon* %1540 to i64*
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1542 = getelementptr inbounds %struct.GPR, %struct.GPR* %1541, i32 0, i32 15
  %1543 = getelementptr inbounds %struct.Reg, %struct.Reg* %1542, i32 0, i32 0
  %RBP.i1574 = bitcast %union.anon* %1543 to i64*
  %1544 = load i64, i64* %RBP.i1574
  %1545 = sub i64 %1544, 20
  %1546 = load i64, i64* %PC.i1572
  %1547 = add i64 %1546, 3
  store i64 %1547, i64* %PC.i1572
  %1548 = inttoptr i64 %1545 to i32*
  %1549 = load i32, i32* %1548
  %1550 = zext i32 %1549 to i64
  store i64 %1550, i64* %RSI.i1573, align 8
  store %struct.Memory* %loadMem_45f6a0, %struct.Memory** %MEMORY
  %loadMem_45f6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1552 = getelementptr inbounds %struct.GPR, %struct.GPR* %1551, i32 0, i32 33
  %1553 = getelementptr inbounds %struct.Reg, %struct.Reg* %1552, i32 0, i32 0
  %PC.i1570 = bitcast %union.anon* %1553 to i64*
  %1554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1555 = getelementptr inbounds %struct.GPR, %struct.GPR* %1554, i32 0, i32 9
  %1556 = getelementptr inbounds %struct.Reg, %struct.Reg* %1555, i32 0, i32 0
  %RSI.i1571 = bitcast %union.anon* %1556 to i64*
  %1557 = load i64, i64* %RSI.i1571
  %1558 = load i64, i64* %PC.i1570
  %1559 = add i64 %1558, 3
  store i64 %1559, i64* %PC.i1570
  %1560 = and i64 %1557, 4294967295
  %1561 = shl i64 %1560, 2
  %1562 = trunc i64 %1561 to i32
  %1563 = icmp slt i32 %1562, 0
  %1564 = shl i32 %1562, 1
  %1565 = zext i32 %1564 to i64
  store i64 %1565, i64* %RSI.i1571, align 8
  %1566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1567 = zext i1 %1563 to i8
  store i8 %1567, i8* %1566, align 1
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1569 = and i32 %1564, 254
  %1570 = call i32 @llvm.ctpop.i32(i32 %1569)
  %1571 = trunc i32 %1570 to i8
  %1572 = and i8 %1571, 1
  %1573 = xor i8 %1572, 1
  store i8 %1573, i8* %1568, align 1
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1574, align 1
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1576 = icmp eq i32 %1564, 0
  %1577 = zext i1 %1576 to i8
  store i8 %1577, i8* %1575, align 1
  %1578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1579 = lshr i32 %1564, 31
  %1580 = trunc i32 %1579 to i8
  store i8 %1580, i8* %1578, align 1
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1581, align 1
  store %struct.Memory* %loadMem_45f6a3, %struct.Memory** %MEMORY
  %loadMem_45f6a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1583 = getelementptr inbounds %struct.GPR, %struct.GPR* %1582, i32 0, i32 33
  %1584 = getelementptr inbounds %struct.Reg, %struct.Reg* %1583, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %1584 to i64*
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1586 = getelementptr inbounds %struct.GPR, %struct.GPR* %1585, i32 0, i32 9
  %1587 = getelementptr inbounds %struct.Reg, %struct.Reg* %1586, i32 0, i32 0
  %RSI.i1569 = bitcast %union.anon* %1587 to i64*
  %1588 = load i64, i64* %RSI.i1569
  %1589 = load i64, i64* %PC.i1568
  %1590 = add i64 %1589, 3
  store i64 %1590, i64* %PC.i1568
  %1591 = trunc i64 %1588 to i32
  %1592 = add i32 3, %1591
  %1593 = zext i32 %1592 to i64
  store i64 %1593, i64* %RSI.i1569, align 8
  %1594 = icmp ult i32 %1592, %1591
  %1595 = icmp ult i32 %1592, 3
  %1596 = or i1 %1594, %1595
  %1597 = zext i1 %1596 to i8
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1597, i8* %1598, align 1
  %1599 = and i32 %1592, 255
  %1600 = call i32 @llvm.ctpop.i32(i32 %1599)
  %1601 = trunc i32 %1600 to i8
  %1602 = and i8 %1601, 1
  %1603 = xor i8 %1602, 1
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1603, i8* %1604, align 1
  %1605 = xor i64 3, %1588
  %1606 = trunc i64 %1605 to i32
  %1607 = xor i32 %1606, %1592
  %1608 = lshr i32 %1607, 4
  %1609 = trunc i32 %1608 to i8
  %1610 = and i8 %1609, 1
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1610, i8* %1611, align 1
  %1612 = icmp eq i32 %1592, 0
  %1613 = zext i1 %1612 to i8
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1613, i8* %1614, align 1
  %1615 = lshr i32 %1592, 31
  %1616 = trunc i32 %1615 to i8
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1616, i8* %1617, align 1
  %1618 = lshr i32 %1591, 31
  %1619 = xor i32 %1615, %1618
  %1620 = add i32 %1619, %1615
  %1621 = icmp eq i32 %1620, 2
  %1622 = zext i1 %1621 to i8
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1622, i8* %1623, align 1
  store %struct.Memory* %loadMem_45f6a6, %struct.Memory** %MEMORY
  %loadMem_45f6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1625 = getelementptr inbounds %struct.GPR, %struct.GPR* %1624, i32 0, i32 33
  %1626 = getelementptr inbounds %struct.Reg, %struct.Reg* %1625, i32 0, i32 0
  %PC.i1565 = bitcast %union.anon* %1626 to i64*
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1628 = getelementptr inbounds %struct.GPR, %struct.GPR* %1627, i32 0, i32 9
  %1629 = getelementptr inbounds %struct.Reg, %struct.Reg* %1628, i32 0, i32 0
  %ESI.i1566 = bitcast %union.anon* %1629 to i32*
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1631 = getelementptr inbounds %struct.GPR, %struct.GPR* %1630, i32 0, i32 11
  %1632 = getelementptr inbounds %struct.Reg, %struct.Reg* %1631, i32 0, i32 0
  %RDI.i1567 = bitcast %union.anon* %1632 to i64*
  %1633 = load i32, i32* %ESI.i1566
  %1634 = zext i32 %1633 to i64
  %1635 = load i64, i64* %PC.i1565
  %1636 = add i64 %1635, 3
  store i64 %1636, i64* %PC.i1565
  %1637 = shl i64 %1634, 32
  %1638 = ashr exact i64 %1637, 32
  store i64 %1638, i64* %RDI.i1567, align 8
  store %struct.Memory* %loadMem_45f6a9, %struct.Memory** %MEMORY
  %loadMem_45f6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1640 = getelementptr inbounds %struct.GPR, %struct.GPR* %1639, i32 0, i32 33
  %1641 = getelementptr inbounds %struct.Reg, %struct.Reg* %1640, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %1641 to i64*
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1643 = getelementptr inbounds %struct.GPR, %struct.GPR* %1642, i32 0, i32 7
  %1644 = getelementptr inbounds %struct.Reg, %struct.Reg* %1643, i32 0, i32 0
  %RDX.i1562 = bitcast %union.anon* %1644 to i64*
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1646 = getelementptr inbounds %struct.GPR, %struct.GPR* %1645, i32 0, i32 9
  %1647 = getelementptr inbounds %struct.Reg, %struct.Reg* %1646, i32 0, i32 0
  %RSI.i1563 = bitcast %union.anon* %1647 to i64*
  %1648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1649 = getelementptr inbounds %struct.GPR, %struct.GPR* %1648, i32 0, i32 11
  %1650 = getelementptr inbounds %struct.Reg, %struct.Reg* %1649, i32 0, i32 0
  %RDI.i1564 = bitcast %union.anon* %1650 to i64*
  %1651 = load i64, i64* %RDX.i1562
  %1652 = load i64, i64* %RDI.i1564
  %1653 = mul i64 %1652, 4
  %1654 = add i64 %1653, %1651
  %1655 = load i64, i64* %PC.i1561
  %1656 = add i64 %1655, 3
  store i64 %1656, i64* %PC.i1561
  %1657 = inttoptr i64 %1654 to i32*
  %1658 = load i32, i32* %1657
  %1659 = zext i32 %1658 to i64
  store i64 %1659, i64* %RSI.i1563, align 8
  store %struct.Memory* %loadMem_45f6ac, %struct.Memory** %MEMORY
  %loadMem_45f6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %1660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1661 = getelementptr inbounds %struct.GPR, %struct.GPR* %1660, i32 0, i32 33
  %1662 = getelementptr inbounds %struct.Reg, %struct.Reg* %1661, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %1662 to i64*
  %1663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1664 = getelementptr inbounds %struct.GPR, %struct.GPR* %1663, i32 0, i32 7
  %1665 = getelementptr inbounds %struct.Reg, %struct.Reg* %1664, i32 0, i32 0
  %RDX.i1559 = bitcast %union.anon* %1665 to i64*
  %1666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1667 = getelementptr inbounds %struct.GPR, %struct.GPR* %1666, i32 0, i32 15
  %1668 = getelementptr inbounds %struct.Reg, %struct.Reg* %1667, i32 0, i32 0
  %RBP.i1560 = bitcast %union.anon* %1668 to i64*
  %1669 = load i64, i64* %RBP.i1560
  %1670 = sub i64 %1669, 8
  %1671 = load i64, i64* %PC.i1558
  %1672 = add i64 %1671, 4
  store i64 %1672, i64* %PC.i1558
  %1673 = inttoptr i64 %1670 to i64*
  %1674 = load i64, i64* %1673
  store i64 %1674, i64* %RDX.i1559, align 8
  store %struct.Memory* %loadMem_45f6af, %struct.Memory** %MEMORY
  %loadMem_45f6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1676 = getelementptr inbounds %struct.GPR, %struct.GPR* %1675, i32 0, i32 33
  %1677 = getelementptr inbounds %struct.Reg, %struct.Reg* %1676, i32 0, i32 0
  %PC.i1555 = bitcast %union.anon* %1677 to i64*
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1679 = getelementptr inbounds %struct.GPR, %struct.GPR* %1678, i32 0, i32 17
  %1680 = getelementptr inbounds %struct.Reg, %struct.Reg* %1679, i32 0, i32 0
  %R8D.i1556 = bitcast %union.anon* %1680 to i32*
  %1681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1682 = getelementptr inbounds %struct.GPR, %struct.GPR* %1681, i32 0, i32 15
  %1683 = getelementptr inbounds %struct.Reg, %struct.Reg* %1682, i32 0, i32 0
  %RBP.i1557 = bitcast %union.anon* %1683 to i64*
  %1684 = bitcast i32* %R8D.i1556 to i64*
  %1685 = load i64, i64* %RBP.i1557
  %1686 = sub i64 %1685, 20
  %1687 = load i64, i64* %PC.i1555
  %1688 = add i64 %1687, 4
  store i64 %1688, i64* %PC.i1555
  %1689 = inttoptr i64 %1686 to i32*
  %1690 = load i32, i32* %1689
  %1691 = zext i32 %1690 to i64
  store i64 %1691, i64* %1684, align 8
  store %struct.Memory* %loadMem_45f6b3, %struct.Memory** %MEMORY
  %loadMem_45f6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1693 = getelementptr inbounds %struct.GPR, %struct.GPR* %1692, i32 0, i32 33
  %1694 = getelementptr inbounds %struct.Reg, %struct.Reg* %1693, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %1694 to i64*
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1696 = getelementptr inbounds %struct.GPR, %struct.GPR* %1695, i32 0, i32 17
  %1697 = getelementptr inbounds %struct.Reg, %struct.Reg* %1696, i32 0, i32 0
  %R8D.i1554 = bitcast %union.anon* %1697 to i32*
  %1698 = bitcast i32* %R8D.i1554 to i64*
  %1699 = load i32, i32* %R8D.i1554
  %1700 = zext i32 %1699 to i64
  %1701 = load i64, i64* %PC.i1553
  %1702 = add i64 %1701, 4
  store i64 %1702, i64* %PC.i1553
  %1703 = and i64 %1700, 4294967295
  %1704 = shl i64 %1703, 2
  %1705 = trunc i64 %1704 to i32
  %1706 = icmp slt i32 %1705, 0
  %1707 = shl i32 %1705, 1
  %1708 = zext i32 %1707 to i64
  store i64 %1708, i64* %1698, align 8
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1710 = zext i1 %1706 to i8
  store i8 %1710, i8* %1709, align 1
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1712 = and i32 %1707, 254
  %1713 = call i32 @llvm.ctpop.i32(i32 %1712)
  %1714 = trunc i32 %1713 to i8
  %1715 = and i8 %1714, 1
  %1716 = xor i8 %1715, 1
  store i8 %1716, i8* %1711, align 1
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1717, align 1
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1719 = icmp eq i32 %1707, 0
  %1720 = zext i1 %1719 to i8
  store i8 %1720, i8* %1718, align 1
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1722 = lshr i32 %1707, 31
  %1723 = trunc i32 %1722 to i8
  store i8 %1723, i8* %1721, align 1
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1724, align 1
  store %struct.Memory* %loadMem_45f6b7, %struct.Memory** %MEMORY
  %loadMem_45f6bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1726 = getelementptr inbounds %struct.GPR, %struct.GPR* %1725, i32 0, i32 33
  %1727 = getelementptr inbounds %struct.Reg, %struct.Reg* %1726, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %1727 to i64*
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 17
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %R8D.i1552 = bitcast %union.anon* %1730 to i32*
  %1731 = bitcast i32* %R8D.i1552 to i64*
  %1732 = load i32, i32* %R8D.i1552
  %1733 = zext i32 %1732 to i64
  %1734 = load i64, i64* %PC.i1551
  %1735 = add i64 %1734, 4
  store i64 %1735, i64* %PC.i1551
  %1736 = add i32 7, %1732
  %1737 = zext i32 %1736 to i64
  store i64 %1737, i64* %1731, align 8
  %1738 = icmp ult i32 %1736, %1732
  %1739 = icmp ult i32 %1736, 7
  %1740 = or i1 %1738, %1739
  %1741 = zext i1 %1740 to i8
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1741, i8* %1742, align 1
  %1743 = and i32 %1736, 255
  %1744 = call i32 @llvm.ctpop.i32(i32 %1743)
  %1745 = trunc i32 %1744 to i8
  %1746 = and i8 %1745, 1
  %1747 = xor i8 %1746, 1
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1747, i8* %1748, align 1
  %1749 = xor i64 7, %1733
  %1750 = trunc i64 %1749 to i32
  %1751 = xor i32 %1750, %1736
  %1752 = lshr i32 %1751, 4
  %1753 = trunc i32 %1752 to i8
  %1754 = and i8 %1753, 1
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1754, i8* %1755, align 1
  %1756 = icmp eq i32 %1736, 0
  %1757 = zext i1 %1756 to i8
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1757, i8* %1758, align 1
  %1759 = lshr i32 %1736, 31
  %1760 = trunc i32 %1759 to i8
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1760, i8* %1761, align 1
  %1762 = lshr i32 %1732, 31
  %1763 = xor i32 %1759, %1762
  %1764 = add i32 %1763, %1759
  %1765 = icmp eq i32 %1764, 2
  %1766 = zext i1 %1765 to i8
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1766, i8* %1767, align 1
  store %struct.Memory* %loadMem_45f6bb, %struct.Memory** %MEMORY
  %loadMem_45f6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1769 = getelementptr inbounds %struct.GPR, %struct.GPR* %1768, i32 0, i32 33
  %1770 = getelementptr inbounds %struct.Reg, %struct.Reg* %1769, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %1770 to i64*
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1772 = getelementptr inbounds %struct.GPR, %struct.GPR* %1771, i32 0, i32 17
  %1773 = getelementptr inbounds %struct.Reg, %struct.Reg* %1772, i32 0, i32 0
  %R8D.i1549 = bitcast %union.anon* %1773 to i32*
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1775 = getelementptr inbounds %struct.GPR, %struct.GPR* %1774, i32 0, i32 11
  %1776 = getelementptr inbounds %struct.Reg, %struct.Reg* %1775, i32 0, i32 0
  %RDI.i1550 = bitcast %union.anon* %1776 to i64*
  %1777 = load i32, i32* %R8D.i1549
  %1778 = zext i32 %1777 to i64
  %1779 = load i64, i64* %PC.i1548
  %1780 = add i64 %1779, 3
  store i64 %1780, i64* %PC.i1548
  %1781 = shl i64 %1778, 32
  %1782 = ashr exact i64 %1781, 32
  store i64 %1782, i64* %RDI.i1550, align 8
  store %struct.Memory* %loadMem_45f6bf, %struct.Memory** %MEMORY
  %loadMem_45f6c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1784 = getelementptr inbounds %struct.GPR, %struct.GPR* %1783, i32 0, i32 33
  %1785 = getelementptr inbounds %struct.Reg, %struct.Reg* %1784, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %1785 to i64*
  %1786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1787 = getelementptr inbounds %struct.GPR, %struct.GPR* %1786, i32 0, i32 7
  %1788 = getelementptr inbounds %struct.Reg, %struct.Reg* %1787, i32 0, i32 0
  %RDX.i1545 = bitcast %union.anon* %1788 to i64*
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1790 = getelementptr inbounds %struct.GPR, %struct.GPR* %1789, i32 0, i32 9
  %1791 = getelementptr inbounds %struct.Reg, %struct.Reg* %1790, i32 0, i32 0
  %RSI.i1546 = bitcast %union.anon* %1791 to i64*
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1793 = getelementptr inbounds %struct.GPR, %struct.GPR* %1792, i32 0, i32 11
  %1794 = getelementptr inbounds %struct.Reg, %struct.Reg* %1793, i32 0, i32 0
  %RDI.i1547 = bitcast %union.anon* %1794 to i64*
  %1795 = load i64, i64* %RSI.i1546
  %1796 = load i64, i64* %RDX.i1545
  %1797 = load i64, i64* %RDI.i1547
  %1798 = mul i64 %1797, 4
  %1799 = add i64 %1798, %1796
  %1800 = load i64, i64* %PC.i1544
  %1801 = add i64 %1800, 3
  store i64 %1801, i64* %PC.i1544
  %1802 = trunc i64 %1795 to i32
  %1803 = inttoptr i64 %1799 to i32*
  %1804 = load i32, i32* %1803
  %1805 = add i32 %1804, %1802
  %1806 = zext i32 %1805 to i64
  store i64 %1806, i64* %RSI.i1546, align 8
  %1807 = icmp ult i32 %1805, %1802
  %1808 = icmp ult i32 %1805, %1804
  %1809 = or i1 %1807, %1808
  %1810 = zext i1 %1809 to i8
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1810, i8* %1811, align 1
  %1812 = and i32 %1805, 255
  %1813 = call i32 @llvm.ctpop.i32(i32 %1812)
  %1814 = trunc i32 %1813 to i8
  %1815 = and i8 %1814, 1
  %1816 = xor i8 %1815, 1
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1816, i8* %1817, align 1
  %1818 = xor i32 %1804, %1802
  %1819 = xor i32 %1818, %1805
  %1820 = lshr i32 %1819, 4
  %1821 = trunc i32 %1820 to i8
  %1822 = and i8 %1821, 1
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1822, i8* %1823, align 1
  %1824 = icmp eq i32 %1805, 0
  %1825 = zext i1 %1824 to i8
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1825, i8* %1826, align 1
  %1827 = lshr i32 %1805, 31
  %1828 = trunc i32 %1827 to i8
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1828, i8* %1829, align 1
  %1830 = lshr i32 %1802, 31
  %1831 = lshr i32 %1804, 31
  %1832 = xor i32 %1827, %1830
  %1833 = xor i32 %1827, %1831
  %1834 = add i32 %1832, %1833
  %1835 = icmp eq i32 %1834, 2
  %1836 = zext i1 %1835 to i8
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1836, i8* %1837, align 1
  store %struct.Memory* %loadMem_45f6c2, %struct.Memory** %MEMORY
  %loadMem_45f6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1839 = getelementptr inbounds %struct.GPR, %struct.GPR* %1838, i32 0, i32 33
  %1840 = getelementptr inbounds %struct.Reg, %struct.Reg* %1839, i32 0, i32 0
  %PC.i1541 = bitcast %union.anon* %1840 to i64*
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1842 = getelementptr inbounds %struct.GPR, %struct.GPR* %1841, i32 0, i32 7
  %1843 = getelementptr inbounds %struct.Reg, %struct.Reg* %1842, i32 0, i32 0
  %RDX.i1542 = bitcast %union.anon* %1843 to i64*
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 15
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %RBP.i1543 = bitcast %union.anon* %1846 to i64*
  %1847 = load i64, i64* %RBP.i1543
  %1848 = sub i64 %1847, 20
  %1849 = load i64, i64* %PC.i1541
  %1850 = add i64 %1849, 4
  store i64 %1850, i64* %PC.i1541
  %1851 = inttoptr i64 %1848 to i32*
  %1852 = load i32, i32* %1851
  %1853 = sext i32 %1852 to i64
  store i64 %1853, i64* %RDX.i1542, align 8
  store %struct.Memory* %loadMem_45f6c5, %struct.Memory** %MEMORY
  %loadMem_45f6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1855 = getelementptr inbounds %struct.GPR, %struct.GPR* %1854, i32 0, i32 33
  %1856 = getelementptr inbounds %struct.Reg, %struct.Reg* %1855, i32 0, i32 0
  %PC.i1539 = bitcast %union.anon* %1856 to i64*
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1858 = getelementptr inbounds %struct.GPR, %struct.GPR* %1857, i32 0, i32 7
  %1859 = getelementptr inbounds %struct.Reg, %struct.Reg* %1858, i32 0, i32 0
  %RDX.i1540 = bitcast %union.anon* %1859 to i64*
  %1860 = load i64, i64* %RDX.i1540
  %1861 = load i64, i64* %PC.i1539
  %1862 = add i64 %1861, 4
  store i64 %1862, i64* %PC.i1539
  %1863 = shl i64 %1860, 4
  %1864 = icmp slt i64 %1863, 0
  %1865 = shl i64 %1863, 1
  store i64 %1865, i64* %RDX.i1540, align 8
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1867 = zext i1 %1864 to i8
  store i8 %1867, i8* %1866, align 1
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1869 = trunc i64 %1865 to i32
  %1870 = and i32 %1869, 254
  %1871 = call i32 @llvm.ctpop.i32(i32 %1870)
  %1872 = trunc i32 %1871 to i8
  %1873 = and i8 %1872, 1
  %1874 = xor i8 %1873, 1
  store i8 %1874, i8* %1868, align 1
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1875, align 1
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1877 = icmp eq i64 %1865, 0
  %1878 = zext i1 %1877 to i8
  store i8 %1878, i8* %1876, align 1
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1880 = lshr i64 %1865, 63
  %1881 = trunc i64 %1880 to i8
  store i8 %1881, i8* %1879, align 1
  %1882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1882, align 1
  store %struct.Memory* %loadMem_45f6c9, %struct.Memory** %MEMORY
  %loadMem_45f6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 33
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %PC.i1536 = bitcast %union.anon* %1885 to i64*
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1887 = getelementptr inbounds %struct.GPR, %struct.GPR* %1886, i32 0, i32 1
  %1888 = getelementptr inbounds %struct.Reg, %struct.Reg* %1887, i32 0, i32 0
  %RAX.i1537 = bitcast %union.anon* %1888 to i64*
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 11
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %RDI.i1538 = bitcast %union.anon* %1891 to i64*
  %1892 = load i64, i64* %RAX.i1537
  %1893 = load i64, i64* %PC.i1536
  %1894 = add i64 %1893, 3
  store i64 %1894, i64* %PC.i1536
  store i64 %1892, i64* %RDI.i1538, align 8
  store %struct.Memory* %loadMem_45f6cd, %struct.Memory** %MEMORY
  %loadMem_45f6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1896 = getelementptr inbounds %struct.GPR, %struct.GPR* %1895, i32 0, i32 33
  %1897 = getelementptr inbounds %struct.Reg, %struct.Reg* %1896, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %1897 to i64*
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1899 = getelementptr inbounds %struct.GPR, %struct.GPR* %1898, i32 0, i32 7
  %1900 = getelementptr inbounds %struct.Reg, %struct.Reg* %1899, i32 0, i32 0
  %RDX.i1534 = bitcast %union.anon* %1900 to i64*
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1902 = getelementptr inbounds %struct.GPR, %struct.GPR* %1901, i32 0, i32 11
  %1903 = getelementptr inbounds %struct.Reg, %struct.Reg* %1902, i32 0, i32 0
  %RDI.i1535 = bitcast %union.anon* %1903 to i64*
  %1904 = load i64, i64* %RDI.i1535
  %1905 = load i64, i64* %RDX.i1534
  %1906 = load i64, i64* %PC.i1533
  %1907 = add i64 %1906, 3
  store i64 %1907, i64* %PC.i1533
  %1908 = add i64 %1905, %1904
  store i64 %1908, i64* %RDI.i1535, align 8
  %1909 = icmp ult i64 %1908, %1904
  %1910 = icmp ult i64 %1908, %1905
  %1911 = or i1 %1909, %1910
  %1912 = zext i1 %1911 to i8
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1912, i8* %1913, align 1
  %1914 = trunc i64 %1908 to i32
  %1915 = and i32 %1914, 255
  %1916 = call i32 @llvm.ctpop.i32(i32 %1915)
  %1917 = trunc i32 %1916 to i8
  %1918 = and i8 %1917, 1
  %1919 = xor i8 %1918, 1
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1919, i8* %1920, align 1
  %1921 = xor i64 %1905, %1904
  %1922 = xor i64 %1921, %1908
  %1923 = lshr i64 %1922, 4
  %1924 = trunc i64 %1923 to i8
  %1925 = and i8 %1924, 1
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1925, i8* %1926, align 1
  %1927 = icmp eq i64 %1908, 0
  %1928 = zext i1 %1927 to i8
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1928, i8* %1929, align 1
  %1930 = lshr i64 %1908, 63
  %1931 = trunc i64 %1930 to i8
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1931, i8* %1932, align 1
  %1933 = lshr i64 %1904, 63
  %1934 = lshr i64 %1905, 63
  %1935 = xor i64 %1930, %1933
  %1936 = xor i64 %1930, %1934
  %1937 = add i64 %1935, %1936
  %1938 = icmp eq i64 %1937, 2
  %1939 = zext i1 %1938 to i8
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1939, i8* %1940, align 1
  store %struct.Memory* %loadMem_45f6d0, %struct.Memory** %MEMORY
  %loadMem_45f6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1942 = getelementptr inbounds %struct.GPR, %struct.GPR* %1941, i32 0, i32 33
  %1943 = getelementptr inbounds %struct.Reg, %struct.Reg* %1942, i32 0, i32 0
  %PC.i1530 = bitcast %union.anon* %1943 to i64*
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1945 = getelementptr inbounds %struct.GPR, %struct.GPR* %1944, i32 0, i32 9
  %1946 = getelementptr inbounds %struct.Reg, %struct.Reg* %1945, i32 0, i32 0
  %ESI.i1531 = bitcast %union.anon* %1946 to i32*
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1948 = getelementptr inbounds %struct.GPR, %struct.GPR* %1947, i32 0, i32 11
  %1949 = getelementptr inbounds %struct.Reg, %struct.Reg* %1948, i32 0, i32 0
  %RDI.i1532 = bitcast %union.anon* %1949 to i64*
  %1950 = load i64, i64* %RDI.i1532
  %1951 = add i64 %1950, 12
  %1952 = load i32, i32* %ESI.i1531
  %1953 = zext i32 %1952 to i64
  %1954 = load i64, i64* %PC.i1530
  %1955 = add i64 %1954, 3
  store i64 %1955, i64* %PC.i1530
  %1956 = inttoptr i64 %1951 to i32*
  store i32 %1952, i32* %1956
  store %struct.Memory* %loadMem_45f6d3, %struct.Memory** %MEMORY
  %loadMem_45f6d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1958 = getelementptr inbounds %struct.GPR, %struct.GPR* %1957, i32 0, i32 33
  %1959 = getelementptr inbounds %struct.Reg, %struct.Reg* %1958, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %1959 to i64*
  %1960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1961 = getelementptr inbounds %struct.GPR, %struct.GPR* %1960, i32 0, i32 7
  %1962 = getelementptr inbounds %struct.Reg, %struct.Reg* %1961, i32 0, i32 0
  %RDX.i1528 = bitcast %union.anon* %1962 to i64*
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1964 = getelementptr inbounds %struct.GPR, %struct.GPR* %1963, i32 0, i32 15
  %1965 = getelementptr inbounds %struct.Reg, %struct.Reg* %1964, i32 0, i32 0
  %RBP.i1529 = bitcast %union.anon* %1965 to i64*
  %1966 = load i64, i64* %RBP.i1529
  %1967 = sub i64 %1966, 8
  %1968 = load i64, i64* %PC.i1527
  %1969 = add i64 %1968, 4
  store i64 %1969, i64* %PC.i1527
  %1970 = inttoptr i64 %1967 to i64*
  %1971 = load i64, i64* %1970
  store i64 %1971, i64* %RDX.i1528, align 8
  store %struct.Memory* %loadMem_45f6d6, %struct.Memory** %MEMORY
  %loadMem_45f6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1973 = getelementptr inbounds %struct.GPR, %struct.GPR* %1972, i32 0, i32 33
  %1974 = getelementptr inbounds %struct.Reg, %struct.Reg* %1973, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %1974 to i64*
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1976 = getelementptr inbounds %struct.GPR, %struct.GPR* %1975, i32 0, i32 9
  %1977 = getelementptr inbounds %struct.Reg, %struct.Reg* %1976, i32 0, i32 0
  %RSI.i1525 = bitcast %union.anon* %1977 to i64*
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1979 = getelementptr inbounds %struct.GPR, %struct.GPR* %1978, i32 0, i32 15
  %1980 = getelementptr inbounds %struct.Reg, %struct.Reg* %1979, i32 0, i32 0
  %RBP.i1526 = bitcast %union.anon* %1980 to i64*
  %1981 = load i64, i64* %RBP.i1526
  %1982 = sub i64 %1981, 20
  %1983 = load i64, i64* %PC.i1524
  %1984 = add i64 %1983, 3
  store i64 %1984, i64* %PC.i1524
  %1985 = inttoptr i64 %1982 to i32*
  %1986 = load i32, i32* %1985
  %1987 = zext i32 %1986 to i64
  store i64 %1987, i64* %RSI.i1525, align 8
  store %struct.Memory* %loadMem_45f6da, %struct.Memory** %MEMORY
  %loadMem_45f6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 33
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %PC.i1522 = bitcast %union.anon* %1990 to i64*
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1992 = getelementptr inbounds %struct.GPR, %struct.GPR* %1991, i32 0, i32 9
  %1993 = getelementptr inbounds %struct.Reg, %struct.Reg* %1992, i32 0, i32 0
  %RSI.i1523 = bitcast %union.anon* %1993 to i64*
  %1994 = load i64, i64* %RSI.i1523
  %1995 = load i64, i64* %PC.i1522
  %1996 = add i64 %1995, 3
  store i64 %1996, i64* %PC.i1522
  %1997 = and i64 %1994, 4294967295
  %1998 = shl i64 %1997, 2
  %1999 = trunc i64 %1998 to i32
  %2000 = icmp slt i32 %1999, 0
  %2001 = shl i32 %1999, 1
  %2002 = zext i32 %2001 to i64
  store i64 %2002, i64* %RSI.i1523, align 8
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2004 = zext i1 %2000 to i8
  store i8 %2004, i8* %2003, align 1
  %2005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2006 = and i32 %2001, 254
  %2007 = call i32 @llvm.ctpop.i32(i32 %2006)
  %2008 = trunc i32 %2007 to i8
  %2009 = and i8 %2008, 1
  %2010 = xor i8 %2009, 1
  store i8 %2010, i8* %2005, align 1
  %2011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2011, align 1
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2013 = icmp eq i32 %2001, 0
  %2014 = zext i1 %2013 to i8
  store i8 %2014, i8* %2012, align 1
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2016 = lshr i32 %2001, 31
  %2017 = trunc i32 %2016 to i8
  store i8 %2017, i8* %2015, align 1
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2018, align 1
  store %struct.Memory* %loadMem_45f6dd, %struct.Memory** %MEMORY
  %loadMem_45f6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2020 = getelementptr inbounds %struct.GPR, %struct.GPR* %2019, i32 0, i32 33
  %2021 = getelementptr inbounds %struct.Reg, %struct.Reg* %2020, i32 0, i32 0
  %PC.i1519 = bitcast %union.anon* %2021 to i64*
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2023 = getelementptr inbounds %struct.GPR, %struct.GPR* %2022, i32 0, i32 9
  %2024 = getelementptr inbounds %struct.Reg, %struct.Reg* %2023, i32 0, i32 0
  %ESI.i1520 = bitcast %union.anon* %2024 to i32*
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 11
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %RDI.i1521 = bitcast %union.anon* %2027 to i64*
  %2028 = load i32, i32* %ESI.i1520
  %2029 = zext i32 %2028 to i64
  %2030 = load i64, i64* %PC.i1519
  %2031 = add i64 %2030, 3
  store i64 %2031, i64* %PC.i1519
  %2032 = shl i64 %2029, 32
  %2033 = ashr exact i64 %2032, 32
  store i64 %2033, i64* %RDI.i1521, align 8
  store %struct.Memory* %loadMem_45f6e0, %struct.Memory** %MEMORY
  %loadMem_45f6e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2035 = getelementptr inbounds %struct.GPR, %struct.GPR* %2034, i32 0, i32 33
  %2036 = getelementptr inbounds %struct.Reg, %struct.Reg* %2035, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %2036 to i64*
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2038 = getelementptr inbounds %struct.GPR, %struct.GPR* %2037, i32 0, i32 7
  %2039 = getelementptr inbounds %struct.Reg, %struct.Reg* %2038, i32 0, i32 0
  %RDX.i1516 = bitcast %union.anon* %2039 to i64*
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2041 = getelementptr inbounds %struct.GPR, %struct.GPR* %2040, i32 0, i32 9
  %2042 = getelementptr inbounds %struct.Reg, %struct.Reg* %2041, i32 0, i32 0
  %RSI.i1517 = bitcast %union.anon* %2042 to i64*
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2044 = getelementptr inbounds %struct.GPR, %struct.GPR* %2043, i32 0, i32 11
  %2045 = getelementptr inbounds %struct.Reg, %struct.Reg* %2044, i32 0, i32 0
  %RDI.i1518 = bitcast %union.anon* %2045 to i64*
  %2046 = load i64, i64* %RDX.i1516
  %2047 = load i64, i64* %RDI.i1518
  %2048 = mul i64 %2047, 4
  %2049 = add i64 %2048, %2046
  %2050 = load i64, i64* %PC.i1515
  %2051 = add i64 %2050, 3
  store i64 %2051, i64* %PC.i1515
  %2052 = inttoptr i64 %2049 to i32*
  %2053 = load i32, i32* %2052
  %2054 = zext i32 %2053 to i64
  store i64 %2054, i64* %RSI.i1517, align 8
  store %struct.Memory* %loadMem_45f6e3, %struct.Memory** %MEMORY
  %loadMem_45f6e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2056 = getelementptr inbounds %struct.GPR, %struct.GPR* %2055, i32 0, i32 33
  %2057 = getelementptr inbounds %struct.Reg, %struct.Reg* %2056, i32 0, i32 0
  %PC.i1512 = bitcast %union.anon* %2057 to i64*
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2059 = getelementptr inbounds %struct.GPR, %struct.GPR* %2058, i32 0, i32 7
  %2060 = getelementptr inbounds %struct.Reg, %struct.Reg* %2059, i32 0, i32 0
  %RDX.i1513 = bitcast %union.anon* %2060 to i64*
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2062 = getelementptr inbounds %struct.GPR, %struct.GPR* %2061, i32 0, i32 15
  %2063 = getelementptr inbounds %struct.Reg, %struct.Reg* %2062, i32 0, i32 0
  %RBP.i1514 = bitcast %union.anon* %2063 to i64*
  %2064 = load i64, i64* %RBP.i1514
  %2065 = sub i64 %2064, 8
  %2066 = load i64, i64* %PC.i1512
  %2067 = add i64 %2066, 4
  store i64 %2067, i64* %PC.i1512
  %2068 = inttoptr i64 %2065 to i64*
  %2069 = load i64, i64* %2068
  store i64 %2069, i64* %RDX.i1513, align 8
  store %struct.Memory* %loadMem_45f6e6, %struct.Memory** %MEMORY
  %loadMem_45f6ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2071 = getelementptr inbounds %struct.GPR, %struct.GPR* %2070, i32 0, i32 33
  %2072 = getelementptr inbounds %struct.Reg, %struct.Reg* %2071, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %2072 to i64*
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2074 = getelementptr inbounds %struct.GPR, %struct.GPR* %2073, i32 0, i32 17
  %2075 = getelementptr inbounds %struct.Reg, %struct.Reg* %2074, i32 0, i32 0
  %R8D.i1510 = bitcast %union.anon* %2075 to i32*
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 15
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %RBP.i1511 = bitcast %union.anon* %2078 to i64*
  %2079 = bitcast i32* %R8D.i1510 to i64*
  %2080 = load i64, i64* %RBP.i1511
  %2081 = sub i64 %2080, 20
  %2082 = load i64, i64* %PC.i1509
  %2083 = add i64 %2082, 4
  store i64 %2083, i64* %PC.i1509
  %2084 = inttoptr i64 %2081 to i32*
  %2085 = load i32, i32* %2084
  %2086 = zext i32 %2085 to i64
  store i64 %2086, i64* %2079, align 8
  store %struct.Memory* %loadMem_45f6ea, %struct.Memory** %MEMORY
  %loadMem_45f6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2088 = getelementptr inbounds %struct.GPR, %struct.GPR* %2087, i32 0, i32 33
  %2089 = getelementptr inbounds %struct.Reg, %struct.Reg* %2088, i32 0, i32 0
  %PC.i1507 = bitcast %union.anon* %2089 to i64*
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2091 = getelementptr inbounds %struct.GPR, %struct.GPR* %2090, i32 0, i32 17
  %2092 = getelementptr inbounds %struct.Reg, %struct.Reg* %2091, i32 0, i32 0
  %R8D.i1508 = bitcast %union.anon* %2092 to i32*
  %2093 = bitcast i32* %R8D.i1508 to i64*
  %2094 = load i32, i32* %R8D.i1508
  %2095 = zext i32 %2094 to i64
  %2096 = load i64, i64* %PC.i1507
  %2097 = add i64 %2096, 4
  store i64 %2097, i64* %PC.i1507
  %2098 = and i64 %2095, 4294967295
  %2099 = shl i64 %2098, 2
  %2100 = trunc i64 %2099 to i32
  %2101 = icmp slt i32 %2100, 0
  %2102 = shl i32 %2100, 1
  %2103 = zext i32 %2102 to i64
  store i64 %2103, i64* %2093, align 8
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2105 = zext i1 %2101 to i8
  store i8 %2105, i8* %2104, align 1
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2107 = and i32 %2102, 254
  %2108 = call i32 @llvm.ctpop.i32(i32 %2107)
  %2109 = trunc i32 %2108 to i8
  %2110 = and i8 %2109, 1
  %2111 = xor i8 %2110, 1
  store i8 %2111, i8* %2106, align 1
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2112, align 1
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2114 = icmp eq i32 %2102, 0
  %2115 = zext i1 %2114 to i8
  store i8 %2115, i8* %2113, align 1
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2117 = lshr i32 %2102, 31
  %2118 = trunc i32 %2117 to i8
  store i8 %2118, i8* %2116, align 1
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2119, align 1
  store %struct.Memory* %loadMem_45f6ee, %struct.Memory** %MEMORY
  %loadMem_45f6f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2121 = getelementptr inbounds %struct.GPR, %struct.GPR* %2120, i32 0, i32 33
  %2122 = getelementptr inbounds %struct.Reg, %struct.Reg* %2121, i32 0, i32 0
  %PC.i1505 = bitcast %union.anon* %2122 to i64*
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2124 = getelementptr inbounds %struct.GPR, %struct.GPR* %2123, i32 0, i32 17
  %2125 = getelementptr inbounds %struct.Reg, %struct.Reg* %2124, i32 0, i32 0
  %R8D.i1506 = bitcast %union.anon* %2125 to i32*
  %2126 = bitcast i32* %R8D.i1506 to i64*
  %2127 = load i32, i32* %R8D.i1506
  %2128 = zext i32 %2127 to i64
  %2129 = load i64, i64* %PC.i1505
  %2130 = add i64 %2129, 4
  store i64 %2130, i64* %PC.i1505
  %2131 = add i32 4, %2127
  %2132 = zext i32 %2131 to i64
  store i64 %2132, i64* %2126, align 8
  %2133 = icmp ult i32 %2131, %2127
  %2134 = icmp ult i32 %2131, 4
  %2135 = or i1 %2133, %2134
  %2136 = zext i1 %2135 to i8
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2136, i8* %2137, align 1
  %2138 = and i32 %2131, 255
  %2139 = call i32 @llvm.ctpop.i32(i32 %2138)
  %2140 = trunc i32 %2139 to i8
  %2141 = and i8 %2140, 1
  %2142 = xor i8 %2141, 1
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2142, i8* %2143, align 1
  %2144 = xor i64 4, %2128
  %2145 = trunc i64 %2144 to i32
  %2146 = xor i32 %2145, %2131
  %2147 = lshr i32 %2146, 4
  %2148 = trunc i32 %2147 to i8
  %2149 = and i8 %2148, 1
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2149, i8* %2150, align 1
  %2151 = icmp eq i32 %2131, 0
  %2152 = zext i1 %2151 to i8
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2152, i8* %2153, align 1
  %2154 = lshr i32 %2131, 31
  %2155 = trunc i32 %2154 to i8
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2155, i8* %2156, align 1
  %2157 = lshr i32 %2127, 31
  %2158 = xor i32 %2154, %2157
  %2159 = add i32 %2158, %2154
  %2160 = icmp eq i32 %2159, 2
  %2161 = zext i1 %2160 to i8
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2161, i8* %2162, align 1
  store %struct.Memory* %loadMem_45f6f2, %struct.Memory** %MEMORY
  %loadMem_45f6f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2164 = getelementptr inbounds %struct.GPR, %struct.GPR* %2163, i32 0, i32 33
  %2165 = getelementptr inbounds %struct.Reg, %struct.Reg* %2164, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %2165 to i64*
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 17
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %R8D.i1503 = bitcast %union.anon* %2168 to i32*
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2170 = getelementptr inbounds %struct.GPR, %struct.GPR* %2169, i32 0, i32 11
  %2171 = getelementptr inbounds %struct.Reg, %struct.Reg* %2170, i32 0, i32 0
  %RDI.i1504 = bitcast %union.anon* %2171 to i64*
  %2172 = load i32, i32* %R8D.i1503
  %2173 = zext i32 %2172 to i64
  %2174 = load i64, i64* %PC.i1502
  %2175 = add i64 %2174, 3
  store i64 %2175, i64* %PC.i1502
  %2176 = shl i64 %2173, 32
  %2177 = ashr exact i64 %2176, 32
  store i64 %2177, i64* %RDI.i1504, align 8
  store %struct.Memory* %loadMem_45f6f6, %struct.Memory** %MEMORY
  %loadMem_45f6f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 33
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %2180 to i64*
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 7
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %RDX.i1499 = bitcast %union.anon* %2183 to i64*
  %2184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2185 = getelementptr inbounds %struct.GPR, %struct.GPR* %2184, i32 0, i32 9
  %2186 = getelementptr inbounds %struct.Reg, %struct.Reg* %2185, i32 0, i32 0
  %RSI.i1500 = bitcast %union.anon* %2186 to i64*
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2188 = getelementptr inbounds %struct.GPR, %struct.GPR* %2187, i32 0, i32 11
  %2189 = getelementptr inbounds %struct.Reg, %struct.Reg* %2188, i32 0, i32 0
  %RDI.i1501 = bitcast %union.anon* %2189 to i64*
  %2190 = load i64, i64* %RSI.i1500
  %2191 = load i64, i64* %RDX.i1499
  %2192 = load i64, i64* %RDI.i1501
  %2193 = mul i64 %2192, 4
  %2194 = add i64 %2193, %2191
  %2195 = load i64, i64* %PC.i1498
  %2196 = add i64 %2195, 3
  store i64 %2196, i64* %PC.i1498
  %2197 = trunc i64 %2190 to i32
  %2198 = inttoptr i64 %2194 to i32*
  %2199 = load i32, i32* %2198
  %2200 = sub i32 %2197, %2199
  %2201 = zext i32 %2200 to i64
  store i64 %2201, i64* %RSI.i1500, align 8
  %2202 = icmp ult i32 %2197, %2199
  %2203 = zext i1 %2202 to i8
  %2204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2203, i8* %2204, align 1
  %2205 = and i32 %2200, 255
  %2206 = call i32 @llvm.ctpop.i32(i32 %2205)
  %2207 = trunc i32 %2206 to i8
  %2208 = and i8 %2207, 1
  %2209 = xor i8 %2208, 1
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2209, i8* %2210, align 1
  %2211 = xor i32 %2199, %2197
  %2212 = xor i32 %2211, %2200
  %2213 = lshr i32 %2212, 4
  %2214 = trunc i32 %2213 to i8
  %2215 = and i8 %2214, 1
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2215, i8* %2216, align 1
  %2217 = icmp eq i32 %2200, 0
  %2218 = zext i1 %2217 to i8
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2218, i8* %2219, align 1
  %2220 = lshr i32 %2200, 31
  %2221 = trunc i32 %2220 to i8
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2221, i8* %2222, align 1
  %2223 = lshr i32 %2197, 31
  %2224 = lshr i32 %2199, 31
  %2225 = xor i32 %2224, %2223
  %2226 = xor i32 %2220, %2223
  %2227 = add i32 %2226, %2225
  %2228 = icmp eq i32 %2227, 2
  %2229 = zext i1 %2228 to i8
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2229, i8* %2230, align 1
  store %struct.Memory* %loadMem_45f6f9, %struct.Memory** %MEMORY
  %loadMem_45f6fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2232 = getelementptr inbounds %struct.GPR, %struct.GPR* %2231, i32 0, i32 33
  %2233 = getelementptr inbounds %struct.Reg, %struct.Reg* %2232, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %2233 to i64*
  %2234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2235 = getelementptr inbounds %struct.GPR, %struct.GPR* %2234, i32 0, i32 7
  %2236 = getelementptr inbounds %struct.Reg, %struct.Reg* %2235, i32 0, i32 0
  %RDX.i1496 = bitcast %union.anon* %2236 to i64*
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2238 = getelementptr inbounds %struct.GPR, %struct.GPR* %2237, i32 0, i32 15
  %2239 = getelementptr inbounds %struct.Reg, %struct.Reg* %2238, i32 0, i32 0
  %RBP.i1497 = bitcast %union.anon* %2239 to i64*
  %2240 = load i64, i64* %RBP.i1497
  %2241 = sub i64 %2240, 20
  %2242 = load i64, i64* %PC.i1495
  %2243 = add i64 %2242, 4
  store i64 %2243, i64* %PC.i1495
  %2244 = inttoptr i64 %2241 to i32*
  %2245 = load i32, i32* %2244
  %2246 = sext i32 %2245 to i64
  store i64 %2246, i64* %RDX.i1496, align 8
  store %struct.Memory* %loadMem_45f6fc, %struct.Memory** %MEMORY
  %loadMem_45f700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 33
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %2249 to i64*
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 7
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %RDX.i1494 = bitcast %union.anon* %2252 to i64*
  %2253 = load i64, i64* %RDX.i1494
  %2254 = load i64, i64* %PC.i1493
  %2255 = add i64 %2254, 4
  store i64 %2255, i64* %PC.i1493
  %2256 = shl i64 %2253, 4
  %2257 = icmp slt i64 %2256, 0
  %2258 = shl i64 %2256, 1
  store i64 %2258, i64* %RDX.i1494, align 8
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2260 = zext i1 %2257 to i8
  store i8 %2260, i8* %2259, align 1
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2262 = trunc i64 %2258 to i32
  %2263 = and i32 %2262, 254
  %2264 = call i32 @llvm.ctpop.i32(i32 %2263)
  %2265 = trunc i32 %2264 to i8
  %2266 = and i8 %2265, 1
  %2267 = xor i8 %2266, 1
  store i8 %2267, i8* %2261, align 1
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2268, align 1
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2270 = icmp eq i64 %2258, 0
  %2271 = zext i1 %2270 to i8
  store i8 %2271, i8* %2269, align 1
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2273 = lshr i64 %2258, 63
  %2274 = trunc i64 %2273 to i8
  store i8 %2274, i8* %2272, align 1
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2275, align 1
  store %struct.Memory* %loadMem_45f700, %struct.Memory** %MEMORY
  %loadMem_45f704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2277 = getelementptr inbounds %struct.GPR, %struct.GPR* %2276, i32 0, i32 33
  %2278 = getelementptr inbounds %struct.Reg, %struct.Reg* %2277, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %2278 to i64*
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2280 = getelementptr inbounds %struct.GPR, %struct.GPR* %2279, i32 0, i32 1
  %2281 = getelementptr inbounds %struct.Reg, %struct.Reg* %2280, i32 0, i32 0
  %RAX.i1491 = bitcast %union.anon* %2281 to i64*
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2283 = getelementptr inbounds %struct.GPR, %struct.GPR* %2282, i32 0, i32 11
  %2284 = getelementptr inbounds %struct.Reg, %struct.Reg* %2283, i32 0, i32 0
  %RDI.i1492 = bitcast %union.anon* %2284 to i64*
  %2285 = load i64, i64* %RAX.i1491
  %2286 = load i64, i64* %PC.i1490
  %2287 = add i64 %2286, 3
  store i64 %2287, i64* %PC.i1490
  store i64 %2285, i64* %RDI.i1492, align 8
  store %struct.Memory* %loadMem_45f704, %struct.Memory** %MEMORY
  %loadMem_45f707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 33
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %2290 to i64*
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2292 = getelementptr inbounds %struct.GPR, %struct.GPR* %2291, i32 0, i32 7
  %2293 = getelementptr inbounds %struct.Reg, %struct.Reg* %2292, i32 0, i32 0
  %RDX.i1488 = bitcast %union.anon* %2293 to i64*
  %2294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2295 = getelementptr inbounds %struct.GPR, %struct.GPR* %2294, i32 0, i32 11
  %2296 = getelementptr inbounds %struct.Reg, %struct.Reg* %2295, i32 0, i32 0
  %RDI.i1489 = bitcast %union.anon* %2296 to i64*
  %2297 = load i64, i64* %RDI.i1489
  %2298 = load i64, i64* %RDX.i1488
  %2299 = load i64, i64* %PC.i1487
  %2300 = add i64 %2299, 3
  store i64 %2300, i64* %PC.i1487
  %2301 = add i64 %2298, %2297
  store i64 %2301, i64* %RDI.i1489, align 8
  %2302 = icmp ult i64 %2301, %2297
  %2303 = icmp ult i64 %2301, %2298
  %2304 = or i1 %2302, %2303
  %2305 = zext i1 %2304 to i8
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2305, i8* %2306, align 1
  %2307 = trunc i64 %2301 to i32
  %2308 = and i32 %2307, 255
  %2309 = call i32 @llvm.ctpop.i32(i32 %2308)
  %2310 = trunc i32 %2309 to i8
  %2311 = and i8 %2310, 1
  %2312 = xor i8 %2311, 1
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2312, i8* %2313, align 1
  %2314 = xor i64 %2298, %2297
  %2315 = xor i64 %2314, %2301
  %2316 = lshr i64 %2315, 4
  %2317 = trunc i64 %2316 to i8
  %2318 = and i8 %2317, 1
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2318, i8* %2319, align 1
  %2320 = icmp eq i64 %2301, 0
  %2321 = zext i1 %2320 to i8
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2321, i8* %2322, align 1
  %2323 = lshr i64 %2301, 63
  %2324 = trunc i64 %2323 to i8
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2324, i8* %2325, align 1
  %2326 = lshr i64 %2297, 63
  %2327 = lshr i64 %2298, 63
  %2328 = xor i64 %2323, %2326
  %2329 = xor i64 %2323, %2327
  %2330 = add i64 %2328, %2329
  %2331 = icmp eq i64 %2330, 2
  %2332 = zext i1 %2331 to i8
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2332, i8* %2333, align 1
  store %struct.Memory* %loadMem_45f707, %struct.Memory** %MEMORY
  %loadMem_45f70a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2335 = getelementptr inbounds %struct.GPR, %struct.GPR* %2334, i32 0, i32 33
  %2336 = getelementptr inbounds %struct.Reg, %struct.Reg* %2335, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %2336 to i64*
  %2337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2338 = getelementptr inbounds %struct.GPR, %struct.GPR* %2337, i32 0, i32 9
  %2339 = getelementptr inbounds %struct.Reg, %struct.Reg* %2338, i32 0, i32 0
  %ESI.i1485 = bitcast %union.anon* %2339 to i32*
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 11
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %RDI.i1486 = bitcast %union.anon* %2342 to i64*
  %2343 = load i64, i64* %RDI.i1486
  %2344 = add i64 %2343, 16
  %2345 = load i32, i32* %ESI.i1485
  %2346 = zext i32 %2345 to i64
  %2347 = load i64, i64* %PC.i1484
  %2348 = add i64 %2347, 3
  store i64 %2348, i64* %PC.i1484
  %2349 = inttoptr i64 %2344 to i32*
  store i32 %2345, i32* %2349
  store %struct.Memory* %loadMem_45f70a, %struct.Memory** %MEMORY
  %loadMem_45f70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2351 = getelementptr inbounds %struct.GPR, %struct.GPR* %2350, i32 0, i32 33
  %2352 = getelementptr inbounds %struct.Reg, %struct.Reg* %2351, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %2352 to i64*
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2354 = getelementptr inbounds %struct.GPR, %struct.GPR* %2353, i32 0, i32 7
  %2355 = getelementptr inbounds %struct.Reg, %struct.Reg* %2354, i32 0, i32 0
  %RDX.i1482 = bitcast %union.anon* %2355 to i64*
  %2356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2357 = getelementptr inbounds %struct.GPR, %struct.GPR* %2356, i32 0, i32 15
  %2358 = getelementptr inbounds %struct.Reg, %struct.Reg* %2357, i32 0, i32 0
  %RBP.i1483 = bitcast %union.anon* %2358 to i64*
  %2359 = load i64, i64* %RBP.i1483
  %2360 = sub i64 %2359, 8
  %2361 = load i64, i64* %PC.i1481
  %2362 = add i64 %2361, 4
  store i64 %2362, i64* %PC.i1481
  %2363 = inttoptr i64 %2360 to i64*
  %2364 = load i64, i64* %2363
  store i64 %2364, i64* %RDX.i1482, align 8
  store %struct.Memory* %loadMem_45f70d, %struct.Memory** %MEMORY
  %loadMem_45f711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 33
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %2367 to i64*
  %2368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2369 = getelementptr inbounds %struct.GPR, %struct.GPR* %2368, i32 0, i32 9
  %2370 = getelementptr inbounds %struct.Reg, %struct.Reg* %2369, i32 0, i32 0
  %RSI.i1479 = bitcast %union.anon* %2370 to i64*
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2372 = getelementptr inbounds %struct.GPR, %struct.GPR* %2371, i32 0, i32 15
  %2373 = getelementptr inbounds %struct.Reg, %struct.Reg* %2372, i32 0, i32 0
  %RBP.i1480 = bitcast %union.anon* %2373 to i64*
  %2374 = load i64, i64* %RBP.i1480
  %2375 = sub i64 %2374, 20
  %2376 = load i64, i64* %PC.i1478
  %2377 = add i64 %2376, 3
  store i64 %2377, i64* %PC.i1478
  %2378 = inttoptr i64 %2375 to i32*
  %2379 = load i32, i32* %2378
  %2380 = zext i32 %2379 to i64
  store i64 %2380, i64* %RSI.i1479, align 8
  store %struct.Memory* %loadMem_45f711, %struct.Memory** %MEMORY
  %loadMem_45f714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 33
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %2383 to i64*
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2385 = getelementptr inbounds %struct.GPR, %struct.GPR* %2384, i32 0, i32 9
  %2386 = getelementptr inbounds %struct.Reg, %struct.Reg* %2385, i32 0, i32 0
  %RSI.i1477 = bitcast %union.anon* %2386 to i64*
  %2387 = load i64, i64* %RSI.i1477
  %2388 = load i64, i64* %PC.i1476
  %2389 = add i64 %2388, 3
  store i64 %2389, i64* %PC.i1476
  %2390 = and i64 %2387, 4294967295
  %2391 = shl i64 %2390, 2
  %2392 = trunc i64 %2391 to i32
  %2393 = icmp slt i32 %2392, 0
  %2394 = shl i32 %2392, 1
  %2395 = zext i32 %2394 to i64
  store i64 %2395, i64* %RSI.i1477, align 8
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2397 = zext i1 %2393 to i8
  store i8 %2397, i8* %2396, align 1
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2399 = and i32 %2394, 254
  %2400 = call i32 @llvm.ctpop.i32(i32 %2399)
  %2401 = trunc i32 %2400 to i8
  %2402 = and i8 %2401, 1
  %2403 = xor i8 %2402, 1
  store i8 %2403, i8* %2398, align 1
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2404, align 1
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2406 = icmp eq i32 %2394, 0
  %2407 = zext i1 %2406 to i8
  store i8 %2407, i8* %2405, align 1
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2409 = lshr i32 %2394, 31
  %2410 = trunc i32 %2409 to i8
  store i8 %2410, i8* %2408, align 1
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2411, align 1
  store %struct.Memory* %loadMem_45f714, %struct.Memory** %MEMORY
  %loadMem_45f717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2413 = getelementptr inbounds %struct.GPR, %struct.GPR* %2412, i32 0, i32 33
  %2414 = getelementptr inbounds %struct.Reg, %struct.Reg* %2413, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %2414 to i64*
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2416 = getelementptr inbounds %struct.GPR, %struct.GPR* %2415, i32 0, i32 9
  %2417 = getelementptr inbounds %struct.Reg, %struct.Reg* %2416, i32 0, i32 0
  %RSI.i1475 = bitcast %union.anon* %2417 to i64*
  %2418 = load i64, i64* %RSI.i1475
  %2419 = load i64, i64* %PC.i1474
  %2420 = add i64 %2419, 3
  store i64 %2420, i64* %PC.i1474
  %2421 = trunc i64 %2418 to i32
  %2422 = add i32 1, %2421
  %2423 = zext i32 %2422 to i64
  store i64 %2423, i64* %RSI.i1475, align 8
  %2424 = icmp ult i32 %2422, %2421
  %2425 = icmp ult i32 %2422, 1
  %2426 = or i1 %2424, %2425
  %2427 = zext i1 %2426 to i8
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2427, i8* %2428, align 1
  %2429 = and i32 %2422, 255
  %2430 = call i32 @llvm.ctpop.i32(i32 %2429)
  %2431 = trunc i32 %2430 to i8
  %2432 = and i8 %2431, 1
  %2433 = xor i8 %2432, 1
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2433, i8* %2434, align 1
  %2435 = xor i64 1, %2418
  %2436 = trunc i64 %2435 to i32
  %2437 = xor i32 %2436, %2422
  %2438 = lshr i32 %2437, 4
  %2439 = trunc i32 %2438 to i8
  %2440 = and i8 %2439, 1
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2440, i8* %2441, align 1
  %2442 = icmp eq i32 %2422, 0
  %2443 = zext i1 %2442 to i8
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2443, i8* %2444, align 1
  %2445 = lshr i32 %2422, 31
  %2446 = trunc i32 %2445 to i8
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2446, i8* %2447, align 1
  %2448 = lshr i32 %2421, 31
  %2449 = xor i32 %2445, %2448
  %2450 = add i32 %2449, %2445
  %2451 = icmp eq i32 %2450, 2
  %2452 = zext i1 %2451 to i8
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2452, i8* %2453, align 1
  store %struct.Memory* %loadMem_45f717, %struct.Memory** %MEMORY
  %loadMem_45f71a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2455 = getelementptr inbounds %struct.GPR, %struct.GPR* %2454, i32 0, i32 33
  %2456 = getelementptr inbounds %struct.Reg, %struct.Reg* %2455, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %2456 to i64*
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2458 = getelementptr inbounds %struct.GPR, %struct.GPR* %2457, i32 0, i32 9
  %2459 = getelementptr inbounds %struct.Reg, %struct.Reg* %2458, i32 0, i32 0
  %ESI.i1472 = bitcast %union.anon* %2459 to i32*
  %2460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2461 = getelementptr inbounds %struct.GPR, %struct.GPR* %2460, i32 0, i32 11
  %2462 = getelementptr inbounds %struct.Reg, %struct.Reg* %2461, i32 0, i32 0
  %RDI.i1473 = bitcast %union.anon* %2462 to i64*
  %2463 = load i32, i32* %ESI.i1472
  %2464 = zext i32 %2463 to i64
  %2465 = load i64, i64* %PC.i1471
  %2466 = add i64 %2465, 3
  store i64 %2466, i64* %PC.i1471
  %2467 = shl i64 %2464, 32
  %2468 = ashr exact i64 %2467, 32
  store i64 %2468, i64* %RDI.i1473, align 8
  store %struct.Memory* %loadMem_45f71a, %struct.Memory** %MEMORY
  %loadMem_45f71d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2470 = getelementptr inbounds %struct.GPR, %struct.GPR* %2469, i32 0, i32 33
  %2471 = getelementptr inbounds %struct.Reg, %struct.Reg* %2470, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %2471 to i64*
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2473 = getelementptr inbounds %struct.GPR, %struct.GPR* %2472, i32 0, i32 7
  %2474 = getelementptr inbounds %struct.Reg, %struct.Reg* %2473, i32 0, i32 0
  %RDX.i1468 = bitcast %union.anon* %2474 to i64*
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2476 = getelementptr inbounds %struct.GPR, %struct.GPR* %2475, i32 0, i32 9
  %2477 = getelementptr inbounds %struct.Reg, %struct.Reg* %2476, i32 0, i32 0
  %RSI.i1469 = bitcast %union.anon* %2477 to i64*
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2479 = getelementptr inbounds %struct.GPR, %struct.GPR* %2478, i32 0, i32 11
  %2480 = getelementptr inbounds %struct.Reg, %struct.Reg* %2479, i32 0, i32 0
  %RDI.i1470 = bitcast %union.anon* %2480 to i64*
  %2481 = load i64, i64* %RDX.i1468
  %2482 = load i64, i64* %RDI.i1470
  %2483 = mul i64 %2482, 4
  %2484 = add i64 %2483, %2481
  %2485 = load i64, i64* %PC.i1467
  %2486 = add i64 %2485, 3
  store i64 %2486, i64* %PC.i1467
  %2487 = inttoptr i64 %2484 to i32*
  %2488 = load i32, i32* %2487
  %2489 = zext i32 %2488 to i64
  store i64 %2489, i64* %RSI.i1469, align 8
  store %struct.Memory* %loadMem_45f71d, %struct.Memory** %MEMORY
  %loadMem_45f720 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2491 = getelementptr inbounds %struct.GPR, %struct.GPR* %2490, i32 0, i32 33
  %2492 = getelementptr inbounds %struct.Reg, %struct.Reg* %2491, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %2492 to i64*
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2494 = getelementptr inbounds %struct.GPR, %struct.GPR* %2493, i32 0, i32 7
  %2495 = getelementptr inbounds %struct.Reg, %struct.Reg* %2494, i32 0, i32 0
  %RDX.i1465 = bitcast %union.anon* %2495 to i64*
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2497 = getelementptr inbounds %struct.GPR, %struct.GPR* %2496, i32 0, i32 15
  %2498 = getelementptr inbounds %struct.Reg, %struct.Reg* %2497, i32 0, i32 0
  %RBP.i1466 = bitcast %union.anon* %2498 to i64*
  %2499 = load i64, i64* %RBP.i1466
  %2500 = sub i64 %2499, 8
  %2501 = load i64, i64* %PC.i1464
  %2502 = add i64 %2501, 4
  store i64 %2502, i64* %PC.i1464
  %2503 = inttoptr i64 %2500 to i64*
  %2504 = load i64, i64* %2503
  store i64 %2504, i64* %RDX.i1465, align 8
  store %struct.Memory* %loadMem_45f720, %struct.Memory** %MEMORY
  %loadMem_45f724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 33
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %2507 to i64*
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2509 = getelementptr inbounds %struct.GPR, %struct.GPR* %2508, i32 0, i32 17
  %2510 = getelementptr inbounds %struct.Reg, %struct.Reg* %2509, i32 0, i32 0
  %R8D.i1462 = bitcast %union.anon* %2510 to i32*
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2512 = getelementptr inbounds %struct.GPR, %struct.GPR* %2511, i32 0, i32 15
  %2513 = getelementptr inbounds %struct.Reg, %struct.Reg* %2512, i32 0, i32 0
  %RBP.i1463 = bitcast %union.anon* %2513 to i64*
  %2514 = bitcast i32* %R8D.i1462 to i64*
  %2515 = load i64, i64* %RBP.i1463
  %2516 = sub i64 %2515, 20
  %2517 = load i64, i64* %PC.i1461
  %2518 = add i64 %2517, 4
  store i64 %2518, i64* %PC.i1461
  %2519 = inttoptr i64 %2516 to i32*
  %2520 = load i32, i32* %2519
  %2521 = zext i32 %2520 to i64
  store i64 %2521, i64* %2514, align 8
  store %struct.Memory* %loadMem_45f724, %struct.Memory** %MEMORY
  %loadMem_45f728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2523 = getelementptr inbounds %struct.GPR, %struct.GPR* %2522, i32 0, i32 33
  %2524 = getelementptr inbounds %struct.Reg, %struct.Reg* %2523, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %2524 to i64*
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2526 = getelementptr inbounds %struct.GPR, %struct.GPR* %2525, i32 0, i32 17
  %2527 = getelementptr inbounds %struct.Reg, %struct.Reg* %2526, i32 0, i32 0
  %R8D.i1460 = bitcast %union.anon* %2527 to i32*
  %2528 = bitcast i32* %R8D.i1460 to i64*
  %2529 = load i32, i32* %R8D.i1460
  %2530 = zext i32 %2529 to i64
  %2531 = load i64, i64* %PC.i1459
  %2532 = add i64 %2531, 4
  store i64 %2532, i64* %PC.i1459
  %2533 = and i64 %2530, 4294967295
  %2534 = shl i64 %2533, 2
  %2535 = trunc i64 %2534 to i32
  %2536 = icmp slt i32 %2535, 0
  %2537 = shl i32 %2535, 1
  %2538 = zext i32 %2537 to i64
  store i64 %2538, i64* %2528, align 8
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2540 = zext i1 %2536 to i8
  store i8 %2540, i8* %2539, align 1
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2542 = and i32 %2537, 254
  %2543 = call i32 @llvm.ctpop.i32(i32 %2542)
  %2544 = trunc i32 %2543 to i8
  %2545 = and i8 %2544, 1
  %2546 = xor i8 %2545, 1
  store i8 %2546, i8* %2541, align 1
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2547, align 1
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2549 = icmp eq i32 %2537, 0
  %2550 = zext i1 %2549 to i8
  store i8 %2550, i8* %2548, align 1
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2552 = lshr i32 %2537, 31
  %2553 = trunc i32 %2552 to i8
  store i8 %2553, i8* %2551, align 1
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2554, align 1
  store %struct.Memory* %loadMem_45f728, %struct.Memory** %MEMORY
  %loadMem_45f72c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2556 = getelementptr inbounds %struct.GPR, %struct.GPR* %2555, i32 0, i32 33
  %2557 = getelementptr inbounds %struct.Reg, %struct.Reg* %2556, i32 0, i32 0
  %PC.i1457 = bitcast %union.anon* %2557 to i64*
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2559 = getelementptr inbounds %struct.GPR, %struct.GPR* %2558, i32 0, i32 17
  %2560 = getelementptr inbounds %struct.Reg, %struct.Reg* %2559, i32 0, i32 0
  %R8D.i1458 = bitcast %union.anon* %2560 to i32*
  %2561 = bitcast i32* %R8D.i1458 to i64*
  %2562 = load i32, i32* %R8D.i1458
  %2563 = zext i32 %2562 to i64
  %2564 = load i64, i64* %PC.i1457
  %2565 = add i64 %2564, 4
  store i64 %2565, i64* %PC.i1457
  %2566 = add i32 5, %2562
  %2567 = zext i32 %2566 to i64
  store i64 %2567, i64* %2561, align 8
  %2568 = icmp ult i32 %2566, %2562
  %2569 = icmp ult i32 %2566, 5
  %2570 = or i1 %2568, %2569
  %2571 = zext i1 %2570 to i8
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2571, i8* %2572, align 1
  %2573 = and i32 %2566, 255
  %2574 = call i32 @llvm.ctpop.i32(i32 %2573)
  %2575 = trunc i32 %2574 to i8
  %2576 = and i8 %2575, 1
  %2577 = xor i8 %2576, 1
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2577, i8* %2578, align 1
  %2579 = xor i64 5, %2563
  %2580 = trunc i64 %2579 to i32
  %2581 = xor i32 %2580, %2566
  %2582 = lshr i32 %2581, 4
  %2583 = trunc i32 %2582 to i8
  %2584 = and i8 %2583, 1
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2584, i8* %2585, align 1
  %2586 = icmp eq i32 %2566, 0
  %2587 = zext i1 %2586 to i8
  %2588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2587, i8* %2588, align 1
  %2589 = lshr i32 %2566, 31
  %2590 = trunc i32 %2589 to i8
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2590, i8* %2591, align 1
  %2592 = lshr i32 %2562, 31
  %2593 = xor i32 %2589, %2592
  %2594 = add i32 %2593, %2589
  %2595 = icmp eq i32 %2594, 2
  %2596 = zext i1 %2595 to i8
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2596, i8* %2597, align 1
  store %struct.Memory* %loadMem_45f72c, %struct.Memory** %MEMORY
  %loadMem_45f730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2599 = getelementptr inbounds %struct.GPR, %struct.GPR* %2598, i32 0, i32 33
  %2600 = getelementptr inbounds %struct.Reg, %struct.Reg* %2599, i32 0, i32 0
  %PC.i1454 = bitcast %union.anon* %2600 to i64*
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2602 = getelementptr inbounds %struct.GPR, %struct.GPR* %2601, i32 0, i32 17
  %2603 = getelementptr inbounds %struct.Reg, %struct.Reg* %2602, i32 0, i32 0
  %R8D.i1455 = bitcast %union.anon* %2603 to i32*
  %2604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2605 = getelementptr inbounds %struct.GPR, %struct.GPR* %2604, i32 0, i32 11
  %2606 = getelementptr inbounds %struct.Reg, %struct.Reg* %2605, i32 0, i32 0
  %RDI.i1456 = bitcast %union.anon* %2606 to i64*
  %2607 = load i32, i32* %R8D.i1455
  %2608 = zext i32 %2607 to i64
  %2609 = load i64, i64* %PC.i1454
  %2610 = add i64 %2609, 3
  store i64 %2610, i64* %PC.i1454
  %2611 = shl i64 %2608, 32
  %2612 = ashr exact i64 %2611, 32
  store i64 %2612, i64* %RDI.i1456, align 8
  store %struct.Memory* %loadMem_45f730, %struct.Memory** %MEMORY
  %loadMem_45f733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2614 = getelementptr inbounds %struct.GPR, %struct.GPR* %2613, i32 0, i32 33
  %2615 = getelementptr inbounds %struct.Reg, %struct.Reg* %2614, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %2615 to i64*
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2617 = getelementptr inbounds %struct.GPR, %struct.GPR* %2616, i32 0, i32 7
  %2618 = getelementptr inbounds %struct.Reg, %struct.Reg* %2617, i32 0, i32 0
  %RDX.i1451 = bitcast %union.anon* %2618 to i64*
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2620 = getelementptr inbounds %struct.GPR, %struct.GPR* %2619, i32 0, i32 9
  %2621 = getelementptr inbounds %struct.Reg, %struct.Reg* %2620, i32 0, i32 0
  %RSI.i1452 = bitcast %union.anon* %2621 to i64*
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 11
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %RDI.i1453 = bitcast %union.anon* %2624 to i64*
  %2625 = load i64, i64* %RSI.i1452
  %2626 = load i64, i64* %RDX.i1451
  %2627 = load i64, i64* %RDI.i1453
  %2628 = mul i64 %2627, 4
  %2629 = add i64 %2628, %2626
  %2630 = load i64, i64* %PC.i1450
  %2631 = add i64 %2630, 3
  store i64 %2631, i64* %PC.i1450
  %2632 = trunc i64 %2625 to i32
  %2633 = inttoptr i64 %2629 to i32*
  %2634 = load i32, i32* %2633
  %2635 = sub i32 %2632, %2634
  %2636 = zext i32 %2635 to i64
  store i64 %2636, i64* %RSI.i1452, align 8
  %2637 = icmp ult i32 %2632, %2634
  %2638 = zext i1 %2637 to i8
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2638, i8* %2639, align 1
  %2640 = and i32 %2635, 255
  %2641 = call i32 @llvm.ctpop.i32(i32 %2640)
  %2642 = trunc i32 %2641 to i8
  %2643 = and i8 %2642, 1
  %2644 = xor i8 %2643, 1
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2644, i8* %2645, align 1
  %2646 = xor i32 %2634, %2632
  %2647 = xor i32 %2646, %2635
  %2648 = lshr i32 %2647, 4
  %2649 = trunc i32 %2648 to i8
  %2650 = and i8 %2649, 1
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2650, i8* %2651, align 1
  %2652 = icmp eq i32 %2635, 0
  %2653 = zext i1 %2652 to i8
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2653, i8* %2654, align 1
  %2655 = lshr i32 %2635, 31
  %2656 = trunc i32 %2655 to i8
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2656, i8* %2657, align 1
  %2658 = lshr i32 %2632, 31
  %2659 = lshr i32 %2634, 31
  %2660 = xor i32 %2659, %2658
  %2661 = xor i32 %2655, %2658
  %2662 = add i32 %2661, %2660
  %2663 = icmp eq i32 %2662, 2
  %2664 = zext i1 %2663 to i8
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2664, i8* %2665, align 1
  store %struct.Memory* %loadMem_45f733, %struct.Memory** %MEMORY
  %loadMem_45f736 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2667 = getelementptr inbounds %struct.GPR, %struct.GPR* %2666, i32 0, i32 33
  %2668 = getelementptr inbounds %struct.Reg, %struct.Reg* %2667, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %2668 to i64*
  %2669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2670 = getelementptr inbounds %struct.GPR, %struct.GPR* %2669, i32 0, i32 7
  %2671 = getelementptr inbounds %struct.Reg, %struct.Reg* %2670, i32 0, i32 0
  %RDX.i1448 = bitcast %union.anon* %2671 to i64*
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2673 = getelementptr inbounds %struct.GPR, %struct.GPR* %2672, i32 0, i32 15
  %2674 = getelementptr inbounds %struct.Reg, %struct.Reg* %2673, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %2674 to i64*
  %2675 = load i64, i64* %RBP.i1449
  %2676 = sub i64 %2675, 20
  %2677 = load i64, i64* %PC.i1447
  %2678 = add i64 %2677, 4
  store i64 %2678, i64* %PC.i1447
  %2679 = inttoptr i64 %2676 to i32*
  %2680 = load i32, i32* %2679
  %2681 = sext i32 %2680 to i64
  store i64 %2681, i64* %RDX.i1448, align 8
  store %struct.Memory* %loadMem_45f736, %struct.Memory** %MEMORY
  %loadMem_45f73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2683 = getelementptr inbounds %struct.GPR, %struct.GPR* %2682, i32 0, i32 33
  %2684 = getelementptr inbounds %struct.Reg, %struct.Reg* %2683, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %2684 to i64*
  %2685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2686 = getelementptr inbounds %struct.GPR, %struct.GPR* %2685, i32 0, i32 7
  %2687 = getelementptr inbounds %struct.Reg, %struct.Reg* %2686, i32 0, i32 0
  %RDX.i1446 = bitcast %union.anon* %2687 to i64*
  %2688 = load i64, i64* %RDX.i1446
  %2689 = load i64, i64* %PC.i1445
  %2690 = add i64 %2689, 4
  store i64 %2690, i64* %PC.i1445
  %2691 = shl i64 %2688, 4
  %2692 = icmp slt i64 %2691, 0
  %2693 = shl i64 %2691, 1
  store i64 %2693, i64* %RDX.i1446, align 8
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2695 = zext i1 %2692 to i8
  store i8 %2695, i8* %2694, align 1
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2697 = trunc i64 %2693 to i32
  %2698 = and i32 %2697, 254
  %2699 = call i32 @llvm.ctpop.i32(i32 %2698)
  %2700 = trunc i32 %2699 to i8
  %2701 = and i8 %2700, 1
  %2702 = xor i8 %2701, 1
  store i8 %2702, i8* %2696, align 1
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2703, align 1
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2705 = icmp eq i64 %2693, 0
  %2706 = zext i1 %2705 to i8
  store i8 %2706, i8* %2704, align 1
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2708 = lshr i64 %2693, 63
  %2709 = trunc i64 %2708 to i8
  store i8 %2709, i8* %2707, align 1
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2710, align 1
  store %struct.Memory* %loadMem_45f73a, %struct.Memory** %MEMORY
  %loadMem_45f73e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2712 = getelementptr inbounds %struct.GPR, %struct.GPR* %2711, i32 0, i32 33
  %2713 = getelementptr inbounds %struct.Reg, %struct.Reg* %2712, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %2713 to i64*
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2715 = getelementptr inbounds %struct.GPR, %struct.GPR* %2714, i32 0, i32 1
  %2716 = getelementptr inbounds %struct.Reg, %struct.Reg* %2715, i32 0, i32 0
  %RAX.i1443 = bitcast %union.anon* %2716 to i64*
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2718 = getelementptr inbounds %struct.GPR, %struct.GPR* %2717, i32 0, i32 11
  %2719 = getelementptr inbounds %struct.Reg, %struct.Reg* %2718, i32 0, i32 0
  %RDI.i1444 = bitcast %union.anon* %2719 to i64*
  %2720 = load i64, i64* %RAX.i1443
  %2721 = load i64, i64* %PC.i1442
  %2722 = add i64 %2721, 3
  store i64 %2722, i64* %PC.i1442
  store i64 %2720, i64* %RDI.i1444, align 8
  store %struct.Memory* %loadMem_45f73e, %struct.Memory** %MEMORY
  %loadMem_45f741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 33
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %2725 to i64*
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2727 = getelementptr inbounds %struct.GPR, %struct.GPR* %2726, i32 0, i32 7
  %2728 = getelementptr inbounds %struct.Reg, %struct.Reg* %2727, i32 0, i32 0
  %RDX.i1440 = bitcast %union.anon* %2728 to i64*
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2730 = getelementptr inbounds %struct.GPR, %struct.GPR* %2729, i32 0, i32 11
  %2731 = getelementptr inbounds %struct.Reg, %struct.Reg* %2730, i32 0, i32 0
  %RDI.i1441 = bitcast %union.anon* %2731 to i64*
  %2732 = load i64, i64* %RDI.i1441
  %2733 = load i64, i64* %RDX.i1440
  %2734 = load i64, i64* %PC.i1439
  %2735 = add i64 %2734, 3
  store i64 %2735, i64* %PC.i1439
  %2736 = add i64 %2733, %2732
  store i64 %2736, i64* %RDI.i1441, align 8
  %2737 = icmp ult i64 %2736, %2732
  %2738 = icmp ult i64 %2736, %2733
  %2739 = or i1 %2737, %2738
  %2740 = zext i1 %2739 to i8
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2740, i8* %2741, align 1
  %2742 = trunc i64 %2736 to i32
  %2743 = and i32 %2742, 255
  %2744 = call i32 @llvm.ctpop.i32(i32 %2743)
  %2745 = trunc i32 %2744 to i8
  %2746 = and i8 %2745, 1
  %2747 = xor i8 %2746, 1
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2747, i8* %2748, align 1
  %2749 = xor i64 %2733, %2732
  %2750 = xor i64 %2749, %2736
  %2751 = lshr i64 %2750, 4
  %2752 = trunc i64 %2751 to i8
  %2753 = and i8 %2752, 1
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2753, i8* %2754, align 1
  %2755 = icmp eq i64 %2736, 0
  %2756 = zext i1 %2755 to i8
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2756, i8* %2757, align 1
  %2758 = lshr i64 %2736, 63
  %2759 = trunc i64 %2758 to i8
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2759, i8* %2760, align 1
  %2761 = lshr i64 %2732, 63
  %2762 = lshr i64 %2733, 63
  %2763 = xor i64 %2758, %2761
  %2764 = xor i64 %2758, %2762
  %2765 = add i64 %2763, %2764
  %2766 = icmp eq i64 %2765, 2
  %2767 = zext i1 %2766 to i8
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2767, i8* %2768, align 1
  store %struct.Memory* %loadMem_45f741, %struct.Memory** %MEMORY
  %loadMem_45f744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2770 = getelementptr inbounds %struct.GPR, %struct.GPR* %2769, i32 0, i32 33
  %2771 = getelementptr inbounds %struct.Reg, %struct.Reg* %2770, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %2771 to i64*
  %2772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2773 = getelementptr inbounds %struct.GPR, %struct.GPR* %2772, i32 0, i32 9
  %2774 = getelementptr inbounds %struct.Reg, %struct.Reg* %2773, i32 0, i32 0
  %ESI.i1437 = bitcast %union.anon* %2774 to i32*
  %2775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2776 = getelementptr inbounds %struct.GPR, %struct.GPR* %2775, i32 0, i32 11
  %2777 = getelementptr inbounds %struct.Reg, %struct.Reg* %2776, i32 0, i32 0
  %RDI.i1438 = bitcast %union.anon* %2777 to i64*
  %2778 = load i64, i64* %RDI.i1438
  %2779 = add i64 %2778, 20
  %2780 = load i32, i32* %ESI.i1437
  %2781 = zext i32 %2780 to i64
  %2782 = load i64, i64* %PC.i1436
  %2783 = add i64 %2782, 3
  store i64 %2783, i64* %PC.i1436
  %2784 = inttoptr i64 %2779 to i32*
  store i32 %2780, i32* %2784
  store %struct.Memory* %loadMem_45f744, %struct.Memory** %MEMORY
  %loadMem_45f747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 33
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %2787 to i64*
  %2788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2789 = getelementptr inbounds %struct.GPR, %struct.GPR* %2788, i32 0, i32 7
  %2790 = getelementptr inbounds %struct.Reg, %struct.Reg* %2789, i32 0, i32 0
  %RDX.i1434 = bitcast %union.anon* %2790 to i64*
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2792 = getelementptr inbounds %struct.GPR, %struct.GPR* %2791, i32 0, i32 15
  %2793 = getelementptr inbounds %struct.Reg, %struct.Reg* %2792, i32 0, i32 0
  %RBP.i1435 = bitcast %union.anon* %2793 to i64*
  %2794 = load i64, i64* %RBP.i1435
  %2795 = sub i64 %2794, 8
  %2796 = load i64, i64* %PC.i1433
  %2797 = add i64 %2796, 4
  store i64 %2797, i64* %PC.i1433
  %2798 = inttoptr i64 %2795 to i64*
  %2799 = load i64, i64* %2798
  store i64 %2799, i64* %RDX.i1434, align 8
  store %struct.Memory* %loadMem_45f747, %struct.Memory** %MEMORY
  %loadMem_45f74b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 33
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %2802 to i64*
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 9
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %RSI.i1431 = bitcast %union.anon* %2805 to i64*
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2807 = getelementptr inbounds %struct.GPR, %struct.GPR* %2806, i32 0, i32 15
  %2808 = getelementptr inbounds %struct.Reg, %struct.Reg* %2807, i32 0, i32 0
  %RBP.i1432 = bitcast %union.anon* %2808 to i64*
  %2809 = load i64, i64* %RBP.i1432
  %2810 = sub i64 %2809, 20
  %2811 = load i64, i64* %PC.i1430
  %2812 = add i64 %2811, 3
  store i64 %2812, i64* %PC.i1430
  %2813 = inttoptr i64 %2810 to i32*
  %2814 = load i32, i32* %2813
  %2815 = zext i32 %2814 to i64
  store i64 %2815, i64* %RSI.i1431, align 8
  store %struct.Memory* %loadMem_45f74b, %struct.Memory** %MEMORY
  %loadMem_45f74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 33
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %PC.i1428 = bitcast %union.anon* %2818 to i64*
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 9
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %RSI.i1429 = bitcast %union.anon* %2821 to i64*
  %2822 = load i64, i64* %RSI.i1429
  %2823 = load i64, i64* %PC.i1428
  %2824 = add i64 %2823, 3
  store i64 %2824, i64* %PC.i1428
  %2825 = and i64 %2822, 4294967295
  %2826 = shl i64 %2825, 2
  %2827 = trunc i64 %2826 to i32
  %2828 = icmp slt i32 %2827, 0
  %2829 = shl i32 %2827, 1
  %2830 = zext i32 %2829 to i64
  store i64 %2830, i64* %RSI.i1429, align 8
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2832 = zext i1 %2828 to i8
  store i8 %2832, i8* %2831, align 1
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2834 = and i32 %2829, 254
  %2835 = call i32 @llvm.ctpop.i32(i32 %2834)
  %2836 = trunc i32 %2835 to i8
  %2837 = and i8 %2836, 1
  %2838 = xor i8 %2837, 1
  store i8 %2838, i8* %2833, align 1
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2839, align 1
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2841 = icmp eq i32 %2829, 0
  %2842 = zext i1 %2841 to i8
  store i8 %2842, i8* %2840, align 1
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2844 = lshr i32 %2829, 31
  %2845 = trunc i32 %2844 to i8
  store i8 %2845, i8* %2843, align 1
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2846, align 1
  store %struct.Memory* %loadMem_45f74e, %struct.Memory** %MEMORY
  %loadMem_45f751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2848 = getelementptr inbounds %struct.GPR, %struct.GPR* %2847, i32 0, i32 33
  %2849 = getelementptr inbounds %struct.Reg, %struct.Reg* %2848, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %2849 to i64*
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2851 = getelementptr inbounds %struct.GPR, %struct.GPR* %2850, i32 0, i32 9
  %2852 = getelementptr inbounds %struct.Reg, %struct.Reg* %2851, i32 0, i32 0
  %RSI.i1427 = bitcast %union.anon* %2852 to i64*
  %2853 = load i64, i64* %RSI.i1427
  %2854 = load i64, i64* %PC.i1426
  %2855 = add i64 %2854, 3
  store i64 %2855, i64* %PC.i1426
  %2856 = trunc i64 %2853 to i32
  %2857 = add i32 2, %2856
  %2858 = zext i32 %2857 to i64
  store i64 %2858, i64* %RSI.i1427, align 8
  %2859 = icmp ult i32 %2857, %2856
  %2860 = icmp ult i32 %2857, 2
  %2861 = or i1 %2859, %2860
  %2862 = zext i1 %2861 to i8
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2862, i8* %2863, align 1
  %2864 = and i32 %2857, 255
  %2865 = call i32 @llvm.ctpop.i32(i32 %2864)
  %2866 = trunc i32 %2865 to i8
  %2867 = and i8 %2866, 1
  %2868 = xor i8 %2867, 1
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2868, i8* %2869, align 1
  %2870 = xor i64 2, %2853
  %2871 = trunc i64 %2870 to i32
  %2872 = xor i32 %2871, %2857
  %2873 = lshr i32 %2872, 4
  %2874 = trunc i32 %2873 to i8
  %2875 = and i8 %2874, 1
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2875, i8* %2876, align 1
  %2877 = icmp eq i32 %2857, 0
  %2878 = zext i1 %2877 to i8
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2878, i8* %2879, align 1
  %2880 = lshr i32 %2857, 31
  %2881 = trunc i32 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2881, i8* %2882, align 1
  %2883 = lshr i32 %2856, 31
  %2884 = xor i32 %2880, %2883
  %2885 = add i32 %2884, %2880
  %2886 = icmp eq i32 %2885, 2
  %2887 = zext i1 %2886 to i8
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2887, i8* %2888, align 1
  store %struct.Memory* %loadMem_45f751, %struct.Memory** %MEMORY
  %loadMem_45f754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2890 = getelementptr inbounds %struct.GPR, %struct.GPR* %2889, i32 0, i32 33
  %2891 = getelementptr inbounds %struct.Reg, %struct.Reg* %2890, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %2891 to i64*
  %2892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2893 = getelementptr inbounds %struct.GPR, %struct.GPR* %2892, i32 0, i32 9
  %2894 = getelementptr inbounds %struct.Reg, %struct.Reg* %2893, i32 0, i32 0
  %ESI.i1424 = bitcast %union.anon* %2894 to i32*
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2896 = getelementptr inbounds %struct.GPR, %struct.GPR* %2895, i32 0, i32 11
  %2897 = getelementptr inbounds %struct.Reg, %struct.Reg* %2896, i32 0, i32 0
  %RDI.i1425 = bitcast %union.anon* %2897 to i64*
  %2898 = load i32, i32* %ESI.i1424
  %2899 = zext i32 %2898 to i64
  %2900 = load i64, i64* %PC.i1423
  %2901 = add i64 %2900, 3
  store i64 %2901, i64* %PC.i1423
  %2902 = shl i64 %2899, 32
  %2903 = ashr exact i64 %2902, 32
  store i64 %2903, i64* %RDI.i1425, align 8
  store %struct.Memory* %loadMem_45f754, %struct.Memory** %MEMORY
  %loadMem_45f757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2905 = getelementptr inbounds %struct.GPR, %struct.GPR* %2904, i32 0, i32 33
  %2906 = getelementptr inbounds %struct.Reg, %struct.Reg* %2905, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %2906 to i64*
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2908 = getelementptr inbounds %struct.GPR, %struct.GPR* %2907, i32 0, i32 7
  %2909 = getelementptr inbounds %struct.Reg, %struct.Reg* %2908, i32 0, i32 0
  %RDX.i1420 = bitcast %union.anon* %2909 to i64*
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 9
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %RSI.i1421 = bitcast %union.anon* %2912 to i64*
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2914 = getelementptr inbounds %struct.GPR, %struct.GPR* %2913, i32 0, i32 11
  %2915 = getelementptr inbounds %struct.Reg, %struct.Reg* %2914, i32 0, i32 0
  %RDI.i1422 = bitcast %union.anon* %2915 to i64*
  %2916 = load i64, i64* %RDX.i1420
  %2917 = load i64, i64* %RDI.i1422
  %2918 = mul i64 %2917, 4
  %2919 = add i64 %2918, %2916
  %2920 = load i64, i64* %PC.i1419
  %2921 = add i64 %2920, 3
  store i64 %2921, i64* %PC.i1419
  %2922 = inttoptr i64 %2919 to i32*
  %2923 = load i32, i32* %2922
  %2924 = zext i32 %2923 to i64
  store i64 %2924, i64* %RSI.i1421, align 8
  store %struct.Memory* %loadMem_45f757, %struct.Memory** %MEMORY
  %loadMem_45f75a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2926 = getelementptr inbounds %struct.GPR, %struct.GPR* %2925, i32 0, i32 33
  %2927 = getelementptr inbounds %struct.Reg, %struct.Reg* %2926, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %2927 to i64*
  %2928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2929 = getelementptr inbounds %struct.GPR, %struct.GPR* %2928, i32 0, i32 7
  %2930 = getelementptr inbounds %struct.Reg, %struct.Reg* %2929, i32 0, i32 0
  %RDX.i1417 = bitcast %union.anon* %2930 to i64*
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2932 = getelementptr inbounds %struct.GPR, %struct.GPR* %2931, i32 0, i32 15
  %2933 = getelementptr inbounds %struct.Reg, %struct.Reg* %2932, i32 0, i32 0
  %RBP.i1418 = bitcast %union.anon* %2933 to i64*
  %2934 = load i64, i64* %RBP.i1418
  %2935 = sub i64 %2934, 8
  %2936 = load i64, i64* %PC.i1416
  %2937 = add i64 %2936, 4
  store i64 %2937, i64* %PC.i1416
  %2938 = inttoptr i64 %2935 to i64*
  %2939 = load i64, i64* %2938
  store i64 %2939, i64* %RDX.i1417, align 8
  store %struct.Memory* %loadMem_45f75a, %struct.Memory** %MEMORY
  %loadMem_45f75e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2941 = getelementptr inbounds %struct.GPR, %struct.GPR* %2940, i32 0, i32 33
  %2942 = getelementptr inbounds %struct.Reg, %struct.Reg* %2941, i32 0, i32 0
  %PC.i1413 = bitcast %union.anon* %2942 to i64*
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2944 = getelementptr inbounds %struct.GPR, %struct.GPR* %2943, i32 0, i32 17
  %2945 = getelementptr inbounds %struct.Reg, %struct.Reg* %2944, i32 0, i32 0
  %R8D.i1414 = bitcast %union.anon* %2945 to i32*
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2947 = getelementptr inbounds %struct.GPR, %struct.GPR* %2946, i32 0, i32 15
  %2948 = getelementptr inbounds %struct.Reg, %struct.Reg* %2947, i32 0, i32 0
  %RBP.i1415 = bitcast %union.anon* %2948 to i64*
  %2949 = bitcast i32* %R8D.i1414 to i64*
  %2950 = load i64, i64* %RBP.i1415
  %2951 = sub i64 %2950, 20
  %2952 = load i64, i64* %PC.i1413
  %2953 = add i64 %2952, 4
  store i64 %2953, i64* %PC.i1413
  %2954 = inttoptr i64 %2951 to i32*
  %2955 = load i32, i32* %2954
  %2956 = zext i32 %2955 to i64
  store i64 %2956, i64* %2949, align 8
  store %struct.Memory* %loadMem_45f75e, %struct.Memory** %MEMORY
  %loadMem_45f762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 33
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %2959 to i64*
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 17
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %R8D.i1412 = bitcast %union.anon* %2962 to i32*
  %2963 = bitcast i32* %R8D.i1412 to i64*
  %2964 = load i32, i32* %R8D.i1412
  %2965 = zext i32 %2964 to i64
  %2966 = load i64, i64* %PC.i1411
  %2967 = add i64 %2966, 4
  store i64 %2967, i64* %PC.i1411
  %2968 = and i64 %2965, 4294967295
  %2969 = shl i64 %2968, 2
  %2970 = trunc i64 %2969 to i32
  %2971 = icmp slt i32 %2970, 0
  %2972 = shl i32 %2970, 1
  %2973 = zext i32 %2972 to i64
  store i64 %2973, i64* %2963, align 8
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2975 = zext i1 %2971 to i8
  store i8 %2975, i8* %2974, align 1
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2977 = and i32 %2972, 254
  %2978 = call i32 @llvm.ctpop.i32(i32 %2977)
  %2979 = trunc i32 %2978 to i8
  %2980 = and i8 %2979, 1
  %2981 = xor i8 %2980, 1
  store i8 %2981, i8* %2976, align 1
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2982, align 1
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2984 = icmp eq i32 %2972, 0
  %2985 = zext i1 %2984 to i8
  store i8 %2985, i8* %2983, align 1
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2987 = lshr i32 %2972, 31
  %2988 = trunc i32 %2987 to i8
  store i8 %2988, i8* %2986, align 1
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2989, align 1
  store %struct.Memory* %loadMem_45f762, %struct.Memory** %MEMORY
  %loadMem_45f766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 33
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %2992 to i64*
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2994 = getelementptr inbounds %struct.GPR, %struct.GPR* %2993, i32 0, i32 17
  %2995 = getelementptr inbounds %struct.Reg, %struct.Reg* %2994, i32 0, i32 0
  %R8D.i1410 = bitcast %union.anon* %2995 to i32*
  %2996 = bitcast i32* %R8D.i1410 to i64*
  %2997 = load i32, i32* %R8D.i1410
  %2998 = zext i32 %2997 to i64
  %2999 = load i64, i64* %PC.i1409
  %3000 = add i64 %2999, 4
  store i64 %3000, i64* %PC.i1409
  %3001 = add i32 6, %2997
  %3002 = zext i32 %3001 to i64
  store i64 %3002, i64* %2996, align 8
  %3003 = icmp ult i32 %3001, %2997
  %3004 = icmp ult i32 %3001, 6
  %3005 = or i1 %3003, %3004
  %3006 = zext i1 %3005 to i8
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3006, i8* %3007, align 1
  %3008 = and i32 %3001, 255
  %3009 = call i32 @llvm.ctpop.i32(i32 %3008)
  %3010 = trunc i32 %3009 to i8
  %3011 = and i8 %3010, 1
  %3012 = xor i8 %3011, 1
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3012, i8* %3013, align 1
  %3014 = xor i64 6, %2998
  %3015 = trunc i64 %3014 to i32
  %3016 = xor i32 %3015, %3001
  %3017 = lshr i32 %3016, 4
  %3018 = trunc i32 %3017 to i8
  %3019 = and i8 %3018, 1
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3019, i8* %3020, align 1
  %3021 = icmp eq i32 %3001, 0
  %3022 = zext i1 %3021 to i8
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3022, i8* %3023, align 1
  %3024 = lshr i32 %3001, 31
  %3025 = trunc i32 %3024 to i8
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3025, i8* %3026, align 1
  %3027 = lshr i32 %2997, 31
  %3028 = xor i32 %3024, %3027
  %3029 = add i32 %3028, %3024
  %3030 = icmp eq i32 %3029, 2
  %3031 = zext i1 %3030 to i8
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3031, i8* %3032, align 1
  store %struct.Memory* %loadMem_45f766, %struct.Memory** %MEMORY
  %loadMem_45f76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3034 = getelementptr inbounds %struct.GPR, %struct.GPR* %3033, i32 0, i32 33
  %3035 = getelementptr inbounds %struct.Reg, %struct.Reg* %3034, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %3035 to i64*
  %3036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3037 = getelementptr inbounds %struct.GPR, %struct.GPR* %3036, i32 0, i32 17
  %3038 = getelementptr inbounds %struct.Reg, %struct.Reg* %3037, i32 0, i32 0
  %R8D.i1407 = bitcast %union.anon* %3038 to i32*
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3040 = getelementptr inbounds %struct.GPR, %struct.GPR* %3039, i32 0, i32 11
  %3041 = getelementptr inbounds %struct.Reg, %struct.Reg* %3040, i32 0, i32 0
  %RDI.i1408 = bitcast %union.anon* %3041 to i64*
  %3042 = load i32, i32* %R8D.i1407
  %3043 = zext i32 %3042 to i64
  %3044 = load i64, i64* %PC.i1406
  %3045 = add i64 %3044, 3
  store i64 %3045, i64* %PC.i1406
  %3046 = shl i64 %3043, 32
  %3047 = ashr exact i64 %3046, 32
  store i64 %3047, i64* %RDI.i1408, align 8
  store %struct.Memory* %loadMem_45f76a, %struct.Memory** %MEMORY
  %loadMem_45f76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3049 = getelementptr inbounds %struct.GPR, %struct.GPR* %3048, i32 0, i32 33
  %3050 = getelementptr inbounds %struct.Reg, %struct.Reg* %3049, i32 0, i32 0
  %PC.i1402 = bitcast %union.anon* %3050 to i64*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 7
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %RDX.i1403 = bitcast %union.anon* %3053 to i64*
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 9
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %RSI.i1404 = bitcast %union.anon* %3056 to i64*
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3058 = getelementptr inbounds %struct.GPR, %struct.GPR* %3057, i32 0, i32 11
  %3059 = getelementptr inbounds %struct.Reg, %struct.Reg* %3058, i32 0, i32 0
  %RDI.i1405 = bitcast %union.anon* %3059 to i64*
  %3060 = load i64, i64* %RSI.i1404
  %3061 = load i64, i64* %RDX.i1403
  %3062 = load i64, i64* %RDI.i1405
  %3063 = mul i64 %3062, 4
  %3064 = add i64 %3063, %3061
  %3065 = load i64, i64* %PC.i1402
  %3066 = add i64 %3065, 3
  store i64 %3066, i64* %PC.i1402
  %3067 = trunc i64 %3060 to i32
  %3068 = inttoptr i64 %3064 to i32*
  %3069 = load i32, i32* %3068
  %3070 = sub i32 %3067, %3069
  %3071 = zext i32 %3070 to i64
  store i64 %3071, i64* %RSI.i1404, align 8
  %3072 = icmp ult i32 %3067, %3069
  %3073 = zext i1 %3072 to i8
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3073, i8* %3074, align 1
  %3075 = and i32 %3070, 255
  %3076 = call i32 @llvm.ctpop.i32(i32 %3075)
  %3077 = trunc i32 %3076 to i8
  %3078 = and i8 %3077, 1
  %3079 = xor i8 %3078, 1
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3079, i8* %3080, align 1
  %3081 = xor i32 %3069, %3067
  %3082 = xor i32 %3081, %3070
  %3083 = lshr i32 %3082, 4
  %3084 = trunc i32 %3083 to i8
  %3085 = and i8 %3084, 1
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3085, i8* %3086, align 1
  %3087 = icmp eq i32 %3070, 0
  %3088 = zext i1 %3087 to i8
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3088, i8* %3089, align 1
  %3090 = lshr i32 %3070, 31
  %3091 = trunc i32 %3090 to i8
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3091, i8* %3092, align 1
  %3093 = lshr i32 %3067, 31
  %3094 = lshr i32 %3069, 31
  %3095 = xor i32 %3094, %3093
  %3096 = xor i32 %3090, %3093
  %3097 = add i32 %3096, %3095
  %3098 = icmp eq i32 %3097, 2
  %3099 = zext i1 %3098 to i8
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3099, i8* %3100, align 1
  store %struct.Memory* %loadMem_45f76d, %struct.Memory** %MEMORY
  %loadMem_45f770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3102 = getelementptr inbounds %struct.GPR, %struct.GPR* %3101, i32 0, i32 33
  %3103 = getelementptr inbounds %struct.Reg, %struct.Reg* %3102, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %3103 to i64*
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3105 = getelementptr inbounds %struct.GPR, %struct.GPR* %3104, i32 0, i32 7
  %3106 = getelementptr inbounds %struct.Reg, %struct.Reg* %3105, i32 0, i32 0
  %RDX.i1400 = bitcast %union.anon* %3106 to i64*
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3108 = getelementptr inbounds %struct.GPR, %struct.GPR* %3107, i32 0, i32 15
  %3109 = getelementptr inbounds %struct.Reg, %struct.Reg* %3108, i32 0, i32 0
  %RBP.i1401 = bitcast %union.anon* %3109 to i64*
  %3110 = load i64, i64* %RBP.i1401
  %3111 = sub i64 %3110, 20
  %3112 = load i64, i64* %PC.i1399
  %3113 = add i64 %3112, 4
  store i64 %3113, i64* %PC.i1399
  %3114 = inttoptr i64 %3111 to i32*
  %3115 = load i32, i32* %3114
  %3116 = sext i32 %3115 to i64
  store i64 %3116, i64* %RDX.i1400, align 8
  store %struct.Memory* %loadMem_45f770, %struct.Memory** %MEMORY
  %loadMem_45f774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3118 = getelementptr inbounds %struct.GPR, %struct.GPR* %3117, i32 0, i32 33
  %3119 = getelementptr inbounds %struct.Reg, %struct.Reg* %3118, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %3119 to i64*
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3121 = getelementptr inbounds %struct.GPR, %struct.GPR* %3120, i32 0, i32 7
  %3122 = getelementptr inbounds %struct.Reg, %struct.Reg* %3121, i32 0, i32 0
  %RDX.i1398 = bitcast %union.anon* %3122 to i64*
  %3123 = load i64, i64* %RDX.i1398
  %3124 = load i64, i64* %PC.i1397
  %3125 = add i64 %3124, 4
  store i64 %3125, i64* %PC.i1397
  %3126 = shl i64 %3123, 4
  %3127 = icmp slt i64 %3126, 0
  %3128 = shl i64 %3126, 1
  store i64 %3128, i64* %RDX.i1398, align 8
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3130 = zext i1 %3127 to i8
  store i8 %3130, i8* %3129, align 1
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3132 = trunc i64 %3128 to i32
  %3133 = and i32 %3132, 254
  %3134 = call i32 @llvm.ctpop.i32(i32 %3133)
  %3135 = trunc i32 %3134 to i8
  %3136 = and i8 %3135, 1
  %3137 = xor i8 %3136, 1
  store i8 %3137, i8* %3131, align 1
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3138, align 1
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3140 = icmp eq i64 %3128, 0
  %3141 = zext i1 %3140 to i8
  store i8 %3141, i8* %3139, align 1
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3143 = lshr i64 %3128, 63
  %3144 = trunc i64 %3143 to i8
  store i8 %3144, i8* %3142, align 1
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3145, align 1
  store %struct.Memory* %loadMem_45f774, %struct.Memory** %MEMORY
  %loadMem_45f778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3147 = getelementptr inbounds %struct.GPR, %struct.GPR* %3146, i32 0, i32 33
  %3148 = getelementptr inbounds %struct.Reg, %struct.Reg* %3147, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %3148 to i64*
  %3149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3150 = getelementptr inbounds %struct.GPR, %struct.GPR* %3149, i32 0, i32 1
  %3151 = getelementptr inbounds %struct.Reg, %struct.Reg* %3150, i32 0, i32 0
  %RAX.i1395 = bitcast %union.anon* %3151 to i64*
  %3152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3153 = getelementptr inbounds %struct.GPR, %struct.GPR* %3152, i32 0, i32 11
  %3154 = getelementptr inbounds %struct.Reg, %struct.Reg* %3153, i32 0, i32 0
  %RDI.i1396 = bitcast %union.anon* %3154 to i64*
  %3155 = load i64, i64* %RAX.i1395
  %3156 = load i64, i64* %PC.i1394
  %3157 = add i64 %3156, 3
  store i64 %3157, i64* %PC.i1394
  store i64 %3155, i64* %RDI.i1396, align 8
  store %struct.Memory* %loadMem_45f778, %struct.Memory** %MEMORY
  %loadMem_45f77b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 33
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %3160 to i64*
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3162 = getelementptr inbounds %struct.GPR, %struct.GPR* %3161, i32 0, i32 7
  %3163 = getelementptr inbounds %struct.Reg, %struct.Reg* %3162, i32 0, i32 0
  %RDX.i1392 = bitcast %union.anon* %3163 to i64*
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3165 = getelementptr inbounds %struct.GPR, %struct.GPR* %3164, i32 0, i32 11
  %3166 = getelementptr inbounds %struct.Reg, %struct.Reg* %3165, i32 0, i32 0
  %RDI.i1393 = bitcast %union.anon* %3166 to i64*
  %3167 = load i64, i64* %RDI.i1393
  %3168 = load i64, i64* %RDX.i1392
  %3169 = load i64, i64* %PC.i1391
  %3170 = add i64 %3169, 3
  store i64 %3170, i64* %PC.i1391
  %3171 = add i64 %3168, %3167
  store i64 %3171, i64* %RDI.i1393, align 8
  %3172 = icmp ult i64 %3171, %3167
  %3173 = icmp ult i64 %3171, %3168
  %3174 = or i1 %3172, %3173
  %3175 = zext i1 %3174 to i8
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3175, i8* %3176, align 1
  %3177 = trunc i64 %3171 to i32
  %3178 = and i32 %3177, 255
  %3179 = call i32 @llvm.ctpop.i32(i32 %3178)
  %3180 = trunc i32 %3179 to i8
  %3181 = and i8 %3180, 1
  %3182 = xor i8 %3181, 1
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3182, i8* %3183, align 1
  %3184 = xor i64 %3168, %3167
  %3185 = xor i64 %3184, %3171
  %3186 = lshr i64 %3185, 4
  %3187 = trunc i64 %3186 to i8
  %3188 = and i8 %3187, 1
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3188, i8* %3189, align 1
  %3190 = icmp eq i64 %3171, 0
  %3191 = zext i1 %3190 to i8
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3191, i8* %3192, align 1
  %3193 = lshr i64 %3171, 63
  %3194 = trunc i64 %3193 to i8
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3194, i8* %3195, align 1
  %3196 = lshr i64 %3167, 63
  %3197 = lshr i64 %3168, 63
  %3198 = xor i64 %3193, %3196
  %3199 = xor i64 %3193, %3197
  %3200 = add i64 %3198, %3199
  %3201 = icmp eq i64 %3200, 2
  %3202 = zext i1 %3201 to i8
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3202, i8* %3203, align 1
  store %struct.Memory* %loadMem_45f77b, %struct.Memory** %MEMORY
  %loadMem_45f77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3205 = getelementptr inbounds %struct.GPR, %struct.GPR* %3204, i32 0, i32 33
  %3206 = getelementptr inbounds %struct.Reg, %struct.Reg* %3205, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %3206 to i64*
  %3207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3208 = getelementptr inbounds %struct.GPR, %struct.GPR* %3207, i32 0, i32 9
  %3209 = getelementptr inbounds %struct.Reg, %struct.Reg* %3208, i32 0, i32 0
  %ESI.i1389 = bitcast %union.anon* %3209 to i32*
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3211 = getelementptr inbounds %struct.GPR, %struct.GPR* %3210, i32 0, i32 11
  %3212 = getelementptr inbounds %struct.Reg, %struct.Reg* %3211, i32 0, i32 0
  %RDI.i1390 = bitcast %union.anon* %3212 to i64*
  %3213 = load i64, i64* %RDI.i1390
  %3214 = add i64 %3213, 24
  %3215 = load i32, i32* %ESI.i1389
  %3216 = zext i32 %3215 to i64
  %3217 = load i64, i64* %PC.i1388
  %3218 = add i64 %3217, 3
  store i64 %3218, i64* %PC.i1388
  %3219 = inttoptr i64 %3214 to i32*
  store i32 %3215, i32* %3219
  store %struct.Memory* %loadMem_45f77e, %struct.Memory** %MEMORY
  %loadMem_45f781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3221 = getelementptr inbounds %struct.GPR, %struct.GPR* %3220, i32 0, i32 33
  %3222 = getelementptr inbounds %struct.Reg, %struct.Reg* %3221, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %3222 to i64*
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3224 = getelementptr inbounds %struct.GPR, %struct.GPR* %3223, i32 0, i32 7
  %3225 = getelementptr inbounds %struct.Reg, %struct.Reg* %3224, i32 0, i32 0
  %RDX.i1386 = bitcast %union.anon* %3225 to i64*
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3227 = getelementptr inbounds %struct.GPR, %struct.GPR* %3226, i32 0, i32 15
  %3228 = getelementptr inbounds %struct.Reg, %struct.Reg* %3227, i32 0, i32 0
  %RBP.i1387 = bitcast %union.anon* %3228 to i64*
  %3229 = load i64, i64* %RBP.i1387
  %3230 = sub i64 %3229, 8
  %3231 = load i64, i64* %PC.i1385
  %3232 = add i64 %3231, 4
  store i64 %3232, i64* %PC.i1385
  %3233 = inttoptr i64 %3230 to i64*
  %3234 = load i64, i64* %3233
  store i64 %3234, i64* %RDX.i1386, align 8
  store %struct.Memory* %loadMem_45f781, %struct.Memory** %MEMORY
  %loadMem_45f785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3236 = getelementptr inbounds %struct.GPR, %struct.GPR* %3235, i32 0, i32 33
  %3237 = getelementptr inbounds %struct.Reg, %struct.Reg* %3236, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %3237 to i64*
  %3238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3239 = getelementptr inbounds %struct.GPR, %struct.GPR* %3238, i32 0, i32 9
  %3240 = getelementptr inbounds %struct.Reg, %struct.Reg* %3239, i32 0, i32 0
  %RSI.i1383 = bitcast %union.anon* %3240 to i64*
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3242 = getelementptr inbounds %struct.GPR, %struct.GPR* %3241, i32 0, i32 15
  %3243 = getelementptr inbounds %struct.Reg, %struct.Reg* %3242, i32 0, i32 0
  %RBP.i1384 = bitcast %union.anon* %3243 to i64*
  %3244 = load i64, i64* %RBP.i1384
  %3245 = sub i64 %3244, 20
  %3246 = load i64, i64* %PC.i1382
  %3247 = add i64 %3246, 3
  store i64 %3247, i64* %PC.i1382
  %3248 = inttoptr i64 %3245 to i32*
  %3249 = load i32, i32* %3248
  %3250 = zext i32 %3249 to i64
  store i64 %3250, i64* %RSI.i1383, align 8
  store %struct.Memory* %loadMem_45f785, %struct.Memory** %MEMORY
  %loadMem_45f788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3252 = getelementptr inbounds %struct.GPR, %struct.GPR* %3251, i32 0, i32 33
  %3253 = getelementptr inbounds %struct.Reg, %struct.Reg* %3252, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %3253 to i64*
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3255 = getelementptr inbounds %struct.GPR, %struct.GPR* %3254, i32 0, i32 9
  %3256 = getelementptr inbounds %struct.Reg, %struct.Reg* %3255, i32 0, i32 0
  %RSI.i1381 = bitcast %union.anon* %3256 to i64*
  %3257 = load i64, i64* %RSI.i1381
  %3258 = load i64, i64* %PC.i1380
  %3259 = add i64 %3258, 3
  store i64 %3259, i64* %PC.i1380
  %3260 = and i64 %3257, 4294967295
  %3261 = shl i64 %3260, 2
  %3262 = trunc i64 %3261 to i32
  %3263 = icmp slt i32 %3262, 0
  %3264 = shl i32 %3262, 1
  %3265 = zext i32 %3264 to i64
  store i64 %3265, i64* %RSI.i1381, align 8
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3267 = zext i1 %3263 to i8
  store i8 %3267, i8* %3266, align 1
  %3268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3269 = and i32 %3264, 254
  %3270 = call i32 @llvm.ctpop.i32(i32 %3269)
  %3271 = trunc i32 %3270 to i8
  %3272 = and i8 %3271, 1
  %3273 = xor i8 %3272, 1
  store i8 %3273, i8* %3268, align 1
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3274, align 1
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3276 = icmp eq i32 %3264, 0
  %3277 = zext i1 %3276 to i8
  store i8 %3277, i8* %3275, align 1
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3279 = lshr i32 %3264, 31
  %3280 = trunc i32 %3279 to i8
  store i8 %3280, i8* %3278, align 1
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3281, align 1
  store %struct.Memory* %loadMem_45f788, %struct.Memory** %MEMORY
  %loadMem_45f78b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3283 = getelementptr inbounds %struct.GPR, %struct.GPR* %3282, i32 0, i32 33
  %3284 = getelementptr inbounds %struct.Reg, %struct.Reg* %3283, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %3284 to i64*
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3286 = getelementptr inbounds %struct.GPR, %struct.GPR* %3285, i32 0, i32 9
  %3287 = getelementptr inbounds %struct.Reg, %struct.Reg* %3286, i32 0, i32 0
  %RSI.i1379 = bitcast %union.anon* %3287 to i64*
  %3288 = load i64, i64* %RSI.i1379
  %3289 = load i64, i64* %PC.i1378
  %3290 = add i64 %3289, 3
  store i64 %3290, i64* %PC.i1378
  %3291 = trunc i64 %3288 to i32
  %3292 = add i32 3, %3291
  %3293 = zext i32 %3292 to i64
  store i64 %3293, i64* %RSI.i1379, align 8
  %3294 = icmp ult i32 %3292, %3291
  %3295 = icmp ult i32 %3292, 3
  %3296 = or i1 %3294, %3295
  %3297 = zext i1 %3296 to i8
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3297, i8* %3298, align 1
  %3299 = and i32 %3292, 255
  %3300 = call i32 @llvm.ctpop.i32(i32 %3299)
  %3301 = trunc i32 %3300 to i8
  %3302 = and i8 %3301, 1
  %3303 = xor i8 %3302, 1
  %3304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3303, i8* %3304, align 1
  %3305 = xor i64 3, %3288
  %3306 = trunc i64 %3305 to i32
  %3307 = xor i32 %3306, %3292
  %3308 = lshr i32 %3307, 4
  %3309 = trunc i32 %3308 to i8
  %3310 = and i8 %3309, 1
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3310, i8* %3311, align 1
  %3312 = icmp eq i32 %3292, 0
  %3313 = zext i1 %3312 to i8
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3313, i8* %3314, align 1
  %3315 = lshr i32 %3292, 31
  %3316 = trunc i32 %3315 to i8
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3316, i8* %3317, align 1
  %3318 = lshr i32 %3291, 31
  %3319 = xor i32 %3315, %3318
  %3320 = add i32 %3319, %3315
  %3321 = icmp eq i32 %3320, 2
  %3322 = zext i1 %3321 to i8
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3322, i8* %3323, align 1
  store %struct.Memory* %loadMem_45f78b, %struct.Memory** %MEMORY
  %loadMem_45f78e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3325 = getelementptr inbounds %struct.GPR, %struct.GPR* %3324, i32 0, i32 33
  %3326 = getelementptr inbounds %struct.Reg, %struct.Reg* %3325, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %3326 to i64*
  %3327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3328 = getelementptr inbounds %struct.GPR, %struct.GPR* %3327, i32 0, i32 9
  %3329 = getelementptr inbounds %struct.Reg, %struct.Reg* %3328, i32 0, i32 0
  %ESI.i1376 = bitcast %union.anon* %3329 to i32*
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3331 = getelementptr inbounds %struct.GPR, %struct.GPR* %3330, i32 0, i32 11
  %3332 = getelementptr inbounds %struct.Reg, %struct.Reg* %3331, i32 0, i32 0
  %RDI.i1377 = bitcast %union.anon* %3332 to i64*
  %3333 = load i32, i32* %ESI.i1376
  %3334 = zext i32 %3333 to i64
  %3335 = load i64, i64* %PC.i1375
  %3336 = add i64 %3335, 3
  store i64 %3336, i64* %PC.i1375
  %3337 = shl i64 %3334, 32
  %3338 = ashr exact i64 %3337, 32
  store i64 %3338, i64* %RDI.i1377, align 8
  store %struct.Memory* %loadMem_45f78e, %struct.Memory** %MEMORY
  %loadMem_45f791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 33
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %3341 to i64*
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 7
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %RDX.i1372 = bitcast %union.anon* %3344 to i64*
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3346 = getelementptr inbounds %struct.GPR, %struct.GPR* %3345, i32 0, i32 9
  %3347 = getelementptr inbounds %struct.Reg, %struct.Reg* %3346, i32 0, i32 0
  %RSI.i1373 = bitcast %union.anon* %3347 to i64*
  %3348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3349 = getelementptr inbounds %struct.GPR, %struct.GPR* %3348, i32 0, i32 11
  %3350 = getelementptr inbounds %struct.Reg, %struct.Reg* %3349, i32 0, i32 0
  %RDI.i1374 = bitcast %union.anon* %3350 to i64*
  %3351 = load i64, i64* %RDX.i1372
  %3352 = load i64, i64* %RDI.i1374
  %3353 = mul i64 %3352, 4
  %3354 = add i64 %3353, %3351
  %3355 = load i64, i64* %PC.i1371
  %3356 = add i64 %3355, 3
  store i64 %3356, i64* %PC.i1371
  %3357 = inttoptr i64 %3354 to i32*
  %3358 = load i32, i32* %3357
  %3359 = zext i32 %3358 to i64
  store i64 %3359, i64* %RSI.i1373, align 8
  store %struct.Memory* %loadMem_45f791, %struct.Memory** %MEMORY
  %loadMem_45f794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3361 = getelementptr inbounds %struct.GPR, %struct.GPR* %3360, i32 0, i32 33
  %3362 = getelementptr inbounds %struct.Reg, %struct.Reg* %3361, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %3362 to i64*
  %3363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3364 = getelementptr inbounds %struct.GPR, %struct.GPR* %3363, i32 0, i32 7
  %3365 = getelementptr inbounds %struct.Reg, %struct.Reg* %3364, i32 0, i32 0
  %RDX.i1369 = bitcast %union.anon* %3365 to i64*
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 15
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %RBP.i1370 = bitcast %union.anon* %3368 to i64*
  %3369 = load i64, i64* %RBP.i1370
  %3370 = sub i64 %3369, 8
  %3371 = load i64, i64* %PC.i1368
  %3372 = add i64 %3371, 4
  store i64 %3372, i64* %PC.i1368
  %3373 = inttoptr i64 %3370 to i64*
  %3374 = load i64, i64* %3373
  store i64 %3374, i64* %RDX.i1369, align 8
  store %struct.Memory* %loadMem_45f794, %struct.Memory** %MEMORY
  %loadMem_45f798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3376 = getelementptr inbounds %struct.GPR, %struct.GPR* %3375, i32 0, i32 33
  %3377 = getelementptr inbounds %struct.Reg, %struct.Reg* %3376, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %3377 to i64*
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3379 = getelementptr inbounds %struct.GPR, %struct.GPR* %3378, i32 0, i32 17
  %3380 = getelementptr inbounds %struct.Reg, %struct.Reg* %3379, i32 0, i32 0
  %R8D.i1366 = bitcast %union.anon* %3380 to i32*
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 15
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %RBP.i1367 = bitcast %union.anon* %3383 to i64*
  %3384 = bitcast i32* %R8D.i1366 to i64*
  %3385 = load i64, i64* %RBP.i1367
  %3386 = sub i64 %3385, 20
  %3387 = load i64, i64* %PC.i1365
  %3388 = add i64 %3387, 4
  store i64 %3388, i64* %PC.i1365
  %3389 = inttoptr i64 %3386 to i32*
  %3390 = load i32, i32* %3389
  %3391 = zext i32 %3390 to i64
  store i64 %3391, i64* %3384, align 8
  store %struct.Memory* %loadMem_45f798, %struct.Memory** %MEMORY
  %loadMem_45f79c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3393 = getelementptr inbounds %struct.GPR, %struct.GPR* %3392, i32 0, i32 33
  %3394 = getelementptr inbounds %struct.Reg, %struct.Reg* %3393, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %3394 to i64*
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3396 = getelementptr inbounds %struct.GPR, %struct.GPR* %3395, i32 0, i32 17
  %3397 = getelementptr inbounds %struct.Reg, %struct.Reg* %3396, i32 0, i32 0
  %R8D.i1364 = bitcast %union.anon* %3397 to i32*
  %3398 = bitcast i32* %R8D.i1364 to i64*
  %3399 = load i32, i32* %R8D.i1364
  %3400 = zext i32 %3399 to i64
  %3401 = load i64, i64* %PC.i1363
  %3402 = add i64 %3401, 4
  store i64 %3402, i64* %PC.i1363
  %3403 = and i64 %3400, 4294967295
  %3404 = shl i64 %3403, 2
  %3405 = trunc i64 %3404 to i32
  %3406 = icmp slt i32 %3405, 0
  %3407 = shl i32 %3405, 1
  %3408 = zext i32 %3407 to i64
  store i64 %3408, i64* %3398, align 8
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3410 = zext i1 %3406 to i8
  store i8 %3410, i8* %3409, align 1
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3412 = and i32 %3407, 254
  %3413 = call i32 @llvm.ctpop.i32(i32 %3412)
  %3414 = trunc i32 %3413 to i8
  %3415 = and i8 %3414, 1
  %3416 = xor i8 %3415, 1
  store i8 %3416, i8* %3411, align 1
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3417, align 1
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3419 = icmp eq i32 %3407, 0
  %3420 = zext i1 %3419 to i8
  store i8 %3420, i8* %3418, align 1
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3422 = lshr i32 %3407, 31
  %3423 = trunc i32 %3422 to i8
  store i8 %3423, i8* %3421, align 1
  %3424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3424, align 1
  store %struct.Memory* %loadMem_45f79c, %struct.Memory** %MEMORY
  %loadMem_45f7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3426 = getelementptr inbounds %struct.GPR, %struct.GPR* %3425, i32 0, i32 33
  %3427 = getelementptr inbounds %struct.Reg, %struct.Reg* %3426, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %3427 to i64*
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3429 = getelementptr inbounds %struct.GPR, %struct.GPR* %3428, i32 0, i32 17
  %3430 = getelementptr inbounds %struct.Reg, %struct.Reg* %3429, i32 0, i32 0
  %R8D.i1362 = bitcast %union.anon* %3430 to i32*
  %3431 = bitcast i32* %R8D.i1362 to i64*
  %3432 = load i32, i32* %R8D.i1362
  %3433 = zext i32 %3432 to i64
  %3434 = load i64, i64* %PC.i1361
  %3435 = add i64 %3434, 4
  store i64 %3435, i64* %PC.i1361
  %3436 = add i32 7, %3432
  %3437 = zext i32 %3436 to i64
  store i64 %3437, i64* %3431, align 8
  %3438 = icmp ult i32 %3436, %3432
  %3439 = icmp ult i32 %3436, 7
  %3440 = or i1 %3438, %3439
  %3441 = zext i1 %3440 to i8
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3441, i8* %3442, align 1
  %3443 = and i32 %3436, 255
  %3444 = call i32 @llvm.ctpop.i32(i32 %3443)
  %3445 = trunc i32 %3444 to i8
  %3446 = and i8 %3445, 1
  %3447 = xor i8 %3446, 1
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3447, i8* %3448, align 1
  %3449 = xor i64 7, %3433
  %3450 = trunc i64 %3449 to i32
  %3451 = xor i32 %3450, %3436
  %3452 = lshr i32 %3451, 4
  %3453 = trunc i32 %3452 to i8
  %3454 = and i8 %3453, 1
  %3455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3454, i8* %3455, align 1
  %3456 = icmp eq i32 %3436, 0
  %3457 = zext i1 %3456 to i8
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3457, i8* %3458, align 1
  %3459 = lshr i32 %3436, 31
  %3460 = trunc i32 %3459 to i8
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3460, i8* %3461, align 1
  %3462 = lshr i32 %3432, 31
  %3463 = xor i32 %3459, %3462
  %3464 = add i32 %3463, %3459
  %3465 = icmp eq i32 %3464, 2
  %3466 = zext i1 %3465 to i8
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3466, i8* %3467, align 1
  store %struct.Memory* %loadMem_45f7a0, %struct.Memory** %MEMORY
  %loadMem_45f7a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3469 = getelementptr inbounds %struct.GPR, %struct.GPR* %3468, i32 0, i32 33
  %3470 = getelementptr inbounds %struct.Reg, %struct.Reg* %3469, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %3470 to i64*
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3472 = getelementptr inbounds %struct.GPR, %struct.GPR* %3471, i32 0, i32 17
  %3473 = getelementptr inbounds %struct.Reg, %struct.Reg* %3472, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %3473 to i32*
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3475 = getelementptr inbounds %struct.GPR, %struct.GPR* %3474, i32 0, i32 11
  %3476 = getelementptr inbounds %struct.Reg, %struct.Reg* %3475, i32 0, i32 0
  %RDI.i1360 = bitcast %union.anon* %3476 to i64*
  %3477 = load i32, i32* %R8D.i
  %3478 = zext i32 %3477 to i64
  %3479 = load i64, i64* %PC.i1359
  %3480 = add i64 %3479, 3
  store i64 %3480, i64* %PC.i1359
  %3481 = shl i64 %3478, 32
  %3482 = ashr exact i64 %3481, 32
  store i64 %3482, i64* %RDI.i1360, align 8
  store %struct.Memory* %loadMem_45f7a4, %struct.Memory** %MEMORY
  %loadMem_45f7a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3484 = getelementptr inbounds %struct.GPR, %struct.GPR* %3483, i32 0, i32 33
  %3485 = getelementptr inbounds %struct.Reg, %struct.Reg* %3484, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %3485 to i64*
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3487 = getelementptr inbounds %struct.GPR, %struct.GPR* %3486, i32 0, i32 7
  %3488 = getelementptr inbounds %struct.Reg, %struct.Reg* %3487, i32 0, i32 0
  %RDX.i1356 = bitcast %union.anon* %3488 to i64*
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 9
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %RSI.i1357 = bitcast %union.anon* %3491 to i64*
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 11
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %RDI.i1358 = bitcast %union.anon* %3494 to i64*
  %3495 = load i64, i64* %RSI.i1357
  %3496 = load i64, i64* %RDX.i1356
  %3497 = load i64, i64* %RDI.i1358
  %3498 = mul i64 %3497, 4
  %3499 = add i64 %3498, %3496
  %3500 = load i64, i64* %PC.i1355
  %3501 = add i64 %3500, 3
  store i64 %3501, i64* %PC.i1355
  %3502 = trunc i64 %3495 to i32
  %3503 = inttoptr i64 %3499 to i32*
  %3504 = load i32, i32* %3503
  %3505 = sub i32 %3502, %3504
  %3506 = zext i32 %3505 to i64
  store i64 %3506, i64* %RSI.i1357, align 8
  %3507 = icmp ult i32 %3502, %3504
  %3508 = zext i1 %3507 to i8
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3508, i8* %3509, align 1
  %3510 = and i32 %3505, 255
  %3511 = call i32 @llvm.ctpop.i32(i32 %3510)
  %3512 = trunc i32 %3511 to i8
  %3513 = and i8 %3512, 1
  %3514 = xor i8 %3513, 1
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3514, i8* %3515, align 1
  %3516 = xor i32 %3504, %3502
  %3517 = xor i32 %3516, %3505
  %3518 = lshr i32 %3517, 4
  %3519 = trunc i32 %3518 to i8
  %3520 = and i8 %3519, 1
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3520, i8* %3521, align 1
  %3522 = icmp eq i32 %3505, 0
  %3523 = zext i1 %3522 to i8
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3523, i8* %3524, align 1
  %3525 = lshr i32 %3505, 31
  %3526 = trunc i32 %3525 to i8
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3526, i8* %3527, align 1
  %3528 = lshr i32 %3502, 31
  %3529 = lshr i32 %3504, 31
  %3530 = xor i32 %3529, %3528
  %3531 = xor i32 %3525, %3528
  %3532 = add i32 %3531, %3530
  %3533 = icmp eq i32 %3532, 2
  %3534 = zext i1 %3533 to i8
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3534, i8* %3535, align 1
  store %struct.Memory* %loadMem_45f7a7, %struct.Memory** %MEMORY
  %loadMem_45f7aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 33
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %3538 to i64*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 7
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %RDX.i1353 = bitcast %union.anon* %3541 to i64*
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3543 = getelementptr inbounds %struct.GPR, %struct.GPR* %3542, i32 0, i32 15
  %3544 = getelementptr inbounds %struct.Reg, %struct.Reg* %3543, i32 0, i32 0
  %RBP.i1354 = bitcast %union.anon* %3544 to i64*
  %3545 = load i64, i64* %RBP.i1354
  %3546 = sub i64 %3545, 20
  %3547 = load i64, i64* %PC.i1352
  %3548 = add i64 %3547, 4
  store i64 %3548, i64* %PC.i1352
  %3549 = inttoptr i64 %3546 to i32*
  %3550 = load i32, i32* %3549
  %3551 = sext i32 %3550 to i64
  store i64 %3551, i64* %RDX.i1353, align 8
  store %struct.Memory* %loadMem_45f7aa, %struct.Memory** %MEMORY
  %loadMem_45f7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3553 = getelementptr inbounds %struct.GPR, %struct.GPR* %3552, i32 0, i32 33
  %3554 = getelementptr inbounds %struct.Reg, %struct.Reg* %3553, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %3554 to i64*
  %3555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3556 = getelementptr inbounds %struct.GPR, %struct.GPR* %3555, i32 0, i32 7
  %3557 = getelementptr inbounds %struct.Reg, %struct.Reg* %3556, i32 0, i32 0
  %RDX.i1351 = bitcast %union.anon* %3557 to i64*
  %3558 = load i64, i64* %RDX.i1351
  %3559 = load i64, i64* %PC.i1350
  %3560 = add i64 %3559, 4
  store i64 %3560, i64* %PC.i1350
  %3561 = shl i64 %3558, 4
  %3562 = icmp slt i64 %3561, 0
  %3563 = shl i64 %3561, 1
  store i64 %3563, i64* %RDX.i1351, align 8
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3565 = zext i1 %3562 to i8
  store i8 %3565, i8* %3564, align 1
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3567 = trunc i64 %3563 to i32
  %3568 = and i32 %3567, 254
  %3569 = call i32 @llvm.ctpop.i32(i32 %3568)
  %3570 = trunc i32 %3569 to i8
  %3571 = and i8 %3570, 1
  %3572 = xor i8 %3571, 1
  store i8 %3572, i8* %3566, align 1
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3573, align 1
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3575 = icmp eq i64 %3563, 0
  %3576 = zext i1 %3575 to i8
  store i8 %3576, i8* %3574, align 1
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3578 = lshr i64 %3563, 63
  %3579 = trunc i64 %3578 to i8
  store i8 %3579, i8* %3577, align 1
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3580, align 1
  store %struct.Memory* %loadMem_45f7ae, %struct.Memory** %MEMORY
  %loadMem_45f7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 33
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %3583 to i64*
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 1
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %RAX.i1348 = bitcast %union.anon* %3586 to i64*
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3588 = getelementptr inbounds %struct.GPR, %struct.GPR* %3587, i32 0, i32 11
  %3589 = getelementptr inbounds %struct.Reg, %struct.Reg* %3588, i32 0, i32 0
  %RDI.i1349 = bitcast %union.anon* %3589 to i64*
  %3590 = load i64, i64* %RAX.i1348
  %3591 = load i64, i64* %PC.i1347
  %3592 = add i64 %3591, 3
  store i64 %3592, i64* %PC.i1347
  store i64 %3590, i64* %RDI.i1349, align 8
  store %struct.Memory* %loadMem_45f7b2, %struct.Memory** %MEMORY
  %loadMem_45f7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 33
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %3595 to i64*
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3597 = getelementptr inbounds %struct.GPR, %struct.GPR* %3596, i32 0, i32 7
  %3598 = getelementptr inbounds %struct.Reg, %struct.Reg* %3597, i32 0, i32 0
  %RDX.i1345 = bitcast %union.anon* %3598 to i64*
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 11
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %RDI.i1346 = bitcast %union.anon* %3601 to i64*
  %3602 = load i64, i64* %RDI.i1346
  %3603 = load i64, i64* %RDX.i1345
  %3604 = load i64, i64* %PC.i1344
  %3605 = add i64 %3604, 3
  store i64 %3605, i64* %PC.i1344
  %3606 = add i64 %3603, %3602
  store i64 %3606, i64* %RDI.i1346, align 8
  %3607 = icmp ult i64 %3606, %3602
  %3608 = icmp ult i64 %3606, %3603
  %3609 = or i1 %3607, %3608
  %3610 = zext i1 %3609 to i8
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3610, i8* %3611, align 1
  %3612 = trunc i64 %3606 to i32
  %3613 = and i32 %3612, 255
  %3614 = call i32 @llvm.ctpop.i32(i32 %3613)
  %3615 = trunc i32 %3614 to i8
  %3616 = and i8 %3615, 1
  %3617 = xor i8 %3616, 1
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3617, i8* %3618, align 1
  %3619 = xor i64 %3603, %3602
  %3620 = xor i64 %3619, %3606
  %3621 = lshr i64 %3620, 4
  %3622 = trunc i64 %3621 to i8
  %3623 = and i8 %3622, 1
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3623, i8* %3624, align 1
  %3625 = icmp eq i64 %3606, 0
  %3626 = zext i1 %3625 to i8
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3626, i8* %3627, align 1
  %3628 = lshr i64 %3606, 63
  %3629 = trunc i64 %3628 to i8
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3629, i8* %3630, align 1
  %3631 = lshr i64 %3602, 63
  %3632 = lshr i64 %3603, 63
  %3633 = xor i64 %3628, %3631
  %3634 = xor i64 %3628, %3632
  %3635 = add i64 %3633, %3634
  %3636 = icmp eq i64 %3635, 2
  %3637 = zext i1 %3636 to i8
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3637, i8* %3638, align 1
  store %struct.Memory* %loadMem_45f7b5, %struct.Memory** %MEMORY
  %loadMem_45f7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3640 = getelementptr inbounds %struct.GPR, %struct.GPR* %3639, i32 0, i32 33
  %3641 = getelementptr inbounds %struct.Reg, %struct.Reg* %3640, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %3641 to i64*
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3643 = getelementptr inbounds %struct.GPR, %struct.GPR* %3642, i32 0, i32 9
  %3644 = getelementptr inbounds %struct.Reg, %struct.Reg* %3643, i32 0, i32 0
  %ESI.i1342 = bitcast %union.anon* %3644 to i32*
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3646 = getelementptr inbounds %struct.GPR, %struct.GPR* %3645, i32 0, i32 11
  %3647 = getelementptr inbounds %struct.Reg, %struct.Reg* %3646, i32 0, i32 0
  %RDI.i1343 = bitcast %union.anon* %3647 to i64*
  %3648 = load i64, i64* %RDI.i1343
  %3649 = add i64 %3648, 28
  %3650 = load i32, i32* %ESI.i1342
  %3651 = zext i32 %3650 to i64
  %3652 = load i64, i64* %PC.i1341
  %3653 = add i64 %3652, 3
  store i64 %3653, i64* %PC.i1341
  %3654 = inttoptr i64 %3649 to i32*
  store i32 %3650, i32* %3654
  store %struct.Memory* %loadMem_45f7b8, %struct.Memory** %MEMORY
  %loadMem_45f7bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 33
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %3657 to i64*
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3659 = getelementptr inbounds %struct.GPR, %struct.GPR* %3658, i32 0, i32 7
  %3660 = getelementptr inbounds %struct.Reg, %struct.Reg* %3659, i32 0, i32 0
  %RDX.i1339 = bitcast %union.anon* %3660 to i64*
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3662 = getelementptr inbounds %struct.GPR, %struct.GPR* %3661, i32 0, i32 15
  %3663 = getelementptr inbounds %struct.Reg, %struct.Reg* %3662, i32 0, i32 0
  %RBP.i1340 = bitcast %union.anon* %3663 to i64*
  %3664 = load i64, i64* %RBP.i1340
  %3665 = sub i64 %3664, 20
  %3666 = load i64, i64* %PC.i1338
  %3667 = add i64 %3666, 4
  store i64 %3667, i64* %PC.i1338
  %3668 = inttoptr i64 %3665 to i32*
  %3669 = load i32, i32* %3668
  %3670 = sext i32 %3669 to i64
  store i64 %3670, i64* %RDX.i1339, align 8
  store %struct.Memory* %loadMem_45f7bb, %struct.Memory** %MEMORY
  %loadMem_45f7bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3672 = getelementptr inbounds %struct.GPR, %struct.GPR* %3671, i32 0, i32 33
  %3673 = getelementptr inbounds %struct.Reg, %struct.Reg* %3672, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %3673 to i64*
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 7
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %RDX.i1337 = bitcast %union.anon* %3676 to i64*
  %3677 = load i64, i64* %RDX.i1337
  %3678 = load i64, i64* %PC.i1336
  %3679 = add i64 %3678, 4
  store i64 %3679, i64* %PC.i1336
  %3680 = shl i64 %3677, 4
  %3681 = icmp slt i64 %3680, 0
  %3682 = shl i64 %3680, 1
  store i64 %3682, i64* %RDX.i1337, align 8
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3684 = zext i1 %3681 to i8
  store i8 %3684, i8* %3683, align 1
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3686 = trunc i64 %3682 to i32
  %3687 = and i32 %3686, 254
  %3688 = call i32 @llvm.ctpop.i32(i32 %3687)
  %3689 = trunc i32 %3688 to i8
  %3690 = and i8 %3689, 1
  %3691 = xor i8 %3690, 1
  store i8 %3691, i8* %3685, align 1
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3692, align 1
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3694 = icmp eq i64 %3682, 0
  %3695 = zext i1 %3694 to i8
  store i8 %3695, i8* %3693, align 1
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3697 = lshr i64 %3682, 63
  %3698 = trunc i64 %3697 to i8
  store i8 %3698, i8* %3696, align 1
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3699, align 1
  store %struct.Memory* %loadMem_45f7bf, %struct.Memory** %MEMORY
  %loadMem_45f7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3701 = getelementptr inbounds %struct.GPR, %struct.GPR* %3700, i32 0, i32 33
  %3702 = getelementptr inbounds %struct.Reg, %struct.Reg* %3701, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %3702 to i64*
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3704 = getelementptr inbounds %struct.GPR, %struct.GPR* %3703, i32 0, i32 1
  %3705 = getelementptr inbounds %struct.Reg, %struct.Reg* %3704, i32 0, i32 0
  %RAX.i1334 = bitcast %union.anon* %3705 to i64*
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 11
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %RDI.i1335 = bitcast %union.anon* %3708 to i64*
  %3709 = load i64, i64* %RAX.i1334
  %3710 = load i64, i64* %PC.i1333
  %3711 = add i64 %3710, 3
  store i64 %3711, i64* %PC.i1333
  store i64 %3709, i64* %RDI.i1335, align 8
  store %struct.Memory* %loadMem_45f7c3, %struct.Memory** %MEMORY
  %loadMem_45f7c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3713 = getelementptr inbounds %struct.GPR, %struct.GPR* %3712, i32 0, i32 33
  %3714 = getelementptr inbounds %struct.Reg, %struct.Reg* %3713, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %3714 to i64*
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3716 = getelementptr inbounds %struct.GPR, %struct.GPR* %3715, i32 0, i32 7
  %3717 = getelementptr inbounds %struct.Reg, %struct.Reg* %3716, i32 0, i32 0
  %RDX.i1331 = bitcast %union.anon* %3717 to i64*
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3719 = getelementptr inbounds %struct.GPR, %struct.GPR* %3718, i32 0, i32 11
  %3720 = getelementptr inbounds %struct.Reg, %struct.Reg* %3719, i32 0, i32 0
  %RDI.i1332 = bitcast %union.anon* %3720 to i64*
  %3721 = load i64, i64* %RDI.i1332
  %3722 = load i64, i64* %RDX.i1331
  %3723 = load i64, i64* %PC.i1330
  %3724 = add i64 %3723, 3
  store i64 %3724, i64* %PC.i1330
  %3725 = add i64 %3722, %3721
  store i64 %3725, i64* %RDI.i1332, align 8
  %3726 = icmp ult i64 %3725, %3721
  %3727 = icmp ult i64 %3725, %3722
  %3728 = or i1 %3726, %3727
  %3729 = zext i1 %3728 to i8
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3729, i8* %3730, align 1
  %3731 = trunc i64 %3725 to i32
  %3732 = and i32 %3731, 255
  %3733 = call i32 @llvm.ctpop.i32(i32 %3732)
  %3734 = trunc i32 %3733 to i8
  %3735 = and i8 %3734, 1
  %3736 = xor i8 %3735, 1
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3736, i8* %3737, align 1
  %3738 = xor i64 %3722, %3721
  %3739 = xor i64 %3738, %3725
  %3740 = lshr i64 %3739, 4
  %3741 = trunc i64 %3740 to i8
  %3742 = and i8 %3741, 1
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3742, i8* %3743, align 1
  %3744 = icmp eq i64 %3725, 0
  %3745 = zext i1 %3744 to i8
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3745, i8* %3746, align 1
  %3747 = lshr i64 %3725, 63
  %3748 = trunc i64 %3747 to i8
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3748, i8* %3749, align 1
  %3750 = lshr i64 %3721, 63
  %3751 = lshr i64 %3722, 63
  %3752 = xor i64 %3747, %3750
  %3753 = xor i64 %3747, %3751
  %3754 = add i64 %3752, %3753
  %3755 = icmp eq i64 %3754, 2
  %3756 = zext i1 %3755 to i8
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3756, i8* %3757, align 1
  store %struct.Memory* %loadMem_45f7c6, %struct.Memory** %MEMORY
  %loadMem_45f7c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3759 = getelementptr inbounds %struct.GPR, %struct.GPR* %3758, i32 0, i32 33
  %3760 = getelementptr inbounds %struct.Reg, %struct.Reg* %3759, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %3760 to i64*
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3762 = getelementptr inbounds %struct.GPR, %struct.GPR* %3761, i32 0, i32 9
  %3763 = getelementptr inbounds %struct.Reg, %struct.Reg* %3762, i32 0, i32 0
  %RSI.i1328 = bitcast %union.anon* %3763 to i64*
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3765 = getelementptr inbounds %struct.GPR, %struct.GPR* %3764, i32 0, i32 11
  %3766 = getelementptr inbounds %struct.Reg, %struct.Reg* %3765, i32 0, i32 0
  %RDI.i1329 = bitcast %union.anon* %3766 to i64*
  %3767 = load i64, i64* %RDI.i1329
  %3768 = load i64, i64* %PC.i1327
  %3769 = add i64 %3768, 2
  store i64 %3769, i64* %PC.i1327
  %3770 = inttoptr i64 %3767 to i32*
  %3771 = load i32, i32* %3770
  %3772 = zext i32 %3771 to i64
  store i64 %3772, i64* %RSI.i1328, align 8
  store %struct.Memory* %loadMem_45f7c9, %struct.Memory** %MEMORY
  %loadMem_45f7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3774 = getelementptr inbounds %struct.GPR, %struct.GPR* %3773, i32 0, i32 33
  %3775 = getelementptr inbounds %struct.Reg, %struct.Reg* %3774, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %3775 to i64*
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3777 = getelementptr inbounds %struct.GPR, %struct.GPR* %3776, i32 0, i32 7
  %3778 = getelementptr inbounds %struct.Reg, %struct.Reg* %3777, i32 0, i32 0
  %RDX.i1325 = bitcast %union.anon* %3778 to i64*
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3780 = getelementptr inbounds %struct.GPR, %struct.GPR* %3779, i32 0, i32 15
  %3781 = getelementptr inbounds %struct.Reg, %struct.Reg* %3780, i32 0, i32 0
  %RBP.i1326 = bitcast %union.anon* %3781 to i64*
  %3782 = load i64, i64* %RBP.i1326
  %3783 = sub i64 %3782, 20
  %3784 = load i64, i64* %PC.i1324
  %3785 = add i64 %3784, 4
  store i64 %3785, i64* %PC.i1324
  %3786 = inttoptr i64 %3783 to i32*
  %3787 = load i32, i32* %3786
  %3788 = sext i32 %3787 to i64
  store i64 %3788, i64* %RDX.i1325, align 8
  store %struct.Memory* %loadMem_45f7cb, %struct.Memory** %MEMORY
  %loadMem_45f7cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3790 = getelementptr inbounds %struct.GPR, %struct.GPR* %3789, i32 0, i32 33
  %3791 = getelementptr inbounds %struct.Reg, %struct.Reg* %3790, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %3791 to i64*
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3793 = getelementptr inbounds %struct.GPR, %struct.GPR* %3792, i32 0, i32 7
  %3794 = getelementptr inbounds %struct.Reg, %struct.Reg* %3793, i32 0, i32 0
  %RDX.i1323 = bitcast %union.anon* %3794 to i64*
  %3795 = load i64, i64* %RDX.i1323
  %3796 = load i64, i64* %PC.i1322
  %3797 = add i64 %3796, 4
  store i64 %3797, i64* %PC.i1322
  %3798 = shl i64 %3795, 4
  %3799 = icmp slt i64 %3798, 0
  %3800 = shl i64 %3798, 1
  store i64 %3800, i64* %RDX.i1323, align 8
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3802 = zext i1 %3799 to i8
  store i8 %3802, i8* %3801, align 1
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3804 = trunc i64 %3800 to i32
  %3805 = and i32 %3804, 254
  %3806 = call i32 @llvm.ctpop.i32(i32 %3805)
  %3807 = trunc i32 %3806 to i8
  %3808 = and i8 %3807, 1
  %3809 = xor i8 %3808, 1
  store i8 %3809, i8* %3803, align 1
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3810, align 1
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3812 = icmp eq i64 %3800, 0
  %3813 = zext i1 %3812 to i8
  store i8 %3813, i8* %3811, align 1
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3815 = lshr i64 %3800, 63
  %3816 = trunc i64 %3815 to i8
  store i8 %3816, i8* %3814, align 1
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3817, align 1
  store %struct.Memory* %loadMem_45f7cf, %struct.Memory** %MEMORY
  %loadMem_45f7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3819 = getelementptr inbounds %struct.GPR, %struct.GPR* %3818, i32 0, i32 33
  %3820 = getelementptr inbounds %struct.Reg, %struct.Reg* %3819, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %3820 to i64*
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3822 = getelementptr inbounds %struct.GPR, %struct.GPR* %3821, i32 0, i32 1
  %3823 = getelementptr inbounds %struct.Reg, %struct.Reg* %3822, i32 0, i32 0
  %RAX.i1320 = bitcast %union.anon* %3823 to i64*
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3825 = getelementptr inbounds %struct.GPR, %struct.GPR* %3824, i32 0, i32 11
  %3826 = getelementptr inbounds %struct.Reg, %struct.Reg* %3825, i32 0, i32 0
  %RDI.i1321 = bitcast %union.anon* %3826 to i64*
  %3827 = load i64, i64* %RAX.i1320
  %3828 = load i64, i64* %PC.i1319
  %3829 = add i64 %3828, 3
  store i64 %3829, i64* %PC.i1319
  store i64 %3827, i64* %RDI.i1321, align 8
  store %struct.Memory* %loadMem_45f7d3, %struct.Memory** %MEMORY
  %loadMem_45f7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 33
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %3832 to i64*
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 7
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %RDX.i1317 = bitcast %union.anon* %3835 to i64*
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 11
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %RDI.i1318 = bitcast %union.anon* %3838 to i64*
  %3839 = load i64, i64* %RDI.i1318
  %3840 = load i64, i64* %RDX.i1317
  %3841 = load i64, i64* %PC.i1316
  %3842 = add i64 %3841, 3
  store i64 %3842, i64* %PC.i1316
  %3843 = add i64 %3840, %3839
  store i64 %3843, i64* %RDI.i1318, align 8
  %3844 = icmp ult i64 %3843, %3839
  %3845 = icmp ult i64 %3843, %3840
  %3846 = or i1 %3844, %3845
  %3847 = zext i1 %3846 to i8
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3847, i8* %3848, align 1
  %3849 = trunc i64 %3843 to i32
  %3850 = and i32 %3849, 255
  %3851 = call i32 @llvm.ctpop.i32(i32 %3850)
  %3852 = trunc i32 %3851 to i8
  %3853 = and i8 %3852, 1
  %3854 = xor i8 %3853, 1
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3854, i8* %3855, align 1
  %3856 = xor i64 %3840, %3839
  %3857 = xor i64 %3856, %3843
  %3858 = lshr i64 %3857, 4
  %3859 = trunc i64 %3858 to i8
  %3860 = and i8 %3859, 1
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3860, i8* %3861, align 1
  %3862 = icmp eq i64 %3843, 0
  %3863 = zext i1 %3862 to i8
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3863, i8* %3864, align 1
  %3865 = lshr i64 %3843, 63
  %3866 = trunc i64 %3865 to i8
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3866, i8* %3867, align 1
  %3868 = lshr i64 %3839, 63
  %3869 = lshr i64 %3840, 63
  %3870 = xor i64 %3865, %3868
  %3871 = xor i64 %3865, %3869
  %3872 = add i64 %3870, %3871
  %3873 = icmp eq i64 %3872, 2
  %3874 = zext i1 %3873 to i8
  %3875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3874, i8* %3875, align 1
  store %struct.Memory* %loadMem_45f7d6, %struct.Memory** %MEMORY
  %loadMem_45f7d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3877 = getelementptr inbounds %struct.GPR, %struct.GPR* %3876, i32 0, i32 33
  %3878 = getelementptr inbounds %struct.Reg, %struct.Reg* %3877, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %3878 to i64*
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3880 = getelementptr inbounds %struct.GPR, %struct.GPR* %3879, i32 0, i32 9
  %3881 = getelementptr inbounds %struct.Reg, %struct.Reg* %3880, i32 0, i32 0
  %RSI.i1314 = bitcast %union.anon* %3881 to i64*
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3883 = getelementptr inbounds %struct.GPR, %struct.GPR* %3882, i32 0, i32 11
  %3884 = getelementptr inbounds %struct.Reg, %struct.Reg* %3883, i32 0, i32 0
  %RDI.i1315 = bitcast %union.anon* %3884 to i64*
  %3885 = load i64, i64* %RSI.i1314
  %3886 = load i64, i64* %RDI.i1315
  %3887 = add i64 %3886, 8
  %3888 = load i64, i64* %PC.i1313
  %3889 = add i64 %3888, 3
  store i64 %3889, i64* %PC.i1313
  %3890 = trunc i64 %3885 to i32
  %3891 = inttoptr i64 %3887 to i32*
  %3892 = load i32, i32* %3891
  %3893 = add i32 %3892, %3890
  %3894 = zext i32 %3893 to i64
  store i64 %3894, i64* %RSI.i1314, align 8
  %3895 = icmp ult i32 %3893, %3890
  %3896 = icmp ult i32 %3893, %3892
  %3897 = or i1 %3895, %3896
  %3898 = zext i1 %3897 to i8
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3898, i8* %3899, align 1
  %3900 = and i32 %3893, 255
  %3901 = call i32 @llvm.ctpop.i32(i32 %3900)
  %3902 = trunc i32 %3901 to i8
  %3903 = and i8 %3902, 1
  %3904 = xor i8 %3903, 1
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3904, i8* %3905, align 1
  %3906 = xor i32 %3892, %3890
  %3907 = xor i32 %3906, %3893
  %3908 = lshr i32 %3907, 4
  %3909 = trunc i32 %3908 to i8
  %3910 = and i8 %3909, 1
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3910, i8* %3911, align 1
  %3912 = icmp eq i32 %3893, 0
  %3913 = zext i1 %3912 to i8
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3913, i8* %3914, align 1
  %3915 = lshr i32 %3893, 31
  %3916 = trunc i32 %3915 to i8
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3916, i8* %3917, align 1
  %3918 = lshr i32 %3890, 31
  %3919 = lshr i32 %3892, 31
  %3920 = xor i32 %3915, %3918
  %3921 = xor i32 %3915, %3919
  %3922 = add i32 %3920, %3921
  %3923 = icmp eq i32 %3922, 2
  %3924 = zext i1 %3923 to i8
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3924, i8* %3925, align 1
  store %struct.Memory* %loadMem_45f7d9, %struct.Memory** %MEMORY
  %loadMem_45f7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3927 = getelementptr inbounds %struct.GPR, %struct.GPR* %3926, i32 0, i32 33
  %3928 = getelementptr inbounds %struct.Reg, %struct.Reg* %3927, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %3928 to i64*
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3930 = getelementptr inbounds %struct.GPR, %struct.GPR* %3929, i32 0, i32 7
  %3931 = getelementptr inbounds %struct.Reg, %struct.Reg* %3930, i32 0, i32 0
  %RDX.i1311 = bitcast %union.anon* %3931 to i64*
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3933 = getelementptr inbounds %struct.GPR, %struct.GPR* %3932, i32 0, i32 15
  %3934 = getelementptr inbounds %struct.Reg, %struct.Reg* %3933, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %3934 to i64*
  %3935 = load i64, i64* %RBP.i1312
  %3936 = sub i64 %3935, 20
  %3937 = load i64, i64* %PC.i1310
  %3938 = add i64 %3937, 4
  store i64 %3938, i64* %PC.i1310
  %3939 = inttoptr i64 %3936 to i32*
  %3940 = load i32, i32* %3939
  %3941 = sext i32 %3940 to i64
  store i64 %3941, i64* %RDX.i1311, align 8
  store %struct.Memory* %loadMem_45f7dc, %struct.Memory** %MEMORY
  %loadMem_45f7e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3943 = getelementptr inbounds %struct.GPR, %struct.GPR* %3942, i32 0, i32 33
  %3944 = getelementptr inbounds %struct.Reg, %struct.Reg* %3943, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %3944 to i64*
  %3945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3946 = getelementptr inbounds %struct.GPR, %struct.GPR* %3945, i32 0, i32 7
  %3947 = getelementptr inbounds %struct.Reg, %struct.Reg* %3946, i32 0, i32 0
  %RDX.i1309 = bitcast %union.anon* %3947 to i64*
  %3948 = load i64, i64* %RDX.i1309
  %3949 = load i64, i64* %PC.i1308
  %3950 = add i64 %3949, 4
  store i64 %3950, i64* %PC.i1308
  %3951 = shl i64 %3948, 4
  %3952 = icmp slt i64 %3951, 0
  %3953 = shl i64 %3951, 1
  store i64 %3953, i64* %RDX.i1309, align 8
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3955 = zext i1 %3952 to i8
  store i8 %3955, i8* %3954, align 1
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3957 = trunc i64 %3953 to i32
  %3958 = and i32 %3957, 254
  %3959 = call i32 @llvm.ctpop.i32(i32 %3958)
  %3960 = trunc i32 %3959 to i8
  %3961 = and i8 %3960, 1
  %3962 = xor i8 %3961, 1
  store i8 %3962, i8* %3956, align 1
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3963, align 1
  %3964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3965 = icmp eq i64 %3953, 0
  %3966 = zext i1 %3965 to i8
  store i8 %3966, i8* %3964, align 1
  %3967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3968 = lshr i64 %3953, 63
  %3969 = trunc i64 %3968 to i8
  store i8 %3969, i8* %3967, align 1
  %3970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3970, align 1
  store %struct.Memory* %loadMem_45f7e0, %struct.Memory** %MEMORY
  %loadMem_45f7e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3972 = getelementptr inbounds %struct.GPR, %struct.GPR* %3971, i32 0, i32 33
  %3973 = getelementptr inbounds %struct.Reg, %struct.Reg* %3972, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %3973 to i64*
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3975 = getelementptr inbounds %struct.GPR, %struct.GPR* %3974, i32 0, i32 5
  %3976 = getelementptr inbounds %struct.Reg, %struct.Reg* %3975, i32 0, i32 0
  %RCX.i1306 = bitcast %union.anon* %3976 to i64*
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3978 = getelementptr inbounds %struct.GPR, %struct.GPR* %3977, i32 0, i32 11
  %3979 = getelementptr inbounds %struct.Reg, %struct.Reg* %3978, i32 0, i32 0
  %RDI.i1307 = bitcast %union.anon* %3979 to i64*
  %3980 = load i64, i64* %RCX.i1306
  %3981 = load i64, i64* %PC.i1305
  %3982 = add i64 %3981, 3
  store i64 %3982, i64* %PC.i1305
  store i64 %3980, i64* %RDI.i1307, align 8
  store %struct.Memory* %loadMem_45f7e4, %struct.Memory** %MEMORY
  %loadMem_45f7e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3984 = getelementptr inbounds %struct.GPR, %struct.GPR* %3983, i32 0, i32 33
  %3985 = getelementptr inbounds %struct.Reg, %struct.Reg* %3984, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %3985 to i64*
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3987 = getelementptr inbounds %struct.GPR, %struct.GPR* %3986, i32 0, i32 7
  %3988 = getelementptr inbounds %struct.Reg, %struct.Reg* %3987, i32 0, i32 0
  %RDX.i1303 = bitcast %union.anon* %3988 to i64*
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3990 = getelementptr inbounds %struct.GPR, %struct.GPR* %3989, i32 0, i32 11
  %3991 = getelementptr inbounds %struct.Reg, %struct.Reg* %3990, i32 0, i32 0
  %RDI.i1304 = bitcast %union.anon* %3991 to i64*
  %3992 = load i64, i64* %RDI.i1304
  %3993 = load i64, i64* %RDX.i1303
  %3994 = load i64, i64* %PC.i1302
  %3995 = add i64 %3994, 3
  store i64 %3995, i64* %PC.i1302
  %3996 = add i64 %3993, %3992
  store i64 %3996, i64* %RDI.i1304, align 8
  %3997 = icmp ult i64 %3996, %3992
  %3998 = icmp ult i64 %3996, %3993
  %3999 = or i1 %3997, %3998
  %4000 = zext i1 %3999 to i8
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4000, i8* %4001, align 1
  %4002 = trunc i64 %3996 to i32
  %4003 = and i32 %4002, 255
  %4004 = call i32 @llvm.ctpop.i32(i32 %4003)
  %4005 = trunc i32 %4004 to i8
  %4006 = and i8 %4005, 1
  %4007 = xor i8 %4006, 1
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4007, i8* %4008, align 1
  %4009 = xor i64 %3993, %3992
  %4010 = xor i64 %4009, %3996
  %4011 = lshr i64 %4010, 4
  %4012 = trunc i64 %4011 to i8
  %4013 = and i8 %4012, 1
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4013, i8* %4014, align 1
  %4015 = icmp eq i64 %3996, 0
  %4016 = zext i1 %4015 to i8
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4016, i8* %4017, align 1
  %4018 = lshr i64 %3996, 63
  %4019 = trunc i64 %4018 to i8
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4019, i8* %4020, align 1
  %4021 = lshr i64 %3992, 63
  %4022 = lshr i64 %3993, 63
  %4023 = xor i64 %4018, %4021
  %4024 = xor i64 %4018, %4022
  %4025 = add i64 %4023, %4024
  %4026 = icmp eq i64 %4025, 2
  %4027 = zext i1 %4026 to i8
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4027, i8* %4028, align 1
  store %struct.Memory* %loadMem_45f7e7, %struct.Memory** %MEMORY
  %loadMem_45f7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4030 = getelementptr inbounds %struct.GPR, %struct.GPR* %4029, i32 0, i32 33
  %4031 = getelementptr inbounds %struct.Reg, %struct.Reg* %4030, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %4031 to i64*
  %4032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4033 = getelementptr inbounds %struct.GPR, %struct.GPR* %4032, i32 0, i32 9
  %4034 = getelementptr inbounds %struct.Reg, %struct.Reg* %4033, i32 0, i32 0
  %ESI.i1300 = bitcast %union.anon* %4034 to i32*
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4036 = getelementptr inbounds %struct.GPR, %struct.GPR* %4035, i32 0, i32 11
  %4037 = getelementptr inbounds %struct.Reg, %struct.Reg* %4036, i32 0, i32 0
  %RDI.i1301 = bitcast %union.anon* %4037 to i64*
  %4038 = load i64, i64* %RDI.i1301
  %4039 = load i32, i32* %ESI.i1300
  %4040 = zext i32 %4039 to i64
  %4041 = load i64, i64* %PC.i1299
  %4042 = add i64 %4041, 2
  store i64 %4042, i64* %PC.i1299
  %4043 = inttoptr i64 %4038 to i32*
  store i32 %4039, i32* %4043
  store %struct.Memory* %loadMem_45f7ea, %struct.Memory** %MEMORY
  %loadMem_45f7ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4045 = getelementptr inbounds %struct.GPR, %struct.GPR* %4044, i32 0, i32 33
  %4046 = getelementptr inbounds %struct.Reg, %struct.Reg* %4045, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %4046 to i64*
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4048 = getelementptr inbounds %struct.GPR, %struct.GPR* %4047, i32 0, i32 7
  %4049 = getelementptr inbounds %struct.Reg, %struct.Reg* %4048, i32 0, i32 0
  %RDX.i1297 = bitcast %union.anon* %4049 to i64*
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 15
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %RBP.i1298 = bitcast %union.anon* %4052 to i64*
  %4053 = load i64, i64* %RBP.i1298
  %4054 = sub i64 %4053, 20
  %4055 = load i64, i64* %PC.i1296
  %4056 = add i64 %4055, 4
  store i64 %4056, i64* %PC.i1296
  %4057 = inttoptr i64 %4054 to i32*
  %4058 = load i32, i32* %4057
  %4059 = sext i32 %4058 to i64
  store i64 %4059, i64* %RDX.i1297, align 8
  store %struct.Memory* %loadMem_45f7ec, %struct.Memory** %MEMORY
  %loadMem_45f7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 33
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %4062 to i64*
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4064 = getelementptr inbounds %struct.GPR, %struct.GPR* %4063, i32 0, i32 7
  %4065 = getelementptr inbounds %struct.Reg, %struct.Reg* %4064, i32 0, i32 0
  %RDX.i1295 = bitcast %union.anon* %4065 to i64*
  %4066 = load i64, i64* %RDX.i1295
  %4067 = load i64, i64* %PC.i1294
  %4068 = add i64 %4067, 4
  store i64 %4068, i64* %PC.i1294
  %4069 = shl i64 %4066, 4
  %4070 = icmp slt i64 %4069, 0
  %4071 = shl i64 %4069, 1
  store i64 %4071, i64* %RDX.i1295, align 8
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4073 = zext i1 %4070 to i8
  store i8 %4073, i8* %4072, align 1
  %4074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4075 = trunc i64 %4071 to i32
  %4076 = and i32 %4075, 254
  %4077 = call i32 @llvm.ctpop.i32(i32 %4076)
  %4078 = trunc i32 %4077 to i8
  %4079 = and i8 %4078, 1
  %4080 = xor i8 %4079, 1
  store i8 %4080, i8* %4074, align 1
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4081, align 1
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4083 = icmp eq i64 %4071, 0
  %4084 = zext i1 %4083 to i8
  store i8 %4084, i8* %4082, align 1
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4086 = lshr i64 %4071, 63
  %4087 = trunc i64 %4086 to i8
  store i8 %4087, i8* %4085, align 1
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4088, align 1
  store %struct.Memory* %loadMem_45f7f0, %struct.Memory** %MEMORY
  %loadMem_45f7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4090 = getelementptr inbounds %struct.GPR, %struct.GPR* %4089, i32 0, i32 33
  %4091 = getelementptr inbounds %struct.Reg, %struct.Reg* %4090, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %4091 to i64*
  %4092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4093 = getelementptr inbounds %struct.GPR, %struct.GPR* %4092, i32 0, i32 1
  %4094 = getelementptr inbounds %struct.Reg, %struct.Reg* %4093, i32 0, i32 0
  %RAX.i1292 = bitcast %union.anon* %4094 to i64*
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4096 = getelementptr inbounds %struct.GPR, %struct.GPR* %4095, i32 0, i32 11
  %4097 = getelementptr inbounds %struct.Reg, %struct.Reg* %4096, i32 0, i32 0
  %RDI.i1293 = bitcast %union.anon* %4097 to i64*
  %4098 = load i64, i64* %RAX.i1292
  %4099 = load i64, i64* %PC.i1291
  %4100 = add i64 %4099, 3
  store i64 %4100, i64* %PC.i1291
  store i64 %4098, i64* %RDI.i1293, align 8
  store %struct.Memory* %loadMem_45f7f4, %struct.Memory** %MEMORY
  %loadMem_45f7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4102 = getelementptr inbounds %struct.GPR, %struct.GPR* %4101, i32 0, i32 33
  %4103 = getelementptr inbounds %struct.Reg, %struct.Reg* %4102, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %4103 to i64*
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 7
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %RDX.i1289 = bitcast %union.anon* %4106 to i64*
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4108 = getelementptr inbounds %struct.GPR, %struct.GPR* %4107, i32 0, i32 11
  %4109 = getelementptr inbounds %struct.Reg, %struct.Reg* %4108, i32 0, i32 0
  %RDI.i1290 = bitcast %union.anon* %4109 to i64*
  %4110 = load i64, i64* %RDI.i1290
  %4111 = load i64, i64* %RDX.i1289
  %4112 = load i64, i64* %PC.i1288
  %4113 = add i64 %4112, 3
  store i64 %4113, i64* %PC.i1288
  %4114 = add i64 %4111, %4110
  store i64 %4114, i64* %RDI.i1290, align 8
  %4115 = icmp ult i64 %4114, %4110
  %4116 = icmp ult i64 %4114, %4111
  %4117 = or i1 %4115, %4116
  %4118 = zext i1 %4117 to i8
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4118, i8* %4119, align 1
  %4120 = trunc i64 %4114 to i32
  %4121 = and i32 %4120, 255
  %4122 = call i32 @llvm.ctpop.i32(i32 %4121)
  %4123 = trunc i32 %4122 to i8
  %4124 = and i8 %4123, 1
  %4125 = xor i8 %4124, 1
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4125, i8* %4126, align 1
  %4127 = xor i64 %4111, %4110
  %4128 = xor i64 %4127, %4114
  %4129 = lshr i64 %4128, 4
  %4130 = trunc i64 %4129 to i8
  %4131 = and i8 %4130, 1
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4131, i8* %4132, align 1
  %4133 = icmp eq i64 %4114, 0
  %4134 = zext i1 %4133 to i8
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4134, i8* %4135, align 1
  %4136 = lshr i64 %4114, 63
  %4137 = trunc i64 %4136 to i8
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4137, i8* %4138, align 1
  %4139 = lshr i64 %4110, 63
  %4140 = lshr i64 %4111, 63
  %4141 = xor i64 %4136, %4139
  %4142 = xor i64 %4136, %4140
  %4143 = add i64 %4141, %4142
  %4144 = icmp eq i64 %4143, 2
  %4145 = zext i1 %4144 to i8
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4145, i8* %4146, align 1
  store %struct.Memory* %loadMem_45f7f7, %struct.Memory** %MEMORY
  %loadMem_45f7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4148 = getelementptr inbounds %struct.GPR, %struct.GPR* %4147, i32 0, i32 33
  %4149 = getelementptr inbounds %struct.Reg, %struct.Reg* %4148, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %4149 to i64*
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 9
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %RSI.i1286 = bitcast %union.anon* %4152 to i64*
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4154 = getelementptr inbounds %struct.GPR, %struct.GPR* %4153, i32 0, i32 11
  %4155 = getelementptr inbounds %struct.Reg, %struct.Reg* %4154, i32 0, i32 0
  %RDI.i1287 = bitcast %union.anon* %4155 to i64*
  %4156 = load i64, i64* %RDI.i1287
  %4157 = add i64 %4156, 4
  %4158 = load i64, i64* %PC.i1285
  %4159 = add i64 %4158, 3
  store i64 %4159, i64* %PC.i1285
  %4160 = inttoptr i64 %4157 to i32*
  %4161 = load i32, i32* %4160
  %4162 = zext i32 %4161 to i64
  store i64 %4162, i64* %RSI.i1286, align 8
  store %struct.Memory* %loadMem_45f7fa, %struct.Memory** %MEMORY
  %loadMem_45f7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 33
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %4165 to i64*
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4167 = getelementptr inbounds %struct.GPR, %struct.GPR* %4166, i32 0, i32 7
  %4168 = getelementptr inbounds %struct.Reg, %struct.Reg* %4167, i32 0, i32 0
  %RDX.i1283 = bitcast %union.anon* %4168 to i64*
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4170 = getelementptr inbounds %struct.GPR, %struct.GPR* %4169, i32 0, i32 15
  %4171 = getelementptr inbounds %struct.Reg, %struct.Reg* %4170, i32 0, i32 0
  %RBP.i1284 = bitcast %union.anon* %4171 to i64*
  %4172 = load i64, i64* %RBP.i1284
  %4173 = sub i64 %4172, 20
  %4174 = load i64, i64* %PC.i1282
  %4175 = add i64 %4174, 4
  store i64 %4175, i64* %PC.i1282
  %4176 = inttoptr i64 %4173 to i32*
  %4177 = load i32, i32* %4176
  %4178 = sext i32 %4177 to i64
  store i64 %4178, i64* %RDX.i1283, align 8
  store %struct.Memory* %loadMem_45f7fd, %struct.Memory** %MEMORY
  %loadMem_45f801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 33
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %4181 to i64*
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 7
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %RDX.i1281 = bitcast %union.anon* %4184 to i64*
  %4185 = load i64, i64* %RDX.i1281
  %4186 = load i64, i64* %PC.i1280
  %4187 = add i64 %4186, 4
  store i64 %4187, i64* %PC.i1280
  %4188 = shl i64 %4185, 4
  %4189 = icmp slt i64 %4188, 0
  %4190 = shl i64 %4188, 1
  store i64 %4190, i64* %RDX.i1281, align 8
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4192 = zext i1 %4189 to i8
  store i8 %4192, i8* %4191, align 1
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4194 = trunc i64 %4190 to i32
  %4195 = and i32 %4194, 254
  %4196 = call i32 @llvm.ctpop.i32(i32 %4195)
  %4197 = trunc i32 %4196 to i8
  %4198 = and i8 %4197, 1
  %4199 = xor i8 %4198, 1
  store i8 %4199, i8* %4193, align 1
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4200, align 1
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4202 = icmp eq i64 %4190, 0
  %4203 = zext i1 %4202 to i8
  store i8 %4203, i8* %4201, align 1
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4205 = lshr i64 %4190, 63
  %4206 = trunc i64 %4205 to i8
  store i8 %4206, i8* %4204, align 1
  %4207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4207, align 1
  store %struct.Memory* %loadMem_45f801, %struct.Memory** %MEMORY
  %loadMem_45f805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 33
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %4210 to i64*
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4212 = getelementptr inbounds %struct.GPR, %struct.GPR* %4211, i32 0, i32 1
  %4213 = getelementptr inbounds %struct.Reg, %struct.Reg* %4212, i32 0, i32 0
  %RAX.i1278 = bitcast %union.anon* %4213 to i64*
  %4214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4215 = getelementptr inbounds %struct.GPR, %struct.GPR* %4214, i32 0, i32 11
  %4216 = getelementptr inbounds %struct.Reg, %struct.Reg* %4215, i32 0, i32 0
  %RDI.i1279 = bitcast %union.anon* %4216 to i64*
  %4217 = load i64, i64* %RAX.i1278
  %4218 = load i64, i64* %PC.i1277
  %4219 = add i64 %4218, 3
  store i64 %4219, i64* %PC.i1277
  store i64 %4217, i64* %RDI.i1279, align 8
  store %struct.Memory* %loadMem_45f805, %struct.Memory** %MEMORY
  %loadMem_45f808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4221 = getelementptr inbounds %struct.GPR, %struct.GPR* %4220, i32 0, i32 33
  %4222 = getelementptr inbounds %struct.Reg, %struct.Reg* %4221, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %4222 to i64*
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 7
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %RDX.i1275 = bitcast %union.anon* %4225 to i64*
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 11
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %RDI.i1276 = bitcast %union.anon* %4228 to i64*
  %4229 = load i64, i64* %RDI.i1276
  %4230 = load i64, i64* %RDX.i1275
  %4231 = load i64, i64* %PC.i1274
  %4232 = add i64 %4231, 3
  store i64 %4232, i64* %PC.i1274
  %4233 = add i64 %4230, %4229
  store i64 %4233, i64* %RDI.i1276, align 8
  %4234 = icmp ult i64 %4233, %4229
  %4235 = icmp ult i64 %4233, %4230
  %4236 = or i1 %4234, %4235
  %4237 = zext i1 %4236 to i8
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4237, i8* %4238, align 1
  %4239 = trunc i64 %4233 to i32
  %4240 = and i32 %4239, 255
  %4241 = call i32 @llvm.ctpop.i32(i32 %4240)
  %4242 = trunc i32 %4241 to i8
  %4243 = and i8 %4242, 1
  %4244 = xor i8 %4243, 1
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4244, i8* %4245, align 1
  %4246 = xor i64 %4230, %4229
  %4247 = xor i64 %4246, %4233
  %4248 = lshr i64 %4247, 4
  %4249 = trunc i64 %4248 to i8
  %4250 = and i8 %4249, 1
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4250, i8* %4251, align 1
  %4252 = icmp eq i64 %4233, 0
  %4253 = zext i1 %4252 to i8
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4253, i8* %4254, align 1
  %4255 = lshr i64 %4233, 63
  %4256 = trunc i64 %4255 to i8
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4256, i8* %4257, align 1
  %4258 = lshr i64 %4229, 63
  %4259 = lshr i64 %4230, 63
  %4260 = xor i64 %4255, %4258
  %4261 = xor i64 %4255, %4259
  %4262 = add i64 %4260, %4261
  %4263 = icmp eq i64 %4262, 2
  %4264 = zext i1 %4263 to i8
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4264, i8* %4265, align 1
  store %struct.Memory* %loadMem_45f808, %struct.Memory** %MEMORY
  %loadMem_45f80b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4267 = getelementptr inbounds %struct.GPR, %struct.GPR* %4266, i32 0, i32 33
  %4268 = getelementptr inbounds %struct.Reg, %struct.Reg* %4267, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %4268 to i64*
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 9
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %RSI.i1272 = bitcast %union.anon* %4271 to i64*
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4273 = getelementptr inbounds %struct.GPR, %struct.GPR* %4272, i32 0, i32 11
  %4274 = getelementptr inbounds %struct.Reg, %struct.Reg* %4273, i32 0, i32 0
  %RDI.i1273 = bitcast %union.anon* %4274 to i64*
  %4275 = load i64, i64* %RSI.i1272
  %4276 = load i64, i64* %RDI.i1273
  %4277 = add i64 %4276, 12
  %4278 = load i64, i64* %PC.i1271
  %4279 = add i64 %4278, 3
  store i64 %4279, i64* %PC.i1271
  %4280 = trunc i64 %4275 to i32
  %4281 = inttoptr i64 %4277 to i32*
  %4282 = load i32, i32* %4281
  %4283 = add i32 %4282, %4280
  %4284 = zext i32 %4283 to i64
  store i64 %4284, i64* %RSI.i1272, align 8
  %4285 = icmp ult i32 %4283, %4280
  %4286 = icmp ult i32 %4283, %4282
  %4287 = or i1 %4285, %4286
  %4288 = zext i1 %4287 to i8
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4288, i8* %4289, align 1
  %4290 = and i32 %4283, 255
  %4291 = call i32 @llvm.ctpop.i32(i32 %4290)
  %4292 = trunc i32 %4291 to i8
  %4293 = and i8 %4292, 1
  %4294 = xor i8 %4293, 1
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4294, i8* %4295, align 1
  %4296 = xor i32 %4282, %4280
  %4297 = xor i32 %4296, %4283
  %4298 = lshr i32 %4297, 4
  %4299 = trunc i32 %4298 to i8
  %4300 = and i8 %4299, 1
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4300, i8* %4301, align 1
  %4302 = icmp eq i32 %4283, 0
  %4303 = zext i1 %4302 to i8
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4303, i8* %4304, align 1
  %4305 = lshr i32 %4283, 31
  %4306 = trunc i32 %4305 to i8
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4306, i8* %4307, align 1
  %4308 = lshr i32 %4280, 31
  %4309 = lshr i32 %4282, 31
  %4310 = xor i32 %4305, %4308
  %4311 = xor i32 %4305, %4309
  %4312 = add i32 %4310, %4311
  %4313 = icmp eq i32 %4312, 2
  %4314 = zext i1 %4313 to i8
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4314, i8* %4315, align 1
  store %struct.Memory* %loadMem_45f80b, %struct.Memory** %MEMORY
  %loadMem_45f80e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4317 = getelementptr inbounds %struct.GPR, %struct.GPR* %4316, i32 0, i32 33
  %4318 = getelementptr inbounds %struct.Reg, %struct.Reg* %4317, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %4318 to i64*
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4320 = getelementptr inbounds %struct.GPR, %struct.GPR* %4319, i32 0, i32 7
  %4321 = getelementptr inbounds %struct.Reg, %struct.Reg* %4320, i32 0, i32 0
  %RDX.i1269 = bitcast %union.anon* %4321 to i64*
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 15
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %RBP.i1270 = bitcast %union.anon* %4324 to i64*
  %4325 = load i64, i64* %RBP.i1270
  %4326 = sub i64 %4325, 20
  %4327 = load i64, i64* %PC.i1268
  %4328 = add i64 %4327, 4
  store i64 %4328, i64* %PC.i1268
  %4329 = inttoptr i64 %4326 to i32*
  %4330 = load i32, i32* %4329
  %4331 = sext i32 %4330 to i64
  store i64 %4331, i64* %RDX.i1269, align 8
  store %struct.Memory* %loadMem_45f80e, %struct.Memory** %MEMORY
  %loadMem_45f812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 33
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %4334 to i64*
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4336 = getelementptr inbounds %struct.GPR, %struct.GPR* %4335, i32 0, i32 7
  %4337 = getelementptr inbounds %struct.Reg, %struct.Reg* %4336, i32 0, i32 0
  %RDX.i1267 = bitcast %union.anon* %4337 to i64*
  %4338 = load i64, i64* %RDX.i1267
  %4339 = load i64, i64* %PC.i1266
  %4340 = add i64 %4339, 4
  store i64 %4340, i64* %PC.i1266
  %4341 = shl i64 %4338, 4
  %4342 = icmp slt i64 %4341, 0
  %4343 = shl i64 %4341, 1
  store i64 %4343, i64* %RDX.i1267, align 8
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4345 = zext i1 %4342 to i8
  store i8 %4345, i8* %4344, align 1
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4347 = trunc i64 %4343 to i32
  %4348 = and i32 %4347, 254
  %4349 = call i32 @llvm.ctpop.i32(i32 %4348)
  %4350 = trunc i32 %4349 to i8
  %4351 = and i8 %4350, 1
  %4352 = xor i8 %4351, 1
  store i8 %4352, i8* %4346, align 1
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4353, align 1
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4355 = icmp eq i64 %4343, 0
  %4356 = zext i1 %4355 to i8
  store i8 %4356, i8* %4354, align 1
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4358 = lshr i64 %4343, 63
  %4359 = trunc i64 %4358 to i8
  store i8 %4359, i8* %4357, align 1
  %4360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4360, align 1
  store %struct.Memory* %loadMem_45f812, %struct.Memory** %MEMORY
  %loadMem_45f816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4362 = getelementptr inbounds %struct.GPR, %struct.GPR* %4361, i32 0, i32 33
  %4363 = getelementptr inbounds %struct.Reg, %struct.Reg* %4362, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %4363 to i64*
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4365 = getelementptr inbounds %struct.GPR, %struct.GPR* %4364, i32 0, i32 5
  %4366 = getelementptr inbounds %struct.Reg, %struct.Reg* %4365, i32 0, i32 0
  %RCX.i1264 = bitcast %union.anon* %4366 to i64*
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4368 = getelementptr inbounds %struct.GPR, %struct.GPR* %4367, i32 0, i32 11
  %4369 = getelementptr inbounds %struct.Reg, %struct.Reg* %4368, i32 0, i32 0
  %RDI.i1265 = bitcast %union.anon* %4369 to i64*
  %4370 = load i64, i64* %RCX.i1264
  %4371 = load i64, i64* %PC.i1263
  %4372 = add i64 %4371, 3
  store i64 %4372, i64* %PC.i1263
  store i64 %4370, i64* %RDI.i1265, align 8
  store %struct.Memory* %loadMem_45f816, %struct.Memory** %MEMORY
  %loadMem_45f819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4374 = getelementptr inbounds %struct.GPR, %struct.GPR* %4373, i32 0, i32 33
  %4375 = getelementptr inbounds %struct.Reg, %struct.Reg* %4374, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %4375 to i64*
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 7
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %RDX.i1261 = bitcast %union.anon* %4378 to i64*
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4380 = getelementptr inbounds %struct.GPR, %struct.GPR* %4379, i32 0, i32 11
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %RDI.i1262 = bitcast %union.anon* %4381 to i64*
  %4382 = load i64, i64* %RDI.i1262
  %4383 = load i64, i64* %RDX.i1261
  %4384 = load i64, i64* %PC.i1260
  %4385 = add i64 %4384, 3
  store i64 %4385, i64* %PC.i1260
  %4386 = add i64 %4383, %4382
  store i64 %4386, i64* %RDI.i1262, align 8
  %4387 = icmp ult i64 %4386, %4382
  %4388 = icmp ult i64 %4386, %4383
  %4389 = or i1 %4387, %4388
  %4390 = zext i1 %4389 to i8
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4390, i8* %4391, align 1
  %4392 = trunc i64 %4386 to i32
  %4393 = and i32 %4392, 255
  %4394 = call i32 @llvm.ctpop.i32(i32 %4393)
  %4395 = trunc i32 %4394 to i8
  %4396 = and i8 %4395, 1
  %4397 = xor i8 %4396, 1
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4397, i8* %4398, align 1
  %4399 = xor i64 %4383, %4382
  %4400 = xor i64 %4399, %4386
  %4401 = lshr i64 %4400, 4
  %4402 = trunc i64 %4401 to i8
  %4403 = and i8 %4402, 1
  %4404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4403, i8* %4404, align 1
  %4405 = icmp eq i64 %4386, 0
  %4406 = zext i1 %4405 to i8
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4406, i8* %4407, align 1
  %4408 = lshr i64 %4386, 63
  %4409 = trunc i64 %4408 to i8
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4409, i8* %4410, align 1
  %4411 = lshr i64 %4382, 63
  %4412 = lshr i64 %4383, 63
  %4413 = xor i64 %4408, %4411
  %4414 = xor i64 %4408, %4412
  %4415 = add i64 %4413, %4414
  %4416 = icmp eq i64 %4415, 2
  %4417 = zext i1 %4416 to i8
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4417, i8* %4418, align 1
  store %struct.Memory* %loadMem_45f819, %struct.Memory** %MEMORY
  %loadMem_45f81c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4420 = getelementptr inbounds %struct.GPR, %struct.GPR* %4419, i32 0, i32 33
  %4421 = getelementptr inbounds %struct.Reg, %struct.Reg* %4420, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %4421 to i64*
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4423 = getelementptr inbounds %struct.GPR, %struct.GPR* %4422, i32 0, i32 9
  %4424 = getelementptr inbounds %struct.Reg, %struct.Reg* %4423, i32 0, i32 0
  %ESI.i1258 = bitcast %union.anon* %4424 to i32*
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 11
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %RDI.i1259 = bitcast %union.anon* %4427 to i64*
  %4428 = load i64, i64* %RDI.i1259
  %4429 = add i64 %4428, 4
  %4430 = load i32, i32* %ESI.i1258
  %4431 = zext i32 %4430 to i64
  %4432 = load i64, i64* %PC.i1257
  %4433 = add i64 %4432, 3
  store i64 %4433, i64* %PC.i1257
  %4434 = inttoptr i64 %4429 to i32*
  store i32 %4430, i32* %4434
  store %struct.Memory* %loadMem_45f81c, %struct.Memory** %MEMORY
  %loadMem_45f81f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4436 = getelementptr inbounds %struct.GPR, %struct.GPR* %4435, i32 0, i32 33
  %4437 = getelementptr inbounds %struct.Reg, %struct.Reg* %4436, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %4437 to i64*
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4439 = getelementptr inbounds %struct.GPR, %struct.GPR* %4438, i32 0, i32 7
  %4440 = getelementptr inbounds %struct.Reg, %struct.Reg* %4439, i32 0, i32 0
  %RDX.i1255 = bitcast %union.anon* %4440 to i64*
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4442 = getelementptr inbounds %struct.GPR, %struct.GPR* %4441, i32 0, i32 15
  %4443 = getelementptr inbounds %struct.Reg, %struct.Reg* %4442, i32 0, i32 0
  %RBP.i1256 = bitcast %union.anon* %4443 to i64*
  %4444 = load i64, i64* %RBP.i1256
  %4445 = sub i64 %4444, 20
  %4446 = load i64, i64* %PC.i1254
  %4447 = add i64 %4446, 4
  store i64 %4447, i64* %PC.i1254
  %4448 = inttoptr i64 %4445 to i32*
  %4449 = load i32, i32* %4448
  %4450 = sext i32 %4449 to i64
  store i64 %4450, i64* %RDX.i1255, align 8
  store %struct.Memory* %loadMem_45f81f, %struct.Memory** %MEMORY
  %loadMem_45f823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4452 = getelementptr inbounds %struct.GPR, %struct.GPR* %4451, i32 0, i32 33
  %4453 = getelementptr inbounds %struct.Reg, %struct.Reg* %4452, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %4453 to i64*
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 7
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %RDX.i1253 = bitcast %union.anon* %4456 to i64*
  %4457 = load i64, i64* %RDX.i1253
  %4458 = load i64, i64* %PC.i1252
  %4459 = add i64 %4458, 4
  store i64 %4459, i64* %PC.i1252
  %4460 = shl i64 %4457, 4
  %4461 = icmp slt i64 %4460, 0
  %4462 = shl i64 %4460, 1
  store i64 %4462, i64* %RDX.i1253, align 8
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4464 = zext i1 %4461 to i8
  store i8 %4464, i8* %4463, align 1
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4466 = trunc i64 %4462 to i32
  %4467 = and i32 %4466, 254
  %4468 = call i32 @llvm.ctpop.i32(i32 %4467)
  %4469 = trunc i32 %4468 to i8
  %4470 = and i8 %4469, 1
  %4471 = xor i8 %4470, 1
  store i8 %4471, i8* %4465, align 1
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4472, align 1
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4474 = icmp eq i64 %4462, 0
  %4475 = zext i1 %4474 to i8
  store i8 %4475, i8* %4473, align 1
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4477 = lshr i64 %4462, 63
  %4478 = trunc i64 %4477 to i8
  store i8 %4478, i8* %4476, align 1
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4479, align 1
  store %struct.Memory* %loadMem_45f823, %struct.Memory** %MEMORY
  %loadMem_45f827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4481 = getelementptr inbounds %struct.GPR, %struct.GPR* %4480, i32 0, i32 33
  %4482 = getelementptr inbounds %struct.Reg, %struct.Reg* %4481, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %4482 to i64*
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4484 = getelementptr inbounds %struct.GPR, %struct.GPR* %4483, i32 0, i32 1
  %4485 = getelementptr inbounds %struct.Reg, %struct.Reg* %4484, i32 0, i32 0
  %RAX.i1250 = bitcast %union.anon* %4485 to i64*
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4487 = getelementptr inbounds %struct.GPR, %struct.GPR* %4486, i32 0, i32 11
  %4488 = getelementptr inbounds %struct.Reg, %struct.Reg* %4487, i32 0, i32 0
  %RDI.i1251 = bitcast %union.anon* %4488 to i64*
  %4489 = load i64, i64* %RAX.i1250
  %4490 = load i64, i64* %PC.i1249
  %4491 = add i64 %4490, 3
  store i64 %4491, i64* %PC.i1249
  store i64 %4489, i64* %RDI.i1251, align 8
  store %struct.Memory* %loadMem_45f827, %struct.Memory** %MEMORY
  %loadMem_45f82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4493 = getelementptr inbounds %struct.GPR, %struct.GPR* %4492, i32 0, i32 33
  %4494 = getelementptr inbounds %struct.Reg, %struct.Reg* %4493, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %4494 to i64*
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4496 = getelementptr inbounds %struct.GPR, %struct.GPR* %4495, i32 0, i32 7
  %4497 = getelementptr inbounds %struct.Reg, %struct.Reg* %4496, i32 0, i32 0
  %RDX.i1247 = bitcast %union.anon* %4497 to i64*
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4499 = getelementptr inbounds %struct.GPR, %struct.GPR* %4498, i32 0, i32 11
  %4500 = getelementptr inbounds %struct.Reg, %struct.Reg* %4499, i32 0, i32 0
  %RDI.i1248 = bitcast %union.anon* %4500 to i64*
  %4501 = load i64, i64* %RDI.i1248
  %4502 = load i64, i64* %RDX.i1247
  %4503 = load i64, i64* %PC.i1246
  %4504 = add i64 %4503, 3
  store i64 %4504, i64* %PC.i1246
  %4505 = add i64 %4502, %4501
  store i64 %4505, i64* %RDI.i1248, align 8
  %4506 = icmp ult i64 %4505, %4501
  %4507 = icmp ult i64 %4505, %4502
  %4508 = or i1 %4506, %4507
  %4509 = zext i1 %4508 to i8
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4509, i8* %4510, align 1
  %4511 = trunc i64 %4505 to i32
  %4512 = and i32 %4511, 255
  %4513 = call i32 @llvm.ctpop.i32(i32 %4512)
  %4514 = trunc i32 %4513 to i8
  %4515 = and i8 %4514, 1
  %4516 = xor i8 %4515, 1
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4516, i8* %4517, align 1
  %4518 = xor i64 %4502, %4501
  %4519 = xor i64 %4518, %4505
  %4520 = lshr i64 %4519, 4
  %4521 = trunc i64 %4520 to i8
  %4522 = and i8 %4521, 1
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4522, i8* %4523, align 1
  %4524 = icmp eq i64 %4505, 0
  %4525 = zext i1 %4524 to i8
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4525, i8* %4526, align 1
  %4527 = lshr i64 %4505, 63
  %4528 = trunc i64 %4527 to i8
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4528, i8* %4529, align 1
  %4530 = lshr i64 %4501, 63
  %4531 = lshr i64 %4502, 63
  %4532 = xor i64 %4527, %4530
  %4533 = xor i64 %4527, %4531
  %4534 = add i64 %4532, %4533
  %4535 = icmp eq i64 %4534, 2
  %4536 = zext i1 %4535 to i8
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4536, i8* %4537, align 1
  store %struct.Memory* %loadMem_45f82a, %struct.Memory** %MEMORY
  %loadMem_45f82d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 33
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %4540 to i64*
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 9
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %RSI.i1244 = bitcast %union.anon* %4543 to i64*
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 11
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %RDI.i1245 = bitcast %union.anon* %4546 to i64*
  %4547 = load i64, i64* %RDI.i1245
  %4548 = load i64, i64* %PC.i1243
  %4549 = add i64 %4548, 2
  store i64 %4549, i64* %PC.i1243
  %4550 = inttoptr i64 %4547 to i32*
  %4551 = load i32, i32* %4550
  %4552 = zext i32 %4551 to i64
  store i64 %4552, i64* %RSI.i1244, align 8
  store %struct.Memory* %loadMem_45f82d, %struct.Memory** %MEMORY
  %loadMem_45f82f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4554 = getelementptr inbounds %struct.GPR, %struct.GPR* %4553, i32 0, i32 33
  %4555 = getelementptr inbounds %struct.Reg, %struct.Reg* %4554, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %4555 to i64*
  %4556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4557 = getelementptr inbounds %struct.GPR, %struct.GPR* %4556, i32 0, i32 7
  %4558 = getelementptr inbounds %struct.Reg, %struct.Reg* %4557, i32 0, i32 0
  %RDX.i1241 = bitcast %union.anon* %4558 to i64*
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4560 = getelementptr inbounds %struct.GPR, %struct.GPR* %4559, i32 0, i32 15
  %4561 = getelementptr inbounds %struct.Reg, %struct.Reg* %4560, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %4561 to i64*
  %4562 = load i64, i64* %RBP.i1242
  %4563 = sub i64 %4562, 20
  %4564 = load i64, i64* %PC.i1240
  %4565 = add i64 %4564, 4
  store i64 %4565, i64* %PC.i1240
  %4566 = inttoptr i64 %4563 to i32*
  %4567 = load i32, i32* %4566
  %4568 = sext i32 %4567 to i64
  store i64 %4568, i64* %RDX.i1241, align 8
  store %struct.Memory* %loadMem_45f82f, %struct.Memory** %MEMORY
  %loadMem_45f833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4570 = getelementptr inbounds %struct.GPR, %struct.GPR* %4569, i32 0, i32 33
  %4571 = getelementptr inbounds %struct.Reg, %struct.Reg* %4570, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %4571 to i64*
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4573 = getelementptr inbounds %struct.GPR, %struct.GPR* %4572, i32 0, i32 7
  %4574 = getelementptr inbounds %struct.Reg, %struct.Reg* %4573, i32 0, i32 0
  %RDX.i1239 = bitcast %union.anon* %4574 to i64*
  %4575 = load i64, i64* %RDX.i1239
  %4576 = load i64, i64* %PC.i1238
  %4577 = add i64 %4576, 4
  store i64 %4577, i64* %PC.i1238
  %4578 = shl i64 %4575, 4
  %4579 = icmp slt i64 %4578, 0
  %4580 = shl i64 %4578, 1
  store i64 %4580, i64* %RDX.i1239, align 8
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4582 = zext i1 %4579 to i8
  store i8 %4582, i8* %4581, align 1
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4584 = trunc i64 %4580 to i32
  %4585 = and i32 %4584, 254
  %4586 = call i32 @llvm.ctpop.i32(i32 %4585)
  %4587 = trunc i32 %4586 to i8
  %4588 = and i8 %4587, 1
  %4589 = xor i8 %4588, 1
  store i8 %4589, i8* %4583, align 1
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4590, align 1
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4592 = icmp eq i64 %4580, 0
  %4593 = zext i1 %4592 to i8
  store i8 %4593, i8* %4591, align 1
  %4594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4595 = lshr i64 %4580, 63
  %4596 = trunc i64 %4595 to i8
  store i8 %4596, i8* %4594, align 1
  %4597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4597, align 1
  store %struct.Memory* %loadMem_45f833, %struct.Memory** %MEMORY
  %loadMem_45f837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4599 = getelementptr inbounds %struct.GPR, %struct.GPR* %4598, i32 0, i32 33
  %4600 = getelementptr inbounds %struct.Reg, %struct.Reg* %4599, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %4600 to i64*
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4602 = getelementptr inbounds %struct.GPR, %struct.GPR* %4601, i32 0, i32 1
  %4603 = getelementptr inbounds %struct.Reg, %struct.Reg* %4602, i32 0, i32 0
  %RAX.i1236 = bitcast %union.anon* %4603 to i64*
  %4604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4605 = getelementptr inbounds %struct.GPR, %struct.GPR* %4604, i32 0, i32 11
  %4606 = getelementptr inbounds %struct.Reg, %struct.Reg* %4605, i32 0, i32 0
  %RDI.i1237 = bitcast %union.anon* %4606 to i64*
  %4607 = load i64, i64* %RAX.i1236
  %4608 = load i64, i64* %PC.i1235
  %4609 = add i64 %4608, 3
  store i64 %4609, i64* %PC.i1235
  store i64 %4607, i64* %RDI.i1237, align 8
  store %struct.Memory* %loadMem_45f837, %struct.Memory** %MEMORY
  %loadMem_45f83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4611 = getelementptr inbounds %struct.GPR, %struct.GPR* %4610, i32 0, i32 33
  %4612 = getelementptr inbounds %struct.Reg, %struct.Reg* %4611, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %4612 to i64*
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4614 = getelementptr inbounds %struct.GPR, %struct.GPR* %4613, i32 0, i32 7
  %4615 = getelementptr inbounds %struct.Reg, %struct.Reg* %4614, i32 0, i32 0
  %RDX.i1233 = bitcast %union.anon* %4615 to i64*
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4617 = getelementptr inbounds %struct.GPR, %struct.GPR* %4616, i32 0, i32 11
  %4618 = getelementptr inbounds %struct.Reg, %struct.Reg* %4617, i32 0, i32 0
  %RDI.i1234 = bitcast %union.anon* %4618 to i64*
  %4619 = load i64, i64* %RDI.i1234
  %4620 = load i64, i64* %RDX.i1233
  %4621 = load i64, i64* %PC.i1232
  %4622 = add i64 %4621, 3
  store i64 %4622, i64* %PC.i1232
  %4623 = add i64 %4620, %4619
  store i64 %4623, i64* %RDI.i1234, align 8
  %4624 = icmp ult i64 %4623, %4619
  %4625 = icmp ult i64 %4623, %4620
  %4626 = or i1 %4624, %4625
  %4627 = zext i1 %4626 to i8
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4627, i8* %4628, align 1
  %4629 = trunc i64 %4623 to i32
  %4630 = and i32 %4629, 255
  %4631 = call i32 @llvm.ctpop.i32(i32 %4630)
  %4632 = trunc i32 %4631 to i8
  %4633 = and i8 %4632, 1
  %4634 = xor i8 %4633, 1
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4634, i8* %4635, align 1
  %4636 = xor i64 %4620, %4619
  %4637 = xor i64 %4636, %4623
  %4638 = lshr i64 %4637, 4
  %4639 = trunc i64 %4638 to i8
  %4640 = and i8 %4639, 1
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4640, i8* %4641, align 1
  %4642 = icmp eq i64 %4623, 0
  %4643 = zext i1 %4642 to i8
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4643, i8* %4644, align 1
  %4645 = lshr i64 %4623, 63
  %4646 = trunc i64 %4645 to i8
  %4647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4646, i8* %4647, align 1
  %4648 = lshr i64 %4619, 63
  %4649 = lshr i64 %4620, 63
  %4650 = xor i64 %4645, %4648
  %4651 = xor i64 %4645, %4649
  %4652 = add i64 %4650, %4651
  %4653 = icmp eq i64 %4652, 2
  %4654 = zext i1 %4653 to i8
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4654, i8* %4655, align 1
  store %struct.Memory* %loadMem_45f83a, %struct.Memory** %MEMORY
  %loadMem_45f83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4657 = getelementptr inbounds %struct.GPR, %struct.GPR* %4656, i32 0, i32 33
  %4658 = getelementptr inbounds %struct.Reg, %struct.Reg* %4657, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %4658 to i64*
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4660 = getelementptr inbounds %struct.GPR, %struct.GPR* %4659, i32 0, i32 9
  %4661 = getelementptr inbounds %struct.Reg, %struct.Reg* %4660, i32 0, i32 0
  %RSI.i1230 = bitcast %union.anon* %4661 to i64*
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4663 = getelementptr inbounds %struct.GPR, %struct.GPR* %4662, i32 0, i32 11
  %4664 = getelementptr inbounds %struct.Reg, %struct.Reg* %4663, i32 0, i32 0
  %RDI.i1231 = bitcast %union.anon* %4664 to i64*
  %4665 = load i64, i64* %RSI.i1230
  %4666 = load i64, i64* %RDI.i1231
  %4667 = add i64 %4666, 8
  %4668 = load i64, i64* %PC.i1229
  %4669 = add i64 %4668, 3
  store i64 %4669, i64* %PC.i1229
  %4670 = trunc i64 %4665 to i32
  %4671 = inttoptr i64 %4667 to i32*
  %4672 = load i32, i32* %4671
  %4673 = sub i32 %4670, %4672
  %4674 = zext i32 %4673 to i64
  store i64 %4674, i64* %RSI.i1230, align 8
  %4675 = icmp ult i32 %4670, %4672
  %4676 = zext i1 %4675 to i8
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4676, i8* %4677, align 1
  %4678 = and i32 %4673, 255
  %4679 = call i32 @llvm.ctpop.i32(i32 %4678)
  %4680 = trunc i32 %4679 to i8
  %4681 = and i8 %4680, 1
  %4682 = xor i8 %4681, 1
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4682, i8* %4683, align 1
  %4684 = xor i32 %4672, %4670
  %4685 = xor i32 %4684, %4673
  %4686 = lshr i32 %4685, 4
  %4687 = trunc i32 %4686 to i8
  %4688 = and i8 %4687, 1
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4688, i8* %4689, align 1
  %4690 = icmp eq i32 %4673, 0
  %4691 = zext i1 %4690 to i8
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4691, i8* %4692, align 1
  %4693 = lshr i32 %4673, 31
  %4694 = trunc i32 %4693 to i8
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4694, i8* %4695, align 1
  %4696 = lshr i32 %4670, 31
  %4697 = lshr i32 %4672, 31
  %4698 = xor i32 %4697, %4696
  %4699 = xor i32 %4693, %4696
  %4700 = add i32 %4699, %4698
  %4701 = icmp eq i32 %4700, 2
  %4702 = zext i1 %4701 to i8
  %4703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4702, i8* %4703, align 1
  store %struct.Memory* %loadMem_45f83d, %struct.Memory** %MEMORY
  %loadMem_45f840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4705 = getelementptr inbounds %struct.GPR, %struct.GPR* %4704, i32 0, i32 33
  %4706 = getelementptr inbounds %struct.Reg, %struct.Reg* %4705, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %4706 to i64*
  %4707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4708 = getelementptr inbounds %struct.GPR, %struct.GPR* %4707, i32 0, i32 7
  %4709 = getelementptr inbounds %struct.Reg, %struct.Reg* %4708, i32 0, i32 0
  %RDX.i1227 = bitcast %union.anon* %4709 to i64*
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4711 = getelementptr inbounds %struct.GPR, %struct.GPR* %4710, i32 0, i32 15
  %4712 = getelementptr inbounds %struct.Reg, %struct.Reg* %4711, i32 0, i32 0
  %RBP.i1228 = bitcast %union.anon* %4712 to i64*
  %4713 = load i64, i64* %RBP.i1228
  %4714 = sub i64 %4713, 20
  %4715 = load i64, i64* %PC.i1226
  %4716 = add i64 %4715, 4
  store i64 %4716, i64* %PC.i1226
  %4717 = inttoptr i64 %4714 to i32*
  %4718 = load i32, i32* %4717
  %4719 = sext i32 %4718 to i64
  store i64 %4719, i64* %RDX.i1227, align 8
  store %struct.Memory* %loadMem_45f840, %struct.Memory** %MEMORY
  %loadMem_45f844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4721 = getelementptr inbounds %struct.GPR, %struct.GPR* %4720, i32 0, i32 33
  %4722 = getelementptr inbounds %struct.Reg, %struct.Reg* %4721, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %4722 to i64*
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4724 = getelementptr inbounds %struct.GPR, %struct.GPR* %4723, i32 0, i32 7
  %4725 = getelementptr inbounds %struct.Reg, %struct.Reg* %4724, i32 0, i32 0
  %RDX.i1225 = bitcast %union.anon* %4725 to i64*
  %4726 = load i64, i64* %RDX.i1225
  %4727 = load i64, i64* %PC.i1224
  %4728 = add i64 %4727, 4
  store i64 %4728, i64* %PC.i1224
  %4729 = shl i64 %4726, 4
  %4730 = icmp slt i64 %4729, 0
  %4731 = shl i64 %4729, 1
  store i64 %4731, i64* %RDX.i1225, align 8
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4733 = zext i1 %4730 to i8
  store i8 %4733, i8* %4732, align 1
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4735 = trunc i64 %4731 to i32
  %4736 = and i32 %4735, 254
  %4737 = call i32 @llvm.ctpop.i32(i32 %4736)
  %4738 = trunc i32 %4737 to i8
  %4739 = and i8 %4738, 1
  %4740 = xor i8 %4739, 1
  store i8 %4740, i8* %4734, align 1
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4741, align 1
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4743 = icmp eq i64 %4731, 0
  %4744 = zext i1 %4743 to i8
  store i8 %4744, i8* %4742, align 1
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4746 = lshr i64 %4731, 63
  %4747 = trunc i64 %4746 to i8
  store i8 %4747, i8* %4745, align 1
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4748, align 1
  store %struct.Memory* %loadMem_45f844, %struct.Memory** %MEMORY
  %loadMem_45f848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4750 = getelementptr inbounds %struct.GPR, %struct.GPR* %4749, i32 0, i32 33
  %4751 = getelementptr inbounds %struct.Reg, %struct.Reg* %4750, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %4751 to i64*
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4753 = getelementptr inbounds %struct.GPR, %struct.GPR* %4752, i32 0, i32 5
  %4754 = getelementptr inbounds %struct.Reg, %struct.Reg* %4753, i32 0, i32 0
  %RCX.i1222 = bitcast %union.anon* %4754 to i64*
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4756 = getelementptr inbounds %struct.GPR, %struct.GPR* %4755, i32 0, i32 11
  %4757 = getelementptr inbounds %struct.Reg, %struct.Reg* %4756, i32 0, i32 0
  %RDI.i1223 = bitcast %union.anon* %4757 to i64*
  %4758 = load i64, i64* %RCX.i1222
  %4759 = load i64, i64* %PC.i1221
  %4760 = add i64 %4759, 3
  store i64 %4760, i64* %PC.i1221
  store i64 %4758, i64* %RDI.i1223, align 8
  store %struct.Memory* %loadMem_45f848, %struct.Memory** %MEMORY
  %loadMem_45f84b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 33
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %4763 to i64*
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4765 = getelementptr inbounds %struct.GPR, %struct.GPR* %4764, i32 0, i32 7
  %4766 = getelementptr inbounds %struct.Reg, %struct.Reg* %4765, i32 0, i32 0
  %RDX.i1219 = bitcast %union.anon* %4766 to i64*
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4768 = getelementptr inbounds %struct.GPR, %struct.GPR* %4767, i32 0, i32 11
  %4769 = getelementptr inbounds %struct.Reg, %struct.Reg* %4768, i32 0, i32 0
  %RDI.i1220 = bitcast %union.anon* %4769 to i64*
  %4770 = load i64, i64* %RDI.i1220
  %4771 = load i64, i64* %RDX.i1219
  %4772 = load i64, i64* %PC.i1218
  %4773 = add i64 %4772, 3
  store i64 %4773, i64* %PC.i1218
  %4774 = add i64 %4771, %4770
  store i64 %4774, i64* %RDI.i1220, align 8
  %4775 = icmp ult i64 %4774, %4770
  %4776 = icmp ult i64 %4774, %4771
  %4777 = or i1 %4775, %4776
  %4778 = zext i1 %4777 to i8
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4778, i8* %4779, align 1
  %4780 = trunc i64 %4774 to i32
  %4781 = and i32 %4780, 255
  %4782 = call i32 @llvm.ctpop.i32(i32 %4781)
  %4783 = trunc i32 %4782 to i8
  %4784 = and i8 %4783, 1
  %4785 = xor i8 %4784, 1
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4785, i8* %4786, align 1
  %4787 = xor i64 %4771, %4770
  %4788 = xor i64 %4787, %4774
  %4789 = lshr i64 %4788, 4
  %4790 = trunc i64 %4789 to i8
  %4791 = and i8 %4790, 1
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4791, i8* %4792, align 1
  %4793 = icmp eq i64 %4774, 0
  %4794 = zext i1 %4793 to i8
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4794, i8* %4795, align 1
  %4796 = lshr i64 %4774, 63
  %4797 = trunc i64 %4796 to i8
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4797, i8* %4798, align 1
  %4799 = lshr i64 %4770, 63
  %4800 = lshr i64 %4771, 63
  %4801 = xor i64 %4796, %4799
  %4802 = xor i64 %4796, %4800
  %4803 = add i64 %4801, %4802
  %4804 = icmp eq i64 %4803, 2
  %4805 = zext i1 %4804 to i8
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4805, i8* %4806, align 1
  store %struct.Memory* %loadMem_45f84b, %struct.Memory** %MEMORY
  %loadMem_45f84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4808 = getelementptr inbounds %struct.GPR, %struct.GPR* %4807, i32 0, i32 33
  %4809 = getelementptr inbounds %struct.Reg, %struct.Reg* %4808, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %4809 to i64*
  %4810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4811 = getelementptr inbounds %struct.GPR, %struct.GPR* %4810, i32 0, i32 9
  %4812 = getelementptr inbounds %struct.Reg, %struct.Reg* %4811, i32 0, i32 0
  %ESI.i1216 = bitcast %union.anon* %4812 to i32*
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4814 = getelementptr inbounds %struct.GPR, %struct.GPR* %4813, i32 0, i32 11
  %4815 = getelementptr inbounds %struct.Reg, %struct.Reg* %4814, i32 0, i32 0
  %RDI.i1217 = bitcast %union.anon* %4815 to i64*
  %4816 = load i64, i64* %RDI.i1217
  %4817 = add i64 %4816, 8
  %4818 = load i32, i32* %ESI.i1216
  %4819 = zext i32 %4818 to i64
  %4820 = load i64, i64* %PC.i1215
  %4821 = add i64 %4820, 3
  store i64 %4821, i64* %PC.i1215
  %4822 = inttoptr i64 %4817 to i32*
  store i32 %4818, i32* %4822
  store %struct.Memory* %loadMem_45f84e, %struct.Memory** %MEMORY
  %loadMem_45f851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4824 = getelementptr inbounds %struct.GPR, %struct.GPR* %4823, i32 0, i32 33
  %4825 = getelementptr inbounds %struct.Reg, %struct.Reg* %4824, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %4825 to i64*
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4827 = getelementptr inbounds %struct.GPR, %struct.GPR* %4826, i32 0, i32 7
  %4828 = getelementptr inbounds %struct.Reg, %struct.Reg* %4827, i32 0, i32 0
  %RDX.i1213 = bitcast %union.anon* %4828 to i64*
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4830 = getelementptr inbounds %struct.GPR, %struct.GPR* %4829, i32 0, i32 15
  %4831 = getelementptr inbounds %struct.Reg, %struct.Reg* %4830, i32 0, i32 0
  %RBP.i1214 = bitcast %union.anon* %4831 to i64*
  %4832 = load i64, i64* %RBP.i1214
  %4833 = sub i64 %4832, 20
  %4834 = load i64, i64* %PC.i1212
  %4835 = add i64 %4834, 4
  store i64 %4835, i64* %PC.i1212
  %4836 = inttoptr i64 %4833 to i32*
  %4837 = load i32, i32* %4836
  %4838 = sext i32 %4837 to i64
  store i64 %4838, i64* %RDX.i1213, align 8
  store %struct.Memory* %loadMem_45f851, %struct.Memory** %MEMORY
  %loadMem_45f855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 33
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %4841 to i64*
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4843 = getelementptr inbounds %struct.GPR, %struct.GPR* %4842, i32 0, i32 7
  %4844 = getelementptr inbounds %struct.Reg, %struct.Reg* %4843, i32 0, i32 0
  %RDX.i1211 = bitcast %union.anon* %4844 to i64*
  %4845 = load i64, i64* %RDX.i1211
  %4846 = load i64, i64* %PC.i1210
  %4847 = add i64 %4846, 4
  store i64 %4847, i64* %PC.i1210
  %4848 = shl i64 %4845, 4
  %4849 = icmp slt i64 %4848, 0
  %4850 = shl i64 %4848, 1
  store i64 %4850, i64* %RDX.i1211, align 8
  %4851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4852 = zext i1 %4849 to i8
  store i8 %4852, i8* %4851, align 1
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4854 = trunc i64 %4850 to i32
  %4855 = and i32 %4854, 254
  %4856 = call i32 @llvm.ctpop.i32(i32 %4855)
  %4857 = trunc i32 %4856 to i8
  %4858 = and i8 %4857, 1
  %4859 = xor i8 %4858, 1
  store i8 %4859, i8* %4853, align 1
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4860, align 1
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4862 = icmp eq i64 %4850, 0
  %4863 = zext i1 %4862 to i8
  store i8 %4863, i8* %4861, align 1
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4865 = lshr i64 %4850, 63
  %4866 = trunc i64 %4865 to i8
  store i8 %4866, i8* %4864, align 1
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4867, align 1
  store %struct.Memory* %loadMem_45f855, %struct.Memory** %MEMORY
  %loadMem_45f859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4869 = getelementptr inbounds %struct.GPR, %struct.GPR* %4868, i32 0, i32 33
  %4870 = getelementptr inbounds %struct.Reg, %struct.Reg* %4869, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %4870 to i64*
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 1
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %RAX.i1208 = bitcast %union.anon* %4873 to i64*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4875 = getelementptr inbounds %struct.GPR, %struct.GPR* %4874, i32 0, i32 11
  %4876 = getelementptr inbounds %struct.Reg, %struct.Reg* %4875, i32 0, i32 0
  %RDI.i1209 = bitcast %union.anon* %4876 to i64*
  %4877 = load i64, i64* %RAX.i1208
  %4878 = load i64, i64* %PC.i1207
  %4879 = add i64 %4878, 3
  store i64 %4879, i64* %PC.i1207
  store i64 %4877, i64* %RDI.i1209, align 8
  store %struct.Memory* %loadMem_45f859, %struct.Memory** %MEMORY
  %loadMem_45f85c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4881 = getelementptr inbounds %struct.GPR, %struct.GPR* %4880, i32 0, i32 33
  %4882 = getelementptr inbounds %struct.Reg, %struct.Reg* %4881, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %4882 to i64*
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4884 = getelementptr inbounds %struct.GPR, %struct.GPR* %4883, i32 0, i32 7
  %4885 = getelementptr inbounds %struct.Reg, %struct.Reg* %4884, i32 0, i32 0
  %RDX.i1205 = bitcast %union.anon* %4885 to i64*
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4887 = getelementptr inbounds %struct.GPR, %struct.GPR* %4886, i32 0, i32 11
  %4888 = getelementptr inbounds %struct.Reg, %struct.Reg* %4887, i32 0, i32 0
  %RDI.i1206 = bitcast %union.anon* %4888 to i64*
  %4889 = load i64, i64* %RDI.i1206
  %4890 = load i64, i64* %RDX.i1205
  %4891 = load i64, i64* %PC.i1204
  %4892 = add i64 %4891, 3
  store i64 %4892, i64* %PC.i1204
  %4893 = add i64 %4890, %4889
  store i64 %4893, i64* %RDI.i1206, align 8
  %4894 = icmp ult i64 %4893, %4889
  %4895 = icmp ult i64 %4893, %4890
  %4896 = or i1 %4894, %4895
  %4897 = zext i1 %4896 to i8
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4897, i8* %4898, align 1
  %4899 = trunc i64 %4893 to i32
  %4900 = and i32 %4899, 255
  %4901 = call i32 @llvm.ctpop.i32(i32 %4900)
  %4902 = trunc i32 %4901 to i8
  %4903 = and i8 %4902, 1
  %4904 = xor i8 %4903, 1
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4904, i8* %4905, align 1
  %4906 = xor i64 %4890, %4889
  %4907 = xor i64 %4906, %4893
  %4908 = lshr i64 %4907, 4
  %4909 = trunc i64 %4908 to i8
  %4910 = and i8 %4909, 1
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4910, i8* %4911, align 1
  %4912 = icmp eq i64 %4893, 0
  %4913 = zext i1 %4912 to i8
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4913, i8* %4914, align 1
  %4915 = lshr i64 %4893, 63
  %4916 = trunc i64 %4915 to i8
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4916, i8* %4917, align 1
  %4918 = lshr i64 %4889, 63
  %4919 = lshr i64 %4890, 63
  %4920 = xor i64 %4915, %4918
  %4921 = xor i64 %4915, %4919
  %4922 = add i64 %4920, %4921
  %4923 = icmp eq i64 %4922, 2
  %4924 = zext i1 %4923 to i8
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4924, i8* %4925, align 1
  store %struct.Memory* %loadMem_45f85c, %struct.Memory** %MEMORY
  %loadMem_45f85f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4927 = getelementptr inbounds %struct.GPR, %struct.GPR* %4926, i32 0, i32 33
  %4928 = getelementptr inbounds %struct.Reg, %struct.Reg* %4927, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %4928 to i64*
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4930 = getelementptr inbounds %struct.GPR, %struct.GPR* %4929, i32 0, i32 9
  %4931 = getelementptr inbounds %struct.Reg, %struct.Reg* %4930, i32 0, i32 0
  %RSI.i1202 = bitcast %union.anon* %4931 to i64*
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4933 = getelementptr inbounds %struct.GPR, %struct.GPR* %4932, i32 0, i32 11
  %4934 = getelementptr inbounds %struct.Reg, %struct.Reg* %4933, i32 0, i32 0
  %RDI.i1203 = bitcast %union.anon* %4934 to i64*
  %4935 = load i64, i64* %RDI.i1203
  %4936 = add i64 %4935, 4
  %4937 = load i64, i64* %PC.i1201
  %4938 = add i64 %4937, 3
  store i64 %4938, i64* %PC.i1201
  %4939 = inttoptr i64 %4936 to i32*
  %4940 = load i32, i32* %4939
  %4941 = zext i32 %4940 to i64
  store i64 %4941, i64* %RSI.i1202, align 8
  store %struct.Memory* %loadMem_45f85f, %struct.Memory** %MEMORY
  %loadMem_45f862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4943 = getelementptr inbounds %struct.GPR, %struct.GPR* %4942, i32 0, i32 33
  %4944 = getelementptr inbounds %struct.Reg, %struct.Reg* %4943, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %4944 to i64*
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4946 = getelementptr inbounds %struct.GPR, %struct.GPR* %4945, i32 0, i32 7
  %4947 = getelementptr inbounds %struct.Reg, %struct.Reg* %4946, i32 0, i32 0
  %RDX.i1199 = bitcast %union.anon* %4947 to i64*
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4949 = getelementptr inbounds %struct.GPR, %struct.GPR* %4948, i32 0, i32 15
  %4950 = getelementptr inbounds %struct.Reg, %struct.Reg* %4949, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %4950 to i64*
  %4951 = load i64, i64* %RBP.i1200
  %4952 = sub i64 %4951, 20
  %4953 = load i64, i64* %PC.i1198
  %4954 = add i64 %4953, 4
  store i64 %4954, i64* %PC.i1198
  %4955 = inttoptr i64 %4952 to i32*
  %4956 = load i32, i32* %4955
  %4957 = sext i32 %4956 to i64
  store i64 %4957, i64* %RDX.i1199, align 8
  store %struct.Memory* %loadMem_45f862, %struct.Memory** %MEMORY
  %loadMem_45f866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4959 = getelementptr inbounds %struct.GPR, %struct.GPR* %4958, i32 0, i32 33
  %4960 = getelementptr inbounds %struct.Reg, %struct.Reg* %4959, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %4960 to i64*
  %4961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4962 = getelementptr inbounds %struct.GPR, %struct.GPR* %4961, i32 0, i32 7
  %4963 = getelementptr inbounds %struct.Reg, %struct.Reg* %4962, i32 0, i32 0
  %RDX.i1197 = bitcast %union.anon* %4963 to i64*
  %4964 = load i64, i64* %RDX.i1197
  %4965 = load i64, i64* %PC.i1196
  %4966 = add i64 %4965, 4
  store i64 %4966, i64* %PC.i1196
  %4967 = shl i64 %4964, 4
  %4968 = icmp slt i64 %4967, 0
  %4969 = shl i64 %4967, 1
  store i64 %4969, i64* %RDX.i1197, align 8
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4971 = zext i1 %4968 to i8
  store i8 %4971, i8* %4970, align 1
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4973 = trunc i64 %4969 to i32
  %4974 = and i32 %4973, 254
  %4975 = call i32 @llvm.ctpop.i32(i32 %4974)
  %4976 = trunc i32 %4975 to i8
  %4977 = and i8 %4976, 1
  %4978 = xor i8 %4977, 1
  store i8 %4978, i8* %4972, align 1
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4979, align 1
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4981 = icmp eq i64 %4969, 0
  %4982 = zext i1 %4981 to i8
  store i8 %4982, i8* %4980, align 1
  %4983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4984 = lshr i64 %4969, 63
  %4985 = trunc i64 %4984 to i8
  store i8 %4985, i8* %4983, align 1
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4986, align 1
  store %struct.Memory* %loadMem_45f866, %struct.Memory** %MEMORY
  %loadMem_45f86a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 33
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %4989 to i64*
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4991 = getelementptr inbounds %struct.GPR, %struct.GPR* %4990, i32 0, i32 1
  %4992 = getelementptr inbounds %struct.Reg, %struct.Reg* %4991, i32 0, i32 0
  %RAX.i1194 = bitcast %union.anon* %4992 to i64*
  %4993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4994 = getelementptr inbounds %struct.GPR, %struct.GPR* %4993, i32 0, i32 11
  %4995 = getelementptr inbounds %struct.Reg, %struct.Reg* %4994, i32 0, i32 0
  %RDI.i1195 = bitcast %union.anon* %4995 to i64*
  %4996 = load i64, i64* %RAX.i1194
  %4997 = load i64, i64* %PC.i1193
  %4998 = add i64 %4997, 3
  store i64 %4998, i64* %PC.i1193
  store i64 %4996, i64* %RDI.i1195, align 8
  store %struct.Memory* %loadMem_45f86a, %struct.Memory** %MEMORY
  %loadMem_45f86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5000 = getelementptr inbounds %struct.GPR, %struct.GPR* %4999, i32 0, i32 33
  %5001 = getelementptr inbounds %struct.Reg, %struct.Reg* %5000, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %5001 to i64*
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5003 = getelementptr inbounds %struct.GPR, %struct.GPR* %5002, i32 0, i32 7
  %5004 = getelementptr inbounds %struct.Reg, %struct.Reg* %5003, i32 0, i32 0
  %RDX.i1191 = bitcast %union.anon* %5004 to i64*
  %5005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5006 = getelementptr inbounds %struct.GPR, %struct.GPR* %5005, i32 0, i32 11
  %5007 = getelementptr inbounds %struct.Reg, %struct.Reg* %5006, i32 0, i32 0
  %RDI.i1192 = bitcast %union.anon* %5007 to i64*
  %5008 = load i64, i64* %RDI.i1192
  %5009 = load i64, i64* %RDX.i1191
  %5010 = load i64, i64* %PC.i1190
  %5011 = add i64 %5010, 3
  store i64 %5011, i64* %PC.i1190
  %5012 = add i64 %5009, %5008
  store i64 %5012, i64* %RDI.i1192, align 8
  %5013 = icmp ult i64 %5012, %5008
  %5014 = icmp ult i64 %5012, %5009
  %5015 = or i1 %5013, %5014
  %5016 = zext i1 %5015 to i8
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5016, i8* %5017, align 1
  %5018 = trunc i64 %5012 to i32
  %5019 = and i32 %5018, 255
  %5020 = call i32 @llvm.ctpop.i32(i32 %5019)
  %5021 = trunc i32 %5020 to i8
  %5022 = and i8 %5021, 1
  %5023 = xor i8 %5022, 1
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5023, i8* %5024, align 1
  %5025 = xor i64 %5009, %5008
  %5026 = xor i64 %5025, %5012
  %5027 = lshr i64 %5026, 4
  %5028 = trunc i64 %5027 to i8
  %5029 = and i8 %5028, 1
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5029, i8* %5030, align 1
  %5031 = icmp eq i64 %5012, 0
  %5032 = zext i1 %5031 to i8
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5032, i8* %5033, align 1
  %5034 = lshr i64 %5012, 63
  %5035 = trunc i64 %5034 to i8
  %5036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5035, i8* %5036, align 1
  %5037 = lshr i64 %5008, 63
  %5038 = lshr i64 %5009, 63
  %5039 = xor i64 %5034, %5037
  %5040 = xor i64 %5034, %5038
  %5041 = add i64 %5039, %5040
  %5042 = icmp eq i64 %5041, 2
  %5043 = zext i1 %5042 to i8
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5043, i8* %5044, align 1
  store %struct.Memory* %loadMem_45f86d, %struct.Memory** %MEMORY
  %loadMem_45f870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 33
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %5047 to i64*
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 9
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %RSI.i1188 = bitcast %union.anon* %5050 to i64*
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5052 = getelementptr inbounds %struct.GPR, %struct.GPR* %5051, i32 0, i32 11
  %5053 = getelementptr inbounds %struct.Reg, %struct.Reg* %5052, i32 0, i32 0
  %RDI.i1189 = bitcast %union.anon* %5053 to i64*
  %5054 = load i64, i64* %RSI.i1188
  %5055 = load i64, i64* %RDI.i1189
  %5056 = add i64 %5055, 12
  %5057 = load i64, i64* %PC.i1187
  %5058 = add i64 %5057, 3
  store i64 %5058, i64* %PC.i1187
  %5059 = trunc i64 %5054 to i32
  %5060 = inttoptr i64 %5056 to i32*
  %5061 = load i32, i32* %5060
  %5062 = sub i32 %5059, %5061
  %5063 = zext i32 %5062 to i64
  store i64 %5063, i64* %RSI.i1188, align 8
  %5064 = icmp ult i32 %5059, %5061
  %5065 = zext i1 %5064 to i8
  %5066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5065, i8* %5066, align 1
  %5067 = and i32 %5062, 255
  %5068 = call i32 @llvm.ctpop.i32(i32 %5067)
  %5069 = trunc i32 %5068 to i8
  %5070 = and i8 %5069, 1
  %5071 = xor i8 %5070, 1
  %5072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5071, i8* %5072, align 1
  %5073 = xor i32 %5061, %5059
  %5074 = xor i32 %5073, %5062
  %5075 = lshr i32 %5074, 4
  %5076 = trunc i32 %5075 to i8
  %5077 = and i8 %5076, 1
  %5078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5077, i8* %5078, align 1
  %5079 = icmp eq i32 %5062, 0
  %5080 = zext i1 %5079 to i8
  %5081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5080, i8* %5081, align 1
  %5082 = lshr i32 %5062, 31
  %5083 = trunc i32 %5082 to i8
  %5084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5083, i8* %5084, align 1
  %5085 = lshr i32 %5059, 31
  %5086 = lshr i32 %5061, 31
  %5087 = xor i32 %5086, %5085
  %5088 = xor i32 %5082, %5085
  %5089 = add i32 %5088, %5087
  %5090 = icmp eq i32 %5089, 2
  %5091 = zext i1 %5090 to i8
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5091, i8* %5092, align 1
  store %struct.Memory* %loadMem_45f870, %struct.Memory** %MEMORY
  %loadMem_45f873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5094 = getelementptr inbounds %struct.GPR, %struct.GPR* %5093, i32 0, i32 33
  %5095 = getelementptr inbounds %struct.Reg, %struct.Reg* %5094, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %5095 to i64*
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5097 = getelementptr inbounds %struct.GPR, %struct.GPR* %5096, i32 0, i32 7
  %5098 = getelementptr inbounds %struct.Reg, %struct.Reg* %5097, i32 0, i32 0
  %RDX.i1185 = bitcast %union.anon* %5098 to i64*
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5100 = getelementptr inbounds %struct.GPR, %struct.GPR* %5099, i32 0, i32 15
  %5101 = getelementptr inbounds %struct.Reg, %struct.Reg* %5100, i32 0, i32 0
  %RBP.i1186 = bitcast %union.anon* %5101 to i64*
  %5102 = load i64, i64* %RBP.i1186
  %5103 = sub i64 %5102, 20
  %5104 = load i64, i64* %PC.i1184
  %5105 = add i64 %5104, 4
  store i64 %5105, i64* %PC.i1184
  %5106 = inttoptr i64 %5103 to i32*
  %5107 = load i32, i32* %5106
  %5108 = sext i32 %5107 to i64
  store i64 %5108, i64* %RDX.i1185, align 8
  store %struct.Memory* %loadMem_45f873, %struct.Memory** %MEMORY
  %loadMem_45f877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 33
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %5111 to i64*
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5113 = getelementptr inbounds %struct.GPR, %struct.GPR* %5112, i32 0, i32 7
  %5114 = getelementptr inbounds %struct.Reg, %struct.Reg* %5113, i32 0, i32 0
  %RDX.i1183 = bitcast %union.anon* %5114 to i64*
  %5115 = load i64, i64* %RDX.i1183
  %5116 = load i64, i64* %PC.i1182
  %5117 = add i64 %5116, 4
  store i64 %5117, i64* %PC.i1182
  %5118 = shl i64 %5115, 4
  %5119 = icmp slt i64 %5118, 0
  %5120 = shl i64 %5118, 1
  store i64 %5120, i64* %RDX.i1183, align 8
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5122 = zext i1 %5119 to i8
  store i8 %5122, i8* %5121, align 1
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5124 = trunc i64 %5120 to i32
  %5125 = and i32 %5124, 254
  %5126 = call i32 @llvm.ctpop.i32(i32 %5125)
  %5127 = trunc i32 %5126 to i8
  %5128 = and i8 %5127, 1
  %5129 = xor i8 %5128, 1
  store i8 %5129, i8* %5123, align 1
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5130, align 1
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5132 = icmp eq i64 %5120, 0
  %5133 = zext i1 %5132 to i8
  store i8 %5133, i8* %5131, align 1
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5135 = lshr i64 %5120, 63
  %5136 = trunc i64 %5135 to i8
  store i8 %5136, i8* %5134, align 1
  %5137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5137, align 1
  store %struct.Memory* %loadMem_45f877, %struct.Memory** %MEMORY
  %loadMem_45f87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 33
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %5140 to i64*
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5142 = getelementptr inbounds %struct.GPR, %struct.GPR* %5141, i32 0, i32 5
  %5143 = getelementptr inbounds %struct.Reg, %struct.Reg* %5142, i32 0, i32 0
  %RCX.i1180 = bitcast %union.anon* %5143 to i64*
  %5144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5145 = getelementptr inbounds %struct.GPR, %struct.GPR* %5144, i32 0, i32 11
  %5146 = getelementptr inbounds %struct.Reg, %struct.Reg* %5145, i32 0, i32 0
  %RDI.i1181 = bitcast %union.anon* %5146 to i64*
  %5147 = load i64, i64* %RCX.i1180
  %5148 = load i64, i64* %PC.i1179
  %5149 = add i64 %5148, 3
  store i64 %5149, i64* %PC.i1179
  store i64 %5147, i64* %RDI.i1181, align 8
  store %struct.Memory* %loadMem_45f87b, %struct.Memory** %MEMORY
  %loadMem_45f87e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5151 = getelementptr inbounds %struct.GPR, %struct.GPR* %5150, i32 0, i32 33
  %5152 = getelementptr inbounds %struct.Reg, %struct.Reg* %5151, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %5152 to i64*
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 7
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %RDX.i1177 = bitcast %union.anon* %5155 to i64*
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 11
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %RDI.i1178 = bitcast %union.anon* %5158 to i64*
  %5159 = load i64, i64* %RDI.i1178
  %5160 = load i64, i64* %RDX.i1177
  %5161 = load i64, i64* %PC.i1176
  %5162 = add i64 %5161, 3
  store i64 %5162, i64* %PC.i1176
  %5163 = add i64 %5160, %5159
  store i64 %5163, i64* %RDI.i1178, align 8
  %5164 = icmp ult i64 %5163, %5159
  %5165 = icmp ult i64 %5163, %5160
  %5166 = or i1 %5164, %5165
  %5167 = zext i1 %5166 to i8
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5167, i8* %5168, align 1
  %5169 = trunc i64 %5163 to i32
  %5170 = and i32 %5169, 255
  %5171 = call i32 @llvm.ctpop.i32(i32 %5170)
  %5172 = trunc i32 %5171 to i8
  %5173 = and i8 %5172, 1
  %5174 = xor i8 %5173, 1
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5174, i8* %5175, align 1
  %5176 = xor i64 %5160, %5159
  %5177 = xor i64 %5176, %5163
  %5178 = lshr i64 %5177, 4
  %5179 = trunc i64 %5178 to i8
  %5180 = and i8 %5179, 1
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5180, i8* %5181, align 1
  %5182 = icmp eq i64 %5163, 0
  %5183 = zext i1 %5182 to i8
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5183, i8* %5184, align 1
  %5185 = lshr i64 %5163, 63
  %5186 = trunc i64 %5185 to i8
  %5187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5186, i8* %5187, align 1
  %5188 = lshr i64 %5159, 63
  %5189 = lshr i64 %5160, 63
  %5190 = xor i64 %5185, %5188
  %5191 = xor i64 %5185, %5189
  %5192 = add i64 %5190, %5191
  %5193 = icmp eq i64 %5192, 2
  %5194 = zext i1 %5193 to i8
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5194, i8* %5195, align 1
  store %struct.Memory* %loadMem_45f87e, %struct.Memory** %MEMORY
  %loadMem_45f881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5197 = getelementptr inbounds %struct.GPR, %struct.GPR* %5196, i32 0, i32 33
  %5198 = getelementptr inbounds %struct.Reg, %struct.Reg* %5197, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %5198 to i64*
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 9
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %ESI.i1174 = bitcast %union.anon* %5201 to i32*
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5203 = getelementptr inbounds %struct.GPR, %struct.GPR* %5202, i32 0, i32 11
  %5204 = getelementptr inbounds %struct.Reg, %struct.Reg* %5203, i32 0, i32 0
  %RDI.i1175 = bitcast %union.anon* %5204 to i64*
  %5205 = load i64, i64* %RDI.i1175
  %5206 = add i64 %5205, 12
  %5207 = load i32, i32* %ESI.i1174
  %5208 = zext i32 %5207 to i64
  %5209 = load i64, i64* %PC.i1173
  %5210 = add i64 %5209, 3
  store i64 %5210, i64* %PC.i1173
  %5211 = inttoptr i64 %5206 to i32*
  store i32 %5207, i32* %5211
  store %struct.Memory* %loadMem_45f881, %struct.Memory** %MEMORY
  %loadMem_45f884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5213 = getelementptr inbounds %struct.GPR, %struct.GPR* %5212, i32 0, i32 33
  %5214 = getelementptr inbounds %struct.Reg, %struct.Reg* %5213, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %5214 to i64*
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5216 = getelementptr inbounds %struct.GPR, %struct.GPR* %5215, i32 0, i32 7
  %5217 = getelementptr inbounds %struct.Reg, %struct.Reg* %5216, i32 0, i32 0
  %RDX.i1171 = bitcast %union.anon* %5217 to i64*
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5219 = getelementptr inbounds %struct.GPR, %struct.GPR* %5218, i32 0, i32 15
  %5220 = getelementptr inbounds %struct.Reg, %struct.Reg* %5219, i32 0, i32 0
  %RBP.i1172 = bitcast %union.anon* %5220 to i64*
  %5221 = load i64, i64* %RBP.i1172
  %5222 = sub i64 %5221, 20
  %5223 = load i64, i64* %PC.i1170
  %5224 = add i64 %5223, 4
  store i64 %5224, i64* %PC.i1170
  %5225 = inttoptr i64 %5222 to i32*
  %5226 = load i32, i32* %5225
  %5227 = sext i32 %5226 to i64
  store i64 %5227, i64* %RDX.i1171, align 8
  store %struct.Memory* %loadMem_45f884, %struct.Memory** %MEMORY
  %loadMem_45f888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5229 = getelementptr inbounds %struct.GPR, %struct.GPR* %5228, i32 0, i32 33
  %5230 = getelementptr inbounds %struct.Reg, %struct.Reg* %5229, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %5230 to i64*
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5232 = getelementptr inbounds %struct.GPR, %struct.GPR* %5231, i32 0, i32 7
  %5233 = getelementptr inbounds %struct.Reg, %struct.Reg* %5232, i32 0, i32 0
  %RDX.i1169 = bitcast %union.anon* %5233 to i64*
  %5234 = load i64, i64* %RDX.i1169
  %5235 = load i64, i64* %PC.i1168
  %5236 = add i64 %5235, 4
  store i64 %5236, i64* %PC.i1168
  %5237 = shl i64 %5234, 4
  %5238 = icmp slt i64 %5237, 0
  %5239 = shl i64 %5237, 1
  store i64 %5239, i64* %RDX.i1169, align 8
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5241 = zext i1 %5238 to i8
  store i8 %5241, i8* %5240, align 1
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5243 = trunc i64 %5239 to i32
  %5244 = and i32 %5243, 254
  %5245 = call i32 @llvm.ctpop.i32(i32 %5244)
  %5246 = trunc i32 %5245 to i8
  %5247 = and i8 %5246, 1
  %5248 = xor i8 %5247, 1
  store i8 %5248, i8* %5242, align 1
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5249, align 1
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5251 = icmp eq i64 %5239, 0
  %5252 = zext i1 %5251 to i8
  store i8 %5252, i8* %5250, align 1
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5254 = lshr i64 %5239, 63
  %5255 = trunc i64 %5254 to i8
  store i8 %5255, i8* %5253, align 1
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5256, align 1
  store %struct.Memory* %loadMem_45f888, %struct.Memory** %MEMORY
  %loadMem_45f88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5258 = getelementptr inbounds %struct.GPR, %struct.GPR* %5257, i32 0, i32 33
  %5259 = getelementptr inbounds %struct.Reg, %struct.Reg* %5258, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %5259 to i64*
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5261 = getelementptr inbounds %struct.GPR, %struct.GPR* %5260, i32 0, i32 1
  %5262 = getelementptr inbounds %struct.Reg, %struct.Reg* %5261, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %5262 to i64*
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5264 = getelementptr inbounds %struct.GPR, %struct.GPR* %5263, i32 0, i32 11
  %5265 = getelementptr inbounds %struct.Reg, %struct.Reg* %5264, i32 0, i32 0
  %RDI.i1167 = bitcast %union.anon* %5265 to i64*
  %5266 = load i64, i64* %RAX.i1166
  %5267 = load i64, i64* %PC.i1165
  %5268 = add i64 %5267, 3
  store i64 %5268, i64* %PC.i1165
  store i64 %5266, i64* %RDI.i1167, align 8
  store %struct.Memory* %loadMem_45f88c, %struct.Memory** %MEMORY
  %loadMem_45f88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5270 = getelementptr inbounds %struct.GPR, %struct.GPR* %5269, i32 0, i32 33
  %5271 = getelementptr inbounds %struct.Reg, %struct.Reg* %5270, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %5271 to i64*
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5273 = getelementptr inbounds %struct.GPR, %struct.GPR* %5272, i32 0, i32 7
  %5274 = getelementptr inbounds %struct.Reg, %struct.Reg* %5273, i32 0, i32 0
  %RDX.i1163 = bitcast %union.anon* %5274 to i64*
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5276 = getelementptr inbounds %struct.GPR, %struct.GPR* %5275, i32 0, i32 11
  %5277 = getelementptr inbounds %struct.Reg, %struct.Reg* %5276, i32 0, i32 0
  %RDI.i1164 = bitcast %union.anon* %5277 to i64*
  %5278 = load i64, i64* %RDI.i1164
  %5279 = load i64, i64* %RDX.i1163
  %5280 = load i64, i64* %PC.i1162
  %5281 = add i64 %5280, 3
  store i64 %5281, i64* %PC.i1162
  %5282 = add i64 %5279, %5278
  store i64 %5282, i64* %RDI.i1164, align 8
  %5283 = icmp ult i64 %5282, %5278
  %5284 = icmp ult i64 %5282, %5279
  %5285 = or i1 %5283, %5284
  %5286 = zext i1 %5285 to i8
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5286, i8* %5287, align 1
  %5288 = trunc i64 %5282 to i32
  %5289 = and i32 %5288, 255
  %5290 = call i32 @llvm.ctpop.i32(i32 %5289)
  %5291 = trunc i32 %5290 to i8
  %5292 = and i8 %5291, 1
  %5293 = xor i8 %5292, 1
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5293, i8* %5294, align 1
  %5295 = xor i64 %5279, %5278
  %5296 = xor i64 %5295, %5282
  %5297 = lshr i64 %5296, 4
  %5298 = trunc i64 %5297 to i8
  %5299 = and i8 %5298, 1
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5299, i8* %5300, align 1
  %5301 = icmp eq i64 %5282, 0
  %5302 = zext i1 %5301 to i8
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5302, i8* %5303, align 1
  %5304 = lshr i64 %5282, 63
  %5305 = trunc i64 %5304 to i8
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5305, i8* %5306, align 1
  %5307 = lshr i64 %5278, 63
  %5308 = lshr i64 %5279, 63
  %5309 = xor i64 %5304, %5307
  %5310 = xor i64 %5304, %5308
  %5311 = add i64 %5309, %5310
  %5312 = icmp eq i64 %5311, 2
  %5313 = zext i1 %5312 to i8
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5313, i8* %5314, align 1
  store %struct.Memory* %loadMem_45f88f, %struct.Memory** %MEMORY
  %loadMem_45f892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5316 = getelementptr inbounds %struct.GPR, %struct.GPR* %5315, i32 0, i32 33
  %5317 = getelementptr inbounds %struct.Reg, %struct.Reg* %5316, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %5317 to i64*
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 9
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %RSI.i1160 = bitcast %union.anon* %5320 to i64*
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5322 = getelementptr inbounds %struct.GPR, %struct.GPR* %5321, i32 0, i32 11
  %5323 = getelementptr inbounds %struct.Reg, %struct.Reg* %5322, i32 0, i32 0
  %RDI.i1161 = bitcast %union.anon* %5323 to i64*
  %5324 = load i64, i64* %RDI.i1161
  %5325 = add i64 %5324, 16
  %5326 = load i64, i64* %PC.i1159
  %5327 = add i64 %5326, 3
  store i64 %5327, i64* %PC.i1159
  %5328 = inttoptr i64 %5325 to i32*
  %5329 = load i32, i32* %5328
  %5330 = zext i32 %5329 to i64
  store i64 %5330, i64* %RSI.i1160, align 8
  store %struct.Memory* %loadMem_45f892, %struct.Memory** %MEMORY
  %loadMem_45f895 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5332 = getelementptr inbounds %struct.GPR, %struct.GPR* %5331, i32 0, i32 33
  %5333 = getelementptr inbounds %struct.Reg, %struct.Reg* %5332, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %5333 to i64*
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5335 = getelementptr inbounds %struct.GPR, %struct.GPR* %5334, i32 0, i32 7
  %5336 = getelementptr inbounds %struct.Reg, %struct.Reg* %5335, i32 0, i32 0
  %RDX.i1157 = bitcast %union.anon* %5336 to i64*
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 15
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %5339 to i64*
  %5340 = load i64, i64* %RBP.i1158
  %5341 = sub i64 %5340, 20
  %5342 = load i64, i64* %PC.i1156
  %5343 = add i64 %5342, 4
  store i64 %5343, i64* %PC.i1156
  %5344 = inttoptr i64 %5341 to i32*
  %5345 = load i32, i32* %5344
  %5346 = sext i32 %5345 to i64
  store i64 %5346, i64* %RDX.i1157, align 8
  store %struct.Memory* %loadMem_45f895, %struct.Memory** %MEMORY
  %loadMem_45f899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 33
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %5349 to i64*
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 7
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %RDX.i1155 = bitcast %union.anon* %5352 to i64*
  %5353 = load i64, i64* %RDX.i1155
  %5354 = load i64, i64* %PC.i1154
  %5355 = add i64 %5354, 4
  store i64 %5355, i64* %PC.i1154
  %5356 = shl i64 %5353, 4
  %5357 = icmp slt i64 %5356, 0
  %5358 = shl i64 %5356, 1
  store i64 %5358, i64* %RDX.i1155, align 8
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5360 = zext i1 %5357 to i8
  store i8 %5360, i8* %5359, align 1
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5362 = trunc i64 %5358 to i32
  %5363 = and i32 %5362, 254
  %5364 = call i32 @llvm.ctpop.i32(i32 %5363)
  %5365 = trunc i32 %5364 to i8
  %5366 = and i8 %5365, 1
  %5367 = xor i8 %5366, 1
  store i8 %5367, i8* %5361, align 1
  %5368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5368, align 1
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5370 = icmp eq i64 %5358, 0
  %5371 = zext i1 %5370 to i8
  store i8 %5371, i8* %5369, align 1
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5373 = lshr i64 %5358, 63
  %5374 = trunc i64 %5373 to i8
  store i8 %5374, i8* %5372, align 1
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5375, align 1
  store %struct.Memory* %loadMem_45f899, %struct.Memory** %MEMORY
  %loadMem_45f89d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5377 = getelementptr inbounds %struct.GPR, %struct.GPR* %5376, i32 0, i32 33
  %5378 = getelementptr inbounds %struct.Reg, %struct.Reg* %5377, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %5378 to i64*
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5380 = getelementptr inbounds %struct.GPR, %struct.GPR* %5379, i32 0, i32 1
  %5381 = getelementptr inbounds %struct.Reg, %struct.Reg* %5380, i32 0, i32 0
  %RAX.i1152 = bitcast %union.anon* %5381 to i64*
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5383 = getelementptr inbounds %struct.GPR, %struct.GPR* %5382, i32 0, i32 11
  %5384 = getelementptr inbounds %struct.Reg, %struct.Reg* %5383, i32 0, i32 0
  %RDI.i1153 = bitcast %union.anon* %5384 to i64*
  %5385 = load i64, i64* %RAX.i1152
  %5386 = load i64, i64* %PC.i1151
  %5387 = add i64 %5386, 3
  store i64 %5387, i64* %PC.i1151
  store i64 %5385, i64* %RDI.i1153, align 8
  store %struct.Memory* %loadMem_45f89d, %struct.Memory** %MEMORY
  %loadMem_45f8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5389 = getelementptr inbounds %struct.GPR, %struct.GPR* %5388, i32 0, i32 33
  %5390 = getelementptr inbounds %struct.Reg, %struct.Reg* %5389, i32 0, i32 0
  %PC.i1148 = bitcast %union.anon* %5390 to i64*
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5392 = getelementptr inbounds %struct.GPR, %struct.GPR* %5391, i32 0, i32 7
  %5393 = getelementptr inbounds %struct.Reg, %struct.Reg* %5392, i32 0, i32 0
  %RDX.i1149 = bitcast %union.anon* %5393 to i64*
  %5394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5395 = getelementptr inbounds %struct.GPR, %struct.GPR* %5394, i32 0, i32 11
  %5396 = getelementptr inbounds %struct.Reg, %struct.Reg* %5395, i32 0, i32 0
  %RDI.i1150 = bitcast %union.anon* %5396 to i64*
  %5397 = load i64, i64* %RDI.i1150
  %5398 = load i64, i64* %RDX.i1149
  %5399 = load i64, i64* %PC.i1148
  %5400 = add i64 %5399, 3
  store i64 %5400, i64* %PC.i1148
  %5401 = add i64 %5398, %5397
  store i64 %5401, i64* %RDI.i1150, align 8
  %5402 = icmp ult i64 %5401, %5397
  %5403 = icmp ult i64 %5401, %5398
  %5404 = or i1 %5402, %5403
  %5405 = zext i1 %5404 to i8
  %5406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5405, i8* %5406, align 1
  %5407 = trunc i64 %5401 to i32
  %5408 = and i32 %5407, 255
  %5409 = call i32 @llvm.ctpop.i32(i32 %5408)
  %5410 = trunc i32 %5409 to i8
  %5411 = and i8 %5410, 1
  %5412 = xor i8 %5411, 1
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5412, i8* %5413, align 1
  %5414 = xor i64 %5398, %5397
  %5415 = xor i64 %5414, %5401
  %5416 = lshr i64 %5415, 4
  %5417 = trunc i64 %5416 to i8
  %5418 = and i8 %5417, 1
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5418, i8* %5419, align 1
  %5420 = icmp eq i64 %5401, 0
  %5421 = zext i1 %5420 to i8
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5421, i8* %5422, align 1
  %5423 = lshr i64 %5401, 63
  %5424 = trunc i64 %5423 to i8
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5424, i8* %5425, align 1
  %5426 = lshr i64 %5397, 63
  %5427 = lshr i64 %5398, 63
  %5428 = xor i64 %5423, %5426
  %5429 = xor i64 %5423, %5427
  %5430 = add i64 %5428, %5429
  %5431 = icmp eq i64 %5430, 2
  %5432 = zext i1 %5431 to i8
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5432, i8* %5433, align 1
  store %struct.Memory* %loadMem_45f8a0, %struct.Memory** %MEMORY
  %loadMem_45f8a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5435 = getelementptr inbounds %struct.GPR, %struct.GPR* %5434, i32 0, i32 33
  %5436 = getelementptr inbounds %struct.Reg, %struct.Reg* %5435, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %5436 to i64*
  %5437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5438 = getelementptr inbounds %struct.GPR, %struct.GPR* %5437, i32 0, i32 9
  %5439 = getelementptr inbounds %struct.Reg, %struct.Reg* %5438, i32 0, i32 0
  %RSI.i1146 = bitcast %union.anon* %5439 to i64*
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5441 = getelementptr inbounds %struct.GPR, %struct.GPR* %5440, i32 0, i32 11
  %5442 = getelementptr inbounds %struct.Reg, %struct.Reg* %5441, i32 0, i32 0
  %RDI.i1147 = bitcast %union.anon* %5442 to i64*
  %5443 = load i64, i64* %RSI.i1146
  %5444 = load i64, i64* %RDI.i1147
  %5445 = add i64 %5444, 24
  %5446 = load i64, i64* %PC.i1145
  %5447 = add i64 %5446, 3
  store i64 %5447, i64* %PC.i1145
  %5448 = trunc i64 %5443 to i32
  %5449 = inttoptr i64 %5445 to i32*
  %5450 = load i32, i32* %5449
  %5451 = add i32 %5450, %5448
  %5452 = zext i32 %5451 to i64
  store i64 %5452, i64* %RSI.i1146, align 8
  %5453 = icmp ult i32 %5451, %5448
  %5454 = icmp ult i32 %5451, %5450
  %5455 = or i1 %5453, %5454
  %5456 = zext i1 %5455 to i8
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5456, i8* %5457, align 1
  %5458 = and i32 %5451, 255
  %5459 = call i32 @llvm.ctpop.i32(i32 %5458)
  %5460 = trunc i32 %5459 to i8
  %5461 = and i8 %5460, 1
  %5462 = xor i8 %5461, 1
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5462, i8* %5463, align 1
  %5464 = xor i32 %5450, %5448
  %5465 = xor i32 %5464, %5451
  %5466 = lshr i32 %5465, 4
  %5467 = trunc i32 %5466 to i8
  %5468 = and i8 %5467, 1
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5468, i8* %5469, align 1
  %5470 = icmp eq i32 %5451, 0
  %5471 = zext i1 %5470 to i8
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5471, i8* %5472, align 1
  %5473 = lshr i32 %5451, 31
  %5474 = trunc i32 %5473 to i8
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5474, i8* %5475, align 1
  %5476 = lshr i32 %5448, 31
  %5477 = lshr i32 %5450, 31
  %5478 = xor i32 %5473, %5476
  %5479 = xor i32 %5473, %5477
  %5480 = add i32 %5478, %5479
  %5481 = icmp eq i32 %5480, 2
  %5482 = zext i1 %5481 to i8
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5482, i8* %5483, align 1
  store %struct.Memory* %loadMem_45f8a3, %struct.Memory** %MEMORY
  %loadMem_45f8a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 33
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %5486 to i64*
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5488 = getelementptr inbounds %struct.GPR, %struct.GPR* %5487, i32 0, i32 7
  %5489 = getelementptr inbounds %struct.Reg, %struct.Reg* %5488, i32 0, i32 0
  %RDX.i1143 = bitcast %union.anon* %5489 to i64*
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5491 = getelementptr inbounds %struct.GPR, %struct.GPR* %5490, i32 0, i32 15
  %5492 = getelementptr inbounds %struct.Reg, %struct.Reg* %5491, i32 0, i32 0
  %RBP.i1144 = bitcast %union.anon* %5492 to i64*
  %5493 = load i64, i64* %RBP.i1144
  %5494 = sub i64 %5493, 20
  %5495 = load i64, i64* %PC.i1142
  %5496 = add i64 %5495, 4
  store i64 %5496, i64* %PC.i1142
  %5497 = inttoptr i64 %5494 to i32*
  %5498 = load i32, i32* %5497
  %5499 = sext i32 %5498 to i64
  store i64 %5499, i64* %RDX.i1143, align 8
  store %struct.Memory* %loadMem_45f8a6, %struct.Memory** %MEMORY
  %loadMem_45f8aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 33
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %5502 to i64*
  %5503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5504 = getelementptr inbounds %struct.GPR, %struct.GPR* %5503, i32 0, i32 7
  %5505 = getelementptr inbounds %struct.Reg, %struct.Reg* %5504, i32 0, i32 0
  %RDX.i1141 = bitcast %union.anon* %5505 to i64*
  %5506 = load i64, i64* %RDX.i1141
  %5507 = load i64, i64* %PC.i1140
  %5508 = add i64 %5507, 4
  store i64 %5508, i64* %PC.i1140
  %5509 = shl i64 %5506, 4
  %5510 = icmp slt i64 %5509, 0
  %5511 = shl i64 %5509, 1
  store i64 %5511, i64* %RDX.i1141, align 8
  %5512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5513 = zext i1 %5510 to i8
  store i8 %5513, i8* %5512, align 1
  %5514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5515 = trunc i64 %5511 to i32
  %5516 = and i32 %5515, 254
  %5517 = call i32 @llvm.ctpop.i32(i32 %5516)
  %5518 = trunc i32 %5517 to i8
  %5519 = and i8 %5518, 1
  %5520 = xor i8 %5519, 1
  store i8 %5520, i8* %5514, align 1
  %5521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5521, align 1
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5523 = icmp eq i64 %5511, 0
  %5524 = zext i1 %5523 to i8
  store i8 %5524, i8* %5522, align 1
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5526 = lshr i64 %5511, 63
  %5527 = trunc i64 %5526 to i8
  store i8 %5527, i8* %5525, align 1
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5528, align 1
  store %struct.Memory* %loadMem_45f8aa, %struct.Memory** %MEMORY
  %loadMem_45f8ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5530 = getelementptr inbounds %struct.GPR, %struct.GPR* %5529, i32 0, i32 33
  %5531 = getelementptr inbounds %struct.Reg, %struct.Reg* %5530, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %5531 to i64*
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5533 = getelementptr inbounds %struct.GPR, %struct.GPR* %5532, i32 0, i32 5
  %5534 = getelementptr inbounds %struct.Reg, %struct.Reg* %5533, i32 0, i32 0
  %RCX.i1138 = bitcast %union.anon* %5534 to i64*
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 11
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %RDI.i1139 = bitcast %union.anon* %5537 to i64*
  %5538 = load i64, i64* %RCX.i1138
  %5539 = load i64, i64* %PC.i1137
  %5540 = add i64 %5539, 3
  store i64 %5540, i64* %PC.i1137
  store i64 %5538, i64* %RDI.i1139, align 8
  store %struct.Memory* %loadMem_45f8ae, %struct.Memory** %MEMORY
  %loadMem_45f8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5542 = getelementptr inbounds %struct.GPR, %struct.GPR* %5541, i32 0, i32 33
  %5543 = getelementptr inbounds %struct.Reg, %struct.Reg* %5542, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %5543 to i64*
  %5544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5545 = getelementptr inbounds %struct.GPR, %struct.GPR* %5544, i32 0, i32 7
  %5546 = getelementptr inbounds %struct.Reg, %struct.Reg* %5545, i32 0, i32 0
  %RDX.i1135 = bitcast %union.anon* %5546 to i64*
  %5547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5548 = getelementptr inbounds %struct.GPR, %struct.GPR* %5547, i32 0, i32 11
  %5549 = getelementptr inbounds %struct.Reg, %struct.Reg* %5548, i32 0, i32 0
  %RDI.i1136 = bitcast %union.anon* %5549 to i64*
  %5550 = load i64, i64* %RDI.i1136
  %5551 = load i64, i64* %RDX.i1135
  %5552 = load i64, i64* %PC.i1134
  %5553 = add i64 %5552, 3
  store i64 %5553, i64* %PC.i1134
  %5554 = add i64 %5551, %5550
  store i64 %5554, i64* %RDI.i1136, align 8
  %5555 = icmp ult i64 %5554, %5550
  %5556 = icmp ult i64 %5554, %5551
  %5557 = or i1 %5555, %5556
  %5558 = zext i1 %5557 to i8
  %5559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5558, i8* %5559, align 1
  %5560 = trunc i64 %5554 to i32
  %5561 = and i32 %5560, 255
  %5562 = call i32 @llvm.ctpop.i32(i32 %5561)
  %5563 = trunc i32 %5562 to i8
  %5564 = and i8 %5563, 1
  %5565 = xor i8 %5564, 1
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5565, i8* %5566, align 1
  %5567 = xor i64 %5551, %5550
  %5568 = xor i64 %5567, %5554
  %5569 = lshr i64 %5568, 4
  %5570 = trunc i64 %5569 to i8
  %5571 = and i8 %5570, 1
  %5572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5571, i8* %5572, align 1
  %5573 = icmp eq i64 %5554, 0
  %5574 = zext i1 %5573 to i8
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5574, i8* %5575, align 1
  %5576 = lshr i64 %5554, 63
  %5577 = trunc i64 %5576 to i8
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5577, i8* %5578, align 1
  %5579 = lshr i64 %5550, 63
  %5580 = lshr i64 %5551, 63
  %5581 = xor i64 %5576, %5579
  %5582 = xor i64 %5576, %5580
  %5583 = add i64 %5581, %5582
  %5584 = icmp eq i64 %5583, 2
  %5585 = zext i1 %5584 to i8
  %5586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5585, i8* %5586, align 1
  store %struct.Memory* %loadMem_45f8b1, %struct.Memory** %MEMORY
  %loadMem_45f8b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5588 = getelementptr inbounds %struct.GPR, %struct.GPR* %5587, i32 0, i32 33
  %5589 = getelementptr inbounds %struct.Reg, %struct.Reg* %5588, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %5589 to i64*
  %5590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5591 = getelementptr inbounds %struct.GPR, %struct.GPR* %5590, i32 0, i32 9
  %5592 = getelementptr inbounds %struct.Reg, %struct.Reg* %5591, i32 0, i32 0
  %ESI.i1132 = bitcast %union.anon* %5592 to i32*
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5594 = getelementptr inbounds %struct.GPR, %struct.GPR* %5593, i32 0, i32 11
  %5595 = getelementptr inbounds %struct.Reg, %struct.Reg* %5594, i32 0, i32 0
  %RDI.i1133 = bitcast %union.anon* %5595 to i64*
  %5596 = load i64, i64* %RDI.i1133
  %5597 = add i64 %5596, 16
  %5598 = load i32, i32* %ESI.i1132
  %5599 = zext i32 %5598 to i64
  %5600 = load i64, i64* %PC.i1131
  %5601 = add i64 %5600, 3
  store i64 %5601, i64* %PC.i1131
  %5602 = inttoptr i64 %5597 to i32*
  store i32 %5598, i32* %5602
  store %struct.Memory* %loadMem_45f8b4, %struct.Memory** %MEMORY
  %loadMem_45f8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5604 = getelementptr inbounds %struct.GPR, %struct.GPR* %5603, i32 0, i32 33
  %5605 = getelementptr inbounds %struct.Reg, %struct.Reg* %5604, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %5605 to i64*
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5607 = getelementptr inbounds %struct.GPR, %struct.GPR* %5606, i32 0, i32 7
  %5608 = getelementptr inbounds %struct.Reg, %struct.Reg* %5607, i32 0, i32 0
  %RDX.i1129 = bitcast %union.anon* %5608 to i64*
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5610 = getelementptr inbounds %struct.GPR, %struct.GPR* %5609, i32 0, i32 15
  %5611 = getelementptr inbounds %struct.Reg, %struct.Reg* %5610, i32 0, i32 0
  %RBP.i1130 = bitcast %union.anon* %5611 to i64*
  %5612 = load i64, i64* %RBP.i1130
  %5613 = sub i64 %5612, 20
  %5614 = load i64, i64* %PC.i1128
  %5615 = add i64 %5614, 4
  store i64 %5615, i64* %PC.i1128
  %5616 = inttoptr i64 %5613 to i32*
  %5617 = load i32, i32* %5616
  %5618 = sext i32 %5617 to i64
  store i64 %5618, i64* %RDX.i1129, align 8
  store %struct.Memory* %loadMem_45f8b7, %struct.Memory** %MEMORY
  %loadMem_45f8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5620 = getelementptr inbounds %struct.GPR, %struct.GPR* %5619, i32 0, i32 33
  %5621 = getelementptr inbounds %struct.Reg, %struct.Reg* %5620, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %5621 to i64*
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5623 = getelementptr inbounds %struct.GPR, %struct.GPR* %5622, i32 0, i32 7
  %5624 = getelementptr inbounds %struct.Reg, %struct.Reg* %5623, i32 0, i32 0
  %RDX.i1127 = bitcast %union.anon* %5624 to i64*
  %5625 = load i64, i64* %RDX.i1127
  %5626 = load i64, i64* %PC.i1126
  %5627 = add i64 %5626, 4
  store i64 %5627, i64* %PC.i1126
  %5628 = shl i64 %5625, 4
  %5629 = icmp slt i64 %5628, 0
  %5630 = shl i64 %5628, 1
  store i64 %5630, i64* %RDX.i1127, align 8
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5632 = zext i1 %5629 to i8
  store i8 %5632, i8* %5631, align 1
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5634 = trunc i64 %5630 to i32
  %5635 = and i32 %5634, 254
  %5636 = call i32 @llvm.ctpop.i32(i32 %5635)
  %5637 = trunc i32 %5636 to i8
  %5638 = and i8 %5637, 1
  %5639 = xor i8 %5638, 1
  store i8 %5639, i8* %5633, align 1
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5640, align 1
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5642 = icmp eq i64 %5630, 0
  %5643 = zext i1 %5642 to i8
  store i8 %5643, i8* %5641, align 1
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5645 = lshr i64 %5630, 63
  %5646 = trunc i64 %5645 to i8
  store i8 %5646, i8* %5644, align 1
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5647, align 1
  store %struct.Memory* %loadMem_45f8bb, %struct.Memory** %MEMORY
  %loadMem_45f8bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5649 = getelementptr inbounds %struct.GPR, %struct.GPR* %5648, i32 0, i32 33
  %5650 = getelementptr inbounds %struct.Reg, %struct.Reg* %5649, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %5650 to i64*
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5652 = getelementptr inbounds %struct.GPR, %struct.GPR* %5651, i32 0, i32 1
  %5653 = getelementptr inbounds %struct.Reg, %struct.Reg* %5652, i32 0, i32 0
  %RAX.i1124 = bitcast %union.anon* %5653 to i64*
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5655 = getelementptr inbounds %struct.GPR, %struct.GPR* %5654, i32 0, i32 11
  %5656 = getelementptr inbounds %struct.Reg, %struct.Reg* %5655, i32 0, i32 0
  %RDI.i1125 = bitcast %union.anon* %5656 to i64*
  %5657 = load i64, i64* %RAX.i1124
  %5658 = load i64, i64* %PC.i1123
  %5659 = add i64 %5658, 3
  store i64 %5659, i64* %PC.i1123
  store i64 %5657, i64* %RDI.i1125, align 8
  store %struct.Memory* %loadMem_45f8bf, %struct.Memory** %MEMORY
  %loadMem_45f8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5661 = getelementptr inbounds %struct.GPR, %struct.GPR* %5660, i32 0, i32 33
  %5662 = getelementptr inbounds %struct.Reg, %struct.Reg* %5661, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %5662 to i64*
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5664 = getelementptr inbounds %struct.GPR, %struct.GPR* %5663, i32 0, i32 7
  %5665 = getelementptr inbounds %struct.Reg, %struct.Reg* %5664, i32 0, i32 0
  %RDX.i1121 = bitcast %union.anon* %5665 to i64*
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 11
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %RDI.i1122 = bitcast %union.anon* %5668 to i64*
  %5669 = load i64, i64* %RDI.i1122
  %5670 = load i64, i64* %RDX.i1121
  %5671 = load i64, i64* %PC.i1120
  %5672 = add i64 %5671, 3
  store i64 %5672, i64* %PC.i1120
  %5673 = add i64 %5670, %5669
  store i64 %5673, i64* %RDI.i1122, align 8
  %5674 = icmp ult i64 %5673, %5669
  %5675 = icmp ult i64 %5673, %5670
  %5676 = or i1 %5674, %5675
  %5677 = zext i1 %5676 to i8
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5677, i8* %5678, align 1
  %5679 = trunc i64 %5673 to i32
  %5680 = and i32 %5679, 255
  %5681 = call i32 @llvm.ctpop.i32(i32 %5680)
  %5682 = trunc i32 %5681 to i8
  %5683 = and i8 %5682, 1
  %5684 = xor i8 %5683, 1
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5684, i8* %5685, align 1
  %5686 = xor i64 %5670, %5669
  %5687 = xor i64 %5686, %5673
  %5688 = lshr i64 %5687, 4
  %5689 = trunc i64 %5688 to i8
  %5690 = and i8 %5689, 1
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5690, i8* %5691, align 1
  %5692 = icmp eq i64 %5673, 0
  %5693 = zext i1 %5692 to i8
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5693, i8* %5694, align 1
  %5695 = lshr i64 %5673, 63
  %5696 = trunc i64 %5695 to i8
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5696, i8* %5697, align 1
  %5698 = lshr i64 %5669, 63
  %5699 = lshr i64 %5670, 63
  %5700 = xor i64 %5695, %5698
  %5701 = xor i64 %5695, %5699
  %5702 = add i64 %5700, %5701
  %5703 = icmp eq i64 %5702, 2
  %5704 = zext i1 %5703 to i8
  %5705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5704, i8* %5705, align 1
  store %struct.Memory* %loadMem_45f8c2, %struct.Memory** %MEMORY
  %loadMem_45f8c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5707 = getelementptr inbounds %struct.GPR, %struct.GPR* %5706, i32 0, i32 33
  %5708 = getelementptr inbounds %struct.Reg, %struct.Reg* %5707, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %5708 to i64*
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5710 = getelementptr inbounds %struct.GPR, %struct.GPR* %5709, i32 0, i32 9
  %5711 = getelementptr inbounds %struct.Reg, %struct.Reg* %5710, i32 0, i32 0
  %RSI.i1118 = bitcast %union.anon* %5711 to i64*
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5713 = getelementptr inbounds %struct.GPR, %struct.GPR* %5712, i32 0, i32 11
  %5714 = getelementptr inbounds %struct.Reg, %struct.Reg* %5713, i32 0, i32 0
  %RDI.i1119 = bitcast %union.anon* %5714 to i64*
  %5715 = load i64, i64* %RDI.i1119
  %5716 = add i64 %5715, 20
  %5717 = load i64, i64* %PC.i1117
  %5718 = add i64 %5717, 3
  store i64 %5718, i64* %PC.i1117
  %5719 = inttoptr i64 %5716 to i32*
  %5720 = load i32, i32* %5719
  %5721 = zext i32 %5720 to i64
  store i64 %5721, i64* %RSI.i1118, align 8
  store %struct.Memory* %loadMem_45f8c5, %struct.Memory** %MEMORY
  %loadMem_45f8c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5723 = getelementptr inbounds %struct.GPR, %struct.GPR* %5722, i32 0, i32 33
  %5724 = getelementptr inbounds %struct.Reg, %struct.Reg* %5723, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %5724 to i64*
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5726 = getelementptr inbounds %struct.GPR, %struct.GPR* %5725, i32 0, i32 7
  %5727 = getelementptr inbounds %struct.Reg, %struct.Reg* %5726, i32 0, i32 0
  %RDX.i1115 = bitcast %union.anon* %5727 to i64*
  %5728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5729 = getelementptr inbounds %struct.GPR, %struct.GPR* %5728, i32 0, i32 15
  %5730 = getelementptr inbounds %struct.Reg, %struct.Reg* %5729, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %5730 to i64*
  %5731 = load i64, i64* %RBP.i1116
  %5732 = sub i64 %5731, 20
  %5733 = load i64, i64* %PC.i1114
  %5734 = add i64 %5733, 4
  store i64 %5734, i64* %PC.i1114
  %5735 = inttoptr i64 %5732 to i32*
  %5736 = load i32, i32* %5735
  %5737 = sext i32 %5736 to i64
  store i64 %5737, i64* %RDX.i1115, align 8
  store %struct.Memory* %loadMem_45f8c8, %struct.Memory** %MEMORY
  %loadMem_45f8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5739 = getelementptr inbounds %struct.GPR, %struct.GPR* %5738, i32 0, i32 33
  %5740 = getelementptr inbounds %struct.Reg, %struct.Reg* %5739, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %5740 to i64*
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5742 = getelementptr inbounds %struct.GPR, %struct.GPR* %5741, i32 0, i32 7
  %5743 = getelementptr inbounds %struct.Reg, %struct.Reg* %5742, i32 0, i32 0
  %RDX.i1113 = bitcast %union.anon* %5743 to i64*
  %5744 = load i64, i64* %RDX.i1113
  %5745 = load i64, i64* %PC.i1112
  %5746 = add i64 %5745, 4
  store i64 %5746, i64* %PC.i1112
  %5747 = shl i64 %5744, 4
  %5748 = icmp slt i64 %5747, 0
  %5749 = shl i64 %5747, 1
  store i64 %5749, i64* %RDX.i1113, align 8
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5751 = zext i1 %5748 to i8
  store i8 %5751, i8* %5750, align 1
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5753 = trunc i64 %5749 to i32
  %5754 = and i32 %5753, 254
  %5755 = call i32 @llvm.ctpop.i32(i32 %5754)
  %5756 = trunc i32 %5755 to i8
  %5757 = and i8 %5756, 1
  %5758 = xor i8 %5757, 1
  store i8 %5758, i8* %5752, align 1
  %5759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5759, align 1
  %5760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5761 = icmp eq i64 %5749, 0
  %5762 = zext i1 %5761 to i8
  store i8 %5762, i8* %5760, align 1
  %5763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5764 = lshr i64 %5749, 63
  %5765 = trunc i64 %5764 to i8
  store i8 %5765, i8* %5763, align 1
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5766, align 1
  store %struct.Memory* %loadMem_45f8cc, %struct.Memory** %MEMORY
  %loadMem_45f8d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5768 = getelementptr inbounds %struct.GPR, %struct.GPR* %5767, i32 0, i32 33
  %5769 = getelementptr inbounds %struct.Reg, %struct.Reg* %5768, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %5769 to i64*
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5771 = getelementptr inbounds %struct.GPR, %struct.GPR* %5770, i32 0, i32 1
  %5772 = getelementptr inbounds %struct.Reg, %struct.Reg* %5771, i32 0, i32 0
  %RAX.i1110 = bitcast %union.anon* %5772 to i64*
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5774 = getelementptr inbounds %struct.GPR, %struct.GPR* %5773, i32 0, i32 11
  %5775 = getelementptr inbounds %struct.Reg, %struct.Reg* %5774, i32 0, i32 0
  %RDI.i1111 = bitcast %union.anon* %5775 to i64*
  %5776 = load i64, i64* %RAX.i1110
  %5777 = load i64, i64* %PC.i1109
  %5778 = add i64 %5777, 3
  store i64 %5778, i64* %PC.i1109
  store i64 %5776, i64* %RDI.i1111, align 8
  store %struct.Memory* %loadMem_45f8d0, %struct.Memory** %MEMORY
  %loadMem_45f8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5780 = getelementptr inbounds %struct.GPR, %struct.GPR* %5779, i32 0, i32 33
  %5781 = getelementptr inbounds %struct.Reg, %struct.Reg* %5780, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %5781 to i64*
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 7
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %RDX.i1107 = bitcast %union.anon* %5784 to i64*
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 11
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %RDI.i1108 = bitcast %union.anon* %5787 to i64*
  %5788 = load i64, i64* %RDI.i1108
  %5789 = load i64, i64* %RDX.i1107
  %5790 = load i64, i64* %PC.i1106
  %5791 = add i64 %5790, 3
  store i64 %5791, i64* %PC.i1106
  %5792 = add i64 %5789, %5788
  store i64 %5792, i64* %RDI.i1108, align 8
  %5793 = icmp ult i64 %5792, %5788
  %5794 = icmp ult i64 %5792, %5789
  %5795 = or i1 %5793, %5794
  %5796 = zext i1 %5795 to i8
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5796, i8* %5797, align 1
  %5798 = trunc i64 %5792 to i32
  %5799 = and i32 %5798, 255
  %5800 = call i32 @llvm.ctpop.i32(i32 %5799)
  %5801 = trunc i32 %5800 to i8
  %5802 = and i8 %5801, 1
  %5803 = xor i8 %5802, 1
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5803, i8* %5804, align 1
  %5805 = xor i64 %5789, %5788
  %5806 = xor i64 %5805, %5792
  %5807 = lshr i64 %5806, 4
  %5808 = trunc i64 %5807 to i8
  %5809 = and i8 %5808, 1
  %5810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5809, i8* %5810, align 1
  %5811 = icmp eq i64 %5792, 0
  %5812 = zext i1 %5811 to i8
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5812, i8* %5813, align 1
  %5814 = lshr i64 %5792, 63
  %5815 = trunc i64 %5814 to i8
  %5816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5815, i8* %5816, align 1
  %5817 = lshr i64 %5788, 63
  %5818 = lshr i64 %5789, 63
  %5819 = xor i64 %5814, %5817
  %5820 = xor i64 %5814, %5818
  %5821 = add i64 %5819, %5820
  %5822 = icmp eq i64 %5821, 2
  %5823 = zext i1 %5822 to i8
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5823, i8* %5824, align 1
  store %struct.Memory* %loadMem_45f8d3, %struct.Memory** %MEMORY
  %loadMem_45f8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5826 = getelementptr inbounds %struct.GPR, %struct.GPR* %5825, i32 0, i32 33
  %5827 = getelementptr inbounds %struct.Reg, %struct.Reg* %5826, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %5827 to i64*
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 9
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %RSI.i1104 = bitcast %union.anon* %5830 to i64*
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 11
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %RDI.i1105 = bitcast %union.anon* %5833 to i64*
  %5834 = load i64, i64* %RSI.i1104
  %5835 = load i64, i64* %RDI.i1105
  %5836 = add i64 %5835, 28
  %5837 = load i64, i64* %PC.i1103
  %5838 = add i64 %5837, 3
  store i64 %5838, i64* %PC.i1103
  %5839 = trunc i64 %5834 to i32
  %5840 = inttoptr i64 %5836 to i32*
  %5841 = load i32, i32* %5840
  %5842 = add i32 %5841, %5839
  %5843 = zext i32 %5842 to i64
  store i64 %5843, i64* %RSI.i1104, align 8
  %5844 = icmp ult i32 %5842, %5839
  %5845 = icmp ult i32 %5842, %5841
  %5846 = or i1 %5844, %5845
  %5847 = zext i1 %5846 to i8
  %5848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5847, i8* %5848, align 1
  %5849 = and i32 %5842, 255
  %5850 = call i32 @llvm.ctpop.i32(i32 %5849)
  %5851 = trunc i32 %5850 to i8
  %5852 = and i8 %5851, 1
  %5853 = xor i8 %5852, 1
  %5854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5853, i8* %5854, align 1
  %5855 = xor i32 %5841, %5839
  %5856 = xor i32 %5855, %5842
  %5857 = lshr i32 %5856, 4
  %5858 = trunc i32 %5857 to i8
  %5859 = and i8 %5858, 1
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5859, i8* %5860, align 1
  %5861 = icmp eq i32 %5842, 0
  %5862 = zext i1 %5861 to i8
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5862, i8* %5863, align 1
  %5864 = lshr i32 %5842, 31
  %5865 = trunc i32 %5864 to i8
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5865, i8* %5866, align 1
  %5867 = lshr i32 %5839, 31
  %5868 = lshr i32 %5841, 31
  %5869 = xor i32 %5864, %5867
  %5870 = xor i32 %5864, %5868
  %5871 = add i32 %5869, %5870
  %5872 = icmp eq i32 %5871, 2
  %5873 = zext i1 %5872 to i8
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5873, i8* %5874, align 1
  store %struct.Memory* %loadMem_45f8d6, %struct.Memory** %MEMORY
  %loadMem_45f8d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5876 = getelementptr inbounds %struct.GPR, %struct.GPR* %5875, i32 0, i32 33
  %5877 = getelementptr inbounds %struct.Reg, %struct.Reg* %5876, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %5877 to i64*
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5879 = getelementptr inbounds %struct.GPR, %struct.GPR* %5878, i32 0, i32 7
  %5880 = getelementptr inbounds %struct.Reg, %struct.Reg* %5879, i32 0, i32 0
  %RDX.i1101 = bitcast %union.anon* %5880 to i64*
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5882 = getelementptr inbounds %struct.GPR, %struct.GPR* %5881, i32 0, i32 15
  %5883 = getelementptr inbounds %struct.Reg, %struct.Reg* %5882, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %5883 to i64*
  %5884 = load i64, i64* %RBP.i1102
  %5885 = sub i64 %5884, 20
  %5886 = load i64, i64* %PC.i1100
  %5887 = add i64 %5886, 4
  store i64 %5887, i64* %PC.i1100
  %5888 = inttoptr i64 %5885 to i32*
  %5889 = load i32, i32* %5888
  %5890 = sext i32 %5889 to i64
  store i64 %5890, i64* %RDX.i1101, align 8
  store %struct.Memory* %loadMem_45f8d9, %struct.Memory** %MEMORY
  %loadMem_45f8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5892 = getelementptr inbounds %struct.GPR, %struct.GPR* %5891, i32 0, i32 33
  %5893 = getelementptr inbounds %struct.Reg, %struct.Reg* %5892, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %5893 to i64*
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5895 = getelementptr inbounds %struct.GPR, %struct.GPR* %5894, i32 0, i32 7
  %5896 = getelementptr inbounds %struct.Reg, %struct.Reg* %5895, i32 0, i32 0
  %RDX.i1099 = bitcast %union.anon* %5896 to i64*
  %5897 = load i64, i64* %RDX.i1099
  %5898 = load i64, i64* %PC.i1098
  %5899 = add i64 %5898, 4
  store i64 %5899, i64* %PC.i1098
  %5900 = shl i64 %5897, 4
  %5901 = icmp slt i64 %5900, 0
  %5902 = shl i64 %5900, 1
  store i64 %5902, i64* %RDX.i1099, align 8
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %5904 = zext i1 %5901 to i8
  store i8 %5904, i8* %5903, align 1
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5906 = trunc i64 %5902 to i32
  %5907 = and i32 %5906, 254
  %5908 = call i32 @llvm.ctpop.i32(i32 %5907)
  %5909 = trunc i32 %5908 to i8
  %5910 = and i8 %5909, 1
  %5911 = xor i8 %5910, 1
  store i8 %5911, i8* %5905, align 1
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5912, align 1
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5914 = icmp eq i64 %5902, 0
  %5915 = zext i1 %5914 to i8
  store i8 %5915, i8* %5913, align 1
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5917 = lshr i64 %5902, 63
  %5918 = trunc i64 %5917 to i8
  store i8 %5918, i8* %5916, align 1
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5919, align 1
  store %struct.Memory* %loadMem_45f8dd, %struct.Memory** %MEMORY
  %loadMem_45f8e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5921 = getelementptr inbounds %struct.GPR, %struct.GPR* %5920, i32 0, i32 33
  %5922 = getelementptr inbounds %struct.Reg, %struct.Reg* %5921, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %5922 to i64*
  %5923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5924 = getelementptr inbounds %struct.GPR, %struct.GPR* %5923, i32 0, i32 5
  %5925 = getelementptr inbounds %struct.Reg, %struct.Reg* %5924, i32 0, i32 0
  %RCX.i1096 = bitcast %union.anon* %5925 to i64*
  %5926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5927 = getelementptr inbounds %struct.GPR, %struct.GPR* %5926, i32 0, i32 11
  %5928 = getelementptr inbounds %struct.Reg, %struct.Reg* %5927, i32 0, i32 0
  %RDI.i1097 = bitcast %union.anon* %5928 to i64*
  %5929 = load i64, i64* %RCX.i1096
  %5930 = load i64, i64* %PC.i1095
  %5931 = add i64 %5930, 3
  store i64 %5931, i64* %PC.i1095
  store i64 %5929, i64* %RDI.i1097, align 8
  store %struct.Memory* %loadMem_45f8e1, %struct.Memory** %MEMORY
  %loadMem_45f8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5933 = getelementptr inbounds %struct.GPR, %struct.GPR* %5932, i32 0, i32 33
  %5934 = getelementptr inbounds %struct.Reg, %struct.Reg* %5933, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %5934 to i64*
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5936 = getelementptr inbounds %struct.GPR, %struct.GPR* %5935, i32 0, i32 7
  %5937 = getelementptr inbounds %struct.Reg, %struct.Reg* %5936, i32 0, i32 0
  %RDX.i1093 = bitcast %union.anon* %5937 to i64*
  %5938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5939 = getelementptr inbounds %struct.GPR, %struct.GPR* %5938, i32 0, i32 11
  %5940 = getelementptr inbounds %struct.Reg, %struct.Reg* %5939, i32 0, i32 0
  %RDI.i1094 = bitcast %union.anon* %5940 to i64*
  %5941 = load i64, i64* %RDI.i1094
  %5942 = load i64, i64* %RDX.i1093
  %5943 = load i64, i64* %PC.i1092
  %5944 = add i64 %5943, 3
  store i64 %5944, i64* %PC.i1092
  %5945 = add i64 %5942, %5941
  store i64 %5945, i64* %RDI.i1094, align 8
  %5946 = icmp ult i64 %5945, %5941
  %5947 = icmp ult i64 %5945, %5942
  %5948 = or i1 %5946, %5947
  %5949 = zext i1 %5948 to i8
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5949, i8* %5950, align 1
  %5951 = trunc i64 %5945 to i32
  %5952 = and i32 %5951, 255
  %5953 = call i32 @llvm.ctpop.i32(i32 %5952)
  %5954 = trunc i32 %5953 to i8
  %5955 = and i8 %5954, 1
  %5956 = xor i8 %5955, 1
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5956, i8* %5957, align 1
  %5958 = xor i64 %5942, %5941
  %5959 = xor i64 %5958, %5945
  %5960 = lshr i64 %5959, 4
  %5961 = trunc i64 %5960 to i8
  %5962 = and i8 %5961, 1
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5962, i8* %5963, align 1
  %5964 = icmp eq i64 %5945, 0
  %5965 = zext i1 %5964 to i8
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5965, i8* %5966, align 1
  %5967 = lshr i64 %5945, 63
  %5968 = trunc i64 %5967 to i8
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5968, i8* %5969, align 1
  %5970 = lshr i64 %5941, 63
  %5971 = lshr i64 %5942, 63
  %5972 = xor i64 %5967, %5970
  %5973 = xor i64 %5967, %5971
  %5974 = add i64 %5972, %5973
  %5975 = icmp eq i64 %5974, 2
  %5976 = zext i1 %5975 to i8
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5976, i8* %5977, align 1
  store %struct.Memory* %loadMem_45f8e4, %struct.Memory** %MEMORY
  %loadMem_45f8e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5979 = getelementptr inbounds %struct.GPR, %struct.GPR* %5978, i32 0, i32 33
  %5980 = getelementptr inbounds %struct.Reg, %struct.Reg* %5979, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %5980 to i64*
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5982 = getelementptr inbounds %struct.GPR, %struct.GPR* %5981, i32 0, i32 9
  %5983 = getelementptr inbounds %struct.Reg, %struct.Reg* %5982, i32 0, i32 0
  %ESI.i1090 = bitcast %union.anon* %5983 to i32*
  %5984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5985 = getelementptr inbounds %struct.GPR, %struct.GPR* %5984, i32 0, i32 11
  %5986 = getelementptr inbounds %struct.Reg, %struct.Reg* %5985, i32 0, i32 0
  %RDI.i1091 = bitcast %union.anon* %5986 to i64*
  %5987 = load i64, i64* %RDI.i1091
  %5988 = add i64 %5987, 20
  %5989 = load i32, i32* %ESI.i1090
  %5990 = zext i32 %5989 to i64
  %5991 = load i64, i64* %PC.i1089
  %5992 = add i64 %5991, 3
  store i64 %5992, i64* %PC.i1089
  %5993 = inttoptr i64 %5988 to i32*
  store i32 %5989, i32* %5993
  store %struct.Memory* %loadMem_45f8e7, %struct.Memory** %MEMORY
  %loadMem_45f8ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5995 = getelementptr inbounds %struct.GPR, %struct.GPR* %5994, i32 0, i32 33
  %5996 = getelementptr inbounds %struct.Reg, %struct.Reg* %5995, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %5996 to i64*
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5998 = getelementptr inbounds %struct.GPR, %struct.GPR* %5997, i32 0, i32 7
  %5999 = getelementptr inbounds %struct.Reg, %struct.Reg* %5998, i32 0, i32 0
  %RDX.i1087 = bitcast %union.anon* %5999 to i64*
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6001 = getelementptr inbounds %struct.GPR, %struct.GPR* %6000, i32 0, i32 15
  %6002 = getelementptr inbounds %struct.Reg, %struct.Reg* %6001, i32 0, i32 0
  %RBP.i1088 = bitcast %union.anon* %6002 to i64*
  %6003 = load i64, i64* %RBP.i1088
  %6004 = sub i64 %6003, 20
  %6005 = load i64, i64* %PC.i1086
  %6006 = add i64 %6005, 4
  store i64 %6006, i64* %PC.i1086
  %6007 = inttoptr i64 %6004 to i32*
  %6008 = load i32, i32* %6007
  %6009 = sext i32 %6008 to i64
  store i64 %6009, i64* %RDX.i1087, align 8
  store %struct.Memory* %loadMem_45f8ea, %struct.Memory** %MEMORY
  %loadMem_45f8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 33
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %6012 to i64*
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6014 = getelementptr inbounds %struct.GPR, %struct.GPR* %6013, i32 0, i32 7
  %6015 = getelementptr inbounds %struct.Reg, %struct.Reg* %6014, i32 0, i32 0
  %RDX.i1085 = bitcast %union.anon* %6015 to i64*
  %6016 = load i64, i64* %RDX.i1085
  %6017 = load i64, i64* %PC.i1084
  %6018 = add i64 %6017, 4
  store i64 %6018, i64* %PC.i1084
  %6019 = shl i64 %6016, 4
  %6020 = icmp slt i64 %6019, 0
  %6021 = shl i64 %6019, 1
  store i64 %6021, i64* %RDX.i1085, align 8
  %6022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6023 = zext i1 %6020 to i8
  store i8 %6023, i8* %6022, align 1
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6025 = trunc i64 %6021 to i32
  %6026 = and i32 %6025, 254
  %6027 = call i32 @llvm.ctpop.i32(i32 %6026)
  %6028 = trunc i32 %6027 to i8
  %6029 = and i8 %6028, 1
  %6030 = xor i8 %6029, 1
  store i8 %6030, i8* %6024, align 1
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6031, align 1
  %6032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6033 = icmp eq i64 %6021, 0
  %6034 = zext i1 %6033 to i8
  store i8 %6034, i8* %6032, align 1
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6036 = lshr i64 %6021, 63
  %6037 = trunc i64 %6036 to i8
  store i8 %6037, i8* %6035, align 1
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6038, align 1
  store %struct.Memory* %loadMem_45f8ee, %struct.Memory** %MEMORY
  %loadMem_45f8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6040 = getelementptr inbounds %struct.GPR, %struct.GPR* %6039, i32 0, i32 33
  %6041 = getelementptr inbounds %struct.Reg, %struct.Reg* %6040, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %6041 to i64*
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6043 = getelementptr inbounds %struct.GPR, %struct.GPR* %6042, i32 0, i32 1
  %6044 = getelementptr inbounds %struct.Reg, %struct.Reg* %6043, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %6044 to i64*
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6046 = getelementptr inbounds %struct.GPR, %struct.GPR* %6045, i32 0, i32 11
  %6047 = getelementptr inbounds %struct.Reg, %struct.Reg* %6046, i32 0, i32 0
  %RDI.i1083 = bitcast %union.anon* %6047 to i64*
  %6048 = load i64, i64* %RAX.i1082
  %6049 = load i64, i64* %PC.i1081
  %6050 = add i64 %6049, 3
  store i64 %6050, i64* %PC.i1081
  store i64 %6048, i64* %RDI.i1083, align 8
  store %struct.Memory* %loadMem_45f8f2, %struct.Memory** %MEMORY
  %loadMem_45f8f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6052 = getelementptr inbounds %struct.GPR, %struct.GPR* %6051, i32 0, i32 33
  %6053 = getelementptr inbounds %struct.Reg, %struct.Reg* %6052, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %6053 to i64*
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6055 = getelementptr inbounds %struct.GPR, %struct.GPR* %6054, i32 0, i32 7
  %6056 = getelementptr inbounds %struct.Reg, %struct.Reg* %6055, i32 0, i32 0
  %RDX.i1079 = bitcast %union.anon* %6056 to i64*
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6058 = getelementptr inbounds %struct.GPR, %struct.GPR* %6057, i32 0, i32 11
  %6059 = getelementptr inbounds %struct.Reg, %struct.Reg* %6058, i32 0, i32 0
  %RDI.i1080 = bitcast %union.anon* %6059 to i64*
  %6060 = load i64, i64* %RDI.i1080
  %6061 = load i64, i64* %RDX.i1079
  %6062 = load i64, i64* %PC.i1078
  %6063 = add i64 %6062, 3
  store i64 %6063, i64* %PC.i1078
  %6064 = add i64 %6061, %6060
  store i64 %6064, i64* %RDI.i1080, align 8
  %6065 = icmp ult i64 %6064, %6060
  %6066 = icmp ult i64 %6064, %6061
  %6067 = or i1 %6065, %6066
  %6068 = zext i1 %6067 to i8
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6068, i8* %6069, align 1
  %6070 = trunc i64 %6064 to i32
  %6071 = and i32 %6070, 255
  %6072 = call i32 @llvm.ctpop.i32(i32 %6071)
  %6073 = trunc i32 %6072 to i8
  %6074 = and i8 %6073, 1
  %6075 = xor i8 %6074, 1
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6075, i8* %6076, align 1
  %6077 = xor i64 %6061, %6060
  %6078 = xor i64 %6077, %6064
  %6079 = lshr i64 %6078, 4
  %6080 = trunc i64 %6079 to i8
  %6081 = and i8 %6080, 1
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6081, i8* %6082, align 1
  %6083 = icmp eq i64 %6064, 0
  %6084 = zext i1 %6083 to i8
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6084, i8* %6085, align 1
  %6086 = lshr i64 %6064, 63
  %6087 = trunc i64 %6086 to i8
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6087, i8* %6088, align 1
  %6089 = lshr i64 %6060, 63
  %6090 = lshr i64 %6061, 63
  %6091 = xor i64 %6086, %6089
  %6092 = xor i64 %6086, %6090
  %6093 = add i64 %6091, %6092
  %6094 = icmp eq i64 %6093, 2
  %6095 = zext i1 %6094 to i8
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6095, i8* %6096, align 1
  store %struct.Memory* %loadMem_45f8f5, %struct.Memory** %MEMORY
  %loadMem_45f8f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6098 = getelementptr inbounds %struct.GPR, %struct.GPR* %6097, i32 0, i32 33
  %6099 = getelementptr inbounds %struct.Reg, %struct.Reg* %6098, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %6099 to i64*
  %6100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6101 = getelementptr inbounds %struct.GPR, %struct.GPR* %6100, i32 0, i32 9
  %6102 = getelementptr inbounds %struct.Reg, %struct.Reg* %6101, i32 0, i32 0
  %RSI.i1076 = bitcast %union.anon* %6102 to i64*
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6104 = getelementptr inbounds %struct.GPR, %struct.GPR* %6103, i32 0, i32 11
  %6105 = getelementptr inbounds %struct.Reg, %struct.Reg* %6104, i32 0, i32 0
  %RDI.i1077 = bitcast %union.anon* %6105 to i64*
  %6106 = load i64, i64* %RDI.i1077
  %6107 = add i64 %6106, 16
  %6108 = load i64, i64* %PC.i1075
  %6109 = add i64 %6108, 3
  store i64 %6109, i64* %PC.i1075
  %6110 = inttoptr i64 %6107 to i32*
  %6111 = load i32, i32* %6110
  %6112 = zext i32 %6111 to i64
  store i64 %6112, i64* %RSI.i1076, align 8
  store %struct.Memory* %loadMem_45f8f8, %struct.Memory** %MEMORY
  %loadMem_45f8fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6114 = getelementptr inbounds %struct.GPR, %struct.GPR* %6113, i32 0, i32 33
  %6115 = getelementptr inbounds %struct.Reg, %struct.Reg* %6114, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %6115 to i64*
  %6116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6117 = getelementptr inbounds %struct.GPR, %struct.GPR* %6116, i32 0, i32 7
  %6118 = getelementptr inbounds %struct.Reg, %struct.Reg* %6117, i32 0, i32 0
  %RDX.i1073 = bitcast %union.anon* %6118 to i64*
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6120 = getelementptr inbounds %struct.GPR, %struct.GPR* %6119, i32 0, i32 15
  %6121 = getelementptr inbounds %struct.Reg, %struct.Reg* %6120, i32 0, i32 0
  %RBP.i1074 = bitcast %union.anon* %6121 to i64*
  %6122 = load i64, i64* %RBP.i1074
  %6123 = sub i64 %6122, 20
  %6124 = load i64, i64* %PC.i1072
  %6125 = add i64 %6124, 4
  store i64 %6125, i64* %PC.i1072
  %6126 = inttoptr i64 %6123 to i32*
  %6127 = load i32, i32* %6126
  %6128 = sext i32 %6127 to i64
  store i64 %6128, i64* %RDX.i1073, align 8
  store %struct.Memory* %loadMem_45f8fb, %struct.Memory** %MEMORY
  %loadMem_45f8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6130 = getelementptr inbounds %struct.GPR, %struct.GPR* %6129, i32 0, i32 33
  %6131 = getelementptr inbounds %struct.Reg, %struct.Reg* %6130, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %6131 to i64*
  %6132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6133 = getelementptr inbounds %struct.GPR, %struct.GPR* %6132, i32 0, i32 7
  %6134 = getelementptr inbounds %struct.Reg, %struct.Reg* %6133, i32 0, i32 0
  %RDX.i1071 = bitcast %union.anon* %6134 to i64*
  %6135 = load i64, i64* %RDX.i1071
  %6136 = load i64, i64* %PC.i1070
  %6137 = add i64 %6136, 4
  store i64 %6137, i64* %PC.i1070
  %6138 = shl i64 %6135, 4
  %6139 = icmp slt i64 %6138, 0
  %6140 = shl i64 %6138, 1
  store i64 %6140, i64* %RDX.i1071, align 8
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6142 = zext i1 %6139 to i8
  store i8 %6142, i8* %6141, align 1
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6144 = trunc i64 %6140 to i32
  %6145 = and i32 %6144, 254
  %6146 = call i32 @llvm.ctpop.i32(i32 %6145)
  %6147 = trunc i32 %6146 to i8
  %6148 = and i8 %6147, 1
  %6149 = xor i8 %6148, 1
  store i8 %6149, i8* %6143, align 1
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6150, align 1
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6152 = icmp eq i64 %6140, 0
  %6153 = zext i1 %6152 to i8
  store i8 %6153, i8* %6151, align 1
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6155 = lshr i64 %6140, 63
  %6156 = trunc i64 %6155 to i8
  store i8 %6156, i8* %6154, align 1
  %6157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6157, align 1
  store %struct.Memory* %loadMem_45f8ff, %struct.Memory** %MEMORY
  %loadMem_45f903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6159 = getelementptr inbounds %struct.GPR, %struct.GPR* %6158, i32 0, i32 33
  %6160 = getelementptr inbounds %struct.Reg, %struct.Reg* %6159, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %6160 to i64*
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6162 = getelementptr inbounds %struct.GPR, %struct.GPR* %6161, i32 0, i32 1
  %6163 = getelementptr inbounds %struct.Reg, %struct.Reg* %6162, i32 0, i32 0
  %RAX.i1068 = bitcast %union.anon* %6163 to i64*
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6165 = getelementptr inbounds %struct.GPR, %struct.GPR* %6164, i32 0, i32 11
  %6166 = getelementptr inbounds %struct.Reg, %struct.Reg* %6165, i32 0, i32 0
  %RDI.i1069 = bitcast %union.anon* %6166 to i64*
  %6167 = load i64, i64* %RAX.i1068
  %6168 = load i64, i64* %PC.i1067
  %6169 = add i64 %6168, 3
  store i64 %6169, i64* %PC.i1067
  store i64 %6167, i64* %RDI.i1069, align 8
  store %struct.Memory* %loadMem_45f903, %struct.Memory** %MEMORY
  %loadMem_45f906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6171 = getelementptr inbounds %struct.GPR, %struct.GPR* %6170, i32 0, i32 33
  %6172 = getelementptr inbounds %struct.Reg, %struct.Reg* %6171, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %6172 to i64*
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6174 = getelementptr inbounds %struct.GPR, %struct.GPR* %6173, i32 0, i32 7
  %6175 = getelementptr inbounds %struct.Reg, %struct.Reg* %6174, i32 0, i32 0
  %RDX.i1065 = bitcast %union.anon* %6175 to i64*
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 11
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %RDI.i1066 = bitcast %union.anon* %6178 to i64*
  %6179 = load i64, i64* %RDI.i1066
  %6180 = load i64, i64* %RDX.i1065
  %6181 = load i64, i64* %PC.i1064
  %6182 = add i64 %6181, 3
  store i64 %6182, i64* %PC.i1064
  %6183 = add i64 %6180, %6179
  store i64 %6183, i64* %RDI.i1066, align 8
  %6184 = icmp ult i64 %6183, %6179
  %6185 = icmp ult i64 %6183, %6180
  %6186 = or i1 %6184, %6185
  %6187 = zext i1 %6186 to i8
  %6188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6187, i8* %6188, align 1
  %6189 = trunc i64 %6183 to i32
  %6190 = and i32 %6189, 255
  %6191 = call i32 @llvm.ctpop.i32(i32 %6190)
  %6192 = trunc i32 %6191 to i8
  %6193 = and i8 %6192, 1
  %6194 = xor i8 %6193, 1
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6194, i8* %6195, align 1
  %6196 = xor i64 %6180, %6179
  %6197 = xor i64 %6196, %6183
  %6198 = lshr i64 %6197, 4
  %6199 = trunc i64 %6198 to i8
  %6200 = and i8 %6199, 1
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6200, i8* %6201, align 1
  %6202 = icmp eq i64 %6183, 0
  %6203 = zext i1 %6202 to i8
  %6204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6203, i8* %6204, align 1
  %6205 = lshr i64 %6183, 63
  %6206 = trunc i64 %6205 to i8
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6206, i8* %6207, align 1
  %6208 = lshr i64 %6179, 63
  %6209 = lshr i64 %6180, 63
  %6210 = xor i64 %6205, %6208
  %6211 = xor i64 %6205, %6209
  %6212 = add i64 %6210, %6211
  %6213 = icmp eq i64 %6212, 2
  %6214 = zext i1 %6213 to i8
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6214, i8* %6215, align 1
  store %struct.Memory* %loadMem_45f906, %struct.Memory** %MEMORY
  %loadMem_45f909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6217 = getelementptr inbounds %struct.GPR, %struct.GPR* %6216, i32 0, i32 33
  %6218 = getelementptr inbounds %struct.Reg, %struct.Reg* %6217, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %6218 to i64*
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6220 = getelementptr inbounds %struct.GPR, %struct.GPR* %6219, i32 0, i32 9
  %6221 = getelementptr inbounds %struct.Reg, %struct.Reg* %6220, i32 0, i32 0
  %RSI.i1062 = bitcast %union.anon* %6221 to i64*
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6223 = getelementptr inbounds %struct.GPR, %struct.GPR* %6222, i32 0, i32 11
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %RDI.i1063 = bitcast %union.anon* %6224 to i64*
  %6225 = load i64, i64* %RSI.i1062
  %6226 = load i64, i64* %RDI.i1063
  %6227 = add i64 %6226, 24
  %6228 = load i64, i64* %PC.i1061
  %6229 = add i64 %6228, 3
  store i64 %6229, i64* %PC.i1061
  %6230 = trunc i64 %6225 to i32
  %6231 = inttoptr i64 %6227 to i32*
  %6232 = load i32, i32* %6231
  %6233 = sub i32 %6230, %6232
  %6234 = zext i32 %6233 to i64
  store i64 %6234, i64* %RSI.i1062, align 8
  %6235 = icmp ult i32 %6230, %6232
  %6236 = zext i1 %6235 to i8
  %6237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6236, i8* %6237, align 1
  %6238 = and i32 %6233, 255
  %6239 = call i32 @llvm.ctpop.i32(i32 %6238)
  %6240 = trunc i32 %6239 to i8
  %6241 = and i8 %6240, 1
  %6242 = xor i8 %6241, 1
  %6243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6242, i8* %6243, align 1
  %6244 = xor i32 %6232, %6230
  %6245 = xor i32 %6244, %6233
  %6246 = lshr i32 %6245, 4
  %6247 = trunc i32 %6246 to i8
  %6248 = and i8 %6247, 1
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6248, i8* %6249, align 1
  %6250 = icmp eq i32 %6233, 0
  %6251 = zext i1 %6250 to i8
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6251, i8* %6252, align 1
  %6253 = lshr i32 %6233, 31
  %6254 = trunc i32 %6253 to i8
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6254, i8* %6255, align 1
  %6256 = lshr i32 %6230, 31
  %6257 = lshr i32 %6232, 31
  %6258 = xor i32 %6257, %6256
  %6259 = xor i32 %6253, %6256
  %6260 = add i32 %6259, %6258
  %6261 = icmp eq i32 %6260, 2
  %6262 = zext i1 %6261 to i8
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6262, i8* %6263, align 1
  store %struct.Memory* %loadMem_45f909, %struct.Memory** %MEMORY
  %loadMem_45f90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6265 = getelementptr inbounds %struct.GPR, %struct.GPR* %6264, i32 0, i32 33
  %6266 = getelementptr inbounds %struct.Reg, %struct.Reg* %6265, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %6266 to i64*
  %6267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6268 = getelementptr inbounds %struct.GPR, %struct.GPR* %6267, i32 0, i32 7
  %6269 = getelementptr inbounds %struct.Reg, %struct.Reg* %6268, i32 0, i32 0
  %RDX.i1059 = bitcast %union.anon* %6269 to i64*
  %6270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6271 = getelementptr inbounds %struct.GPR, %struct.GPR* %6270, i32 0, i32 15
  %6272 = getelementptr inbounds %struct.Reg, %struct.Reg* %6271, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %6272 to i64*
  %6273 = load i64, i64* %RBP.i1060
  %6274 = sub i64 %6273, 20
  %6275 = load i64, i64* %PC.i1058
  %6276 = add i64 %6275, 4
  store i64 %6276, i64* %PC.i1058
  %6277 = inttoptr i64 %6274 to i32*
  %6278 = load i32, i32* %6277
  %6279 = sext i32 %6278 to i64
  store i64 %6279, i64* %RDX.i1059, align 8
  store %struct.Memory* %loadMem_45f90c, %struct.Memory** %MEMORY
  %loadMem_45f910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6281 = getelementptr inbounds %struct.GPR, %struct.GPR* %6280, i32 0, i32 33
  %6282 = getelementptr inbounds %struct.Reg, %struct.Reg* %6281, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %6282 to i64*
  %6283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6284 = getelementptr inbounds %struct.GPR, %struct.GPR* %6283, i32 0, i32 7
  %6285 = getelementptr inbounds %struct.Reg, %struct.Reg* %6284, i32 0, i32 0
  %RDX.i1057 = bitcast %union.anon* %6285 to i64*
  %6286 = load i64, i64* %RDX.i1057
  %6287 = load i64, i64* %PC.i1056
  %6288 = add i64 %6287, 4
  store i64 %6288, i64* %PC.i1056
  %6289 = shl i64 %6286, 4
  %6290 = icmp slt i64 %6289, 0
  %6291 = shl i64 %6289, 1
  store i64 %6291, i64* %RDX.i1057, align 8
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6293 = zext i1 %6290 to i8
  store i8 %6293, i8* %6292, align 1
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6295 = trunc i64 %6291 to i32
  %6296 = and i32 %6295, 254
  %6297 = call i32 @llvm.ctpop.i32(i32 %6296)
  %6298 = trunc i32 %6297 to i8
  %6299 = and i8 %6298, 1
  %6300 = xor i8 %6299, 1
  store i8 %6300, i8* %6294, align 1
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6301, align 1
  %6302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6303 = icmp eq i64 %6291, 0
  %6304 = zext i1 %6303 to i8
  store i8 %6304, i8* %6302, align 1
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6306 = lshr i64 %6291, 63
  %6307 = trunc i64 %6306 to i8
  store i8 %6307, i8* %6305, align 1
  %6308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6308, align 1
  store %struct.Memory* %loadMem_45f910, %struct.Memory** %MEMORY
  %loadMem_45f914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6310 = getelementptr inbounds %struct.GPR, %struct.GPR* %6309, i32 0, i32 33
  %6311 = getelementptr inbounds %struct.Reg, %struct.Reg* %6310, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %6311 to i64*
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6313 = getelementptr inbounds %struct.GPR, %struct.GPR* %6312, i32 0, i32 5
  %6314 = getelementptr inbounds %struct.Reg, %struct.Reg* %6313, i32 0, i32 0
  %RCX.i1054 = bitcast %union.anon* %6314 to i64*
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6316 = getelementptr inbounds %struct.GPR, %struct.GPR* %6315, i32 0, i32 11
  %6317 = getelementptr inbounds %struct.Reg, %struct.Reg* %6316, i32 0, i32 0
  %RDI.i1055 = bitcast %union.anon* %6317 to i64*
  %6318 = load i64, i64* %RCX.i1054
  %6319 = load i64, i64* %PC.i1053
  %6320 = add i64 %6319, 3
  store i64 %6320, i64* %PC.i1053
  store i64 %6318, i64* %RDI.i1055, align 8
  store %struct.Memory* %loadMem_45f914, %struct.Memory** %MEMORY
  %loadMem_45f917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6322 = getelementptr inbounds %struct.GPR, %struct.GPR* %6321, i32 0, i32 33
  %6323 = getelementptr inbounds %struct.Reg, %struct.Reg* %6322, i32 0, i32 0
  %PC.i1050 = bitcast %union.anon* %6323 to i64*
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6325 = getelementptr inbounds %struct.GPR, %struct.GPR* %6324, i32 0, i32 7
  %6326 = getelementptr inbounds %struct.Reg, %struct.Reg* %6325, i32 0, i32 0
  %RDX.i1051 = bitcast %union.anon* %6326 to i64*
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6328 = getelementptr inbounds %struct.GPR, %struct.GPR* %6327, i32 0, i32 11
  %6329 = getelementptr inbounds %struct.Reg, %struct.Reg* %6328, i32 0, i32 0
  %RDI.i1052 = bitcast %union.anon* %6329 to i64*
  %6330 = load i64, i64* %RDI.i1052
  %6331 = load i64, i64* %RDX.i1051
  %6332 = load i64, i64* %PC.i1050
  %6333 = add i64 %6332, 3
  store i64 %6333, i64* %PC.i1050
  %6334 = add i64 %6331, %6330
  store i64 %6334, i64* %RDI.i1052, align 8
  %6335 = icmp ult i64 %6334, %6330
  %6336 = icmp ult i64 %6334, %6331
  %6337 = or i1 %6335, %6336
  %6338 = zext i1 %6337 to i8
  %6339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6338, i8* %6339, align 1
  %6340 = trunc i64 %6334 to i32
  %6341 = and i32 %6340, 255
  %6342 = call i32 @llvm.ctpop.i32(i32 %6341)
  %6343 = trunc i32 %6342 to i8
  %6344 = and i8 %6343, 1
  %6345 = xor i8 %6344, 1
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6345, i8* %6346, align 1
  %6347 = xor i64 %6331, %6330
  %6348 = xor i64 %6347, %6334
  %6349 = lshr i64 %6348, 4
  %6350 = trunc i64 %6349 to i8
  %6351 = and i8 %6350, 1
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6351, i8* %6352, align 1
  %6353 = icmp eq i64 %6334, 0
  %6354 = zext i1 %6353 to i8
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6354, i8* %6355, align 1
  %6356 = lshr i64 %6334, 63
  %6357 = trunc i64 %6356 to i8
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6357, i8* %6358, align 1
  %6359 = lshr i64 %6330, 63
  %6360 = lshr i64 %6331, 63
  %6361 = xor i64 %6356, %6359
  %6362 = xor i64 %6356, %6360
  %6363 = add i64 %6361, %6362
  %6364 = icmp eq i64 %6363, 2
  %6365 = zext i1 %6364 to i8
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6365, i8* %6366, align 1
  store %struct.Memory* %loadMem_45f917, %struct.Memory** %MEMORY
  %loadMem_45f91a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6368 = getelementptr inbounds %struct.GPR, %struct.GPR* %6367, i32 0, i32 33
  %6369 = getelementptr inbounds %struct.Reg, %struct.Reg* %6368, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %6369 to i64*
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6371 = getelementptr inbounds %struct.GPR, %struct.GPR* %6370, i32 0, i32 9
  %6372 = getelementptr inbounds %struct.Reg, %struct.Reg* %6371, i32 0, i32 0
  %ESI.i1048 = bitcast %union.anon* %6372 to i32*
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 11
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %RDI.i1049 = bitcast %union.anon* %6375 to i64*
  %6376 = load i64, i64* %RDI.i1049
  %6377 = add i64 %6376, 24
  %6378 = load i32, i32* %ESI.i1048
  %6379 = zext i32 %6378 to i64
  %6380 = load i64, i64* %PC.i1047
  %6381 = add i64 %6380, 3
  store i64 %6381, i64* %PC.i1047
  %6382 = inttoptr i64 %6377 to i32*
  store i32 %6378, i32* %6382
  store %struct.Memory* %loadMem_45f91a, %struct.Memory** %MEMORY
  %loadMem_45f91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6384 = getelementptr inbounds %struct.GPR, %struct.GPR* %6383, i32 0, i32 33
  %6385 = getelementptr inbounds %struct.Reg, %struct.Reg* %6384, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %6385 to i64*
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 7
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %RDX.i1045 = bitcast %union.anon* %6388 to i64*
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 15
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %RBP.i1046 = bitcast %union.anon* %6391 to i64*
  %6392 = load i64, i64* %RBP.i1046
  %6393 = sub i64 %6392, 20
  %6394 = load i64, i64* %PC.i1044
  %6395 = add i64 %6394, 4
  store i64 %6395, i64* %PC.i1044
  %6396 = inttoptr i64 %6393 to i32*
  %6397 = load i32, i32* %6396
  %6398 = sext i32 %6397 to i64
  store i64 %6398, i64* %RDX.i1045, align 8
  store %struct.Memory* %loadMem_45f91d, %struct.Memory** %MEMORY
  %loadMem_45f921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6400 = getelementptr inbounds %struct.GPR, %struct.GPR* %6399, i32 0, i32 33
  %6401 = getelementptr inbounds %struct.Reg, %struct.Reg* %6400, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %6401 to i64*
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6403 = getelementptr inbounds %struct.GPR, %struct.GPR* %6402, i32 0, i32 7
  %6404 = getelementptr inbounds %struct.Reg, %struct.Reg* %6403, i32 0, i32 0
  %RDX.i1043 = bitcast %union.anon* %6404 to i64*
  %6405 = load i64, i64* %RDX.i1043
  %6406 = load i64, i64* %PC.i1042
  %6407 = add i64 %6406, 4
  store i64 %6407, i64* %PC.i1042
  %6408 = shl i64 %6405, 4
  %6409 = icmp slt i64 %6408, 0
  %6410 = shl i64 %6408, 1
  store i64 %6410, i64* %RDX.i1043, align 8
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6412 = zext i1 %6409 to i8
  store i8 %6412, i8* %6411, align 1
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6414 = trunc i64 %6410 to i32
  %6415 = and i32 %6414, 254
  %6416 = call i32 @llvm.ctpop.i32(i32 %6415)
  %6417 = trunc i32 %6416 to i8
  %6418 = and i8 %6417, 1
  %6419 = xor i8 %6418, 1
  store i8 %6419, i8* %6413, align 1
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6420, align 1
  %6421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6422 = icmp eq i64 %6410, 0
  %6423 = zext i1 %6422 to i8
  store i8 %6423, i8* %6421, align 1
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6425 = lshr i64 %6410, 63
  %6426 = trunc i64 %6425 to i8
  store i8 %6426, i8* %6424, align 1
  %6427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6427, align 1
  store %struct.Memory* %loadMem_45f921, %struct.Memory** %MEMORY
  %loadMem_45f925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 33
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %6430 to i64*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6432 = getelementptr inbounds %struct.GPR, %struct.GPR* %6431, i32 0, i32 1
  %6433 = getelementptr inbounds %struct.Reg, %struct.Reg* %6432, i32 0, i32 0
  %RAX.i1040 = bitcast %union.anon* %6433 to i64*
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6435 = getelementptr inbounds %struct.GPR, %struct.GPR* %6434, i32 0, i32 11
  %6436 = getelementptr inbounds %struct.Reg, %struct.Reg* %6435, i32 0, i32 0
  %RDI.i1041 = bitcast %union.anon* %6436 to i64*
  %6437 = load i64, i64* %RAX.i1040
  %6438 = load i64, i64* %PC.i1039
  %6439 = add i64 %6438, 3
  store i64 %6439, i64* %PC.i1039
  store i64 %6437, i64* %RDI.i1041, align 8
  store %struct.Memory* %loadMem_45f925, %struct.Memory** %MEMORY
  %loadMem_45f928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6441 = getelementptr inbounds %struct.GPR, %struct.GPR* %6440, i32 0, i32 33
  %6442 = getelementptr inbounds %struct.Reg, %struct.Reg* %6441, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %6442 to i64*
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6444 = getelementptr inbounds %struct.GPR, %struct.GPR* %6443, i32 0, i32 7
  %6445 = getelementptr inbounds %struct.Reg, %struct.Reg* %6444, i32 0, i32 0
  %RDX.i1037 = bitcast %union.anon* %6445 to i64*
  %6446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6447 = getelementptr inbounds %struct.GPR, %struct.GPR* %6446, i32 0, i32 11
  %6448 = getelementptr inbounds %struct.Reg, %struct.Reg* %6447, i32 0, i32 0
  %RDI.i1038 = bitcast %union.anon* %6448 to i64*
  %6449 = load i64, i64* %RDI.i1038
  %6450 = load i64, i64* %RDX.i1037
  %6451 = load i64, i64* %PC.i1036
  %6452 = add i64 %6451, 3
  store i64 %6452, i64* %PC.i1036
  %6453 = add i64 %6450, %6449
  store i64 %6453, i64* %RDI.i1038, align 8
  %6454 = icmp ult i64 %6453, %6449
  %6455 = icmp ult i64 %6453, %6450
  %6456 = or i1 %6454, %6455
  %6457 = zext i1 %6456 to i8
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6457, i8* %6458, align 1
  %6459 = trunc i64 %6453 to i32
  %6460 = and i32 %6459, 255
  %6461 = call i32 @llvm.ctpop.i32(i32 %6460)
  %6462 = trunc i32 %6461 to i8
  %6463 = and i8 %6462, 1
  %6464 = xor i8 %6463, 1
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6464, i8* %6465, align 1
  %6466 = xor i64 %6450, %6449
  %6467 = xor i64 %6466, %6453
  %6468 = lshr i64 %6467, 4
  %6469 = trunc i64 %6468 to i8
  %6470 = and i8 %6469, 1
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6470, i8* %6471, align 1
  %6472 = icmp eq i64 %6453, 0
  %6473 = zext i1 %6472 to i8
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6473, i8* %6474, align 1
  %6475 = lshr i64 %6453, 63
  %6476 = trunc i64 %6475 to i8
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6476, i8* %6477, align 1
  %6478 = lshr i64 %6449, 63
  %6479 = lshr i64 %6450, 63
  %6480 = xor i64 %6475, %6478
  %6481 = xor i64 %6475, %6479
  %6482 = add i64 %6480, %6481
  %6483 = icmp eq i64 %6482, 2
  %6484 = zext i1 %6483 to i8
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6484, i8* %6485, align 1
  store %struct.Memory* %loadMem_45f928, %struct.Memory** %MEMORY
  %loadMem_45f92b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 33
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %6488 to i64*
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6490 = getelementptr inbounds %struct.GPR, %struct.GPR* %6489, i32 0, i32 9
  %6491 = getelementptr inbounds %struct.Reg, %struct.Reg* %6490, i32 0, i32 0
  %RSI.i1034 = bitcast %union.anon* %6491 to i64*
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6493 = getelementptr inbounds %struct.GPR, %struct.GPR* %6492, i32 0, i32 11
  %6494 = getelementptr inbounds %struct.Reg, %struct.Reg* %6493, i32 0, i32 0
  %RDI.i1035 = bitcast %union.anon* %6494 to i64*
  %6495 = load i64, i64* %RDI.i1035
  %6496 = add i64 %6495, 20
  %6497 = load i64, i64* %PC.i1033
  %6498 = add i64 %6497, 3
  store i64 %6498, i64* %PC.i1033
  %6499 = inttoptr i64 %6496 to i32*
  %6500 = load i32, i32* %6499
  %6501 = zext i32 %6500 to i64
  store i64 %6501, i64* %RSI.i1034, align 8
  store %struct.Memory* %loadMem_45f92b, %struct.Memory** %MEMORY
  %loadMem_45f92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 33
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %PC.i1030 = bitcast %union.anon* %6504 to i64*
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 7
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %RDX.i1031 = bitcast %union.anon* %6507 to i64*
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 15
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %RBP.i1032 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %RBP.i1032
  %6512 = sub i64 %6511, 20
  %6513 = load i64, i64* %PC.i1030
  %6514 = add i64 %6513, 4
  store i64 %6514, i64* %PC.i1030
  %6515 = inttoptr i64 %6512 to i32*
  %6516 = load i32, i32* %6515
  %6517 = sext i32 %6516 to i64
  store i64 %6517, i64* %RDX.i1031, align 8
  store %struct.Memory* %loadMem_45f92e, %struct.Memory** %MEMORY
  %loadMem_45f932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6519 = getelementptr inbounds %struct.GPR, %struct.GPR* %6518, i32 0, i32 33
  %6520 = getelementptr inbounds %struct.Reg, %struct.Reg* %6519, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %6520 to i64*
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6522 = getelementptr inbounds %struct.GPR, %struct.GPR* %6521, i32 0, i32 7
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %RDX.i1029 = bitcast %union.anon* %6523 to i64*
  %6524 = load i64, i64* %RDX.i1029
  %6525 = load i64, i64* %PC.i1028
  %6526 = add i64 %6525, 4
  store i64 %6526, i64* %PC.i1028
  %6527 = shl i64 %6524, 4
  %6528 = icmp slt i64 %6527, 0
  %6529 = shl i64 %6527, 1
  store i64 %6529, i64* %RDX.i1029, align 8
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6531 = zext i1 %6528 to i8
  store i8 %6531, i8* %6530, align 1
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6533 = trunc i64 %6529 to i32
  %6534 = and i32 %6533, 254
  %6535 = call i32 @llvm.ctpop.i32(i32 %6534)
  %6536 = trunc i32 %6535 to i8
  %6537 = and i8 %6536, 1
  %6538 = xor i8 %6537, 1
  store i8 %6538, i8* %6532, align 1
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6539, align 1
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6541 = icmp eq i64 %6529, 0
  %6542 = zext i1 %6541 to i8
  store i8 %6542, i8* %6540, align 1
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6544 = lshr i64 %6529, 63
  %6545 = trunc i64 %6544 to i8
  store i8 %6545, i8* %6543, align 1
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6546, align 1
  store %struct.Memory* %loadMem_45f932, %struct.Memory** %MEMORY
  %loadMem_45f936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6548 = getelementptr inbounds %struct.GPR, %struct.GPR* %6547, i32 0, i32 33
  %6549 = getelementptr inbounds %struct.Reg, %struct.Reg* %6548, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %6549 to i64*
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6551 = getelementptr inbounds %struct.GPR, %struct.GPR* %6550, i32 0, i32 1
  %6552 = getelementptr inbounds %struct.Reg, %struct.Reg* %6551, i32 0, i32 0
  %RAX.i1026 = bitcast %union.anon* %6552 to i64*
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6554 = getelementptr inbounds %struct.GPR, %struct.GPR* %6553, i32 0, i32 11
  %6555 = getelementptr inbounds %struct.Reg, %struct.Reg* %6554, i32 0, i32 0
  %RDI.i1027 = bitcast %union.anon* %6555 to i64*
  %6556 = load i64, i64* %RAX.i1026
  %6557 = load i64, i64* %PC.i1025
  %6558 = add i64 %6557, 3
  store i64 %6558, i64* %PC.i1025
  store i64 %6556, i64* %RDI.i1027, align 8
  store %struct.Memory* %loadMem_45f936, %struct.Memory** %MEMORY
  %loadMem_45f939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6560 = getelementptr inbounds %struct.GPR, %struct.GPR* %6559, i32 0, i32 33
  %6561 = getelementptr inbounds %struct.Reg, %struct.Reg* %6560, i32 0, i32 0
  %PC.i1022 = bitcast %union.anon* %6561 to i64*
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6563 = getelementptr inbounds %struct.GPR, %struct.GPR* %6562, i32 0, i32 7
  %6564 = getelementptr inbounds %struct.Reg, %struct.Reg* %6563, i32 0, i32 0
  %RDX.i1023 = bitcast %union.anon* %6564 to i64*
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6566 = getelementptr inbounds %struct.GPR, %struct.GPR* %6565, i32 0, i32 11
  %6567 = getelementptr inbounds %struct.Reg, %struct.Reg* %6566, i32 0, i32 0
  %RDI.i1024 = bitcast %union.anon* %6567 to i64*
  %6568 = load i64, i64* %RDI.i1024
  %6569 = load i64, i64* %RDX.i1023
  %6570 = load i64, i64* %PC.i1022
  %6571 = add i64 %6570, 3
  store i64 %6571, i64* %PC.i1022
  %6572 = add i64 %6569, %6568
  store i64 %6572, i64* %RDI.i1024, align 8
  %6573 = icmp ult i64 %6572, %6568
  %6574 = icmp ult i64 %6572, %6569
  %6575 = or i1 %6573, %6574
  %6576 = zext i1 %6575 to i8
  %6577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6576, i8* %6577, align 1
  %6578 = trunc i64 %6572 to i32
  %6579 = and i32 %6578, 255
  %6580 = call i32 @llvm.ctpop.i32(i32 %6579)
  %6581 = trunc i32 %6580 to i8
  %6582 = and i8 %6581, 1
  %6583 = xor i8 %6582, 1
  %6584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6583, i8* %6584, align 1
  %6585 = xor i64 %6569, %6568
  %6586 = xor i64 %6585, %6572
  %6587 = lshr i64 %6586, 4
  %6588 = trunc i64 %6587 to i8
  %6589 = and i8 %6588, 1
  %6590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6589, i8* %6590, align 1
  %6591 = icmp eq i64 %6572, 0
  %6592 = zext i1 %6591 to i8
  %6593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6592, i8* %6593, align 1
  %6594 = lshr i64 %6572, 63
  %6595 = trunc i64 %6594 to i8
  %6596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6595, i8* %6596, align 1
  %6597 = lshr i64 %6568, 63
  %6598 = lshr i64 %6569, 63
  %6599 = xor i64 %6594, %6597
  %6600 = xor i64 %6594, %6598
  %6601 = add i64 %6599, %6600
  %6602 = icmp eq i64 %6601, 2
  %6603 = zext i1 %6602 to i8
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6603, i8* %6604, align 1
  store %struct.Memory* %loadMem_45f939, %struct.Memory** %MEMORY
  %loadMem_45f93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6606 = getelementptr inbounds %struct.GPR, %struct.GPR* %6605, i32 0, i32 33
  %6607 = getelementptr inbounds %struct.Reg, %struct.Reg* %6606, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %6607 to i64*
  %6608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6609 = getelementptr inbounds %struct.GPR, %struct.GPR* %6608, i32 0, i32 9
  %6610 = getelementptr inbounds %struct.Reg, %struct.Reg* %6609, i32 0, i32 0
  %RSI.i1020 = bitcast %union.anon* %6610 to i64*
  %6611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6612 = getelementptr inbounds %struct.GPR, %struct.GPR* %6611, i32 0, i32 11
  %6613 = getelementptr inbounds %struct.Reg, %struct.Reg* %6612, i32 0, i32 0
  %RDI.i1021 = bitcast %union.anon* %6613 to i64*
  %6614 = load i64, i64* %RSI.i1020
  %6615 = load i64, i64* %RDI.i1021
  %6616 = add i64 %6615, 28
  %6617 = load i64, i64* %PC.i1019
  %6618 = add i64 %6617, 3
  store i64 %6618, i64* %PC.i1019
  %6619 = trunc i64 %6614 to i32
  %6620 = inttoptr i64 %6616 to i32*
  %6621 = load i32, i32* %6620
  %6622 = sub i32 %6619, %6621
  %6623 = zext i32 %6622 to i64
  store i64 %6623, i64* %RSI.i1020, align 8
  %6624 = icmp ult i32 %6619, %6621
  %6625 = zext i1 %6624 to i8
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6625, i8* %6626, align 1
  %6627 = and i32 %6622, 255
  %6628 = call i32 @llvm.ctpop.i32(i32 %6627)
  %6629 = trunc i32 %6628 to i8
  %6630 = and i8 %6629, 1
  %6631 = xor i8 %6630, 1
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6631, i8* %6632, align 1
  %6633 = xor i32 %6621, %6619
  %6634 = xor i32 %6633, %6622
  %6635 = lshr i32 %6634, 4
  %6636 = trunc i32 %6635 to i8
  %6637 = and i8 %6636, 1
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6637, i8* %6638, align 1
  %6639 = icmp eq i32 %6622, 0
  %6640 = zext i1 %6639 to i8
  %6641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6640, i8* %6641, align 1
  %6642 = lshr i32 %6622, 31
  %6643 = trunc i32 %6642 to i8
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6643, i8* %6644, align 1
  %6645 = lshr i32 %6619, 31
  %6646 = lshr i32 %6621, 31
  %6647 = xor i32 %6646, %6645
  %6648 = xor i32 %6642, %6645
  %6649 = add i32 %6648, %6647
  %6650 = icmp eq i32 %6649, 2
  %6651 = zext i1 %6650 to i8
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6651, i8* %6652, align 1
  store %struct.Memory* %loadMem_45f93c, %struct.Memory** %MEMORY
  %loadMem_45f93f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6654 = getelementptr inbounds %struct.GPR, %struct.GPR* %6653, i32 0, i32 33
  %6655 = getelementptr inbounds %struct.Reg, %struct.Reg* %6654, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %6655 to i64*
  %6656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6657 = getelementptr inbounds %struct.GPR, %struct.GPR* %6656, i32 0, i32 7
  %6658 = getelementptr inbounds %struct.Reg, %struct.Reg* %6657, i32 0, i32 0
  %RDX.i1017 = bitcast %union.anon* %6658 to i64*
  %6659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6660 = getelementptr inbounds %struct.GPR, %struct.GPR* %6659, i32 0, i32 15
  %6661 = getelementptr inbounds %struct.Reg, %struct.Reg* %6660, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %6661 to i64*
  %6662 = load i64, i64* %RBP.i1018
  %6663 = sub i64 %6662, 20
  %6664 = load i64, i64* %PC.i1016
  %6665 = add i64 %6664, 4
  store i64 %6665, i64* %PC.i1016
  %6666 = inttoptr i64 %6663 to i32*
  %6667 = load i32, i32* %6666
  %6668 = sext i32 %6667 to i64
  store i64 %6668, i64* %RDX.i1017, align 8
  store %struct.Memory* %loadMem_45f93f, %struct.Memory** %MEMORY
  %loadMem_45f943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6670 = getelementptr inbounds %struct.GPR, %struct.GPR* %6669, i32 0, i32 33
  %6671 = getelementptr inbounds %struct.Reg, %struct.Reg* %6670, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %6671 to i64*
  %6672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6673 = getelementptr inbounds %struct.GPR, %struct.GPR* %6672, i32 0, i32 7
  %6674 = getelementptr inbounds %struct.Reg, %struct.Reg* %6673, i32 0, i32 0
  %RDX.i1015 = bitcast %union.anon* %6674 to i64*
  %6675 = load i64, i64* %RDX.i1015
  %6676 = load i64, i64* %PC.i1014
  %6677 = add i64 %6676, 4
  store i64 %6677, i64* %PC.i1014
  %6678 = shl i64 %6675, 4
  %6679 = icmp slt i64 %6678, 0
  %6680 = shl i64 %6678, 1
  store i64 %6680, i64* %RDX.i1015, align 8
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6682 = zext i1 %6679 to i8
  store i8 %6682, i8* %6681, align 1
  %6683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6684 = trunc i64 %6680 to i32
  %6685 = and i32 %6684, 254
  %6686 = call i32 @llvm.ctpop.i32(i32 %6685)
  %6687 = trunc i32 %6686 to i8
  %6688 = and i8 %6687, 1
  %6689 = xor i8 %6688, 1
  store i8 %6689, i8* %6683, align 1
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6690, align 1
  %6691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6692 = icmp eq i64 %6680, 0
  %6693 = zext i1 %6692 to i8
  store i8 %6693, i8* %6691, align 1
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6695 = lshr i64 %6680, 63
  %6696 = trunc i64 %6695 to i8
  store i8 %6696, i8* %6694, align 1
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6697, align 1
  store %struct.Memory* %loadMem_45f943, %struct.Memory** %MEMORY
  %loadMem_45f947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 33
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %6700 to i64*
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6702 = getelementptr inbounds %struct.GPR, %struct.GPR* %6701, i32 0, i32 5
  %6703 = getelementptr inbounds %struct.Reg, %struct.Reg* %6702, i32 0, i32 0
  %RCX.i1012 = bitcast %union.anon* %6703 to i64*
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6705 = getelementptr inbounds %struct.GPR, %struct.GPR* %6704, i32 0, i32 11
  %6706 = getelementptr inbounds %struct.Reg, %struct.Reg* %6705, i32 0, i32 0
  %RDI.i1013 = bitcast %union.anon* %6706 to i64*
  %6707 = load i64, i64* %RCX.i1012
  %6708 = load i64, i64* %PC.i1011
  %6709 = add i64 %6708, 3
  store i64 %6709, i64* %PC.i1011
  store i64 %6707, i64* %RDI.i1013, align 8
  store %struct.Memory* %loadMem_45f947, %struct.Memory** %MEMORY
  %loadMem_45f94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6711 = getelementptr inbounds %struct.GPR, %struct.GPR* %6710, i32 0, i32 33
  %6712 = getelementptr inbounds %struct.Reg, %struct.Reg* %6711, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %6712 to i64*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 7
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %RDX.i1009 = bitcast %union.anon* %6715 to i64*
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 11
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %RDI.i1010 = bitcast %union.anon* %6718 to i64*
  %6719 = load i64, i64* %RDI.i1010
  %6720 = load i64, i64* %RDX.i1009
  %6721 = load i64, i64* %PC.i1008
  %6722 = add i64 %6721, 3
  store i64 %6722, i64* %PC.i1008
  %6723 = add i64 %6720, %6719
  store i64 %6723, i64* %RDI.i1010, align 8
  %6724 = icmp ult i64 %6723, %6719
  %6725 = icmp ult i64 %6723, %6720
  %6726 = or i1 %6724, %6725
  %6727 = zext i1 %6726 to i8
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6727, i8* %6728, align 1
  %6729 = trunc i64 %6723 to i32
  %6730 = and i32 %6729, 255
  %6731 = call i32 @llvm.ctpop.i32(i32 %6730)
  %6732 = trunc i32 %6731 to i8
  %6733 = and i8 %6732, 1
  %6734 = xor i8 %6733, 1
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6734, i8* %6735, align 1
  %6736 = xor i64 %6720, %6719
  %6737 = xor i64 %6736, %6723
  %6738 = lshr i64 %6737, 4
  %6739 = trunc i64 %6738 to i8
  %6740 = and i8 %6739, 1
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6740, i8* %6741, align 1
  %6742 = icmp eq i64 %6723, 0
  %6743 = zext i1 %6742 to i8
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6743, i8* %6744, align 1
  %6745 = lshr i64 %6723, 63
  %6746 = trunc i64 %6745 to i8
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6746, i8* %6747, align 1
  %6748 = lshr i64 %6719, 63
  %6749 = lshr i64 %6720, 63
  %6750 = xor i64 %6745, %6748
  %6751 = xor i64 %6745, %6749
  %6752 = add i64 %6750, %6751
  %6753 = icmp eq i64 %6752, 2
  %6754 = zext i1 %6753 to i8
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6754, i8* %6755, align 1
  store %struct.Memory* %loadMem_45f94a, %struct.Memory** %MEMORY
  %loadMem_45f94d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6757 = getelementptr inbounds %struct.GPR, %struct.GPR* %6756, i32 0, i32 33
  %6758 = getelementptr inbounds %struct.Reg, %struct.Reg* %6757, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %6758 to i64*
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6760 = getelementptr inbounds %struct.GPR, %struct.GPR* %6759, i32 0, i32 9
  %6761 = getelementptr inbounds %struct.Reg, %struct.Reg* %6760, i32 0, i32 0
  %ESI.i1006 = bitcast %union.anon* %6761 to i32*
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6763 = getelementptr inbounds %struct.GPR, %struct.GPR* %6762, i32 0, i32 11
  %6764 = getelementptr inbounds %struct.Reg, %struct.Reg* %6763, i32 0, i32 0
  %RDI.i1007 = bitcast %union.anon* %6764 to i64*
  %6765 = load i64, i64* %RDI.i1007
  %6766 = add i64 %6765, 28
  %6767 = load i32, i32* %ESI.i1006
  %6768 = zext i32 %6767 to i64
  %6769 = load i64, i64* %PC.i1005
  %6770 = add i64 %6769, 3
  store i64 %6770, i64* %PC.i1005
  %6771 = inttoptr i64 %6766 to i32*
  store i32 %6767, i32* %6771
  store %struct.Memory* %loadMem_45f94d, %struct.Memory** %MEMORY
  %loadMem_45f950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6773 = getelementptr inbounds %struct.GPR, %struct.GPR* %6772, i32 0, i32 33
  %6774 = getelementptr inbounds %struct.Reg, %struct.Reg* %6773, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %6774 to i64*
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6776 = getelementptr inbounds %struct.GPR, %struct.GPR* %6775, i32 0, i32 7
  %6777 = getelementptr inbounds %struct.Reg, %struct.Reg* %6776, i32 0, i32 0
  %RDX.i1003 = bitcast %union.anon* %6777 to i64*
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6779 = getelementptr inbounds %struct.GPR, %struct.GPR* %6778, i32 0, i32 15
  %6780 = getelementptr inbounds %struct.Reg, %struct.Reg* %6779, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %6780 to i64*
  %6781 = load i64, i64* %RBP.i1004
  %6782 = sub i64 %6781, 20
  %6783 = load i64, i64* %PC.i1002
  %6784 = add i64 %6783, 4
  store i64 %6784, i64* %PC.i1002
  %6785 = inttoptr i64 %6782 to i32*
  %6786 = load i32, i32* %6785
  %6787 = sext i32 %6786 to i64
  store i64 %6787, i64* %RDX.i1003, align 8
  store %struct.Memory* %loadMem_45f950, %struct.Memory** %MEMORY
  %loadMem_45f954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6789 = getelementptr inbounds %struct.GPR, %struct.GPR* %6788, i32 0, i32 33
  %6790 = getelementptr inbounds %struct.Reg, %struct.Reg* %6789, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %6790 to i64*
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6792 = getelementptr inbounds %struct.GPR, %struct.GPR* %6791, i32 0, i32 7
  %6793 = getelementptr inbounds %struct.Reg, %struct.Reg* %6792, i32 0, i32 0
  %RDX.i1001 = bitcast %union.anon* %6793 to i64*
  %6794 = load i64, i64* %RDX.i1001
  %6795 = load i64, i64* %PC.i1000
  %6796 = add i64 %6795, 4
  store i64 %6796, i64* %PC.i1000
  %6797 = shl i64 %6794, 4
  %6798 = icmp slt i64 %6797, 0
  %6799 = shl i64 %6797, 1
  store i64 %6799, i64* %RDX.i1001, align 8
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6801 = zext i1 %6798 to i8
  store i8 %6801, i8* %6800, align 1
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6803 = trunc i64 %6799 to i32
  %6804 = and i32 %6803, 254
  %6805 = call i32 @llvm.ctpop.i32(i32 %6804)
  %6806 = trunc i32 %6805 to i8
  %6807 = and i8 %6806, 1
  %6808 = xor i8 %6807, 1
  store i8 %6808, i8* %6802, align 1
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6809, align 1
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6811 = icmp eq i64 %6799, 0
  %6812 = zext i1 %6811 to i8
  store i8 %6812, i8* %6810, align 1
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6814 = lshr i64 %6799, 63
  %6815 = trunc i64 %6814 to i8
  store i8 %6815, i8* %6813, align 1
  %6816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6816, align 1
  store %struct.Memory* %loadMem_45f954, %struct.Memory** %MEMORY
  %loadMem_45f958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6818 = getelementptr inbounds %struct.GPR, %struct.GPR* %6817, i32 0, i32 33
  %6819 = getelementptr inbounds %struct.Reg, %struct.Reg* %6818, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %6819 to i64*
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6821 = getelementptr inbounds %struct.GPR, %struct.GPR* %6820, i32 0, i32 5
  %6822 = getelementptr inbounds %struct.Reg, %struct.Reg* %6821, i32 0, i32 0
  %RCX.i998 = bitcast %union.anon* %6822 to i64*
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 11
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %RDI.i999 = bitcast %union.anon* %6825 to i64*
  %6826 = load i64, i64* %RCX.i998
  %6827 = load i64, i64* %PC.i997
  %6828 = add i64 %6827, 3
  store i64 %6828, i64* %PC.i997
  store i64 %6826, i64* %RDI.i999, align 8
  store %struct.Memory* %loadMem_45f958, %struct.Memory** %MEMORY
  %loadMem_45f95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 33
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %6831 to i64*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 7
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %RDX.i995 = bitcast %union.anon* %6834 to i64*
  %6835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6836 = getelementptr inbounds %struct.GPR, %struct.GPR* %6835, i32 0, i32 11
  %6837 = getelementptr inbounds %struct.Reg, %struct.Reg* %6836, i32 0, i32 0
  %RDI.i996 = bitcast %union.anon* %6837 to i64*
  %6838 = load i64, i64* %RDI.i996
  %6839 = load i64, i64* %RDX.i995
  %6840 = load i64, i64* %PC.i994
  %6841 = add i64 %6840, 3
  store i64 %6841, i64* %PC.i994
  %6842 = add i64 %6839, %6838
  store i64 %6842, i64* %RDI.i996, align 8
  %6843 = icmp ult i64 %6842, %6838
  %6844 = icmp ult i64 %6842, %6839
  %6845 = or i1 %6843, %6844
  %6846 = zext i1 %6845 to i8
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6846, i8* %6847, align 1
  %6848 = trunc i64 %6842 to i32
  %6849 = and i32 %6848, 255
  %6850 = call i32 @llvm.ctpop.i32(i32 %6849)
  %6851 = trunc i32 %6850 to i8
  %6852 = and i8 %6851, 1
  %6853 = xor i8 %6852, 1
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6853, i8* %6854, align 1
  %6855 = xor i64 %6839, %6838
  %6856 = xor i64 %6855, %6842
  %6857 = lshr i64 %6856, 4
  %6858 = trunc i64 %6857 to i8
  %6859 = and i8 %6858, 1
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6859, i8* %6860, align 1
  %6861 = icmp eq i64 %6842, 0
  %6862 = zext i1 %6861 to i8
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6862, i8* %6863, align 1
  %6864 = lshr i64 %6842, 63
  %6865 = trunc i64 %6864 to i8
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6865, i8* %6866, align 1
  %6867 = lshr i64 %6838, 63
  %6868 = lshr i64 %6839, 63
  %6869 = xor i64 %6864, %6867
  %6870 = xor i64 %6864, %6868
  %6871 = add i64 %6869, %6870
  %6872 = icmp eq i64 %6871, 2
  %6873 = zext i1 %6872 to i8
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6873, i8* %6874, align 1
  store %struct.Memory* %loadMem_45f95b, %struct.Memory** %MEMORY
  %loadMem_45f95e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6876 = getelementptr inbounds %struct.GPR, %struct.GPR* %6875, i32 0, i32 33
  %6877 = getelementptr inbounds %struct.Reg, %struct.Reg* %6876, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %6877 to i64*
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6879 = getelementptr inbounds %struct.GPR, %struct.GPR* %6878, i32 0, i32 9
  %6880 = getelementptr inbounds %struct.Reg, %struct.Reg* %6879, i32 0, i32 0
  %RSI.i992 = bitcast %union.anon* %6880 to i64*
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 11
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %RDI.i993 = bitcast %union.anon* %6883 to i64*
  %6884 = load i64, i64* %RDI.i993
  %6885 = load i64, i64* %PC.i991
  %6886 = add i64 %6885, 2
  store i64 %6886, i64* %PC.i991
  %6887 = inttoptr i64 %6884 to i32*
  %6888 = load i32, i32* %6887
  %6889 = zext i32 %6888 to i64
  store i64 %6889, i64* %RSI.i992, align 8
  store %struct.Memory* %loadMem_45f95e, %struct.Memory** %MEMORY
  %loadMem_45f960 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6891 = getelementptr inbounds %struct.GPR, %struct.GPR* %6890, i32 0, i32 33
  %6892 = getelementptr inbounds %struct.Reg, %struct.Reg* %6891, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %6892 to i64*
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6894 = getelementptr inbounds %struct.GPR, %struct.GPR* %6893, i32 0, i32 7
  %6895 = getelementptr inbounds %struct.Reg, %struct.Reg* %6894, i32 0, i32 0
  %RDX.i989 = bitcast %union.anon* %6895 to i64*
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6897 = getelementptr inbounds %struct.GPR, %struct.GPR* %6896, i32 0, i32 15
  %6898 = getelementptr inbounds %struct.Reg, %struct.Reg* %6897, i32 0, i32 0
  %RBP.i990 = bitcast %union.anon* %6898 to i64*
  %6899 = load i64, i64* %RBP.i990
  %6900 = sub i64 %6899, 20
  %6901 = load i64, i64* %PC.i988
  %6902 = add i64 %6901, 4
  store i64 %6902, i64* %PC.i988
  %6903 = inttoptr i64 %6900 to i32*
  %6904 = load i32, i32* %6903
  %6905 = sext i32 %6904 to i64
  store i64 %6905, i64* %RDX.i989, align 8
  store %struct.Memory* %loadMem_45f960, %struct.Memory** %MEMORY
  %loadMem_45f964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6907 = getelementptr inbounds %struct.GPR, %struct.GPR* %6906, i32 0, i32 33
  %6908 = getelementptr inbounds %struct.Reg, %struct.Reg* %6907, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %6908 to i64*
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 7
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %RDX.i987 = bitcast %union.anon* %6911 to i64*
  %6912 = load i64, i64* %RDX.i987
  %6913 = load i64, i64* %PC.i986
  %6914 = add i64 %6913, 4
  store i64 %6914, i64* %PC.i986
  %6915 = shl i64 %6912, 4
  %6916 = icmp slt i64 %6915, 0
  %6917 = shl i64 %6915, 1
  store i64 %6917, i64* %RDX.i987, align 8
  %6918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6919 = zext i1 %6916 to i8
  store i8 %6919, i8* %6918, align 1
  %6920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6921 = trunc i64 %6917 to i32
  %6922 = and i32 %6921, 254
  %6923 = call i32 @llvm.ctpop.i32(i32 %6922)
  %6924 = trunc i32 %6923 to i8
  %6925 = and i8 %6924, 1
  %6926 = xor i8 %6925, 1
  store i8 %6926, i8* %6920, align 1
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6927, align 1
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6929 = icmp eq i64 %6917, 0
  %6930 = zext i1 %6929 to i8
  store i8 %6930, i8* %6928, align 1
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6932 = lshr i64 %6917, 63
  %6933 = trunc i64 %6932 to i8
  store i8 %6933, i8* %6931, align 1
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6934, align 1
  store %struct.Memory* %loadMem_45f964, %struct.Memory** %MEMORY
  %loadMem_45f968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6936 = getelementptr inbounds %struct.GPR, %struct.GPR* %6935, i32 0, i32 33
  %6937 = getelementptr inbounds %struct.Reg, %struct.Reg* %6936, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %6937 to i64*
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6939 = getelementptr inbounds %struct.GPR, %struct.GPR* %6938, i32 0, i32 5
  %6940 = getelementptr inbounds %struct.Reg, %struct.Reg* %6939, i32 0, i32 0
  %RCX.i984 = bitcast %union.anon* %6940 to i64*
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6942 = getelementptr inbounds %struct.GPR, %struct.GPR* %6941, i32 0, i32 11
  %6943 = getelementptr inbounds %struct.Reg, %struct.Reg* %6942, i32 0, i32 0
  %RDI.i985 = bitcast %union.anon* %6943 to i64*
  %6944 = load i64, i64* %RCX.i984
  %6945 = load i64, i64* %PC.i983
  %6946 = add i64 %6945, 3
  store i64 %6946, i64* %PC.i983
  store i64 %6944, i64* %RDI.i985, align 8
  store %struct.Memory* %loadMem_45f968, %struct.Memory** %MEMORY
  %loadMem_45f96b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6948 = getelementptr inbounds %struct.GPR, %struct.GPR* %6947, i32 0, i32 33
  %6949 = getelementptr inbounds %struct.Reg, %struct.Reg* %6948, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %6949 to i64*
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 7
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %RDX.i981 = bitcast %union.anon* %6952 to i64*
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6954 = getelementptr inbounds %struct.GPR, %struct.GPR* %6953, i32 0, i32 11
  %6955 = getelementptr inbounds %struct.Reg, %struct.Reg* %6954, i32 0, i32 0
  %RDI.i982 = bitcast %union.anon* %6955 to i64*
  %6956 = load i64, i64* %RDI.i982
  %6957 = load i64, i64* %RDX.i981
  %6958 = load i64, i64* %PC.i980
  %6959 = add i64 %6958, 3
  store i64 %6959, i64* %PC.i980
  %6960 = add i64 %6957, %6956
  store i64 %6960, i64* %RDI.i982, align 8
  %6961 = icmp ult i64 %6960, %6956
  %6962 = icmp ult i64 %6960, %6957
  %6963 = or i1 %6961, %6962
  %6964 = zext i1 %6963 to i8
  %6965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6964, i8* %6965, align 1
  %6966 = trunc i64 %6960 to i32
  %6967 = and i32 %6966, 255
  %6968 = call i32 @llvm.ctpop.i32(i32 %6967)
  %6969 = trunc i32 %6968 to i8
  %6970 = and i8 %6969, 1
  %6971 = xor i8 %6970, 1
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6971, i8* %6972, align 1
  %6973 = xor i64 %6957, %6956
  %6974 = xor i64 %6973, %6960
  %6975 = lshr i64 %6974, 4
  %6976 = trunc i64 %6975 to i8
  %6977 = and i8 %6976, 1
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6977, i8* %6978, align 1
  %6979 = icmp eq i64 %6960, 0
  %6980 = zext i1 %6979 to i8
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6980, i8* %6981, align 1
  %6982 = lshr i64 %6960, 63
  %6983 = trunc i64 %6982 to i8
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6983, i8* %6984, align 1
  %6985 = lshr i64 %6956, 63
  %6986 = lshr i64 %6957, 63
  %6987 = xor i64 %6982, %6985
  %6988 = xor i64 %6982, %6986
  %6989 = add i64 %6987, %6988
  %6990 = icmp eq i64 %6989, 2
  %6991 = zext i1 %6990 to i8
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6991, i8* %6992, align 1
  store %struct.Memory* %loadMem_45f96b, %struct.Memory** %MEMORY
  %loadMem_45f96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 33
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %6995 to i64*
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 9
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %RSI.i978 = bitcast %union.anon* %6998 to i64*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 11
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %RDI.i979 = bitcast %union.anon* %7001 to i64*
  %7002 = load i64, i64* %RSI.i978
  %7003 = load i64, i64* %RDI.i979
  %7004 = add i64 %7003, 4
  %7005 = load i64, i64* %PC.i977
  %7006 = add i64 %7005, 3
  store i64 %7006, i64* %PC.i977
  %7007 = trunc i64 %7002 to i32
  %7008 = inttoptr i64 %7004 to i32*
  %7009 = load i32, i32* %7008
  %7010 = add i32 %7009, %7007
  %7011 = zext i32 %7010 to i64
  store i64 %7011, i64* %RSI.i978, align 8
  %7012 = icmp ult i32 %7010, %7007
  %7013 = icmp ult i32 %7010, %7009
  %7014 = or i1 %7012, %7013
  %7015 = zext i1 %7014 to i8
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7015, i8* %7016, align 1
  %7017 = and i32 %7010, 255
  %7018 = call i32 @llvm.ctpop.i32(i32 %7017)
  %7019 = trunc i32 %7018 to i8
  %7020 = and i8 %7019, 1
  %7021 = xor i8 %7020, 1
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7021, i8* %7022, align 1
  %7023 = xor i32 %7009, %7007
  %7024 = xor i32 %7023, %7010
  %7025 = lshr i32 %7024, 4
  %7026 = trunc i32 %7025 to i8
  %7027 = and i8 %7026, 1
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7027, i8* %7028, align 1
  %7029 = icmp eq i32 %7010, 0
  %7030 = zext i1 %7029 to i8
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7030, i8* %7031, align 1
  %7032 = lshr i32 %7010, 31
  %7033 = trunc i32 %7032 to i8
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7033, i8* %7034, align 1
  %7035 = lshr i32 %7007, 31
  %7036 = lshr i32 %7009, 31
  %7037 = xor i32 %7032, %7035
  %7038 = xor i32 %7032, %7036
  %7039 = add i32 %7037, %7038
  %7040 = icmp eq i32 %7039, 2
  %7041 = zext i1 %7040 to i8
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7041, i8* %7042, align 1
  store %struct.Memory* %loadMem_45f96e, %struct.Memory** %MEMORY
  %loadMem_45f971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7044 = getelementptr inbounds %struct.GPR, %struct.GPR* %7043, i32 0, i32 33
  %7045 = getelementptr inbounds %struct.Reg, %struct.Reg* %7044, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %7045 to i64*
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7047 = getelementptr inbounds %struct.GPR, %struct.GPR* %7046, i32 0, i32 7
  %7048 = getelementptr inbounds %struct.Reg, %struct.Reg* %7047, i32 0, i32 0
  %RDX.i975 = bitcast %union.anon* %7048 to i64*
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7050 = getelementptr inbounds %struct.GPR, %struct.GPR* %7049, i32 0, i32 15
  %7051 = getelementptr inbounds %struct.Reg, %struct.Reg* %7050, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %7051 to i64*
  %7052 = load i64, i64* %RBP.i976
  %7053 = sub i64 %7052, 20
  %7054 = load i64, i64* %PC.i974
  %7055 = add i64 %7054, 4
  store i64 %7055, i64* %PC.i974
  %7056 = inttoptr i64 %7053 to i32*
  %7057 = load i32, i32* %7056
  %7058 = sext i32 %7057 to i64
  store i64 %7058, i64* %RDX.i975, align 8
  store %struct.Memory* %loadMem_45f971, %struct.Memory** %MEMORY
  %loadMem_45f975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7060 = getelementptr inbounds %struct.GPR, %struct.GPR* %7059, i32 0, i32 33
  %7061 = getelementptr inbounds %struct.Reg, %struct.Reg* %7060, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %7061 to i64*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 7
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %RDX.i973 = bitcast %union.anon* %7064 to i64*
  %7065 = load i64, i64* %RDX.i973
  %7066 = load i64, i64* %PC.i972
  %7067 = add i64 %7066, 4
  store i64 %7067, i64* %PC.i972
  %7068 = shl i64 %7065, 4
  %7069 = icmp slt i64 %7068, 0
  %7070 = shl i64 %7068, 1
  store i64 %7070, i64* %RDX.i973, align 8
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7072 = zext i1 %7069 to i8
  store i8 %7072, i8* %7071, align 1
  %7073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7074 = trunc i64 %7070 to i32
  %7075 = and i32 %7074, 254
  %7076 = call i32 @llvm.ctpop.i32(i32 %7075)
  %7077 = trunc i32 %7076 to i8
  %7078 = and i8 %7077, 1
  %7079 = xor i8 %7078, 1
  store i8 %7079, i8* %7073, align 1
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7080, align 1
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7082 = icmp eq i64 %7070, 0
  %7083 = zext i1 %7082 to i8
  store i8 %7083, i8* %7081, align 1
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7085 = lshr i64 %7070, 63
  %7086 = trunc i64 %7085 to i8
  store i8 %7086, i8* %7084, align 1
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7087, align 1
  store %struct.Memory* %loadMem_45f975, %struct.Memory** %MEMORY
  %loadMem_45f979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7089 = getelementptr inbounds %struct.GPR, %struct.GPR* %7088, i32 0, i32 33
  %7090 = getelementptr inbounds %struct.Reg, %struct.Reg* %7089, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %7090 to i64*
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7092 = getelementptr inbounds %struct.GPR, %struct.GPR* %7091, i32 0, i32 1
  %7093 = getelementptr inbounds %struct.Reg, %struct.Reg* %7092, i32 0, i32 0
  %RAX.i970 = bitcast %union.anon* %7093 to i64*
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7095 = getelementptr inbounds %struct.GPR, %struct.GPR* %7094, i32 0, i32 11
  %7096 = getelementptr inbounds %struct.Reg, %struct.Reg* %7095, i32 0, i32 0
  %RDI.i971 = bitcast %union.anon* %7096 to i64*
  %7097 = load i64, i64* %RAX.i970
  %7098 = load i64, i64* %PC.i969
  %7099 = add i64 %7098, 3
  store i64 %7099, i64* %PC.i969
  store i64 %7097, i64* %RDI.i971, align 8
  store %struct.Memory* %loadMem_45f979, %struct.Memory** %MEMORY
  %loadMem_45f97c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7101 = getelementptr inbounds %struct.GPR, %struct.GPR* %7100, i32 0, i32 33
  %7102 = getelementptr inbounds %struct.Reg, %struct.Reg* %7101, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %7102 to i64*
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7104 = getelementptr inbounds %struct.GPR, %struct.GPR* %7103, i32 0, i32 7
  %7105 = getelementptr inbounds %struct.Reg, %struct.Reg* %7104, i32 0, i32 0
  %RDX.i967 = bitcast %union.anon* %7105 to i64*
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7107 = getelementptr inbounds %struct.GPR, %struct.GPR* %7106, i32 0, i32 11
  %7108 = getelementptr inbounds %struct.Reg, %struct.Reg* %7107, i32 0, i32 0
  %RDI.i968 = bitcast %union.anon* %7108 to i64*
  %7109 = load i64, i64* %RDI.i968
  %7110 = load i64, i64* %RDX.i967
  %7111 = load i64, i64* %PC.i966
  %7112 = add i64 %7111, 3
  store i64 %7112, i64* %PC.i966
  %7113 = add i64 %7110, %7109
  store i64 %7113, i64* %RDI.i968, align 8
  %7114 = icmp ult i64 %7113, %7109
  %7115 = icmp ult i64 %7113, %7110
  %7116 = or i1 %7114, %7115
  %7117 = zext i1 %7116 to i8
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7117, i8* %7118, align 1
  %7119 = trunc i64 %7113 to i32
  %7120 = and i32 %7119, 255
  %7121 = call i32 @llvm.ctpop.i32(i32 %7120)
  %7122 = trunc i32 %7121 to i8
  %7123 = and i8 %7122, 1
  %7124 = xor i8 %7123, 1
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7124, i8* %7125, align 1
  %7126 = xor i64 %7110, %7109
  %7127 = xor i64 %7126, %7113
  %7128 = lshr i64 %7127, 4
  %7129 = trunc i64 %7128 to i8
  %7130 = and i8 %7129, 1
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7130, i8* %7131, align 1
  %7132 = icmp eq i64 %7113, 0
  %7133 = zext i1 %7132 to i8
  %7134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7133, i8* %7134, align 1
  %7135 = lshr i64 %7113, 63
  %7136 = trunc i64 %7135 to i8
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7136, i8* %7137, align 1
  %7138 = lshr i64 %7109, 63
  %7139 = lshr i64 %7110, 63
  %7140 = xor i64 %7135, %7138
  %7141 = xor i64 %7135, %7139
  %7142 = add i64 %7140, %7141
  %7143 = icmp eq i64 %7142, 2
  %7144 = zext i1 %7143 to i8
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7144, i8* %7145, align 1
  store %struct.Memory* %loadMem_45f97c, %struct.Memory** %MEMORY
  %loadMem_45f97f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7147 = getelementptr inbounds %struct.GPR, %struct.GPR* %7146, i32 0, i32 33
  %7148 = getelementptr inbounds %struct.Reg, %struct.Reg* %7147, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %7148 to i64*
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7150 = getelementptr inbounds %struct.GPR, %struct.GPR* %7149, i32 0, i32 9
  %7151 = getelementptr inbounds %struct.Reg, %struct.Reg* %7150, i32 0, i32 0
  %ESI.i964 = bitcast %union.anon* %7151 to i32*
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7153 = getelementptr inbounds %struct.GPR, %struct.GPR* %7152, i32 0, i32 11
  %7154 = getelementptr inbounds %struct.Reg, %struct.Reg* %7153, i32 0, i32 0
  %RDI.i965 = bitcast %union.anon* %7154 to i64*
  %7155 = load i64, i64* %RDI.i965
  %7156 = load i32, i32* %ESI.i964
  %7157 = zext i32 %7156 to i64
  %7158 = load i64, i64* %PC.i963
  %7159 = add i64 %7158, 2
  store i64 %7159, i64* %PC.i963
  %7160 = inttoptr i64 %7155 to i32*
  store i32 %7156, i32* %7160
  store %struct.Memory* %loadMem_45f97f, %struct.Memory** %MEMORY
  %loadMem_45f981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7162 = getelementptr inbounds %struct.GPR, %struct.GPR* %7161, i32 0, i32 33
  %7163 = getelementptr inbounds %struct.Reg, %struct.Reg* %7162, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %7163 to i64*
  %7164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7165 = getelementptr inbounds %struct.GPR, %struct.GPR* %7164, i32 0, i32 7
  %7166 = getelementptr inbounds %struct.Reg, %struct.Reg* %7165, i32 0, i32 0
  %RDX.i961 = bitcast %union.anon* %7166 to i64*
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 15
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %RBP.i962 = bitcast %union.anon* %7169 to i64*
  %7170 = load i64, i64* %RBP.i962
  %7171 = sub i64 %7170, 20
  %7172 = load i64, i64* %PC.i960
  %7173 = add i64 %7172, 4
  store i64 %7173, i64* %PC.i960
  %7174 = inttoptr i64 %7171 to i32*
  %7175 = load i32, i32* %7174
  %7176 = sext i32 %7175 to i64
  store i64 %7176, i64* %RDX.i961, align 8
  store %struct.Memory* %loadMem_45f981, %struct.Memory** %MEMORY
  %loadMem_45f985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7178 = getelementptr inbounds %struct.GPR, %struct.GPR* %7177, i32 0, i32 33
  %7179 = getelementptr inbounds %struct.Reg, %struct.Reg* %7178, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %7179 to i64*
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 7
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %RDX.i959 = bitcast %union.anon* %7182 to i64*
  %7183 = load i64, i64* %RDX.i959
  %7184 = load i64, i64* %PC.i958
  %7185 = add i64 %7184, 4
  store i64 %7185, i64* %PC.i958
  %7186 = shl i64 %7183, 4
  %7187 = icmp slt i64 %7186, 0
  %7188 = shl i64 %7186, 1
  store i64 %7188, i64* %RDX.i959, align 8
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7190 = zext i1 %7187 to i8
  store i8 %7190, i8* %7189, align 1
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7192 = trunc i64 %7188 to i32
  %7193 = and i32 %7192, 254
  %7194 = call i32 @llvm.ctpop.i32(i32 %7193)
  %7195 = trunc i32 %7194 to i8
  %7196 = and i8 %7195, 1
  %7197 = xor i8 %7196, 1
  store i8 %7197, i8* %7191, align 1
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7198, align 1
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7200 = icmp eq i64 %7188, 0
  %7201 = zext i1 %7200 to i8
  store i8 %7201, i8* %7199, align 1
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7203 = lshr i64 %7188, 63
  %7204 = trunc i64 %7203 to i8
  store i8 %7204, i8* %7202, align 1
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7205, align 1
  store %struct.Memory* %loadMem_45f985, %struct.Memory** %MEMORY
  %loadMem_45f989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7207 = getelementptr inbounds %struct.GPR, %struct.GPR* %7206, i32 0, i32 33
  %7208 = getelementptr inbounds %struct.Reg, %struct.Reg* %7207, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %7208 to i64*
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7210 = getelementptr inbounds %struct.GPR, %struct.GPR* %7209, i32 0, i32 5
  %7211 = getelementptr inbounds %struct.Reg, %struct.Reg* %7210, i32 0, i32 0
  %RCX.i956 = bitcast %union.anon* %7211 to i64*
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7213 = getelementptr inbounds %struct.GPR, %struct.GPR* %7212, i32 0, i32 11
  %7214 = getelementptr inbounds %struct.Reg, %struct.Reg* %7213, i32 0, i32 0
  %RDI.i957 = bitcast %union.anon* %7214 to i64*
  %7215 = load i64, i64* %RCX.i956
  %7216 = load i64, i64* %PC.i955
  %7217 = add i64 %7216, 3
  store i64 %7217, i64* %PC.i955
  store i64 %7215, i64* %RDI.i957, align 8
  store %struct.Memory* %loadMem_45f989, %struct.Memory** %MEMORY
  %loadMem_45f98c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7219 = getelementptr inbounds %struct.GPR, %struct.GPR* %7218, i32 0, i32 33
  %7220 = getelementptr inbounds %struct.Reg, %struct.Reg* %7219, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %7220 to i64*
  %7221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7222 = getelementptr inbounds %struct.GPR, %struct.GPR* %7221, i32 0, i32 7
  %7223 = getelementptr inbounds %struct.Reg, %struct.Reg* %7222, i32 0, i32 0
  %RDX.i953 = bitcast %union.anon* %7223 to i64*
  %7224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7225 = getelementptr inbounds %struct.GPR, %struct.GPR* %7224, i32 0, i32 11
  %7226 = getelementptr inbounds %struct.Reg, %struct.Reg* %7225, i32 0, i32 0
  %RDI.i954 = bitcast %union.anon* %7226 to i64*
  %7227 = load i64, i64* %RDI.i954
  %7228 = load i64, i64* %RDX.i953
  %7229 = load i64, i64* %PC.i952
  %7230 = add i64 %7229, 3
  store i64 %7230, i64* %PC.i952
  %7231 = add i64 %7228, %7227
  store i64 %7231, i64* %RDI.i954, align 8
  %7232 = icmp ult i64 %7231, %7227
  %7233 = icmp ult i64 %7231, %7228
  %7234 = or i1 %7232, %7233
  %7235 = zext i1 %7234 to i8
  %7236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7235, i8* %7236, align 1
  %7237 = trunc i64 %7231 to i32
  %7238 = and i32 %7237, 255
  %7239 = call i32 @llvm.ctpop.i32(i32 %7238)
  %7240 = trunc i32 %7239 to i8
  %7241 = and i8 %7240, 1
  %7242 = xor i8 %7241, 1
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7242, i8* %7243, align 1
  %7244 = xor i64 %7228, %7227
  %7245 = xor i64 %7244, %7231
  %7246 = lshr i64 %7245, 4
  %7247 = trunc i64 %7246 to i8
  %7248 = and i8 %7247, 1
  %7249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7248, i8* %7249, align 1
  %7250 = icmp eq i64 %7231, 0
  %7251 = zext i1 %7250 to i8
  %7252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7251, i8* %7252, align 1
  %7253 = lshr i64 %7231, 63
  %7254 = trunc i64 %7253 to i8
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7254, i8* %7255, align 1
  %7256 = lshr i64 %7227, 63
  %7257 = lshr i64 %7228, 63
  %7258 = xor i64 %7253, %7256
  %7259 = xor i64 %7253, %7257
  %7260 = add i64 %7258, %7259
  %7261 = icmp eq i64 %7260, 2
  %7262 = zext i1 %7261 to i8
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7262, i8* %7263, align 1
  store %struct.Memory* %loadMem_45f98c, %struct.Memory** %MEMORY
  %loadMem_45f98f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7265 = getelementptr inbounds %struct.GPR, %struct.GPR* %7264, i32 0, i32 33
  %7266 = getelementptr inbounds %struct.Reg, %struct.Reg* %7265, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %7266 to i64*
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7268 = getelementptr inbounds %struct.GPR, %struct.GPR* %7267, i32 0, i32 9
  %7269 = getelementptr inbounds %struct.Reg, %struct.Reg* %7268, i32 0, i32 0
  %RSI.i950 = bitcast %union.anon* %7269 to i64*
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7271 = getelementptr inbounds %struct.GPR, %struct.GPR* %7270, i32 0, i32 11
  %7272 = getelementptr inbounds %struct.Reg, %struct.Reg* %7271, i32 0, i32 0
  %RDI.i951 = bitcast %union.anon* %7272 to i64*
  %7273 = load i64, i64* %RDI.i951
  %7274 = load i64, i64* %PC.i949
  %7275 = add i64 %7274, 2
  store i64 %7275, i64* %PC.i949
  %7276 = inttoptr i64 %7273 to i32*
  %7277 = load i32, i32* %7276
  %7278 = zext i32 %7277 to i64
  store i64 %7278, i64* %RSI.i950, align 8
  store %struct.Memory* %loadMem_45f98f, %struct.Memory** %MEMORY
  %loadMem_45f991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7280 = getelementptr inbounds %struct.GPR, %struct.GPR* %7279, i32 0, i32 33
  %7281 = getelementptr inbounds %struct.Reg, %struct.Reg* %7280, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %7281 to i64*
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7283 = getelementptr inbounds %struct.GPR, %struct.GPR* %7282, i32 0, i32 7
  %7284 = getelementptr inbounds %struct.Reg, %struct.Reg* %7283, i32 0, i32 0
  %RDX.i947 = bitcast %union.anon* %7284 to i64*
  %7285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7286 = getelementptr inbounds %struct.GPR, %struct.GPR* %7285, i32 0, i32 15
  %7287 = getelementptr inbounds %struct.Reg, %struct.Reg* %7286, i32 0, i32 0
  %RBP.i948 = bitcast %union.anon* %7287 to i64*
  %7288 = load i64, i64* %RBP.i948
  %7289 = sub i64 %7288, 20
  %7290 = load i64, i64* %PC.i946
  %7291 = add i64 %7290, 4
  store i64 %7291, i64* %PC.i946
  %7292 = inttoptr i64 %7289 to i32*
  %7293 = load i32, i32* %7292
  %7294 = sext i32 %7293 to i64
  store i64 %7294, i64* %RDX.i947, align 8
  store %struct.Memory* %loadMem_45f991, %struct.Memory** %MEMORY
  %loadMem_45f995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 33
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %7297 to i64*
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 7
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %RDX.i945 = bitcast %union.anon* %7300 to i64*
  %7301 = load i64, i64* %RDX.i945
  %7302 = load i64, i64* %PC.i944
  %7303 = add i64 %7302, 4
  store i64 %7303, i64* %PC.i944
  %7304 = shl i64 %7301, 4
  %7305 = icmp slt i64 %7304, 0
  %7306 = shl i64 %7304, 1
  store i64 %7306, i64* %RDX.i945, align 8
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7308 = zext i1 %7305 to i8
  store i8 %7308, i8* %7307, align 1
  %7309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7310 = trunc i64 %7306 to i32
  %7311 = and i32 %7310, 254
  %7312 = call i32 @llvm.ctpop.i32(i32 %7311)
  %7313 = trunc i32 %7312 to i8
  %7314 = and i8 %7313, 1
  %7315 = xor i8 %7314, 1
  store i8 %7315, i8* %7309, align 1
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7316, align 1
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7318 = icmp eq i64 %7306, 0
  %7319 = zext i1 %7318 to i8
  store i8 %7319, i8* %7317, align 1
  %7320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7321 = lshr i64 %7306, 63
  %7322 = trunc i64 %7321 to i8
  store i8 %7322, i8* %7320, align 1
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7323, align 1
  store %struct.Memory* %loadMem_45f995, %struct.Memory** %MEMORY
  %loadMem_45f999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7325 = getelementptr inbounds %struct.GPR, %struct.GPR* %7324, i32 0, i32 33
  %7326 = getelementptr inbounds %struct.Reg, %struct.Reg* %7325, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %7326 to i64*
  %7327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7328 = getelementptr inbounds %struct.GPR, %struct.GPR* %7327, i32 0, i32 5
  %7329 = getelementptr inbounds %struct.Reg, %struct.Reg* %7328, i32 0, i32 0
  %RCX.i942 = bitcast %union.anon* %7329 to i64*
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7331 = getelementptr inbounds %struct.GPR, %struct.GPR* %7330, i32 0, i32 11
  %7332 = getelementptr inbounds %struct.Reg, %struct.Reg* %7331, i32 0, i32 0
  %RDI.i943 = bitcast %union.anon* %7332 to i64*
  %7333 = load i64, i64* %RCX.i942
  %7334 = load i64, i64* %PC.i941
  %7335 = add i64 %7334, 3
  store i64 %7335, i64* %PC.i941
  store i64 %7333, i64* %RDI.i943, align 8
  store %struct.Memory* %loadMem_45f999, %struct.Memory** %MEMORY
  %loadMem_45f99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7337 = getelementptr inbounds %struct.GPR, %struct.GPR* %7336, i32 0, i32 33
  %7338 = getelementptr inbounds %struct.Reg, %struct.Reg* %7337, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %7338 to i64*
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7340 = getelementptr inbounds %struct.GPR, %struct.GPR* %7339, i32 0, i32 7
  %7341 = getelementptr inbounds %struct.Reg, %struct.Reg* %7340, i32 0, i32 0
  %RDX.i939 = bitcast %union.anon* %7341 to i64*
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7343 = getelementptr inbounds %struct.GPR, %struct.GPR* %7342, i32 0, i32 11
  %7344 = getelementptr inbounds %struct.Reg, %struct.Reg* %7343, i32 0, i32 0
  %RDI.i940 = bitcast %union.anon* %7344 to i64*
  %7345 = load i64, i64* %RDI.i940
  %7346 = load i64, i64* %RDX.i939
  %7347 = load i64, i64* %PC.i938
  %7348 = add i64 %7347, 3
  store i64 %7348, i64* %PC.i938
  %7349 = add i64 %7346, %7345
  store i64 %7349, i64* %RDI.i940, align 8
  %7350 = icmp ult i64 %7349, %7345
  %7351 = icmp ult i64 %7349, %7346
  %7352 = or i1 %7350, %7351
  %7353 = zext i1 %7352 to i8
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7353, i8* %7354, align 1
  %7355 = trunc i64 %7349 to i32
  %7356 = and i32 %7355, 255
  %7357 = call i32 @llvm.ctpop.i32(i32 %7356)
  %7358 = trunc i32 %7357 to i8
  %7359 = and i8 %7358, 1
  %7360 = xor i8 %7359, 1
  %7361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7360, i8* %7361, align 1
  %7362 = xor i64 %7346, %7345
  %7363 = xor i64 %7362, %7349
  %7364 = lshr i64 %7363, 4
  %7365 = trunc i64 %7364 to i8
  %7366 = and i8 %7365, 1
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7366, i8* %7367, align 1
  %7368 = icmp eq i64 %7349, 0
  %7369 = zext i1 %7368 to i8
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7369, i8* %7370, align 1
  %7371 = lshr i64 %7349, 63
  %7372 = trunc i64 %7371 to i8
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7372, i8* %7373, align 1
  %7374 = lshr i64 %7345, 63
  %7375 = lshr i64 %7346, 63
  %7376 = xor i64 %7371, %7374
  %7377 = xor i64 %7371, %7375
  %7378 = add i64 %7376, %7377
  %7379 = icmp eq i64 %7378, 2
  %7380 = zext i1 %7379 to i8
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7380, i8* %7381, align 1
  store %struct.Memory* %loadMem_45f99c, %struct.Memory** %MEMORY
  %loadMem_45f99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7383 = getelementptr inbounds %struct.GPR, %struct.GPR* %7382, i32 0, i32 33
  %7384 = getelementptr inbounds %struct.Reg, %struct.Reg* %7383, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %7384 to i64*
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7386 = getelementptr inbounds %struct.GPR, %struct.GPR* %7385, i32 0, i32 9
  %7387 = getelementptr inbounds %struct.Reg, %struct.Reg* %7386, i32 0, i32 0
  %RSI.i936 = bitcast %union.anon* %7387 to i64*
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 11
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %RDI.i937 = bitcast %union.anon* %7390 to i64*
  %7391 = load i64, i64* %RSI.i936
  %7392 = load i64, i64* %RDI.i937
  %7393 = add i64 %7392, 4
  %7394 = load i64, i64* %PC.i935
  %7395 = add i64 %7394, 3
  store i64 %7395, i64* %PC.i935
  %7396 = trunc i64 %7391 to i32
  %7397 = inttoptr i64 %7393 to i32*
  %7398 = load i32, i32* %7397
  %7399 = sub i32 %7396, %7398
  %7400 = zext i32 %7399 to i64
  store i64 %7400, i64* %RSI.i936, align 8
  %7401 = icmp ult i32 %7396, %7398
  %7402 = zext i1 %7401 to i8
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7402, i8* %7403, align 1
  %7404 = and i32 %7399, 255
  %7405 = call i32 @llvm.ctpop.i32(i32 %7404)
  %7406 = trunc i32 %7405 to i8
  %7407 = and i8 %7406, 1
  %7408 = xor i8 %7407, 1
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7408, i8* %7409, align 1
  %7410 = xor i32 %7398, %7396
  %7411 = xor i32 %7410, %7399
  %7412 = lshr i32 %7411, 4
  %7413 = trunc i32 %7412 to i8
  %7414 = and i8 %7413, 1
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7414, i8* %7415, align 1
  %7416 = icmp eq i32 %7399, 0
  %7417 = zext i1 %7416 to i8
  %7418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7417, i8* %7418, align 1
  %7419 = lshr i32 %7399, 31
  %7420 = trunc i32 %7419 to i8
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7420, i8* %7421, align 1
  %7422 = lshr i32 %7396, 31
  %7423 = lshr i32 %7398, 31
  %7424 = xor i32 %7423, %7422
  %7425 = xor i32 %7419, %7422
  %7426 = add i32 %7425, %7424
  %7427 = icmp eq i32 %7426, 2
  %7428 = zext i1 %7427 to i8
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7428, i8* %7429, align 1
  store %struct.Memory* %loadMem_45f99f, %struct.Memory** %MEMORY
  %loadMem_45f9a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7431 = getelementptr inbounds %struct.GPR, %struct.GPR* %7430, i32 0, i32 33
  %7432 = getelementptr inbounds %struct.Reg, %struct.Reg* %7431, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %7432 to i64*
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7434 = getelementptr inbounds %struct.GPR, %struct.GPR* %7433, i32 0, i32 7
  %7435 = getelementptr inbounds %struct.Reg, %struct.Reg* %7434, i32 0, i32 0
  %RDX.i933 = bitcast %union.anon* %7435 to i64*
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 15
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %7438 to i64*
  %7439 = load i64, i64* %RBP.i934
  %7440 = sub i64 %7439, 20
  %7441 = load i64, i64* %PC.i932
  %7442 = add i64 %7441, 4
  store i64 %7442, i64* %PC.i932
  %7443 = inttoptr i64 %7440 to i32*
  %7444 = load i32, i32* %7443
  %7445 = sext i32 %7444 to i64
  store i64 %7445, i64* %RDX.i933, align 8
  store %struct.Memory* %loadMem_45f9a2, %struct.Memory** %MEMORY
  %loadMem_45f9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7447 = getelementptr inbounds %struct.GPR, %struct.GPR* %7446, i32 0, i32 33
  %7448 = getelementptr inbounds %struct.Reg, %struct.Reg* %7447, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %7448 to i64*
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7450 = getelementptr inbounds %struct.GPR, %struct.GPR* %7449, i32 0, i32 7
  %7451 = getelementptr inbounds %struct.Reg, %struct.Reg* %7450, i32 0, i32 0
  %RDX.i931 = bitcast %union.anon* %7451 to i64*
  %7452 = load i64, i64* %RDX.i931
  %7453 = load i64, i64* %PC.i930
  %7454 = add i64 %7453, 4
  store i64 %7454, i64* %PC.i930
  %7455 = shl i64 %7452, 4
  %7456 = icmp slt i64 %7455, 0
  %7457 = shl i64 %7455, 1
  store i64 %7457, i64* %RDX.i931, align 8
  %7458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7459 = zext i1 %7456 to i8
  store i8 %7459, i8* %7458, align 1
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7461 = trunc i64 %7457 to i32
  %7462 = and i32 %7461, 254
  %7463 = call i32 @llvm.ctpop.i32(i32 %7462)
  %7464 = trunc i32 %7463 to i8
  %7465 = and i8 %7464, 1
  %7466 = xor i8 %7465, 1
  store i8 %7466, i8* %7460, align 1
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7467, align 1
  %7468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7469 = icmp eq i64 %7457, 0
  %7470 = zext i1 %7469 to i8
  store i8 %7470, i8* %7468, align 1
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7472 = lshr i64 %7457, 63
  %7473 = trunc i64 %7472 to i8
  store i8 %7473, i8* %7471, align 1
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7474, align 1
  store %struct.Memory* %loadMem_45f9a6, %struct.Memory** %MEMORY
  %loadMem_45f9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7476 = getelementptr inbounds %struct.GPR, %struct.GPR* %7475, i32 0, i32 33
  %7477 = getelementptr inbounds %struct.Reg, %struct.Reg* %7476, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %7477 to i64*
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7479 = getelementptr inbounds %struct.GPR, %struct.GPR* %7478, i32 0, i32 1
  %7480 = getelementptr inbounds %struct.Reg, %struct.Reg* %7479, i32 0, i32 0
  %RAX.i928 = bitcast %union.anon* %7480 to i64*
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7482 = getelementptr inbounds %struct.GPR, %struct.GPR* %7481, i32 0, i32 11
  %7483 = getelementptr inbounds %struct.Reg, %struct.Reg* %7482, i32 0, i32 0
  %RDI.i929 = bitcast %union.anon* %7483 to i64*
  %7484 = load i64, i64* %RAX.i928
  %7485 = load i64, i64* %PC.i927
  %7486 = add i64 %7485, 3
  store i64 %7486, i64* %PC.i927
  store i64 %7484, i64* %RDI.i929, align 8
  store %struct.Memory* %loadMem_45f9aa, %struct.Memory** %MEMORY
  %loadMem_45f9ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7488 = getelementptr inbounds %struct.GPR, %struct.GPR* %7487, i32 0, i32 33
  %7489 = getelementptr inbounds %struct.Reg, %struct.Reg* %7488, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %7489 to i64*
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7491 = getelementptr inbounds %struct.GPR, %struct.GPR* %7490, i32 0, i32 7
  %7492 = getelementptr inbounds %struct.Reg, %struct.Reg* %7491, i32 0, i32 0
  %RDX.i925 = bitcast %union.anon* %7492 to i64*
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 11
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %RDI.i926 = bitcast %union.anon* %7495 to i64*
  %7496 = load i64, i64* %RDI.i926
  %7497 = load i64, i64* %RDX.i925
  %7498 = load i64, i64* %PC.i924
  %7499 = add i64 %7498, 3
  store i64 %7499, i64* %PC.i924
  %7500 = add i64 %7497, %7496
  store i64 %7500, i64* %RDI.i926, align 8
  %7501 = icmp ult i64 %7500, %7496
  %7502 = icmp ult i64 %7500, %7497
  %7503 = or i1 %7501, %7502
  %7504 = zext i1 %7503 to i8
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7504, i8* %7505, align 1
  %7506 = trunc i64 %7500 to i32
  %7507 = and i32 %7506, 255
  %7508 = call i32 @llvm.ctpop.i32(i32 %7507)
  %7509 = trunc i32 %7508 to i8
  %7510 = and i8 %7509, 1
  %7511 = xor i8 %7510, 1
  %7512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7511, i8* %7512, align 1
  %7513 = xor i64 %7497, %7496
  %7514 = xor i64 %7513, %7500
  %7515 = lshr i64 %7514, 4
  %7516 = trunc i64 %7515 to i8
  %7517 = and i8 %7516, 1
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7517, i8* %7518, align 1
  %7519 = icmp eq i64 %7500, 0
  %7520 = zext i1 %7519 to i8
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7520, i8* %7521, align 1
  %7522 = lshr i64 %7500, 63
  %7523 = trunc i64 %7522 to i8
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7523, i8* %7524, align 1
  %7525 = lshr i64 %7496, 63
  %7526 = lshr i64 %7497, 63
  %7527 = xor i64 %7522, %7525
  %7528 = xor i64 %7522, %7526
  %7529 = add i64 %7527, %7528
  %7530 = icmp eq i64 %7529, 2
  %7531 = zext i1 %7530 to i8
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7531, i8* %7532, align 1
  store %struct.Memory* %loadMem_45f9ad, %struct.Memory** %MEMORY
  %loadMem_45f9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7534 = getelementptr inbounds %struct.GPR, %struct.GPR* %7533, i32 0, i32 33
  %7535 = getelementptr inbounds %struct.Reg, %struct.Reg* %7534, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %7535 to i64*
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7537 = getelementptr inbounds %struct.GPR, %struct.GPR* %7536, i32 0, i32 9
  %7538 = getelementptr inbounds %struct.Reg, %struct.Reg* %7537, i32 0, i32 0
  %ESI.i922 = bitcast %union.anon* %7538 to i32*
  %7539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7540 = getelementptr inbounds %struct.GPR, %struct.GPR* %7539, i32 0, i32 11
  %7541 = getelementptr inbounds %struct.Reg, %struct.Reg* %7540, i32 0, i32 0
  %RDI.i923 = bitcast %union.anon* %7541 to i64*
  %7542 = load i64, i64* %RDI.i923
  %7543 = add i64 %7542, 4
  %7544 = load i32, i32* %ESI.i922
  %7545 = zext i32 %7544 to i64
  %7546 = load i64, i64* %PC.i921
  %7547 = add i64 %7546, 3
  store i64 %7547, i64* %PC.i921
  %7548 = inttoptr i64 %7543 to i32*
  store i32 %7544, i32* %7548
  store %struct.Memory* %loadMem_45f9b0, %struct.Memory** %MEMORY
  %loadMem_45f9b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7550 = getelementptr inbounds %struct.GPR, %struct.GPR* %7549, i32 0, i32 33
  %7551 = getelementptr inbounds %struct.Reg, %struct.Reg* %7550, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %7551 to i64*
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7553 = getelementptr inbounds %struct.GPR, %struct.GPR* %7552, i32 0, i32 7
  %7554 = getelementptr inbounds %struct.Reg, %struct.Reg* %7553, i32 0, i32 0
  %RDX.i919 = bitcast %union.anon* %7554 to i64*
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7556 = getelementptr inbounds %struct.GPR, %struct.GPR* %7555, i32 0, i32 15
  %7557 = getelementptr inbounds %struct.Reg, %struct.Reg* %7556, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %7557 to i64*
  %7558 = load i64, i64* %RBP.i920
  %7559 = sub i64 %7558, 20
  %7560 = load i64, i64* %PC.i918
  %7561 = add i64 %7560, 4
  store i64 %7561, i64* %PC.i918
  %7562 = inttoptr i64 %7559 to i32*
  %7563 = load i32, i32* %7562
  %7564 = sext i32 %7563 to i64
  store i64 %7564, i64* %RDX.i919, align 8
  store %struct.Memory* %loadMem_45f9b3, %struct.Memory** %MEMORY
  %loadMem_45f9b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7566 = getelementptr inbounds %struct.GPR, %struct.GPR* %7565, i32 0, i32 33
  %7567 = getelementptr inbounds %struct.Reg, %struct.Reg* %7566, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %7567 to i64*
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7569 = getelementptr inbounds %struct.GPR, %struct.GPR* %7568, i32 0, i32 7
  %7570 = getelementptr inbounds %struct.Reg, %struct.Reg* %7569, i32 0, i32 0
  %RDX.i917 = bitcast %union.anon* %7570 to i64*
  %7571 = load i64, i64* %RDX.i917
  %7572 = load i64, i64* %PC.i916
  %7573 = add i64 %7572, 4
  store i64 %7573, i64* %PC.i916
  %7574 = shl i64 %7571, 4
  %7575 = icmp slt i64 %7574, 0
  %7576 = shl i64 %7574, 1
  store i64 %7576, i64* %RDX.i917, align 8
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7578 = zext i1 %7575 to i8
  store i8 %7578, i8* %7577, align 1
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7580 = trunc i64 %7576 to i32
  %7581 = and i32 %7580, 254
  %7582 = call i32 @llvm.ctpop.i32(i32 %7581)
  %7583 = trunc i32 %7582 to i8
  %7584 = and i8 %7583, 1
  %7585 = xor i8 %7584, 1
  store i8 %7585, i8* %7579, align 1
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7586, align 1
  %7587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7588 = icmp eq i64 %7576, 0
  %7589 = zext i1 %7588 to i8
  store i8 %7589, i8* %7587, align 1
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7591 = lshr i64 %7576, 63
  %7592 = trunc i64 %7591 to i8
  store i8 %7592, i8* %7590, align 1
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7593, align 1
  store %struct.Memory* %loadMem_45f9b7, %struct.Memory** %MEMORY
  %loadMem_45f9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 33
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %7596 to i64*
  %7597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7598 = getelementptr inbounds %struct.GPR, %struct.GPR* %7597, i32 0, i32 5
  %7599 = getelementptr inbounds %struct.Reg, %struct.Reg* %7598, i32 0, i32 0
  %RCX.i914 = bitcast %union.anon* %7599 to i64*
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7601 = getelementptr inbounds %struct.GPR, %struct.GPR* %7600, i32 0, i32 11
  %7602 = getelementptr inbounds %struct.Reg, %struct.Reg* %7601, i32 0, i32 0
  %RDI.i915 = bitcast %union.anon* %7602 to i64*
  %7603 = load i64, i64* %RCX.i914
  %7604 = load i64, i64* %PC.i913
  %7605 = add i64 %7604, 3
  store i64 %7605, i64* %PC.i913
  store i64 %7603, i64* %RDI.i915, align 8
  store %struct.Memory* %loadMem_45f9bb, %struct.Memory** %MEMORY
  %loadMem_45f9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7607 = getelementptr inbounds %struct.GPR, %struct.GPR* %7606, i32 0, i32 33
  %7608 = getelementptr inbounds %struct.Reg, %struct.Reg* %7607, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %7608 to i64*
  %7609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7610 = getelementptr inbounds %struct.GPR, %struct.GPR* %7609, i32 0, i32 7
  %7611 = getelementptr inbounds %struct.Reg, %struct.Reg* %7610, i32 0, i32 0
  %RDX.i911 = bitcast %union.anon* %7611 to i64*
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7613 = getelementptr inbounds %struct.GPR, %struct.GPR* %7612, i32 0, i32 11
  %7614 = getelementptr inbounds %struct.Reg, %struct.Reg* %7613, i32 0, i32 0
  %RDI.i912 = bitcast %union.anon* %7614 to i64*
  %7615 = load i64, i64* %RDI.i912
  %7616 = load i64, i64* %RDX.i911
  %7617 = load i64, i64* %PC.i910
  %7618 = add i64 %7617, 3
  store i64 %7618, i64* %PC.i910
  %7619 = add i64 %7616, %7615
  store i64 %7619, i64* %RDI.i912, align 8
  %7620 = icmp ult i64 %7619, %7615
  %7621 = icmp ult i64 %7619, %7616
  %7622 = or i1 %7620, %7621
  %7623 = zext i1 %7622 to i8
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7623, i8* %7624, align 1
  %7625 = trunc i64 %7619 to i32
  %7626 = and i32 %7625, 255
  %7627 = call i32 @llvm.ctpop.i32(i32 %7626)
  %7628 = trunc i32 %7627 to i8
  %7629 = and i8 %7628, 1
  %7630 = xor i8 %7629, 1
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7630, i8* %7631, align 1
  %7632 = xor i64 %7616, %7615
  %7633 = xor i64 %7632, %7619
  %7634 = lshr i64 %7633, 4
  %7635 = trunc i64 %7634 to i8
  %7636 = and i8 %7635, 1
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7636, i8* %7637, align 1
  %7638 = icmp eq i64 %7619, 0
  %7639 = zext i1 %7638 to i8
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7639, i8* %7640, align 1
  %7641 = lshr i64 %7619, 63
  %7642 = trunc i64 %7641 to i8
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7642, i8* %7643, align 1
  %7644 = lshr i64 %7615, 63
  %7645 = lshr i64 %7616, 63
  %7646 = xor i64 %7641, %7644
  %7647 = xor i64 %7641, %7645
  %7648 = add i64 %7646, %7647
  %7649 = icmp eq i64 %7648, 2
  %7650 = zext i1 %7649 to i8
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7650, i8* %7651, align 1
  store %struct.Memory* %loadMem_45f9be, %struct.Memory** %MEMORY
  %loadMem_45f9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7653 = getelementptr inbounds %struct.GPR, %struct.GPR* %7652, i32 0, i32 33
  %7654 = getelementptr inbounds %struct.Reg, %struct.Reg* %7653, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %7654 to i64*
  %7655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7656 = getelementptr inbounds %struct.GPR, %struct.GPR* %7655, i32 0, i32 9
  %7657 = getelementptr inbounds %struct.Reg, %struct.Reg* %7656, i32 0, i32 0
  %RSI.i908 = bitcast %union.anon* %7657 to i64*
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7659 = getelementptr inbounds %struct.GPR, %struct.GPR* %7658, i32 0, i32 11
  %7660 = getelementptr inbounds %struct.Reg, %struct.Reg* %7659, i32 0, i32 0
  %RDI.i909 = bitcast %union.anon* %7660 to i64*
  %7661 = load i64, i64* %RDI.i909
  %7662 = add i64 %7661, 8
  %7663 = load i64, i64* %PC.i907
  %7664 = add i64 %7663, 3
  store i64 %7664, i64* %PC.i907
  %7665 = inttoptr i64 %7662 to i32*
  %7666 = load i32, i32* %7665
  %7667 = zext i32 %7666 to i64
  store i64 %7667, i64* %RSI.i908, align 8
  store %struct.Memory* %loadMem_45f9c1, %struct.Memory** %MEMORY
  %loadMem_45f9c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7669 = getelementptr inbounds %struct.GPR, %struct.GPR* %7668, i32 0, i32 33
  %7670 = getelementptr inbounds %struct.Reg, %struct.Reg* %7669, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %7670 to i64*
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7672 = getelementptr inbounds %struct.GPR, %struct.GPR* %7671, i32 0, i32 7
  %7673 = getelementptr inbounds %struct.Reg, %struct.Reg* %7672, i32 0, i32 0
  %RDX.i905 = bitcast %union.anon* %7673 to i64*
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7675 = getelementptr inbounds %struct.GPR, %struct.GPR* %7674, i32 0, i32 15
  %7676 = getelementptr inbounds %struct.Reg, %struct.Reg* %7675, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %7676 to i64*
  %7677 = load i64, i64* %RBP.i906
  %7678 = sub i64 %7677, 20
  %7679 = load i64, i64* %PC.i904
  %7680 = add i64 %7679, 4
  store i64 %7680, i64* %PC.i904
  %7681 = inttoptr i64 %7678 to i32*
  %7682 = load i32, i32* %7681
  %7683 = sext i32 %7682 to i64
  store i64 %7683, i64* %RDX.i905, align 8
  store %struct.Memory* %loadMem_45f9c4, %struct.Memory** %MEMORY
  %loadMem_45f9c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7685 = getelementptr inbounds %struct.GPR, %struct.GPR* %7684, i32 0, i32 33
  %7686 = getelementptr inbounds %struct.Reg, %struct.Reg* %7685, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %7686 to i64*
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7688 = getelementptr inbounds %struct.GPR, %struct.GPR* %7687, i32 0, i32 7
  %7689 = getelementptr inbounds %struct.Reg, %struct.Reg* %7688, i32 0, i32 0
  %RDX.i903 = bitcast %union.anon* %7689 to i64*
  %7690 = load i64, i64* %RDX.i903
  %7691 = load i64, i64* %PC.i902
  %7692 = add i64 %7691, 4
  store i64 %7692, i64* %PC.i902
  %7693 = shl i64 %7690, 4
  %7694 = icmp slt i64 %7693, 0
  %7695 = shl i64 %7693, 1
  store i64 %7695, i64* %RDX.i903, align 8
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7697 = zext i1 %7694 to i8
  store i8 %7697, i8* %7696, align 1
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7699 = trunc i64 %7695 to i32
  %7700 = and i32 %7699, 254
  %7701 = call i32 @llvm.ctpop.i32(i32 %7700)
  %7702 = trunc i32 %7701 to i8
  %7703 = and i8 %7702, 1
  %7704 = xor i8 %7703, 1
  store i8 %7704, i8* %7698, align 1
  %7705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7705, align 1
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7707 = icmp eq i64 %7695, 0
  %7708 = zext i1 %7707 to i8
  store i8 %7708, i8* %7706, align 1
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7710 = lshr i64 %7695, 63
  %7711 = trunc i64 %7710 to i8
  store i8 %7711, i8* %7709, align 1
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7712, align 1
  store %struct.Memory* %loadMem_45f9c8, %struct.Memory** %MEMORY
  %loadMem_45f9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7714 = getelementptr inbounds %struct.GPR, %struct.GPR* %7713, i32 0, i32 33
  %7715 = getelementptr inbounds %struct.Reg, %struct.Reg* %7714, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %7715 to i64*
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7717 = getelementptr inbounds %struct.GPR, %struct.GPR* %7716, i32 0, i32 5
  %7718 = getelementptr inbounds %struct.Reg, %struct.Reg* %7717, i32 0, i32 0
  %RCX.i900 = bitcast %union.anon* %7718 to i64*
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7720 = getelementptr inbounds %struct.GPR, %struct.GPR* %7719, i32 0, i32 11
  %7721 = getelementptr inbounds %struct.Reg, %struct.Reg* %7720, i32 0, i32 0
  %RDI.i901 = bitcast %union.anon* %7721 to i64*
  %7722 = load i64, i64* %RCX.i900
  %7723 = load i64, i64* %PC.i899
  %7724 = add i64 %7723, 3
  store i64 %7724, i64* %PC.i899
  store i64 %7722, i64* %RDI.i901, align 8
  store %struct.Memory* %loadMem_45f9cc, %struct.Memory** %MEMORY
  %loadMem_45f9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7726 = getelementptr inbounds %struct.GPR, %struct.GPR* %7725, i32 0, i32 33
  %7727 = getelementptr inbounds %struct.Reg, %struct.Reg* %7726, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %7727 to i64*
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7729 = getelementptr inbounds %struct.GPR, %struct.GPR* %7728, i32 0, i32 7
  %7730 = getelementptr inbounds %struct.Reg, %struct.Reg* %7729, i32 0, i32 0
  %RDX.i897 = bitcast %union.anon* %7730 to i64*
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7732 = getelementptr inbounds %struct.GPR, %struct.GPR* %7731, i32 0, i32 11
  %7733 = getelementptr inbounds %struct.Reg, %struct.Reg* %7732, i32 0, i32 0
  %RDI.i898 = bitcast %union.anon* %7733 to i64*
  %7734 = load i64, i64* %RDI.i898
  %7735 = load i64, i64* %RDX.i897
  %7736 = load i64, i64* %PC.i896
  %7737 = add i64 %7736, 3
  store i64 %7737, i64* %PC.i896
  %7738 = add i64 %7735, %7734
  store i64 %7738, i64* %RDI.i898, align 8
  %7739 = icmp ult i64 %7738, %7734
  %7740 = icmp ult i64 %7738, %7735
  %7741 = or i1 %7739, %7740
  %7742 = zext i1 %7741 to i8
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7742, i8* %7743, align 1
  %7744 = trunc i64 %7738 to i32
  %7745 = and i32 %7744, 255
  %7746 = call i32 @llvm.ctpop.i32(i32 %7745)
  %7747 = trunc i32 %7746 to i8
  %7748 = and i8 %7747, 1
  %7749 = xor i8 %7748, 1
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7749, i8* %7750, align 1
  %7751 = xor i64 %7735, %7734
  %7752 = xor i64 %7751, %7738
  %7753 = lshr i64 %7752, 4
  %7754 = trunc i64 %7753 to i8
  %7755 = and i8 %7754, 1
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7755, i8* %7756, align 1
  %7757 = icmp eq i64 %7738, 0
  %7758 = zext i1 %7757 to i8
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7758, i8* %7759, align 1
  %7760 = lshr i64 %7738, 63
  %7761 = trunc i64 %7760 to i8
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7761, i8* %7762, align 1
  %7763 = lshr i64 %7734, 63
  %7764 = lshr i64 %7735, 63
  %7765 = xor i64 %7760, %7763
  %7766 = xor i64 %7760, %7764
  %7767 = add i64 %7765, %7766
  %7768 = icmp eq i64 %7767, 2
  %7769 = zext i1 %7768 to i8
  %7770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7769, i8* %7770, align 1
  store %struct.Memory* %loadMem_45f9cf, %struct.Memory** %MEMORY
  %loadMem_45f9d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7772 = getelementptr inbounds %struct.GPR, %struct.GPR* %7771, i32 0, i32 33
  %7773 = getelementptr inbounds %struct.Reg, %struct.Reg* %7772, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %7773 to i64*
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7775 = getelementptr inbounds %struct.GPR, %struct.GPR* %7774, i32 0, i32 9
  %7776 = getelementptr inbounds %struct.Reg, %struct.Reg* %7775, i32 0, i32 0
  %RSI.i894 = bitcast %union.anon* %7776 to i64*
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7778 = getelementptr inbounds %struct.GPR, %struct.GPR* %7777, i32 0, i32 11
  %7779 = getelementptr inbounds %struct.Reg, %struct.Reg* %7778, i32 0, i32 0
  %RDI.i895 = bitcast %union.anon* %7779 to i64*
  %7780 = load i64, i64* %RSI.i894
  %7781 = load i64, i64* %RDI.i895
  %7782 = add i64 %7781, 12
  %7783 = load i64, i64* %PC.i893
  %7784 = add i64 %7783, 3
  store i64 %7784, i64* %PC.i893
  %7785 = trunc i64 %7780 to i32
  %7786 = inttoptr i64 %7782 to i32*
  %7787 = load i32, i32* %7786
  %7788 = add i32 %7787, %7785
  %7789 = zext i32 %7788 to i64
  store i64 %7789, i64* %RSI.i894, align 8
  %7790 = icmp ult i32 %7788, %7785
  %7791 = icmp ult i32 %7788, %7787
  %7792 = or i1 %7790, %7791
  %7793 = zext i1 %7792 to i8
  %7794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7793, i8* %7794, align 1
  %7795 = and i32 %7788, 255
  %7796 = call i32 @llvm.ctpop.i32(i32 %7795)
  %7797 = trunc i32 %7796 to i8
  %7798 = and i8 %7797, 1
  %7799 = xor i8 %7798, 1
  %7800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7799, i8* %7800, align 1
  %7801 = xor i32 %7787, %7785
  %7802 = xor i32 %7801, %7788
  %7803 = lshr i32 %7802, 4
  %7804 = trunc i32 %7803 to i8
  %7805 = and i8 %7804, 1
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7805, i8* %7806, align 1
  %7807 = icmp eq i32 %7788, 0
  %7808 = zext i1 %7807 to i8
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7808, i8* %7809, align 1
  %7810 = lshr i32 %7788, 31
  %7811 = trunc i32 %7810 to i8
  %7812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7811, i8* %7812, align 1
  %7813 = lshr i32 %7785, 31
  %7814 = lshr i32 %7787, 31
  %7815 = xor i32 %7810, %7813
  %7816 = xor i32 %7810, %7814
  %7817 = add i32 %7815, %7816
  %7818 = icmp eq i32 %7817, 2
  %7819 = zext i1 %7818 to i8
  %7820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7819, i8* %7820, align 1
  store %struct.Memory* %loadMem_45f9d2, %struct.Memory** %MEMORY
  %loadMem_45f9d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7822 = getelementptr inbounds %struct.GPR, %struct.GPR* %7821, i32 0, i32 33
  %7823 = getelementptr inbounds %struct.Reg, %struct.Reg* %7822, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %7823 to i64*
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7825 = getelementptr inbounds %struct.GPR, %struct.GPR* %7824, i32 0, i32 7
  %7826 = getelementptr inbounds %struct.Reg, %struct.Reg* %7825, i32 0, i32 0
  %RDX.i891 = bitcast %union.anon* %7826 to i64*
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7828 = getelementptr inbounds %struct.GPR, %struct.GPR* %7827, i32 0, i32 15
  %7829 = getelementptr inbounds %struct.Reg, %struct.Reg* %7828, i32 0, i32 0
  %RBP.i892 = bitcast %union.anon* %7829 to i64*
  %7830 = load i64, i64* %RBP.i892
  %7831 = sub i64 %7830, 20
  %7832 = load i64, i64* %PC.i890
  %7833 = add i64 %7832, 4
  store i64 %7833, i64* %PC.i890
  %7834 = inttoptr i64 %7831 to i32*
  %7835 = load i32, i32* %7834
  %7836 = sext i32 %7835 to i64
  store i64 %7836, i64* %RDX.i891, align 8
  store %struct.Memory* %loadMem_45f9d5, %struct.Memory** %MEMORY
  %loadMem_45f9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7838 = getelementptr inbounds %struct.GPR, %struct.GPR* %7837, i32 0, i32 33
  %7839 = getelementptr inbounds %struct.Reg, %struct.Reg* %7838, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %7839 to i64*
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7841 = getelementptr inbounds %struct.GPR, %struct.GPR* %7840, i32 0, i32 7
  %7842 = getelementptr inbounds %struct.Reg, %struct.Reg* %7841, i32 0, i32 0
  %RDX.i889 = bitcast %union.anon* %7842 to i64*
  %7843 = load i64, i64* %RDX.i889
  %7844 = load i64, i64* %PC.i888
  %7845 = add i64 %7844, 4
  store i64 %7845, i64* %PC.i888
  %7846 = shl i64 %7843, 4
  %7847 = icmp slt i64 %7846, 0
  %7848 = shl i64 %7846, 1
  store i64 %7848, i64* %RDX.i889, align 8
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7850 = zext i1 %7847 to i8
  store i8 %7850, i8* %7849, align 1
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7852 = trunc i64 %7848 to i32
  %7853 = and i32 %7852, 254
  %7854 = call i32 @llvm.ctpop.i32(i32 %7853)
  %7855 = trunc i32 %7854 to i8
  %7856 = and i8 %7855, 1
  %7857 = xor i8 %7856, 1
  store i8 %7857, i8* %7851, align 1
  %7858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7858, align 1
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7860 = icmp eq i64 %7848, 0
  %7861 = zext i1 %7860 to i8
  store i8 %7861, i8* %7859, align 1
  %7862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7863 = lshr i64 %7848, 63
  %7864 = trunc i64 %7863 to i8
  store i8 %7864, i8* %7862, align 1
  %7865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7865, align 1
  store %struct.Memory* %loadMem_45f9d9, %struct.Memory** %MEMORY
  %loadMem_45f9dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7867 = getelementptr inbounds %struct.GPR, %struct.GPR* %7866, i32 0, i32 33
  %7868 = getelementptr inbounds %struct.Reg, %struct.Reg* %7867, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %7868 to i64*
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7870 = getelementptr inbounds %struct.GPR, %struct.GPR* %7869, i32 0, i32 1
  %7871 = getelementptr inbounds %struct.Reg, %struct.Reg* %7870, i32 0, i32 0
  %RAX.i886 = bitcast %union.anon* %7871 to i64*
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7873 = getelementptr inbounds %struct.GPR, %struct.GPR* %7872, i32 0, i32 11
  %7874 = getelementptr inbounds %struct.Reg, %struct.Reg* %7873, i32 0, i32 0
  %RDI.i887 = bitcast %union.anon* %7874 to i64*
  %7875 = load i64, i64* %RAX.i886
  %7876 = load i64, i64* %PC.i885
  %7877 = add i64 %7876, 3
  store i64 %7877, i64* %PC.i885
  store i64 %7875, i64* %RDI.i887, align 8
  store %struct.Memory* %loadMem_45f9dd, %struct.Memory** %MEMORY
  %loadMem_45f9e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 33
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %7880 to i64*
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 7
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %RDX.i883 = bitcast %union.anon* %7883 to i64*
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 11
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %RDI.i884 = bitcast %union.anon* %7886 to i64*
  %7887 = load i64, i64* %RDI.i884
  %7888 = load i64, i64* %RDX.i883
  %7889 = load i64, i64* %PC.i882
  %7890 = add i64 %7889, 3
  store i64 %7890, i64* %PC.i882
  %7891 = add i64 %7888, %7887
  store i64 %7891, i64* %RDI.i884, align 8
  %7892 = icmp ult i64 %7891, %7887
  %7893 = icmp ult i64 %7891, %7888
  %7894 = or i1 %7892, %7893
  %7895 = zext i1 %7894 to i8
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7895, i8* %7896, align 1
  %7897 = trunc i64 %7891 to i32
  %7898 = and i32 %7897, 255
  %7899 = call i32 @llvm.ctpop.i32(i32 %7898)
  %7900 = trunc i32 %7899 to i8
  %7901 = and i8 %7900, 1
  %7902 = xor i8 %7901, 1
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7902, i8* %7903, align 1
  %7904 = xor i64 %7888, %7887
  %7905 = xor i64 %7904, %7891
  %7906 = lshr i64 %7905, 4
  %7907 = trunc i64 %7906 to i8
  %7908 = and i8 %7907, 1
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7908, i8* %7909, align 1
  %7910 = icmp eq i64 %7891, 0
  %7911 = zext i1 %7910 to i8
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7911, i8* %7912, align 1
  %7913 = lshr i64 %7891, 63
  %7914 = trunc i64 %7913 to i8
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7914, i8* %7915, align 1
  %7916 = lshr i64 %7887, 63
  %7917 = lshr i64 %7888, 63
  %7918 = xor i64 %7913, %7916
  %7919 = xor i64 %7913, %7917
  %7920 = add i64 %7918, %7919
  %7921 = icmp eq i64 %7920, 2
  %7922 = zext i1 %7921 to i8
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7922, i8* %7923, align 1
  store %struct.Memory* %loadMem_45f9e0, %struct.Memory** %MEMORY
  %loadMem_45f9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7925 = getelementptr inbounds %struct.GPR, %struct.GPR* %7924, i32 0, i32 33
  %7926 = getelementptr inbounds %struct.Reg, %struct.Reg* %7925, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %7926 to i64*
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 9
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %ESI.i880 = bitcast %union.anon* %7929 to i32*
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 11
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %RDI.i881 = bitcast %union.anon* %7932 to i64*
  %7933 = load i64, i64* %RDI.i881
  %7934 = add i64 %7933, 8
  %7935 = load i32, i32* %ESI.i880
  %7936 = zext i32 %7935 to i64
  %7937 = load i64, i64* %PC.i879
  %7938 = add i64 %7937, 3
  store i64 %7938, i64* %PC.i879
  %7939 = inttoptr i64 %7934 to i32*
  store i32 %7935, i32* %7939
  store %struct.Memory* %loadMem_45f9e3, %struct.Memory** %MEMORY
  %loadMem_45f9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7941 = getelementptr inbounds %struct.GPR, %struct.GPR* %7940, i32 0, i32 33
  %7942 = getelementptr inbounds %struct.Reg, %struct.Reg* %7941, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %7942 to i64*
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7944 = getelementptr inbounds %struct.GPR, %struct.GPR* %7943, i32 0, i32 7
  %7945 = getelementptr inbounds %struct.Reg, %struct.Reg* %7944, i32 0, i32 0
  %RDX.i877 = bitcast %union.anon* %7945 to i64*
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 15
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %RBP.i878 = bitcast %union.anon* %7948 to i64*
  %7949 = load i64, i64* %RBP.i878
  %7950 = sub i64 %7949, 20
  %7951 = load i64, i64* %PC.i876
  %7952 = add i64 %7951, 4
  store i64 %7952, i64* %PC.i876
  %7953 = inttoptr i64 %7950 to i32*
  %7954 = load i32, i32* %7953
  %7955 = sext i32 %7954 to i64
  store i64 %7955, i64* %RDX.i877, align 8
  store %struct.Memory* %loadMem_45f9e6, %struct.Memory** %MEMORY
  %loadMem_45f9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7957 = getelementptr inbounds %struct.GPR, %struct.GPR* %7956, i32 0, i32 33
  %7958 = getelementptr inbounds %struct.Reg, %struct.Reg* %7957, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %7958 to i64*
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7960 = getelementptr inbounds %struct.GPR, %struct.GPR* %7959, i32 0, i32 7
  %7961 = getelementptr inbounds %struct.Reg, %struct.Reg* %7960, i32 0, i32 0
  %RDX.i875 = bitcast %union.anon* %7961 to i64*
  %7962 = load i64, i64* %RDX.i875
  %7963 = load i64, i64* %PC.i874
  %7964 = add i64 %7963, 4
  store i64 %7964, i64* %PC.i874
  %7965 = shl i64 %7962, 4
  %7966 = icmp slt i64 %7965, 0
  %7967 = shl i64 %7965, 1
  store i64 %7967, i64* %RDX.i875, align 8
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7969 = zext i1 %7966 to i8
  store i8 %7969, i8* %7968, align 1
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %7971 = trunc i64 %7967 to i32
  %7972 = and i32 %7971, 254
  %7973 = call i32 @llvm.ctpop.i32(i32 %7972)
  %7974 = trunc i32 %7973 to i8
  %7975 = and i8 %7974, 1
  %7976 = xor i8 %7975, 1
  store i8 %7976, i8* %7970, align 1
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7977, align 1
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7979 = icmp eq i64 %7967, 0
  %7980 = zext i1 %7979 to i8
  store i8 %7980, i8* %7978, align 1
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7982 = lshr i64 %7967, 63
  %7983 = trunc i64 %7982 to i8
  store i8 %7983, i8* %7981, align 1
  %7984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7984, align 1
  store %struct.Memory* %loadMem_45f9ea, %struct.Memory** %MEMORY
  %loadMem_45f9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7986 = getelementptr inbounds %struct.GPR, %struct.GPR* %7985, i32 0, i32 33
  %7987 = getelementptr inbounds %struct.Reg, %struct.Reg* %7986, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %7987 to i64*
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 5
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %RCX.i872 = bitcast %union.anon* %7990 to i64*
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7992 = getelementptr inbounds %struct.GPR, %struct.GPR* %7991, i32 0, i32 11
  %7993 = getelementptr inbounds %struct.Reg, %struct.Reg* %7992, i32 0, i32 0
  %RDI.i873 = bitcast %union.anon* %7993 to i64*
  %7994 = load i64, i64* %RCX.i872
  %7995 = load i64, i64* %PC.i871
  %7996 = add i64 %7995, 3
  store i64 %7996, i64* %PC.i871
  store i64 %7994, i64* %RDI.i873, align 8
  store %struct.Memory* %loadMem_45f9ee, %struct.Memory** %MEMORY
  %loadMem_45f9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7998 = getelementptr inbounds %struct.GPR, %struct.GPR* %7997, i32 0, i32 33
  %7999 = getelementptr inbounds %struct.Reg, %struct.Reg* %7998, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %7999 to i64*
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8001 = getelementptr inbounds %struct.GPR, %struct.GPR* %8000, i32 0, i32 7
  %8002 = getelementptr inbounds %struct.Reg, %struct.Reg* %8001, i32 0, i32 0
  %RDX.i869 = bitcast %union.anon* %8002 to i64*
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8004 = getelementptr inbounds %struct.GPR, %struct.GPR* %8003, i32 0, i32 11
  %8005 = getelementptr inbounds %struct.Reg, %struct.Reg* %8004, i32 0, i32 0
  %RDI.i870 = bitcast %union.anon* %8005 to i64*
  %8006 = load i64, i64* %RDI.i870
  %8007 = load i64, i64* %RDX.i869
  %8008 = load i64, i64* %PC.i868
  %8009 = add i64 %8008, 3
  store i64 %8009, i64* %PC.i868
  %8010 = add i64 %8007, %8006
  store i64 %8010, i64* %RDI.i870, align 8
  %8011 = icmp ult i64 %8010, %8006
  %8012 = icmp ult i64 %8010, %8007
  %8013 = or i1 %8011, %8012
  %8014 = zext i1 %8013 to i8
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8014, i8* %8015, align 1
  %8016 = trunc i64 %8010 to i32
  %8017 = and i32 %8016, 255
  %8018 = call i32 @llvm.ctpop.i32(i32 %8017)
  %8019 = trunc i32 %8018 to i8
  %8020 = and i8 %8019, 1
  %8021 = xor i8 %8020, 1
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8021, i8* %8022, align 1
  %8023 = xor i64 %8007, %8006
  %8024 = xor i64 %8023, %8010
  %8025 = lshr i64 %8024, 4
  %8026 = trunc i64 %8025 to i8
  %8027 = and i8 %8026, 1
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8027, i8* %8028, align 1
  %8029 = icmp eq i64 %8010, 0
  %8030 = zext i1 %8029 to i8
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8030, i8* %8031, align 1
  %8032 = lshr i64 %8010, 63
  %8033 = trunc i64 %8032 to i8
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8033, i8* %8034, align 1
  %8035 = lshr i64 %8006, 63
  %8036 = lshr i64 %8007, 63
  %8037 = xor i64 %8032, %8035
  %8038 = xor i64 %8032, %8036
  %8039 = add i64 %8037, %8038
  %8040 = icmp eq i64 %8039, 2
  %8041 = zext i1 %8040 to i8
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8041, i8* %8042, align 1
  store %struct.Memory* %loadMem_45f9f1, %struct.Memory** %MEMORY
  %loadMem_45f9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8044 = getelementptr inbounds %struct.GPR, %struct.GPR* %8043, i32 0, i32 33
  %8045 = getelementptr inbounds %struct.Reg, %struct.Reg* %8044, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %8045 to i64*
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8047 = getelementptr inbounds %struct.GPR, %struct.GPR* %8046, i32 0, i32 9
  %8048 = getelementptr inbounds %struct.Reg, %struct.Reg* %8047, i32 0, i32 0
  %RSI.i866 = bitcast %union.anon* %8048 to i64*
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8050 = getelementptr inbounds %struct.GPR, %struct.GPR* %8049, i32 0, i32 11
  %8051 = getelementptr inbounds %struct.Reg, %struct.Reg* %8050, i32 0, i32 0
  %RDI.i867 = bitcast %union.anon* %8051 to i64*
  %8052 = load i64, i64* %RDI.i867
  %8053 = add i64 %8052, 8
  %8054 = load i64, i64* %PC.i865
  %8055 = add i64 %8054, 3
  store i64 %8055, i64* %PC.i865
  %8056 = inttoptr i64 %8053 to i32*
  %8057 = load i32, i32* %8056
  %8058 = zext i32 %8057 to i64
  store i64 %8058, i64* %RSI.i866, align 8
  store %struct.Memory* %loadMem_45f9f4, %struct.Memory** %MEMORY
  %loadMem_45f9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8060 = getelementptr inbounds %struct.GPR, %struct.GPR* %8059, i32 0, i32 33
  %8061 = getelementptr inbounds %struct.Reg, %struct.Reg* %8060, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %8061 to i64*
  %8062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8063 = getelementptr inbounds %struct.GPR, %struct.GPR* %8062, i32 0, i32 7
  %8064 = getelementptr inbounds %struct.Reg, %struct.Reg* %8063, i32 0, i32 0
  %RDX.i863 = bitcast %union.anon* %8064 to i64*
  %8065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8066 = getelementptr inbounds %struct.GPR, %struct.GPR* %8065, i32 0, i32 15
  %8067 = getelementptr inbounds %struct.Reg, %struct.Reg* %8066, i32 0, i32 0
  %RBP.i864 = bitcast %union.anon* %8067 to i64*
  %8068 = load i64, i64* %RBP.i864
  %8069 = sub i64 %8068, 20
  %8070 = load i64, i64* %PC.i862
  %8071 = add i64 %8070, 4
  store i64 %8071, i64* %PC.i862
  %8072 = inttoptr i64 %8069 to i32*
  %8073 = load i32, i32* %8072
  %8074 = sext i32 %8073 to i64
  store i64 %8074, i64* %RDX.i863, align 8
  store %struct.Memory* %loadMem_45f9f7, %struct.Memory** %MEMORY
  %loadMem_45f9fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8076 = getelementptr inbounds %struct.GPR, %struct.GPR* %8075, i32 0, i32 33
  %8077 = getelementptr inbounds %struct.Reg, %struct.Reg* %8076, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %8077 to i64*
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8079 = getelementptr inbounds %struct.GPR, %struct.GPR* %8078, i32 0, i32 7
  %8080 = getelementptr inbounds %struct.Reg, %struct.Reg* %8079, i32 0, i32 0
  %RDX.i861 = bitcast %union.anon* %8080 to i64*
  %8081 = load i64, i64* %RDX.i861
  %8082 = load i64, i64* %PC.i860
  %8083 = add i64 %8082, 4
  store i64 %8083, i64* %PC.i860
  %8084 = shl i64 %8081, 4
  %8085 = icmp slt i64 %8084, 0
  %8086 = shl i64 %8084, 1
  store i64 %8086, i64* %RDX.i861, align 8
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8088 = zext i1 %8085 to i8
  store i8 %8088, i8* %8087, align 1
  %8089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8090 = trunc i64 %8086 to i32
  %8091 = and i32 %8090, 254
  %8092 = call i32 @llvm.ctpop.i32(i32 %8091)
  %8093 = trunc i32 %8092 to i8
  %8094 = and i8 %8093, 1
  %8095 = xor i8 %8094, 1
  store i8 %8095, i8* %8089, align 1
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8096, align 1
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8098 = icmp eq i64 %8086, 0
  %8099 = zext i1 %8098 to i8
  store i8 %8099, i8* %8097, align 1
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8101 = lshr i64 %8086, 63
  %8102 = trunc i64 %8101 to i8
  store i8 %8102, i8* %8100, align 1
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8103, align 1
  store %struct.Memory* %loadMem_45f9fb, %struct.Memory** %MEMORY
  %loadMem_45f9ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8105 = getelementptr inbounds %struct.GPR, %struct.GPR* %8104, i32 0, i32 33
  %8106 = getelementptr inbounds %struct.Reg, %struct.Reg* %8105, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %8106 to i64*
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 5
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %RCX.i858 = bitcast %union.anon* %8109 to i64*
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8111 = getelementptr inbounds %struct.GPR, %struct.GPR* %8110, i32 0, i32 11
  %8112 = getelementptr inbounds %struct.Reg, %struct.Reg* %8111, i32 0, i32 0
  %RDI.i859 = bitcast %union.anon* %8112 to i64*
  %8113 = load i64, i64* %RCX.i858
  %8114 = load i64, i64* %PC.i857
  %8115 = add i64 %8114, 3
  store i64 %8115, i64* %PC.i857
  store i64 %8113, i64* %RDI.i859, align 8
  store %struct.Memory* %loadMem_45f9ff, %struct.Memory** %MEMORY
  %loadMem_45fa02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8117 = getelementptr inbounds %struct.GPR, %struct.GPR* %8116, i32 0, i32 33
  %8118 = getelementptr inbounds %struct.Reg, %struct.Reg* %8117, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %8118 to i64*
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8120 = getelementptr inbounds %struct.GPR, %struct.GPR* %8119, i32 0, i32 7
  %8121 = getelementptr inbounds %struct.Reg, %struct.Reg* %8120, i32 0, i32 0
  %RDX.i855 = bitcast %union.anon* %8121 to i64*
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8123 = getelementptr inbounds %struct.GPR, %struct.GPR* %8122, i32 0, i32 11
  %8124 = getelementptr inbounds %struct.Reg, %struct.Reg* %8123, i32 0, i32 0
  %RDI.i856 = bitcast %union.anon* %8124 to i64*
  %8125 = load i64, i64* %RDI.i856
  %8126 = load i64, i64* %RDX.i855
  %8127 = load i64, i64* %PC.i854
  %8128 = add i64 %8127, 3
  store i64 %8128, i64* %PC.i854
  %8129 = add i64 %8126, %8125
  store i64 %8129, i64* %RDI.i856, align 8
  %8130 = icmp ult i64 %8129, %8125
  %8131 = icmp ult i64 %8129, %8126
  %8132 = or i1 %8130, %8131
  %8133 = zext i1 %8132 to i8
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8133, i8* %8134, align 1
  %8135 = trunc i64 %8129 to i32
  %8136 = and i32 %8135, 255
  %8137 = call i32 @llvm.ctpop.i32(i32 %8136)
  %8138 = trunc i32 %8137 to i8
  %8139 = and i8 %8138, 1
  %8140 = xor i8 %8139, 1
  %8141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8140, i8* %8141, align 1
  %8142 = xor i64 %8126, %8125
  %8143 = xor i64 %8142, %8129
  %8144 = lshr i64 %8143, 4
  %8145 = trunc i64 %8144 to i8
  %8146 = and i8 %8145, 1
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8146, i8* %8147, align 1
  %8148 = icmp eq i64 %8129, 0
  %8149 = zext i1 %8148 to i8
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8149, i8* %8150, align 1
  %8151 = lshr i64 %8129, 63
  %8152 = trunc i64 %8151 to i8
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8152, i8* %8153, align 1
  %8154 = lshr i64 %8125, 63
  %8155 = lshr i64 %8126, 63
  %8156 = xor i64 %8151, %8154
  %8157 = xor i64 %8151, %8155
  %8158 = add i64 %8156, %8157
  %8159 = icmp eq i64 %8158, 2
  %8160 = zext i1 %8159 to i8
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8160, i8* %8161, align 1
  store %struct.Memory* %loadMem_45fa02, %struct.Memory** %MEMORY
  %loadMem_45fa05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8163 = getelementptr inbounds %struct.GPR, %struct.GPR* %8162, i32 0, i32 33
  %8164 = getelementptr inbounds %struct.Reg, %struct.Reg* %8163, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %8164 to i64*
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8166 = getelementptr inbounds %struct.GPR, %struct.GPR* %8165, i32 0, i32 9
  %8167 = getelementptr inbounds %struct.Reg, %struct.Reg* %8166, i32 0, i32 0
  %RSI.i852 = bitcast %union.anon* %8167 to i64*
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8169 = getelementptr inbounds %struct.GPR, %struct.GPR* %8168, i32 0, i32 11
  %8170 = getelementptr inbounds %struct.Reg, %struct.Reg* %8169, i32 0, i32 0
  %RDI.i853 = bitcast %union.anon* %8170 to i64*
  %8171 = load i64, i64* %RSI.i852
  %8172 = load i64, i64* %RDI.i853
  %8173 = add i64 %8172, 12
  %8174 = load i64, i64* %PC.i851
  %8175 = add i64 %8174, 3
  store i64 %8175, i64* %PC.i851
  %8176 = trunc i64 %8171 to i32
  %8177 = inttoptr i64 %8173 to i32*
  %8178 = load i32, i32* %8177
  %8179 = sub i32 %8176, %8178
  %8180 = zext i32 %8179 to i64
  store i64 %8180, i64* %RSI.i852, align 8
  %8181 = icmp ult i32 %8176, %8178
  %8182 = zext i1 %8181 to i8
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8182, i8* %8183, align 1
  %8184 = and i32 %8179, 255
  %8185 = call i32 @llvm.ctpop.i32(i32 %8184)
  %8186 = trunc i32 %8185 to i8
  %8187 = and i8 %8186, 1
  %8188 = xor i8 %8187, 1
  %8189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8188, i8* %8189, align 1
  %8190 = xor i32 %8178, %8176
  %8191 = xor i32 %8190, %8179
  %8192 = lshr i32 %8191, 4
  %8193 = trunc i32 %8192 to i8
  %8194 = and i8 %8193, 1
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8194, i8* %8195, align 1
  %8196 = icmp eq i32 %8179, 0
  %8197 = zext i1 %8196 to i8
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8197, i8* %8198, align 1
  %8199 = lshr i32 %8179, 31
  %8200 = trunc i32 %8199 to i8
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8200, i8* %8201, align 1
  %8202 = lshr i32 %8176, 31
  %8203 = lshr i32 %8178, 31
  %8204 = xor i32 %8203, %8202
  %8205 = xor i32 %8199, %8202
  %8206 = add i32 %8205, %8204
  %8207 = icmp eq i32 %8206, 2
  %8208 = zext i1 %8207 to i8
  %8209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8208, i8* %8209, align 1
  store %struct.Memory* %loadMem_45fa05, %struct.Memory** %MEMORY
  %loadMem_45fa08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 33
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %8212 to i64*
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 7
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %RDX.i849 = bitcast %union.anon* %8215 to i64*
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8217 = getelementptr inbounds %struct.GPR, %struct.GPR* %8216, i32 0, i32 15
  %8218 = getelementptr inbounds %struct.Reg, %struct.Reg* %8217, i32 0, i32 0
  %RBP.i850 = bitcast %union.anon* %8218 to i64*
  %8219 = load i64, i64* %RBP.i850
  %8220 = sub i64 %8219, 20
  %8221 = load i64, i64* %PC.i848
  %8222 = add i64 %8221, 4
  store i64 %8222, i64* %PC.i848
  %8223 = inttoptr i64 %8220 to i32*
  %8224 = load i32, i32* %8223
  %8225 = sext i32 %8224 to i64
  store i64 %8225, i64* %RDX.i849, align 8
  store %struct.Memory* %loadMem_45fa08, %struct.Memory** %MEMORY
  %loadMem_45fa0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8227 = getelementptr inbounds %struct.GPR, %struct.GPR* %8226, i32 0, i32 33
  %8228 = getelementptr inbounds %struct.Reg, %struct.Reg* %8227, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %8228 to i64*
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8230 = getelementptr inbounds %struct.GPR, %struct.GPR* %8229, i32 0, i32 7
  %8231 = getelementptr inbounds %struct.Reg, %struct.Reg* %8230, i32 0, i32 0
  %RDX.i847 = bitcast %union.anon* %8231 to i64*
  %8232 = load i64, i64* %RDX.i847
  %8233 = load i64, i64* %PC.i846
  %8234 = add i64 %8233, 4
  store i64 %8234, i64* %PC.i846
  %8235 = shl i64 %8232, 4
  %8236 = icmp slt i64 %8235, 0
  %8237 = shl i64 %8235, 1
  store i64 %8237, i64* %RDX.i847, align 8
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8239 = zext i1 %8236 to i8
  store i8 %8239, i8* %8238, align 1
  %8240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8241 = trunc i64 %8237 to i32
  %8242 = and i32 %8241, 254
  %8243 = call i32 @llvm.ctpop.i32(i32 %8242)
  %8244 = trunc i32 %8243 to i8
  %8245 = and i8 %8244, 1
  %8246 = xor i8 %8245, 1
  store i8 %8246, i8* %8240, align 1
  %8247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8247, align 1
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8249 = icmp eq i64 %8237, 0
  %8250 = zext i1 %8249 to i8
  store i8 %8250, i8* %8248, align 1
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8252 = lshr i64 %8237, 63
  %8253 = trunc i64 %8252 to i8
  store i8 %8253, i8* %8251, align 1
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8254, align 1
  store %struct.Memory* %loadMem_45fa0c, %struct.Memory** %MEMORY
  %loadMem_45fa10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 33
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %8257 to i64*
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8259 = getelementptr inbounds %struct.GPR, %struct.GPR* %8258, i32 0, i32 1
  %8260 = getelementptr inbounds %struct.Reg, %struct.Reg* %8259, i32 0, i32 0
  %RAX.i844 = bitcast %union.anon* %8260 to i64*
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8262 = getelementptr inbounds %struct.GPR, %struct.GPR* %8261, i32 0, i32 11
  %8263 = getelementptr inbounds %struct.Reg, %struct.Reg* %8262, i32 0, i32 0
  %RDI.i845 = bitcast %union.anon* %8263 to i64*
  %8264 = load i64, i64* %RAX.i844
  %8265 = load i64, i64* %PC.i843
  %8266 = add i64 %8265, 3
  store i64 %8266, i64* %PC.i843
  store i64 %8264, i64* %RDI.i845, align 8
  store %struct.Memory* %loadMem_45fa10, %struct.Memory** %MEMORY
  %loadMem_45fa13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8268 = getelementptr inbounds %struct.GPR, %struct.GPR* %8267, i32 0, i32 33
  %8269 = getelementptr inbounds %struct.Reg, %struct.Reg* %8268, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %8269 to i64*
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8271 = getelementptr inbounds %struct.GPR, %struct.GPR* %8270, i32 0, i32 7
  %8272 = getelementptr inbounds %struct.Reg, %struct.Reg* %8271, i32 0, i32 0
  %RDX.i841 = bitcast %union.anon* %8272 to i64*
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8274 = getelementptr inbounds %struct.GPR, %struct.GPR* %8273, i32 0, i32 11
  %8275 = getelementptr inbounds %struct.Reg, %struct.Reg* %8274, i32 0, i32 0
  %RDI.i842 = bitcast %union.anon* %8275 to i64*
  %8276 = load i64, i64* %RDI.i842
  %8277 = load i64, i64* %RDX.i841
  %8278 = load i64, i64* %PC.i840
  %8279 = add i64 %8278, 3
  store i64 %8279, i64* %PC.i840
  %8280 = add i64 %8277, %8276
  store i64 %8280, i64* %RDI.i842, align 8
  %8281 = icmp ult i64 %8280, %8276
  %8282 = icmp ult i64 %8280, %8277
  %8283 = or i1 %8281, %8282
  %8284 = zext i1 %8283 to i8
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8284, i8* %8285, align 1
  %8286 = trunc i64 %8280 to i32
  %8287 = and i32 %8286, 255
  %8288 = call i32 @llvm.ctpop.i32(i32 %8287)
  %8289 = trunc i32 %8288 to i8
  %8290 = and i8 %8289, 1
  %8291 = xor i8 %8290, 1
  %8292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8291, i8* %8292, align 1
  %8293 = xor i64 %8277, %8276
  %8294 = xor i64 %8293, %8280
  %8295 = lshr i64 %8294, 4
  %8296 = trunc i64 %8295 to i8
  %8297 = and i8 %8296, 1
  %8298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8297, i8* %8298, align 1
  %8299 = icmp eq i64 %8280, 0
  %8300 = zext i1 %8299 to i8
  %8301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8300, i8* %8301, align 1
  %8302 = lshr i64 %8280, 63
  %8303 = trunc i64 %8302 to i8
  %8304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8303, i8* %8304, align 1
  %8305 = lshr i64 %8276, 63
  %8306 = lshr i64 %8277, 63
  %8307 = xor i64 %8302, %8305
  %8308 = xor i64 %8302, %8306
  %8309 = add i64 %8307, %8308
  %8310 = icmp eq i64 %8309, 2
  %8311 = zext i1 %8310 to i8
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8311, i8* %8312, align 1
  store %struct.Memory* %loadMem_45fa13, %struct.Memory** %MEMORY
  %loadMem_45fa16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8314 = getelementptr inbounds %struct.GPR, %struct.GPR* %8313, i32 0, i32 33
  %8315 = getelementptr inbounds %struct.Reg, %struct.Reg* %8314, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %8315 to i64*
  %8316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8317 = getelementptr inbounds %struct.GPR, %struct.GPR* %8316, i32 0, i32 9
  %8318 = getelementptr inbounds %struct.Reg, %struct.Reg* %8317, i32 0, i32 0
  %ESI.i838 = bitcast %union.anon* %8318 to i32*
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8320 = getelementptr inbounds %struct.GPR, %struct.GPR* %8319, i32 0, i32 11
  %8321 = getelementptr inbounds %struct.Reg, %struct.Reg* %8320, i32 0, i32 0
  %RDI.i839 = bitcast %union.anon* %8321 to i64*
  %8322 = load i64, i64* %RDI.i839
  %8323 = add i64 %8322, 12
  %8324 = load i32, i32* %ESI.i838
  %8325 = zext i32 %8324 to i64
  %8326 = load i64, i64* %PC.i837
  %8327 = add i64 %8326, 3
  store i64 %8327, i64* %PC.i837
  %8328 = inttoptr i64 %8323 to i32*
  store i32 %8324, i32* %8328
  store %struct.Memory* %loadMem_45fa16, %struct.Memory** %MEMORY
  %loadMem_45fa19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8330 = getelementptr inbounds %struct.GPR, %struct.GPR* %8329, i32 0, i32 33
  %8331 = getelementptr inbounds %struct.Reg, %struct.Reg* %8330, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %8331 to i64*
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8333 = getelementptr inbounds %struct.GPR, %struct.GPR* %8332, i32 0, i32 7
  %8334 = getelementptr inbounds %struct.Reg, %struct.Reg* %8333, i32 0, i32 0
  %RDX.i835 = bitcast %union.anon* %8334 to i64*
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8336 = getelementptr inbounds %struct.GPR, %struct.GPR* %8335, i32 0, i32 15
  %8337 = getelementptr inbounds %struct.Reg, %struct.Reg* %8336, i32 0, i32 0
  %RBP.i836 = bitcast %union.anon* %8337 to i64*
  %8338 = load i64, i64* %RBP.i836
  %8339 = sub i64 %8338, 20
  %8340 = load i64, i64* %PC.i834
  %8341 = add i64 %8340, 4
  store i64 %8341, i64* %PC.i834
  %8342 = inttoptr i64 %8339 to i32*
  %8343 = load i32, i32* %8342
  %8344 = sext i32 %8343 to i64
  store i64 %8344, i64* %RDX.i835, align 8
  store %struct.Memory* %loadMem_45fa19, %struct.Memory** %MEMORY
  %loadMem_45fa1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8346 = getelementptr inbounds %struct.GPR, %struct.GPR* %8345, i32 0, i32 33
  %8347 = getelementptr inbounds %struct.Reg, %struct.Reg* %8346, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %8347 to i64*
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8349 = getelementptr inbounds %struct.GPR, %struct.GPR* %8348, i32 0, i32 7
  %8350 = getelementptr inbounds %struct.Reg, %struct.Reg* %8349, i32 0, i32 0
  %RDX.i833 = bitcast %union.anon* %8350 to i64*
  %8351 = load i64, i64* %RDX.i833
  %8352 = load i64, i64* %PC.i832
  %8353 = add i64 %8352, 4
  store i64 %8353, i64* %PC.i832
  %8354 = shl i64 %8351, 4
  %8355 = icmp slt i64 %8354, 0
  %8356 = shl i64 %8354, 1
  store i64 %8356, i64* %RDX.i833, align 8
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8358 = zext i1 %8355 to i8
  store i8 %8358, i8* %8357, align 1
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8360 = trunc i64 %8356 to i32
  %8361 = and i32 %8360, 254
  %8362 = call i32 @llvm.ctpop.i32(i32 %8361)
  %8363 = trunc i32 %8362 to i8
  %8364 = and i8 %8363, 1
  %8365 = xor i8 %8364, 1
  store i8 %8365, i8* %8359, align 1
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8366, align 1
  %8367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8368 = icmp eq i64 %8356, 0
  %8369 = zext i1 %8368 to i8
  store i8 %8369, i8* %8367, align 1
  %8370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8371 = lshr i64 %8356, 63
  %8372 = trunc i64 %8371 to i8
  store i8 %8372, i8* %8370, align 1
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8373, align 1
  store %struct.Memory* %loadMem_45fa1d, %struct.Memory** %MEMORY
  %loadMem_45fa21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8375 = getelementptr inbounds %struct.GPR, %struct.GPR* %8374, i32 0, i32 33
  %8376 = getelementptr inbounds %struct.Reg, %struct.Reg* %8375, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %8376 to i64*
  %8377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8378 = getelementptr inbounds %struct.GPR, %struct.GPR* %8377, i32 0, i32 5
  %8379 = getelementptr inbounds %struct.Reg, %struct.Reg* %8378, i32 0, i32 0
  %RCX.i830 = bitcast %union.anon* %8379 to i64*
  %8380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8381 = getelementptr inbounds %struct.GPR, %struct.GPR* %8380, i32 0, i32 11
  %8382 = getelementptr inbounds %struct.Reg, %struct.Reg* %8381, i32 0, i32 0
  %RDI.i831 = bitcast %union.anon* %8382 to i64*
  %8383 = load i64, i64* %RCX.i830
  %8384 = load i64, i64* %PC.i829
  %8385 = add i64 %8384, 3
  store i64 %8385, i64* %PC.i829
  store i64 %8383, i64* %RDI.i831, align 8
  store %struct.Memory* %loadMem_45fa21, %struct.Memory** %MEMORY
  %loadMem_45fa24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8387 = getelementptr inbounds %struct.GPR, %struct.GPR* %8386, i32 0, i32 33
  %8388 = getelementptr inbounds %struct.Reg, %struct.Reg* %8387, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %8388 to i64*
  %8389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8390 = getelementptr inbounds %struct.GPR, %struct.GPR* %8389, i32 0, i32 7
  %8391 = getelementptr inbounds %struct.Reg, %struct.Reg* %8390, i32 0, i32 0
  %RDX.i827 = bitcast %union.anon* %8391 to i64*
  %8392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8393 = getelementptr inbounds %struct.GPR, %struct.GPR* %8392, i32 0, i32 11
  %8394 = getelementptr inbounds %struct.Reg, %struct.Reg* %8393, i32 0, i32 0
  %RDI.i828 = bitcast %union.anon* %8394 to i64*
  %8395 = load i64, i64* %RDI.i828
  %8396 = load i64, i64* %RDX.i827
  %8397 = load i64, i64* %PC.i826
  %8398 = add i64 %8397, 3
  store i64 %8398, i64* %PC.i826
  %8399 = add i64 %8396, %8395
  store i64 %8399, i64* %RDI.i828, align 8
  %8400 = icmp ult i64 %8399, %8395
  %8401 = icmp ult i64 %8399, %8396
  %8402 = or i1 %8400, %8401
  %8403 = zext i1 %8402 to i8
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8403, i8* %8404, align 1
  %8405 = trunc i64 %8399 to i32
  %8406 = and i32 %8405, 255
  %8407 = call i32 @llvm.ctpop.i32(i32 %8406)
  %8408 = trunc i32 %8407 to i8
  %8409 = and i8 %8408, 1
  %8410 = xor i8 %8409, 1
  %8411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8410, i8* %8411, align 1
  %8412 = xor i64 %8396, %8395
  %8413 = xor i64 %8412, %8399
  %8414 = lshr i64 %8413, 4
  %8415 = trunc i64 %8414 to i8
  %8416 = and i8 %8415, 1
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8416, i8* %8417, align 1
  %8418 = icmp eq i64 %8399, 0
  %8419 = zext i1 %8418 to i8
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8419, i8* %8420, align 1
  %8421 = lshr i64 %8399, 63
  %8422 = trunc i64 %8421 to i8
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8422, i8* %8423, align 1
  %8424 = lshr i64 %8395, 63
  %8425 = lshr i64 %8396, 63
  %8426 = xor i64 %8421, %8424
  %8427 = xor i64 %8421, %8425
  %8428 = add i64 %8426, %8427
  %8429 = icmp eq i64 %8428, 2
  %8430 = zext i1 %8429 to i8
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8430, i8* %8431, align 1
  store %struct.Memory* %loadMem_45fa24, %struct.Memory** %MEMORY
  %loadMem_45fa27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 33
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %8434 to i64*
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8436 = getelementptr inbounds %struct.GPR, %struct.GPR* %8435, i32 0, i32 9
  %8437 = getelementptr inbounds %struct.Reg, %struct.Reg* %8436, i32 0, i32 0
  %RSI.i824 = bitcast %union.anon* %8437 to i64*
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8439 = getelementptr inbounds %struct.GPR, %struct.GPR* %8438, i32 0, i32 11
  %8440 = getelementptr inbounds %struct.Reg, %struct.Reg* %8439, i32 0, i32 0
  %RDI.i825 = bitcast %union.anon* %8440 to i64*
  %8441 = load i64, i64* %RDI.i825
  %8442 = add i64 %8441, 16
  %8443 = load i64, i64* %PC.i823
  %8444 = add i64 %8443, 3
  store i64 %8444, i64* %PC.i823
  %8445 = inttoptr i64 %8442 to i32*
  %8446 = load i32, i32* %8445
  %8447 = zext i32 %8446 to i64
  store i64 %8447, i64* %RSI.i824, align 8
  store %struct.Memory* %loadMem_45fa27, %struct.Memory** %MEMORY
  %loadMem_45fa2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 33
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %8450 to i64*
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8452 = getelementptr inbounds %struct.GPR, %struct.GPR* %8451, i32 0, i32 7
  %8453 = getelementptr inbounds %struct.Reg, %struct.Reg* %8452, i32 0, i32 0
  %RDX.i821 = bitcast %union.anon* %8453 to i64*
  %8454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8455 = getelementptr inbounds %struct.GPR, %struct.GPR* %8454, i32 0, i32 15
  %8456 = getelementptr inbounds %struct.Reg, %struct.Reg* %8455, i32 0, i32 0
  %RBP.i822 = bitcast %union.anon* %8456 to i64*
  %8457 = load i64, i64* %RBP.i822
  %8458 = sub i64 %8457, 20
  %8459 = load i64, i64* %PC.i820
  %8460 = add i64 %8459, 4
  store i64 %8460, i64* %PC.i820
  %8461 = inttoptr i64 %8458 to i32*
  %8462 = load i32, i32* %8461
  %8463 = sext i32 %8462 to i64
  store i64 %8463, i64* %RDX.i821, align 8
  store %struct.Memory* %loadMem_45fa2a, %struct.Memory** %MEMORY
  %loadMem_45fa2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8465 = getelementptr inbounds %struct.GPR, %struct.GPR* %8464, i32 0, i32 33
  %8466 = getelementptr inbounds %struct.Reg, %struct.Reg* %8465, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %8466 to i64*
  %8467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8468 = getelementptr inbounds %struct.GPR, %struct.GPR* %8467, i32 0, i32 7
  %8469 = getelementptr inbounds %struct.Reg, %struct.Reg* %8468, i32 0, i32 0
  %RDX.i819 = bitcast %union.anon* %8469 to i64*
  %8470 = load i64, i64* %RDX.i819
  %8471 = load i64, i64* %PC.i818
  %8472 = add i64 %8471, 4
  store i64 %8472, i64* %PC.i818
  %8473 = shl i64 %8470, 4
  %8474 = icmp slt i64 %8473, 0
  %8475 = shl i64 %8473, 1
  store i64 %8475, i64* %RDX.i819, align 8
  %8476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8477 = zext i1 %8474 to i8
  store i8 %8477, i8* %8476, align 1
  %8478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8479 = trunc i64 %8475 to i32
  %8480 = and i32 %8479, 254
  %8481 = call i32 @llvm.ctpop.i32(i32 %8480)
  %8482 = trunc i32 %8481 to i8
  %8483 = and i8 %8482, 1
  %8484 = xor i8 %8483, 1
  store i8 %8484, i8* %8478, align 1
  %8485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8485, align 1
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8487 = icmp eq i64 %8475, 0
  %8488 = zext i1 %8487 to i8
  store i8 %8488, i8* %8486, align 1
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8490 = lshr i64 %8475, 63
  %8491 = trunc i64 %8490 to i8
  store i8 %8491, i8* %8489, align 1
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8492, align 1
  store %struct.Memory* %loadMem_45fa2e, %struct.Memory** %MEMORY
  %loadMem_45fa32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 33
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %8495 to i64*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 5
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %RCX.i816 = bitcast %union.anon* %8498 to i64*
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 11
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %RDI.i817 = bitcast %union.anon* %8501 to i64*
  %8502 = load i64, i64* %RCX.i816
  %8503 = load i64, i64* %PC.i815
  %8504 = add i64 %8503, 3
  store i64 %8504, i64* %PC.i815
  store i64 %8502, i64* %RDI.i817, align 8
  store %struct.Memory* %loadMem_45fa32, %struct.Memory** %MEMORY
  %loadMem_45fa35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8506 = getelementptr inbounds %struct.GPR, %struct.GPR* %8505, i32 0, i32 33
  %8507 = getelementptr inbounds %struct.Reg, %struct.Reg* %8506, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %8507 to i64*
  %8508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8509 = getelementptr inbounds %struct.GPR, %struct.GPR* %8508, i32 0, i32 7
  %8510 = getelementptr inbounds %struct.Reg, %struct.Reg* %8509, i32 0, i32 0
  %RDX.i813 = bitcast %union.anon* %8510 to i64*
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8512 = getelementptr inbounds %struct.GPR, %struct.GPR* %8511, i32 0, i32 11
  %8513 = getelementptr inbounds %struct.Reg, %struct.Reg* %8512, i32 0, i32 0
  %RDI.i814 = bitcast %union.anon* %8513 to i64*
  %8514 = load i64, i64* %RDI.i814
  %8515 = load i64, i64* %RDX.i813
  %8516 = load i64, i64* %PC.i812
  %8517 = add i64 %8516, 3
  store i64 %8517, i64* %PC.i812
  %8518 = add i64 %8515, %8514
  store i64 %8518, i64* %RDI.i814, align 8
  %8519 = icmp ult i64 %8518, %8514
  %8520 = icmp ult i64 %8518, %8515
  %8521 = or i1 %8519, %8520
  %8522 = zext i1 %8521 to i8
  %8523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8522, i8* %8523, align 1
  %8524 = trunc i64 %8518 to i32
  %8525 = and i32 %8524, 255
  %8526 = call i32 @llvm.ctpop.i32(i32 %8525)
  %8527 = trunc i32 %8526 to i8
  %8528 = and i8 %8527, 1
  %8529 = xor i8 %8528, 1
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8529, i8* %8530, align 1
  %8531 = xor i64 %8515, %8514
  %8532 = xor i64 %8531, %8518
  %8533 = lshr i64 %8532, 4
  %8534 = trunc i64 %8533 to i8
  %8535 = and i8 %8534, 1
  %8536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8535, i8* %8536, align 1
  %8537 = icmp eq i64 %8518, 0
  %8538 = zext i1 %8537 to i8
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8538, i8* %8539, align 1
  %8540 = lshr i64 %8518, 63
  %8541 = trunc i64 %8540 to i8
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8541, i8* %8542, align 1
  %8543 = lshr i64 %8514, 63
  %8544 = lshr i64 %8515, 63
  %8545 = xor i64 %8540, %8543
  %8546 = xor i64 %8540, %8544
  %8547 = add i64 %8545, %8546
  %8548 = icmp eq i64 %8547, 2
  %8549 = zext i1 %8548 to i8
  %8550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8549, i8* %8550, align 1
  store %struct.Memory* %loadMem_45fa35, %struct.Memory** %MEMORY
  %loadMem_45fa38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8552 = getelementptr inbounds %struct.GPR, %struct.GPR* %8551, i32 0, i32 33
  %8553 = getelementptr inbounds %struct.Reg, %struct.Reg* %8552, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %8553 to i64*
  %8554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8555 = getelementptr inbounds %struct.GPR, %struct.GPR* %8554, i32 0, i32 9
  %8556 = getelementptr inbounds %struct.Reg, %struct.Reg* %8555, i32 0, i32 0
  %RSI.i810 = bitcast %union.anon* %8556 to i64*
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 11
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %RDI.i811 = bitcast %union.anon* %8559 to i64*
  %8560 = load i64, i64* %RSI.i810
  %8561 = load i64, i64* %RDI.i811
  %8562 = add i64 %8561, 20
  %8563 = load i64, i64* %PC.i809
  %8564 = add i64 %8563, 3
  store i64 %8564, i64* %PC.i809
  %8565 = trunc i64 %8560 to i32
  %8566 = inttoptr i64 %8562 to i32*
  %8567 = load i32, i32* %8566
  %8568 = add i32 %8567, %8565
  %8569 = zext i32 %8568 to i64
  store i64 %8569, i64* %RSI.i810, align 8
  %8570 = icmp ult i32 %8568, %8565
  %8571 = icmp ult i32 %8568, %8567
  %8572 = or i1 %8570, %8571
  %8573 = zext i1 %8572 to i8
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8573, i8* %8574, align 1
  %8575 = and i32 %8568, 255
  %8576 = call i32 @llvm.ctpop.i32(i32 %8575)
  %8577 = trunc i32 %8576 to i8
  %8578 = and i8 %8577, 1
  %8579 = xor i8 %8578, 1
  %8580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8579, i8* %8580, align 1
  %8581 = xor i32 %8567, %8565
  %8582 = xor i32 %8581, %8568
  %8583 = lshr i32 %8582, 4
  %8584 = trunc i32 %8583 to i8
  %8585 = and i8 %8584, 1
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8585, i8* %8586, align 1
  %8587 = icmp eq i32 %8568, 0
  %8588 = zext i1 %8587 to i8
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8588, i8* %8589, align 1
  %8590 = lshr i32 %8568, 31
  %8591 = trunc i32 %8590 to i8
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8591, i8* %8592, align 1
  %8593 = lshr i32 %8565, 31
  %8594 = lshr i32 %8567, 31
  %8595 = xor i32 %8590, %8593
  %8596 = xor i32 %8590, %8594
  %8597 = add i32 %8595, %8596
  %8598 = icmp eq i32 %8597, 2
  %8599 = zext i1 %8598 to i8
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8599, i8* %8600, align 1
  store %struct.Memory* %loadMem_45fa38, %struct.Memory** %MEMORY
  %loadMem_45fa3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8602 = getelementptr inbounds %struct.GPR, %struct.GPR* %8601, i32 0, i32 33
  %8603 = getelementptr inbounds %struct.Reg, %struct.Reg* %8602, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %8603 to i64*
  %8604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8605 = getelementptr inbounds %struct.GPR, %struct.GPR* %8604, i32 0, i32 7
  %8606 = getelementptr inbounds %struct.Reg, %struct.Reg* %8605, i32 0, i32 0
  %RDX.i807 = bitcast %union.anon* %8606 to i64*
  %8607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8608 = getelementptr inbounds %struct.GPR, %struct.GPR* %8607, i32 0, i32 15
  %8609 = getelementptr inbounds %struct.Reg, %struct.Reg* %8608, i32 0, i32 0
  %RBP.i808 = bitcast %union.anon* %8609 to i64*
  %8610 = load i64, i64* %RBP.i808
  %8611 = sub i64 %8610, 20
  %8612 = load i64, i64* %PC.i806
  %8613 = add i64 %8612, 4
  store i64 %8613, i64* %PC.i806
  %8614 = inttoptr i64 %8611 to i32*
  %8615 = load i32, i32* %8614
  %8616 = sext i32 %8615 to i64
  store i64 %8616, i64* %RDX.i807, align 8
  store %struct.Memory* %loadMem_45fa3b, %struct.Memory** %MEMORY
  %loadMem_45fa3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8618 = getelementptr inbounds %struct.GPR, %struct.GPR* %8617, i32 0, i32 33
  %8619 = getelementptr inbounds %struct.Reg, %struct.Reg* %8618, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %8619 to i64*
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8621 = getelementptr inbounds %struct.GPR, %struct.GPR* %8620, i32 0, i32 7
  %8622 = getelementptr inbounds %struct.Reg, %struct.Reg* %8621, i32 0, i32 0
  %RDX.i805 = bitcast %union.anon* %8622 to i64*
  %8623 = load i64, i64* %RDX.i805
  %8624 = load i64, i64* %PC.i804
  %8625 = add i64 %8624, 4
  store i64 %8625, i64* %PC.i804
  %8626 = shl i64 %8623, 4
  %8627 = icmp slt i64 %8626, 0
  %8628 = shl i64 %8626, 1
  store i64 %8628, i64* %RDX.i805, align 8
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8630 = zext i1 %8627 to i8
  store i8 %8630, i8* %8629, align 1
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8632 = trunc i64 %8628 to i32
  %8633 = and i32 %8632, 254
  %8634 = call i32 @llvm.ctpop.i32(i32 %8633)
  %8635 = trunc i32 %8634 to i8
  %8636 = and i8 %8635, 1
  %8637 = xor i8 %8636, 1
  store i8 %8637, i8* %8631, align 1
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8638, align 1
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8640 = icmp eq i64 %8628, 0
  %8641 = zext i1 %8640 to i8
  store i8 %8641, i8* %8639, align 1
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8643 = lshr i64 %8628, 63
  %8644 = trunc i64 %8643 to i8
  store i8 %8644, i8* %8642, align 1
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8645, align 1
  store %struct.Memory* %loadMem_45fa3f, %struct.Memory** %MEMORY
  %loadMem_45fa43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 33
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %8648 to i64*
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8650 = getelementptr inbounds %struct.GPR, %struct.GPR* %8649, i32 0, i32 1
  %8651 = getelementptr inbounds %struct.Reg, %struct.Reg* %8650, i32 0, i32 0
  %RAX.i802 = bitcast %union.anon* %8651 to i64*
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8653 = getelementptr inbounds %struct.GPR, %struct.GPR* %8652, i32 0, i32 11
  %8654 = getelementptr inbounds %struct.Reg, %struct.Reg* %8653, i32 0, i32 0
  %RDI.i803 = bitcast %union.anon* %8654 to i64*
  %8655 = load i64, i64* %RAX.i802
  %8656 = load i64, i64* %PC.i801
  %8657 = add i64 %8656, 3
  store i64 %8657, i64* %PC.i801
  store i64 %8655, i64* %RDI.i803, align 8
  store %struct.Memory* %loadMem_45fa43, %struct.Memory** %MEMORY
  %loadMem_45fa46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8659 = getelementptr inbounds %struct.GPR, %struct.GPR* %8658, i32 0, i32 33
  %8660 = getelementptr inbounds %struct.Reg, %struct.Reg* %8659, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %8660 to i64*
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8662 = getelementptr inbounds %struct.GPR, %struct.GPR* %8661, i32 0, i32 7
  %8663 = getelementptr inbounds %struct.Reg, %struct.Reg* %8662, i32 0, i32 0
  %RDX.i799 = bitcast %union.anon* %8663 to i64*
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8665 = getelementptr inbounds %struct.GPR, %struct.GPR* %8664, i32 0, i32 11
  %8666 = getelementptr inbounds %struct.Reg, %struct.Reg* %8665, i32 0, i32 0
  %RDI.i800 = bitcast %union.anon* %8666 to i64*
  %8667 = load i64, i64* %RDI.i800
  %8668 = load i64, i64* %RDX.i799
  %8669 = load i64, i64* %PC.i798
  %8670 = add i64 %8669, 3
  store i64 %8670, i64* %PC.i798
  %8671 = add i64 %8668, %8667
  store i64 %8671, i64* %RDI.i800, align 8
  %8672 = icmp ult i64 %8671, %8667
  %8673 = icmp ult i64 %8671, %8668
  %8674 = or i1 %8672, %8673
  %8675 = zext i1 %8674 to i8
  %8676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8675, i8* %8676, align 1
  %8677 = trunc i64 %8671 to i32
  %8678 = and i32 %8677, 255
  %8679 = call i32 @llvm.ctpop.i32(i32 %8678)
  %8680 = trunc i32 %8679 to i8
  %8681 = and i8 %8680, 1
  %8682 = xor i8 %8681, 1
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8682, i8* %8683, align 1
  %8684 = xor i64 %8668, %8667
  %8685 = xor i64 %8684, %8671
  %8686 = lshr i64 %8685, 4
  %8687 = trunc i64 %8686 to i8
  %8688 = and i8 %8687, 1
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8688, i8* %8689, align 1
  %8690 = icmp eq i64 %8671, 0
  %8691 = zext i1 %8690 to i8
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8691, i8* %8692, align 1
  %8693 = lshr i64 %8671, 63
  %8694 = trunc i64 %8693 to i8
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8694, i8* %8695, align 1
  %8696 = lshr i64 %8667, 63
  %8697 = lshr i64 %8668, 63
  %8698 = xor i64 %8693, %8696
  %8699 = xor i64 %8693, %8697
  %8700 = add i64 %8698, %8699
  %8701 = icmp eq i64 %8700, 2
  %8702 = zext i1 %8701 to i8
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8702, i8* %8703, align 1
  store %struct.Memory* %loadMem_45fa46, %struct.Memory** %MEMORY
  %loadMem_45fa49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8705 = getelementptr inbounds %struct.GPR, %struct.GPR* %8704, i32 0, i32 33
  %8706 = getelementptr inbounds %struct.Reg, %struct.Reg* %8705, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %8706 to i64*
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 9
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %ESI.i796 = bitcast %union.anon* %8709 to i32*
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 11
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %RDI.i797 = bitcast %union.anon* %8712 to i64*
  %8713 = load i64, i64* %RDI.i797
  %8714 = add i64 %8713, 16
  %8715 = load i32, i32* %ESI.i796
  %8716 = zext i32 %8715 to i64
  %8717 = load i64, i64* %PC.i795
  %8718 = add i64 %8717, 3
  store i64 %8718, i64* %PC.i795
  %8719 = inttoptr i64 %8714 to i32*
  store i32 %8715, i32* %8719
  store %struct.Memory* %loadMem_45fa49, %struct.Memory** %MEMORY
  %loadMem_45fa4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8721 = getelementptr inbounds %struct.GPR, %struct.GPR* %8720, i32 0, i32 33
  %8722 = getelementptr inbounds %struct.Reg, %struct.Reg* %8721, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %8722 to i64*
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 7
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %RDX.i793 = bitcast %union.anon* %8725 to i64*
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 15
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %8728 to i64*
  %8729 = load i64, i64* %RBP.i794
  %8730 = sub i64 %8729, 20
  %8731 = load i64, i64* %PC.i792
  %8732 = add i64 %8731, 4
  store i64 %8732, i64* %PC.i792
  %8733 = inttoptr i64 %8730 to i32*
  %8734 = load i32, i32* %8733
  %8735 = sext i32 %8734 to i64
  store i64 %8735, i64* %RDX.i793, align 8
  store %struct.Memory* %loadMem_45fa4c, %struct.Memory** %MEMORY
  %loadMem_45fa50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8737 = getelementptr inbounds %struct.GPR, %struct.GPR* %8736, i32 0, i32 33
  %8738 = getelementptr inbounds %struct.Reg, %struct.Reg* %8737, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %8738 to i64*
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 7
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %RDX.i791 = bitcast %union.anon* %8741 to i64*
  %8742 = load i64, i64* %RDX.i791
  %8743 = load i64, i64* %PC.i790
  %8744 = add i64 %8743, 4
  store i64 %8744, i64* %PC.i790
  %8745 = shl i64 %8742, 4
  %8746 = icmp slt i64 %8745, 0
  %8747 = shl i64 %8745, 1
  store i64 %8747, i64* %RDX.i791, align 8
  %8748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8749 = zext i1 %8746 to i8
  store i8 %8749, i8* %8748, align 1
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8751 = trunc i64 %8747 to i32
  %8752 = and i32 %8751, 254
  %8753 = call i32 @llvm.ctpop.i32(i32 %8752)
  %8754 = trunc i32 %8753 to i8
  %8755 = and i8 %8754, 1
  %8756 = xor i8 %8755, 1
  store i8 %8756, i8* %8750, align 1
  %8757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8757, align 1
  %8758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8759 = icmp eq i64 %8747, 0
  %8760 = zext i1 %8759 to i8
  store i8 %8760, i8* %8758, align 1
  %8761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8762 = lshr i64 %8747, 63
  %8763 = trunc i64 %8762 to i8
  store i8 %8763, i8* %8761, align 1
  %8764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8764, align 1
  store %struct.Memory* %loadMem_45fa50, %struct.Memory** %MEMORY
  %loadMem_45fa54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 33
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %8767 to i64*
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 5
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %RCX.i788 = bitcast %union.anon* %8770 to i64*
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 11
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %RDI.i789 = bitcast %union.anon* %8773 to i64*
  %8774 = load i64, i64* %RCX.i788
  %8775 = load i64, i64* %PC.i787
  %8776 = add i64 %8775, 3
  store i64 %8776, i64* %PC.i787
  store i64 %8774, i64* %RDI.i789, align 8
  store %struct.Memory* %loadMem_45fa54, %struct.Memory** %MEMORY
  %loadMem_45fa57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8778 = getelementptr inbounds %struct.GPR, %struct.GPR* %8777, i32 0, i32 33
  %8779 = getelementptr inbounds %struct.Reg, %struct.Reg* %8778, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %8779 to i64*
  %8780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8781 = getelementptr inbounds %struct.GPR, %struct.GPR* %8780, i32 0, i32 7
  %8782 = getelementptr inbounds %struct.Reg, %struct.Reg* %8781, i32 0, i32 0
  %RDX.i785 = bitcast %union.anon* %8782 to i64*
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8784 = getelementptr inbounds %struct.GPR, %struct.GPR* %8783, i32 0, i32 11
  %8785 = getelementptr inbounds %struct.Reg, %struct.Reg* %8784, i32 0, i32 0
  %RDI.i786 = bitcast %union.anon* %8785 to i64*
  %8786 = load i64, i64* %RDI.i786
  %8787 = load i64, i64* %RDX.i785
  %8788 = load i64, i64* %PC.i784
  %8789 = add i64 %8788, 3
  store i64 %8789, i64* %PC.i784
  %8790 = add i64 %8787, %8786
  store i64 %8790, i64* %RDI.i786, align 8
  %8791 = icmp ult i64 %8790, %8786
  %8792 = icmp ult i64 %8790, %8787
  %8793 = or i1 %8791, %8792
  %8794 = zext i1 %8793 to i8
  %8795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8794, i8* %8795, align 1
  %8796 = trunc i64 %8790 to i32
  %8797 = and i32 %8796, 255
  %8798 = call i32 @llvm.ctpop.i32(i32 %8797)
  %8799 = trunc i32 %8798 to i8
  %8800 = and i8 %8799, 1
  %8801 = xor i8 %8800, 1
  %8802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8801, i8* %8802, align 1
  %8803 = xor i64 %8787, %8786
  %8804 = xor i64 %8803, %8790
  %8805 = lshr i64 %8804, 4
  %8806 = trunc i64 %8805 to i8
  %8807 = and i8 %8806, 1
  %8808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8807, i8* %8808, align 1
  %8809 = icmp eq i64 %8790, 0
  %8810 = zext i1 %8809 to i8
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8810, i8* %8811, align 1
  %8812 = lshr i64 %8790, 63
  %8813 = trunc i64 %8812 to i8
  %8814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8813, i8* %8814, align 1
  %8815 = lshr i64 %8786, 63
  %8816 = lshr i64 %8787, 63
  %8817 = xor i64 %8812, %8815
  %8818 = xor i64 %8812, %8816
  %8819 = add i64 %8817, %8818
  %8820 = icmp eq i64 %8819, 2
  %8821 = zext i1 %8820 to i8
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8821, i8* %8822, align 1
  store %struct.Memory* %loadMem_45fa57, %struct.Memory** %MEMORY
  %loadMem_45fa5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8824 = getelementptr inbounds %struct.GPR, %struct.GPR* %8823, i32 0, i32 33
  %8825 = getelementptr inbounds %struct.Reg, %struct.Reg* %8824, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %8825 to i64*
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8827 = getelementptr inbounds %struct.GPR, %struct.GPR* %8826, i32 0, i32 9
  %8828 = getelementptr inbounds %struct.Reg, %struct.Reg* %8827, i32 0, i32 0
  %RSI.i782 = bitcast %union.anon* %8828 to i64*
  %8829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8830 = getelementptr inbounds %struct.GPR, %struct.GPR* %8829, i32 0, i32 11
  %8831 = getelementptr inbounds %struct.Reg, %struct.Reg* %8830, i32 0, i32 0
  %RDI.i783 = bitcast %union.anon* %8831 to i64*
  %8832 = load i64, i64* %RDI.i783
  %8833 = add i64 %8832, 16
  %8834 = load i64, i64* %PC.i781
  %8835 = add i64 %8834, 3
  store i64 %8835, i64* %PC.i781
  %8836 = inttoptr i64 %8833 to i32*
  %8837 = load i32, i32* %8836
  %8838 = zext i32 %8837 to i64
  store i64 %8838, i64* %RSI.i782, align 8
  store %struct.Memory* %loadMem_45fa5a, %struct.Memory** %MEMORY
  %loadMem_45fa5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8840 = getelementptr inbounds %struct.GPR, %struct.GPR* %8839, i32 0, i32 33
  %8841 = getelementptr inbounds %struct.Reg, %struct.Reg* %8840, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %8841 to i64*
  %8842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8843 = getelementptr inbounds %struct.GPR, %struct.GPR* %8842, i32 0, i32 7
  %8844 = getelementptr inbounds %struct.Reg, %struct.Reg* %8843, i32 0, i32 0
  %RDX.i779 = bitcast %union.anon* %8844 to i64*
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8846 = getelementptr inbounds %struct.GPR, %struct.GPR* %8845, i32 0, i32 15
  %8847 = getelementptr inbounds %struct.Reg, %struct.Reg* %8846, i32 0, i32 0
  %RBP.i780 = bitcast %union.anon* %8847 to i64*
  %8848 = load i64, i64* %RBP.i780
  %8849 = sub i64 %8848, 20
  %8850 = load i64, i64* %PC.i778
  %8851 = add i64 %8850, 4
  store i64 %8851, i64* %PC.i778
  %8852 = inttoptr i64 %8849 to i32*
  %8853 = load i32, i32* %8852
  %8854 = sext i32 %8853 to i64
  store i64 %8854, i64* %RDX.i779, align 8
  store %struct.Memory* %loadMem_45fa5d, %struct.Memory** %MEMORY
  %loadMem_45fa61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 33
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %8857 to i64*
  %8858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8859 = getelementptr inbounds %struct.GPR, %struct.GPR* %8858, i32 0, i32 7
  %8860 = getelementptr inbounds %struct.Reg, %struct.Reg* %8859, i32 0, i32 0
  %RDX.i777 = bitcast %union.anon* %8860 to i64*
  %8861 = load i64, i64* %RDX.i777
  %8862 = load i64, i64* %PC.i776
  %8863 = add i64 %8862, 4
  store i64 %8863, i64* %PC.i776
  %8864 = shl i64 %8861, 4
  %8865 = icmp slt i64 %8864, 0
  %8866 = shl i64 %8864, 1
  store i64 %8866, i64* %RDX.i777, align 8
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8868 = zext i1 %8865 to i8
  store i8 %8868, i8* %8867, align 1
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %8870 = trunc i64 %8866 to i32
  %8871 = and i32 %8870, 254
  %8872 = call i32 @llvm.ctpop.i32(i32 %8871)
  %8873 = trunc i32 %8872 to i8
  %8874 = and i8 %8873, 1
  %8875 = xor i8 %8874, 1
  store i8 %8875, i8* %8869, align 1
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8876, align 1
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8878 = icmp eq i64 %8866, 0
  %8879 = zext i1 %8878 to i8
  store i8 %8879, i8* %8877, align 1
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8881 = lshr i64 %8866, 63
  %8882 = trunc i64 %8881 to i8
  store i8 %8882, i8* %8880, align 1
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8883, align 1
  store %struct.Memory* %loadMem_45fa61, %struct.Memory** %MEMORY
  %loadMem_45fa65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8885 = getelementptr inbounds %struct.GPR, %struct.GPR* %8884, i32 0, i32 33
  %8886 = getelementptr inbounds %struct.Reg, %struct.Reg* %8885, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %8886 to i64*
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8888 = getelementptr inbounds %struct.GPR, %struct.GPR* %8887, i32 0, i32 5
  %8889 = getelementptr inbounds %struct.Reg, %struct.Reg* %8888, i32 0, i32 0
  %RCX.i774 = bitcast %union.anon* %8889 to i64*
  %8890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8891 = getelementptr inbounds %struct.GPR, %struct.GPR* %8890, i32 0, i32 11
  %8892 = getelementptr inbounds %struct.Reg, %struct.Reg* %8891, i32 0, i32 0
  %RDI.i775 = bitcast %union.anon* %8892 to i64*
  %8893 = load i64, i64* %RCX.i774
  %8894 = load i64, i64* %PC.i773
  %8895 = add i64 %8894, 3
  store i64 %8895, i64* %PC.i773
  store i64 %8893, i64* %RDI.i775, align 8
  store %struct.Memory* %loadMem_45fa65, %struct.Memory** %MEMORY
  %loadMem_45fa68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8897 = getelementptr inbounds %struct.GPR, %struct.GPR* %8896, i32 0, i32 33
  %8898 = getelementptr inbounds %struct.Reg, %struct.Reg* %8897, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %8898 to i64*
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8900 = getelementptr inbounds %struct.GPR, %struct.GPR* %8899, i32 0, i32 7
  %8901 = getelementptr inbounds %struct.Reg, %struct.Reg* %8900, i32 0, i32 0
  %RDX.i771 = bitcast %union.anon* %8901 to i64*
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8903 = getelementptr inbounds %struct.GPR, %struct.GPR* %8902, i32 0, i32 11
  %8904 = getelementptr inbounds %struct.Reg, %struct.Reg* %8903, i32 0, i32 0
  %RDI.i772 = bitcast %union.anon* %8904 to i64*
  %8905 = load i64, i64* %RDI.i772
  %8906 = load i64, i64* %RDX.i771
  %8907 = load i64, i64* %PC.i770
  %8908 = add i64 %8907, 3
  store i64 %8908, i64* %PC.i770
  %8909 = add i64 %8906, %8905
  store i64 %8909, i64* %RDI.i772, align 8
  %8910 = icmp ult i64 %8909, %8905
  %8911 = icmp ult i64 %8909, %8906
  %8912 = or i1 %8910, %8911
  %8913 = zext i1 %8912 to i8
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8913, i8* %8914, align 1
  %8915 = trunc i64 %8909 to i32
  %8916 = and i32 %8915, 255
  %8917 = call i32 @llvm.ctpop.i32(i32 %8916)
  %8918 = trunc i32 %8917 to i8
  %8919 = and i8 %8918, 1
  %8920 = xor i8 %8919, 1
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8920, i8* %8921, align 1
  %8922 = xor i64 %8906, %8905
  %8923 = xor i64 %8922, %8909
  %8924 = lshr i64 %8923, 4
  %8925 = trunc i64 %8924 to i8
  %8926 = and i8 %8925, 1
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8926, i8* %8927, align 1
  %8928 = icmp eq i64 %8909, 0
  %8929 = zext i1 %8928 to i8
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8929, i8* %8930, align 1
  %8931 = lshr i64 %8909, 63
  %8932 = trunc i64 %8931 to i8
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8932, i8* %8933, align 1
  %8934 = lshr i64 %8905, 63
  %8935 = lshr i64 %8906, 63
  %8936 = xor i64 %8931, %8934
  %8937 = xor i64 %8931, %8935
  %8938 = add i64 %8936, %8937
  %8939 = icmp eq i64 %8938, 2
  %8940 = zext i1 %8939 to i8
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8940, i8* %8941, align 1
  store %struct.Memory* %loadMem_45fa68, %struct.Memory** %MEMORY
  %loadMem_45fa6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8943 = getelementptr inbounds %struct.GPR, %struct.GPR* %8942, i32 0, i32 33
  %8944 = getelementptr inbounds %struct.Reg, %struct.Reg* %8943, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %8944 to i64*
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 9
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %RSI.i768 = bitcast %union.anon* %8947 to i64*
  %8948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8949 = getelementptr inbounds %struct.GPR, %struct.GPR* %8948, i32 0, i32 11
  %8950 = getelementptr inbounds %struct.Reg, %struct.Reg* %8949, i32 0, i32 0
  %RDI.i769 = bitcast %union.anon* %8950 to i64*
  %8951 = load i64, i64* %RSI.i768
  %8952 = load i64, i64* %RDI.i769
  %8953 = add i64 %8952, 20
  %8954 = load i64, i64* %PC.i767
  %8955 = add i64 %8954, 3
  store i64 %8955, i64* %PC.i767
  %8956 = trunc i64 %8951 to i32
  %8957 = inttoptr i64 %8953 to i32*
  %8958 = load i32, i32* %8957
  %8959 = sub i32 %8956, %8958
  %8960 = zext i32 %8959 to i64
  store i64 %8960, i64* %RSI.i768, align 8
  %8961 = icmp ult i32 %8956, %8958
  %8962 = zext i1 %8961 to i8
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8962, i8* %8963, align 1
  %8964 = and i32 %8959, 255
  %8965 = call i32 @llvm.ctpop.i32(i32 %8964)
  %8966 = trunc i32 %8965 to i8
  %8967 = and i8 %8966, 1
  %8968 = xor i8 %8967, 1
  %8969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8968, i8* %8969, align 1
  %8970 = xor i32 %8958, %8956
  %8971 = xor i32 %8970, %8959
  %8972 = lshr i32 %8971, 4
  %8973 = trunc i32 %8972 to i8
  %8974 = and i8 %8973, 1
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8974, i8* %8975, align 1
  %8976 = icmp eq i32 %8959, 0
  %8977 = zext i1 %8976 to i8
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8977, i8* %8978, align 1
  %8979 = lshr i32 %8959, 31
  %8980 = trunc i32 %8979 to i8
  %8981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8980, i8* %8981, align 1
  %8982 = lshr i32 %8956, 31
  %8983 = lshr i32 %8958, 31
  %8984 = xor i32 %8983, %8982
  %8985 = xor i32 %8979, %8982
  %8986 = add i32 %8985, %8984
  %8987 = icmp eq i32 %8986, 2
  %8988 = zext i1 %8987 to i8
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8988, i8* %8989, align 1
  store %struct.Memory* %loadMem_45fa6b, %struct.Memory** %MEMORY
  %loadMem_45fa6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8991 = getelementptr inbounds %struct.GPR, %struct.GPR* %8990, i32 0, i32 33
  %8992 = getelementptr inbounds %struct.Reg, %struct.Reg* %8991, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %8992 to i64*
  %8993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8994 = getelementptr inbounds %struct.GPR, %struct.GPR* %8993, i32 0, i32 7
  %8995 = getelementptr inbounds %struct.Reg, %struct.Reg* %8994, i32 0, i32 0
  %RDX.i765 = bitcast %union.anon* %8995 to i64*
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8997 = getelementptr inbounds %struct.GPR, %struct.GPR* %8996, i32 0, i32 15
  %8998 = getelementptr inbounds %struct.Reg, %struct.Reg* %8997, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %8998 to i64*
  %8999 = load i64, i64* %RBP.i766
  %9000 = sub i64 %8999, 20
  %9001 = load i64, i64* %PC.i764
  %9002 = add i64 %9001, 4
  store i64 %9002, i64* %PC.i764
  %9003 = inttoptr i64 %9000 to i32*
  %9004 = load i32, i32* %9003
  %9005 = sext i32 %9004 to i64
  store i64 %9005, i64* %RDX.i765, align 8
  store %struct.Memory* %loadMem_45fa6e, %struct.Memory** %MEMORY
  %loadMem_45fa72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9007 = getelementptr inbounds %struct.GPR, %struct.GPR* %9006, i32 0, i32 33
  %9008 = getelementptr inbounds %struct.Reg, %struct.Reg* %9007, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %9008 to i64*
  %9009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9010 = getelementptr inbounds %struct.GPR, %struct.GPR* %9009, i32 0, i32 7
  %9011 = getelementptr inbounds %struct.Reg, %struct.Reg* %9010, i32 0, i32 0
  %RDX.i763 = bitcast %union.anon* %9011 to i64*
  %9012 = load i64, i64* %RDX.i763
  %9013 = load i64, i64* %PC.i762
  %9014 = add i64 %9013, 4
  store i64 %9014, i64* %PC.i762
  %9015 = shl i64 %9012, 4
  %9016 = icmp slt i64 %9015, 0
  %9017 = shl i64 %9015, 1
  store i64 %9017, i64* %RDX.i763, align 8
  %9018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9019 = zext i1 %9016 to i8
  store i8 %9019, i8* %9018, align 1
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9021 = trunc i64 %9017 to i32
  %9022 = and i32 %9021, 254
  %9023 = call i32 @llvm.ctpop.i32(i32 %9022)
  %9024 = trunc i32 %9023 to i8
  %9025 = and i8 %9024, 1
  %9026 = xor i8 %9025, 1
  store i8 %9026, i8* %9020, align 1
  %9027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9027, align 1
  %9028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9029 = icmp eq i64 %9017, 0
  %9030 = zext i1 %9029 to i8
  store i8 %9030, i8* %9028, align 1
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9032 = lshr i64 %9017, 63
  %9033 = trunc i64 %9032 to i8
  store i8 %9033, i8* %9031, align 1
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9034, align 1
  store %struct.Memory* %loadMem_45fa72, %struct.Memory** %MEMORY
  %loadMem_45fa76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 33
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %9037 to i64*
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9039 = getelementptr inbounds %struct.GPR, %struct.GPR* %9038, i32 0, i32 1
  %9040 = getelementptr inbounds %struct.Reg, %struct.Reg* %9039, i32 0, i32 0
  %RAX.i760 = bitcast %union.anon* %9040 to i64*
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9042 = getelementptr inbounds %struct.GPR, %struct.GPR* %9041, i32 0, i32 11
  %9043 = getelementptr inbounds %struct.Reg, %struct.Reg* %9042, i32 0, i32 0
  %RDI.i761 = bitcast %union.anon* %9043 to i64*
  %9044 = load i64, i64* %RAX.i760
  %9045 = load i64, i64* %PC.i759
  %9046 = add i64 %9045, 3
  store i64 %9046, i64* %PC.i759
  store i64 %9044, i64* %RDI.i761, align 8
  store %struct.Memory* %loadMem_45fa76, %struct.Memory** %MEMORY
  %loadMem_45fa79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9048 = getelementptr inbounds %struct.GPR, %struct.GPR* %9047, i32 0, i32 33
  %9049 = getelementptr inbounds %struct.Reg, %struct.Reg* %9048, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %9049 to i64*
  %9050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9051 = getelementptr inbounds %struct.GPR, %struct.GPR* %9050, i32 0, i32 7
  %9052 = getelementptr inbounds %struct.Reg, %struct.Reg* %9051, i32 0, i32 0
  %RDX.i757 = bitcast %union.anon* %9052 to i64*
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9054 = getelementptr inbounds %struct.GPR, %struct.GPR* %9053, i32 0, i32 11
  %9055 = getelementptr inbounds %struct.Reg, %struct.Reg* %9054, i32 0, i32 0
  %RDI.i758 = bitcast %union.anon* %9055 to i64*
  %9056 = load i64, i64* %RDI.i758
  %9057 = load i64, i64* %RDX.i757
  %9058 = load i64, i64* %PC.i756
  %9059 = add i64 %9058, 3
  store i64 %9059, i64* %PC.i756
  %9060 = add i64 %9057, %9056
  store i64 %9060, i64* %RDI.i758, align 8
  %9061 = icmp ult i64 %9060, %9056
  %9062 = icmp ult i64 %9060, %9057
  %9063 = or i1 %9061, %9062
  %9064 = zext i1 %9063 to i8
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9064, i8* %9065, align 1
  %9066 = trunc i64 %9060 to i32
  %9067 = and i32 %9066, 255
  %9068 = call i32 @llvm.ctpop.i32(i32 %9067)
  %9069 = trunc i32 %9068 to i8
  %9070 = and i8 %9069, 1
  %9071 = xor i8 %9070, 1
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9071, i8* %9072, align 1
  %9073 = xor i64 %9057, %9056
  %9074 = xor i64 %9073, %9060
  %9075 = lshr i64 %9074, 4
  %9076 = trunc i64 %9075 to i8
  %9077 = and i8 %9076, 1
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9077, i8* %9078, align 1
  %9079 = icmp eq i64 %9060, 0
  %9080 = zext i1 %9079 to i8
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9080, i8* %9081, align 1
  %9082 = lshr i64 %9060, 63
  %9083 = trunc i64 %9082 to i8
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9083, i8* %9084, align 1
  %9085 = lshr i64 %9056, 63
  %9086 = lshr i64 %9057, 63
  %9087 = xor i64 %9082, %9085
  %9088 = xor i64 %9082, %9086
  %9089 = add i64 %9087, %9088
  %9090 = icmp eq i64 %9089, 2
  %9091 = zext i1 %9090 to i8
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9091, i8* %9092, align 1
  store %struct.Memory* %loadMem_45fa79, %struct.Memory** %MEMORY
  %loadMem_45fa7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 33
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %9095 to i64*
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 9
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %ESI.i754 = bitcast %union.anon* %9098 to i32*
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9100 = getelementptr inbounds %struct.GPR, %struct.GPR* %9099, i32 0, i32 11
  %9101 = getelementptr inbounds %struct.Reg, %struct.Reg* %9100, i32 0, i32 0
  %RDI.i755 = bitcast %union.anon* %9101 to i64*
  %9102 = load i64, i64* %RDI.i755
  %9103 = add i64 %9102, 20
  %9104 = load i32, i32* %ESI.i754
  %9105 = zext i32 %9104 to i64
  %9106 = load i64, i64* %PC.i753
  %9107 = add i64 %9106, 3
  store i64 %9107, i64* %PC.i753
  %9108 = inttoptr i64 %9103 to i32*
  store i32 %9104, i32* %9108
  store %struct.Memory* %loadMem_45fa7c, %struct.Memory** %MEMORY
  %loadMem_45fa7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 33
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %9111 to i64*
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9113 = getelementptr inbounds %struct.GPR, %struct.GPR* %9112, i32 0, i32 7
  %9114 = getelementptr inbounds %struct.Reg, %struct.Reg* %9113, i32 0, i32 0
  %RDX.i751 = bitcast %union.anon* %9114 to i64*
  %9115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9116 = getelementptr inbounds %struct.GPR, %struct.GPR* %9115, i32 0, i32 15
  %9117 = getelementptr inbounds %struct.Reg, %struct.Reg* %9116, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %9117 to i64*
  %9118 = load i64, i64* %RBP.i752
  %9119 = sub i64 %9118, 20
  %9120 = load i64, i64* %PC.i750
  %9121 = add i64 %9120, 4
  store i64 %9121, i64* %PC.i750
  %9122 = inttoptr i64 %9119 to i32*
  %9123 = load i32, i32* %9122
  %9124 = sext i32 %9123 to i64
  store i64 %9124, i64* %RDX.i751, align 8
  store %struct.Memory* %loadMem_45fa7f, %struct.Memory** %MEMORY
  %loadMem_45fa83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9126 = getelementptr inbounds %struct.GPR, %struct.GPR* %9125, i32 0, i32 33
  %9127 = getelementptr inbounds %struct.Reg, %struct.Reg* %9126, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %9127 to i64*
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9129 = getelementptr inbounds %struct.GPR, %struct.GPR* %9128, i32 0, i32 7
  %9130 = getelementptr inbounds %struct.Reg, %struct.Reg* %9129, i32 0, i32 0
  %RDX.i749 = bitcast %union.anon* %9130 to i64*
  %9131 = load i64, i64* %RDX.i749
  %9132 = load i64, i64* %PC.i748
  %9133 = add i64 %9132, 4
  store i64 %9133, i64* %PC.i748
  %9134 = shl i64 %9131, 4
  %9135 = icmp slt i64 %9134, 0
  %9136 = shl i64 %9134, 1
  store i64 %9136, i64* %RDX.i749, align 8
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9138 = zext i1 %9135 to i8
  store i8 %9138, i8* %9137, align 1
  %9139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9140 = trunc i64 %9136 to i32
  %9141 = and i32 %9140, 254
  %9142 = call i32 @llvm.ctpop.i32(i32 %9141)
  %9143 = trunc i32 %9142 to i8
  %9144 = and i8 %9143, 1
  %9145 = xor i8 %9144, 1
  store i8 %9145, i8* %9139, align 1
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9146, align 1
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9148 = icmp eq i64 %9136, 0
  %9149 = zext i1 %9148 to i8
  store i8 %9149, i8* %9147, align 1
  %9150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9151 = lshr i64 %9136, 63
  %9152 = trunc i64 %9151 to i8
  store i8 %9152, i8* %9150, align 1
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9153, align 1
  store %struct.Memory* %loadMem_45fa83, %struct.Memory** %MEMORY
  %loadMem_45fa87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 33
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %9156 to i64*
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 5
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %RCX.i746 = bitcast %union.anon* %9159 to i64*
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9161 = getelementptr inbounds %struct.GPR, %struct.GPR* %9160, i32 0, i32 11
  %9162 = getelementptr inbounds %struct.Reg, %struct.Reg* %9161, i32 0, i32 0
  %RDI.i747 = bitcast %union.anon* %9162 to i64*
  %9163 = load i64, i64* %RCX.i746
  %9164 = load i64, i64* %PC.i745
  %9165 = add i64 %9164, 3
  store i64 %9165, i64* %PC.i745
  store i64 %9163, i64* %RDI.i747, align 8
  store %struct.Memory* %loadMem_45fa87, %struct.Memory** %MEMORY
  %loadMem_45fa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9167 = getelementptr inbounds %struct.GPR, %struct.GPR* %9166, i32 0, i32 33
  %9168 = getelementptr inbounds %struct.Reg, %struct.Reg* %9167, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %9168 to i64*
  %9169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9170 = getelementptr inbounds %struct.GPR, %struct.GPR* %9169, i32 0, i32 7
  %9171 = getelementptr inbounds %struct.Reg, %struct.Reg* %9170, i32 0, i32 0
  %RDX.i743 = bitcast %union.anon* %9171 to i64*
  %9172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9173 = getelementptr inbounds %struct.GPR, %struct.GPR* %9172, i32 0, i32 11
  %9174 = getelementptr inbounds %struct.Reg, %struct.Reg* %9173, i32 0, i32 0
  %RDI.i744 = bitcast %union.anon* %9174 to i64*
  %9175 = load i64, i64* %RDI.i744
  %9176 = load i64, i64* %RDX.i743
  %9177 = load i64, i64* %PC.i742
  %9178 = add i64 %9177, 3
  store i64 %9178, i64* %PC.i742
  %9179 = add i64 %9176, %9175
  store i64 %9179, i64* %RDI.i744, align 8
  %9180 = icmp ult i64 %9179, %9175
  %9181 = icmp ult i64 %9179, %9176
  %9182 = or i1 %9180, %9181
  %9183 = zext i1 %9182 to i8
  %9184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9183, i8* %9184, align 1
  %9185 = trunc i64 %9179 to i32
  %9186 = and i32 %9185, 255
  %9187 = call i32 @llvm.ctpop.i32(i32 %9186)
  %9188 = trunc i32 %9187 to i8
  %9189 = and i8 %9188, 1
  %9190 = xor i8 %9189, 1
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9190, i8* %9191, align 1
  %9192 = xor i64 %9176, %9175
  %9193 = xor i64 %9192, %9179
  %9194 = lshr i64 %9193, 4
  %9195 = trunc i64 %9194 to i8
  %9196 = and i8 %9195, 1
  %9197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9196, i8* %9197, align 1
  %9198 = icmp eq i64 %9179, 0
  %9199 = zext i1 %9198 to i8
  %9200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9199, i8* %9200, align 1
  %9201 = lshr i64 %9179, 63
  %9202 = trunc i64 %9201 to i8
  %9203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9202, i8* %9203, align 1
  %9204 = lshr i64 %9175, 63
  %9205 = lshr i64 %9176, 63
  %9206 = xor i64 %9201, %9204
  %9207 = xor i64 %9201, %9205
  %9208 = add i64 %9206, %9207
  %9209 = icmp eq i64 %9208, 2
  %9210 = zext i1 %9209 to i8
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9210, i8* %9211, align 1
  store %struct.Memory* %loadMem_45fa8a, %struct.Memory** %MEMORY
  %loadMem_45fa8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9213 = getelementptr inbounds %struct.GPR, %struct.GPR* %9212, i32 0, i32 33
  %9214 = getelementptr inbounds %struct.Reg, %struct.Reg* %9213, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %9214 to i64*
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9216 = getelementptr inbounds %struct.GPR, %struct.GPR* %9215, i32 0, i32 9
  %9217 = getelementptr inbounds %struct.Reg, %struct.Reg* %9216, i32 0, i32 0
  %RSI.i740 = bitcast %union.anon* %9217 to i64*
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9219 = getelementptr inbounds %struct.GPR, %struct.GPR* %9218, i32 0, i32 11
  %9220 = getelementptr inbounds %struct.Reg, %struct.Reg* %9219, i32 0, i32 0
  %RDI.i741 = bitcast %union.anon* %9220 to i64*
  %9221 = load i64, i64* %RDI.i741
  %9222 = add i64 %9221, 24
  %9223 = load i64, i64* %PC.i739
  %9224 = add i64 %9223, 3
  store i64 %9224, i64* %PC.i739
  %9225 = inttoptr i64 %9222 to i32*
  %9226 = load i32, i32* %9225
  %9227 = zext i32 %9226 to i64
  store i64 %9227, i64* %RSI.i740, align 8
  store %struct.Memory* %loadMem_45fa8d, %struct.Memory** %MEMORY
  %loadMem_45fa90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9229 = getelementptr inbounds %struct.GPR, %struct.GPR* %9228, i32 0, i32 33
  %9230 = getelementptr inbounds %struct.Reg, %struct.Reg* %9229, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %9230 to i64*
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9232 = getelementptr inbounds %struct.GPR, %struct.GPR* %9231, i32 0, i32 7
  %9233 = getelementptr inbounds %struct.Reg, %struct.Reg* %9232, i32 0, i32 0
  %RDX.i737 = bitcast %union.anon* %9233 to i64*
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9235 = getelementptr inbounds %struct.GPR, %struct.GPR* %9234, i32 0, i32 15
  %9236 = getelementptr inbounds %struct.Reg, %struct.Reg* %9235, i32 0, i32 0
  %RBP.i738 = bitcast %union.anon* %9236 to i64*
  %9237 = load i64, i64* %RBP.i738
  %9238 = sub i64 %9237, 20
  %9239 = load i64, i64* %PC.i736
  %9240 = add i64 %9239, 4
  store i64 %9240, i64* %PC.i736
  %9241 = inttoptr i64 %9238 to i32*
  %9242 = load i32, i32* %9241
  %9243 = sext i32 %9242 to i64
  store i64 %9243, i64* %RDX.i737, align 8
  store %struct.Memory* %loadMem_45fa90, %struct.Memory** %MEMORY
  %loadMem_45fa94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9245 = getelementptr inbounds %struct.GPR, %struct.GPR* %9244, i32 0, i32 33
  %9246 = getelementptr inbounds %struct.Reg, %struct.Reg* %9245, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %9246 to i64*
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9248 = getelementptr inbounds %struct.GPR, %struct.GPR* %9247, i32 0, i32 7
  %9249 = getelementptr inbounds %struct.Reg, %struct.Reg* %9248, i32 0, i32 0
  %RDX.i735 = bitcast %union.anon* %9249 to i64*
  %9250 = load i64, i64* %RDX.i735
  %9251 = load i64, i64* %PC.i734
  %9252 = add i64 %9251, 4
  store i64 %9252, i64* %PC.i734
  %9253 = shl i64 %9250, 4
  %9254 = icmp slt i64 %9253, 0
  %9255 = shl i64 %9253, 1
  store i64 %9255, i64* %RDX.i735, align 8
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9257 = zext i1 %9254 to i8
  store i8 %9257, i8* %9256, align 1
  %9258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9259 = trunc i64 %9255 to i32
  %9260 = and i32 %9259, 254
  %9261 = call i32 @llvm.ctpop.i32(i32 %9260)
  %9262 = trunc i32 %9261 to i8
  %9263 = and i8 %9262, 1
  %9264 = xor i8 %9263, 1
  store i8 %9264, i8* %9258, align 1
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9265, align 1
  %9266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9267 = icmp eq i64 %9255, 0
  %9268 = zext i1 %9267 to i8
  store i8 %9268, i8* %9266, align 1
  %9269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9270 = lshr i64 %9255, 63
  %9271 = trunc i64 %9270 to i8
  store i8 %9271, i8* %9269, align 1
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9272, align 1
  store %struct.Memory* %loadMem_45fa94, %struct.Memory** %MEMORY
  %loadMem_45fa98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9274 = getelementptr inbounds %struct.GPR, %struct.GPR* %9273, i32 0, i32 33
  %9275 = getelementptr inbounds %struct.Reg, %struct.Reg* %9274, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %9275 to i64*
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 5
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %RCX.i732 = bitcast %union.anon* %9278 to i64*
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9280 = getelementptr inbounds %struct.GPR, %struct.GPR* %9279, i32 0, i32 11
  %9281 = getelementptr inbounds %struct.Reg, %struct.Reg* %9280, i32 0, i32 0
  %RDI.i733 = bitcast %union.anon* %9281 to i64*
  %9282 = load i64, i64* %RCX.i732
  %9283 = load i64, i64* %PC.i731
  %9284 = add i64 %9283, 3
  store i64 %9284, i64* %PC.i731
  store i64 %9282, i64* %RDI.i733, align 8
  store %struct.Memory* %loadMem_45fa98, %struct.Memory** %MEMORY
  %loadMem_45fa9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9286 = getelementptr inbounds %struct.GPR, %struct.GPR* %9285, i32 0, i32 33
  %9287 = getelementptr inbounds %struct.Reg, %struct.Reg* %9286, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %9287 to i64*
  %9288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9289 = getelementptr inbounds %struct.GPR, %struct.GPR* %9288, i32 0, i32 7
  %9290 = getelementptr inbounds %struct.Reg, %struct.Reg* %9289, i32 0, i32 0
  %RDX.i729 = bitcast %union.anon* %9290 to i64*
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9292 = getelementptr inbounds %struct.GPR, %struct.GPR* %9291, i32 0, i32 11
  %9293 = getelementptr inbounds %struct.Reg, %struct.Reg* %9292, i32 0, i32 0
  %RDI.i730 = bitcast %union.anon* %9293 to i64*
  %9294 = load i64, i64* %RDI.i730
  %9295 = load i64, i64* %RDX.i729
  %9296 = load i64, i64* %PC.i728
  %9297 = add i64 %9296, 3
  store i64 %9297, i64* %PC.i728
  %9298 = add i64 %9295, %9294
  store i64 %9298, i64* %RDI.i730, align 8
  %9299 = icmp ult i64 %9298, %9294
  %9300 = icmp ult i64 %9298, %9295
  %9301 = or i1 %9299, %9300
  %9302 = zext i1 %9301 to i8
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9302, i8* %9303, align 1
  %9304 = trunc i64 %9298 to i32
  %9305 = and i32 %9304, 255
  %9306 = call i32 @llvm.ctpop.i32(i32 %9305)
  %9307 = trunc i32 %9306 to i8
  %9308 = and i8 %9307, 1
  %9309 = xor i8 %9308, 1
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9309, i8* %9310, align 1
  %9311 = xor i64 %9295, %9294
  %9312 = xor i64 %9311, %9298
  %9313 = lshr i64 %9312, 4
  %9314 = trunc i64 %9313 to i8
  %9315 = and i8 %9314, 1
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9315, i8* %9316, align 1
  %9317 = icmp eq i64 %9298, 0
  %9318 = zext i1 %9317 to i8
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9318, i8* %9319, align 1
  %9320 = lshr i64 %9298, 63
  %9321 = trunc i64 %9320 to i8
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9321, i8* %9322, align 1
  %9323 = lshr i64 %9294, 63
  %9324 = lshr i64 %9295, 63
  %9325 = xor i64 %9320, %9323
  %9326 = xor i64 %9320, %9324
  %9327 = add i64 %9325, %9326
  %9328 = icmp eq i64 %9327, 2
  %9329 = zext i1 %9328 to i8
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9329, i8* %9330, align 1
  store %struct.Memory* %loadMem_45fa9b, %struct.Memory** %MEMORY
  %loadMem_45fa9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 33
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %9333 to i64*
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 9
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %RSI.i726 = bitcast %union.anon* %9336 to i64*
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 11
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %RDI.i727 = bitcast %union.anon* %9339 to i64*
  %9340 = load i64, i64* %RSI.i726
  %9341 = load i64, i64* %RDI.i727
  %9342 = add i64 %9341, 28
  %9343 = load i64, i64* %PC.i725
  %9344 = add i64 %9343, 3
  store i64 %9344, i64* %PC.i725
  %9345 = trunc i64 %9340 to i32
  %9346 = inttoptr i64 %9342 to i32*
  %9347 = load i32, i32* %9346
  %9348 = add i32 %9347, %9345
  %9349 = zext i32 %9348 to i64
  store i64 %9349, i64* %RSI.i726, align 8
  %9350 = icmp ult i32 %9348, %9345
  %9351 = icmp ult i32 %9348, %9347
  %9352 = or i1 %9350, %9351
  %9353 = zext i1 %9352 to i8
  %9354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9353, i8* %9354, align 1
  %9355 = and i32 %9348, 255
  %9356 = call i32 @llvm.ctpop.i32(i32 %9355)
  %9357 = trunc i32 %9356 to i8
  %9358 = and i8 %9357, 1
  %9359 = xor i8 %9358, 1
  %9360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9359, i8* %9360, align 1
  %9361 = xor i32 %9347, %9345
  %9362 = xor i32 %9361, %9348
  %9363 = lshr i32 %9362, 4
  %9364 = trunc i32 %9363 to i8
  %9365 = and i8 %9364, 1
  %9366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9365, i8* %9366, align 1
  %9367 = icmp eq i32 %9348, 0
  %9368 = zext i1 %9367 to i8
  %9369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9368, i8* %9369, align 1
  %9370 = lshr i32 %9348, 31
  %9371 = trunc i32 %9370 to i8
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9371, i8* %9372, align 1
  %9373 = lshr i32 %9345, 31
  %9374 = lshr i32 %9347, 31
  %9375 = xor i32 %9370, %9373
  %9376 = xor i32 %9370, %9374
  %9377 = add i32 %9375, %9376
  %9378 = icmp eq i32 %9377, 2
  %9379 = zext i1 %9378 to i8
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9379, i8* %9380, align 1
  store %struct.Memory* %loadMem_45fa9e, %struct.Memory** %MEMORY
  %loadMem_45faa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9382 = getelementptr inbounds %struct.GPR, %struct.GPR* %9381, i32 0, i32 33
  %9383 = getelementptr inbounds %struct.Reg, %struct.Reg* %9382, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %9383 to i64*
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 7
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %RDX.i723 = bitcast %union.anon* %9386 to i64*
  %9387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9388 = getelementptr inbounds %struct.GPR, %struct.GPR* %9387, i32 0, i32 15
  %9389 = getelementptr inbounds %struct.Reg, %struct.Reg* %9388, i32 0, i32 0
  %RBP.i724 = bitcast %union.anon* %9389 to i64*
  %9390 = load i64, i64* %RBP.i724
  %9391 = sub i64 %9390, 20
  %9392 = load i64, i64* %PC.i722
  %9393 = add i64 %9392, 4
  store i64 %9393, i64* %PC.i722
  %9394 = inttoptr i64 %9391 to i32*
  %9395 = load i32, i32* %9394
  %9396 = sext i32 %9395 to i64
  store i64 %9396, i64* %RDX.i723, align 8
  store %struct.Memory* %loadMem_45faa1, %struct.Memory** %MEMORY
  %loadMem_45faa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9398 = getelementptr inbounds %struct.GPR, %struct.GPR* %9397, i32 0, i32 33
  %9399 = getelementptr inbounds %struct.Reg, %struct.Reg* %9398, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %9399 to i64*
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9401 = getelementptr inbounds %struct.GPR, %struct.GPR* %9400, i32 0, i32 7
  %9402 = getelementptr inbounds %struct.Reg, %struct.Reg* %9401, i32 0, i32 0
  %RDX.i721 = bitcast %union.anon* %9402 to i64*
  %9403 = load i64, i64* %RDX.i721
  %9404 = load i64, i64* %PC.i720
  %9405 = add i64 %9404, 4
  store i64 %9405, i64* %PC.i720
  %9406 = shl i64 %9403, 4
  %9407 = icmp slt i64 %9406, 0
  %9408 = shl i64 %9406, 1
  store i64 %9408, i64* %RDX.i721, align 8
  %9409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9410 = zext i1 %9407 to i8
  store i8 %9410, i8* %9409, align 1
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9412 = trunc i64 %9408 to i32
  %9413 = and i32 %9412, 254
  %9414 = call i32 @llvm.ctpop.i32(i32 %9413)
  %9415 = trunc i32 %9414 to i8
  %9416 = and i8 %9415, 1
  %9417 = xor i8 %9416, 1
  store i8 %9417, i8* %9411, align 1
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9418, align 1
  %9419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9420 = icmp eq i64 %9408, 0
  %9421 = zext i1 %9420 to i8
  store i8 %9421, i8* %9419, align 1
  %9422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9423 = lshr i64 %9408, 63
  %9424 = trunc i64 %9423 to i8
  store i8 %9424, i8* %9422, align 1
  %9425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9425, align 1
  store %struct.Memory* %loadMem_45faa5, %struct.Memory** %MEMORY
  %loadMem_45faa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9427 = getelementptr inbounds %struct.GPR, %struct.GPR* %9426, i32 0, i32 33
  %9428 = getelementptr inbounds %struct.Reg, %struct.Reg* %9427, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %9428 to i64*
  %9429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9430 = getelementptr inbounds %struct.GPR, %struct.GPR* %9429, i32 0, i32 1
  %9431 = getelementptr inbounds %struct.Reg, %struct.Reg* %9430, i32 0, i32 0
  %RAX.i718 = bitcast %union.anon* %9431 to i64*
  %9432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9433 = getelementptr inbounds %struct.GPR, %struct.GPR* %9432, i32 0, i32 11
  %9434 = getelementptr inbounds %struct.Reg, %struct.Reg* %9433, i32 0, i32 0
  %RDI.i719 = bitcast %union.anon* %9434 to i64*
  %9435 = load i64, i64* %RAX.i718
  %9436 = load i64, i64* %PC.i717
  %9437 = add i64 %9436, 3
  store i64 %9437, i64* %PC.i717
  store i64 %9435, i64* %RDI.i719, align 8
  store %struct.Memory* %loadMem_45faa9, %struct.Memory** %MEMORY
  %loadMem_45faac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9439 = getelementptr inbounds %struct.GPR, %struct.GPR* %9438, i32 0, i32 33
  %9440 = getelementptr inbounds %struct.Reg, %struct.Reg* %9439, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %9440 to i64*
  %9441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9442 = getelementptr inbounds %struct.GPR, %struct.GPR* %9441, i32 0, i32 7
  %9443 = getelementptr inbounds %struct.Reg, %struct.Reg* %9442, i32 0, i32 0
  %RDX.i715 = bitcast %union.anon* %9443 to i64*
  %9444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9445 = getelementptr inbounds %struct.GPR, %struct.GPR* %9444, i32 0, i32 11
  %9446 = getelementptr inbounds %struct.Reg, %struct.Reg* %9445, i32 0, i32 0
  %RDI.i716 = bitcast %union.anon* %9446 to i64*
  %9447 = load i64, i64* %RDI.i716
  %9448 = load i64, i64* %RDX.i715
  %9449 = load i64, i64* %PC.i714
  %9450 = add i64 %9449, 3
  store i64 %9450, i64* %PC.i714
  %9451 = add i64 %9448, %9447
  store i64 %9451, i64* %RDI.i716, align 8
  %9452 = icmp ult i64 %9451, %9447
  %9453 = icmp ult i64 %9451, %9448
  %9454 = or i1 %9452, %9453
  %9455 = zext i1 %9454 to i8
  %9456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9455, i8* %9456, align 1
  %9457 = trunc i64 %9451 to i32
  %9458 = and i32 %9457, 255
  %9459 = call i32 @llvm.ctpop.i32(i32 %9458)
  %9460 = trunc i32 %9459 to i8
  %9461 = and i8 %9460, 1
  %9462 = xor i8 %9461, 1
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9462, i8* %9463, align 1
  %9464 = xor i64 %9448, %9447
  %9465 = xor i64 %9464, %9451
  %9466 = lshr i64 %9465, 4
  %9467 = trunc i64 %9466 to i8
  %9468 = and i8 %9467, 1
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9468, i8* %9469, align 1
  %9470 = icmp eq i64 %9451, 0
  %9471 = zext i1 %9470 to i8
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9471, i8* %9472, align 1
  %9473 = lshr i64 %9451, 63
  %9474 = trunc i64 %9473 to i8
  %9475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9474, i8* %9475, align 1
  %9476 = lshr i64 %9447, 63
  %9477 = lshr i64 %9448, 63
  %9478 = xor i64 %9473, %9476
  %9479 = xor i64 %9473, %9477
  %9480 = add i64 %9478, %9479
  %9481 = icmp eq i64 %9480, 2
  %9482 = zext i1 %9481 to i8
  %9483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9482, i8* %9483, align 1
  store %struct.Memory* %loadMem_45faac, %struct.Memory** %MEMORY
  %loadMem_45faaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9485 = getelementptr inbounds %struct.GPR, %struct.GPR* %9484, i32 0, i32 33
  %9486 = getelementptr inbounds %struct.Reg, %struct.Reg* %9485, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %9486 to i64*
  %9487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9488 = getelementptr inbounds %struct.GPR, %struct.GPR* %9487, i32 0, i32 9
  %9489 = getelementptr inbounds %struct.Reg, %struct.Reg* %9488, i32 0, i32 0
  %ESI.i712 = bitcast %union.anon* %9489 to i32*
  %9490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9491 = getelementptr inbounds %struct.GPR, %struct.GPR* %9490, i32 0, i32 11
  %9492 = getelementptr inbounds %struct.Reg, %struct.Reg* %9491, i32 0, i32 0
  %RDI.i713 = bitcast %union.anon* %9492 to i64*
  %9493 = load i64, i64* %RDI.i713
  %9494 = add i64 %9493, 24
  %9495 = load i32, i32* %ESI.i712
  %9496 = zext i32 %9495 to i64
  %9497 = load i64, i64* %PC.i711
  %9498 = add i64 %9497, 3
  store i64 %9498, i64* %PC.i711
  %9499 = inttoptr i64 %9494 to i32*
  store i32 %9495, i32* %9499
  store %struct.Memory* %loadMem_45faaf, %struct.Memory** %MEMORY
  %loadMem_45fab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9501 = getelementptr inbounds %struct.GPR, %struct.GPR* %9500, i32 0, i32 33
  %9502 = getelementptr inbounds %struct.Reg, %struct.Reg* %9501, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %9502 to i64*
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9504 = getelementptr inbounds %struct.GPR, %struct.GPR* %9503, i32 0, i32 7
  %9505 = getelementptr inbounds %struct.Reg, %struct.Reg* %9504, i32 0, i32 0
  %RDX.i709 = bitcast %union.anon* %9505 to i64*
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9507 = getelementptr inbounds %struct.GPR, %struct.GPR* %9506, i32 0, i32 15
  %9508 = getelementptr inbounds %struct.Reg, %struct.Reg* %9507, i32 0, i32 0
  %RBP.i710 = bitcast %union.anon* %9508 to i64*
  %9509 = load i64, i64* %RBP.i710
  %9510 = sub i64 %9509, 20
  %9511 = load i64, i64* %PC.i708
  %9512 = add i64 %9511, 4
  store i64 %9512, i64* %PC.i708
  %9513 = inttoptr i64 %9510 to i32*
  %9514 = load i32, i32* %9513
  %9515 = sext i32 %9514 to i64
  store i64 %9515, i64* %RDX.i709, align 8
  store %struct.Memory* %loadMem_45fab2, %struct.Memory** %MEMORY
  %loadMem_45fab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9517 = getelementptr inbounds %struct.GPR, %struct.GPR* %9516, i32 0, i32 33
  %9518 = getelementptr inbounds %struct.Reg, %struct.Reg* %9517, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %9518 to i64*
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9520 = getelementptr inbounds %struct.GPR, %struct.GPR* %9519, i32 0, i32 7
  %9521 = getelementptr inbounds %struct.Reg, %struct.Reg* %9520, i32 0, i32 0
  %RDX.i707 = bitcast %union.anon* %9521 to i64*
  %9522 = load i64, i64* %RDX.i707
  %9523 = load i64, i64* %PC.i706
  %9524 = add i64 %9523, 4
  store i64 %9524, i64* %PC.i706
  %9525 = shl i64 %9522, 4
  %9526 = icmp slt i64 %9525, 0
  %9527 = shl i64 %9525, 1
  store i64 %9527, i64* %RDX.i707, align 8
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9529 = zext i1 %9526 to i8
  store i8 %9529, i8* %9528, align 1
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9531 = trunc i64 %9527 to i32
  %9532 = and i32 %9531, 254
  %9533 = call i32 @llvm.ctpop.i32(i32 %9532)
  %9534 = trunc i32 %9533 to i8
  %9535 = and i8 %9534, 1
  %9536 = xor i8 %9535, 1
  store i8 %9536, i8* %9530, align 1
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9537, align 1
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9539 = icmp eq i64 %9527, 0
  %9540 = zext i1 %9539 to i8
  store i8 %9540, i8* %9538, align 1
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9542 = lshr i64 %9527, 63
  %9543 = trunc i64 %9542 to i8
  store i8 %9543, i8* %9541, align 1
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9544, align 1
  store %struct.Memory* %loadMem_45fab6, %struct.Memory** %MEMORY
  %loadMem_45faba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9546 = getelementptr inbounds %struct.GPR, %struct.GPR* %9545, i32 0, i32 33
  %9547 = getelementptr inbounds %struct.Reg, %struct.Reg* %9546, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %9547 to i64*
  %9548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9549 = getelementptr inbounds %struct.GPR, %struct.GPR* %9548, i32 0, i32 5
  %9550 = getelementptr inbounds %struct.Reg, %struct.Reg* %9549, i32 0, i32 0
  %RCX.i704 = bitcast %union.anon* %9550 to i64*
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9552 = getelementptr inbounds %struct.GPR, %struct.GPR* %9551, i32 0, i32 11
  %9553 = getelementptr inbounds %struct.Reg, %struct.Reg* %9552, i32 0, i32 0
  %RDI.i705 = bitcast %union.anon* %9553 to i64*
  %9554 = load i64, i64* %RCX.i704
  %9555 = load i64, i64* %PC.i703
  %9556 = add i64 %9555, 3
  store i64 %9556, i64* %PC.i703
  store i64 %9554, i64* %RDI.i705, align 8
  store %struct.Memory* %loadMem_45faba, %struct.Memory** %MEMORY
  %loadMem_45fabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9558 = getelementptr inbounds %struct.GPR, %struct.GPR* %9557, i32 0, i32 33
  %9559 = getelementptr inbounds %struct.Reg, %struct.Reg* %9558, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %9559 to i64*
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9561 = getelementptr inbounds %struct.GPR, %struct.GPR* %9560, i32 0, i32 7
  %9562 = getelementptr inbounds %struct.Reg, %struct.Reg* %9561, i32 0, i32 0
  %RDX.i701 = bitcast %union.anon* %9562 to i64*
  %9563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9564 = getelementptr inbounds %struct.GPR, %struct.GPR* %9563, i32 0, i32 11
  %9565 = getelementptr inbounds %struct.Reg, %struct.Reg* %9564, i32 0, i32 0
  %RDI.i702 = bitcast %union.anon* %9565 to i64*
  %9566 = load i64, i64* %RDI.i702
  %9567 = load i64, i64* %RDX.i701
  %9568 = load i64, i64* %PC.i700
  %9569 = add i64 %9568, 3
  store i64 %9569, i64* %PC.i700
  %9570 = add i64 %9567, %9566
  store i64 %9570, i64* %RDI.i702, align 8
  %9571 = icmp ult i64 %9570, %9566
  %9572 = icmp ult i64 %9570, %9567
  %9573 = or i1 %9571, %9572
  %9574 = zext i1 %9573 to i8
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9574, i8* %9575, align 1
  %9576 = trunc i64 %9570 to i32
  %9577 = and i32 %9576, 255
  %9578 = call i32 @llvm.ctpop.i32(i32 %9577)
  %9579 = trunc i32 %9578 to i8
  %9580 = and i8 %9579, 1
  %9581 = xor i8 %9580, 1
  %9582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9581, i8* %9582, align 1
  %9583 = xor i64 %9567, %9566
  %9584 = xor i64 %9583, %9570
  %9585 = lshr i64 %9584, 4
  %9586 = trunc i64 %9585 to i8
  %9587 = and i8 %9586, 1
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9587, i8* %9588, align 1
  %9589 = icmp eq i64 %9570, 0
  %9590 = zext i1 %9589 to i8
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9590, i8* %9591, align 1
  %9592 = lshr i64 %9570, 63
  %9593 = trunc i64 %9592 to i8
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9593, i8* %9594, align 1
  %9595 = lshr i64 %9566, 63
  %9596 = lshr i64 %9567, 63
  %9597 = xor i64 %9592, %9595
  %9598 = xor i64 %9592, %9596
  %9599 = add i64 %9597, %9598
  %9600 = icmp eq i64 %9599, 2
  %9601 = zext i1 %9600 to i8
  %9602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9601, i8* %9602, align 1
  store %struct.Memory* %loadMem_45fabd, %struct.Memory** %MEMORY
  %loadMem_45fac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9604 = getelementptr inbounds %struct.GPR, %struct.GPR* %9603, i32 0, i32 33
  %9605 = getelementptr inbounds %struct.Reg, %struct.Reg* %9604, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %9605 to i64*
  %9606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9607 = getelementptr inbounds %struct.GPR, %struct.GPR* %9606, i32 0, i32 9
  %9608 = getelementptr inbounds %struct.Reg, %struct.Reg* %9607, i32 0, i32 0
  %RSI.i699 = bitcast %union.anon* %9608 to i64*
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9610 = getelementptr inbounds %struct.GPR, %struct.GPR* %9609, i32 0, i32 11
  %9611 = getelementptr inbounds %struct.Reg, %struct.Reg* %9610, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %9611 to i64*
  %9612 = load i64, i64* %RDI.i
  %9613 = add i64 %9612, 24
  %9614 = load i64, i64* %PC.i698
  %9615 = add i64 %9614, 3
  store i64 %9615, i64* %PC.i698
  %9616 = inttoptr i64 %9613 to i32*
  %9617 = load i32, i32* %9616
  %9618 = zext i32 %9617 to i64
  store i64 %9618, i64* %RSI.i699, align 8
  store %struct.Memory* %loadMem_45fac0, %struct.Memory** %MEMORY
  %loadMem_45fac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9620 = getelementptr inbounds %struct.GPR, %struct.GPR* %9619, i32 0, i32 33
  %9621 = getelementptr inbounds %struct.Reg, %struct.Reg* %9620, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %9621 to i64*
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9623 = getelementptr inbounds %struct.GPR, %struct.GPR* %9622, i32 0, i32 7
  %9624 = getelementptr inbounds %struct.Reg, %struct.Reg* %9623, i32 0, i32 0
  %RDX.i696 = bitcast %union.anon* %9624 to i64*
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9626 = getelementptr inbounds %struct.GPR, %struct.GPR* %9625, i32 0, i32 15
  %9627 = getelementptr inbounds %struct.Reg, %struct.Reg* %9626, i32 0, i32 0
  %RBP.i697 = bitcast %union.anon* %9627 to i64*
  %9628 = load i64, i64* %RBP.i697
  %9629 = sub i64 %9628, 20
  %9630 = load i64, i64* %PC.i695
  %9631 = add i64 %9630, 4
  store i64 %9631, i64* %PC.i695
  %9632 = inttoptr i64 %9629 to i32*
  %9633 = load i32, i32* %9632
  %9634 = sext i32 %9633 to i64
  store i64 %9634, i64* %RDX.i696, align 8
  store %struct.Memory* %loadMem_45fac3, %struct.Memory** %MEMORY
  %loadMem_45fac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9636 = getelementptr inbounds %struct.GPR, %struct.GPR* %9635, i32 0, i32 33
  %9637 = getelementptr inbounds %struct.Reg, %struct.Reg* %9636, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %9637 to i64*
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9639 = getelementptr inbounds %struct.GPR, %struct.GPR* %9638, i32 0, i32 7
  %9640 = getelementptr inbounds %struct.Reg, %struct.Reg* %9639, i32 0, i32 0
  %RDX.i694 = bitcast %union.anon* %9640 to i64*
  %9641 = load i64, i64* %RDX.i694
  %9642 = load i64, i64* %PC.i693
  %9643 = add i64 %9642, 4
  store i64 %9643, i64* %PC.i693
  %9644 = shl i64 %9641, 4
  %9645 = icmp slt i64 %9644, 0
  %9646 = shl i64 %9644, 1
  store i64 %9646, i64* %RDX.i694, align 8
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9648 = zext i1 %9645 to i8
  store i8 %9648, i8* %9647, align 1
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9650 = trunc i64 %9646 to i32
  %9651 = and i32 %9650, 254
  %9652 = call i32 @llvm.ctpop.i32(i32 %9651)
  %9653 = trunc i32 %9652 to i8
  %9654 = and i8 %9653, 1
  %9655 = xor i8 %9654, 1
  store i8 %9655, i8* %9649, align 1
  %9656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9656, align 1
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9658 = icmp eq i64 %9646, 0
  %9659 = zext i1 %9658 to i8
  store i8 %9659, i8* %9657, align 1
  %9660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9661 = lshr i64 %9646, 63
  %9662 = trunc i64 %9661 to i8
  store i8 %9662, i8* %9660, align 1
  %9663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9663, align 1
  store %struct.Memory* %loadMem_45fac7, %struct.Memory** %MEMORY
  %loadMem_45facb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9665 = getelementptr inbounds %struct.GPR, %struct.GPR* %9664, i32 0, i32 33
  %9666 = getelementptr inbounds %struct.Reg, %struct.Reg* %9665, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %9666 to i64*
  %9667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9668 = getelementptr inbounds %struct.GPR, %struct.GPR* %9667, i32 0, i32 5
  %9669 = getelementptr inbounds %struct.Reg, %struct.Reg* %9668, i32 0, i32 0
  %RCX.i691 = bitcast %union.anon* %9669 to i64*
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9671 = getelementptr inbounds %struct.GPR, %struct.GPR* %9670, i32 0, i32 7
  %9672 = getelementptr inbounds %struct.Reg, %struct.Reg* %9671, i32 0, i32 0
  %RDX.i692 = bitcast %union.anon* %9672 to i64*
  %9673 = load i64, i64* %RCX.i691
  %9674 = load i64, i64* %RDX.i692
  %9675 = load i64, i64* %PC.i690
  %9676 = add i64 %9675, 3
  store i64 %9676, i64* %PC.i690
  %9677 = add i64 %9674, %9673
  store i64 %9677, i64* %RCX.i691, align 8
  %9678 = icmp ult i64 %9677, %9673
  %9679 = icmp ult i64 %9677, %9674
  %9680 = or i1 %9678, %9679
  %9681 = zext i1 %9680 to i8
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9681, i8* %9682, align 1
  %9683 = trunc i64 %9677 to i32
  %9684 = and i32 %9683, 255
  %9685 = call i32 @llvm.ctpop.i32(i32 %9684)
  %9686 = trunc i32 %9685 to i8
  %9687 = and i8 %9686, 1
  %9688 = xor i8 %9687, 1
  %9689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9688, i8* %9689, align 1
  %9690 = xor i64 %9674, %9673
  %9691 = xor i64 %9690, %9677
  %9692 = lshr i64 %9691, 4
  %9693 = trunc i64 %9692 to i8
  %9694 = and i8 %9693, 1
  %9695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9694, i8* %9695, align 1
  %9696 = icmp eq i64 %9677, 0
  %9697 = zext i1 %9696 to i8
  %9698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9697, i8* %9698, align 1
  %9699 = lshr i64 %9677, 63
  %9700 = trunc i64 %9699 to i8
  %9701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9700, i8* %9701, align 1
  %9702 = lshr i64 %9673, 63
  %9703 = lshr i64 %9674, 63
  %9704 = xor i64 %9699, %9702
  %9705 = xor i64 %9699, %9703
  %9706 = add i64 %9704, %9705
  %9707 = icmp eq i64 %9706, 2
  %9708 = zext i1 %9707 to i8
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9708, i8* %9709, align 1
  store %struct.Memory* %loadMem_45facb, %struct.Memory** %MEMORY
  %loadMem_45face = load %struct.Memory*, %struct.Memory** %MEMORY
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9711 = getelementptr inbounds %struct.GPR, %struct.GPR* %9710, i32 0, i32 33
  %9712 = getelementptr inbounds %struct.Reg, %struct.Reg* %9711, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %9712 to i64*
  %9713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9714 = getelementptr inbounds %struct.GPR, %struct.GPR* %9713, i32 0, i32 5
  %9715 = getelementptr inbounds %struct.Reg, %struct.Reg* %9714, i32 0, i32 0
  %RCX.i688 = bitcast %union.anon* %9715 to i64*
  %9716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9717 = getelementptr inbounds %struct.GPR, %struct.GPR* %9716, i32 0, i32 9
  %9718 = getelementptr inbounds %struct.Reg, %struct.Reg* %9717, i32 0, i32 0
  %RSI.i689 = bitcast %union.anon* %9718 to i64*
  %9719 = load i64, i64* %RSI.i689
  %9720 = load i64, i64* %RCX.i688
  %9721 = add i64 %9720, 28
  %9722 = load i64, i64* %PC.i687
  %9723 = add i64 %9722, 3
  store i64 %9723, i64* %PC.i687
  %9724 = trunc i64 %9719 to i32
  %9725 = inttoptr i64 %9721 to i32*
  %9726 = load i32, i32* %9725
  %9727 = sub i32 %9724, %9726
  %9728 = zext i32 %9727 to i64
  store i64 %9728, i64* %RSI.i689, align 8
  %9729 = icmp ult i32 %9724, %9726
  %9730 = zext i1 %9729 to i8
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9730, i8* %9731, align 1
  %9732 = and i32 %9727, 255
  %9733 = call i32 @llvm.ctpop.i32(i32 %9732)
  %9734 = trunc i32 %9733 to i8
  %9735 = and i8 %9734, 1
  %9736 = xor i8 %9735, 1
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9736, i8* %9737, align 1
  %9738 = xor i32 %9726, %9724
  %9739 = xor i32 %9738, %9727
  %9740 = lshr i32 %9739, 4
  %9741 = trunc i32 %9740 to i8
  %9742 = and i8 %9741, 1
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9742, i8* %9743, align 1
  %9744 = icmp eq i32 %9727, 0
  %9745 = zext i1 %9744 to i8
  %9746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9745, i8* %9746, align 1
  %9747 = lshr i32 %9727, 31
  %9748 = trunc i32 %9747 to i8
  %9749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9748, i8* %9749, align 1
  %9750 = lshr i32 %9724, 31
  %9751 = lshr i32 %9726, 31
  %9752 = xor i32 %9751, %9750
  %9753 = xor i32 %9747, %9750
  %9754 = add i32 %9753, %9752
  %9755 = icmp eq i32 %9754, 2
  %9756 = zext i1 %9755 to i8
  %9757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9756, i8* %9757, align 1
  store %struct.Memory* %loadMem_45face, %struct.Memory** %MEMORY
  %loadMem_45fad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9759 = getelementptr inbounds %struct.GPR, %struct.GPR* %9758, i32 0, i32 33
  %9760 = getelementptr inbounds %struct.Reg, %struct.Reg* %9759, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %9760 to i64*
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 5
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %RCX.i685 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 15
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RBP.i686 = bitcast %union.anon* %9766 to i64*
  %9767 = load i64, i64* %RBP.i686
  %9768 = sub i64 %9767, 20
  %9769 = load i64, i64* %PC.i684
  %9770 = add i64 %9769, 4
  store i64 %9770, i64* %PC.i684
  %9771 = inttoptr i64 %9768 to i32*
  %9772 = load i32, i32* %9771
  %9773 = sext i32 %9772 to i64
  store i64 %9773, i64* %RCX.i685, align 8
  store %struct.Memory* %loadMem_45fad1, %struct.Memory** %MEMORY
  %loadMem_45fad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9775 = getelementptr inbounds %struct.GPR, %struct.GPR* %9774, i32 0, i32 33
  %9776 = getelementptr inbounds %struct.Reg, %struct.Reg* %9775, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %9776 to i64*
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9778 = getelementptr inbounds %struct.GPR, %struct.GPR* %9777, i32 0, i32 5
  %9779 = getelementptr inbounds %struct.Reg, %struct.Reg* %9778, i32 0, i32 0
  %RCX.i683 = bitcast %union.anon* %9779 to i64*
  %9780 = load i64, i64* %RCX.i683
  %9781 = load i64, i64* %PC.i682
  %9782 = add i64 %9781, 4
  store i64 %9782, i64* %PC.i682
  %9783 = shl i64 %9780, 4
  %9784 = icmp slt i64 %9783, 0
  %9785 = shl i64 %9783, 1
  store i64 %9785, i64* %RCX.i683, align 8
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9787 = zext i1 %9784 to i8
  store i8 %9787, i8* %9786, align 1
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9789 = trunc i64 %9785 to i32
  %9790 = and i32 %9789, 254
  %9791 = call i32 @llvm.ctpop.i32(i32 %9790)
  %9792 = trunc i32 %9791 to i8
  %9793 = and i8 %9792, 1
  %9794 = xor i8 %9793, 1
  store i8 %9794, i8* %9788, align 1
  %9795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9795, align 1
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9797 = icmp eq i64 %9785, 0
  %9798 = zext i1 %9797 to i8
  store i8 %9798, i8* %9796, align 1
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9800 = lshr i64 %9785, 63
  %9801 = trunc i64 %9800 to i8
  store i8 %9801, i8* %9799, align 1
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9802, align 1
  store %struct.Memory* %loadMem_45fad5, %struct.Memory** %MEMORY
  %loadMem_45fad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9804 = getelementptr inbounds %struct.GPR, %struct.GPR* %9803, i32 0, i32 33
  %9805 = getelementptr inbounds %struct.Reg, %struct.Reg* %9804, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %9805 to i64*
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9807 = getelementptr inbounds %struct.GPR, %struct.GPR* %9806, i32 0, i32 1
  %9808 = getelementptr inbounds %struct.Reg, %struct.Reg* %9807, i32 0, i32 0
  %RAX.i680 = bitcast %union.anon* %9808 to i64*
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9810 = getelementptr inbounds %struct.GPR, %struct.GPR* %9809, i32 0, i32 5
  %9811 = getelementptr inbounds %struct.Reg, %struct.Reg* %9810, i32 0, i32 0
  %RCX.i681 = bitcast %union.anon* %9811 to i64*
  %9812 = load i64, i64* %RAX.i680
  %9813 = load i64, i64* %RCX.i681
  %9814 = load i64, i64* %PC.i679
  %9815 = add i64 %9814, 3
  store i64 %9815, i64* %PC.i679
  %9816 = add i64 %9813, %9812
  store i64 %9816, i64* %RAX.i680, align 8
  %9817 = icmp ult i64 %9816, %9812
  %9818 = icmp ult i64 %9816, %9813
  %9819 = or i1 %9817, %9818
  %9820 = zext i1 %9819 to i8
  %9821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9820, i8* %9821, align 1
  %9822 = trunc i64 %9816 to i32
  %9823 = and i32 %9822, 255
  %9824 = call i32 @llvm.ctpop.i32(i32 %9823)
  %9825 = trunc i32 %9824 to i8
  %9826 = and i8 %9825, 1
  %9827 = xor i8 %9826, 1
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9827, i8* %9828, align 1
  %9829 = xor i64 %9813, %9812
  %9830 = xor i64 %9829, %9816
  %9831 = lshr i64 %9830, 4
  %9832 = trunc i64 %9831 to i8
  %9833 = and i8 %9832, 1
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9833, i8* %9834, align 1
  %9835 = icmp eq i64 %9816, 0
  %9836 = zext i1 %9835 to i8
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9836, i8* %9837, align 1
  %9838 = lshr i64 %9816, 63
  %9839 = trunc i64 %9838 to i8
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9839, i8* %9840, align 1
  %9841 = lshr i64 %9812, 63
  %9842 = lshr i64 %9813, 63
  %9843 = xor i64 %9838, %9841
  %9844 = xor i64 %9838, %9842
  %9845 = add i64 %9843, %9844
  %9846 = icmp eq i64 %9845, 2
  %9847 = zext i1 %9846 to i8
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9847, i8* %9848, align 1
  store %struct.Memory* %loadMem_45fad9, %struct.Memory** %MEMORY
  %loadMem_45fadc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9850 = getelementptr inbounds %struct.GPR, %struct.GPR* %9849, i32 0, i32 33
  %9851 = getelementptr inbounds %struct.Reg, %struct.Reg* %9850, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %9851 to i64*
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9853 = getelementptr inbounds %struct.GPR, %struct.GPR* %9852, i32 0, i32 9
  %9854 = getelementptr inbounds %struct.Reg, %struct.Reg* %9853, i32 0, i32 0
  %ESI.i677 = bitcast %union.anon* %9854 to i32*
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9856 = getelementptr inbounds %struct.GPR, %struct.GPR* %9855, i32 0, i32 1
  %9857 = getelementptr inbounds %struct.Reg, %struct.Reg* %9856, i32 0, i32 0
  %RAX.i678 = bitcast %union.anon* %9857 to i64*
  %9858 = load i64, i64* %RAX.i678
  %9859 = add i64 %9858, 28
  %9860 = load i32, i32* %ESI.i677
  %9861 = zext i32 %9860 to i64
  %9862 = load i64, i64* %PC.i676
  %9863 = add i64 %9862, 3
  store i64 %9863, i64* %PC.i676
  %9864 = inttoptr i64 %9859 to i32*
  store i32 %9860, i32* %9864
  store %struct.Memory* %loadMem_45fadc, %struct.Memory** %MEMORY
  %loadMem_45fadf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 33
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %9867 to i64*
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9869 = getelementptr inbounds %struct.GPR, %struct.GPR* %9868, i32 0, i32 1
  %9870 = getelementptr inbounds %struct.Reg, %struct.Reg* %9869, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %9870 to i64*
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9872 = getelementptr inbounds %struct.GPR, %struct.GPR* %9871, i32 0, i32 15
  %9873 = getelementptr inbounds %struct.Reg, %struct.Reg* %9872, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %9873 to i64*
  %9874 = load i64, i64* %RBP.i675
  %9875 = sub i64 %9874, 20
  %9876 = load i64, i64* %PC.i673
  %9877 = add i64 %9876, 3
  store i64 %9877, i64* %PC.i673
  %9878 = inttoptr i64 %9875 to i32*
  %9879 = load i32, i32* %9878
  %9880 = zext i32 %9879 to i64
  store i64 %9880, i64* %RAX.i674, align 8
  store %struct.Memory* %loadMem_45fadf, %struct.Memory** %MEMORY
  %loadMem_45fae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9882 = getelementptr inbounds %struct.GPR, %struct.GPR* %9881, i32 0, i32 33
  %9883 = getelementptr inbounds %struct.Reg, %struct.Reg* %9882, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %9883 to i64*
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9885 = getelementptr inbounds %struct.GPR, %struct.GPR* %9884, i32 0, i32 1
  %9886 = getelementptr inbounds %struct.Reg, %struct.Reg* %9885, i32 0, i32 0
  %RAX.i672 = bitcast %union.anon* %9886 to i64*
  %9887 = load i64, i64* %RAX.i672
  %9888 = load i64, i64* %PC.i671
  %9889 = add i64 %9888, 3
  store i64 %9889, i64* %PC.i671
  %9890 = trunc i64 %9887 to i32
  %9891 = add i32 1, %9890
  %9892 = zext i32 %9891 to i64
  store i64 %9892, i64* %RAX.i672, align 8
  %9893 = icmp ult i32 %9891, %9890
  %9894 = icmp ult i32 %9891, 1
  %9895 = or i1 %9893, %9894
  %9896 = zext i1 %9895 to i8
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9896, i8* %9897, align 1
  %9898 = and i32 %9891, 255
  %9899 = call i32 @llvm.ctpop.i32(i32 %9898)
  %9900 = trunc i32 %9899 to i8
  %9901 = and i8 %9900, 1
  %9902 = xor i8 %9901, 1
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9902, i8* %9903, align 1
  %9904 = xor i64 1, %9887
  %9905 = trunc i64 %9904 to i32
  %9906 = xor i32 %9905, %9891
  %9907 = lshr i32 %9906, 4
  %9908 = trunc i32 %9907 to i8
  %9909 = and i8 %9908, 1
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9909, i8* %9910, align 1
  %9911 = icmp eq i32 %9891, 0
  %9912 = zext i1 %9911 to i8
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9912, i8* %9913, align 1
  %9914 = lshr i32 %9891, 31
  %9915 = trunc i32 %9914 to i8
  %9916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9915, i8* %9916, align 1
  %9917 = lshr i32 %9890, 31
  %9918 = xor i32 %9914, %9917
  %9919 = add i32 %9918, %9914
  %9920 = icmp eq i32 %9919, 2
  %9921 = zext i1 %9920 to i8
  %9922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9921, i8* %9922, align 1
  store %struct.Memory* %loadMem_45fae2, %struct.Memory** %MEMORY
  %loadMem_45fae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9924 = getelementptr inbounds %struct.GPR, %struct.GPR* %9923, i32 0, i32 33
  %9925 = getelementptr inbounds %struct.Reg, %struct.Reg* %9924, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %9925 to i64*
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 1
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %EAX.i669 = bitcast %union.anon* %9928 to i32*
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9930 = getelementptr inbounds %struct.GPR, %struct.GPR* %9929, i32 0, i32 15
  %9931 = getelementptr inbounds %struct.Reg, %struct.Reg* %9930, i32 0, i32 0
  %RBP.i670 = bitcast %union.anon* %9931 to i64*
  %9932 = load i64, i64* %RBP.i670
  %9933 = sub i64 %9932, 20
  %9934 = load i32, i32* %EAX.i669
  %9935 = zext i32 %9934 to i64
  %9936 = load i64, i64* %PC.i668
  %9937 = add i64 %9936, 3
  store i64 %9937, i64* %PC.i668
  %9938 = inttoptr i64 %9933 to i32*
  store i32 %9934, i32* %9938
  store %struct.Memory* %loadMem_45fae5, %struct.Memory** %MEMORY
  %loadMem_45fae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9940 = getelementptr inbounds %struct.GPR, %struct.GPR* %9939, i32 0, i32 33
  %9941 = getelementptr inbounds %struct.Reg, %struct.Reg* %9940, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %9941 to i64*
  %9942 = load i64, i64* %PC.i667
  %9943 = add i64 %9942, -1294
  %9944 = load i64, i64* %PC.i667
  %9945 = add i64 %9944, 5
  store i64 %9945, i64* %PC.i667
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9943, i64* %9946, align 8
  store %struct.Memory* %loadMem_45fae8, %struct.Memory** %MEMORY
  br label %block_.L_45f5da

block_.L_45faed:                                  ; preds = %block_.L_45f5da
  %loadMem_45faed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9948 = getelementptr inbounds %struct.GPR, %struct.GPR* %9947, i32 0, i32 33
  %9949 = getelementptr inbounds %struct.Reg, %struct.Reg* %9948, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %9949 to i64*
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9951 = getelementptr inbounds %struct.GPR, %struct.GPR* %9950, i32 0, i32 15
  %9952 = getelementptr inbounds %struct.Reg, %struct.Reg* %9951, i32 0, i32 0
  %RBP.i666 = bitcast %union.anon* %9952 to i64*
  %9953 = load i64, i64* %RBP.i666
  %9954 = sub i64 %9953, 16
  %9955 = load i64, i64* %PC.i665
  %9956 = add i64 %9955, 7
  store i64 %9956, i64* %PC.i665
  %9957 = inttoptr i64 %9954 to i32*
  store i32 0, i32* %9957
  store %struct.Memory* %loadMem_45faed, %struct.Memory** %MEMORY
  br label %block_.L_45faf4

block_.L_45faf4:                                  ; preds = %block_45fafe, %block_.L_45faed
  %loadMem_45faf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 33
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %9960 to i64*
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 15
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %9963 to i64*
  %9964 = load i64, i64* %RBP.i664
  %9965 = sub i64 %9964, 16
  %9966 = load i64, i64* %PC.i663
  %9967 = add i64 %9966, 4
  store i64 %9967, i64* %PC.i663
  %9968 = inttoptr i64 %9965 to i32*
  %9969 = load i32, i32* %9968
  %9970 = sub i32 %9969, 8
  %9971 = icmp ult i32 %9969, 8
  %9972 = zext i1 %9971 to i8
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9972, i8* %9973, align 1
  %9974 = and i32 %9970, 255
  %9975 = call i32 @llvm.ctpop.i32(i32 %9974)
  %9976 = trunc i32 %9975 to i8
  %9977 = and i8 %9976, 1
  %9978 = xor i8 %9977, 1
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9978, i8* %9979, align 1
  %9980 = xor i32 %9969, 8
  %9981 = xor i32 %9980, %9970
  %9982 = lshr i32 %9981, 4
  %9983 = trunc i32 %9982 to i8
  %9984 = and i8 %9983, 1
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9984, i8* %9985, align 1
  %9986 = icmp eq i32 %9970, 0
  %9987 = zext i1 %9986 to i8
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9987, i8* %9988, align 1
  %9989 = lshr i32 %9970, 31
  %9990 = trunc i32 %9989 to i8
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9990, i8* %9991, align 1
  %9992 = lshr i32 %9969, 31
  %9993 = xor i32 %9989, %9992
  %9994 = add i32 %9993, %9992
  %9995 = icmp eq i32 %9994, 2
  %9996 = zext i1 %9995 to i8
  %9997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9996, i8* %9997, align 1
  store %struct.Memory* %loadMem_45faf4, %struct.Memory** %MEMORY
  %loadMem_45faf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9999 = getelementptr inbounds %struct.GPR, %struct.GPR* %9998, i32 0, i32 33
  %10000 = getelementptr inbounds %struct.Reg, %struct.Reg* %9999, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %10000 to i64*
  %10001 = load i64, i64* %PC.i662
  %10002 = add i64 %10001, 785
  %10003 = load i64, i64* %PC.i662
  %10004 = add i64 %10003, 6
  %10005 = load i64, i64* %PC.i662
  %10006 = add i64 %10005, 6
  store i64 %10006, i64* %PC.i662
  %10007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10008 = load i8, i8* %10007, align 1
  %10009 = icmp ne i8 %10008, 0
  %10010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10011 = load i8, i8* %10010, align 1
  %10012 = icmp ne i8 %10011, 0
  %10013 = xor i1 %10009, %10012
  %10014 = xor i1 %10013, true
  %10015 = zext i1 %10014 to i8
  store i8 %10015, i8* %BRANCH_TAKEN, align 1
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10017 = select i1 %10013, i64 %10004, i64 %10002
  store i64 %10017, i64* %10016, align 8
  store %struct.Memory* %loadMem_45faf8, %struct.Memory** %MEMORY
  %loadBr_45faf8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45faf8 = icmp eq i8 %loadBr_45faf8, 1
  br i1 %cmpBr_45faf8, label %block_.L_45fe09, label %block_45fafe

block_45fafe:                                     ; preds = %block_.L_45faf4
  %loadMem_45fafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10019 = getelementptr inbounds %struct.GPR, %struct.GPR* %10018, i32 0, i32 33
  %10020 = getelementptr inbounds %struct.Reg, %struct.Reg* %10019, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %10020 to i64*
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10022 = getelementptr inbounds %struct.GPR, %struct.GPR* %10021, i32 0, i32 1
  %10023 = getelementptr inbounds %struct.Reg, %struct.Reg* %10022, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %10023 to i64*
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10025 = getelementptr inbounds %struct.GPR, %struct.GPR* %10024, i32 0, i32 15
  %10026 = getelementptr inbounds %struct.Reg, %struct.Reg* %10025, i32 0, i32 0
  %RBP.i661 = bitcast %union.anon* %10026 to i64*
  %10027 = load i64, i64* %RBP.i661
  %10028 = sub i64 %10027, 16
  %10029 = load i64, i64* %PC.i659
  %10030 = add i64 %10029, 4
  store i64 %10030, i64* %PC.i659
  %10031 = inttoptr i64 %10028 to i32*
  %10032 = load i32, i32* %10031
  %10033 = sext i32 %10032 to i64
  store i64 %10033, i64* %RAX.i660, align 8
  store %struct.Memory* %loadMem_45fafe, %struct.Memory** %MEMORY
  %loadMem_45fb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 33
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %10036 to i64*
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10038 = getelementptr inbounds %struct.GPR, %struct.GPR* %10037, i32 0, i32 1
  %10039 = getelementptr inbounds %struct.Reg, %struct.Reg* %10038, i32 0, i32 0
  %RAX.i656 = bitcast %union.anon* %10039 to i64*
  %10040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10041 = getelementptr inbounds %struct.GPR, %struct.GPR* %10040, i32 0, i32 5
  %10042 = getelementptr inbounds %struct.Reg, %struct.Reg* %10041, i32 0, i32 0
  %RCX.i657 = bitcast %union.anon* %10042 to i64*
  %10043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10044 = getelementptr inbounds %struct.GPR, %struct.GPR* %10043, i32 0, i32 15
  %10045 = getelementptr inbounds %struct.Reg, %struct.Reg* %10044, i32 0, i32 0
  %RBP.i658 = bitcast %union.anon* %10045 to i64*
  %10046 = load i64, i64* %RBP.i658
  %10047 = load i64, i64* %RAX.i656
  %10048 = mul i64 %10047, 4
  %10049 = add i64 %10046, -544
  %10050 = add i64 %10049, %10048
  %10051 = load i64, i64* %PC.i655
  %10052 = add i64 %10051, 7
  store i64 %10052, i64* %PC.i655
  %10053 = inttoptr i64 %10050 to i32*
  %10054 = load i32, i32* %10053
  %10055 = zext i32 %10054 to i64
  store i64 %10055, i64* %RCX.i657, align 8
  store %struct.Memory* %loadMem_45fb02, %struct.Memory** %MEMORY
  %loadMem_45fb09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10057 = getelementptr inbounds %struct.GPR, %struct.GPR* %10056, i32 0, i32 33
  %10058 = getelementptr inbounds %struct.Reg, %struct.Reg* %10057, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %10058 to i64*
  %10059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10060 = getelementptr inbounds %struct.GPR, %struct.GPR* %10059, i32 0, i32 1
  %10061 = getelementptr inbounds %struct.Reg, %struct.Reg* %10060, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %10061 to i64*
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10063 = getelementptr inbounds %struct.GPR, %struct.GPR* %10062, i32 0, i32 15
  %10064 = getelementptr inbounds %struct.Reg, %struct.Reg* %10063, i32 0, i32 0
  %RBP.i654 = bitcast %union.anon* %10064 to i64*
  %10065 = load i64, i64* %RBP.i654
  %10066 = sub i64 %10065, 16
  %10067 = load i64, i64* %PC.i652
  %10068 = add i64 %10067, 4
  store i64 %10068, i64* %PC.i652
  %10069 = inttoptr i64 %10066 to i32*
  %10070 = load i32, i32* %10069
  %10071 = sext i32 %10070 to i64
  store i64 %10071, i64* %RAX.i653, align 8
  store %struct.Memory* %loadMem_45fb09, %struct.Memory** %MEMORY
  %loadMem_45fb0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 33
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %10074 to i64*
  %10075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10076 = getelementptr inbounds %struct.GPR, %struct.GPR* %10075, i32 0, i32 1
  %10077 = getelementptr inbounds %struct.Reg, %struct.Reg* %10076, i32 0, i32 0
  %RAX.i649 = bitcast %union.anon* %10077 to i64*
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10079 = getelementptr inbounds %struct.GPR, %struct.GPR* %10078, i32 0, i32 5
  %10080 = getelementptr inbounds %struct.Reg, %struct.Reg* %10079, i32 0, i32 0
  %RCX.i650 = bitcast %union.anon* %10080 to i64*
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10082 = getelementptr inbounds %struct.GPR, %struct.GPR* %10081, i32 0, i32 15
  %10083 = getelementptr inbounds %struct.Reg, %struct.Reg* %10082, i32 0, i32 0
  %RBP.i651 = bitcast %union.anon* %10083 to i64*
  %10084 = load i64, i64* %RCX.i650
  %10085 = load i64, i64* %RBP.i651
  %10086 = load i64, i64* %RAX.i649
  %10087 = mul i64 %10086, 4
  %10088 = add i64 %10085, -416
  %10089 = add i64 %10088, %10087
  %10090 = load i64, i64* %PC.i648
  %10091 = add i64 %10090, 7
  store i64 %10091, i64* %PC.i648
  %10092 = trunc i64 %10084 to i32
  %10093 = inttoptr i64 %10089 to i32*
  %10094 = load i32, i32* %10093
  %10095 = add i32 %10094, %10092
  %10096 = zext i32 %10095 to i64
  store i64 %10096, i64* %RCX.i650, align 8
  %10097 = icmp ult i32 %10095, %10092
  %10098 = icmp ult i32 %10095, %10094
  %10099 = or i1 %10097, %10098
  %10100 = zext i1 %10099 to i8
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10100, i8* %10101, align 1
  %10102 = and i32 %10095, 255
  %10103 = call i32 @llvm.ctpop.i32(i32 %10102)
  %10104 = trunc i32 %10103 to i8
  %10105 = and i8 %10104, 1
  %10106 = xor i8 %10105, 1
  %10107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10106, i8* %10107, align 1
  %10108 = xor i32 %10094, %10092
  %10109 = xor i32 %10108, %10095
  %10110 = lshr i32 %10109, 4
  %10111 = trunc i32 %10110 to i8
  %10112 = and i8 %10111, 1
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10112, i8* %10113, align 1
  %10114 = icmp eq i32 %10095, 0
  %10115 = zext i1 %10114 to i8
  %10116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10115, i8* %10116, align 1
  %10117 = lshr i32 %10095, 31
  %10118 = trunc i32 %10117 to i8
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10118, i8* %10119, align 1
  %10120 = lshr i32 %10092, 31
  %10121 = lshr i32 %10094, 31
  %10122 = xor i32 %10117, %10120
  %10123 = xor i32 %10117, %10121
  %10124 = add i32 %10122, %10123
  %10125 = icmp eq i32 %10124, 2
  %10126 = zext i1 %10125 to i8
  %10127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10126, i8* %10127, align 1
  store %struct.Memory* %loadMem_45fb0d, %struct.Memory** %MEMORY
  %loadMem_45fb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10129 = getelementptr inbounds %struct.GPR, %struct.GPR* %10128, i32 0, i32 33
  %10130 = getelementptr inbounds %struct.Reg, %struct.Reg* %10129, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %10130 to i64*
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 1
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %10133 to i64*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 15
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %RBP.i647 = bitcast %union.anon* %10136 to i64*
  %10137 = load i64, i64* %RBP.i647
  %10138 = sub i64 %10137, 16
  %10139 = load i64, i64* %PC.i645
  %10140 = add i64 %10139, 4
  store i64 %10140, i64* %PC.i645
  %10141 = inttoptr i64 %10138 to i32*
  %10142 = load i32, i32* %10141
  %10143 = sext i32 %10142 to i64
  store i64 %10143, i64* %RAX.i646, align 8
  store %struct.Memory* %loadMem_45fb14, %struct.Memory** %MEMORY
  %loadMem_45fb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 33
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %10146 to i64*
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 5
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %ECX.i642 = bitcast %union.anon* %10149 to i32*
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 1
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %RAX.i643 = bitcast %union.anon* %10152 to i64*
  %10153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10154 = getelementptr inbounds %struct.GPR, %struct.GPR* %10153, i32 0, i32 15
  %10155 = getelementptr inbounds %struct.Reg, %struct.Reg* %10154, i32 0, i32 0
  %RBP.i644 = bitcast %union.anon* %10155 to i64*
  %10156 = load i64, i64* %RBP.i644
  %10157 = load i64, i64* %RAX.i643
  %10158 = mul i64 %10157, 4
  %10159 = add i64 %10156, -800
  %10160 = add i64 %10159, %10158
  %10161 = load i32, i32* %ECX.i642
  %10162 = zext i32 %10161 to i64
  %10163 = load i64, i64* %PC.i641
  %10164 = add i64 %10163, 7
  store i64 %10164, i64* %PC.i641
  %10165 = inttoptr i64 %10160 to i32*
  store i32 %10161, i32* %10165
  store %struct.Memory* %loadMem_45fb18, %struct.Memory** %MEMORY
  %loadMem_45fb1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10167 = getelementptr inbounds %struct.GPR, %struct.GPR* %10166, i32 0, i32 33
  %10168 = getelementptr inbounds %struct.Reg, %struct.Reg* %10167, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %10168 to i64*
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10170 = getelementptr inbounds %struct.GPR, %struct.GPR* %10169, i32 0, i32 1
  %10171 = getelementptr inbounds %struct.Reg, %struct.Reg* %10170, i32 0, i32 0
  %RAX.i639 = bitcast %union.anon* %10171 to i64*
  %10172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10173 = getelementptr inbounds %struct.GPR, %struct.GPR* %10172, i32 0, i32 15
  %10174 = getelementptr inbounds %struct.Reg, %struct.Reg* %10173, i32 0, i32 0
  %RBP.i640 = bitcast %union.anon* %10174 to i64*
  %10175 = load i64, i64* %RBP.i640
  %10176 = sub i64 %10175, 16
  %10177 = load i64, i64* %PC.i638
  %10178 = add i64 %10177, 4
  store i64 %10178, i64* %PC.i638
  %10179 = inttoptr i64 %10176 to i32*
  %10180 = load i32, i32* %10179
  %10181 = sext i32 %10180 to i64
  store i64 %10181, i64* %RAX.i639, align 8
  store %struct.Memory* %loadMem_45fb1f, %struct.Memory** %MEMORY
  %loadMem_45fb23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10183 = getelementptr inbounds %struct.GPR, %struct.GPR* %10182, i32 0, i32 33
  %10184 = getelementptr inbounds %struct.Reg, %struct.Reg* %10183, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %10184 to i64*
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10186 = getelementptr inbounds %struct.GPR, %struct.GPR* %10185, i32 0, i32 1
  %10187 = getelementptr inbounds %struct.Reg, %struct.Reg* %10186, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %10187 to i64*
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10189 = getelementptr inbounds %struct.GPR, %struct.GPR* %10188, i32 0, i32 5
  %10190 = getelementptr inbounds %struct.Reg, %struct.Reg* %10189, i32 0, i32 0
  %RCX.i636 = bitcast %union.anon* %10190 to i64*
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10192 = getelementptr inbounds %struct.GPR, %struct.GPR* %10191, i32 0, i32 15
  %10193 = getelementptr inbounds %struct.Reg, %struct.Reg* %10192, i32 0, i32 0
  %RBP.i637 = bitcast %union.anon* %10193 to i64*
  %10194 = load i64, i64* %RBP.i637
  %10195 = load i64, i64* %RAX.i635
  %10196 = mul i64 %10195, 4
  %10197 = add i64 %10194, -512
  %10198 = add i64 %10197, %10196
  %10199 = load i64, i64* %PC.i634
  %10200 = add i64 %10199, 7
  store i64 %10200, i64* %PC.i634
  %10201 = inttoptr i64 %10198 to i32*
  %10202 = load i32, i32* %10201
  %10203 = zext i32 %10202 to i64
  store i64 %10203, i64* %RCX.i636, align 8
  store %struct.Memory* %loadMem_45fb23, %struct.Memory** %MEMORY
  %loadMem_45fb2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10205 = getelementptr inbounds %struct.GPR, %struct.GPR* %10204, i32 0, i32 33
  %10206 = getelementptr inbounds %struct.Reg, %struct.Reg* %10205, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %10206 to i64*
  %10207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10208 = getelementptr inbounds %struct.GPR, %struct.GPR* %10207, i32 0, i32 1
  %10209 = getelementptr inbounds %struct.Reg, %struct.Reg* %10208, i32 0, i32 0
  %RAX.i632 = bitcast %union.anon* %10209 to i64*
  %10210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10211 = getelementptr inbounds %struct.GPR, %struct.GPR* %10210, i32 0, i32 15
  %10212 = getelementptr inbounds %struct.Reg, %struct.Reg* %10211, i32 0, i32 0
  %RBP.i633 = bitcast %union.anon* %10212 to i64*
  %10213 = load i64, i64* %RBP.i633
  %10214 = sub i64 %10213, 16
  %10215 = load i64, i64* %PC.i631
  %10216 = add i64 %10215, 4
  store i64 %10216, i64* %PC.i631
  %10217 = inttoptr i64 %10214 to i32*
  %10218 = load i32, i32* %10217
  %10219 = sext i32 %10218 to i64
  store i64 %10219, i64* %RAX.i632, align 8
  store %struct.Memory* %loadMem_45fb2a, %struct.Memory** %MEMORY
  %loadMem_45fb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10221 = getelementptr inbounds %struct.GPR, %struct.GPR* %10220, i32 0, i32 33
  %10222 = getelementptr inbounds %struct.Reg, %struct.Reg* %10221, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %10222 to i64*
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10224 = getelementptr inbounds %struct.GPR, %struct.GPR* %10223, i32 0, i32 1
  %10225 = getelementptr inbounds %struct.Reg, %struct.Reg* %10224, i32 0, i32 0
  %RAX.i628 = bitcast %union.anon* %10225 to i64*
  %10226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10227 = getelementptr inbounds %struct.GPR, %struct.GPR* %10226, i32 0, i32 5
  %10228 = getelementptr inbounds %struct.Reg, %struct.Reg* %10227, i32 0, i32 0
  %RCX.i629 = bitcast %union.anon* %10228 to i64*
  %10229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10230 = getelementptr inbounds %struct.GPR, %struct.GPR* %10229, i32 0, i32 15
  %10231 = getelementptr inbounds %struct.Reg, %struct.Reg* %10230, i32 0, i32 0
  %RBP.i630 = bitcast %union.anon* %10231 to i64*
  %10232 = load i64, i64* %RCX.i629
  %10233 = load i64, i64* %RBP.i630
  %10234 = load i64, i64* %RAX.i628
  %10235 = mul i64 %10234, 4
  %10236 = add i64 %10233, -384
  %10237 = add i64 %10236, %10235
  %10238 = load i64, i64* %PC.i627
  %10239 = add i64 %10238, 7
  store i64 %10239, i64* %PC.i627
  %10240 = trunc i64 %10232 to i32
  %10241 = inttoptr i64 %10237 to i32*
  %10242 = load i32, i32* %10241
  %10243 = add i32 %10242, %10240
  %10244 = zext i32 %10243 to i64
  store i64 %10244, i64* %RCX.i629, align 8
  %10245 = icmp ult i32 %10243, %10240
  %10246 = icmp ult i32 %10243, %10242
  %10247 = or i1 %10245, %10246
  %10248 = zext i1 %10247 to i8
  %10249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10248, i8* %10249, align 1
  %10250 = and i32 %10243, 255
  %10251 = call i32 @llvm.ctpop.i32(i32 %10250)
  %10252 = trunc i32 %10251 to i8
  %10253 = and i8 %10252, 1
  %10254 = xor i8 %10253, 1
  %10255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10254, i8* %10255, align 1
  %10256 = xor i32 %10242, %10240
  %10257 = xor i32 %10256, %10243
  %10258 = lshr i32 %10257, 4
  %10259 = trunc i32 %10258 to i8
  %10260 = and i8 %10259, 1
  %10261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10260, i8* %10261, align 1
  %10262 = icmp eq i32 %10243, 0
  %10263 = zext i1 %10262 to i8
  %10264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10263, i8* %10264, align 1
  %10265 = lshr i32 %10243, 31
  %10266 = trunc i32 %10265 to i8
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10266, i8* %10267, align 1
  %10268 = lshr i32 %10240, 31
  %10269 = lshr i32 %10242, 31
  %10270 = xor i32 %10265, %10268
  %10271 = xor i32 %10265, %10269
  %10272 = add i32 %10270, %10271
  %10273 = icmp eq i32 %10272, 2
  %10274 = zext i1 %10273 to i8
  %10275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10274, i8* %10275, align 1
  store %struct.Memory* %loadMem_45fb2e, %struct.Memory** %MEMORY
  %loadMem_45fb35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10277 = getelementptr inbounds %struct.GPR, %struct.GPR* %10276, i32 0, i32 33
  %10278 = getelementptr inbounds %struct.Reg, %struct.Reg* %10277, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %10278 to i64*
  %10279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10280 = getelementptr inbounds %struct.GPR, %struct.GPR* %10279, i32 0, i32 1
  %10281 = getelementptr inbounds %struct.Reg, %struct.Reg* %10280, i32 0, i32 0
  %RAX.i625 = bitcast %union.anon* %10281 to i64*
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10283 = getelementptr inbounds %struct.GPR, %struct.GPR* %10282, i32 0, i32 15
  %10284 = getelementptr inbounds %struct.Reg, %struct.Reg* %10283, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %10284 to i64*
  %10285 = load i64, i64* %RBP.i626
  %10286 = sub i64 %10285, 16
  %10287 = load i64, i64* %PC.i624
  %10288 = add i64 %10287, 4
  store i64 %10288, i64* %PC.i624
  %10289 = inttoptr i64 %10286 to i32*
  %10290 = load i32, i32* %10289
  %10291 = sext i32 %10290 to i64
  store i64 %10291, i64* %RAX.i625, align 8
  store %struct.Memory* %loadMem_45fb35, %struct.Memory** %MEMORY
  %loadMem_45fb39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10293 = getelementptr inbounds %struct.GPR, %struct.GPR* %10292, i32 0, i32 33
  %10294 = getelementptr inbounds %struct.Reg, %struct.Reg* %10293, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %10294 to i64*
  %10295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10296 = getelementptr inbounds %struct.GPR, %struct.GPR* %10295, i32 0, i32 5
  %10297 = getelementptr inbounds %struct.Reg, %struct.Reg* %10296, i32 0, i32 0
  %ECX.i621 = bitcast %union.anon* %10297 to i32*
  %10298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10299 = getelementptr inbounds %struct.GPR, %struct.GPR* %10298, i32 0, i32 1
  %10300 = getelementptr inbounds %struct.Reg, %struct.Reg* %10299, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %10300 to i64*
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10302 = getelementptr inbounds %struct.GPR, %struct.GPR* %10301, i32 0, i32 15
  %10303 = getelementptr inbounds %struct.Reg, %struct.Reg* %10302, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %10303 to i64*
  %10304 = load i64, i64* %RBP.i623
  %10305 = load i64, i64* %RAX.i622
  %10306 = mul i64 %10305, 4
  %10307 = add i64 %10304, -768
  %10308 = add i64 %10307, %10306
  %10309 = load i32, i32* %ECX.i621
  %10310 = zext i32 %10309 to i64
  %10311 = load i64, i64* %PC.i620
  %10312 = add i64 %10311, 7
  store i64 %10312, i64* %PC.i620
  %10313 = inttoptr i64 %10308 to i32*
  store i32 %10309, i32* %10313
  store %struct.Memory* %loadMem_45fb39, %struct.Memory** %MEMORY
  %loadMem_45fb40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10315 = getelementptr inbounds %struct.GPR, %struct.GPR* %10314, i32 0, i32 33
  %10316 = getelementptr inbounds %struct.Reg, %struct.Reg* %10315, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %10316 to i64*
  %10317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10318 = getelementptr inbounds %struct.GPR, %struct.GPR* %10317, i32 0, i32 1
  %10319 = getelementptr inbounds %struct.Reg, %struct.Reg* %10318, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %10319 to i64*
  %10320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10321 = getelementptr inbounds %struct.GPR, %struct.GPR* %10320, i32 0, i32 15
  %10322 = getelementptr inbounds %struct.Reg, %struct.Reg* %10321, i32 0, i32 0
  %RBP.i619 = bitcast %union.anon* %10322 to i64*
  %10323 = load i64, i64* %RBP.i619
  %10324 = sub i64 %10323, 16
  %10325 = load i64, i64* %PC.i617
  %10326 = add i64 %10325, 4
  store i64 %10326, i64* %PC.i617
  %10327 = inttoptr i64 %10324 to i32*
  %10328 = load i32, i32* %10327
  %10329 = sext i32 %10328 to i64
  store i64 %10329, i64* %RAX.i618, align 8
  store %struct.Memory* %loadMem_45fb40, %struct.Memory** %MEMORY
  %loadMem_45fb44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10331 = getelementptr inbounds %struct.GPR, %struct.GPR* %10330, i32 0, i32 33
  %10332 = getelementptr inbounds %struct.Reg, %struct.Reg* %10331, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %10332 to i64*
  %10333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10334 = getelementptr inbounds %struct.GPR, %struct.GPR* %10333, i32 0, i32 1
  %10335 = getelementptr inbounds %struct.Reg, %struct.Reg* %10334, i32 0, i32 0
  %RAX.i614 = bitcast %union.anon* %10335 to i64*
  %10336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10337 = getelementptr inbounds %struct.GPR, %struct.GPR* %10336, i32 0, i32 5
  %10338 = getelementptr inbounds %struct.Reg, %struct.Reg* %10337, i32 0, i32 0
  %RCX.i615 = bitcast %union.anon* %10338 to i64*
  %10339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10340 = getelementptr inbounds %struct.GPR, %struct.GPR* %10339, i32 0, i32 15
  %10341 = getelementptr inbounds %struct.Reg, %struct.Reg* %10340, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %10341 to i64*
  %10342 = load i64, i64* %RBP.i616
  %10343 = load i64, i64* %RAX.i614
  %10344 = mul i64 %10343, 4
  %10345 = add i64 %10342, -480
  %10346 = add i64 %10345, %10344
  %10347 = load i64, i64* %PC.i613
  %10348 = add i64 %10347, 7
  store i64 %10348, i64* %PC.i613
  %10349 = inttoptr i64 %10346 to i32*
  %10350 = load i32, i32* %10349
  %10351 = zext i32 %10350 to i64
  store i64 %10351, i64* %RCX.i615, align 8
  store %struct.Memory* %loadMem_45fb44, %struct.Memory** %MEMORY
  %loadMem_45fb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10353 = getelementptr inbounds %struct.GPR, %struct.GPR* %10352, i32 0, i32 33
  %10354 = getelementptr inbounds %struct.Reg, %struct.Reg* %10353, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %10354 to i64*
  %10355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10356 = getelementptr inbounds %struct.GPR, %struct.GPR* %10355, i32 0, i32 1
  %10357 = getelementptr inbounds %struct.Reg, %struct.Reg* %10356, i32 0, i32 0
  %RAX.i611 = bitcast %union.anon* %10357 to i64*
  %10358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10359 = getelementptr inbounds %struct.GPR, %struct.GPR* %10358, i32 0, i32 15
  %10360 = getelementptr inbounds %struct.Reg, %struct.Reg* %10359, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %10360 to i64*
  %10361 = load i64, i64* %RBP.i612
  %10362 = sub i64 %10361, 16
  %10363 = load i64, i64* %PC.i610
  %10364 = add i64 %10363, 4
  store i64 %10364, i64* %PC.i610
  %10365 = inttoptr i64 %10362 to i32*
  %10366 = load i32, i32* %10365
  %10367 = sext i32 %10366 to i64
  store i64 %10367, i64* %RAX.i611, align 8
  store %struct.Memory* %loadMem_45fb4b, %struct.Memory** %MEMORY
  %loadMem_45fb4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10369 = getelementptr inbounds %struct.GPR, %struct.GPR* %10368, i32 0, i32 33
  %10370 = getelementptr inbounds %struct.Reg, %struct.Reg* %10369, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %10370 to i64*
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10372 = getelementptr inbounds %struct.GPR, %struct.GPR* %10371, i32 0, i32 1
  %10373 = getelementptr inbounds %struct.Reg, %struct.Reg* %10372, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %10373 to i64*
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10375 = getelementptr inbounds %struct.GPR, %struct.GPR* %10374, i32 0, i32 5
  %10376 = getelementptr inbounds %struct.Reg, %struct.Reg* %10375, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %10376 to i64*
  %10377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10378 = getelementptr inbounds %struct.GPR, %struct.GPR* %10377, i32 0, i32 15
  %10379 = getelementptr inbounds %struct.Reg, %struct.Reg* %10378, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %10379 to i64*
  %10380 = load i64, i64* %RCX.i608
  %10381 = load i64, i64* %RBP.i609
  %10382 = load i64, i64* %RAX.i607
  %10383 = mul i64 %10382, 4
  %10384 = add i64 %10381, -352
  %10385 = add i64 %10384, %10383
  %10386 = load i64, i64* %PC.i606
  %10387 = add i64 %10386, 7
  store i64 %10387, i64* %PC.i606
  %10388 = trunc i64 %10380 to i32
  %10389 = inttoptr i64 %10385 to i32*
  %10390 = load i32, i32* %10389
  %10391 = add i32 %10390, %10388
  %10392 = zext i32 %10391 to i64
  store i64 %10392, i64* %RCX.i608, align 8
  %10393 = icmp ult i32 %10391, %10388
  %10394 = icmp ult i32 %10391, %10390
  %10395 = or i1 %10393, %10394
  %10396 = zext i1 %10395 to i8
  %10397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10396, i8* %10397, align 1
  %10398 = and i32 %10391, 255
  %10399 = call i32 @llvm.ctpop.i32(i32 %10398)
  %10400 = trunc i32 %10399 to i8
  %10401 = and i8 %10400, 1
  %10402 = xor i8 %10401, 1
  %10403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10402, i8* %10403, align 1
  %10404 = xor i32 %10390, %10388
  %10405 = xor i32 %10404, %10391
  %10406 = lshr i32 %10405, 4
  %10407 = trunc i32 %10406 to i8
  %10408 = and i8 %10407, 1
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10408, i8* %10409, align 1
  %10410 = icmp eq i32 %10391, 0
  %10411 = zext i1 %10410 to i8
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10411, i8* %10412, align 1
  %10413 = lshr i32 %10391, 31
  %10414 = trunc i32 %10413 to i8
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10414, i8* %10415, align 1
  %10416 = lshr i32 %10388, 31
  %10417 = lshr i32 %10390, 31
  %10418 = xor i32 %10413, %10416
  %10419 = xor i32 %10413, %10417
  %10420 = add i32 %10418, %10419
  %10421 = icmp eq i32 %10420, 2
  %10422 = zext i1 %10421 to i8
  %10423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10422, i8* %10423, align 1
  store %struct.Memory* %loadMem_45fb4f, %struct.Memory** %MEMORY
  %loadMem_45fb56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10425 = getelementptr inbounds %struct.GPR, %struct.GPR* %10424, i32 0, i32 33
  %10426 = getelementptr inbounds %struct.Reg, %struct.Reg* %10425, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %10426 to i64*
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10428 = getelementptr inbounds %struct.GPR, %struct.GPR* %10427, i32 0, i32 1
  %10429 = getelementptr inbounds %struct.Reg, %struct.Reg* %10428, i32 0, i32 0
  %RAX.i604 = bitcast %union.anon* %10429 to i64*
  %10430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10431 = getelementptr inbounds %struct.GPR, %struct.GPR* %10430, i32 0, i32 15
  %10432 = getelementptr inbounds %struct.Reg, %struct.Reg* %10431, i32 0, i32 0
  %RBP.i605 = bitcast %union.anon* %10432 to i64*
  %10433 = load i64, i64* %RBP.i605
  %10434 = sub i64 %10433, 16
  %10435 = load i64, i64* %PC.i603
  %10436 = add i64 %10435, 4
  store i64 %10436, i64* %PC.i603
  %10437 = inttoptr i64 %10434 to i32*
  %10438 = load i32, i32* %10437
  %10439 = sext i32 %10438 to i64
  store i64 %10439, i64* %RAX.i604, align 8
  store %struct.Memory* %loadMem_45fb56, %struct.Memory** %MEMORY
  %loadMem_45fb5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10441 = getelementptr inbounds %struct.GPR, %struct.GPR* %10440, i32 0, i32 33
  %10442 = getelementptr inbounds %struct.Reg, %struct.Reg* %10441, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %10442 to i64*
  %10443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10444 = getelementptr inbounds %struct.GPR, %struct.GPR* %10443, i32 0, i32 5
  %10445 = getelementptr inbounds %struct.Reg, %struct.Reg* %10444, i32 0, i32 0
  %ECX.i600 = bitcast %union.anon* %10445 to i32*
  %10446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10447 = getelementptr inbounds %struct.GPR, %struct.GPR* %10446, i32 0, i32 1
  %10448 = getelementptr inbounds %struct.Reg, %struct.Reg* %10447, i32 0, i32 0
  %RAX.i601 = bitcast %union.anon* %10448 to i64*
  %10449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10450 = getelementptr inbounds %struct.GPR, %struct.GPR* %10449, i32 0, i32 15
  %10451 = getelementptr inbounds %struct.Reg, %struct.Reg* %10450, i32 0, i32 0
  %RBP.i602 = bitcast %union.anon* %10451 to i64*
  %10452 = load i64, i64* %RBP.i602
  %10453 = load i64, i64* %RAX.i601
  %10454 = mul i64 %10453, 4
  %10455 = add i64 %10452, -736
  %10456 = add i64 %10455, %10454
  %10457 = load i32, i32* %ECX.i600
  %10458 = zext i32 %10457 to i64
  %10459 = load i64, i64* %PC.i599
  %10460 = add i64 %10459, 7
  store i64 %10460, i64* %PC.i599
  %10461 = inttoptr i64 %10456 to i32*
  store i32 %10457, i32* %10461
  store %struct.Memory* %loadMem_45fb5a, %struct.Memory** %MEMORY
  %loadMem_45fb61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10463 = getelementptr inbounds %struct.GPR, %struct.GPR* %10462, i32 0, i32 33
  %10464 = getelementptr inbounds %struct.Reg, %struct.Reg* %10463, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %10464 to i64*
  %10465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10466 = getelementptr inbounds %struct.GPR, %struct.GPR* %10465, i32 0, i32 1
  %10467 = getelementptr inbounds %struct.Reg, %struct.Reg* %10466, i32 0, i32 0
  %RAX.i597 = bitcast %union.anon* %10467 to i64*
  %10468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10469 = getelementptr inbounds %struct.GPR, %struct.GPR* %10468, i32 0, i32 15
  %10470 = getelementptr inbounds %struct.Reg, %struct.Reg* %10469, i32 0, i32 0
  %RBP.i598 = bitcast %union.anon* %10470 to i64*
  %10471 = load i64, i64* %RBP.i598
  %10472 = sub i64 %10471, 16
  %10473 = load i64, i64* %PC.i596
  %10474 = add i64 %10473, 4
  store i64 %10474, i64* %PC.i596
  %10475 = inttoptr i64 %10472 to i32*
  %10476 = load i32, i32* %10475
  %10477 = sext i32 %10476 to i64
  store i64 %10477, i64* %RAX.i597, align 8
  store %struct.Memory* %loadMem_45fb61, %struct.Memory** %MEMORY
  %loadMem_45fb65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10479 = getelementptr inbounds %struct.GPR, %struct.GPR* %10478, i32 0, i32 33
  %10480 = getelementptr inbounds %struct.Reg, %struct.Reg* %10479, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %10480 to i64*
  %10481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10482 = getelementptr inbounds %struct.GPR, %struct.GPR* %10481, i32 0, i32 1
  %10483 = getelementptr inbounds %struct.Reg, %struct.Reg* %10482, i32 0, i32 0
  %RAX.i593 = bitcast %union.anon* %10483 to i64*
  %10484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10485 = getelementptr inbounds %struct.GPR, %struct.GPR* %10484, i32 0, i32 5
  %10486 = getelementptr inbounds %struct.Reg, %struct.Reg* %10485, i32 0, i32 0
  %RCX.i594 = bitcast %union.anon* %10486 to i64*
  %10487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10488 = getelementptr inbounds %struct.GPR, %struct.GPR* %10487, i32 0, i32 15
  %10489 = getelementptr inbounds %struct.Reg, %struct.Reg* %10488, i32 0, i32 0
  %RBP.i595 = bitcast %union.anon* %10489 to i64*
  %10490 = load i64, i64* %RBP.i595
  %10491 = load i64, i64* %RAX.i593
  %10492 = mul i64 %10491, 4
  %10493 = add i64 %10490, -448
  %10494 = add i64 %10493, %10492
  %10495 = load i64, i64* %PC.i592
  %10496 = add i64 %10495, 7
  store i64 %10496, i64* %PC.i592
  %10497 = inttoptr i64 %10494 to i32*
  %10498 = load i32, i32* %10497
  %10499 = zext i32 %10498 to i64
  store i64 %10499, i64* %RCX.i594, align 8
  store %struct.Memory* %loadMem_45fb65, %struct.Memory** %MEMORY
  %loadMem_45fb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10501 = getelementptr inbounds %struct.GPR, %struct.GPR* %10500, i32 0, i32 33
  %10502 = getelementptr inbounds %struct.Reg, %struct.Reg* %10501, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %10502 to i64*
  %10503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10504 = getelementptr inbounds %struct.GPR, %struct.GPR* %10503, i32 0, i32 1
  %10505 = getelementptr inbounds %struct.Reg, %struct.Reg* %10504, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %10505 to i64*
  %10506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10507 = getelementptr inbounds %struct.GPR, %struct.GPR* %10506, i32 0, i32 15
  %10508 = getelementptr inbounds %struct.Reg, %struct.Reg* %10507, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %10508 to i64*
  %10509 = load i64, i64* %RBP.i591
  %10510 = sub i64 %10509, 16
  %10511 = load i64, i64* %PC.i589
  %10512 = add i64 %10511, 4
  store i64 %10512, i64* %PC.i589
  %10513 = inttoptr i64 %10510 to i32*
  %10514 = load i32, i32* %10513
  %10515 = sext i32 %10514 to i64
  store i64 %10515, i64* %RAX.i590, align 8
  store %struct.Memory* %loadMem_45fb6c, %struct.Memory** %MEMORY
  %loadMem_45fb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10517 = getelementptr inbounds %struct.GPR, %struct.GPR* %10516, i32 0, i32 33
  %10518 = getelementptr inbounds %struct.Reg, %struct.Reg* %10517, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %10518 to i64*
  %10519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10520 = getelementptr inbounds %struct.GPR, %struct.GPR* %10519, i32 0, i32 1
  %10521 = getelementptr inbounds %struct.Reg, %struct.Reg* %10520, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %10521 to i64*
  %10522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10523 = getelementptr inbounds %struct.GPR, %struct.GPR* %10522, i32 0, i32 5
  %10524 = getelementptr inbounds %struct.Reg, %struct.Reg* %10523, i32 0, i32 0
  %RCX.i587 = bitcast %union.anon* %10524 to i64*
  %10525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10526 = getelementptr inbounds %struct.GPR, %struct.GPR* %10525, i32 0, i32 15
  %10527 = getelementptr inbounds %struct.Reg, %struct.Reg* %10526, i32 0, i32 0
  %RBP.i588 = bitcast %union.anon* %10527 to i64*
  %10528 = load i64, i64* %RCX.i587
  %10529 = load i64, i64* %RBP.i588
  %10530 = load i64, i64* %RAX.i586
  %10531 = mul i64 %10530, 4
  %10532 = add i64 %10529, -320
  %10533 = add i64 %10532, %10531
  %10534 = load i64, i64* %PC.i585
  %10535 = add i64 %10534, 7
  store i64 %10535, i64* %PC.i585
  %10536 = trunc i64 %10528 to i32
  %10537 = inttoptr i64 %10533 to i32*
  %10538 = load i32, i32* %10537
  %10539 = add i32 %10538, %10536
  %10540 = zext i32 %10539 to i64
  store i64 %10540, i64* %RCX.i587, align 8
  %10541 = icmp ult i32 %10539, %10536
  %10542 = icmp ult i32 %10539, %10538
  %10543 = or i1 %10541, %10542
  %10544 = zext i1 %10543 to i8
  %10545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10544, i8* %10545, align 1
  %10546 = and i32 %10539, 255
  %10547 = call i32 @llvm.ctpop.i32(i32 %10546)
  %10548 = trunc i32 %10547 to i8
  %10549 = and i8 %10548, 1
  %10550 = xor i8 %10549, 1
  %10551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10550, i8* %10551, align 1
  %10552 = xor i32 %10538, %10536
  %10553 = xor i32 %10552, %10539
  %10554 = lshr i32 %10553, 4
  %10555 = trunc i32 %10554 to i8
  %10556 = and i8 %10555, 1
  %10557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10556, i8* %10557, align 1
  %10558 = icmp eq i32 %10539, 0
  %10559 = zext i1 %10558 to i8
  %10560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10559, i8* %10560, align 1
  %10561 = lshr i32 %10539, 31
  %10562 = trunc i32 %10561 to i8
  %10563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10562, i8* %10563, align 1
  %10564 = lshr i32 %10536, 31
  %10565 = lshr i32 %10538, 31
  %10566 = xor i32 %10561, %10564
  %10567 = xor i32 %10561, %10565
  %10568 = add i32 %10566, %10567
  %10569 = icmp eq i32 %10568, 2
  %10570 = zext i1 %10569 to i8
  %10571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10570, i8* %10571, align 1
  store %struct.Memory* %loadMem_45fb70, %struct.Memory** %MEMORY
  %loadMem_45fb77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10573 = getelementptr inbounds %struct.GPR, %struct.GPR* %10572, i32 0, i32 33
  %10574 = getelementptr inbounds %struct.Reg, %struct.Reg* %10573, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %10574 to i64*
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10576 = getelementptr inbounds %struct.GPR, %struct.GPR* %10575, i32 0, i32 1
  %10577 = getelementptr inbounds %struct.Reg, %struct.Reg* %10576, i32 0, i32 0
  %RAX.i583 = bitcast %union.anon* %10577 to i64*
  %10578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10579 = getelementptr inbounds %struct.GPR, %struct.GPR* %10578, i32 0, i32 15
  %10580 = getelementptr inbounds %struct.Reg, %struct.Reg* %10579, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %10580 to i64*
  %10581 = load i64, i64* %RBP.i584
  %10582 = sub i64 %10581, 16
  %10583 = load i64, i64* %PC.i582
  %10584 = add i64 %10583, 4
  store i64 %10584, i64* %PC.i582
  %10585 = inttoptr i64 %10582 to i32*
  %10586 = load i32, i32* %10585
  %10587 = sext i32 %10586 to i64
  store i64 %10587, i64* %RAX.i583, align 8
  store %struct.Memory* %loadMem_45fb77, %struct.Memory** %MEMORY
  %loadMem_45fb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10589 = getelementptr inbounds %struct.GPR, %struct.GPR* %10588, i32 0, i32 33
  %10590 = getelementptr inbounds %struct.Reg, %struct.Reg* %10589, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %10590 to i64*
  %10591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10592 = getelementptr inbounds %struct.GPR, %struct.GPR* %10591, i32 0, i32 5
  %10593 = getelementptr inbounds %struct.Reg, %struct.Reg* %10592, i32 0, i32 0
  %ECX.i579 = bitcast %union.anon* %10593 to i32*
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10595 = getelementptr inbounds %struct.GPR, %struct.GPR* %10594, i32 0, i32 1
  %10596 = getelementptr inbounds %struct.Reg, %struct.Reg* %10595, i32 0, i32 0
  %RAX.i580 = bitcast %union.anon* %10596 to i64*
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10598 = getelementptr inbounds %struct.GPR, %struct.GPR* %10597, i32 0, i32 15
  %10599 = getelementptr inbounds %struct.Reg, %struct.Reg* %10598, i32 0, i32 0
  %RBP.i581 = bitcast %union.anon* %10599 to i64*
  %10600 = load i64, i64* %RBP.i581
  %10601 = load i64, i64* %RAX.i580
  %10602 = mul i64 %10601, 4
  %10603 = add i64 %10600, -704
  %10604 = add i64 %10603, %10602
  %10605 = load i32, i32* %ECX.i579
  %10606 = zext i32 %10605 to i64
  %10607 = load i64, i64* %PC.i578
  %10608 = add i64 %10607, 7
  store i64 %10608, i64* %PC.i578
  %10609 = inttoptr i64 %10604 to i32*
  store i32 %10605, i32* %10609
  store %struct.Memory* %loadMem_45fb7b, %struct.Memory** %MEMORY
  %loadMem_45fb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 33
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %10612 to i64*
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 1
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %RAX.i576 = bitcast %union.anon* %10615 to i64*
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10617 = getelementptr inbounds %struct.GPR, %struct.GPR* %10616, i32 0, i32 15
  %10618 = getelementptr inbounds %struct.Reg, %struct.Reg* %10617, i32 0, i32 0
  %RBP.i577 = bitcast %union.anon* %10618 to i64*
  %10619 = load i64, i64* %RBP.i577
  %10620 = sub i64 %10619, 16
  %10621 = load i64, i64* %PC.i575
  %10622 = add i64 %10621, 4
  store i64 %10622, i64* %PC.i575
  %10623 = inttoptr i64 %10620 to i32*
  %10624 = load i32, i32* %10623
  %10625 = sext i32 %10624 to i64
  store i64 %10625, i64* %RAX.i576, align 8
  store %struct.Memory* %loadMem_45fb82, %struct.Memory** %MEMORY
  %loadMem_45fb86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10627 = getelementptr inbounds %struct.GPR, %struct.GPR* %10626, i32 0, i32 33
  %10628 = getelementptr inbounds %struct.Reg, %struct.Reg* %10627, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %10628 to i64*
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10630 = getelementptr inbounds %struct.GPR, %struct.GPR* %10629, i32 0, i32 1
  %10631 = getelementptr inbounds %struct.Reg, %struct.Reg* %10630, i32 0, i32 0
  %RAX.i572 = bitcast %union.anon* %10631 to i64*
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 5
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %RCX.i573 = bitcast %union.anon* %10634 to i64*
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 15
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %RBP.i574 = bitcast %union.anon* %10637 to i64*
  %10638 = load i64, i64* %RBP.i574
  %10639 = load i64, i64* %RAX.i572
  %10640 = mul i64 %10639, 4
  %10641 = add i64 %10638, -544
  %10642 = add i64 %10641, %10640
  %10643 = load i64, i64* %PC.i571
  %10644 = add i64 %10643, 7
  store i64 %10644, i64* %PC.i571
  %10645 = inttoptr i64 %10642 to i32*
  %10646 = load i32, i32* %10645
  %10647 = zext i32 %10646 to i64
  store i64 %10647, i64* %RCX.i573, align 8
  store %struct.Memory* %loadMem_45fb86, %struct.Memory** %MEMORY
  %loadMem_45fb8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10649 = getelementptr inbounds %struct.GPR, %struct.GPR* %10648, i32 0, i32 33
  %10650 = getelementptr inbounds %struct.Reg, %struct.Reg* %10649, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %10650 to i64*
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10652 = getelementptr inbounds %struct.GPR, %struct.GPR* %10651, i32 0, i32 1
  %10653 = getelementptr inbounds %struct.Reg, %struct.Reg* %10652, i32 0, i32 0
  %RAX.i569 = bitcast %union.anon* %10653 to i64*
  %10654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10655 = getelementptr inbounds %struct.GPR, %struct.GPR* %10654, i32 0, i32 15
  %10656 = getelementptr inbounds %struct.Reg, %struct.Reg* %10655, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %10656 to i64*
  %10657 = load i64, i64* %RBP.i570
  %10658 = sub i64 %10657, 16
  %10659 = load i64, i64* %PC.i568
  %10660 = add i64 %10659, 4
  store i64 %10660, i64* %PC.i568
  %10661 = inttoptr i64 %10658 to i32*
  %10662 = load i32, i32* %10661
  %10663 = sext i32 %10662 to i64
  store i64 %10663, i64* %RAX.i569, align 8
  store %struct.Memory* %loadMem_45fb8d, %struct.Memory** %MEMORY
  %loadMem_45fb91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10665 = getelementptr inbounds %struct.GPR, %struct.GPR* %10664, i32 0, i32 33
  %10666 = getelementptr inbounds %struct.Reg, %struct.Reg* %10665, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %10666 to i64*
  %10667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10668 = getelementptr inbounds %struct.GPR, %struct.GPR* %10667, i32 0, i32 1
  %10669 = getelementptr inbounds %struct.Reg, %struct.Reg* %10668, i32 0, i32 0
  %RAX.i565 = bitcast %union.anon* %10669 to i64*
  %10670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10671 = getelementptr inbounds %struct.GPR, %struct.GPR* %10670, i32 0, i32 5
  %10672 = getelementptr inbounds %struct.Reg, %struct.Reg* %10671, i32 0, i32 0
  %RCX.i566 = bitcast %union.anon* %10672 to i64*
  %10673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10674 = getelementptr inbounds %struct.GPR, %struct.GPR* %10673, i32 0, i32 15
  %10675 = getelementptr inbounds %struct.Reg, %struct.Reg* %10674, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %10675 to i64*
  %10676 = load i64, i64* %RCX.i566
  %10677 = load i64, i64* %RBP.i567
  %10678 = load i64, i64* %RAX.i565
  %10679 = mul i64 %10678, 4
  %10680 = add i64 %10677, -416
  %10681 = add i64 %10680, %10679
  %10682 = load i64, i64* %PC.i564
  %10683 = add i64 %10682, 7
  store i64 %10683, i64* %PC.i564
  %10684 = trunc i64 %10676 to i32
  %10685 = inttoptr i64 %10681 to i32*
  %10686 = load i32, i32* %10685
  %10687 = sub i32 %10684, %10686
  %10688 = zext i32 %10687 to i64
  store i64 %10688, i64* %RCX.i566, align 8
  %10689 = icmp ult i32 %10684, %10686
  %10690 = zext i1 %10689 to i8
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10690, i8* %10691, align 1
  %10692 = and i32 %10687, 255
  %10693 = call i32 @llvm.ctpop.i32(i32 %10692)
  %10694 = trunc i32 %10693 to i8
  %10695 = and i8 %10694, 1
  %10696 = xor i8 %10695, 1
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10696, i8* %10697, align 1
  %10698 = xor i32 %10686, %10684
  %10699 = xor i32 %10698, %10687
  %10700 = lshr i32 %10699, 4
  %10701 = trunc i32 %10700 to i8
  %10702 = and i8 %10701, 1
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10702, i8* %10703, align 1
  %10704 = icmp eq i32 %10687, 0
  %10705 = zext i1 %10704 to i8
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10705, i8* %10706, align 1
  %10707 = lshr i32 %10687, 31
  %10708 = trunc i32 %10707 to i8
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10708, i8* %10709, align 1
  %10710 = lshr i32 %10684, 31
  %10711 = lshr i32 %10686, 31
  %10712 = xor i32 %10711, %10710
  %10713 = xor i32 %10707, %10710
  %10714 = add i32 %10713, %10712
  %10715 = icmp eq i32 %10714, 2
  %10716 = zext i1 %10715 to i8
  %10717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10716, i8* %10717, align 1
  store %struct.Memory* %loadMem_45fb91, %struct.Memory** %MEMORY
  %loadMem_45fb98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10719 = getelementptr inbounds %struct.GPR, %struct.GPR* %10718, i32 0, i32 33
  %10720 = getelementptr inbounds %struct.Reg, %struct.Reg* %10719, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %10720 to i64*
  %10721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10722 = getelementptr inbounds %struct.GPR, %struct.GPR* %10721, i32 0, i32 1
  %10723 = getelementptr inbounds %struct.Reg, %struct.Reg* %10722, i32 0, i32 0
  %RAX.i562 = bitcast %union.anon* %10723 to i64*
  %10724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10725 = getelementptr inbounds %struct.GPR, %struct.GPR* %10724, i32 0, i32 15
  %10726 = getelementptr inbounds %struct.Reg, %struct.Reg* %10725, i32 0, i32 0
  %RBP.i563 = bitcast %union.anon* %10726 to i64*
  %10727 = load i64, i64* %RBP.i563
  %10728 = sub i64 %10727, 16
  %10729 = load i64, i64* %PC.i561
  %10730 = add i64 %10729, 4
  store i64 %10730, i64* %PC.i561
  %10731 = inttoptr i64 %10728 to i32*
  %10732 = load i32, i32* %10731
  %10733 = sext i32 %10732 to i64
  store i64 %10733, i64* %RAX.i562, align 8
  store %struct.Memory* %loadMem_45fb98, %struct.Memory** %MEMORY
  %loadMem_45fb9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10735 = getelementptr inbounds %struct.GPR, %struct.GPR* %10734, i32 0, i32 33
  %10736 = getelementptr inbounds %struct.Reg, %struct.Reg* %10735, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %10736 to i64*
  %10737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10738 = getelementptr inbounds %struct.GPR, %struct.GPR* %10737, i32 0, i32 5
  %10739 = getelementptr inbounds %struct.Reg, %struct.Reg* %10738, i32 0, i32 0
  %ECX.i558 = bitcast %union.anon* %10739 to i32*
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10741 = getelementptr inbounds %struct.GPR, %struct.GPR* %10740, i32 0, i32 1
  %10742 = getelementptr inbounds %struct.Reg, %struct.Reg* %10741, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %10742 to i64*
  %10743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10744 = getelementptr inbounds %struct.GPR, %struct.GPR* %10743, i32 0, i32 15
  %10745 = getelementptr inbounds %struct.Reg, %struct.Reg* %10744, i32 0, i32 0
  %RBP.i560 = bitcast %union.anon* %10745 to i64*
  %10746 = load i64, i64* %RBP.i560
  %10747 = load i64, i64* %RAX.i559
  %10748 = mul i64 %10747, 4
  %10749 = add i64 %10746, -672
  %10750 = add i64 %10749, %10748
  %10751 = load i32, i32* %ECX.i558
  %10752 = zext i32 %10751 to i64
  %10753 = load i64, i64* %PC.i557
  %10754 = add i64 %10753, 7
  store i64 %10754, i64* %PC.i557
  %10755 = inttoptr i64 %10750 to i32*
  store i32 %10751, i32* %10755
  store %struct.Memory* %loadMem_45fb9c, %struct.Memory** %MEMORY
  %loadMem_45fba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10757 = getelementptr inbounds %struct.GPR, %struct.GPR* %10756, i32 0, i32 33
  %10758 = getelementptr inbounds %struct.Reg, %struct.Reg* %10757, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %10758 to i64*
  %10759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10760 = getelementptr inbounds %struct.GPR, %struct.GPR* %10759, i32 0, i32 1
  %10761 = getelementptr inbounds %struct.Reg, %struct.Reg* %10760, i32 0, i32 0
  %RAX.i555 = bitcast %union.anon* %10761 to i64*
  %10762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10763 = getelementptr inbounds %struct.GPR, %struct.GPR* %10762, i32 0, i32 15
  %10764 = getelementptr inbounds %struct.Reg, %struct.Reg* %10763, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %10764 to i64*
  %10765 = load i64, i64* %RBP.i556
  %10766 = sub i64 %10765, 16
  %10767 = load i64, i64* %PC.i554
  %10768 = add i64 %10767, 4
  store i64 %10768, i64* %PC.i554
  %10769 = inttoptr i64 %10766 to i32*
  %10770 = load i32, i32* %10769
  %10771 = sext i32 %10770 to i64
  store i64 %10771, i64* %RAX.i555, align 8
  store %struct.Memory* %loadMem_45fba3, %struct.Memory** %MEMORY
  %loadMem_45fba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10773 = getelementptr inbounds %struct.GPR, %struct.GPR* %10772, i32 0, i32 33
  %10774 = getelementptr inbounds %struct.Reg, %struct.Reg* %10773, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %10774 to i64*
  %10775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10776 = getelementptr inbounds %struct.GPR, %struct.GPR* %10775, i32 0, i32 1
  %10777 = getelementptr inbounds %struct.Reg, %struct.Reg* %10776, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %10777 to i64*
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10779 = getelementptr inbounds %struct.GPR, %struct.GPR* %10778, i32 0, i32 5
  %10780 = getelementptr inbounds %struct.Reg, %struct.Reg* %10779, i32 0, i32 0
  %RCX.i552 = bitcast %union.anon* %10780 to i64*
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10782 = getelementptr inbounds %struct.GPR, %struct.GPR* %10781, i32 0, i32 15
  %10783 = getelementptr inbounds %struct.Reg, %struct.Reg* %10782, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %10783 to i64*
  %10784 = load i64, i64* %RBP.i553
  %10785 = load i64, i64* %RAX.i551
  %10786 = mul i64 %10785, 4
  %10787 = add i64 %10784, -512
  %10788 = add i64 %10787, %10786
  %10789 = load i64, i64* %PC.i550
  %10790 = add i64 %10789, 7
  store i64 %10790, i64* %PC.i550
  %10791 = inttoptr i64 %10788 to i32*
  %10792 = load i32, i32* %10791
  %10793 = zext i32 %10792 to i64
  store i64 %10793, i64* %RCX.i552, align 8
  store %struct.Memory* %loadMem_45fba7, %struct.Memory** %MEMORY
  %loadMem_45fbae = load %struct.Memory*, %struct.Memory** %MEMORY
  %10794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10795 = getelementptr inbounds %struct.GPR, %struct.GPR* %10794, i32 0, i32 33
  %10796 = getelementptr inbounds %struct.Reg, %struct.Reg* %10795, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %10796 to i64*
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10798 = getelementptr inbounds %struct.GPR, %struct.GPR* %10797, i32 0, i32 1
  %10799 = getelementptr inbounds %struct.Reg, %struct.Reg* %10798, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %10799 to i64*
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10801 = getelementptr inbounds %struct.GPR, %struct.GPR* %10800, i32 0, i32 15
  %10802 = getelementptr inbounds %struct.Reg, %struct.Reg* %10801, i32 0, i32 0
  %RBP.i549 = bitcast %union.anon* %10802 to i64*
  %10803 = load i64, i64* %RBP.i549
  %10804 = sub i64 %10803, 16
  %10805 = load i64, i64* %PC.i547
  %10806 = add i64 %10805, 4
  store i64 %10806, i64* %PC.i547
  %10807 = inttoptr i64 %10804 to i32*
  %10808 = load i32, i32* %10807
  %10809 = sext i32 %10808 to i64
  store i64 %10809, i64* %RAX.i548, align 8
  store %struct.Memory* %loadMem_45fbae, %struct.Memory** %MEMORY
  %loadMem_45fbb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10811 = getelementptr inbounds %struct.GPR, %struct.GPR* %10810, i32 0, i32 33
  %10812 = getelementptr inbounds %struct.Reg, %struct.Reg* %10811, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %10812 to i64*
  %10813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10814 = getelementptr inbounds %struct.GPR, %struct.GPR* %10813, i32 0, i32 1
  %10815 = getelementptr inbounds %struct.Reg, %struct.Reg* %10814, i32 0, i32 0
  %RAX.i544 = bitcast %union.anon* %10815 to i64*
  %10816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10817 = getelementptr inbounds %struct.GPR, %struct.GPR* %10816, i32 0, i32 5
  %10818 = getelementptr inbounds %struct.Reg, %struct.Reg* %10817, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %10818 to i64*
  %10819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10820 = getelementptr inbounds %struct.GPR, %struct.GPR* %10819, i32 0, i32 15
  %10821 = getelementptr inbounds %struct.Reg, %struct.Reg* %10820, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %10821 to i64*
  %10822 = load i64, i64* %RCX.i545
  %10823 = load i64, i64* %RBP.i546
  %10824 = load i64, i64* %RAX.i544
  %10825 = mul i64 %10824, 4
  %10826 = add i64 %10823, -384
  %10827 = add i64 %10826, %10825
  %10828 = load i64, i64* %PC.i543
  %10829 = add i64 %10828, 7
  store i64 %10829, i64* %PC.i543
  %10830 = trunc i64 %10822 to i32
  %10831 = inttoptr i64 %10827 to i32*
  %10832 = load i32, i32* %10831
  %10833 = sub i32 %10830, %10832
  %10834 = zext i32 %10833 to i64
  store i64 %10834, i64* %RCX.i545, align 8
  %10835 = icmp ult i32 %10830, %10832
  %10836 = zext i1 %10835 to i8
  %10837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10836, i8* %10837, align 1
  %10838 = and i32 %10833, 255
  %10839 = call i32 @llvm.ctpop.i32(i32 %10838)
  %10840 = trunc i32 %10839 to i8
  %10841 = and i8 %10840, 1
  %10842 = xor i8 %10841, 1
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10842, i8* %10843, align 1
  %10844 = xor i32 %10832, %10830
  %10845 = xor i32 %10844, %10833
  %10846 = lshr i32 %10845, 4
  %10847 = trunc i32 %10846 to i8
  %10848 = and i8 %10847, 1
  %10849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10848, i8* %10849, align 1
  %10850 = icmp eq i32 %10833, 0
  %10851 = zext i1 %10850 to i8
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10851, i8* %10852, align 1
  %10853 = lshr i32 %10833, 31
  %10854 = trunc i32 %10853 to i8
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10854, i8* %10855, align 1
  %10856 = lshr i32 %10830, 31
  %10857 = lshr i32 %10832, 31
  %10858 = xor i32 %10857, %10856
  %10859 = xor i32 %10853, %10856
  %10860 = add i32 %10859, %10858
  %10861 = icmp eq i32 %10860, 2
  %10862 = zext i1 %10861 to i8
  %10863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10862, i8* %10863, align 1
  store %struct.Memory* %loadMem_45fbb2, %struct.Memory** %MEMORY
  %loadMem_45fbb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10865 = getelementptr inbounds %struct.GPR, %struct.GPR* %10864, i32 0, i32 33
  %10866 = getelementptr inbounds %struct.Reg, %struct.Reg* %10865, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %10866 to i64*
  %10867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10868 = getelementptr inbounds %struct.GPR, %struct.GPR* %10867, i32 0, i32 1
  %10869 = getelementptr inbounds %struct.Reg, %struct.Reg* %10868, i32 0, i32 0
  %RAX.i541 = bitcast %union.anon* %10869 to i64*
  %10870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10871 = getelementptr inbounds %struct.GPR, %struct.GPR* %10870, i32 0, i32 15
  %10872 = getelementptr inbounds %struct.Reg, %struct.Reg* %10871, i32 0, i32 0
  %RBP.i542 = bitcast %union.anon* %10872 to i64*
  %10873 = load i64, i64* %RBP.i542
  %10874 = sub i64 %10873, 16
  %10875 = load i64, i64* %PC.i540
  %10876 = add i64 %10875, 4
  store i64 %10876, i64* %PC.i540
  %10877 = inttoptr i64 %10874 to i32*
  %10878 = load i32, i32* %10877
  %10879 = sext i32 %10878 to i64
  store i64 %10879, i64* %RAX.i541, align 8
  store %struct.Memory* %loadMem_45fbb9, %struct.Memory** %MEMORY
  %loadMem_45fbbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10881 = getelementptr inbounds %struct.GPR, %struct.GPR* %10880, i32 0, i32 33
  %10882 = getelementptr inbounds %struct.Reg, %struct.Reg* %10881, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %10882 to i64*
  %10883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10884 = getelementptr inbounds %struct.GPR, %struct.GPR* %10883, i32 0, i32 5
  %10885 = getelementptr inbounds %struct.Reg, %struct.Reg* %10884, i32 0, i32 0
  %ECX.i537 = bitcast %union.anon* %10885 to i32*
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10887 = getelementptr inbounds %struct.GPR, %struct.GPR* %10886, i32 0, i32 1
  %10888 = getelementptr inbounds %struct.Reg, %struct.Reg* %10887, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %10888 to i64*
  %10889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10890 = getelementptr inbounds %struct.GPR, %struct.GPR* %10889, i32 0, i32 15
  %10891 = getelementptr inbounds %struct.Reg, %struct.Reg* %10890, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %10891 to i64*
  %10892 = load i64, i64* %RBP.i539
  %10893 = load i64, i64* %RAX.i538
  %10894 = mul i64 %10893, 4
  %10895 = add i64 %10892, -640
  %10896 = add i64 %10895, %10894
  %10897 = load i32, i32* %ECX.i537
  %10898 = zext i32 %10897 to i64
  %10899 = load i64, i64* %PC.i536
  %10900 = add i64 %10899, 7
  store i64 %10900, i64* %PC.i536
  %10901 = inttoptr i64 %10896 to i32*
  store i32 %10897, i32* %10901
  store %struct.Memory* %loadMem_45fbbd, %struct.Memory** %MEMORY
  %loadMem_45fbc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10903 = getelementptr inbounds %struct.GPR, %struct.GPR* %10902, i32 0, i32 33
  %10904 = getelementptr inbounds %struct.Reg, %struct.Reg* %10903, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %10904 to i64*
  %10905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10906 = getelementptr inbounds %struct.GPR, %struct.GPR* %10905, i32 0, i32 1
  %10907 = getelementptr inbounds %struct.Reg, %struct.Reg* %10906, i32 0, i32 0
  %RAX.i534 = bitcast %union.anon* %10907 to i64*
  %10908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10909 = getelementptr inbounds %struct.GPR, %struct.GPR* %10908, i32 0, i32 15
  %10910 = getelementptr inbounds %struct.Reg, %struct.Reg* %10909, i32 0, i32 0
  %RBP.i535 = bitcast %union.anon* %10910 to i64*
  %10911 = load i64, i64* %RBP.i535
  %10912 = sub i64 %10911, 16
  %10913 = load i64, i64* %PC.i533
  %10914 = add i64 %10913, 4
  store i64 %10914, i64* %PC.i533
  %10915 = inttoptr i64 %10912 to i32*
  %10916 = load i32, i32* %10915
  %10917 = sext i32 %10916 to i64
  store i64 %10917, i64* %RAX.i534, align 8
  store %struct.Memory* %loadMem_45fbc4, %struct.Memory** %MEMORY
  %loadMem_45fbc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10919 = getelementptr inbounds %struct.GPR, %struct.GPR* %10918, i32 0, i32 33
  %10920 = getelementptr inbounds %struct.Reg, %struct.Reg* %10919, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %10920 to i64*
  %10921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10922 = getelementptr inbounds %struct.GPR, %struct.GPR* %10921, i32 0, i32 1
  %10923 = getelementptr inbounds %struct.Reg, %struct.Reg* %10922, i32 0, i32 0
  %RAX.i530 = bitcast %union.anon* %10923 to i64*
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10925 = getelementptr inbounds %struct.GPR, %struct.GPR* %10924, i32 0, i32 5
  %10926 = getelementptr inbounds %struct.Reg, %struct.Reg* %10925, i32 0, i32 0
  %RCX.i531 = bitcast %union.anon* %10926 to i64*
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10928 = getelementptr inbounds %struct.GPR, %struct.GPR* %10927, i32 0, i32 15
  %10929 = getelementptr inbounds %struct.Reg, %struct.Reg* %10928, i32 0, i32 0
  %RBP.i532 = bitcast %union.anon* %10929 to i64*
  %10930 = load i64, i64* %RBP.i532
  %10931 = load i64, i64* %RAX.i530
  %10932 = mul i64 %10931, 4
  %10933 = add i64 %10930, -480
  %10934 = add i64 %10933, %10932
  %10935 = load i64, i64* %PC.i529
  %10936 = add i64 %10935, 7
  store i64 %10936, i64* %PC.i529
  %10937 = inttoptr i64 %10934 to i32*
  %10938 = load i32, i32* %10937
  %10939 = zext i32 %10938 to i64
  store i64 %10939, i64* %RCX.i531, align 8
  store %struct.Memory* %loadMem_45fbc8, %struct.Memory** %MEMORY
  %loadMem_45fbcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10941 = getelementptr inbounds %struct.GPR, %struct.GPR* %10940, i32 0, i32 33
  %10942 = getelementptr inbounds %struct.Reg, %struct.Reg* %10941, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %10942 to i64*
  %10943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10944 = getelementptr inbounds %struct.GPR, %struct.GPR* %10943, i32 0, i32 1
  %10945 = getelementptr inbounds %struct.Reg, %struct.Reg* %10944, i32 0, i32 0
  %RAX.i527 = bitcast %union.anon* %10945 to i64*
  %10946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10947 = getelementptr inbounds %struct.GPR, %struct.GPR* %10946, i32 0, i32 15
  %10948 = getelementptr inbounds %struct.Reg, %struct.Reg* %10947, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %10948 to i64*
  %10949 = load i64, i64* %RBP.i528
  %10950 = sub i64 %10949, 16
  %10951 = load i64, i64* %PC.i526
  %10952 = add i64 %10951, 4
  store i64 %10952, i64* %PC.i526
  %10953 = inttoptr i64 %10950 to i32*
  %10954 = load i32, i32* %10953
  %10955 = sext i32 %10954 to i64
  store i64 %10955, i64* %RAX.i527, align 8
  store %struct.Memory* %loadMem_45fbcf, %struct.Memory** %MEMORY
  %loadMem_45fbd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10957 = getelementptr inbounds %struct.GPR, %struct.GPR* %10956, i32 0, i32 33
  %10958 = getelementptr inbounds %struct.Reg, %struct.Reg* %10957, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %10958 to i64*
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10960 = getelementptr inbounds %struct.GPR, %struct.GPR* %10959, i32 0, i32 1
  %10961 = getelementptr inbounds %struct.Reg, %struct.Reg* %10960, i32 0, i32 0
  %RAX.i523 = bitcast %union.anon* %10961 to i64*
  %10962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10963 = getelementptr inbounds %struct.GPR, %struct.GPR* %10962, i32 0, i32 5
  %10964 = getelementptr inbounds %struct.Reg, %struct.Reg* %10963, i32 0, i32 0
  %RCX.i524 = bitcast %union.anon* %10964 to i64*
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 15
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %RBP.i525 = bitcast %union.anon* %10967 to i64*
  %10968 = load i64, i64* %RCX.i524
  %10969 = load i64, i64* %RBP.i525
  %10970 = load i64, i64* %RAX.i523
  %10971 = mul i64 %10970, 4
  %10972 = add i64 %10969, -352
  %10973 = add i64 %10972, %10971
  %10974 = load i64, i64* %PC.i522
  %10975 = add i64 %10974, 7
  store i64 %10975, i64* %PC.i522
  %10976 = trunc i64 %10968 to i32
  %10977 = inttoptr i64 %10973 to i32*
  %10978 = load i32, i32* %10977
  %10979 = sub i32 %10976, %10978
  %10980 = zext i32 %10979 to i64
  store i64 %10980, i64* %RCX.i524, align 8
  %10981 = icmp ult i32 %10976, %10978
  %10982 = zext i1 %10981 to i8
  %10983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10982, i8* %10983, align 1
  %10984 = and i32 %10979, 255
  %10985 = call i32 @llvm.ctpop.i32(i32 %10984)
  %10986 = trunc i32 %10985 to i8
  %10987 = and i8 %10986, 1
  %10988 = xor i8 %10987, 1
  %10989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10988, i8* %10989, align 1
  %10990 = xor i32 %10978, %10976
  %10991 = xor i32 %10990, %10979
  %10992 = lshr i32 %10991, 4
  %10993 = trunc i32 %10992 to i8
  %10994 = and i8 %10993, 1
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10994, i8* %10995, align 1
  %10996 = icmp eq i32 %10979, 0
  %10997 = zext i1 %10996 to i8
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10997, i8* %10998, align 1
  %10999 = lshr i32 %10979, 31
  %11000 = trunc i32 %10999 to i8
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11000, i8* %11001, align 1
  %11002 = lshr i32 %10976, 31
  %11003 = lshr i32 %10978, 31
  %11004 = xor i32 %11003, %11002
  %11005 = xor i32 %10999, %11002
  %11006 = add i32 %11005, %11004
  %11007 = icmp eq i32 %11006, 2
  %11008 = zext i1 %11007 to i8
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11008, i8* %11009, align 1
  store %struct.Memory* %loadMem_45fbd3, %struct.Memory** %MEMORY
  %loadMem_45fbda = load %struct.Memory*, %struct.Memory** %MEMORY
  %11010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11011 = getelementptr inbounds %struct.GPR, %struct.GPR* %11010, i32 0, i32 33
  %11012 = getelementptr inbounds %struct.Reg, %struct.Reg* %11011, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %11012 to i64*
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11014 = getelementptr inbounds %struct.GPR, %struct.GPR* %11013, i32 0, i32 1
  %11015 = getelementptr inbounds %struct.Reg, %struct.Reg* %11014, i32 0, i32 0
  %RAX.i520 = bitcast %union.anon* %11015 to i64*
  %11016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11017 = getelementptr inbounds %struct.GPR, %struct.GPR* %11016, i32 0, i32 15
  %11018 = getelementptr inbounds %struct.Reg, %struct.Reg* %11017, i32 0, i32 0
  %RBP.i521 = bitcast %union.anon* %11018 to i64*
  %11019 = load i64, i64* %RBP.i521
  %11020 = sub i64 %11019, 16
  %11021 = load i64, i64* %PC.i519
  %11022 = add i64 %11021, 4
  store i64 %11022, i64* %PC.i519
  %11023 = inttoptr i64 %11020 to i32*
  %11024 = load i32, i32* %11023
  %11025 = sext i32 %11024 to i64
  store i64 %11025, i64* %RAX.i520, align 8
  store %struct.Memory* %loadMem_45fbda, %struct.Memory** %MEMORY
  %loadMem_45fbde = load %struct.Memory*, %struct.Memory** %MEMORY
  %11026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11027 = getelementptr inbounds %struct.GPR, %struct.GPR* %11026, i32 0, i32 33
  %11028 = getelementptr inbounds %struct.Reg, %struct.Reg* %11027, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %11028 to i64*
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11030 = getelementptr inbounds %struct.GPR, %struct.GPR* %11029, i32 0, i32 5
  %11031 = getelementptr inbounds %struct.Reg, %struct.Reg* %11030, i32 0, i32 0
  %ECX.i516 = bitcast %union.anon* %11031 to i32*
  %11032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11033 = getelementptr inbounds %struct.GPR, %struct.GPR* %11032, i32 0, i32 1
  %11034 = getelementptr inbounds %struct.Reg, %struct.Reg* %11033, i32 0, i32 0
  %RAX.i517 = bitcast %union.anon* %11034 to i64*
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11036 = getelementptr inbounds %struct.GPR, %struct.GPR* %11035, i32 0, i32 15
  %11037 = getelementptr inbounds %struct.Reg, %struct.Reg* %11036, i32 0, i32 0
  %RBP.i518 = bitcast %union.anon* %11037 to i64*
  %11038 = load i64, i64* %RBP.i518
  %11039 = load i64, i64* %RAX.i517
  %11040 = mul i64 %11039, 4
  %11041 = add i64 %11038, -608
  %11042 = add i64 %11041, %11040
  %11043 = load i32, i32* %ECX.i516
  %11044 = zext i32 %11043 to i64
  %11045 = load i64, i64* %PC.i515
  %11046 = add i64 %11045, 7
  store i64 %11046, i64* %PC.i515
  %11047 = inttoptr i64 %11042 to i32*
  store i32 %11043, i32* %11047
  store %struct.Memory* %loadMem_45fbde, %struct.Memory** %MEMORY
  %loadMem_45fbe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11049 = getelementptr inbounds %struct.GPR, %struct.GPR* %11048, i32 0, i32 33
  %11050 = getelementptr inbounds %struct.Reg, %struct.Reg* %11049, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %11050 to i64*
  %11051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11052 = getelementptr inbounds %struct.GPR, %struct.GPR* %11051, i32 0, i32 1
  %11053 = getelementptr inbounds %struct.Reg, %struct.Reg* %11052, i32 0, i32 0
  %RAX.i513 = bitcast %union.anon* %11053 to i64*
  %11054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11055 = getelementptr inbounds %struct.GPR, %struct.GPR* %11054, i32 0, i32 15
  %11056 = getelementptr inbounds %struct.Reg, %struct.Reg* %11055, i32 0, i32 0
  %RBP.i514 = bitcast %union.anon* %11056 to i64*
  %11057 = load i64, i64* %RBP.i514
  %11058 = sub i64 %11057, 16
  %11059 = load i64, i64* %PC.i512
  %11060 = add i64 %11059, 4
  store i64 %11060, i64* %PC.i512
  %11061 = inttoptr i64 %11058 to i32*
  %11062 = load i32, i32* %11061
  %11063 = sext i32 %11062 to i64
  store i64 %11063, i64* %RAX.i513, align 8
  store %struct.Memory* %loadMem_45fbe5, %struct.Memory** %MEMORY
  %loadMem_45fbe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11065 = getelementptr inbounds %struct.GPR, %struct.GPR* %11064, i32 0, i32 33
  %11066 = getelementptr inbounds %struct.Reg, %struct.Reg* %11065, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %11066 to i64*
  %11067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11068 = getelementptr inbounds %struct.GPR, %struct.GPR* %11067, i32 0, i32 1
  %11069 = getelementptr inbounds %struct.Reg, %struct.Reg* %11068, i32 0, i32 0
  %RAX.i509 = bitcast %union.anon* %11069 to i64*
  %11070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11071 = getelementptr inbounds %struct.GPR, %struct.GPR* %11070, i32 0, i32 5
  %11072 = getelementptr inbounds %struct.Reg, %struct.Reg* %11071, i32 0, i32 0
  %RCX.i510 = bitcast %union.anon* %11072 to i64*
  %11073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11074 = getelementptr inbounds %struct.GPR, %struct.GPR* %11073, i32 0, i32 15
  %11075 = getelementptr inbounds %struct.Reg, %struct.Reg* %11074, i32 0, i32 0
  %RBP.i511 = bitcast %union.anon* %11075 to i64*
  %11076 = load i64, i64* %RBP.i511
  %11077 = load i64, i64* %RAX.i509
  %11078 = mul i64 %11077, 4
  %11079 = add i64 %11076, -448
  %11080 = add i64 %11079, %11078
  %11081 = load i64, i64* %PC.i508
  %11082 = add i64 %11081, 7
  store i64 %11082, i64* %PC.i508
  %11083 = inttoptr i64 %11080 to i32*
  %11084 = load i32, i32* %11083
  %11085 = zext i32 %11084 to i64
  store i64 %11085, i64* %RCX.i510, align 8
  store %struct.Memory* %loadMem_45fbe9, %struct.Memory** %MEMORY
  %loadMem_45fbf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11087 = getelementptr inbounds %struct.GPR, %struct.GPR* %11086, i32 0, i32 33
  %11088 = getelementptr inbounds %struct.Reg, %struct.Reg* %11087, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %11088 to i64*
  %11089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11090 = getelementptr inbounds %struct.GPR, %struct.GPR* %11089, i32 0, i32 1
  %11091 = getelementptr inbounds %struct.Reg, %struct.Reg* %11090, i32 0, i32 0
  %RAX.i506 = bitcast %union.anon* %11091 to i64*
  %11092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11093 = getelementptr inbounds %struct.GPR, %struct.GPR* %11092, i32 0, i32 15
  %11094 = getelementptr inbounds %struct.Reg, %struct.Reg* %11093, i32 0, i32 0
  %RBP.i507 = bitcast %union.anon* %11094 to i64*
  %11095 = load i64, i64* %RBP.i507
  %11096 = sub i64 %11095, 16
  %11097 = load i64, i64* %PC.i505
  %11098 = add i64 %11097, 4
  store i64 %11098, i64* %PC.i505
  %11099 = inttoptr i64 %11096 to i32*
  %11100 = load i32, i32* %11099
  %11101 = sext i32 %11100 to i64
  store i64 %11101, i64* %RAX.i506, align 8
  store %struct.Memory* %loadMem_45fbf0, %struct.Memory** %MEMORY
  %loadMem_45fbf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11103 = getelementptr inbounds %struct.GPR, %struct.GPR* %11102, i32 0, i32 33
  %11104 = getelementptr inbounds %struct.Reg, %struct.Reg* %11103, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %11104 to i64*
  %11105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11106 = getelementptr inbounds %struct.GPR, %struct.GPR* %11105, i32 0, i32 1
  %11107 = getelementptr inbounds %struct.Reg, %struct.Reg* %11106, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %11107 to i64*
  %11108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11109 = getelementptr inbounds %struct.GPR, %struct.GPR* %11108, i32 0, i32 5
  %11110 = getelementptr inbounds %struct.Reg, %struct.Reg* %11109, i32 0, i32 0
  %RCX.i503 = bitcast %union.anon* %11110 to i64*
  %11111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11112 = getelementptr inbounds %struct.GPR, %struct.GPR* %11111, i32 0, i32 15
  %11113 = getelementptr inbounds %struct.Reg, %struct.Reg* %11112, i32 0, i32 0
  %RBP.i504 = bitcast %union.anon* %11113 to i64*
  %11114 = load i64, i64* %RCX.i503
  %11115 = load i64, i64* %RBP.i504
  %11116 = load i64, i64* %RAX.i502
  %11117 = mul i64 %11116, 4
  %11118 = add i64 %11115, -320
  %11119 = add i64 %11118, %11117
  %11120 = load i64, i64* %PC.i501
  %11121 = add i64 %11120, 7
  store i64 %11121, i64* %PC.i501
  %11122 = trunc i64 %11114 to i32
  %11123 = inttoptr i64 %11119 to i32*
  %11124 = load i32, i32* %11123
  %11125 = sub i32 %11122, %11124
  %11126 = zext i32 %11125 to i64
  store i64 %11126, i64* %RCX.i503, align 8
  %11127 = icmp ult i32 %11122, %11124
  %11128 = zext i1 %11127 to i8
  %11129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11128, i8* %11129, align 1
  %11130 = and i32 %11125, 255
  %11131 = call i32 @llvm.ctpop.i32(i32 %11130)
  %11132 = trunc i32 %11131 to i8
  %11133 = and i8 %11132, 1
  %11134 = xor i8 %11133, 1
  %11135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11134, i8* %11135, align 1
  %11136 = xor i32 %11124, %11122
  %11137 = xor i32 %11136, %11125
  %11138 = lshr i32 %11137, 4
  %11139 = trunc i32 %11138 to i8
  %11140 = and i8 %11139, 1
  %11141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11140, i8* %11141, align 1
  %11142 = icmp eq i32 %11125, 0
  %11143 = zext i1 %11142 to i8
  %11144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11143, i8* %11144, align 1
  %11145 = lshr i32 %11125, 31
  %11146 = trunc i32 %11145 to i8
  %11147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11146, i8* %11147, align 1
  %11148 = lshr i32 %11122, 31
  %11149 = lshr i32 %11124, 31
  %11150 = xor i32 %11149, %11148
  %11151 = xor i32 %11145, %11148
  %11152 = add i32 %11151, %11150
  %11153 = icmp eq i32 %11152, 2
  %11154 = zext i1 %11153 to i8
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11154, i8* %11155, align 1
  store %struct.Memory* %loadMem_45fbf4, %struct.Memory** %MEMORY
  %loadMem_45fbfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11157 = getelementptr inbounds %struct.GPR, %struct.GPR* %11156, i32 0, i32 33
  %11158 = getelementptr inbounds %struct.Reg, %struct.Reg* %11157, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %11158 to i64*
  %11159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11160 = getelementptr inbounds %struct.GPR, %struct.GPR* %11159, i32 0, i32 1
  %11161 = getelementptr inbounds %struct.Reg, %struct.Reg* %11160, i32 0, i32 0
  %RAX.i499 = bitcast %union.anon* %11161 to i64*
  %11162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11163 = getelementptr inbounds %struct.GPR, %struct.GPR* %11162, i32 0, i32 15
  %11164 = getelementptr inbounds %struct.Reg, %struct.Reg* %11163, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %11164 to i64*
  %11165 = load i64, i64* %RBP.i500
  %11166 = sub i64 %11165, 16
  %11167 = load i64, i64* %PC.i498
  %11168 = add i64 %11167, 4
  store i64 %11168, i64* %PC.i498
  %11169 = inttoptr i64 %11166 to i32*
  %11170 = load i32, i32* %11169
  %11171 = sext i32 %11170 to i64
  store i64 %11171, i64* %RAX.i499, align 8
  store %struct.Memory* %loadMem_45fbfb, %struct.Memory** %MEMORY
  %loadMem_45fbff = load %struct.Memory*, %struct.Memory** %MEMORY
  %11172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11173 = getelementptr inbounds %struct.GPR, %struct.GPR* %11172, i32 0, i32 33
  %11174 = getelementptr inbounds %struct.Reg, %struct.Reg* %11173, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %11174 to i64*
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11176 = getelementptr inbounds %struct.GPR, %struct.GPR* %11175, i32 0, i32 5
  %11177 = getelementptr inbounds %struct.Reg, %struct.Reg* %11176, i32 0, i32 0
  %ECX.i495 = bitcast %union.anon* %11177 to i32*
  %11178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11179 = getelementptr inbounds %struct.GPR, %struct.GPR* %11178, i32 0, i32 1
  %11180 = getelementptr inbounds %struct.Reg, %struct.Reg* %11179, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %11180 to i64*
  %11181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11182 = getelementptr inbounds %struct.GPR, %struct.GPR* %11181, i32 0, i32 15
  %11183 = getelementptr inbounds %struct.Reg, %struct.Reg* %11182, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %11183 to i64*
  %11184 = load i64, i64* %RBP.i497
  %11185 = load i64, i64* %RAX.i496
  %11186 = mul i64 %11185, 4
  %11187 = add i64 %11184, -576
  %11188 = add i64 %11187, %11186
  %11189 = load i32, i32* %ECX.i495
  %11190 = zext i32 %11189 to i64
  %11191 = load i64, i64* %PC.i494
  %11192 = add i64 %11191, 7
  store i64 %11192, i64* %PC.i494
  %11193 = inttoptr i64 %11188 to i32*
  store i32 %11189, i32* %11193
  store %struct.Memory* %loadMem_45fbff, %struct.Memory** %MEMORY
  %loadMem_45fc06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11195 = getelementptr inbounds %struct.GPR, %struct.GPR* %11194, i32 0, i32 33
  %11196 = getelementptr inbounds %struct.Reg, %struct.Reg* %11195, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %11196 to i64*
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11198 = getelementptr inbounds %struct.GPR, %struct.GPR* %11197, i32 0, i32 1
  %11199 = getelementptr inbounds %struct.Reg, %struct.Reg* %11198, i32 0, i32 0
  %RAX.i492 = bitcast %union.anon* %11199 to i64*
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11201 = getelementptr inbounds %struct.GPR, %struct.GPR* %11200, i32 0, i32 15
  %11202 = getelementptr inbounds %struct.Reg, %struct.Reg* %11201, i32 0, i32 0
  %RBP.i493 = bitcast %union.anon* %11202 to i64*
  %11203 = load i64, i64* %RBP.i493
  %11204 = sub i64 %11203, 16
  %11205 = load i64, i64* %PC.i491
  %11206 = add i64 %11205, 4
  store i64 %11206, i64* %PC.i491
  %11207 = inttoptr i64 %11204 to i32*
  %11208 = load i32, i32* %11207
  %11209 = sext i32 %11208 to i64
  store i64 %11209, i64* %RAX.i492, align 8
  store %struct.Memory* %loadMem_45fc06, %struct.Memory** %MEMORY
  %loadMem_45fc0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11211 = getelementptr inbounds %struct.GPR, %struct.GPR* %11210, i32 0, i32 33
  %11212 = getelementptr inbounds %struct.Reg, %struct.Reg* %11211, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %11212 to i64*
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11214 = getelementptr inbounds %struct.GPR, %struct.GPR* %11213, i32 0, i32 1
  %11215 = getelementptr inbounds %struct.Reg, %struct.Reg* %11214, i32 0, i32 0
  %RAX.i488 = bitcast %union.anon* %11215 to i64*
  %11216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11217 = getelementptr inbounds %struct.GPR, %struct.GPR* %11216, i32 0, i32 5
  %11218 = getelementptr inbounds %struct.Reg, %struct.Reg* %11217, i32 0, i32 0
  %RCX.i489 = bitcast %union.anon* %11218 to i64*
  %11219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11220 = getelementptr inbounds %struct.GPR, %struct.GPR* %11219, i32 0, i32 15
  %11221 = getelementptr inbounds %struct.Reg, %struct.Reg* %11220, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %11221 to i64*
  %11222 = load i64, i64* %RBP.i490
  %11223 = load i64, i64* %RAX.i488
  %11224 = mul i64 %11223, 4
  %11225 = add i64 %11222, -800
  %11226 = add i64 %11225, %11224
  %11227 = load i64, i64* %PC.i487
  %11228 = add i64 %11227, 7
  store i64 %11228, i64* %PC.i487
  %11229 = inttoptr i64 %11226 to i32*
  %11230 = load i32, i32* %11229
  %11231 = zext i32 %11230 to i64
  store i64 %11231, i64* %RCX.i489, align 8
  store %struct.Memory* %loadMem_45fc0a, %struct.Memory** %MEMORY
  %loadMem_45fc11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11233 = getelementptr inbounds %struct.GPR, %struct.GPR* %11232, i32 0, i32 33
  %11234 = getelementptr inbounds %struct.Reg, %struct.Reg* %11233, i32 0, i32 0
  %PC.i484 = bitcast %union.anon* %11234 to i64*
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11236 = getelementptr inbounds %struct.GPR, %struct.GPR* %11235, i32 0, i32 1
  %11237 = getelementptr inbounds %struct.Reg, %struct.Reg* %11236, i32 0, i32 0
  %RAX.i485 = bitcast %union.anon* %11237 to i64*
  %11238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11239 = getelementptr inbounds %struct.GPR, %struct.GPR* %11238, i32 0, i32 15
  %11240 = getelementptr inbounds %struct.Reg, %struct.Reg* %11239, i32 0, i32 0
  %RBP.i486 = bitcast %union.anon* %11240 to i64*
  %11241 = load i64, i64* %RBP.i486
  %11242 = sub i64 %11241, 16
  %11243 = load i64, i64* %PC.i484
  %11244 = add i64 %11243, 4
  store i64 %11244, i64* %PC.i484
  %11245 = inttoptr i64 %11242 to i32*
  %11246 = load i32, i32* %11245
  %11247 = sext i32 %11246 to i64
  store i64 %11247, i64* %RAX.i485, align 8
  store %struct.Memory* %loadMem_45fc11, %struct.Memory** %MEMORY
  %loadMem_45fc15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11249 = getelementptr inbounds %struct.GPR, %struct.GPR* %11248, i32 0, i32 33
  %11250 = getelementptr inbounds %struct.Reg, %struct.Reg* %11249, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %11250 to i64*
  %11251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11252 = getelementptr inbounds %struct.GPR, %struct.GPR* %11251, i32 0, i32 1
  %11253 = getelementptr inbounds %struct.Reg, %struct.Reg* %11252, i32 0, i32 0
  %RAX.i481 = bitcast %union.anon* %11253 to i64*
  %11254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11255 = getelementptr inbounds %struct.GPR, %struct.GPR* %11254, i32 0, i32 5
  %11256 = getelementptr inbounds %struct.Reg, %struct.Reg* %11255, i32 0, i32 0
  %RCX.i482 = bitcast %union.anon* %11256 to i64*
  %11257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11258 = getelementptr inbounds %struct.GPR, %struct.GPR* %11257, i32 0, i32 15
  %11259 = getelementptr inbounds %struct.Reg, %struct.Reg* %11258, i32 0, i32 0
  %RBP.i483 = bitcast %union.anon* %11259 to i64*
  %11260 = load i64, i64* %RCX.i482
  %11261 = load i64, i64* %RBP.i483
  %11262 = load i64, i64* %RAX.i481
  %11263 = mul i64 %11262, 4
  %11264 = add i64 %11261, -736
  %11265 = add i64 %11264, %11263
  %11266 = load i64, i64* %PC.i480
  %11267 = add i64 %11266, 7
  store i64 %11267, i64* %PC.i480
  %11268 = trunc i64 %11260 to i32
  %11269 = inttoptr i64 %11265 to i32*
  %11270 = load i32, i32* %11269
  %11271 = add i32 %11270, %11268
  %11272 = zext i32 %11271 to i64
  store i64 %11272, i64* %RCX.i482, align 8
  %11273 = icmp ult i32 %11271, %11268
  %11274 = icmp ult i32 %11271, %11270
  %11275 = or i1 %11273, %11274
  %11276 = zext i1 %11275 to i8
  %11277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11276, i8* %11277, align 1
  %11278 = and i32 %11271, 255
  %11279 = call i32 @llvm.ctpop.i32(i32 %11278)
  %11280 = trunc i32 %11279 to i8
  %11281 = and i8 %11280, 1
  %11282 = xor i8 %11281, 1
  %11283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11282, i8* %11283, align 1
  %11284 = xor i32 %11270, %11268
  %11285 = xor i32 %11284, %11271
  %11286 = lshr i32 %11285, 4
  %11287 = trunc i32 %11286 to i8
  %11288 = and i8 %11287, 1
  %11289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11288, i8* %11289, align 1
  %11290 = icmp eq i32 %11271, 0
  %11291 = zext i1 %11290 to i8
  %11292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11291, i8* %11292, align 1
  %11293 = lshr i32 %11271, 31
  %11294 = trunc i32 %11293 to i8
  %11295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11294, i8* %11295, align 1
  %11296 = lshr i32 %11268, 31
  %11297 = lshr i32 %11270, 31
  %11298 = xor i32 %11293, %11296
  %11299 = xor i32 %11293, %11297
  %11300 = add i32 %11298, %11299
  %11301 = icmp eq i32 %11300, 2
  %11302 = zext i1 %11301 to i8
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11302, i8* %11303, align 1
  store %struct.Memory* %loadMem_45fc15, %struct.Memory** %MEMORY
  %loadMem_45fc1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11305 = getelementptr inbounds %struct.GPR, %struct.GPR* %11304, i32 0, i32 33
  %11306 = getelementptr inbounds %struct.Reg, %struct.Reg* %11305, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %11306 to i64*
  %11307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11308 = getelementptr inbounds %struct.GPR, %struct.GPR* %11307, i32 0, i32 1
  %11309 = getelementptr inbounds %struct.Reg, %struct.Reg* %11308, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %11309 to i64*
  %11310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11311 = getelementptr inbounds %struct.GPR, %struct.GPR* %11310, i32 0, i32 15
  %11312 = getelementptr inbounds %struct.Reg, %struct.Reg* %11311, i32 0, i32 0
  %RBP.i479 = bitcast %union.anon* %11312 to i64*
  %11313 = load i64, i64* %RBP.i479
  %11314 = sub i64 %11313, 16
  %11315 = load i64, i64* %PC.i477
  %11316 = add i64 %11315, 4
  store i64 %11316, i64* %PC.i477
  %11317 = inttoptr i64 %11314 to i32*
  %11318 = load i32, i32* %11317
  %11319 = sext i32 %11318 to i64
  store i64 %11319, i64* %RAX.i478, align 8
  store %struct.Memory* %loadMem_45fc1c, %struct.Memory** %MEMORY
  %loadMem_45fc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11321 = getelementptr inbounds %struct.GPR, %struct.GPR* %11320, i32 0, i32 33
  %11322 = getelementptr inbounds %struct.Reg, %struct.Reg* %11321, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %11322 to i64*
  %11323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11324 = getelementptr inbounds %struct.GPR, %struct.GPR* %11323, i32 0, i32 5
  %11325 = getelementptr inbounds %struct.Reg, %struct.Reg* %11324, i32 0, i32 0
  %ECX.i474 = bitcast %union.anon* %11325 to i32*
  %11326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11327 = getelementptr inbounds %struct.GPR, %struct.GPR* %11326, i32 0, i32 1
  %11328 = getelementptr inbounds %struct.Reg, %struct.Reg* %11327, i32 0, i32 0
  %RAX.i475 = bitcast %union.anon* %11328 to i64*
  %11329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11330 = getelementptr inbounds %struct.GPR, %struct.GPR* %11329, i32 0, i32 15
  %11331 = getelementptr inbounds %struct.Reg, %struct.Reg* %11330, i32 0, i32 0
  %RBP.i476 = bitcast %union.anon* %11331 to i64*
  %11332 = load i64, i64* %RBP.i476
  %11333 = load i64, i64* %RAX.i475
  %11334 = mul i64 %11333, 4
  %11335 = add i64 %11332, -288
  %11336 = add i64 %11335, %11334
  %11337 = load i32, i32* %ECX.i474
  %11338 = zext i32 %11337 to i64
  %11339 = load i64, i64* %PC.i473
  %11340 = add i64 %11339, 7
  store i64 %11340, i64* %PC.i473
  %11341 = inttoptr i64 %11336 to i32*
  store i32 %11337, i32* %11341
  store %struct.Memory* %loadMem_45fc20, %struct.Memory** %MEMORY
  %loadMem_45fc27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11343 = getelementptr inbounds %struct.GPR, %struct.GPR* %11342, i32 0, i32 33
  %11344 = getelementptr inbounds %struct.Reg, %struct.Reg* %11343, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %11344 to i64*
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11346 = getelementptr inbounds %struct.GPR, %struct.GPR* %11345, i32 0, i32 1
  %11347 = getelementptr inbounds %struct.Reg, %struct.Reg* %11346, i32 0, i32 0
  %RAX.i471 = bitcast %union.anon* %11347 to i64*
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11349 = getelementptr inbounds %struct.GPR, %struct.GPR* %11348, i32 0, i32 15
  %11350 = getelementptr inbounds %struct.Reg, %struct.Reg* %11349, i32 0, i32 0
  %RBP.i472 = bitcast %union.anon* %11350 to i64*
  %11351 = load i64, i64* %RBP.i472
  %11352 = sub i64 %11351, 16
  %11353 = load i64, i64* %PC.i470
  %11354 = add i64 %11353, 4
  store i64 %11354, i64* %PC.i470
  %11355 = inttoptr i64 %11352 to i32*
  %11356 = load i32, i32* %11355
  %11357 = sext i32 %11356 to i64
  store i64 %11357, i64* %RAX.i471, align 8
  store %struct.Memory* %loadMem_45fc27, %struct.Memory** %MEMORY
  %loadMem_45fc2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11359 = getelementptr inbounds %struct.GPR, %struct.GPR* %11358, i32 0, i32 33
  %11360 = getelementptr inbounds %struct.Reg, %struct.Reg* %11359, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %11360 to i64*
  %11361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11362 = getelementptr inbounds %struct.GPR, %struct.GPR* %11361, i32 0, i32 1
  %11363 = getelementptr inbounds %struct.Reg, %struct.Reg* %11362, i32 0, i32 0
  %RAX.i467 = bitcast %union.anon* %11363 to i64*
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11365 = getelementptr inbounds %struct.GPR, %struct.GPR* %11364, i32 0, i32 5
  %11366 = getelementptr inbounds %struct.Reg, %struct.Reg* %11365, i32 0, i32 0
  %RCX.i468 = bitcast %union.anon* %11366 to i64*
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11368 = getelementptr inbounds %struct.GPR, %struct.GPR* %11367, i32 0, i32 15
  %11369 = getelementptr inbounds %struct.Reg, %struct.Reg* %11368, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %11369 to i64*
  %11370 = load i64, i64* %RBP.i469
  %11371 = load i64, i64* %RAX.i467
  %11372 = mul i64 %11371, 4
  %11373 = add i64 %11370, -768
  %11374 = add i64 %11373, %11372
  %11375 = load i64, i64* %PC.i466
  %11376 = add i64 %11375, 7
  store i64 %11376, i64* %PC.i466
  %11377 = inttoptr i64 %11374 to i32*
  %11378 = load i32, i32* %11377
  %11379 = zext i32 %11378 to i64
  store i64 %11379, i64* %RCX.i468, align 8
  store %struct.Memory* %loadMem_45fc2b, %struct.Memory** %MEMORY
  %loadMem_45fc32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11381 = getelementptr inbounds %struct.GPR, %struct.GPR* %11380, i32 0, i32 33
  %11382 = getelementptr inbounds %struct.Reg, %struct.Reg* %11381, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %11382 to i64*
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11384 = getelementptr inbounds %struct.GPR, %struct.GPR* %11383, i32 0, i32 1
  %11385 = getelementptr inbounds %struct.Reg, %struct.Reg* %11384, i32 0, i32 0
  %RAX.i464 = bitcast %union.anon* %11385 to i64*
  %11386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11387 = getelementptr inbounds %struct.GPR, %struct.GPR* %11386, i32 0, i32 15
  %11388 = getelementptr inbounds %struct.Reg, %struct.Reg* %11387, i32 0, i32 0
  %RBP.i465 = bitcast %union.anon* %11388 to i64*
  %11389 = load i64, i64* %RBP.i465
  %11390 = sub i64 %11389, 16
  %11391 = load i64, i64* %PC.i463
  %11392 = add i64 %11391, 4
  store i64 %11392, i64* %PC.i463
  %11393 = inttoptr i64 %11390 to i32*
  %11394 = load i32, i32* %11393
  %11395 = sext i32 %11394 to i64
  store i64 %11395, i64* %RAX.i464, align 8
  store %struct.Memory* %loadMem_45fc32, %struct.Memory** %MEMORY
  %loadMem_45fc36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11397 = getelementptr inbounds %struct.GPR, %struct.GPR* %11396, i32 0, i32 33
  %11398 = getelementptr inbounds %struct.Reg, %struct.Reg* %11397, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %11398 to i64*
  %11399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11400 = getelementptr inbounds %struct.GPR, %struct.GPR* %11399, i32 0, i32 1
  %11401 = getelementptr inbounds %struct.Reg, %struct.Reg* %11400, i32 0, i32 0
  %RAX.i460 = bitcast %union.anon* %11401 to i64*
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11403 = getelementptr inbounds %struct.GPR, %struct.GPR* %11402, i32 0, i32 5
  %11404 = getelementptr inbounds %struct.Reg, %struct.Reg* %11403, i32 0, i32 0
  %RCX.i461 = bitcast %union.anon* %11404 to i64*
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11406 = getelementptr inbounds %struct.GPR, %struct.GPR* %11405, i32 0, i32 15
  %11407 = getelementptr inbounds %struct.Reg, %struct.Reg* %11406, i32 0, i32 0
  %RBP.i462 = bitcast %union.anon* %11407 to i64*
  %11408 = load i64, i64* %RCX.i461
  %11409 = load i64, i64* %RBP.i462
  %11410 = load i64, i64* %RAX.i460
  %11411 = mul i64 %11410, 4
  %11412 = add i64 %11409, -704
  %11413 = add i64 %11412, %11411
  %11414 = load i64, i64* %PC.i459
  %11415 = add i64 %11414, 7
  store i64 %11415, i64* %PC.i459
  %11416 = trunc i64 %11408 to i32
  %11417 = inttoptr i64 %11413 to i32*
  %11418 = load i32, i32* %11417
  %11419 = add i32 %11418, %11416
  %11420 = zext i32 %11419 to i64
  store i64 %11420, i64* %RCX.i461, align 8
  %11421 = icmp ult i32 %11419, %11416
  %11422 = icmp ult i32 %11419, %11418
  %11423 = or i1 %11421, %11422
  %11424 = zext i1 %11423 to i8
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11424, i8* %11425, align 1
  %11426 = and i32 %11419, 255
  %11427 = call i32 @llvm.ctpop.i32(i32 %11426)
  %11428 = trunc i32 %11427 to i8
  %11429 = and i8 %11428, 1
  %11430 = xor i8 %11429, 1
  %11431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11430, i8* %11431, align 1
  %11432 = xor i32 %11418, %11416
  %11433 = xor i32 %11432, %11419
  %11434 = lshr i32 %11433, 4
  %11435 = trunc i32 %11434 to i8
  %11436 = and i8 %11435, 1
  %11437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11436, i8* %11437, align 1
  %11438 = icmp eq i32 %11419, 0
  %11439 = zext i1 %11438 to i8
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11439, i8* %11440, align 1
  %11441 = lshr i32 %11419, 31
  %11442 = trunc i32 %11441 to i8
  %11443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11442, i8* %11443, align 1
  %11444 = lshr i32 %11416, 31
  %11445 = lshr i32 %11418, 31
  %11446 = xor i32 %11441, %11444
  %11447 = xor i32 %11441, %11445
  %11448 = add i32 %11446, %11447
  %11449 = icmp eq i32 %11448, 2
  %11450 = zext i1 %11449 to i8
  %11451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11450, i8* %11451, align 1
  store %struct.Memory* %loadMem_45fc36, %struct.Memory** %MEMORY
  %loadMem_45fc3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11453 = getelementptr inbounds %struct.GPR, %struct.GPR* %11452, i32 0, i32 33
  %11454 = getelementptr inbounds %struct.Reg, %struct.Reg* %11453, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %11454 to i64*
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11456 = getelementptr inbounds %struct.GPR, %struct.GPR* %11455, i32 0, i32 1
  %11457 = getelementptr inbounds %struct.Reg, %struct.Reg* %11456, i32 0, i32 0
  %RAX.i457 = bitcast %union.anon* %11457 to i64*
  %11458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11459 = getelementptr inbounds %struct.GPR, %struct.GPR* %11458, i32 0, i32 15
  %11460 = getelementptr inbounds %struct.Reg, %struct.Reg* %11459, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %11460 to i64*
  %11461 = load i64, i64* %RBP.i458
  %11462 = sub i64 %11461, 16
  %11463 = load i64, i64* %PC.i456
  %11464 = add i64 %11463, 4
  store i64 %11464, i64* %PC.i456
  %11465 = inttoptr i64 %11462 to i32*
  %11466 = load i32, i32* %11465
  %11467 = sext i32 %11466 to i64
  store i64 %11467, i64* %RAX.i457, align 8
  store %struct.Memory* %loadMem_45fc3d, %struct.Memory** %MEMORY
  %loadMem_45fc41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11469 = getelementptr inbounds %struct.GPR, %struct.GPR* %11468, i32 0, i32 33
  %11470 = getelementptr inbounds %struct.Reg, %struct.Reg* %11469, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %11470 to i64*
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11472 = getelementptr inbounds %struct.GPR, %struct.GPR* %11471, i32 0, i32 5
  %11473 = getelementptr inbounds %struct.Reg, %struct.Reg* %11472, i32 0, i32 0
  %ECX.i453 = bitcast %union.anon* %11473 to i32*
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11475 = getelementptr inbounds %struct.GPR, %struct.GPR* %11474, i32 0, i32 1
  %11476 = getelementptr inbounds %struct.Reg, %struct.Reg* %11475, i32 0, i32 0
  %RAX.i454 = bitcast %union.anon* %11476 to i64*
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11478 = getelementptr inbounds %struct.GPR, %struct.GPR* %11477, i32 0, i32 15
  %11479 = getelementptr inbounds %struct.Reg, %struct.Reg* %11478, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %11479 to i64*
  %11480 = load i64, i64* %RBP.i455
  %11481 = load i64, i64* %RAX.i454
  %11482 = mul i64 %11481, 4
  %11483 = add i64 %11480, -256
  %11484 = add i64 %11483, %11482
  %11485 = load i32, i32* %ECX.i453
  %11486 = zext i32 %11485 to i64
  %11487 = load i64, i64* %PC.i452
  %11488 = add i64 %11487, 7
  store i64 %11488, i64* %PC.i452
  %11489 = inttoptr i64 %11484 to i32*
  store i32 %11485, i32* %11489
  store %struct.Memory* %loadMem_45fc41, %struct.Memory** %MEMORY
  %loadMem_45fc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11491 = getelementptr inbounds %struct.GPR, %struct.GPR* %11490, i32 0, i32 33
  %11492 = getelementptr inbounds %struct.Reg, %struct.Reg* %11491, i32 0, i32 0
  %PC.i449 = bitcast %union.anon* %11492 to i64*
  %11493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11494 = getelementptr inbounds %struct.GPR, %struct.GPR* %11493, i32 0, i32 1
  %11495 = getelementptr inbounds %struct.Reg, %struct.Reg* %11494, i32 0, i32 0
  %RAX.i450 = bitcast %union.anon* %11495 to i64*
  %11496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11497 = getelementptr inbounds %struct.GPR, %struct.GPR* %11496, i32 0, i32 15
  %11498 = getelementptr inbounds %struct.Reg, %struct.Reg* %11497, i32 0, i32 0
  %RBP.i451 = bitcast %union.anon* %11498 to i64*
  %11499 = load i64, i64* %RBP.i451
  %11500 = sub i64 %11499, 16
  %11501 = load i64, i64* %PC.i449
  %11502 = add i64 %11501, 4
  store i64 %11502, i64* %PC.i449
  %11503 = inttoptr i64 %11500 to i32*
  %11504 = load i32, i32* %11503
  %11505 = sext i32 %11504 to i64
  store i64 %11505, i64* %RAX.i450, align 8
  store %struct.Memory* %loadMem_45fc48, %struct.Memory** %MEMORY
  %loadMem_45fc4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11507 = getelementptr inbounds %struct.GPR, %struct.GPR* %11506, i32 0, i32 33
  %11508 = getelementptr inbounds %struct.Reg, %struct.Reg* %11507, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %11508 to i64*
  %11509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11510 = getelementptr inbounds %struct.GPR, %struct.GPR* %11509, i32 0, i32 1
  %11511 = getelementptr inbounds %struct.Reg, %struct.Reg* %11510, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %11511 to i64*
  %11512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11513 = getelementptr inbounds %struct.GPR, %struct.GPR* %11512, i32 0, i32 5
  %11514 = getelementptr inbounds %struct.Reg, %struct.Reg* %11513, i32 0, i32 0
  %RCX.i447 = bitcast %union.anon* %11514 to i64*
  %11515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11516 = getelementptr inbounds %struct.GPR, %struct.GPR* %11515, i32 0, i32 15
  %11517 = getelementptr inbounds %struct.Reg, %struct.Reg* %11516, i32 0, i32 0
  %RBP.i448 = bitcast %union.anon* %11517 to i64*
  %11518 = load i64, i64* %RBP.i448
  %11519 = load i64, i64* %RAX.i446
  %11520 = mul i64 %11519, 4
  %11521 = add i64 %11518, -800
  %11522 = add i64 %11521, %11520
  %11523 = load i64, i64* %PC.i445
  %11524 = add i64 %11523, 7
  store i64 %11524, i64* %PC.i445
  %11525 = inttoptr i64 %11522 to i32*
  %11526 = load i32, i32* %11525
  %11527 = zext i32 %11526 to i64
  store i64 %11527, i64* %RCX.i447, align 8
  store %struct.Memory* %loadMem_45fc4c, %struct.Memory** %MEMORY
  %loadMem_45fc53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11529 = getelementptr inbounds %struct.GPR, %struct.GPR* %11528, i32 0, i32 33
  %11530 = getelementptr inbounds %struct.Reg, %struct.Reg* %11529, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %11530 to i64*
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11532 = getelementptr inbounds %struct.GPR, %struct.GPR* %11531, i32 0, i32 1
  %11533 = getelementptr inbounds %struct.Reg, %struct.Reg* %11532, i32 0, i32 0
  %RAX.i443 = bitcast %union.anon* %11533 to i64*
  %11534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11535 = getelementptr inbounds %struct.GPR, %struct.GPR* %11534, i32 0, i32 15
  %11536 = getelementptr inbounds %struct.Reg, %struct.Reg* %11535, i32 0, i32 0
  %RBP.i444 = bitcast %union.anon* %11536 to i64*
  %11537 = load i64, i64* %RBP.i444
  %11538 = sub i64 %11537, 16
  %11539 = load i64, i64* %PC.i442
  %11540 = add i64 %11539, 4
  store i64 %11540, i64* %PC.i442
  %11541 = inttoptr i64 %11538 to i32*
  %11542 = load i32, i32* %11541
  %11543 = sext i32 %11542 to i64
  store i64 %11543, i64* %RAX.i443, align 8
  store %struct.Memory* %loadMem_45fc53, %struct.Memory** %MEMORY
  %loadMem_45fc57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11545 = getelementptr inbounds %struct.GPR, %struct.GPR* %11544, i32 0, i32 33
  %11546 = getelementptr inbounds %struct.Reg, %struct.Reg* %11545, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %11546 to i64*
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11548 = getelementptr inbounds %struct.GPR, %struct.GPR* %11547, i32 0, i32 1
  %11549 = getelementptr inbounds %struct.Reg, %struct.Reg* %11548, i32 0, i32 0
  %RAX.i439 = bitcast %union.anon* %11549 to i64*
  %11550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11551 = getelementptr inbounds %struct.GPR, %struct.GPR* %11550, i32 0, i32 5
  %11552 = getelementptr inbounds %struct.Reg, %struct.Reg* %11551, i32 0, i32 0
  %RCX.i440 = bitcast %union.anon* %11552 to i64*
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11554 = getelementptr inbounds %struct.GPR, %struct.GPR* %11553, i32 0, i32 15
  %11555 = getelementptr inbounds %struct.Reg, %struct.Reg* %11554, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %11555 to i64*
  %11556 = load i64, i64* %RCX.i440
  %11557 = load i64, i64* %RBP.i441
  %11558 = load i64, i64* %RAX.i439
  %11559 = mul i64 %11558, 4
  %11560 = add i64 %11557, -736
  %11561 = add i64 %11560, %11559
  %11562 = load i64, i64* %PC.i438
  %11563 = add i64 %11562, 7
  store i64 %11563, i64* %PC.i438
  %11564 = trunc i64 %11556 to i32
  %11565 = inttoptr i64 %11561 to i32*
  %11566 = load i32, i32* %11565
  %11567 = sub i32 %11564, %11566
  %11568 = zext i32 %11567 to i64
  store i64 %11568, i64* %RCX.i440, align 8
  %11569 = icmp ult i32 %11564, %11566
  %11570 = zext i1 %11569 to i8
  %11571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11570, i8* %11571, align 1
  %11572 = and i32 %11567, 255
  %11573 = call i32 @llvm.ctpop.i32(i32 %11572)
  %11574 = trunc i32 %11573 to i8
  %11575 = and i8 %11574, 1
  %11576 = xor i8 %11575, 1
  %11577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11576, i8* %11577, align 1
  %11578 = xor i32 %11566, %11564
  %11579 = xor i32 %11578, %11567
  %11580 = lshr i32 %11579, 4
  %11581 = trunc i32 %11580 to i8
  %11582 = and i8 %11581, 1
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11582, i8* %11583, align 1
  %11584 = icmp eq i32 %11567, 0
  %11585 = zext i1 %11584 to i8
  %11586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11585, i8* %11586, align 1
  %11587 = lshr i32 %11567, 31
  %11588 = trunc i32 %11587 to i8
  %11589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11588, i8* %11589, align 1
  %11590 = lshr i32 %11564, 31
  %11591 = lshr i32 %11566, 31
  %11592 = xor i32 %11591, %11590
  %11593 = xor i32 %11587, %11590
  %11594 = add i32 %11593, %11592
  %11595 = icmp eq i32 %11594, 2
  %11596 = zext i1 %11595 to i8
  %11597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11596, i8* %11597, align 1
  store %struct.Memory* %loadMem_45fc57, %struct.Memory** %MEMORY
  %loadMem_45fc5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11599 = getelementptr inbounds %struct.GPR, %struct.GPR* %11598, i32 0, i32 33
  %11600 = getelementptr inbounds %struct.Reg, %struct.Reg* %11599, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %11600 to i64*
  %11601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11602 = getelementptr inbounds %struct.GPR, %struct.GPR* %11601, i32 0, i32 1
  %11603 = getelementptr inbounds %struct.Reg, %struct.Reg* %11602, i32 0, i32 0
  %RAX.i436 = bitcast %union.anon* %11603 to i64*
  %11604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11605 = getelementptr inbounds %struct.GPR, %struct.GPR* %11604, i32 0, i32 15
  %11606 = getelementptr inbounds %struct.Reg, %struct.Reg* %11605, i32 0, i32 0
  %RBP.i437 = bitcast %union.anon* %11606 to i64*
  %11607 = load i64, i64* %RBP.i437
  %11608 = sub i64 %11607, 16
  %11609 = load i64, i64* %PC.i435
  %11610 = add i64 %11609, 4
  store i64 %11610, i64* %PC.i435
  %11611 = inttoptr i64 %11608 to i32*
  %11612 = load i32, i32* %11611
  %11613 = sext i32 %11612 to i64
  store i64 %11613, i64* %RAX.i436, align 8
  store %struct.Memory* %loadMem_45fc5e, %struct.Memory** %MEMORY
  %loadMem_45fc62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11615 = getelementptr inbounds %struct.GPR, %struct.GPR* %11614, i32 0, i32 33
  %11616 = getelementptr inbounds %struct.Reg, %struct.Reg* %11615, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %11616 to i64*
  %11617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11618 = getelementptr inbounds %struct.GPR, %struct.GPR* %11617, i32 0, i32 5
  %11619 = getelementptr inbounds %struct.Reg, %struct.Reg* %11618, i32 0, i32 0
  %ECX.i432 = bitcast %union.anon* %11619 to i32*
  %11620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11621 = getelementptr inbounds %struct.GPR, %struct.GPR* %11620, i32 0, i32 1
  %11622 = getelementptr inbounds %struct.Reg, %struct.Reg* %11621, i32 0, i32 0
  %RAX.i433 = bitcast %union.anon* %11622 to i64*
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11624 = getelementptr inbounds %struct.GPR, %struct.GPR* %11623, i32 0, i32 15
  %11625 = getelementptr inbounds %struct.Reg, %struct.Reg* %11624, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %11625 to i64*
  %11626 = load i64, i64* %RBP.i434
  %11627 = load i64, i64* %RAX.i433
  %11628 = mul i64 %11627, 4
  %11629 = add i64 %11626, -224
  %11630 = add i64 %11629, %11628
  %11631 = load i32, i32* %ECX.i432
  %11632 = zext i32 %11631 to i64
  %11633 = load i64, i64* %PC.i431
  %11634 = add i64 %11633, 7
  store i64 %11634, i64* %PC.i431
  %11635 = inttoptr i64 %11630 to i32*
  store i32 %11631, i32* %11635
  store %struct.Memory* %loadMem_45fc62, %struct.Memory** %MEMORY
  %loadMem_45fc69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11637 = getelementptr inbounds %struct.GPR, %struct.GPR* %11636, i32 0, i32 33
  %11638 = getelementptr inbounds %struct.Reg, %struct.Reg* %11637, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %11638 to i64*
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11640 = getelementptr inbounds %struct.GPR, %struct.GPR* %11639, i32 0, i32 1
  %11641 = getelementptr inbounds %struct.Reg, %struct.Reg* %11640, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %11641 to i64*
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11643 = getelementptr inbounds %struct.GPR, %struct.GPR* %11642, i32 0, i32 15
  %11644 = getelementptr inbounds %struct.Reg, %struct.Reg* %11643, i32 0, i32 0
  %RBP.i430 = bitcast %union.anon* %11644 to i64*
  %11645 = load i64, i64* %RBP.i430
  %11646 = sub i64 %11645, 16
  %11647 = load i64, i64* %PC.i428
  %11648 = add i64 %11647, 4
  store i64 %11648, i64* %PC.i428
  %11649 = inttoptr i64 %11646 to i32*
  %11650 = load i32, i32* %11649
  %11651 = sext i32 %11650 to i64
  store i64 %11651, i64* %RAX.i429, align 8
  store %struct.Memory* %loadMem_45fc69, %struct.Memory** %MEMORY
  %loadMem_45fc6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11653 = getelementptr inbounds %struct.GPR, %struct.GPR* %11652, i32 0, i32 33
  %11654 = getelementptr inbounds %struct.Reg, %struct.Reg* %11653, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %11654 to i64*
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11656 = getelementptr inbounds %struct.GPR, %struct.GPR* %11655, i32 0, i32 1
  %11657 = getelementptr inbounds %struct.Reg, %struct.Reg* %11656, i32 0, i32 0
  %RAX.i425 = bitcast %union.anon* %11657 to i64*
  %11658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11659 = getelementptr inbounds %struct.GPR, %struct.GPR* %11658, i32 0, i32 5
  %11660 = getelementptr inbounds %struct.Reg, %struct.Reg* %11659, i32 0, i32 0
  %RCX.i426 = bitcast %union.anon* %11660 to i64*
  %11661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11662 = getelementptr inbounds %struct.GPR, %struct.GPR* %11661, i32 0, i32 15
  %11663 = getelementptr inbounds %struct.Reg, %struct.Reg* %11662, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %11663 to i64*
  %11664 = load i64, i64* %RBP.i427
  %11665 = load i64, i64* %RAX.i425
  %11666 = mul i64 %11665, 4
  %11667 = add i64 %11664, -768
  %11668 = add i64 %11667, %11666
  %11669 = load i64, i64* %PC.i424
  %11670 = add i64 %11669, 7
  store i64 %11670, i64* %PC.i424
  %11671 = inttoptr i64 %11668 to i32*
  %11672 = load i32, i32* %11671
  %11673 = zext i32 %11672 to i64
  store i64 %11673, i64* %RCX.i426, align 8
  store %struct.Memory* %loadMem_45fc6d, %struct.Memory** %MEMORY
  %loadMem_45fc74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11675 = getelementptr inbounds %struct.GPR, %struct.GPR* %11674, i32 0, i32 33
  %11676 = getelementptr inbounds %struct.Reg, %struct.Reg* %11675, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %11676 to i64*
  %11677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11678 = getelementptr inbounds %struct.GPR, %struct.GPR* %11677, i32 0, i32 1
  %11679 = getelementptr inbounds %struct.Reg, %struct.Reg* %11678, i32 0, i32 0
  %RAX.i422 = bitcast %union.anon* %11679 to i64*
  %11680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11681 = getelementptr inbounds %struct.GPR, %struct.GPR* %11680, i32 0, i32 15
  %11682 = getelementptr inbounds %struct.Reg, %struct.Reg* %11681, i32 0, i32 0
  %RBP.i423 = bitcast %union.anon* %11682 to i64*
  %11683 = load i64, i64* %RBP.i423
  %11684 = sub i64 %11683, 16
  %11685 = load i64, i64* %PC.i421
  %11686 = add i64 %11685, 4
  store i64 %11686, i64* %PC.i421
  %11687 = inttoptr i64 %11684 to i32*
  %11688 = load i32, i32* %11687
  %11689 = sext i32 %11688 to i64
  store i64 %11689, i64* %RAX.i422, align 8
  store %struct.Memory* %loadMem_45fc74, %struct.Memory** %MEMORY
  %loadMem_45fc78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11691 = getelementptr inbounds %struct.GPR, %struct.GPR* %11690, i32 0, i32 33
  %11692 = getelementptr inbounds %struct.Reg, %struct.Reg* %11691, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %11692 to i64*
  %11693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11694 = getelementptr inbounds %struct.GPR, %struct.GPR* %11693, i32 0, i32 1
  %11695 = getelementptr inbounds %struct.Reg, %struct.Reg* %11694, i32 0, i32 0
  %RAX.i418 = bitcast %union.anon* %11695 to i64*
  %11696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11697 = getelementptr inbounds %struct.GPR, %struct.GPR* %11696, i32 0, i32 5
  %11698 = getelementptr inbounds %struct.Reg, %struct.Reg* %11697, i32 0, i32 0
  %RCX.i419 = bitcast %union.anon* %11698 to i64*
  %11699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11700 = getelementptr inbounds %struct.GPR, %struct.GPR* %11699, i32 0, i32 15
  %11701 = getelementptr inbounds %struct.Reg, %struct.Reg* %11700, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %11701 to i64*
  %11702 = load i64, i64* %RCX.i419
  %11703 = load i64, i64* %RBP.i420
  %11704 = load i64, i64* %RAX.i418
  %11705 = mul i64 %11704, 4
  %11706 = add i64 %11703, -704
  %11707 = add i64 %11706, %11705
  %11708 = load i64, i64* %PC.i417
  %11709 = add i64 %11708, 7
  store i64 %11709, i64* %PC.i417
  %11710 = trunc i64 %11702 to i32
  %11711 = inttoptr i64 %11707 to i32*
  %11712 = load i32, i32* %11711
  %11713 = sub i32 %11710, %11712
  %11714 = zext i32 %11713 to i64
  store i64 %11714, i64* %RCX.i419, align 8
  %11715 = icmp ult i32 %11710, %11712
  %11716 = zext i1 %11715 to i8
  %11717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11716, i8* %11717, align 1
  %11718 = and i32 %11713, 255
  %11719 = call i32 @llvm.ctpop.i32(i32 %11718)
  %11720 = trunc i32 %11719 to i8
  %11721 = and i8 %11720, 1
  %11722 = xor i8 %11721, 1
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11722, i8* %11723, align 1
  %11724 = xor i32 %11712, %11710
  %11725 = xor i32 %11724, %11713
  %11726 = lshr i32 %11725, 4
  %11727 = trunc i32 %11726 to i8
  %11728 = and i8 %11727, 1
  %11729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11728, i8* %11729, align 1
  %11730 = icmp eq i32 %11713, 0
  %11731 = zext i1 %11730 to i8
  %11732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11731, i8* %11732, align 1
  %11733 = lshr i32 %11713, 31
  %11734 = trunc i32 %11733 to i8
  %11735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11734, i8* %11735, align 1
  %11736 = lshr i32 %11710, 31
  %11737 = lshr i32 %11712, 31
  %11738 = xor i32 %11737, %11736
  %11739 = xor i32 %11733, %11736
  %11740 = add i32 %11739, %11738
  %11741 = icmp eq i32 %11740, 2
  %11742 = zext i1 %11741 to i8
  %11743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11742, i8* %11743, align 1
  store %struct.Memory* %loadMem_45fc78, %struct.Memory** %MEMORY
  %loadMem_45fc7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11745 = getelementptr inbounds %struct.GPR, %struct.GPR* %11744, i32 0, i32 33
  %11746 = getelementptr inbounds %struct.Reg, %struct.Reg* %11745, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %11746 to i64*
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11748 = getelementptr inbounds %struct.GPR, %struct.GPR* %11747, i32 0, i32 1
  %11749 = getelementptr inbounds %struct.Reg, %struct.Reg* %11748, i32 0, i32 0
  %RAX.i415 = bitcast %union.anon* %11749 to i64*
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11751 = getelementptr inbounds %struct.GPR, %struct.GPR* %11750, i32 0, i32 15
  %11752 = getelementptr inbounds %struct.Reg, %struct.Reg* %11751, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %11752 to i64*
  %11753 = load i64, i64* %RBP.i416
  %11754 = sub i64 %11753, 16
  %11755 = load i64, i64* %PC.i414
  %11756 = add i64 %11755, 4
  store i64 %11756, i64* %PC.i414
  %11757 = inttoptr i64 %11754 to i32*
  %11758 = load i32, i32* %11757
  %11759 = sext i32 %11758 to i64
  store i64 %11759, i64* %RAX.i415, align 8
  store %struct.Memory* %loadMem_45fc7f, %struct.Memory** %MEMORY
  %loadMem_45fc83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11761 = getelementptr inbounds %struct.GPR, %struct.GPR* %11760, i32 0, i32 33
  %11762 = getelementptr inbounds %struct.Reg, %struct.Reg* %11761, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %11762 to i64*
  %11763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11764 = getelementptr inbounds %struct.GPR, %struct.GPR* %11763, i32 0, i32 5
  %11765 = getelementptr inbounds %struct.Reg, %struct.Reg* %11764, i32 0, i32 0
  %ECX.i411 = bitcast %union.anon* %11765 to i32*
  %11766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11767 = getelementptr inbounds %struct.GPR, %struct.GPR* %11766, i32 0, i32 1
  %11768 = getelementptr inbounds %struct.Reg, %struct.Reg* %11767, i32 0, i32 0
  %RAX.i412 = bitcast %union.anon* %11768 to i64*
  %11769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11770 = getelementptr inbounds %struct.GPR, %struct.GPR* %11769, i32 0, i32 15
  %11771 = getelementptr inbounds %struct.Reg, %struct.Reg* %11770, i32 0, i32 0
  %RBP.i413 = bitcast %union.anon* %11771 to i64*
  %11772 = load i64, i64* %RBP.i413
  %11773 = load i64, i64* %RAX.i412
  %11774 = mul i64 %11773, 4
  %11775 = add i64 %11772, -192
  %11776 = add i64 %11775, %11774
  %11777 = load i32, i32* %ECX.i411
  %11778 = zext i32 %11777 to i64
  %11779 = load i64, i64* %PC.i410
  %11780 = add i64 %11779, 7
  store i64 %11780, i64* %PC.i410
  %11781 = inttoptr i64 %11776 to i32*
  store i32 %11777, i32* %11781
  store %struct.Memory* %loadMem_45fc83, %struct.Memory** %MEMORY
  %loadMem_45fc8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11783 = getelementptr inbounds %struct.GPR, %struct.GPR* %11782, i32 0, i32 33
  %11784 = getelementptr inbounds %struct.Reg, %struct.Reg* %11783, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %11784 to i64*
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11786 = getelementptr inbounds %struct.GPR, %struct.GPR* %11785, i32 0, i32 1
  %11787 = getelementptr inbounds %struct.Reg, %struct.Reg* %11786, i32 0, i32 0
  %RAX.i408 = bitcast %union.anon* %11787 to i64*
  %11788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11789 = getelementptr inbounds %struct.GPR, %struct.GPR* %11788, i32 0, i32 15
  %11790 = getelementptr inbounds %struct.Reg, %struct.Reg* %11789, i32 0, i32 0
  %RBP.i409 = bitcast %union.anon* %11790 to i64*
  %11791 = load i64, i64* %RBP.i409
  %11792 = sub i64 %11791, 16
  %11793 = load i64, i64* %PC.i407
  %11794 = add i64 %11793, 4
  store i64 %11794, i64* %PC.i407
  %11795 = inttoptr i64 %11792 to i32*
  %11796 = load i32, i32* %11795
  %11797 = sext i32 %11796 to i64
  store i64 %11797, i64* %RAX.i408, align 8
  store %struct.Memory* %loadMem_45fc8a, %struct.Memory** %MEMORY
  %loadMem_45fc8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11799 = getelementptr inbounds %struct.GPR, %struct.GPR* %11798, i32 0, i32 33
  %11800 = getelementptr inbounds %struct.Reg, %struct.Reg* %11799, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %11800 to i64*
  %11801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11802 = getelementptr inbounds %struct.GPR, %struct.GPR* %11801, i32 0, i32 1
  %11803 = getelementptr inbounds %struct.Reg, %struct.Reg* %11802, i32 0, i32 0
  %RAX.i404 = bitcast %union.anon* %11803 to i64*
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11805 = getelementptr inbounds %struct.GPR, %struct.GPR* %11804, i32 0, i32 5
  %11806 = getelementptr inbounds %struct.Reg, %struct.Reg* %11805, i32 0, i32 0
  %RCX.i405 = bitcast %union.anon* %11806 to i64*
  %11807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11808 = getelementptr inbounds %struct.GPR, %struct.GPR* %11807, i32 0, i32 15
  %11809 = getelementptr inbounds %struct.Reg, %struct.Reg* %11808, i32 0, i32 0
  %RBP.i406 = bitcast %union.anon* %11809 to i64*
  %11810 = load i64, i64* %RBP.i406
  %11811 = load i64, i64* %RAX.i404
  %11812 = mul i64 %11811, 4
  %11813 = add i64 %11810, -672
  %11814 = add i64 %11813, %11812
  %11815 = load i64, i64* %PC.i403
  %11816 = add i64 %11815, 7
  store i64 %11816, i64* %PC.i403
  %11817 = inttoptr i64 %11814 to i32*
  %11818 = load i32, i32* %11817
  %11819 = zext i32 %11818 to i64
  store i64 %11819, i64* %RCX.i405, align 8
  store %struct.Memory* %loadMem_45fc8e, %struct.Memory** %MEMORY
  %loadMem_45fc95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11821 = getelementptr inbounds %struct.GPR, %struct.GPR* %11820, i32 0, i32 33
  %11822 = getelementptr inbounds %struct.Reg, %struct.Reg* %11821, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %11822 to i64*
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11824 = getelementptr inbounds %struct.GPR, %struct.GPR* %11823, i32 0, i32 1
  %11825 = getelementptr inbounds %struct.Reg, %struct.Reg* %11824, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %11825 to i64*
  %11826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11827 = getelementptr inbounds %struct.GPR, %struct.GPR* %11826, i32 0, i32 15
  %11828 = getelementptr inbounds %struct.Reg, %struct.Reg* %11827, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %11828 to i64*
  %11829 = load i64, i64* %RBP.i402
  %11830 = sub i64 %11829, 16
  %11831 = load i64, i64* %PC.i400
  %11832 = add i64 %11831, 4
  store i64 %11832, i64* %PC.i400
  %11833 = inttoptr i64 %11830 to i32*
  %11834 = load i32, i32* %11833
  %11835 = sext i32 %11834 to i64
  store i64 %11835, i64* %RAX.i401, align 8
  store %struct.Memory* %loadMem_45fc95, %struct.Memory** %MEMORY
  %loadMem_45fc99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11837 = getelementptr inbounds %struct.GPR, %struct.GPR* %11836, i32 0, i32 33
  %11838 = getelementptr inbounds %struct.Reg, %struct.Reg* %11837, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %11838 to i64*
  %11839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11840 = getelementptr inbounds %struct.GPR, %struct.GPR* %11839, i32 0, i32 1
  %11841 = getelementptr inbounds %struct.Reg, %struct.Reg* %11840, i32 0, i32 0
  %RAX.i397 = bitcast %union.anon* %11841 to i64*
  %11842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11843 = getelementptr inbounds %struct.GPR, %struct.GPR* %11842, i32 0, i32 5
  %11844 = getelementptr inbounds %struct.Reg, %struct.Reg* %11843, i32 0, i32 0
  %RCX.i398 = bitcast %union.anon* %11844 to i64*
  %11845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11846 = getelementptr inbounds %struct.GPR, %struct.GPR* %11845, i32 0, i32 15
  %11847 = getelementptr inbounds %struct.Reg, %struct.Reg* %11846, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %11847 to i64*
  %11848 = load i64, i64* %RCX.i398
  %11849 = load i64, i64* %RBP.i399
  %11850 = load i64, i64* %RAX.i397
  %11851 = mul i64 %11850, 4
  %11852 = add i64 %11849, -608
  %11853 = add i64 %11852, %11851
  %11854 = load i64, i64* %PC.i396
  %11855 = add i64 %11854, 7
  store i64 %11855, i64* %PC.i396
  %11856 = trunc i64 %11848 to i32
  %11857 = inttoptr i64 %11853 to i32*
  %11858 = load i32, i32* %11857
  %11859 = add i32 %11858, %11856
  %11860 = zext i32 %11859 to i64
  store i64 %11860, i64* %RCX.i398, align 8
  %11861 = icmp ult i32 %11859, %11856
  %11862 = icmp ult i32 %11859, %11858
  %11863 = or i1 %11861, %11862
  %11864 = zext i1 %11863 to i8
  %11865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11864, i8* %11865, align 1
  %11866 = and i32 %11859, 255
  %11867 = call i32 @llvm.ctpop.i32(i32 %11866)
  %11868 = trunc i32 %11867 to i8
  %11869 = and i8 %11868, 1
  %11870 = xor i8 %11869, 1
  %11871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11870, i8* %11871, align 1
  %11872 = xor i32 %11858, %11856
  %11873 = xor i32 %11872, %11859
  %11874 = lshr i32 %11873, 4
  %11875 = trunc i32 %11874 to i8
  %11876 = and i8 %11875, 1
  %11877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11876, i8* %11877, align 1
  %11878 = icmp eq i32 %11859, 0
  %11879 = zext i1 %11878 to i8
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11879, i8* %11880, align 1
  %11881 = lshr i32 %11859, 31
  %11882 = trunc i32 %11881 to i8
  %11883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11882, i8* %11883, align 1
  %11884 = lshr i32 %11856, 31
  %11885 = lshr i32 %11858, 31
  %11886 = xor i32 %11881, %11884
  %11887 = xor i32 %11881, %11885
  %11888 = add i32 %11886, %11887
  %11889 = icmp eq i32 %11888, 2
  %11890 = zext i1 %11889 to i8
  %11891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11890, i8* %11891, align 1
  store %struct.Memory* %loadMem_45fc99, %struct.Memory** %MEMORY
  %loadMem_45fca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11893 = getelementptr inbounds %struct.GPR, %struct.GPR* %11892, i32 0, i32 33
  %11894 = getelementptr inbounds %struct.Reg, %struct.Reg* %11893, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %11894 to i64*
  %11895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11896 = getelementptr inbounds %struct.GPR, %struct.GPR* %11895, i32 0, i32 1
  %11897 = getelementptr inbounds %struct.Reg, %struct.Reg* %11896, i32 0, i32 0
  %RAX.i394 = bitcast %union.anon* %11897 to i64*
  %11898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11899 = getelementptr inbounds %struct.GPR, %struct.GPR* %11898, i32 0, i32 15
  %11900 = getelementptr inbounds %struct.Reg, %struct.Reg* %11899, i32 0, i32 0
  %RBP.i395 = bitcast %union.anon* %11900 to i64*
  %11901 = load i64, i64* %RBP.i395
  %11902 = sub i64 %11901, 16
  %11903 = load i64, i64* %PC.i393
  %11904 = add i64 %11903, 4
  store i64 %11904, i64* %PC.i393
  %11905 = inttoptr i64 %11902 to i32*
  %11906 = load i32, i32* %11905
  %11907 = sext i32 %11906 to i64
  store i64 %11907, i64* %RAX.i394, align 8
  store %struct.Memory* %loadMem_45fca0, %struct.Memory** %MEMORY
  %loadMem_45fca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11909 = getelementptr inbounds %struct.GPR, %struct.GPR* %11908, i32 0, i32 33
  %11910 = getelementptr inbounds %struct.Reg, %struct.Reg* %11909, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %11910 to i64*
  %11911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11912 = getelementptr inbounds %struct.GPR, %struct.GPR* %11911, i32 0, i32 5
  %11913 = getelementptr inbounds %struct.Reg, %struct.Reg* %11912, i32 0, i32 0
  %ECX.i390 = bitcast %union.anon* %11913 to i32*
  %11914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11915 = getelementptr inbounds %struct.GPR, %struct.GPR* %11914, i32 0, i32 1
  %11916 = getelementptr inbounds %struct.Reg, %struct.Reg* %11915, i32 0, i32 0
  %RAX.i391 = bitcast %union.anon* %11916 to i64*
  %11917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11918 = getelementptr inbounds %struct.GPR, %struct.GPR* %11917, i32 0, i32 15
  %11919 = getelementptr inbounds %struct.Reg, %struct.Reg* %11918, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %11919 to i64*
  %11920 = load i64, i64* %RBP.i392
  %11921 = load i64, i64* %RAX.i391
  %11922 = mul i64 %11921, 4
  %11923 = add i64 %11920, -160
  %11924 = add i64 %11923, %11922
  %11925 = load i32, i32* %ECX.i390
  %11926 = zext i32 %11925 to i64
  %11927 = load i64, i64* %PC.i389
  %11928 = add i64 %11927, 7
  store i64 %11928, i64* %PC.i389
  %11929 = inttoptr i64 %11924 to i32*
  store i32 %11925, i32* %11929
  store %struct.Memory* %loadMem_45fca4, %struct.Memory** %MEMORY
  %loadMem_45fcab = load %struct.Memory*, %struct.Memory** %MEMORY
  %11930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11931 = getelementptr inbounds %struct.GPR, %struct.GPR* %11930, i32 0, i32 33
  %11932 = getelementptr inbounds %struct.Reg, %struct.Reg* %11931, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %11932 to i64*
  %11933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11934 = getelementptr inbounds %struct.GPR, %struct.GPR* %11933, i32 0, i32 1
  %11935 = getelementptr inbounds %struct.Reg, %struct.Reg* %11934, i32 0, i32 0
  %RAX.i387 = bitcast %union.anon* %11935 to i64*
  %11936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11937 = getelementptr inbounds %struct.GPR, %struct.GPR* %11936, i32 0, i32 15
  %11938 = getelementptr inbounds %struct.Reg, %struct.Reg* %11937, i32 0, i32 0
  %RBP.i388 = bitcast %union.anon* %11938 to i64*
  %11939 = load i64, i64* %RBP.i388
  %11940 = sub i64 %11939, 16
  %11941 = load i64, i64* %PC.i386
  %11942 = add i64 %11941, 4
  store i64 %11942, i64* %PC.i386
  %11943 = inttoptr i64 %11940 to i32*
  %11944 = load i32, i32* %11943
  %11945 = sext i32 %11944 to i64
  store i64 %11945, i64* %RAX.i387, align 8
  store %struct.Memory* %loadMem_45fcab, %struct.Memory** %MEMORY
  %loadMem_45fcaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11947 = getelementptr inbounds %struct.GPR, %struct.GPR* %11946, i32 0, i32 33
  %11948 = getelementptr inbounds %struct.Reg, %struct.Reg* %11947, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %11948 to i64*
  %11949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11950 = getelementptr inbounds %struct.GPR, %struct.GPR* %11949, i32 0, i32 1
  %11951 = getelementptr inbounds %struct.Reg, %struct.Reg* %11950, i32 0, i32 0
  %RAX.i383 = bitcast %union.anon* %11951 to i64*
  %11952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11953 = getelementptr inbounds %struct.GPR, %struct.GPR* %11952, i32 0, i32 5
  %11954 = getelementptr inbounds %struct.Reg, %struct.Reg* %11953, i32 0, i32 0
  %RCX.i384 = bitcast %union.anon* %11954 to i64*
  %11955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11956 = getelementptr inbounds %struct.GPR, %struct.GPR* %11955, i32 0, i32 15
  %11957 = getelementptr inbounds %struct.Reg, %struct.Reg* %11956, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %11957 to i64*
  %11958 = load i64, i64* %RBP.i385
  %11959 = load i64, i64* %RAX.i383
  %11960 = mul i64 %11959, 4
  %11961 = add i64 %11958, -640
  %11962 = add i64 %11961, %11960
  %11963 = load i64, i64* %PC.i382
  %11964 = add i64 %11963, 7
  store i64 %11964, i64* %PC.i382
  %11965 = inttoptr i64 %11962 to i32*
  %11966 = load i32, i32* %11965
  %11967 = zext i32 %11966 to i64
  store i64 %11967, i64* %RCX.i384, align 8
  store %struct.Memory* %loadMem_45fcaf, %struct.Memory** %MEMORY
  %loadMem_45fcb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11969 = getelementptr inbounds %struct.GPR, %struct.GPR* %11968, i32 0, i32 33
  %11970 = getelementptr inbounds %struct.Reg, %struct.Reg* %11969, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %11970 to i64*
  %11971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11972 = getelementptr inbounds %struct.GPR, %struct.GPR* %11971, i32 0, i32 1
  %11973 = getelementptr inbounds %struct.Reg, %struct.Reg* %11972, i32 0, i32 0
  %RAX.i380 = bitcast %union.anon* %11973 to i64*
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11975 = getelementptr inbounds %struct.GPR, %struct.GPR* %11974, i32 0, i32 15
  %11976 = getelementptr inbounds %struct.Reg, %struct.Reg* %11975, i32 0, i32 0
  %RBP.i381 = bitcast %union.anon* %11976 to i64*
  %11977 = load i64, i64* %RBP.i381
  %11978 = sub i64 %11977, 16
  %11979 = load i64, i64* %PC.i379
  %11980 = add i64 %11979, 4
  store i64 %11980, i64* %PC.i379
  %11981 = inttoptr i64 %11978 to i32*
  %11982 = load i32, i32* %11981
  %11983 = sext i32 %11982 to i64
  store i64 %11983, i64* %RAX.i380, align 8
  store %struct.Memory* %loadMem_45fcb6, %struct.Memory** %MEMORY
  %loadMem_45fcba = load %struct.Memory*, %struct.Memory** %MEMORY
  %11984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11985 = getelementptr inbounds %struct.GPR, %struct.GPR* %11984, i32 0, i32 33
  %11986 = getelementptr inbounds %struct.Reg, %struct.Reg* %11985, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %11986 to i64*
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11988 = getelementptr inbounds %struct.GPR, %struct.GPR* %11987, i32 0, i32 1
  %11989 = getelementptr inbounds %struct.Reg, %struct.Reg* %11988, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %11989 to i64*
  %11990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11991 = getelementptr inbounds %struct.GPR, %struct.GPR* %11990, i32 0, i32 5
  %11992 = getelementptr inbounds %struct.Reg, %struct.Reg* %11991, i32 0, i32 0
  %RCX.i377 = bitcast %union.anon* %11992 to i64*
  %11993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11994 = getelementptr inbounds %struct.GPR, %struct.GPR* %11993, i32 0, i32 15
  %11995 = getelementptr inbounds %struct.Reg, %struct.Reg* %11994, i32 0, i32 0
  %RBP.i378 = bitcast %union.anon* %11995 to i64*
  %11996 = load i64, i64* %RCX.i377
  %11997 = load i64, i64* %RBP.i378
  %11998 = load i64, i64* %RAX.i376
  %11999 = mul i64 %11998, 4
  %12000 = add i64 %11997, -576
  %12001 = add i64 %12000, %11999
  %12002 = load i64, i64* %PC.i375
  %12003 = add i64 %12002, 7
  store i64 %12003, i64* %PC.i375
  %12004 = trunc i64 %11996 to i32
  %12005 = inttoptr i64 %12001 to i32*
  %12006 = load i32, i32* %12005
  %12007 = add i32 %12006, %12004
  %12008 = zext i32 %12007 to i64
  store i64 %12008, i64* %RCX.i377, align 8
  %12009 = icmp ult i32 %12007, %12004
  %12010 = icmp ult i32 %12007, %12006
  %12011 = or i1 %12009, %12010
  %12012 = zext i1 %12011 to i8
  %12013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12012, i8* %12013, align 1
  %12014 = and i32 %12007, 255
  %12015 = call i32 @llvm.ctpop.i32(i32 %12014)
  %12016 = trunc i32 %12015 to i8
  %12017 = and i8 %12016, 1
  %12018 = xor i8 %12017, 1
  %12019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12018, i8* %12019, align 1
  %12020 = xor i32 %12006, %12004
  %12021 = xor i32 %12020, %12007
  %12022 = lshr i32 %12021, 4
  %12023 = trunc i32 %12022 to i8
  %12024 = and i8 %12023, 1
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12024, i8* %12025, align 1
  %12026 = icmp eq i32 %12007, 0
  %12027 = zext i1 %12026 to i8
  %12028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12027, i8* %12028, align 1
  %12029 = lshr i32 %12007, 31
  %12030 = trunc i32 %12029 to i8
  %12031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12030, i8* %12031, align 1
  %12032 = lshr i32 %12004, 31
  %12033 = lshr i32 %12006, 31
  %12034 = xor i32 %12029, %12032
  %12035 = xor i32 %12029, %12033
  %12036 = add i32 %12034, %12035
  %12037 = icmp eq i32 %12036, 2
  %12038 = zext i1 %12037 to i8
  %12039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12038, i8* %12039, align 1
  store %struct.Memory* %loadMem_45fcba, %struct.Memory** %MEMORY
  %loadMem_45fcc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12041 = getelementptr inbounds %struct.GPR, %struct.GPR* %12040, i32 0, i32 33
  %12042 = getelementptr inbounds %struct.Reg, %struct.Reg* %12041, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %12042 to i64*
  %12043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12044 = getelementptr inbounds %struct.GPR, %struct.GPR* %12043, i32 0, i32 1
  %12045 = getelementptr inbounds %struct.Reg, %struct.Reg* %12044, i32 0, i32 0
  %RAX.i373 = bitcast %union.anon* %12045 to i64*
  %12046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12047 = getelementptr inbounds %struct.GPR, %struct.GPR* %12046, i32 0, i32 15
  %12048 = getelementptr inbounds %struct.Reg, %struct.Reg* %12047, i32 0, i32 0
  %RBP.i374 = bitcast %union.anon* %12048 to i64*
  %12049 = load i64, i64* %RBP.i374
  %12050 = sub i64 %12049, 16
  %12051 = load i64, i64* %PC.i372
  %12052 = add i64 %12051, 4
  store i64 %12052, i64* %PC.i372
  %12053 = inttoptr i64 %12050 to i32*
  %12054 = load i32, i32* %12053
  %12055 = sext i32 %12054 to i64
  store i64 %12055, i64* %RAX.i373, align 8
  store %struct.Memory* %loadMem_45fcc1, %struct.Memory** %MEMORY
  %loadMem_45fcc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12057 = getelementptr inbounds %struct.GPR, %struct.GPR* %12056, i32 0, i32 33
  %12058 = getelementptr inbounds %struct.Reg, %struct.Reg* %12057, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %12058 to i64*
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12060 = getelementptr inbounds %struct.GPR, %struct.GPR* %12059, i32 0, i32 5
  %12061 = getelementptr inbounds %struct.Reg, %struct.Reg* %12060, i32 0, i32 0
  %ECX.i369 = bitcast %union.anon* %12061 to i32*
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12063 = getelementptr inbounds %struct.GPR, %struct.GPR* %12062, i32 0, i32 1
  %12064 = getelementptr inbounds %struct.Reg, %struct.Reg* %12063, i32 0, i32 0
  %RAX.i370 = bitcast %union.anon* %12064 to i64*
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12066 = getelementptr inbounds %struct.GPR, %struct.GPR* %12065, i32 0, i32 15
  %12067 = getelementptr inbounds %struct.Reg, %struct.Reg* %12066, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %12067 to i64*
  %12068 = load i64, i64* %RBP.i371
  %12069 = load i64, i64* %RAX.i370
  %12070 = mul i64 %12069, 4
  %12071 = add i64 %12068, -128
  %12072 = add i64 %12071, %12070
  %12073 = load i32, i32* %ECX.i369
  %12074 = zext i32 %12073 to i64
  %12075 = load i64, i64* %PC.i368
  %12076 = add i64 %12075, 4
  store i64 %12076, i64* %PC.i368
  %12077 = inttoptr i64 %12072 to i32*
  store i32 %12073, i32* %12077
  store %struct.Memory* %loadMem_45fcc5, %struct.Memory** %MEMORY
  %loadMem_45fcc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12079 = getelementptr inbounds %struct.GPR, %struct.GPR* %12078, i32 0, i32 33
  %12080 = getelementptr inbounds %struct.Reg, %struct.Reg* %12079, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %12080 to i64*
  %12081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12082 = getelementptr inbounds %struct.GPR, %struct.GPR* %12081, i32 0, i32 1
  %12083 = getelementptr inbounds %struct.Reg, %struct.Reg* %12082, i32 0, i32 0
  %RAX.i366 = bitcast %union.anon* %12083 to i64*
  %12084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12085 = getelementptr inbounds %struct.GPR, %struct.GPR* %12084, i32 0, i32 15
  %12086 = getelementptr inbounds %struct.Reg, %struct.Reg* %12085, i32 0, i32 0
  %RBP.i367 = bitcast %union.anon* %12086 to i64*
  %12087 = load i64, i64* %RBP.i367
  %12088 = sub i64 %12087, 16
  %12089 = load i64, i64* %PC.i365
  %12090 = add i64 %12089, 4
  store i64 %12090, i64* %PC.i365
  %12091 = inttoptr i64 %12088 to i32*
  %12092 = load i32, i32* %12091
  %12093 = sext i32 %12092 to i64
  store i64 %12093, i64* %RAX.i366, align 8
  store %struct.Memory* %loadMem_45fcc9, %struct.Memory** %MEMORY
  %loadMem_45fccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12095 = getelementptr inbounds %struct.GPR, %struct.GPR* %12094, i32 0, i32 33
  %12096 = getelementptr inbounds %struct.Reg, %struct.Reg* %12095, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %12096 to i64*
  %12097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12098 = getelementptr inbounds %struct.GPR, %struct.GPR* %12097, i32 0, i32 1
  %12099 = getelementptr inbounds %struct.Reg, %struct.Reg* %12098, i32 0, i32 0
  %RAX.i362 = bitcast %union.anon* %12099 to i64*
  %12100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12101 = getelementptr inbounds %struct.GPR, %struct.GPR* %12100, i32 0, i32 5
  %12102 = getelementptr inbounds %struct.Reg, %struct.Reg* %12101, i32 0, i32 0
  %RCX.i363 = bitcast %union.anon* %12102 to i64*
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12104 = getelementptr inbounds %struct.GPR, %struct.GPR* %12103, i32 0, i32 15
  %12105 = getelementptr inbounds %struct.Reg, %struct.Reg* %12104, i32 0, i32 0
  %RBP.i364 = bitcast %union.anon* %12105 to i64*
  %12106 = load i64, i64* %RBP.i364
  %12107 = load i64, i64* %RAX.i362
  %12108 = mul i64 %12107, 4
  %12109 = add i64 %12106, -672
  %12110 = add i64 %12109, %12108
  %12111 = load i64, i64* %PC.i361
  %12112 = add i64 %12111, 7
  store i64 %12112, i64* %PC.i361
  %12113 = inttoptr i64 %12110 to i32*
  %12114 = load i32, i32* %12113
  %12115 = zext i32 %12114 to i64
  store i64 %12115, i64* %RCX.i363, align 8
  store %struct.Memory* %loadMem_45fccd, %struct.Memory** %MEMORY
  %loadMem_45fcd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12117 = getelementptr inbounds %struct.GPR, %struct.GPR* %12116, i32 0, i32 33
  %12118 = getelementptr inbounds %struct.Reg, %struct.Reg* %12117, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %12118 to i64*
  %12119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12120 = getelementptr inbounds %struct.GPR, %struct.GPR* %12119, i32 0, i32 1
  %12121 = getelementptr inbounds %struct.Reg, %struct.Reg* %12120, i32 0, i32 0
  %RAX.i359 = bitcast %union.anon* %12121 to i64*
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12123 = getelementptr inbounds %struct.GPR, %struct.GPR* %12122, i32 0, i32 15
  %12124 = getelementptr inbounds %struct.Reg, %struct.Reg* %12123, i32 0, i32 0
  %RBP.i360 = bitcast %union.anon* %12124 to i64*
  %12125 = load i64, i64* %RBP.i360
  %12126 = sub i64 %12125, 16
  %12127 = load i64, i64* %PC.i358
  %12128 = add i64 %12127, 4
  store i64 %12128, i64* %PC.i358
  %12129 = inttoptr i64 %12126 to i32*
  %12130 = load i32, i32* %12129
  %12131 = sext i32 %12130 to i64
  store i64 %12131, i64* %RAX.i359, align 8
  store %struct.Memory* %loadMem_45fcd4, %struct.Memory** %MEMORY
  %loadMem_45fcd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12133 = getelementptr inbounds %struct.GPR, %struct.GPR* %12132, i32 0, i32 33
  %12134 = getelementptr inbounds %struct.Reg, %struct.Reg* %12133, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %12134 to i64*
  %12135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12136 = getelementptr inbounds %struct.GPR, %struct.GPR* %12135, i32 0, i32 1
  %12137 = getelementptr inbounds %struct.Reg, %struct.Reg* %12136, i32 0, i32 0
  %RAX.i355 = bitcast %union.anon* %12137 to i64*
  %12138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12139 = getelementptr inbounds %struct.GPR, %struct.GPR* %12138, i32 0, i32 5
  %12140 = getelementptr inbounds %struct.Reg, %struct.Reg* %12139, i32 0, i32 0
  %RCX.i356 = bitcast %union.anon* %12140 to i64*
  %12141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12142 = getelementptr inbounds %struct.GPR, %struct.GPR* %12141, i32 0, i32 15
  %12143 = getelementptr inbounds %struct.Reg, %struct.Reg* %12142, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %12143 to i64*
  %12144 = load i64, i64* %RCX.i356
  %12145 = load i64, i64* %RBP.i357
  %12146 = load i64, i64* %RAX.i355
  %12147 = mul i64 %12146, 4
  %12148 = add i64 %12145, -608
  %12149 = add i64 %12148, %12147
  %12150 = load i64, i64* %PC.i354
  %12151 = add i64 %12150, 7
  store i64 %12151, i64* %PC.i354
  %12152 = trunc i64 %12144 to i32
  %12153 = inttoptr i64 %12149 to i32*
  %12154 = load i32, i32* %12153
  %12155 = sub i32 %12152, %12154
  %12156 = zext i32 %12155 to i64
  store i64 %12156, i64* %RCX.i356, align 8
  %12157 = icmp ult i32 %12152, %12154
  %12158 = zext i1 %12157 to i8
  %12159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12158, i8* %12159, align 1
  %12160 = and i32 %12155, 255
  %12161 = call i32 @llvm.ctpop.i32(i32 %12160)
  %12162 = trunc i32 %12161 to i8
  %12163 = and i8 %12162, 1
  %12164 = xor i8 %12163, 1
  %12165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12164, i8* %12165, align 1
  %12166 = xor i32 %12154, %12152
  %12167 = xor i32 %12166, %12155
  %12168 = lshr i32 %12167, 4
  %12169 = trunc i32 %12168 to i8
  %12170 = and i8 %12169, 1
  %12171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12170, i8* %12171, align 1
  %12172 = icmp eq i32 %12155, 0
  %12173 = zext i1 %12172 to i8
  %12174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12173, i8* %12174, align 1
  %12175 = lshr i32 %12155, 31
  %12176 = trunc i32 %12175 to i8
  %12177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12176, i8* %12177, align 1
  %12178 = lshr i32 %12152, 31
  %12179 = lshr i32 %12154, 31
  %12180 = xor i32 %12179, %12178
  %12181 = xor i32 %12175, %12178
  %12182 = add i32 %12181, %12180
  %12183 = icmp eq i32 %12182, 2
  %12184 = zext i1 %12183 to i8
  %12185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12184, i8* %12185, align 1
  store %struct.Memory* %loadMem_45fcd8, %struct.Memory** %MEMORY
  %loadMem_45fcdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12187 = getelementptr inbounds %struct.GPR, %struct.GPR* %12186, i32 0, i32 33
  %12188 = getelementptr inbounds %struct.Reg, %struct.Reg* %12187, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %12188 to i64*
  %12189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12190 = getelementptr inbounds %struct.GPR, %struct.GPR* %12189, i32 0, i32 1
  %12191 = getelementptr inbounds %struct.Reg, %struct.Reg* %12190, i32 0, i32 0
  %RAX.i352 = bitcast %union.anon* %12191 to i64*
  %12192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12193 = getelementptr inbounds %struct.GPR, %struct.GPR* %12192, i32 0, i32 15
  %12194 = getelementptr inbounds %struct.Reg, %struct.Reg* %12193, i32 0, i32 0
  %RBP.i353 = bitcast %union.anon* %12194 to i64*
  %12195 = load i64, i64* %RBP.i353
  %12196 = sub i64 %12195, 16
  %12197 = load i64, i64* %PC.i351
  %12198 = add i64 %12197, 4
  store i64 %12198, i64* %PC.i351
  %12199 = inttoptr i64 %12196 to i32*
  %12200 = load i32, i32* %12199
  %12201 = sext i32 %12200 to i64
  store i64 %12201, i64* %RAX.i352, align 8
  store %struct.Memory* %loadMem_45fcdf, %struct.Memory** %MEMORY
  %loadMem_45fce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12203 = getelementptr inbounds %struct.GPR, %struct.GPR* %12202, i32 0, i32 33
  %12204 = getelementptr inbounds %struct.Reg, %struct.Reg* %12203, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %12204 to i64*
  %12205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12206 = getelementptr inbounds %struct.GPR, %struct.GPR* %12205, i32 0, i32 5
  %12207 = getelementptr inbounds %struct.Reg, %struct.Reg* %12206, i32 0, i32 0
  %ECX.i348 = bitcast %union.anon* %12207 to i32*
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12209 = getelementptr inbounds %struct.GPR, %struct.GPR* %12208, i32 0, i32 1
  %12210 = getelementptr inbounds %struct.Reg, %struct.Reg* %12209, i32 0, i32 0
  %RAX.i349 = bitcast %union.anon* %12210 to i64*
  %12211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12212 = getelementptr inbounds %struct.GPR, %struct.GPR* %12211, i32 0, i32 15
  %12213 = getelementptr inbounds %struct.Reg, %struct.Reg* %12212, i32 0, i32 0
  %RBP.i350 = bitcast %union.anon* %12213 to i64*
  %12214 = load i64, i64* %RBP.i350
  %12215 = load i64, i64* %RAX.i349
  %12216 = mul i64 %12215, 4
  %12217 = add i64 %12214, -96
  %12218 = add i64 %12217, %12216
  %12219 = load i32, i32* %ECX.i348
  %12220 = zext i32 %12219 to i64
  %12221 = load i64, i64* %PC.i347
  %12222 = add i64 %12221, 4
  store i64 %12222, i64* %PC.i347
  %12223 = inttoptr i64 %12218 to i32*
  store i32 %12219, i32* %12223
  store %struct.Memory* %loadMem_45fce3, %struct.Memory** %MEMORY
  %loadMem_45fce7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12225 = getelementptr inbounds %struct.GPR, %struct.GPR* %12224, i32 0, i32 33
  %12226 = getelementptr inbounds %struct.Reg, %struct.Reg* %12225, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %12226 to i64*
  %12227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12228 = getelementptr inbounds %struct.GPR, %struct.GPR* %12227, i32 0, i32 1
  %12229 = getelementptr inbounds %struct.Reg, %struct.Reg* %12228, i32 0, i32 0
  %RAX.i345 = bitcast %union.anon* %12229 to i64*
  %12230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12231 = getelementptr inbounds %struct.GPR, %struct.GPR* %12230, i32 0, i32 15
  %12232 = getelementptr inbounds %struct.Reg, %struct.Reg* %12231, i32 0, i32 0
  %RBP.i346 = bitcast %union.anon* %12232 to i64*
  %12233 = load i64, i64* %RBP.i346
  %12234 = sub i64 %12233, 16
  %12235 = load i64, i64* %PC.i344
  %12236 = add i64 %12235, 4
  store i64 %12236, i64* %PC.i344
  %12237 = inttoptr i64 %12234 to i32*
  %12238 = load i32, i32* %12237
  %12239 = sext i32 %12238 to i64
  store i64 %12239, i64* %RAX.i345, align 8
  store %struct.Memory* %loadMem_45fce7, %struct.Memory** %MEMORY
  %loadMem_45fceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12241 = getelementptr inbounds %struct.GPR, %struct.GPR* %12240, i32 0, i32 33
  %12242 = getelementptr inbounds %struct.Reg, %struct.Reg* %12241, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %12242 to i64*
  %12243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12244 = getelementptr inbounds %struct.GPR, %struct.GPR* %12243, i32 0, i32 1
  %12245 = getelementptr inbounds %struct.Reg, %struct.Reg* %12244, i32 0, i32 0
  %RAX.i341 = bitcast %union.anon* %12245 to i64*
  %12246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12247 = getelementptr inbounds %struct.GPR, %struct.GPR* %12246, i32 0, i32 5
  %12248 = getelementptr inbounds %struct.Reg, %struct.Reg* %12247, i32 0, i32 0
  %RCX.i342 = bitcast %union.anon* %12248 to i64*
  %12249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12250 = getelementptr inbounds %struct.GPR, %struct.GPR* %12249, i32 0, i32 15
  %12251 = getelementptr inbounds %struct.Reg, %struct.Reg* %12250, i32 0, i32 0
  %RBP.i343 = bitcast %union.anon* %12251 to i64*
  %12252 = load i64, i64* %RBP.i343
  %12253 = load i64, i64* %RAX.i341
  %12254 = mul i64 %12253, 4
  %12255 = add i64 %12252, -640
  %12256 = add i64 %12255, %12254
  %12257 = load i64, i64* %PC.i340
  %12258 = add i64 %12257, 7
  store i64 %12258, i64* %PC.i340
  %12259 = inttoptr i64 %12256 to i32*
  %12260 = load i32, i32* %12259
  %12261 = zext i32 %12260 to i64
  store i64 %12261, i64* %RCX.i342, align 8
  store %struct.Memory* %loadMem_45fceb, %struct.Memory** %MEMORY
  %loadMem_45fcf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12263 = getelementptr inbounds %struct.GPR, %struct.GPR* %12262, i32 0, i32 33
  %12264 = getelementptr inbounds %struct.Reg, %struct.Reg* %12263, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %12264 to i64*
  %12265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12266 = getelementptr inbounds %struct.GPR, %struct.GPR* %12265, i32 0, i32 1
  %12267 = getelementptr inbounds %struct.Reg, %struct.Reg* %12266, i32 0, i32 0
  %RAX.i338 = bitcast %union.anon* %12267 to i64*
  %12268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12269 = getelementptr inbounds %struct.GPR, %struct.GPR* %12268, i32 0, i32 15
  %12270 = getelementptr inbounds %struct.Reg, %struct.Reg* %12269, i32 0, i32 0
  %RBP.i339 = bitcast %union.anon* %12270 to i64*
  %12271 = load i64, i64* %RBP.i339
  %12272 = sub i64 %12271, 16
  %12273 = load i64, i64* %PC.i337
  %12274 = add i64 %12273, 4
  store i64 %12274, i64* %PC.i337
  %12275 = inttoptr i64 %12272 to i32*
  %12276 = load i32, i32* %12275
  %12277 = sext i32 %12276 to i64
  store i64 %12277, i64* %RAX.i338, align 8
  store %struct.Memory* %loadMem_45fcf2, %struct.Memory** %MEMORY
  %loadMem_45fcf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12279 = getelementptr inbounds %struct.GPR, %struct.GPR* %12278, i32 0, i32 33
  %12280 = getelementptr inbounds %struct.Reg, %struct.Reg* %12279, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %12280 to i64*
  %12281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12282 = getelementptr inbounds %struct.GPR, %struct.GPR* %12281, i32 0, i32 1
  %12283 = getelementptr inbounds %struct.Reg, %struct.Reg* %12282, i32 0, i32 0
  %RAX.i334 = bitcast %union.anon* %12283 to i64*
  %12284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12285 = getelementptr inbounds %struct.GPR, %struct.GPR* %12284, i32 0, i32 5
  %12286 = getelementptr inbounds %struct.Reg, %struct.Reg* %12285, i32 0, i32 0
  %RCX.i335 = bitcast %union.anon* %12286 to i64*
  %12287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12288 = getelementptr inbounds %struct.GPR, %struct.GPR* %12287, i32 0, i32 15
  %12289 = getelementptr inbounds %struct.Reg, %struct.Reg* %12288, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %12289 to i64*
  %12290 = load i64, i64* %RCX.i335
  %12291 = load i64, i64* %RBP.i336
  %12292 = load i64, i64* %RAX.i334
  %12293 = mul i64 %12292, 4
  %12294 = add i64 %12291, -576
  %12295 = add i64 %12294, %12293
  %12296 = load i64, i64* %PC.i333
  %12297 = add i64 %12296, 7
  store i64 %12297, i64* %PC.i333
  %12298 = trunc i64 %12290 to i32
  %12299 = inttoptr i64 %12295 to i32*
  %12300 = load i32, i32* %12299
  %12301 = sub i32 %12298, %12300
  %12302 = zext i32 %12301 to i64
  store i64 %12302, i64* %RCX.i335, align 8
  %12303 = icmp ult i32 %12298, %12300
  %12304 = zext i1 %12303 to i8
  %12305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12304, i8* %12305, align 1
  %12306 = and i32 %12301, 255
  %12307 = call i32 @llvm.ctpop.i32(i32 %12306)
  %12308 = trunc i32 %12307 to i8
  %12309 = and i8 %12308, 1
  %12310 = xor i8 %12309, 1
  %12311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12310, i8* %12311, align 1
  %12312 = xor i32 %12300, %12298
  %12313 = xor i32 %12312, %12301
  %12314 = lshr i32 %12313, 4
  %12315 = trunc i32 %12314 to i8
  %12316 = and i8 %12315, 1
  %12317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12316, i8* %12317, align 1
  %12318 = icmp eq i32 %12301, 0
  %12319 = zext i1 %12318 to i8
  %12320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12319, i8* %12320, align 1
  %12321 = lshr i32 %12301, 31
  %12322 = trunc i32 %12321 to i8
  %12323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12322, i8* %12323, align 1
  %12324 = lshr i32 %12298, 31
  %12325 = lshr i32 %12300, 31
  %12326 = xor i32 %12325, %12324
  %12327 = xor i32 %12321, %12324
  %12328 = add i32 %12327, %12326
  %12329 = icmp eq i32 %12328, 2
  %12330 = zext i1 %12329 to i8
  %12331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12330, i8* %12331, align 1
  store %struct.Memory* %loadMem_45fcf6, %struct.Memory** %MEMORY
  %loadMem_45fcfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12333 = getelementptr inbounds %struct.GPR, %struct.GPR* %12332, i32 0, i32 33
  %12334 = getelementptr inbounds %struct.Reg, %struct.Reg* %12333, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %12334 to i64*
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12336 = getelementptr inbounds %struct.GPR, %struct.GPR* %12335, i32 0, i32 1
  %12337 = getelementptr inbounds %struct.Reg, %struct.Reg* %12336, i32 0, i32 0
  %RAX.i331 = bitcast %union.anon* %12337 to i64*
  %12338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12339 = getelementptr inbounds %struct.GPR, %struct.GPR* %12338, i32 0, i32 15
  %12340 = getelementptr inbounds %struct.Reg, %struct.Reg* %12339, i32 0, i32 0
  %RBP.i332 = bitcast %union.anon* %12340 to i64*
  %12341 = load i64, i64* %RBP.i332
  %12342 = sub i64 %12341, 16
  %12343 = load i64, i64* %PC.i330
  %12344 = add i64 %12343, 4
  store i64 %12344, i64* %PC.i330
  %12345 = inttoptr i64 %12342 to i32*
  %12346 = load i32, i32* %12345
  %12347 = sext i32 %12346 to i64
  store i64 %12347, i64* %RAX.i331, align 8
  store %struct.Memory* %loadMem_45fcfd, %struct.Memory** %MEMORY
  %loadMem_45fd01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12349 = getelementptr inbounds %struct.GPR, %struct.GPR* %12348, i32 0, i32 33
  %12350 = getelementptr inbounds %struct.Reg, %struct.Reg* %12349, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %12350 to i64*
  %12351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12352 = getelementptr inbounds %struct.GPR, %struct.GPR* %12351, i32 0, i32 5
  %12353 = getelementptr inbounds %struct.Reg, %struct.Reg* %12352, i32 0, i32 0
  %ECX.i327 = bitcast %union.anon* %12353 to i32*
  %12354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12355 = getelementptr inbounds %struct.GPR, %struct.GPR* %12354, i32 0, i32 1
  %12356 = getelementptr inbounds %struct.Reg, %struct.Reg* %12355, i32 0, i32 0
  %RAX.i328 = bitcast %union.anon* %12356 to i64*
  %12357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12358 = getelementptr inbounds %struct.GPR, %struct.GPR* %12357, i32 0, i32 15
  %12359 = getelementptr inbounds %struct.Reg, %struct.Reg* %12358, i32 0, i32 0
  %RBP.i329 = bitcast %union.anon* %12359 to i64*
  %12360 = load i64, i64* %RBP.i329
  %12361 = load i64, i64* %RAX.i328
  %12362 = mul i64 %12361, 4
  %12363 = add i64 %12360, -64
  %12364 = add i64 %12363, %12362
  %12365 = load i32, i32* %ECX.i327
  %12366 = zext i32 %12365 to i64
  %12367 = load i64, i64* %PC.i326
  %12368 = add i64 %12367, 4
  store i64 %12368, i64* %PC.i326
  %12369 = inttoptr i64 %12364 to i32*
  store i32 %12365, i32* %12369
  store %struct.Memory* %loadMem_45fd01, %struct.Memory** %MEMORY
  %loadMem_45fd05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12371 = getelementptr inbounds %struct.GPR, %struct.GPR* %12370, i32 0, i32 33
  %12372 = getelementptr inbounds %struct.Reg, %struct.Reg* %12371, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %12372 to i64*
  %12373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12374 = getelementptr inbounds %struct.GPR, %struct.GPR* %12373, i32 0, i32 1
  %12375 = getelementptr inbounds %struct.Reg, %struct.Reg* %12374, i32 0, i32 0
  %RAX.i324 = bitcast %union.anon* %12375 to i64*
  %12376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12377 = getelementptr inbounds %struct.GPR, %struct.GPR* %12376, i32 0, i32 15
  %12378 = getelementptr inbounds %struct.Reg, %struct.Reg* %12377, i32 0, i32 0
  %RBP.i325 = bitcast %union.anon* %12378 to i64*
  %12379 = load i64, i64* %RBP.i325
  %12380 = sub i64 %12379, 16
  %12381 = load i64, i64* %PC.i323
  %12382 = add i64 %12381, 4
  store i64 %12382, i64* %PC.i323
  %12383 = inttoptr i64 %12380 to i32*
  %12384 = load i32, i32* %12383
  %12385 = sext i32 %12384 to i64
  store i64 %12385, i64* %RAX.i324, align 8
  store %struct.Memory* %loadMem_45fd05, %struct.Memory** %MEMORY
  %loadMem_45fd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12387 = getelementptr inbounds %struct.GPR, %struct.GPR* %12386, i32 0, i32 33
  %12388 = getelementptr inbounds %struct.Reg, %struct.Reg* %12387, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %12388 to i64*
  %12389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12390 = getelementptr inbounds %struct.GPR, %struct.GPR* %12389, i32 0, i32 1
  %12391 = getelementptr inbounds %struct.Reg, %struct.Reg* %12390, i32 0, i32 0
  %RAX.i320 = bitcast %union.anon* %12391 to i64*
  %12392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12393 = getelementptr inbounds %struct.GPR, %struct.GPR* %12392, i32 0, i32 5
  %12394 = getelementptr inbounds %struct.Reg, %struct.Reg* %12393, i32 0, i32 0
  %RCX.i321 = bitcast %union.anon* %12394 to i64*
  %12395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12396 = getelementptr inbounds %struct.GPR, %struct.GPR* %12395, i32 0, i32 15
  %12397 = getelementptr inbounds %struct.Reg, %struct.Reg* %12396, i32 0, i32 0
  %RBP.i322 = bitcast %union.anon* %12397 to i64*
  %12398 = load i64, i64* %RBP.i322
  %12399 = load i64, i64* %RAX.i320
  %12400 = mul i64 %12399, 4
  %12401 = add i64 %12398, -288
  %12402 = add i64 %12401, %12400
  %12403 = load i64, i64* %PC.i319
  %12404 = add i64 %12403, 7
  store i64 %12404, i64* %PC.i319
  %12405 = inttoptr i64 %12402 to i32*
  %12406 = load i32, i32* %12405
  %12407 = zext i32 %12406 to i64
  store i64 %12407, i64* %RCX.i321, align 8
  store %struct.Memory* %loadMem_45fd09, %struct.Memory** %MEMORY
  %loadMem_45fd10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 33
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %12410 to i64*
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12412 = getelementptr inbounds %struct.GPR, %struct.GPR* %12411, i32 0, i32 1
  %12413 = getelementptr inbounds %struct.Reg, %struct.Reg* %12412, i32 0, i32 0
  %RAX.i317 = bitcast %union.anon* %12413 to i64*
  %12414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12415 = getelementptr inbounds %struct.GPR, %struct.GPR* %12414, i32 0, i32 15
  %12416 = getelementptr inbounds %struct.Reg, %struct.Reg* %12415, i32 0, i32 0
  %RBP.i318 = bitcast %union.anon* %12416 to i64*
  %12417 = load i64, i64* %RBP.i318
  %12418 = sub i64 %12417, 16
  %12419 = load i64, i64* %PC.i316
  %12420 = add i64 %12419, 4
  store i64 %12420, i64* %PC.i316
  %12421 = inttoptr i64 %12418 to i32*
  %12422 = load i32, i32* %12421
  %12423 = sext i32 %12422 to i64
  store i64 %12423, i64* %RAX.i317, align 8
  store %struct.Memory* %loadMem_45fd10, %struct.Memory** %MEMORY
  %loadMem_45fd14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12425 = getelementptr inbounds %struct.GPR, %struct.GPR* %12424, i32 0, i32 33
  %12426 = getelementptr inbounds %struct.Reg, %struct.Reg* %12425, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %12426 to i64*
  %12427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12428 = getelementptr inbounds %struct.GPR, %struct.GPR* %12427, i32 0, i32 1
  %12429 = getelementptr inbounds %struct.Reg, %struct.Reg* %12428, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %12429 to i64*
  %12430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12431 = getelementptr inbounds %struct.GPR, %struct.GPR* %12430, i32 0, i32 5
  %12432 = getelementptr inbounds %struct.Reg, %struct.Reg* %12431, i32 0, i32 0
  %RCX.i314 = bitcast %union.anon* %12432 to i64*
  %12433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12434 = getelementptr inbounds %struct.GPR, %struct.GPR* %12433, i32 0, i32 15
  %12435 = getelementptr inbounds %struct.Reg, %struct.Reg* %12434, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %12435 to i64*
  %12436 = load i64, i64* %RCX.i314
  %12437 = load i64, i64* %RBP.i315
  %12438 = load i64, i64* %RAX.i313
  %12439 = mul i64 %12438, 4
  %12440 = add i64 %12437, -256
  %12441 = add i64 %12440, %12439
  %12442 = load i64, i64* %PC.i312
  %12443 = add i64 %12442, 7
  store i64 %12443, i64* %PC.i312
  %12444 = trunc i64 %12436 to i32
  %12445 = inttoptr i64 %12441 to i32*
  %12446 = load i32, i32* %12445
  %12447 = add i32 %12446, %12444
  %12448 = zext i32 %12447 to i64
  store i64 %12448, i64* %RCX.i314, align 8
  %12449 = icmp ult i32 %12447, %12444
  %12450 = icmp ult i32 %12447, %12446
  %12451 = or i1 %12449, %12450
  %12452 = zext i1 %12451 to i8
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12452, i8* %12453, align 1
  %12454 = and i32 %12447, 255
  %12455 = call i32 @llvm.ctpop.i32(i32 %12454)
  %12456 = trunc i32 %12455 to i8
  %12457 = and i8 %12456, 1
  %12458 = xor i8 %12457, 1
  %12459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12458, i8* %12459, align 1
  %12460 = xor i32 %12446, %12444
  %12461 = xor i32 %12460, %12447
  %12462 = lshr i32 %12461, 4
  %12463 = trunc i32 %12462 to i8
  %12464 = and i8 %12463, 1
  %12465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12464, i8* %12465, align 1
  %12466 = icmp eq i32 %12447, 0
  %12467 = zext i1 %12466 to i8
  %12468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12467, i8* %12468, align 1
  %12469 = lshr i32 %12447, 31
  %12470 = trunc i32 %12469 to i8
  %12471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12470, i8* %12471, align 1
  %12472 = lshr i32 %12444, 31
  %12473 = lshr i32 %12446, 31
  %12474 = xor i32 %12469, %12472
  %12475 = xor i32 %12469, %12473
  %12476 = add i32 %12474, %12475
  %12477 = icmp eq i32 %12476, 2
  %12478 = zext i1 %12477 to i8
  %12479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12478, i8* %12479, align 1
  store %struct.Memory* %loadMem_45fd14, %struct.Memory** %MEMORY
  %loadMem_45fd1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12481 = getelementptr inbounds %struct.GPR, %struct.GPR* %12480, i32 0, i32 33
  %12482 = getelementptr inbounds %struct.Reg, %struct.Reg* %12481, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %12482 to i64*
  %12483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12484 = getelementptr inbounds %struct.GPR, %struct.GPR* %12483, i32 0, i32 1
  %12485 = getelementptr inbounds %struct.Reg, %struct.Reg* %12484, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %12485 to i64*
  %12486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12487 = getelementptr inbounds %struct.GPR, %struct.GPR* %12486, i32 0, i32 15
  %12488 = getelementptr inbounds %struct.Reg, %struct.Reg* %12487, i32 0, i32 0
  %RBP.i311 = bitcast %union.anon* %12488 to i64*
  %12489 = load i64, i64* %RBP.i311
  %12490 = sub i64 %12489, 16
  %12491 = load i64, i64* %PC.i309
  %12492 = add i64 %12491, 4
  store i64 %12492, i64* %PC.i309
  %12493 = inttoptr i64 %12490 to i32*
  %12494 = load i32, i32* %12493
  %12495 = sext i32 %12494 to i64
  store i64 %12495, i64* %RAX.i310, align 8
  store %struct.Memory* %loadMem_45fd1b, %struct.Memory** %MEMORY
  %loadMem_45fd1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12497 = getelementptr inbounds %struct.GPR, %struct.GPR* %12496, i32 0, i32 33
  %12498 = getelementptr inbounds %struct.Reg, %struct.Reg* %12497, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %12498 to i64*
  %12499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12500 = getelementptr inbounds %struct.GPR, %struct.GPR* %12499, i32 0, i32 5
  %12501 = getelementptr inbounds %struct.Reg, %struct.Reg* %12500, i32 0, i32 0
  %ECX.i306 = bitcast %union.anon* %12501 to i32*
  %12502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12503 = getelementptr inbounds %struct.GPR, %struct.GPR* %12502, i32 0, i32 1
  %12504 = getelementptr inbounds %struct.Reg, %struct.Reg* %12503, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %12504 to i64*
  %12505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12506 = getelementptr inbounds %struct.GPR, %struct.GPR* %12505, i32 0, i32 15
  %12507 = getelementptr inbounds %struct.Reg, %struct.Reg* %12506, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %12507 to i64*
  %12508 = load i64, i64* %RBP.i308
  %12509 = load i64, i64* %RAX.i307
  %12510 = mul i64 %12509, 4
  %12511 = add i64 %12508, -544
  %12512 = add i64 %12511, %12510
  %12513 = load i32, i32* %ECX.i306
  %12514 = zext i32 %12513 to i64
  %12515 = load i64, i64* %PC.i305
  %12516 = add i64 %12515, 7
  store i64 %12516, i64* %PC.i305
  %12517 = inttoptr i64 %12512 to i32*
  store i32 %12513, i32* %12517
  store %struct.Memory* %loadMem_45fd1f, %struct.Memory** %MEMORY
  %loadMem_45fd26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12519 = getelementptr inbounds %struct.GPR, %struct.GPR* %12518, i32 0, i32 33
  %12520 = getelementptr inbounds %struct.Reg, %struct.Reg* %12519, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %12520 to i64*
  %12521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12522 = getelementptr inbounds %struct.GPR, %struct.GPR* %12521, i32 0, i32 1
  %12523 = getelementptr inbounds %struct.Reg, %struct.Reg* %12522, i32 0, i32 0
  %RAX.i303 = bitcast %union.anon* %12523 to i64*
  %12524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12525 = getelementptr inbounds %struct.GPR, %struct.GPR* %12524, i32 0, i32 15
  %12526 = getelementptr inbounds %struct.Reg, %struct.Reg* %12525, i32 0, i32 0
  %RBP.i304 = bitcast %union.anon* %12526 to i64*
  %12527 = load i64, i64* %RBP.i304
  %12528 = sub i64 %12527, 16
  %12529 = load i64, i64* %PC.i302
  %12530 = add i64 %12529, 4
  store i64 %12530, i64* %PC.i302
  %12531 = inttoptr i64 %12528 to i32*
  %12532 = load i32, i32* %12531
  %12533 = sext i32 %12532 to i64
  store i64 %12533, i64* %RAX.i303, align 8
  store %struct.Memory* %loadMem_45fd26, %struct.Memory** %MEMORY
  %loadMem_45fd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12535 = getelementptr inbounds %struct.GPR, %struct.GPR* %12534, i32 0, i32 33
  %12536 = getelementptr inbounds %struct.Reg, %struct.Reg* %12535, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %12536 to i64*
  %12537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12538 = getelementptr inbounds %struct.GPR, %struct.GPR* %12537, i32 0, i32 1
  %12539 = getelementptr inbounds %struct.Reg, %struct.Reg* %12538, i32 0, i32 0
  %RAX.i299 = bitcast %union.anon* %12539 to i64*
  %12540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12541 = getelementptr inbounds %struct.GPR, %struct.GPR* %12540, i32 0, i32 5
  %12542 = getelementptr inbounds %struct.Reg, %struct.Reg* %12541, i32 0, i32 0
  %RCX.i300 = bitcast %union.anon* %12542 to i64*
  %12543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12544 = getelementptr inbounds %struct.GPR, %struct.GPR* %12543, i32 0, i32 15
  %12545 = getelementptr inbounds %struct.Reg, %struct.Reg* %12544, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %12545 to i64*
  %12546 = load i64, i64* %RBP.i301
  %12547 = load i64, i64* %RAX.i299
  %12548 = mul i64 %12547, 4
  %12549 = add i64 %12546, -288
  %12550 = add i64 %12549, %12548
  %12551 = load i64, i64* %PC.i298
  %12552 = add i64 %12551, 7
  store i64 %12552, i64* %PC.i298
  %12553 = inttoptr i64 %12550 to i32*
  %12554 = load i32, i32* %12553
  %12555 = zext i32 %12554 to i64
  store i64 %12555, i64* %RCX.i300, align 8
  store %struct.Memory* %loadMem_45fd2a, %struct.Memory** %MEMORY
  %loadMem_45fd31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12557 = getelementptr inbounds %struct.GPR, %struct.GPR* %12556, i32 0, i32 33
  %12558 = getelementptr inbounds %struct.Reg, %struct.Reg* %12557, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %12558 to i64*
  %12559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12560 = getelementptr inbounds %struct.GPR, %struct.GPR* %12559, i32 0, i32 1
  %12561 = getelementptr inbounds %struct.Reg, %struct.Reg* %12560, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %12561 to i64*
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12563 = getelementptr inbounds %struct.GPR, %struct.GPR* %12562, i32 0, i32 15
  %12564 = getelementptr inbounds %struct.Reg, %struct.Reg* %12563, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %12564 to i64*
  %12565 = load i64, i64* %RBP.i297
  %12566 = sub i64 %12565, 16
  %12567 = load i64, i64* %PC.i295
  %12568 = add i64 %12567, 4
  store i64 %12568, i64* %PC.i295
  %12569 = inttoptr i64 %12566 to i32*
  %12570 = load i32, i32* %12569
  %12571 = sext i32 %12570 to i64
  store i64 %12571, i64* %RAX.i296, align 8
  store %struct.Memory* %loadMem_45fd31, %struct.Memory** %MEMORY
  %loadMem_45fd35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12573 = getelementptr inbounds %struct.GPR, %struct.GPR* %12572, i32 0, i32 33
  %12574 = getelementptr inbounds %struct.Reg, %struct.Reg* %12573, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %12574 to i64*
  %12575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12576 = getelementptr inbounds %struct.GPR, %struct.GPR* %12575, i32 0, i32 1
  %12577 = getelementptr inbounds %struct.Reg, %struct.Reg* %12576, i32 0, i32 0
  %RAX.i292 = bitcast %union.anon* %12577 to i64*
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12579 = getelementptr inbounds %struct.GPR, %struct.GPR* %12578, i32 0, i32 5
  %12580 = getelementptr inbounds %struct.Reg, %struct.Reg* %12579, i32 0, i32 0
  %RCX.i293 = bitcast %union.anon* %12580 to i64*
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12582 = getelementptr inbounds %struct.GPR, %struct.GPR* %12581, i32 0, i32 15
  %12583 = getelementptr inbounds %struct.Reg, %struct.Reg* %12582, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %12583 to i64*
  %12584 = load i64, i64* %RCX.i293
  %12585 = load i64, i64* %RBP.i294
  %12586 = load i64, i64* %RAX.i292
  %12587 = mul i64 %12586, 4
  %12588 = add i64 %12585, -256
  %12589 = add i64 %12588, %12587
  %12590 = load i64, i64* %PC.i291
  %12591 = add i64 %12590, 7
  store i64 %12591, i64* %PC.i291
  %12592 = trunc i64 %12584 to i32
  %12593 = inttoptr i64 %12589 to i32*
  %12594 = load i32, i32* %12593
  %12595 = sub i32 %12592, %12594
  %12596 = zext i32 %12595 to i64
  store i64 %12596, i64* %RCX.i293, align 8
  %12597 = icmp ult i32 %12592, %12594
  %12598 = zext i1 %12597 to i8
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12598, i8* %12599, align 1
  %12600 = and i32 %12595, 255
  %12601 = call i32 @llvm.ctpop.i32(i32 %12600)
  %12602 = trunc i32 %12601 to i8
  %12603 = and i8 %12602, 1
  %12604 = xor i8 %12603, 1
  %12605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12604, i8* %12605, align 1
  %12606 = xor i32 %12594, %12592
  %12607 = xor i32 %12606, %12595
  %12608 = lshr i32 %12607, 4
  %12609 = trunc i32 %12608 to i8
  %12610 = and i8 %12609, 1
  %12611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12610, i8* %12611, align 1
  %12612 = icmp eq i32 %12595, 0
  %12613 = zext i1 %12612 to i8
  %12614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12613, i8* %12614, align 1
  %12615 = lshr i32 %12595, 31
  %12616 = trunc i32 %12615 to i8
  %12617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12616, i8* %12617, align 1
  %12618 = lshr i32 %12592, 31
  %12619 = lshr i32 %12594, 31
  %12620 = xor i32 %12619, %12618
  %12621 = xor i32 %12615, %12618
  %12622 = add i32 %12621, %12620
  %12623 = icmp eq i32 %12622, 2
  %12624 = zext i1 %12623 to i8
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12624, i8* %12625, align 1
  store %struct.Memory* %loadMem_45fd35, %struct.Memory** %MEMORY
  %loadMem_45fd3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12627 = getelementptr inbounds %struct.GPR, %struct.GPR* %12626, i32 0, i32 33
  %12628 = getelementptr inbounds %struct.Reg, %struct.Reg* %12627, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %12628 to i64*
  %12629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12630 = getelementptr inbounds %struct.GPR, %struct.GPR* %12629, i32 0, i32 1
  %12631 = getelementptr inbounds %struct.Reg, %struct.Reg* %12630, i32 0, i32 0
  %RAX.i289 = bitcast %union.anon* %12631 to i64*
  %12632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12633 = getelementptr inbounds %struct.GPR, %struct.GPR* %12632, i32 0, i32 15
  %12634 = getelementptr inbounds %struct.Reg, %struct.Reg* %12633, i32 0, i32 0
  %RBP.i290 = bitcast %union.anon* %12634 to i64*
  %12635 = load i64, i64* %RBP.i290
  %12636 = sub i64 %12635, 16
  %12637 = load i64, i64* %PC.i288
  %12638 = add i64 %12637, 4
  store i64 %12638, i64* %PC.i288
  %12639 = inttoptr i64 %12636 to i32*
  %12640 = load i32, i32* %12639
  %12641 = sext i32 %12640 to i64
  store i64 %12641, i64* %RAX.i289, align 8
  store %struct.Memory* %loadMem_45fd3c, %struct.Memory** %MEMORY
  %loadMem_45fd40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12643 = getelementptr inbounds %struct.GPR, %struct.GPR* %12642, i32 0, i32 33
  %12644 = getelementptr inbounds %struct.Reg, %struct.Reg* %12643, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %12644 to i64*
  %12645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12646 = getelementptr inbounds %struct.GPR, %struct.GPR* %12645, i32 0, i32 5
  %12647 = getelementptr inbounds %struct.Reg, %struct.Reg* %12646, i32 0, i32 0
  %ECX.i285 = bitcast %union.anon* %12647 to i32*
  %12648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12649 = getelementptr inbounds %struct.GPR, %struct.GPR* %12648, i32 0, i32 1
  %12650 = getelementptr inbounds %struct.Reg, %struct.Reg* %12649, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %12650 to i64*
  %12651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12652 = getelementptr inbounds %struct.GPR, %struct.GPR* %12651, i32 0, i32 15
  %12653 = getelementptr inbounds %struct.Reg, %struct.Reg* %12652, i32 0, i32 0
  %RBP.i287 = bitcast %union.anon* %12653 to i64*
  %12654 = load i64, i64* %RBP.i287
  %12655 = load i64, i64* %RAX.i286
  %12656 = mul i64 %12655, 4
  %12657 = add i64 %12654, -512
  %12658 = add i64 %12657, %12656
  %12659 = load i32, i32* %ECX.i285
  %12660 = zext i32 %12659 to i64
  %12661 = load i64, i64* %PC.i284
  %12662 = add i64 %12661, 7
  store i64 %12662, i64* %PC.i284
  %12663 = inttoptr i64 %12658 to i32*
  store i32 %12659, i32* %12663
  store %struct.Memory* %loadMem_45fd40, %struct.Memory** %MEMORY
  %loadMem_45fd47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12665 = getelementptr inbounds %struct.GPR, %struct.GPR* %12664, i32 0, i32 33
  %12666 = getelementptr inbounds %struct.Reg, %struct.Reg* %12665, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %12666 to i64*
  %12667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12668 = getelementptr inbounds %struct.GPR, %struct.GPR* %12667, i32 0, i32 1
  %12669 = getelementptr inbounds %struct.Reg, %struct.Reg* %12668, i32 0, i32 0
  %RAX.i282 = bitcast %union.anon* %12669 to i64*
  %12670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12671 = getelementptr inbounds %struct.GPR, %struct.GPR* %12670, i32 0, i32 15
  %12672 = getelementptr inbounds %struct.Reg, %struct.Reg* %12671, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %12672 to i64*
  %12673 = load i64, i64* %RBP.i283
  %12674 = sub i64 %12673, 16
  %12675 = load i64, i64* %PC.i281
  %12676 = add i64 %12675, 4
  store i64 %12676, i64* %PC.i281
  %12677 = inttoptr i64 %12674 to i32*
  %12678 = load i32, i32* %12677
  %12679 = sext i32 %12678 to i64
  store i64 %12679, i64* %RAX.i282, align 8
  store %struct.Memory* %loadMem_45fd47, %struct.Memory** %MEMORY
  %loadMem_45fd4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12681 = getelementptr inbounds %struct.GPR, %struct.GPR* %12680, i32 0, i32 33
  %12682 = getelementptr inbounds %struct.Reg, %struct.Reg* %12681, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %12682 to i64*
  %12683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12684 = getelementptr inbounds %struct.GPR, %struct.GPR* %12683, i32 0, i32 1
  %12685 = getelementptr inbounds %struct.Reg, %struct.Reg* %12684, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %12685 to i64*
  %12686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12687 = getelementptr inbounds %struct.GPR, %struct.GPR* %12686, i32 0, i32 5
  %12688 = getelementptr inbounds %struct.Reg, %struct.Reg* %12687, i32 0, i32 0
  %RCX.i279 = bitcast %union.anon* %12688 to i64*
  %12689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12690 = getelementptr inbounds %struct.GPR, %struct.GPR* %12689, i32 0, i32 15
  %12691 = getelementptr inbounds %struct.Reg, %struct.Reg* %12690, i32 0, i32 0
  %RBP.i280 = bitcast %union.anon* %12691 to i64*
  %12692 = load i64, i64* %RBP.i280
  %12693 = load i64, i64* %RAX.i278
  %12694 = mul i64 %12693, 4
  %12695 = add i64 %12692, -224
  %12696 = add i64 %12695, %12694
  %12697 = load i64, i64* %PC.i277
  %12698 = add i64 %12697, 7
  store i64 %12698, i64* %PC.i277
  %12699 = inttoptr i64 %12696 to i32*
  %12700 = load i32, i32* %12699
  %12701 = zext i32 %12700 to i64
  store i64 %12701, i64* %RCX.i279, align 8
  store %struct.Memory* %loadMem_45fd4b, %struct.Memory** %MEMORY
  %loadMem_45fd52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12703 = getelementptr inbounds %struct.GPR, %struct.GPR* %12702, i32 0, i32 33
  %12704 = getelementptr inbounds %struct.Reg, %struct.Reg* %12703, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %12704 to i64*
  %12705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12706 = getelementptr inbounds %struct.GPR, %struct.GPR* %12705, i32 0, i32 1
  %12707 = getelementptr inbounds %struct.Reg, %struct.Reg* %12706, i32 0, i32 0
  %RAX.i275 = bitcast %union.anon* %12707 to i64*
  %12708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12709 = getelementptr inbounds %struct.GPR, %struct.GPR* %12708, i32 0, i32 15
  %12710 = getelementptr inbounds %struct.Reg, %struct.Reg* %12709, i32 0, i32 0
  %RBP.i276 = bitcast %union.anon* %12710 to i64*
  %12711 = load i64, i64* %RBP.i276
  %12712 = sub i64 %12711, 16
  %12713 = load i64, i64* %PC.i274
  %12714 = add i64 %12713, 4
  store i64 %12714, i64* %PC.i274
  %12715 = inttoptr i64 %12712 to i32*
  %12716 = load i32, i32* %12715
  %12717 = sext i32 %12716 to i64
  store i64 %12717, i64* %RAX.i275, align 8
  store %struct.Memory* %loadMem_45fd52, %struct.Memory** %MEMORY
  %loadMem_45fd56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12719 = getelementptr inbounds %struct.GPR, %struct.GPR* %12718, i32 0, i32 33
  %12720 = getelementptr inbounds %struct.Reg, %struct.Reg* %12719, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %12720 to i64*
  %12721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12722 = getelementptr inbounds %struct.GPR, %struct.GPR* %12721, i32 0, i32 1
  %12723 = getelementptr inbounds %struct.Reg, %struct.Reg* %12722, i32 0, i32 0
  %RAX.i271 = bitcast %union.anon* %12723 to i64*
  %12724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12725 = getelementptr inbounds %struct.GPR, %struct.GPR* %12724, i32 0, i32 5
  %12726 = getelementptr inbounds %struct.Reg, %struct.Reg* %12725, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %12726 to i64*
  %12727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12728 = getelementptr inbounds %struct.GPR, %struct.GPR* %12727, i32 0, i32 15
  %12729 = getelementptr inbounds %struct.Reg, %struct.Reg* %12728, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %12729 to i64*
  %12730 = load i64, i64* %RCX.i272
  %12731 = load i64, i64* %RBP.i273
  %12732 = load i64, i64* %RAX.i271
  %12733 = mul i64 %12732, 4
  %12734 = add i64 %12731, -192
  %12735 = add i64 %12734, %12733
  %12736 = load i64, i64* %PC.i270
  %12737 = add i64 %12736, 7
  store i64 %12737, i64* %PC.i270
  %12738 = trunc i64 %12730 to i32
  %12739 = inttoptr i64 %12735 to i32*
  %12740 = load i32, i32* %12739
  %12741 = add i32 %12740, %12738
  %12742 = zext i32 %12741 to i64
  store i64 %12742, i64* %RCX.i272, align 8
  %12743 = icmp ult i32 %12741, %12738
  %12744 = icmp ult i32 %12741, %12740
  %12745 = or i1 %12743, %12744
  %12746 = zext i1 %12745 to i8
  %12747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12746, i8* %12747, align 1
  %12748 = and i32 %12741, 255
  %12749 = call i32 @llvm.ctpop.i32(i32 %12748)
  %12750 = trunc i32 %12749 to i8
  %12751 = and i8 %12750, 1
  %12752 = xor i8 %12751, 1
  %12753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12752, i8* %12753, align 1
  %12754 = xor i32 %12740, %12738
  %12755 = xor i32 %12754, %12741
  %12756 = lshr i32 %12755, 4
  %12757 = trunc i32 %12756 to i8
  %12758 = and i8 %12757, 1
  %12759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12758, i8* %12759, align 1
  %12760 = icmp eq i32 %12741, 0
  %12761 = zext i1 %12760 to i8
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12761, i8* %12762, align 1
  %12763 = lshr i32 %12741, 31
  %12764 = trunc i32 %12763 to i8
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12764, i8* %12765, align 1
  %12766 = lshr i32 %12738, 31
  %12767 = lshr i32 %12740, 31
  %12768 = xor i32 %12763, %12766
  %12769 = xor i32 %12763, %12767
  %12770 = add i32 %12768, %12769
  %12771 = icmp eq i32 %12770, 2
  %12772 = zext i1 %12771 to i8
  %12773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12772, i8* %12773, align 1
  store %struct.Memory* %loadMem_45fd56, %struct.Memory** %MEMORY
  %loadMem_45fd5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12775 = getelementptr inbounds %struct.GPR, %struct.GPR* %12774, i32 0, i32 33
  %12776 = getelementptr inbounds %struct.Reg, %struct.Reg* %12775, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %12776 to i64*
  %12777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12778 = getelementptr inbounds %struct.GPR, %struct.GPR* %12777, i32 0, i32 1
  %12779 = getelementptr inbounds %struct.Reg, %struct.Reg* %12778, i32 0, i32 0
  %RAX.i268 = bitcast %union.anon* %12779 to i64*
  %12780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12781 = getelementptr inbounds %struct.GPR, %struct.GPR* %12780, i32 0, i32 15
  %12782 = getelementptr inbounds %struct.Reg, %struct.Reg* %12781, i32 0, i32 0
  %RBP.i269 = bitcast %union.anon* %12782 to i64*
  %12783 = load i64, i64* %RBP.i269
  %12784 = sub i64 %12783, 16
  %12785 = load i64, i64* %PC.i267
  %12786 = add i64 %12785, 4
  store i64 %12786, i64* %PC.i267
  %12787 = inttoptr i64 %12784 to i32*
  %12788 = load i32, i32* %12787
  %12789 = sext i32 %12788 to i64
  store i64 %12789, i64* %RAX.i268, align 8
  store %struct.Memory* %loadMem_45fd5d, %struct.Memory** %MEMORY
  %loadMem_45fd61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12791 = getelementptr inbounds %struct.GPR, %struct.GPR* %12790, i32 0, i32 33
  %12792 = getelementptr inbounds %struct.Reg, %struct.Reg* %12791, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %12792 to i64*
  %12793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12794 = getelementptr inbounds %struct.GPR, %struct.GPR* %12793, i32 0, i32 5
  %12795 = getelementptr inbounds %struct.Reg, %struct.Reg* %12794, i32 0, i32 0
  %ECX.i264 = bitcast %union.anon* %12795 to i32*
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12797 = getelementptr inbounds %struct.GPR, %struct.GPR* %12796, i32 0, i32 1
  %12798 = getelementptr inbounds %struct.Reg, %struct.Reg* %12797, i32 0, i32 0
  %RAX.i265 = bitcast %union.anon* %12798 to i64*
  %12799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12800 = getelementptr inbounds %struct.GPR, %struct.GPR* %12799, i32 0, i32 15
  %12801 = getelementptr inbounds %struct.Reg, %struct.Reg* %12800, i32 0, i32 0
  %RBP.i266 = bitcast %union.anon* %12801 to i64*
  %12802 = load i64, i64* %RBP.i266
  %12803 = load i64, i64* %RAX.i265
  %12804 = mul i64 %12803, 4
  %12805 = add i64 %12802, -480
  %12806 = add i64 %12805, %12804
  %12807 = load i32, i32* %ECX.i264
  %12808 = zext i32 %12807 to i64
  %12809 = load i64, i64* %PC.i263
  %12810 = add i64 %12809, 7
  store i64 %12810, i64* %PC.i263
  %12811 = inttoptr i64 %12806 to i32*
  store i32 %12807, i32* %12811
  store %struct.Memory* %loadMem_45fd61, %struct.Memory** %MEMORY
  %loadMem_45fd68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12813 = getelementptr inbounds %struct.GPR, %struct.GPR* %12812, i32 0, i32 33
  %12814 = getelementptr inbounds %struct.Reg, %struct.Reg* %12813, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %12814 to i64*
  %12815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12816 = getelementptr inbounds %struct.GPR, %struct.GPR* %12815, i32 0, i32 1
  %12817 = getelementptr inbounds %struct.Reg, %struct.Reg* %12816, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %12817 to i64*
  %12818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12819 = getelementptr inbounds %struct.GPR, %struct.GPR* %12818, i32 0, i32 15
  %12820 = getelementptr inbounds %struct.Reg, %struct.Reg* %12819, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %12820 to i64*
  %12821 = load i64, i64* %RBP.i262
  %12822 = sub i64 %12821, 16
  %12823 = load i64, i64* %PC.i260
  %12824 = add i64 %12823, 4
  store i64 %12824, i64* %PC.i260
  %12825 = inttoptr i64 %12822 to i32*
  %12826 = load i32, i32* %12825
  %12827 = sext i32 %12826 to i64
  store i64 %12827, i64* %RAX.i261, align 8
  store %struct.Memory* %loadMem_45fd68, %struct.Memory** %MEMORY
  %loadMem_45fd6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12829 = getelementptr inbounds %struct.GPR, %struct.GPR* %12828, i32 0, i32 33
  %12830 = getelementptr inbounds %struct.Reg, %struct.Reg* %12829, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %12830 to i64*
  %12831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12832 = getelementptr inbounds %struct.GPR, %struct.GPR* %12831, i32 0, i32 1
  %12833 = getelementptr inbounds %struct.Reg, %struct.Reg* %12832, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %12833 to i64*
  %12834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12835 = getelementptr inbounds %struct.GPR, %struct.GPR* %12834, i32 0, i32 5
  %12836 = getelementptr inbounds %struct.Reg, %struct.Reg* %12835, i32 0, i32 0
  %RCX.i258 = bitcast %union.anon* %12836 to i64*
  %12837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12838 = getelementptr inbounds %struct.GPR, %struct.GPR* %12837, i32 0, i32 15
  %12839 = getelementptr inbounds %struct.Reg, %struct.Reg* %12838, i32 0, i32 0
  %RBP.i259 = bitcast %union.anon* %12839 to i64*
  %12840 = load i64, i64* %RBP.i259
  %12841 = load i64, i64* %RAX.i257
  %12842 = mul i64 %12841, 4
  %12843 = add i64 %12840, -224
  %12844 = add i64 %12843, %12842
  %12845 = load i64, i64* %PC.i256
  %12846 = add i64 %12845, 7
  store i64 %12846, i64* %PC.i256
  %12847 = inttoptr i64 %12844 to i32*
  %12848 = load i32, i32* %12847
  %12849 = zext i32 %12848 to i64
  store i64 %12849, i64* %RCX.i258, align 8
  store %struct.Memory* %loadMem_45fd6c, %struct.Memory** %MEMORY
  %loadMem_45fd73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12851 = getelementptr inbounds %struct.GPR, %struct.GPR* %12850, i32 0, i32 33
  %12852 = getelementptr inbounds %struct.Reg, %struct.Reg* %12851, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %12852 to i64*
  %12853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12854 = getelementptr inbounds %struct.GPR, %struct.GPR* %12853, i32 0, i32 1
  %12855 = getelementptr inbounds %struct.Reg, %struct.Reg* %12854, i32 0, i32 0
  %RAX.i254 = bitcast %union.anon* %12855 to i64*
  %12856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12857 = getelementptr inbounds %struct.GPR, %struct.GPR* %12856, i32 0, i32 15
  %12858 = getelementptr inbounds %struct.Reg, %struct.Reg* %12857, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %12858 to i64*
  %12859 = load i64, i64* %RBP.i255
  %12860 = sub i64 %12859, 16
  %12861 = load i64, i64* %PC.i253
  %12862 = add i64 %12861, 4
  store i64 %12862, i64* %PC.i253
  %12863 = inttoptr i64 %12860 to i32*
  %12864 = load i32, i32* %12863
  %12865 = sext i32 %12864 to i64
  store i64 %12865, i64* %RAX.i254, align 8
  store %struct.Memory* %loadMem_45fd73, %struct.Memory** %MEMORY
  %loadMem_45fd77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12867 = getelementptr inbounds %struct.GPR, %struct.GPR* %12866, i32 0, i32 33
  %12868 = getelementptr inbounds %struct.Reg, %struct.Reg* %12867, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %12868 to i64*
  %12869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12870 = getelementptr inbounds %struct.GPR, %struct.GPR* %12869, i32 0, i32 1
  %12871 = getelementptr inbounds %struct.Reg, %struct.Reg* %12870, i32 0, i32 0
  %RAX.i250 = bitcast %union.anon* %12871 to i64*
  %12872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12873 = getelementptr inbounds %struct.GPR, %struct.GPR* %12872, i32 0, i32 5
  %12874 = getelementptr inbounds %struct.Reg, %struct.Reg* %12873, i32 0, i32 0
  %RCX.i251 = bitcast %union.anon* %12874 to i64*
  %12875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12876 = getelementptr inbounds %struct.GPR, %struct.GPR* %12875, i32 0, i32 15
  %12877 = getelementptr inbounds %struct.Reg, %struct.Reg* %12876, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %12877 to i64*
  %12878 = load i64, i64* %RCX.i251
  %12879 = load i64, i64* %RBP.i252
  %12880 = load i64, i64* %RAX.i250
  %12881 = mul i64 %12880, 4
  %12882 = add i64 %12879, -192
  %12883 = add i64 %12882, %12881
  %12884 = load i64, i64* %PC.i249
  %12885 = add i64 %12884, 7
  store i64 %12885, i64* %PC.i249
  %12886 = trunc i64 %12878 to i32
  %12887 = inttoptr i64 %12883 to i32*
  %12888 = load i32, i32* %12887
  %12889 = sub i32 %12886, %12888
  %12890 = zext i32 %12889 to i64
  store i64 %12890, i64* %RCX.i251, align 8
  %12891 = icmp ult i32 %12886, %12888
  %12892 = zext i1 %12891 to i8
  %12893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12892, i8* %12893, align 1
  %12894 = and i32 %12889, 255
  %12895 = call i32 @llvm.ctpop.i32(i32 %12894)
  %12896 = trunc i32 %12895 to i8
  %12897 = and i8 %12896, 1
  %12898 = xor i8 %12897, 1
  %12899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12898, i8* %12899, align 1
  %12900 = xor i32 %12888, %12886
  %12901 = xor i32 %12900, %12889
  %12902 = lshr i32 %12901, 4
  %12903 = trunc i32 %12902 to i8
  %12904 = and i8 %12903, 1
  %12905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12904, i8* %12905, align 1
  %12906 = icmp eq i32 %12889, 0
  %12907 = zext i1 %12906 to i8
  %12908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12907, i8* %12908, align 1
  %12909 = lshr i32 %12889, 31
  %12910 = trunc i32 %12909 to i8
  %12911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12910, i8* %12911, align 1
  %12912 = lshr i32 %12886, 31
  %12913 = lshr i32 %12888, 31
  %12914 = xor i32 %12913, %12912
  %12915 = xor i32 %12909, %12912
  %12916 = add i32 %12915, %12914
  %12917 = icmp eq i32 %12916, 2
  %12918 = zext i1 %12917 to i8
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12918, i8* %12919, align 1
  store %struct.Memory* %loadMem_45fd77, %struct.Memory** %MEMORY
  %loadMem_45fd7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12921 = getelementptr inbounds %struct.GPR, %struct.GPR* %12920, i32 0, i32 33
  %12922 = getelementptr inbounds %struct.Reg, %struct.Reg* %12921, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %12922 to i64*
  %12923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12924 = getelementptr inbounds %struct.GPR, %struct.GPR* %12923, i32 0, i32 1
  %12925 = getelementptr inbounds %struct.Reg, %struct.Reg* %12924, i32 0, i32 0
  %RAX.i247 = bitcast %union.anon* %12925 to i64*
  %12926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12927 = getelementptr inbounds %struct.GPR, %struct.GPR* %12926, i32 0, i32 15
  %12928 = getelementptr inbounds %struct.Reg, %struct.Reg* %12927, i32 0, i32 0
  %RBP.i248 = bitcast %union.anon* %12928 to i64*
  %12929 = load i64, i64* %RBP.i248
  %12930 = sub i64 %12929, 16
  %12931 = load i64, i64* %PC.i246
  %12932 = add i64 %12931, 4
  store i64 %12932, i64* %PC.i246
  %12933 = inttoptr i64 %12930 to i32*
  %12934 = load i32, i32* %12933
  %12935 = sext i32 %12934 to i64
  store i64 %12935, i64* %RAX.i247, align 8
  store %struct.Memory* %loadMem_45fd7e, %struct.Memory** %MEMORY
  %loadMem_45fd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12937 = getelementptr inbounds %struct.GPR, %struct.GPR* %12936, i32 0, i32 33
  %12938 = getelementptr inbounds %struct.Reg, %struct.Reg* %12937, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %12938 to i64*
  %12939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12940 = getelementptr inbounds %struct.GPR, %struct.GPR* %12939, i32 0, i32 5
  %12941 = getelementptr inbounds %struct.Reg, %struct.Reg* %12940, i32 0, i32 0
  %ECX.i243 = bitcast %union.anon* %12941 to i32*
  %12942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12943 = getelementptr inbounds %struct.GPR, %struct.GPR* %12942, i32 0, i32 1
  %12944 = getelementptr inbounds %struct.Reg, %struct.Reg* %12943, i32 0, i32 0
  %RAX.i244 = bitcast %union.anon* %12944 to i64*
  %12945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12946 = getelementptr inbounds %struct.GPR, %struct.GPR* %12945, i32 0, i32 15
  %12947 = getelementptr inbounds %struct.Reg, %struct.Reg* %12946, i32 0, i32 0
  %RBP.i245 = bitcast %union.anon* %12947 to i64*
  %12948 = load i64, i64* %RBP.i245
  %12949 = load i64, i64* %RAX.i244
  %12950 = mul i64 %12949, 4
  %12951 = add i64 %12948, -448
  %12952 = add i64 %12951, %12950
  %12953 = load i32, i32* %ECX.i243
  %12954 = zext i32 %12953 to i64
  %12955 = load i64, i64* %PC.i242
  %12956 = add i64 %12955, 7
  store i64 %12956, i64* %PC.i242
  %12957 = inttoptr i64 %12952 to i32*
  store i32 %12953, i32* %12957
  store %struct.Memory* %loadMem_45fd82, %struct.Memory** %MEMORY
  %loadMem_45fd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12959 = getelementptr inbounds %struct.GPR, %struct.GPR* %12958, i32 0, i32 33
  %12960 = getelementptr inbounds %struct.Reg, %struct.Reg* %12959, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %12960 to i64*
  %12961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12962 = getelementptr inbounds %struct.GPR, %struct.GPR* %12961, i32 0, i32 1
  %12963 = getelementptr inbounds %struct.Reg, %struct.Reg* %12962, i32 0, i32 0
  %RAX.i240 = bitcast %union.anon* %12963 to i64*
  %12964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12965 = getelementptr inbounds %struct.GPR, %struct.GPR* %12964, i32 0, i32 15
  %12966 = getelementptr inbounds %struct.Reg, %struct.Reg* %12965, i32 0, i32 0
  %RBP.i241 = bitcast %union.anon* %12966 to i64*
  %12967 = load i64, i64* %RBP.i241
  %12968 = sub i64 %12967, 16
  %12969 = load i64, i64* %PC.i239
  %12970 = add i64 %12969, 4
  store i64 %12970, i64* %PC.i239
  %12971 = inttoptr i64 %12968 to i32*
  %12972 = load i32, i32* %12971
  %12973 = sext i32 %12972 to i64
  store i64 %12973, i64* %RAX.i240, align 8
  store %struct.Memory* %loadMem_45fd89, %struct.Memory** %MEMORY
  %loadMem_45fd8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12975 = getelementptr inbounds %struct.GPR, %struct.GPR* %12974, i32 0, i32 33
  %12976 = getelementptr inbounds %struct.Reg, %struct.Reg* %12975, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %12976 to i64*
  %12977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12978 = getelementptr inbounds %struct.GPR, %struct.GPR* %12977, i32 0, i32 1
  %12979 = getelementptr inbounds %struct.Reg, %struct.Reg* %12978, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %12979 to i64*
  %12980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12981 = getelementptr inbounds %struct.GPR, %struct.GPR* %12980, i32 0, i32 5
  %12982 = getelementptr inbounds %struct.Reg, %struct.Reg* %12981, i32 0, i32 0
  %RCX.i237 = bitcast %union.anon* %12982 to i64*
  %12983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12984 = getelementptr inbounds %struct.GPR, %struct.GPR* %12983, i32 0, i32 15
  %12985 = getelementptr inbounds %struct.Reg, %struct.Reg* %12984, i32 0, i32 0
  %RBP.i238 = bitcast %union.anon* %12985 to i64*
  %12986 = load i64, i64* %RBP.i238
  %12987 = load i64, i64* %RAX.i236
  %12988 = mul i64 %12987, 4
  %12989 = add i64 %12986, -160
  %12990 = add i64 %12989, %12988
  %12991 = load i64, i64* %PC.i235
  %12992 = add i64 %12991, 7
  store i64 %12992, i64* %PC.i235
  %12993 = inttoptr i64 %12990 to i32*
  %12994 = load i32, i32* %12993
  %12995 = zext i32 %12994 to i64
  store i64 %12995, i64* %RCX.i237, align 8
  store %struct.Memory* %loadMem_45fd8d, %struct.Memory** %MEMORY
  %loadMem_45fd94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12997 = getelementptr inbounds %struct.GPR, %struct.GPR* %12996, i32 0, i32 33
  %12998 = getelementptr inbounds %struct.Reg, %struct.Reg* %12997, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %12998 to i64*
  %12999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13000 = getelementptr inbounds %struct.GPR, %struct.GPR* %12999, i32 0, i32 1
  %13001 = getelementptr inbounds %struct.Reg, %struct.Reg* %13000, i32 0, i32 0
  %RAX.i233 = bitcast %union.anon* %13001 to i64*
  %13002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13003 = getelementptr inbounds %struct.GPR, %struct.GPR* %13002, i32 0, i32 15
  %13004 = getelementptr inbounds %struct.Reg, %struct.Reg* %13003, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %13004 to i64*
  %13005 = load i64, i64* %RBP.i234
  %13006 = sub i64 %13005, 16
  %13007 = load i64, i64* %PC.i232
  %13008 = add i64 %13007, 4
  store i64 %13008, i64* %PC.i232
  %13009 = inttoptr i64 %13006 to i32*
  %13010 = load i32, i32* %13009
  %13011 = sext i32 %13010 to i64
  store i64 %13011, i64* %RAX.i233, align 8
  store %struct.Memory* %loadMem_45fd94, %struct.Memory** %MEMORY
  %loadMem_45fd98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13013 = getelementptr inbounds %struct.GPR, %struct.GPR* %13012, i32 0, i32 33
  %13014 = getelementptr inbounds %struct.Reg, %struct.Reg* %13013, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %13014 to i64*
  %13015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13016 = getelementptr inbounds %struct.GPR, %struct.GPR* %13015, i32 0, i32 1
  %13017 = getelementptr inbounds %struct.Reg, %struct.Reg* %13016, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %13017 to i64*
  %13018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13019 = getelementptr inbounds %struct.GPR, %struct.GPR* %13018, i32 0, i32 5
  %13020 = getelementptr inbounds %struct.Reg, %struct.Reg* %13019, i32 0, i32 0
  %RCX.i230 = bitcast %union.anon* %13020 to i64*
  %13021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13022 = getelementptr inbounds %struct.GPR, %struct.GPR* %13021, i32 0, i32 15
  %13023 = getelementptr inbounds %struct.Reg, %struct.Reg* %13022, i32 0, i32 0
  %RBP.i231 = bitcast %union.anon* %13023 to i64*
  %13024 = load i64, i64* %RCX.i230
  %13025 = load i64, i64* %RBP.i231
  %13026 = load i64, i64* %RAX.i229
  %13027 = mul i64 %13026, 4
  %13028 = add i64 %13025, -128
  %13029 = add i64 %13028, %13027
  %13030 = load i64, i64* %PC.i228
  %13031 = add i64 %13030, 4
  store i64 %13031, i64* %PC.i228
  %13032 = trunc i64 %13024 to i32
  %13033 = inttoptr i64 %13029 to i32*
  %13034 = load i32, i32* %13033
  %13035 = add i32 %13034, %13032
  %13036 = zext i32 %13035 to i64
  store i64 %13036, i64* %RCX.i230, align 8
  %13037 = icmp ult i32 %13035, %13032
  %13038 = icmp ult i32 %13035, %13034
  %13039 = or i1 %13037, %13038
  %13040 = zext i1 %13039 to i8
  %13041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13040, i8* %13041, align 1
  %13042 = and i32 %13035, 255
  %13043 = call i32 @llvm.ctpop.i32(i32 %13042)
  %13044 = trunc i32 %13043 to i8
  %13045 = and i8 %13044, 1
  %13046 = xor i8 %13045, 1
  %13047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13046, i8* %13047, align 1
  %13048 = xor i32 %13034, %13032
  %13049 = xor i32 %13048, %13035
  %13050 = lshr i32 %13049, 4
  %13051 = trunc i32 %13050 to i8
  %13052 = and i8 %13051, 1
  %13053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13052, i8* %13053, align 1
  %13054 = icmp eq i32 %13035, 0
  %13055 = zext i1 %13054 to i8
  %13056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13055, i8* %13056, align 1
  %13057 = lshr i32 %13035, 31
  %13058 = trunc i32 %13057 to i8
  %13059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13058, i8* %13059, align 1
  %13060 = lshr i32 %13032, 31
  %13061 = lshr i32 %13034, 31
  %13062 = xor i32 %13057, %13060
  %13063 = xor i32 %13057, %13061
  %13064 = add i32 %13062, %13063
  %13065 = icmp eq i32 %13064, 2
  %13066 = zext i1 %13065 to i8
  %13067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13066, i8* %13067, align 1
  store %struct.Memory* %loadMem_45fd98, %struct.Memory** %MEMORY
  %loadMem_45fd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13069 = getelementptr inbounds %struct.GPR, %struct.GPR* %13068, i32 0, i32 33
  %13070 = getelementptr inbounds %struct.Reg, %struct.Reg* %13069, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %13070 to i64*
  %13071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13072 = getelementptr inbounds %struct.GPR, %struct.GPR* %13071, i32 0, i32 1
  %13073 = getelementptr inbounds %struct.Reg, %struct.Reg* %13072, i32 0, i32 0
  %RAX.i226 = bitcast %union.anon* %13073 to i64*
  %13074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13075 = getelementptr inbounds %struct.GPR, %struct.GPR* %13074, i32 0, i32 15
  %13076 = getelementptr inbounds %struct.Reg, %struct.Reg* %13075, i32 0, i32 0
  %RBP.i227 = bitcast %union.anon* %13076 to i64*
  %13077 = load i64, i64* %RBP.i227
  %13078 = sub i64 %13077, 16
  %13079 = load i64, i64* %PC.i225
  %13080 = add i64 %13079, 4
  store i64 %13080, i64* %PC.i225
  %13081 = inttoptr i64 %13078 to i32*
  %13082 = load i32, i32* %13081
  %13083 = sext i32 %13082 to i64
  store i64 %13083, i64* %RAX.i226, align 8
  store %struct.Memory* %loadMem_45fd9c, %struct.Memory** %MEMORY
  %loadMem_45fda0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13085 = getelementptr inbounds %struct.GPR, %struct.GPR* %13084, i32 0, i32 33
  %13086 = getelementptr inbounds %struct.Reg, %struct.Reg* %13085, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %13086 to i64*
  %13087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13088 = getelementptr inbounds %struct.GPR, %struct.GPR* %13087, i32 0, i32 5
  %13089 = getelementptr inbounds %struct.Reg, %struct.Reg* %13088, i32 0, i32 0
  %ECX.i222 = bitcast %union.anon* %13089 to i32*
  %13090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13091 = getelementptr inbounds %struct.GPR, %struct.GPR* %13090, i32 0, i32 1
  %13092 = getelementptr inbounds %struct.Reg, %struct.Reg* %13091, i32 0, i32 0
  %RAX.i223 = bitcast %union.anon* %13092 to i64*
  %13093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13094 = getelementptr inbounds %struct.GPR, %struct.GPR* %13093, i32 0, i32 15
  %13095 = getelementptr inbounds %struct.Reg, %struct.Reg* %13094, i32 0, i32 0
  %RBP.i224 = bitcast %union.anon* %13095 to i64*
  %13096 = load i64, i64* %RBP.i224
  %13097 = load i64, i64* %RAX.i223
  %13098 = mul i64 %13097, 4
  %13099 = add i64 %13096, -416
  %13100 = add i64 %13099, %13098
  %13101 = load i32, i32* %ECX.i222
  %13102 = zext i32 %13101 to i64
  %13103 = load i64, i64* %PC.i221
  %13104 = add i64 %13103, 7
  store i64 %13104, i64* %PC.i221
  %13105 = inttoptr i64 %13100 to i32*
  store i32 %13101, i32* %13105
  store %struct.Memory* %loadMem_45fda0, %struct.Memory** %MEMORY
  %loadMem_45fda7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13107 = getelementptr inbounds %struct.GPR, %struct.GPR* %13106, i32 0, i32 33
  %13108 = getelementptr inbounds %struct.Reg, %struct.Reg* %13107, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %13108 to i64*
  %13109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13110 = getelementptr inbounds %struct.GPR, %struct.GPR* %13109, i32 0, i32 1
  %13111 = getelementptr inbounds %struct.Reg, %struct.Reg* %13110, i32 0, i32 0
  %RAX.i219 = bitcast %union.anon* %13111 to i64*
  %13112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13113 = getelementptr inbounds %struct.GPR, %struct.GPR* %13112, i32 0, i32 15
  %13114 = getelementptr inbounds %struct.Reg, %struct.Reg* %13113, i32 0, i32 0
  %RBP.i220 = bitcast %union.anon* %13114 to i64*
  %13115 = load i64, i64* %RBP.i220
  %13116 = sub i64 %13115, 16
  %13117 = load i64, i64* %PC.i218
  %13118 = add i64 %13117, 4
  store i64 %13118, i64* %PC.i218
  %13119 = inttoptr i64 %13116 to i32*
  %13120 = load i32, i32* %13119
  %13121 = sext i32 %13120 to i64
  store i64 %13121, i64* %RAX.i219, align 8
  store %struct.Memory* %loadMem_45fda7, %struct.Memory** %MEMORY
  %loadMem_45fdab = load %struct.Memory*, %struct.Memory** %MEMORY
  %13122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13123 = getelementptr inbounds %struct.GPR, %struct.GPR* %13122, i32 0, i32 33
  %13124 = getelementptr inbounds %struct.Reg, %struct.Reg* %13123, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %13124 to i64*
  %13125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13126 = getelementptr inbounds %struct.GPR, %struct.GPR* %13125, i32 0, i32 1
  %13127 = getelementptr inbounds %struct.Reg, %struct.Reg* %13126, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %13127 to i64*
  %13128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13129 = getelementptr inbounds %struct.GPR, %struct.GPR* %13128, i32 0, i32 5
  %13130 = getelementptr inbounds %struct.Reg, %struct.Reg* %13129, i32 0, i32 0
  %RCX.i216 = bitcast %union.anon* %13130 to i64*
  %13131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13132 = getelementptr inbounds %struct.GPR, %struct.GPR* %13131, i32 0, i32 15
  %13133 = getelementptr inbounds %struct.Reg, %struct.Reg* %13132, i32 0, i32 0
  %RBP.i217 = bitcast %union.anon* %13133 to i64*
  %13134 = load i64, i64* %RBP.i217
  %13135 = load i64, i64* %RAX.i215
  %13136 = mul i64 %13135, 4
  %13137 = add i64 %13134, -160
  %13138 = add i64 %13137, %13136
  %13139 = load i64, i64* %PC.i214
  %13140 = add i64 %13139, 7
  store i64 %13140, i64* %PC.i214
  %13141 = inttoptr i64 %13138 to i32*
  %13142 = load i32, i32* %13141
  %13143 = zext i32 %13142 to i64
  store i64 %13143, i64* %RCX.i216, align 8
  store %struct.Memory* %loadMem_45fdab, %struct.Memory** %MEMORY
  %loadMem_45fdb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13145 = getelementptr inbounds %struct.GPR, %struct.GPR* %13144, i32 0, i32 33
  %13146 = getelementptr inbounds %struct.Reg, %struct.Reg* %13145, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %13146 to i64*
  %13147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13148 = getelementptr inbounds %struct.GPR, %struct.GPR* %13147, i32 0, i32 1
  %13149 = getelementptr inbounds %struct.Reg, %struct.Reg* %13148, i32 0, i32 0
  %RAX.i212 = bitcast %union.anon* %13149 to i64*
  %13150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13151 = getelementptr inbounds %struct.GPR, %struct.GPR* %13150, i32 0, i32 15
  %13152 = getelementptr inbounds %struct.Reg, %struct.Reg* %13151, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %13152 to i64*
  %13153 = load i64, i64* %RBP.i213
  %13154 = sub i64 %13153, 16
  %13155 = load i64, i64* %PC.i211
  %13156 = add i64 %13155, 4
  store i64 %13156, i64* %PC.i211
  %13157 = inttoptr i64 %13154 to i32*
  %13158 = load i32, i32* %13157
  %13159 = sext i32 %13158 to i64
  store i64 %13159, i64* %RAX.i212, align 8
  store %struct.Memory* %loadMem_45fdb2, %struct.Memory** %MEMORY
  %loadMem_45fdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13161 = getelementptr inbounds %struct.GPR, %struct.GPR* %13160, i32 0, i32 33
  %13162 = getelementptr inbounds %struct.Reg, %struct.Reg* %13161, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %13162 to i64*
  %13163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13164 = getelementptr inbounds %struct.GPR, %struct.GPR* %13163, i32 0, i32 1
  %13165 = getelementptr inbounds %struct.Reg, %struct.Reg* %13164, i32 0, i32 0
  %RAX.i208 = bitcast %union.anon* %13165 to i64*
  %13166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13167 = getelementptr inbounds %struct.GPR, %struct.GPR* %13166, i32 0, i32 5
  %13168 = getelementptr inbounds %struct.Reg, %struct.Reg* %13167, i32 0, i32 0
  %RCX.i209 = bitcast %union.anon* %13168 to i64*
  %13169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13170 = getelementptr inbounds %struct.GPR, %struct.GPR* %13169, i32 0, i32 15
  %13171 = getelementptr inbounds %struct.Reg, %struct.Reg* %13170, i32 0, i32 0
  %RBP.i210 = bitcast %union.anon* %13171 to i64*
  %13172 = load i64, i64* %RCX.i209
  %13173 = load i64, i64* %RBP.i210
  %13174 = load i64, i64* %RAX.i208
  %13175 = mul i64 %13174, 4
  %13176 = add i64 %13173, -128
  %13177 = add i64 %13176, %13175
  %13178 = load i64, i64* %PC.i207
  %13179 = add i64 %13178, 4
  store i64 %13179, i64* %PC.i207
  %13180 = trunc i64 %13172 to i32
  %13181 = inttoptr i64 %13177 to i32*
  %13182 = load i32, i32* %13181
  %13183 = sub i32 %13180, %13182
  %13184 = zext i32 %13183 to i64
  store i64 %13184, i64* %RCX.i209, align 8
  %13185 = icmp ult i32 %13180, %13182
  %13186 = zext i1 %13185 to i8
  %13187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13186, i8* %13187, align 1
  %13188 = and i32 %13183, 255
  %13189 = call i32 @llvm.ctpop.i32(i32 %13188)
  %13190 = trunc i32 %13189 to i8
  %13191 = and i8 %13190, 1
  %13192 = xor i8 %13191, 1
  %13193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13192, i8* %13193, align 1
  %13194 = xor i32 %13182, %13180
  %13195 = xor i32 %13194, %13183
  %13196 = lshr i32 %13195, 4
  %13197 = trunc i32 %13196 to i8
  %13198 = and i8 %13197, 1
  %13199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13198, i8* %13199, align 1
  %13200 = icmp eq i32 %13183, 0
  %13201 = zext i1 %13200 to i8
  %13202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13201, i8* %13202, align 1
  %13203 = lshr i32 %13183, 31
  %13204 = trunc i32 %13203 to i8
  %13205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13204, i8* %13205, align 1
  %13206 = lshr i32 %13180, 31
  %13207 = lshr i32 %13182, 31
  %13208 = xor i32 %13207, %13206
  %13209 = xor i32 %13203, %13206
  %13210 = add i32 %13209, %13208
  %13211 = icmp eq i32 %13210, 2
  %13212 = zext i1 %13211 to i8
  %13213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13212, i8* %13213, align 1
  store %struct.Memory* %loadMem_45fdb6, %struct.Memory** %MEMORY
  %loadMem_45fdba = load %struct.Memory*, %struct.Memory** %MEMORY
  %13214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13215 = getelementptr inbounds %struct.GPR, %struct.GPR* %13214, i32 0, i32 33
  %13216 = getelementptr inbounds %struct.Reg, %struct.Reg* %13215, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %13216 to i64*
  %13217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13218 = getelementptr inbounds %struct.GPR, %struct.GPR* %13217, i32 0, i32 1
  %13219 = getelementptr inbounds %struct.Reg, %struct.Reg* %13218, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %13219 to i64*
  %13220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13221 = getelementptr inbounds %struct.GPR, %struct.GPR* %13220, i32 0, i32 15
  %13222 = getelementptr inbounds %struct.Reg, %struct.Reg* %13221, i32 0, i32 0
  %RBP.i206 = bitcast %union.anon* %13222 to i64*
  %13223 = load i64, i64* %RBP.i206
  %13224 = sub i64 %13223, 16
  %13225 = load i64, i64* %PC.i204
  %13226 = add i64 %13225, 4
  store i64 %13226, i64* %PC.i204
  %13227 = inttoptr i64 %13224 to i32*
  %13228 = load i32, i32* %13227
  %13229 = sext i32 %13228 to i64
  store i64 %13229, i64* %RAX.i205, align 8
  store %struct.Memory* %loadMem_45fdba, %struct.Memory** %MEMORY
  %loadMem_45fdbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %13230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13231 = getelementptr inbounds %struct.GPR, %struct.GPR* %13230, i32 0, i32 33
  %13232 = getelementptr inbounds %struct.Reg, %struct.Reg* %13231, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %13232 to i64*
  %13233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13234 = getelementptr inbounds %struct.GPR, %struct.GPR* %13233, i32 0, i32 5
  %13235 = getelementptr inbounds %struct.Reg, %struct.Reg* %13234, i32 0, i32 0
  %ECX.i201 = bitcast %union.anon* %13235 to i32*
  %13236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13237 = getelementptr inbounds %struct.GPR, %struct.GPR* %13236, i32 0, i32 1
  %13238 = getelementptr inbounds %struct.Reg, %struct.Reg* %13237, i32 0, i32 0
  %RAX.i202 = bitcast %union.anon* %13238 to i64*
  %13239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13240 = getelementptr inbounds %struct.GPR, %struct.GPR* %13239, i32 0, i32 15
  %13241 = getelementptr inbounds %struct.Reg, %struct.Reg* %13240, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %13241 to i64*
  %13242 = load i64, i64* %RBP.i203
  %13243 = load i64, i64* %RAX.i202
  %13244 = mul i64 %13243, 4
  %13245 = add i64 %13242, -384
  %13246 = add i64 %13245, %13244
  %13247 = load i32, i32* %ECX.i201
  %13248 = zext i32 %13247 to i64
  %13249 = load i64, i64* %PC.i200
  %13250 = add i64 %13249, 7
  store i64 %13250, i64* %PC.i200
  %13251 = inttoptr i64 %13246 to i32*
  store i32 %13247, i32* %13251
  store %struct.Memory* %loadMem_45fdbe, %struct.Memory** %MEMORY
  %loadMem_45fdc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13253 = getelementptr inbounds %struct.GPR, %struct.GPR* %13252, i32 0, i32 33
  %13254 = getelementptr inbounds %struct.Reg, %struct.Reg* %13253, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %13254 to i64*
  %13255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13256 = getelementptr inbounds %struct.GPR, %struct.GPR* %13255, i32 0, i32 1
  %13257 = getelementptr inbounds %struct.Reg, %struct.Reg* %13256, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %13257 to i64*
  %13258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13259 = getelementptr inbounds %struct.GPR, %struct.GPR* %13258, i32 0, i32 15
  %13260 = getelementptr inbounds %struct.Reg, %struct.Reg* %13259, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %13260 to i64*
  %13261 = load i64, i64* %RBP.i199
  %13262 = sub i64 %13261, 16
  %13263 = load i64, i64* %PC.i197
  %13264 = add i64 %13263, 4
  store i64 %13264, i64* %PC.i197
  %13265 = inttoptr i64 %13262 to i32*
  %13266 = load i32, i32* %13265
  %13267 = sext i32 %13266 to i64
  store i64 %13267, i64* %RAX.i198, align 8
  store %struct.Memory* %loadMem_45fdc5, %struct.Memory** %MEMORY
  %loadMem_45fdc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13269 = getelementptr inbounds %struct.GPR, %struct.GPR* %13268, i32 0, i32 33
  %13270 = getelementptr inbounds %struct.Reg, %struct.Reg* %13269, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %13270 to i64*
  %13271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13272 = getelementptr inbounds %struct.GPR, %struct.GPR* %13271, i32 0, i32 1
  %13273 = getelementptr inbounds %struct.Reg, %struct.Reg* %13272, i32 0, i32 0
  %RAX.i194 = bitcast %union.anon* %13273 to i64*
  %13274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13275 = getelementptr inbounds %struct.GPR, %struct.GPR* %13274, i32 0, i32 5
  %13276 = getelementptr inbounds %struct.Reg, %struct.Reg* %13275, i32 0, i32 0
  %RCX.i195 = bitcast %union.anon* %13276 to i64*
  %13277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13278 = getelementptr inbounds %struct.GPR, %struct.GPR* %13277, i32 0, i32 15
  %13279 = getelementptr inbounds %struct.Reg, %struct.Reg* %13278, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %13279 to i64*
  %13280 = load i64, i64* %RBP.i196
  %13281 = load i64, i64* %RAX.i194
  %13282 = mul i64 %13281, 4
  %13283 = add i64 %13280, -96
  %13284 = add i64 %13283, %13282
  %13285 = load i64, i64* %PC.i193
  %13286 = add i64 %13285, 4
  store i64 %13286, i64* %PC.i193
  %13287 = inttoptr i64 %13284 to i32*
  %13288 = load i32, i32* %13287
  %13289 = zext i32 %13288 to i64
  store i64 %13289, i64* %RCX.i195, align 8
  store %struct.Memory* %loadMem_45fdc9, %struct.Memory** %MEMORY
  %loadMem_45fdcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13291 = getelementptr inbounds %struct.GPR, %struct.GPR* %13290, i32 0, i32 33
  %13292 = getelementptr inbounds %struct.Reg, %struct.Reg* %13291, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %13292 to i64*
  %13293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13294 = getelementptr inbounds %struct.GPR, %struct.GPR* %13293, i32 0, i32 1
  %13295 = getelementptr inbounds %struct.Reg, %struct.Reg* %13294, i32 0, i32 0
  %RAX.i191 = bitcast %union.anon* %13295 to i64*
  %13296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13297 = getelementptr inbounds %struct.GPR, %struct.GPR* %13296, i32 0, i32 15
  %13298 = getelementptr inbounds %struct.Reg, %struct.Reg* %13297, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %13298 to i64*
  %13299 = load i64, i64* %RBP.i192
  %13300 = sub i64 %13299, 16
  %13301 = load i64, i64* %PC.i190
  %13302 = add i64 %13301, 4
  store i64 %13302, i64* %PC.i190
  %13303 = inttoptr i64 %13300 to i32*
  %13304 = load i32, i32* %13303
  %13305 = sext i32 %13304 to i64
  store i64 %13305, i64* %RAX.i191, align 8
  store %struct.Memory* %loadMem_45fdcd, %struct.Memory** %MEMORY
  %loadMem_45fdd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13307 = getelementptr inbounds %struct.GPR, %struct.GPR* %13306, i32 0, i32 33
  %13308 = getelementptr inbounds %struct.Reg, %struct.Reg* %13307, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %13308 to i64*
  %13309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13310 = getelementptr inbounds %struct.GPR, %struct.GPR* %13309, i32 0, i32 1
  %13311 = getelementptr inbounds %struct.Reg, %struct.Reg* %13310, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %13311 to i64*
  %13312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13313 = getelementptr inbounds %struct.GPR, %struct.GPR* %13312, i32 0, i32 5
  %13314 = getelementptr inbounds %struct.Reg, %struct.Reg* %13313, i32 0, i32 0
  %RCX.i188 = bitcast %union.anon* %13314 to i64*
  %13315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13316 = getelementptr inbounds %struct.GPR, %struct.GPR* %13315, i32 0, i32 15
  %13317 = getelementptr inbounds %struct.Reg, %struct.Reg* %13316, i32 0, i32 0
  %RBP.i189 = bitcast %union.anon* %13317 to i64*
  %13318 = load i64, i64* %RCX.i188
  %13319 = load i64, i64* %RBP.i189
  %13320 = load i64, i64* %RAX.i187
  %13321 = mul i64 %13320, 4
  %13322 = add i64 %13319, -64
  %13323 = add i64 %13322, %13321
  %13324 = load i64, i64* %PC.i186
  %13325 = add i64 %13324, 4
  store i64 %13325, i64* %PC.i186
  %13326 = trunc i64 %13318 to i32
  %13327 = inttoptr i64 %13323 to i32*
  %13328 = load i32, i32* %13327
  %13329 = add i32 %13328, %13326
  %13330 = zext i32 %13329 to i64
  store i64 %13330, i64* %RCX.i188, align 8
  %13331 = icmp ult i32 %13329, %13326
  %13332 = icmp ult i32 %13329, %13328
  %13333 = or i1 %13331, %13332
  %13334 = zext i1 %13333 to i8
  %13335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13334, i8* %13335, align 1
  %13336 = and i32 %13329, 255
  %13337 = call i32 @llvm.ctpop.i32(i32 %13336)
  %13338 = trunc i32 %13337 to i8
  %13339 = and i8 %13338, 1
  %13340 = xor i8 %13339, 1
  %13341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13340, i8* %13341, align 1
  %13342 = xor i32 %13328, %13326
  %13343 = xor i32 %13342, %13329
  %13344 = lshr i32 %13343, 4
  %13345 = trunc i32 %13344 to i8
  %13346 = and i8 %13345, 1
  %13347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13346, i8* %13347, align 1
  %13348 = icmp eq i32 %13329, 0
  %13349 = zext i1 %13348 to i8
  %13350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13349, i8* %13350, align 1
  %13351 = lshr i32 %13329, 31
  %13352 = trunc i32 %13351 to i8
  %13353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13352, i8* %13353, align 1
  %13354 = lshr i32 %13326, 31
  %13355 = lshr i32 %13328, 31
  %13356 = xor i32 %13351, %13354
  %13357 = xor i32 %13351, %13355
  %13358 = add i32 %13356, %13357
  %13359 = icmp eq i32 %13358, 2
  %13360 = zext i1 %13359 to i8
  %13361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13360, i8* %13361, align 1
  store %struct.Memory* %loadMem_45fdd1, %struct.Memory** %MEMORY
  %loadMem_45fdd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13363 = getelementptr inbounds %struct.GPR, %struct.GPR* %13362, i32 0, i32 33
  %13364 = getelementptr inbounds %struct.Reg, %struct.Reg* %13363, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %13364 to i64*
  %13365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13366 = getelementptr inbounds %struct.GPR, %struct.GPR* %13365, i32 0, i32 1
  %13367 = getelementptr inbounds %struct.Reg, %struct.Reg* %13366, i32 0, i32 0
  %RAX.i184 = bitcast %union.anon* %13367 to i64*
  %13368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13369 = getelementptr inbounds %struct.GPR, %struct.GPR* %13368, i32 0, i32 15
  %13370 = getelementptr inbounds %struct.Reg, %struct.Reg* %13369, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %13370 to i64*
  %13371 = load i64, i64* %RBP.i185
  %13372 = sub i64 %13371, 16
  %13373 = load i64, i64* %PC.i183
  %13374 = add i64 %13373, 4
  store i64 %13374, i64* %PC.i183
  %13375 = inttoptr i64 %13372 to i32*
  %13376 = load i32, i32* %13375
  %13377 = sext i32 %13376 to i64
  store i64 %13377, i64* %RAX.i184, align 8
  store %struct.Memory* %loadMem_45fdd5, %struct.Memory** %MEMORY
  %loadMem_45fdd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13379 = getelementptr inbounds %struct.GPR, %struct.GPR* %13378, i32 0, i32 33
  %13380 = getelementptr inbounds %struct.Reg, %struct.Reg* %13379, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %13380 to i64*
  %13381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13382 = getelementptr inbounds %struct.GPR, %struct.GPR* %13381, i32 0, i32 5
  %13383 = getelementptr inbounds %struct.Reg, %struct.Reg* %13382, i32 0, i32 0
  %ECX.i180 = bitcast %union.anon* %13383 to i32*
  %13384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13385 = getelementptr inbounds %struct.GPR, %struct.GPR* %13384, i32 0, i32 1
  %13386 = getelementptr inbounds %struct.Reg, %struct.Reg* %13385, i32 0, i32 0
  %RAX.i181 = bitcast %union.anon* %13386 to i64*
  %13387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13388 = getelementptr inbounds %struct.GPR, %struct.GPR* %13387, i32 0, i32 15
  %13389 = getelementptr inbounds %struct.Reg, %struct.Reg* %13388, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %13389 to i64*
  %13390 = load i64, i64* %RBP.i182
  %13391 = load i64, i64* %RAX.i181
  %13392 = mul i64 %13391, 4
  %13393 = add i64 %13390, -352
  %13394 = add i64 %13393, %13392
  %13395 = load i32, i32* %ECX.i180
  %13396 = zext i32 %13395 to i64
  %13397 = load i64, i64* %PC.i179
  %13398 = add i64 %13397, 7
  store i64 %13398, i64* %PC.i179
  %13399 = inttoptr i64 %13394 to i32*
  store i32 %13395, i32* %13399
  store %struct.Memory* %loadMem_45fdd9, %struct.Memory** %MEMORY
  %loadMem_45fde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13401 = getelementptr inbounds %struct.GPR, %struct.GPR* %13400, i32 0, i32 33
  %13402 = getelementptr inbounds %struct.Reg, %struct.Reg* %13401, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %13402 to i64*
  %13403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13404 = getelementptr inbounds %struct.GPR, %struct.GPR* %13403, i32 0, i32 1
  %13405 = getelementptr inbounds %struct.Reg, %struct.Reg* %13404, i32 0, i32 0
  %RAX.i177 = bitcast %union.anon* %13405 to i64*
  %13406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13407 = getelementptr inbounds %struct.GPR, %struct.GPR* %13406, i32 0, i32 15
  %13408 = getelementptr inbounds %struct.Reg, %struct.Reg* %13407, i32 0, i32 0
  %RBP.i178 = bitcast %union.anon* %13408 to i64*
  %13409 = load i64, i64* %RBP.i178
  %13410 = sub i64 %13409, 16
  %13411 = load i64, i64* %PC.i176
  %13412 = add i64 %13411, 4
  store i64 %13412, i64* %PC.i176
  %13413 = inttoptr i64 %13410 to i32*
  %13414 = load i32, i32* %13413
  %13415 = sext i32 %13414 to i64
  store i64 %13415, i64* %RAX.i177, align 8
  store %struct.Memory* %loadMem_45fde0, %struct.Memory** %MEMORY
  %loadMem_45fde4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13417 = getelementptr inbounds %struct.GPR, %struct.GPR* %13416, i32 0, i32 33
  %13418 = getelementptr inbounds %struct.Reg, %struct.Reg* %13417, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %13418 to i64*
  %13419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13420 = getelementptr inbounds %struct.GPR, %struct.GPR* %13419, i32 0, i32 1
  %13421 = getelementptr inbounds %struct.Reg, %struct.Reg* %13420, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %13421 to i64*
  %13422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13423 = getelementptr inbounds %struct.GPR, %struct.GPR* %13422, i32 0, i32 5
  %13424 = getelementptr inbounds %struct.Reg, %struct.Reg* %13423, i32 0, i32 0
  %RCX.i174 = bitcast %union.anon* %13424 to i64*
  %13425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13426 = getelementptr inbounds %struct.GPR, %struct.GPR* %13425, i32 0, i32 15
  %13427 = getelementptr inbounds %struct.Reg, %struct.Reg* %13426, i32 0, i32 0
  %RBP.i175 = bitcast %union.anon* %13427 to i64*
  %13428 = load i64, i64* %RBP.i175
  %13429 = load i64, i64* %RAX.i173
  %13430 = mul i64 %13429, 4
  %13431 = add i64 %13428, -96
  %13432 = add i64 %13431, %13430
  %13433 = load i64, i64* %PC.i172
  %13434 = add i64 %13433, 4
  store i64 %13434, i64* %PC.i172
  %13435 = inttoptr i64 %13432 to i32*
  %13436 = load i32, i32* %13435
  %13437 = zext i32 %13436 to i64
  store i64 %13437, i64* %RCX.i174, align 8
  store %struct.Memory* %loadMem_45fde4, %struct.Memory** %MEMORY
  %loadMem_45fde8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13439 = getelementptr inbounds %struct.GPR, %struct.GPR* %13438, i32 0, i32 33
  %13440 = getelementptr inbounds %struct.Reg, %struct.Reg* %13439, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %13440 to i64*
  %13441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13442 = getelementptr inbounds %struct.GPR, %struct.GPR* %13441, i32 0, i32 1
  %13443 = getelementptr inbounds %struct.Reg, %struct.Reg* %13442, i32 0, i32 0
  %RAX.i170 = bitcast %union.anon* %13443 to i64*
  %13444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13445 = getelementptr inbounds %struct.GPR, %struct.GPR* %13444, i32 0, i32 15
  %13446 = getelementptr inbounds %struct.Reg, %struct.Reg* %13445, i32 0, i32 0
  %RBP.i171 = bitcast %union.anon* %13446 to i64*
  %13447 = load i64, i64* %RBP.i171
  %13448 = sub i64 %13447, 16
  %13449 = load i64, i64* %PC.i169
  %13450 = add i64 %13449, 4
  store i64 %13450, i64* %PC.i169
  %13451 = inttoptr i64 %13448 to i32*
  %13452 = load i32, i32* %13451
  %13453 = sext i32 %13452 to i64
  store i64 %13453, i64* %RAX.i170, align 8
  store %struct.Memory* %loadMem_45fde8, %struct.Memory** %MEMORY
  %loadMem_45fdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13455 = getelementptr inbounds %struct.GPR, %struct.GPR* %13454, i32 0, i32 33
  %13456 = getelementptr inbounds %struct.Reg, %struct.Reg* %13455, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %13456 to i64*
  %13457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13458 = getelementptr inbounds %struct.GPR, %struct.GPR* %13457, i32 0, i32 1
  %13459 = getelementptr inbounds %struct.Reg, %struct.Reg* %13458, i32 0, i32 0
  %RAX.i166 = bitcast %union.anon* %13459 to i64*
  %13460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13461 = getelementptr inbounds %struct.GPR, %struct.GPR* %13460, i32 0, i32 5
  %13462 = getelementptr inbounds %struct.Reg, %struct.Reg* %13461, i32 0, i32 0
  %RCX.i167 = bitcast %union.anon* %13462 to i64*
  %13463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13464 = getelementptr inbounds %struct.GPR, %struct.GPR* %13463, i32 0, i32 15
  %13465 = getelementptr inbounds %struct.Reg, %struct.Reg* %13464, i32 0, i32 0
  %RBP.i168 = bitcast %union.anon* %13465 to i64*
  %13466 = load i64, i64* %RCX.i167
  %13467 = load i64, i64* %RBP.i168
  %13468 = load i64, i64* %RAX.i166
  %13469 = mul i64 %13468, 4
  %13470 = add i64 %13467, -64
  %13471 = add i64 %13470, %13469
  %13472 = load i64, i64* %PC.i165
  %13473 = add i64 %13472, 4
  store i64 %13473, i64* %PC.i165
  %13474 = trunc i64 %13466 to i32
  %13475 = inttoptr i64 %13471 to i32*
  %13476 = load i32, i32* %13475
  %13477 = sub i32 %13474, %13476
  %13478 = zext i32 %13477 to i64
  store i64 %13478, i64* %RCX.i167, align 8
  %13479 = icmp ult i32 %13474, %13476
  %13480 = zext i1 %13479 to i8
  %13481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13480, i8* %13481, align 1
  %13482 = and i32 %13477, 255
  %13483 = call i32 @llvm.ctpop.i32(i32 %13482)
  %13484 = trunc i32 %13483 to i8
  %13485 = and i8 %13484, 1
  %13486 = xor i8 %13485, 1
  %13487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13486, i8* %13487, align 1
  %13488 = xor i32 %13476, %13474
  %13489 = xor i32 %13488, %13477
  %13490 = lshr i32 %13489, 4
  %13491 = trunc i32 %13490 to i8
  %13492 = and i8 %13491, 1
  %13493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13492, i8* %13493, align 1
  %13494 = icmp eq i32 %13477, 0
  %13495 = zext i1 %13494 to i8
  %13496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13495, i8* %13496, align 1
  %13497 = lshr i32 %13477, 31
  %13498 = trunc i32 %13497 to i8
  %13499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13498, i8* %13499, align 1
  %13500 = lshr i32 %13474, 31
  %13501 = lshr i32 %13476, 31
  %13502 = xor i32 %13501, %13500
  %13503 = xor i32 %13497, %13500
  %13504 = add i32 %13503, %13502
  %13505 = icmp eq i32 %13504, 2
  %13506 = zext i1 %13505 to i8
  %13507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13506, i8* %13507, align 1
  store %struct.Memory* %loadMem_45fdec, %struct.Memory** %MEMORY
  %loadMem_45fdf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13509 = getelementptr inbounds %struct.GPR, %struct.GPR* %13508, i32 0, i32 33
  %13510 = getelementptr inbounds %struct.Reg, %struct.Reg* %13509, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %13510 to i64*
  %13511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13512 = getelementptr inbounds %struct.GPR, %struct.GPR* %13511, i32 0, i32 1
  %13513 = getelementptr inbounds %struct.Reg, %struct.Reg* %13512, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %13513 to i64*
  %13514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13515 = getelementptr inbounds %struct.GPR, %struct.GPR* %13514, i32 0, i32 15
  %13516 = getelementptr inbounds %struct.Reg, %struct.Reg* %13515, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %13516 to i64*
  %13517 = load i64, i64* %RBP.i164
  %13518 = sub i64 %13517, 16
  %13519 = load i64, i64* %PC.i162
  %13520 = add i64 %13519, 4
  store i64 %13520, i64* %PC.i162
  %13521 = inttoptr i64 %13518 to i32*
  %13522 = load i32, i32* %13521
  %13523 = sext i32 %13522 to i64
  store i64 %13523, i64* %RAX.i163, align 8
  store %struct.Memory* %loadMem_45fdf0, %struct.Memory** %MEMORY
  %loadMem_45fdf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13525 = getelementptr inbounds %struct.GPR, %struct.GPR* %13524, i32 0, i32 33
  %13526 = getelementptr inbounds %struct.Reg, %struct.Reg* %13525, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %13526 to i64*
  %13527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13528 = getelementptr inbounds %struct.GPR, %struct.GPR* %13527, i32 0, i32 5
  %13529 = getelementptr inbounds %struct.Reg, %struct.Reg* %13528, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %13529 to i32*
  %13530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13531 = getelementptr inbounds %struct.GPR, %struct.GPR* %13530, i32 0, i32 1
  %13532 = getelementptr inbounds %struct.Reg, %struct.Reg* %13531, i32 0, i32 0
  %RAX.i160 = bitcast %union.anon* %13532 to i64*
  %13533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13534 = getelementptr inbounds %struct.GPR, %struct.GPR* %13533, i32 0, i32 15
  %13535 = getelementptr inbounds %struct.Reg, %struct.Reg* %13534, i32 0, i32 0
  %RBP.i161 = bitcast %union.anon* %13535 to i64*
  %13536 = load i64, i64* %RBP.i161
  %13537 = load i64, i64* %RAX.i160
  %13538 = mul i64 %13537, 4
  %13539 = add i64 %13536, -320
  %13540 = add i64 %13539, %13538
  %13541 = load i32, i32* %ECX.i
  %13542 = zext i32 %13541 to i64
  %13543 = load i64, i64* %PC.i159
  %13544 = add i64 %13543, 7
  store i64 %13544, i64* %PC.i159
  %13545 = inttoptr i64 %13540 to i32*
  store i32 %13541, i32* %13545
  store %struct.Memory* %loadMem_45fdf4, %struct.Memory** %MEMORY
  %loadMem_45fdfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13547 = getelementptr inbounds %struct.GPR, %struct.GPR* %13546, i32 0, i32 33
  %13548 = getelementptr inbounds %struct.Reg, %struct.Reg* %13547, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %13548 to i64*
  %13549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13550 = getelementptr inbounds %struct.GPR, %struct.GPR* %13549, i32 0, i32 1
  %13551 = getelementptr inbounds %struct.Reg, %struct.Reg* %13550, i32 0, i32 0
  %RAX.i157 = bitcast %union.anon* %13551 to i64*
  %13552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13553 = getelementptr inbounds %struct.GPR, %struct.GPR* %13552, i32 0, i32 15
  %13554 = getelementptr inbounds %struct.Reg, %struct.Reg* %13553, i32 0, i32 0
  %RBP.i158 = bitcast %union.anon* %13554 to i64*
  %13555 = load i64, i64* %RBP.i158
  %13556 = sub i64 %13555, 16
  %13557 = load i64, i64* %PC.i156
  %13558 = add i64 %13557, 3
  store i64 %13558, i64* %PC.i156
  %13559 = inttoptr i64 %13556 to i32*
  %13560 = load i32, i32* %13559
  %13561 = zext i32 %13560 to i64
  store i64 %13561, i64* %RAX.i157, align 8
  store %struct.Memory* %loadMem_45fdfb, %struct.Memory** %MEMORY
  %loadMem_45fdfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %13562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13563 = getelementptr inbounds %struct.GPR, %struct.GPR* %13562, i32 0, i32 33
  %13564 = getelementptr inbounds %struct.Reg, %struct.Reg* %13563, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %13564 to i64*
  %13565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13566 = getelementptr inbounds %struct.GPR, %struct.GPR* %13565, i32 0, i32 1
  %13567 = getelementptr inbounds %struct.Reg, %struct.Reg* %13566, i32 0, i32 0
  %RAX.i155 = bitcast %union.anon* %13567 to i64*
  %13568 = load i64, i64* %RAX.i155
  %13569 = load i64, i64* %PC.i154
  %13570 = add i64 %13569, 3
  store i64 %13570, i64* %PC.i154
  %13571 = trunc i64 %13568 to i32
  %13572 = add i32 1, %13571
  %13573 = zext i32 %13572 to i64
  store i64 %13573, i64* %RAX.i155, align 8
  %13574 = icmp ult i32 %13572, %13571
  %13575 = icmp ult i32 %13572, 1
  %13576 = or i1 %13574, %13575
  %13577 = zext i1 %13576 to i8
  %13578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13577, i8* %13578, align 1
  %13579 = and i32 %13572, 255
  %13580 = call i32 @llvm.ctpop.i32(i32 %13579)
  %13581 = trunc i32 %13580 to i8
  %13582 = and i8 %13581, 1
  %13583 = xor i8 %13582, 1
  %13584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13583, i8* %13584, align 1
  %13585 = xor i64 1, %13568
  %13586 = trunc i64 %13585 to i32
  %13587 = xor i32 %13586, %13572
  %13588 = lshr i32 %13587, 4
  %13589 = trunc i32 %13588 to i8
  %13590 = and i8 %13589, 1
  %13591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13590, i8* %13591, align 1
  %13592 = icmp eq i32 %13572, 0
  %13593 = zext i1 %13592 to i8
  %13594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13593, i8* %13594, align 1
  %13595 = lshr i32 %13572, 31
  %13596 = trunc i32 %13595 to i8
  %13597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13596, i8* %13597, align 1
  %13598 = lshr i32 %13571, 31
  %13599 = xor i32 %13595, %13598
  %13600 = add i32 %13599, %13595
  %13601 = icmp eq i32 %13600, 2
  %13602 = zext i1 %13601 to i8
  %13603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13602, i8* %13603, align 1
  store %struct.Memory* %loadMem_45fdfe, %struct.Memory** %MEMORY
  %loadMem_45fe01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13605 = getelementptr inbounds %struct.GPR, %struct.GPR* %13604, i32 0, i32 33
  %13606 = getelementptr inbounds %struct.Reg, %struct.Reg* %13605, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %13606 to i64*
  %13607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13608 = getelementptr inbounds %struct.GPR, %struct.GPR* %13607, i32 0, i32 1
  %13609 = getelementptr inbounds %struct.Reg, %struct.Reg* %13608, i32 0, i32 0
  %EAX.i152 = bitcast %union.anon* %13609 to i32*
  %13610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13611 = getelementptr inbounds %struct.GPR, %struct.GPR* %13610, i32 0, i32 15
  %13612 = getelementptr inbounds %struct.Reg, %struct.Reg* %13611, i32 0, i32 0
  %RBP.i153 = bitcast %union.anon* %13612 to i64*
  %13613 = load i64, i64* %RBP.i153
  %13614 = sub i64 %13613, 16
  %13615 = load i32, i32* %EAX.i152
  %13616 = zext i32 %13615 to i64
  %13617 = load i64, i64* %PC.i151
  %13618 = add i64 %13617, 3
  store i64 %13618, i64* %PC.i151
  %13619 = inttoptr i64 %13614 to i32*
  store i32 %13615, i32* %13619
  store %struct.Memory* %loadMem_45fe01, %struct.Memory** %MEMORY
  %loadMem_45fe04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13621 = getelementptr inbounds %struct.GPR, %struct.GPR* %13620, i32 0, i32 33
  %13622 = getelementptr inbounds %struct.Reg, %struct.Reg* %13621, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %13622 to i64*
  %13623 = load i64, i64* %PC.i150
  %13624 = add i64 %13623, -784
  %13625 = load i64, i64* %PC.i150
  %13626 = add i64 %13625, 5
  store i64 %13626, i64* %PC.i150
  %13627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13624, i64* %13627, align 8
  store %struct.Memory* %loadMem_45fe04, %struct.Memory** %MEMORY
  br label %block_.L_45faf4

block_.L_45fe09:                                  ; preds = %block_.L_45faf4
  %loadMem_45fe09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13629 = getelementptr inbounds %struct.GPR, %struct.GPR* %13628, i32 0, i32 33
  %13630 = getelementptr inbounds %struct.Reg, %struct.Reg* %13629, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %13630 to i64*
  %13631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13632 = getelementptr inbounds %struct.GPR, %struct.GPR* %13631, i32 0, i32 15
  %13633 = getelementptr inbounds %struct.Reg, %struct.Reg* %13632, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %13633 to i64*
  %13634 = load i64, i64* %RBP.i149
  %13635 = sub i64 %13634, 20
  %13636 = load i64, i64* %PC.i148
  %13637 = add i64 %13636, 7
  store i64 %13637, i64* %PC.i148
  %13638 = inttoptr i64 %13635 to i32*
  store i32 0, i32* %13638
  store %struct.Memory* %loadMem_45fe09, %struct.Memory** %MEMORY
  br label %block_.L_45fe10

block_.L_45fe10:                                  ; preds = %block_.L_45feaf, %block_.L_45fe09
  %loadMem_45fe10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13640 = getelementptr inbounds %struct.GPR, %struct.GPR* %13639, i32 0, i32 33
  %13641 = getelementptr inbounds %struct.Reg, %struct.Reg* %13640, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %13641 to i64*
  %13642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13643 = getelementptr inbounds %struct.GPR, %struct.GPR* %13642, i32 0, i32 15
  %13644 = getelementptr inbounds %struct.Reg, %struct.Reg* %13643, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %13644 to i64*
  %13645 = load i64, i64* %RBP.i147
  %13646 = sub i64 %13645, 20
  %13647 = load i64, i64* %PC.i146
  %13648 = add i64 %13647, 4
  store i64 %13648, i64* %PC.i146
  %13649 = inttoptr i64 %13646 to i32*
  %13650 = load i32, i32* %13649
  %13651 = sub i32 %13650, 8
  %13652 = icmp ult i32 %13650, 8
  %13653 = zext i1 %13652 to i8
  %13654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13653, i8* %13654, align 1
  %13655 = and i32 %13651, 255
  %13656 = call i32 @llvm.ctpop.i32(i32 %13655)
  %13657 = trunc i32 %13656 to i8
  %13658 = and i8 %13657, 1
  %13659 = xor i8 %13658, 1
  %13660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13659, i8* %13660, align 1
  %13661 = xor i32 %13650, 8
  %13662 = xor i32 %13661, %13651
  %13663 = lshr i32 %13662, 4
  %13664 = trunc i32 %13663 to i8
  %13665 = and i8 %13664, 1
  %13666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13665, i8* %13666, align 1
  %13667 = icmp eq i32 %13651, 0
  %13668 = zext i1 %13667 to i8
  %13669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13668, i8* %13669, align 1
  %13670 = lshr i32 %13651, 31
  %13671 = trunc i32 %13670 to i8
  %13672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13671, i8* %13672, align 1
  %13673 = lshr i32 %13650, 31
  %13674 = xor i32 %13670, %13673
  %13675 = add i32 %13674, %13673
  %13676 = icmp eq i32 %13675, 2
  %13677 = zext i1 %13676 to i8
  %13678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13677, i8* %13678, align 1
  store %struct.Memory* %loadMem_45fe10, %struct.Memory** %MEMORY
  %loadMem_45fe14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13680 = getelementptr inbounds %struct.GPR, %struct.GPR* %13679, i32 0, i32 33
  %13681 = getelementptr inbounds %struct.Reg, %struct.Reg* %13680, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %13681 to i64*
  %13682 = load i64, i64* %PC.i145
  %13683 = add i64 %13682, 169
  %13684 = load i64, i64* %PC.i145
  %13685 = add i64 %13684, 6
  %13686 = load i64, i64* %PC.i145
  %13687 = add i64 %13686, 6
  store i64 %13687, i64* %PC.i145
  %13688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13689 = load i8, i8* %13688, align 1
  %13690 = icmp ne i8 %13689, 0
  %13691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13692 = load i8, i8* %13691, align 1
  %13693 = icmp ne i8 %13692, 0
  %13694 = xor i1 %13690, %13693
  %13695 = xor i1 %13694, true
  %13696 = zext i1 %13695 to i8
  store i8 %13696, i8* %BRANCH_TAKEN, align 1
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13698 = select i1 %13694, i64 %13685, i64 %13683
  store i64 %13698, i64* %13697, align 8
  store %struct.Memory* %loadMem_45fe14, %struct.Memory** %MEMORY
  %loadBr_45fe14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45fe14 = icmp eq i8 %loadBr_45fe14, 1
  br i1 %cmpBr_45fe14, label %block_.L_45febd, label %block_45fe1a

block_45fe1a:                                     ; preds = %block_.L_45fe10
  %loadMem_45fe1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13700 = getelementptr inbounds %struct.GPR, %struct.GPR* %13699, i32 0, i32 33
  %13701 = getelementptr inbounds %struct.Reg, %struct.Reg* %13700, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %13701 to i64*
  %13702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13703 = getelementptr inbounds %struct.GPR, %struct.GPR* %13702, i32 0, i32 15
  %13704 = getelementptr inbounds %struct.Reg, %struct.Reg* %13703, i32 0, i32 0
  %RBP.i144 = bitcast %union.anon* %13704 to i64*
  %13705 = load i64, i64* %RBP.i144
  %13706 = sub i64 %13705, 16
  %13707 = load i64, i64* %PC.i143
  %13708 = add i64 %13707, 7
  store i64 %13708, i64* %PC.i143
  %13709 = inttoptr i64 %13706 to i32*
  store i32 0, i32* %13709
  store %struct.Memory* %loadMem_45fe1a, %struct.Memory** %MEMORY
  br label %block_.L_45fe21

block_.L_45fe21:                                  ; preds = %block_.L_45fe90, %block_45fe1a
  %loadMem_45fe21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13711 = getelementptr inbounds %struct.GPR, %struct.GPR* %13710, i32 0, i32 33
  %13712 = getelementptr inbounds %struct.Reg, %struct.Reg* %13711, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %13712 to i64*
  %13713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13714 = getelementptr inbounds %struct.GPR, %struct.GPR* %13713, i32 0, i32 15
  %13715 = getelementptr inbounds %struct.Reg, %struct.Reg* %13714, i32 0, i32 0
  %RBP.i142 = bitcast %union.anon* %13715 to i64*
  %13716 = load i64, i64* %RBP.i142
  %13717 = sub i64 %13716, 16
  %13718 = load i64, i64* %PC.i141
  %13719 = add i64 %13718, 4
  store i64 %13719, i64* %PC.i141
  %13720 = inttoptr i64 %13717 to i32*
  %13721 = load i32, i32* %13720
  %13722 = sub i32 %13721, 8
  %13723 = icmp ult i32 %13721, 8
  %13724 = zext i1 %13723 to i8
  %13725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13724, i8* %13725, align 1
  %13726 = and i32 %13722, 255
  %13727 = call i32 @llvm.ctpop.i32(i32 %13726)
  %13728 = trunc i32 %13727 to i8
  %13729 = and i8 %13728, 1
  %13730 = xor i8 %13729, 1
  %13731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13730, i8* %13731, align 1
  %13732 = xor i32 %13721, 8
  %13733 = xor i32 %13732, %13722
  %13734 = lshr i32 %13733, 4
  %13735 = trunc i32 %13734 to i8
  %13736 = and i8 %13735, 1
  %13737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13736, i8* %13737, align 1
  %13738 = icmp eq i32 %13722, 0
  %13739 = zext i1 %13738 to i8
  %13740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13739, i8* %13740, align 1
  %13741 = lshr i32 %13722, 31
  %13742 = trunc i32 %13741 to i8
  %13743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13742, i8* %13743, align 1
  %13744 = lshr i32 %13721, 31
  %13745 = xor i32 %13741, %13744
  %13746 = add i32 %13745, %13744
  %13747 = icmp eq i32 %13746, 2
  %13748 = zext i1 %13747 to i8
  %13749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13748, i8* %13749, align 1
  store %struct.Memory* %loadMem_45fe21, %struct.Memory** %MEMORY
  %loadMem_45fe25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13751 = getelementptr inbounds %struct.GPR, %struct.GPR* %13750, i32 0, i32 33
  %13752 = getelementptr inbounds %struct.Reg, %struct.Reg* %13751, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %13752 to i64*
  %13753 = load i64, i64* %PC.i140
  %13754 = add i64 %13753, 133
  %13755 = load i64, i64* %PC.i140
  %13756 = add i64 %13755, 6
  %13757 = load i64, i64* %PC.i140
  %13758 = add i64 %13757, 6
  store i64 %13758, i64* %PC.i140
  %13759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13760 = load i8, i8* %13759, align 1
  %13761 = icmp ne i8 %13760, 0
  %13762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13763 = load i8, i8* %13762, align 1
  %13764 = icmp ne i8 %13763, 0
  %13765 = xor i1 %13761, %13764
  %13766 = xor i1 %13765, true
  %13767 = zext i1 %13766 to i8
  store i8 %13767, i8* %BRANCH_TAKEN, align 1
  %13768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13769 = select i1 %13765, i64 %13756, i64 %13754
  store i64 %13769, i64* %13768, align 8
  store %struct.Memory* %loadMem_45fe25, %struct.Memory** %MEMORY
  %loadBr_45fe25 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45fe25 = icmp eq i8 %loadBr_45fe25, 1
  br i1 %cmpBr_45fe25, label %block_.L_45feaa, label %block_45fe2b

block_45fe2b:                                     ; preds = %block_.L_45fe21
  %loadMem_45fe2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13771 = getelementptr inbounds %struct.GPR, %struct.GPR* %13770, i32 0, i32 33
  %13772 = getelementptr inbounds %struct.Reg, %struct.Reg* %13771, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %13772 to i64*
  %13773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13774 = getelementptr inbounds %struct.GPR, %struct.GPR* %13773, i32 0, i32 1
  %13775 = getelementptr inbounds %struct.Reg, %struct.Reg* %13774, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %13775 to i64*
  %13776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13777 = getelementptr inbounds %struct.GPR, %struct.GPR* %13776, i32 0, i32 15
  %13778 = getelementptr inbounds %struct.Reg, %struct.Reg* %13777, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %13778 to i64*
  %13779 = load i64, i64* %RBP.i139
  %13780 = sub i64 %13779, 544
  %13781 = load i64, i64* %PC.i137
  %13782 = add i64 %13781, 7
  store i64 %13782, i64* %PC.i137
  store i64 %13780, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_45fe2b, %struct.Memory** %MEMORY
  %loadMem_45fe32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13784 = getelementptr inbounds %struct.GPR, %struct.GPR* %13783, i32 0, i32 33
  %13785 = getelementptr inbounds %struct.Reg, %struct.Reg* %13784, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %13785 to i64*
  %13786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13787 = getelementptr inbounds %struct.GPR, %struct.GPR* %13786, i32 0, i32 5
  %13788 = getelementptr inbounds %struct.Reg, %struct.Reg* %13787, i32 0, i32 0
  %RCX.i135 = bitcast %union.anon* %13788 to i64*
  %13789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13790 = getelementptr inbounds %struct.GPR, %struct.GPR* %13789, i32 0, i32 15
  %13791 = getelementptr inbounds %struct.Reg, %struct.Reg* %13790, i32 0, i32 0
  %RBP.i136 = bitcast %union.anon* %13791 to i64*
  %13792 = load i64, i64* %RBP.i136
  %13793 = sub i64 %13792, 20
  %13794 = load i64, i64* %PC.i134
  %13795 = add i64 %13794, 4
  store i64 %13795, i64* %PC.i134
  %13796 = inttoptr i64 %13793 to i32*
  %13797 = load i32, i32* %13796
  %13798 = sext i32 %13797 to i64
  store i64 %13798, i64* %RCX.i135, align 8
  store %struct.Memory* %loadMem_45fe32, %struct.Memory** %MEMORY
  %loadMem_45fe36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13800 = getelementptr inbounds %struct.GPR, %struct.GPR* %13799, i32 0, i32 33
  %13801 = getelementptr inbounds %struct.Reg, %struct.Reg* %13800, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %13801 to i64*
  %13802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13803 = getelementptr inbounds %struct.GPR, %struct.GPR* %13802, i32 0, i32 5
  %13804 = getelementptr inbounds %struct.Reg, %struct.Reg* %13803, i32 0, i32 0
  %RCX.i133 = bitcast %union.anon* %13804 to i64*
  %13805 = load i64, i64* %RCX.i133
  %13806 = load i64, i64* %PC.i132
  %13807 = add i64 %13806, 4
  store i64 %13807, i64* %PC.i132
  %13808 = shl i64 %13805, 4
  %13809 = icmp slt i64 %13808, 0
  %13810 = shl i64 %13808, 1
  store i64 %13810, i64* %RCX.i133, align 8
  %13811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13812 = zext i1 %13809 to i8
  store i8 %13812, i8* %13811, align 1
  %13813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13814 = trunc i64 %13810 to i32
  %13815 = and i32 %13814, 254
  %13816 = call i32 @llvm.ctpop.i32(i32 %13815)
  %13817 = trunc i32 %13816 to i8
  %13818 = and i8 %13817, 1
  %13819 = xor i8 %13818, 1
  store i8 %13819, i8* %13813, align 1
  %13820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13820, align 1
  %13821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13822 = icmp eq i64 %13810, 0
  %13823 = zext i1 %13822 to i8
  store i8 %13823, i8* %13821, align 1
  %13824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13825 = lshr i64 %13810, 63
  %13826 = trunc i64 %13825 to i8
  store i8 %13826, i8* %13824, align 1
  %13827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13827, align 1
  store %struct.Memory* %loadMem_45fe36, %struct.Memory** %MEMORY
  %loadMem_45fe3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13829 = getelementptr inbounds %struct.GPR, %struct.GPR* %13828, i32 0, i32 33
  %13830 = getelementptr inbounds %struct.Reg, %struct.Reg* %13829, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %13830 to i64*
  %13831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13832 = getelementptr inbounds %struct.GPR, %struct.GPR* %13831, i32 0, i32 1
  %13833 = getelementptr inbounds %struct.Reg, %struct.Reg* %13832, i32 0, i32 0
  %RAX.i130 = bitcast %union.anon* %13833 to i64*
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13835 = getelementptr inbounds %struct.GPR, %struct.GPR* %13834, i32 0, i32 5
  %13836 = getelementptr inbounds %struct.Reg, %struct.Reg* %13835, i32 0, i32 0
  %RCX.i131 = bitcast %union.anon* %13836 to i64*
  %13837 = load i64, i64* %RAX.i130
  %13838 = load i64, i64* %RCX.i131
  %13839 = load i64, i64* %PC.i129
  %13840 = add i64 %13839, 3
  store i64 %13840, i64* %PC.i129
  %13841 = add i64 %13838, %13837
  store i64 %13841, i64* %RAX.i130, align 8
  %13842 = icmp ult i64 %13841, %13837
  %13843 = icmp ult i64 %13841, %13838
  %13844 = or i1 %13842, %13843
  %13845 = zext i1 %13844 to i8
  %13846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13845, i8* %13846, align 1
  %13847 = trunc i64 %13841 to i32
  %13848 = and i32 %13847, 255
  %13849 = call i32 @llvm.ctpop.i32(i32 %13848)
  %13850 = trunc i32 %13849 to i8
  %13851 = and i8 %13850, 1
  %13852 = xor i8 %13851, 1
  %13853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13852, i8* %13853, align 1
  %13854 = xor i64 %13838, %13837
  %13855 = xor i64 %13854, %13841
  %13856 = lshr i64 %13855, 4
  %13857 = trunc i64 %13856 to i8
  %13858 = and i8 %13857, 1
  %13859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13858, i8* %13859, align 1
  %13860 = icmp eq i64 %13841, 0
  %13861 = zext i1 %13860 to i8
  %13862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13861, i8* %13862, align 1
  %13863 = lshr i64 %13841, 63
  %13864 = trunc i64 %13863 to i8
  %13865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13864, i8* %13865, align 1
  %13866 = lshr i64 %13837, 63
  %13867 = lshr i64 %13838, 63
  %13868 = xor i64 %13863, %13866
  %13869 = xor i64 %13863, %13867
  %13870 = add i64 %13868, %13869
  %13871 = icmp eq i64 %13870, 2
  %13872 = zext i1 %13871 to i8
  %13873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13872, i8* %13873, align 1
  store %struct.Memory* %loadMem_45fe3a, %struct.Memory** %MEMORY
  %loadMem_45fe3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13875 = getelementptr inbounds %struct.GPR, %struct.GPR* %13874, i32 0, i32 33
  %13876 = getelementptr inbounds %struct.Reg, %struct.Reg* %13875, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %13876 to i64*
  %13877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13878 = getelementptr inbounds %struct.GPR, %struct.GPR* %13877, i32 0, i32 5
  %13879 = getelementptr inbounds %struct.Reg, %struct.Reg* %13878, i32 0, i32 0
  %RCX.i127 = bitcast %union.anon* %13879 to i64*
  %13880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13881 = getelementptr inbounds %struct.GPR, %struct.GPR* %13880, i32 0, i32 15
  %13882 = getelementptr inbounds %struct.Reg, %struct.Reg* %13881, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %13882 to i64*
  %13883 = load i64, i64* %RBP.i128
  %13884 = sub i64 %13883, 16
  %13885 = load i64, i64* %PC.i126
  %13886 = add i64 %13885, 4
  store i64 %13886, i64* %PC.i126
  %13887 = inttoptr i64 %13884 to i32*
  %13888 = load i32, i32* %13887
  %13889 = sext i32 %13888 to i64
  store i64 %13889, i64* %RCX.i127, align 8
  store %struct.Memory* %loadMem_45fe3d, %struct.Memory** %MEMORY
  %loadMem_45fe41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13891 = getelementptr inbounds %struct.GPR, %struct.GPR* %13890, i32 0, i32 33
  %13892 = getelementptr inbounds %struct.Reg, %struct.Reg* %13891, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %13892 to i64*
  %13893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13894 = getelementptr inbounds %struct.GPR, %struct.GPR* %13893, i32 0, i32 1
  %13895 = getelementptr inbounds %struct.Reg, %struct.Reg* %13894, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %13895 to i64*
  %13896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13897 = getelementptr inbounds %struct.GPR, %struct.GPR* %13896, i32 0, i32 5
  %13898 = getelementptr inbounds %struct.Reg, %struct.Reg* %13897, i32 0, i32 0
  %RCX.i125 = bitcast %union.anon* %13898 to i64*
  %13899 = load i64, i64* %RAX.i124
  %13900 = load i64, i64* %RCX.i125
  %13901 = mul i64 %13900, 4
  %13902 = add i64 %13901, %13899
  %13903 = load i64, i64* %PC.i123
  %13904 = add i64 %13903, 4
  store i64 %13904, i64* %PC.i123
  %13905 = inttoptr i64 %13902 to i32*
  %13906 = load i32, i32* %13905
  %13907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13907, align 1
  %13908 = and i32 %13906, 255
  %13909 = call i32 @llvm.ctpop.i32(i32 %13908)
  %13910 = trunc i32 %13909 to i8
  %13911 = and i8 %13910, 1
  %13912 = xor i8 %13911, 1
  %13913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13912, i8* %13913, align 1
  %13914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13914, align 1
  %13915 = icmp eq i32 %13906, 0
  %13916 = zext i1 %13915 to i8
  %13917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13916, i8* %13917, align 1
  %13918 = lshr i32 %13906, 31
  %13919 = trunc i32 %13918 to i8
  %13920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13919, i8* %13920, align 1
  %13921 = lshr i32 %13906, 31
  %13922 = xor i32 %13918, %13921
  %13923 = add i32 %13922, %13921
  %13924 = icmp eq i32 %13923, 2
  %13925 = zext i1 %13924 to i8
  %13926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13925, i8* %13926, align 1
  store %struct.Memory* %loadMem_45fe41, %struct.Memory** %MEMORY
  %loadMem_45fe45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13928 = getelementptr inbounds %struct.GPR, %struct.GPR* %13927, i32 0, i32 33
  %13929 = getelementptr inbounds %struct.Reg, %struct.Reg* %13928, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %13929 to i64*
  %13930 = load i64, i64* %PC.i122
  %13931 = add i64 %13930, 44
  %13932 = load i64, i64* %PC.i122
  %13933 = add i64 %13932, 6
  %13934 = load i64, i64* %PC.i122
  %13935 = add i64 %13934, 6
  store i64 %13935, i64* %PC.i122
  %13936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13937 = load i8, i8* %13936, align 1
  %13938 = icmp ne i8 %13937, 0
  %13939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13940 = load i8, i8* %13939, align 1
  %13941 = icmp ne i8 %13940, 0
  %13942 = xor i1 %13938, %13941
  %13943 = xor i1 %13942, true
  %13944 = zext i1 %13943 to i8
  store i8 %13944, i8* %BRANCH_TAKEN, align 1
  %13945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13946 = select i1 %13942, i64 %13933, i64 %13931
  store i64 %13946, i64* %13945, align 8
  store %struct.Memory* %loadMem_45fe45, %struct.Memory** %MEMORY
  %loadBr_45fe45 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45fe45 = icmp eq i8 %loadBr_45fe45, 1
  br i1 %cmpBr_45fe45, label %block_.L_45fe71, label %block_45fe4b

block_45fe4b:                                     ; preds = %block_45fe2b
  %loadMem_45fe4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13948 = getelementptr inbounds %struct.GPR, %struct.GPR* %13947, i32 0, i32 33
  %13949 = getelementptr inbounds %struct.Reg, %struct.Reg* %13948, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %13949 to i64*
  %13950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13951 = getelementptr inbounds %struct.GPR, %struct.GPR* %13950, i32 0, i32 1
  %13952 = getelementptr inbounds %struct.Reg, %struct.Reg* %13951, i32 0, i32 0
  %EAX.i120 = bitcast %union.anon* %13952 to i32*
  %13953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13954 = getelementptr inbounds %struct.GPR, %struct.GPR* %13953, i32 0, i32 1
  %13955 = getelementptr inbounds %struct.Reg, %struct.Reg* %13954, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %13955 to i64*
  %13956 = load i64, i64* %RAX.i121
  %13957 = load i32, i32* %EAX.i120
  %13958 = zext i32 %13957 to i64
  %13959 = load i64, i64* %PC.i119
  %13960 = add i64 %13959, 2
  store i64 %13960, i64* %PC.i119
  %13961 = xor i64 %13958, %13956
  %13962 = trunc i64 %13961 to i32
  %13963 = and i64 %13961, 4294967295
  store i64 %13963, i64* %RAX.i121, align 8
  %13964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13964, align 1
  %13965 = and i32 %13962, 255
  %13966 = call i32 @llvm.ctpop.i32(i32 %13965)
  %13967 = trunc i32 %13966 to i8
  %13968 = and i8 %13967, 1
  %13969 = xor i8 %13968, 1
  %13970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13969, i8* %13970, align 1
  %13971 = icmp eq i32 %13962, 0
  %13972 = zext i1 %13971 to i8
  %13973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13972, i8* %13973, align 1
  %13974 = lshr i32 %13962, 31
  %13975 = trunc i32 %13974 to i8
  %13976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13975, i8* %13976, align 1
  %13977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13977, align 1
  %13978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13978, align 1
  store %struct.Memory* %loadMem_45fe4b, %struct.Memory** %MEMORY
  %loadMem_45fe4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13980 = getelementptr inbounds %struct.GPR, %struct.GPR* %13979, i32 0, i32 33
  %13981 = getelementptr inbounds %struct.Reg, %struct.Reg* %13980, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %13981 to i64*
  %13982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13983 = getelementptr inbounds %struct.GPR, %struct.GPR* %13982, i32 0, i32 5
  %13984 = getelementptr inbounds %struct.Reg, %struct.Reg* %13983, i32 0, i32 0
  %RCX.i117 = bitcast %union.anon* %13984 to i64*
  %13985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13986 = getelementptr inbounds %struct.GPR, %struct.GPR* %13985, i32 0, i32 15
  %13987 = getelementptr inbounds %struct.Reg, %struct.Reg* %13986, i32 0, i32 0
  %RBP.i118 = bitcast %union.anon* %13987 to i64*
  %13988 = load i64, i64* %RBP.i118
  %13989 = sub i64 %13988, 544
  %13990 = load i64, i64* %PC.i116
  %13991 = add i64 %13990, 7
  store i64 %13991, i64* %PC.i116
  store i64 %13989, i64* %RCX.i117, align 8
  store %struct.Memory* %loadMem_45fe4d, %struct.Memory** %MEMORY
  %loadMem_45fe54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13993 = getelementptr inbounds %struct.GPR, %struct.GPR* %13992, i32 0, i32 33
  %13994 = getelementptr inbounds %struct.Reg, %struct.Reg* %13993, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %13994 to i64*
  %13995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13996 = getelementptr inbounds %struct.GPR, %struct.GPR* %13995, i32 0, i32 7
  %13997 = getelementptr inbounds %struct.Reg, %struct.Reg* %13996, i32 0, i32 0
  %RDX.i114 = bitcast %union.anon* %13997 to i64*
  %13998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13999 = getelementptr inbounds %struct.GPR, %struct.GPR* %13998, i32 0, i32 15
  %14000 = getelementptr inbounds %struct.Reg, %struct.Reg* %13999, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %14000 to i64*
  %14001 = load i64, i64* %RBP.i115
  %14002 = sub i64 %14001, 20
  %14003 = load i64, i64* %PC.i113
  %14004 = add i64 %14003, 4
  store i64 %14004, i64* %PC.i113
  %14005 = inttoptr i64 %14002 to i32*
  %14006 = load i32, i32* %14005
  %14007 = sext i32 %14006 to i64
  store i64 %14007, i64* %RDX.i114, align 8
  store %struct.Memory* %loadMem_45fe54, %struct.Memory** %MEMORY
  %loadMem_45fe58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14009 = getelementptr inbounds %struct.GPR, %struct.GPR* %14008, i32 0, i32 33
  %14010 = getelementptr inbounds %struct.Reg, %struct.Reg* %14009, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %14010 to i64*
  %14011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14012 = getelementptr inbounds %struct.GPR, %struct.GPR* %14011, i32 0, i32 7
  %14013 = getelementptr inbounds %struct.Reg, %struct.Reg* %14012, i32 0, i32 0
  %RDX.i112 = bitcast %union.anon* %14013 to i64*
  %14014 = load i64, i64* %RDX.i112
  %14015 = load i64, i64* %PC.i111
  %14016 = add i64 %14015, 4
  store i64 %14016, i64* %PC.i111
  %14017 = shl i64 %14014, 4
  %14018 = icmp slt i64 %14017, 0
  %14019 = shl i64 %14017, 1
  store i64 %14019, i64* %RDX.i112, align 8
  %14020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14021 = zext i1 %14018 to i8
  store i8 %14021, i8* %14020, align 1
  %14022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14023 = trunc i64 %14019 to i32
  %14024 = and i32 %14023, 254
  %14025 = call i32 @llvm.ctpop.i32(i32 %14024)
  %14026 = trunc i32 %14025 to i8
  %14027 = and i8 %14026, 1
  %14028 = xor i8 %14027, 1
  store i8 %14028, i8* %14022, align 1
  %14029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14029, align 1
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14031 = icmp eq i64 %14019, 0
  %14032 = zext i1 %14031 to i8
  store i8 %14032, i8* %14030, align 1
  %14033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14034 = lshr i64 %14019, 63
  %14035 = trunc i64 %14034 to i8
  store i8 %14035, i8* %14033, align 1
  %14036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14036, align 1
  store %struct.Memory* %loadMem_45fe58, %struct.Memory** %MEMORY
  %loadMem_45fe5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14038 = getelementptr inbounds %struct.GPR, %struct.GPR* %14037, i32 0, i32 33
  %14039 = getelementptr inbounds %struct.Reg, %struct.Reg* %14038, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %14039 to i64*
  %14040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14041 = getelementptr inbounds %struct.GPR, %struct.GPR* %14040, i32 0, i32 5
  %14042 = getelementptr inbounds %struct.Reg, %struct.Reg* %14041, i32 0, i32 0
  %RCX.i109 = bitcast %union.anon* %14042 to i64*
  %14043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14044 = getelementptr inbounds %struct.GPR, %struct.GPR* %14043, i32 0, i32 7
  %14045 = getelementptr inbounds %struct.Reg, %struct.Reg* %14044, i32 0, i32 0
  %RDX.i110 = bitcast %union.anon* %14045 to i64*
  %14046 = load i64, i64* %RCX.i109
  %14047 = load i64, i64* %RDX.i110
  %14048 = load i64, i64* %PC.i108
  %14049 = add i64 %14048, 3
  store i64 %14049, i64* %PC.i108
  %14050 = add i64 %14047, %14046
  store i64 %14050, i64* %RCX.i109, align 8
  %14051 = icmp ult i64 %14050, %14046
  %14052 = icmp ult i64 %14050, %14047
  %14053 = or i1 %14051, %14052
  %14054 = zext i1 %14053 to i8
  %14055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14054, i8* %14055, align 1
  %14056 = trunc i64 %14050 to i32
  %14057 = and i32 %14056, 255
  %14058 = call i32 @llvm.ctpop.i32(i32 %14057)
  %14059 = trunc i32 %14058 to i8
  %14060 = and i8 %14059, 1
  %14061 = xor i8 %14060, 1
  %14062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14061, i8* %14062, align 1
  %14063 = xor i64 %14047, %14046
  %14064 = xor i64 %14063, %14050
  %14065 = lshr i64 %14064, 4
  %14066 = trunc i64 %14065 to i8
  %14067 = and i8 %14066, 1
  %14068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14067, i8* %14068, align 1
  %14069 = icmp eq i64 %14050, 0
  %14070 = zext i1 %14069 to i8
  %14071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14070, i8* %14071, align 1
  %14072 = lshr i64 %14050, 63
  %14073 = trunc i64 %14072 to i8
  %14074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14073, i8* %14074, align 1
  %14075 = lshr i64 %14046, 63
  %14076 = lshr i64 %14047, 63
  %14077 = xor i64 %14072, %14075
  %14078 = xor i64 %14072, %14076
  %14079 = add i64 %14077, %14078
  %14080 = icmp eq i64 %14079, 2
  %14081 = zext i1 %14080 to i8
  %14082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14081, i8* %14082, align 1
  store %struct.Memory* %loadMem_45fe5c, %struct.Memory** %MEMORY
  %loadMem_45fe5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14084 = getelementptr inbounds %struct.GPR, %struct.GPR* %14083, i32 0, i32 33
  %14085 = getelementptr inbounds %struct.Reg, %struct.Reg* %14084, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %14085 to i64*
  %14086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14087 = getelementptr inbounds %struct.GPR, %struct.GPR* %14086, i32 0, i32 7
  %14088 = getelementptr inbounds %struct.Reg, %struct.Reg* %14087, i32 0, i32 0
  %RDX.i106 = bitcast %union.anon* %14088 to i64*
  %14089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14090 = getelementptr inbounds %struct.GPR, %struct.GPR* %14089, i32 0, i32 15
  %14091 = getelementptr inbounds %struct.Reg, %struct.Reg* %14090, i32 0, i32 0
  %RBP.i107 = bitcast %union.anon* %14091 to i64*
  %14092 = load i64, i64* %RBP.i107
  %14093 = sub i64 %14092, 16
  %14094 = load i64, i64* %PC.i105
  %14095 = add i64 %14094, 4
  store i64 %14095, i64* %PC.i105
  %14096 = inttoptr i64 %14093 to i32*
  %14097 = load i32, i32* %14096
  %14098 = sext i32 %14097 to i64
  store i64 %14098, i64* %RDX.i106, align 8
  store %struct.Memory* %loadMem_45fe5f, %struct.Memory** %MEMORY
  %loadMem_45fe63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14100 = getelementptr inbounds %struct.GPR, %struct.GPR* %14099, i32 0, i32 33
  %14101 = getelementptr inbounds %struct.Reg, %struct.Reg* %14100, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %14101 to i64*
  %14102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14103 = getelementptr inbounds %struct.GPR, %struct.GPR* %14102, i32 0, i32 1
  %14104 = getelementptr inbounds %struct.Reg, %struct.Reg* %14103, i32 0, i32 0
  %RAX.i102 = bitcast %union.anon* %14104 to i64*
  %14105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14106 = getelementptr inbounds %struct.GPR, %struct.GPR* %14105, i32 0, i32 5
  %14107 = getelementptr inbounds %struct.Reg, %struct.Reg* %14106, i32 0, i32 0
  %RCX.i103 = bitcast %union.anon* %14107 to i64*
  %14108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14109 = getelementptr inbounds %struct.GPR, %struct.GPR* %14108, i32 0, i32 7
  %14110 = getelementptr inbounds %struct.Reg, %struct.Reg* %14109, i32 0, i32 0
  %RDX.i104 = bitcast %union.anon* %14110 to i64*
  %14111 = load i64, i64* %RAX.i102
  %14112 = load i64, i64* %RCX.i103
  %14113 = load i64, i64* %RDX.i104
  %14114 = mul i64 %14113, 4
  %14115 = add i64 %14114, %14112
  %14116 = load i64, i64* %PC.i101
  %14117 = add i64 %14116, 3
  store i64 %14117, i64* %PC.i101
  %14118 = trunc i64 %14111 to i32
  %14119 = inttoptr i64 %14115 to i32*
  %14120 = load i32, i32* %14119
  %14121 = sub i32 %14118, %14120
  %14122 = zext i32 %14121 to i64
  store i64 %14122, i64* %RAX.i102, align 8
  %14123 = icmp ult i32 %14118, %14120
  %14124 = zext i1 %14123 to i8
  %14125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14124, i8* %14125, align 1
  %14126 = and i32 %14121, 255
  %14127 = call i32 @llvm.ctpop.i32(i32 %14126)
  %14128 = trunc i32 %14127 to i8
  %14129 = and i8 %14128, 1
  %14130 = xor i8 %14129, 1
  %14131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14130, i8* %14131, align 1
  %14132 = xor i32 %14120, %14118
  %14133 = xor i32 %14132, %14121
  %14134 = lshr i32 %14133, 4
  %14135 = trunc i32 %14134 to i8
  %14136 = and i8 %14135, 1
  %14137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14136, i8* %14137, align 1
  %14138 = icmp eq i32 %14121, 0
  %14139 = zext i1 %14138 to i8
  %14140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14139, i8* %14140, align 1
  %14141 = lshr i32 %14121, 31
  %14142 = trunc i32 %14141 to i8
  %14143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14142, i8* %14143, align 1
  %14144 = lshr i32 %14118, 31
  %14145 = lshr i32 %14120, 31
  %14146 = xor i32 %14145, %14144
  %14147 = xor i32 %14141, %14144
  %14148 = add i32 %14147, %14146
  %14149 = icmp eq i32 %14148, 2
  %14150 = zext i1 %14149 to i8
  %14151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14150, i8* %14151, align 1
  store %struct.Memory* %loadMem_45fe63, %struct.Memory** %MEMORY
  %loadMem_45fe66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14153 = getelementptr inbounds %struct.GPR, %struct.GPR* %14152, i32 0, i32 33
  %14154 = getelementptr inbounds %struct.Reg, %struct.Reg* %14153, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %14154 to i64*
  %14155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14156 = getelementptr inbounds %struct.GPR, %struct.GPR* %14155, i32 0, i32 1
  %14157 = getelementptr inbounds %struct.Reg, %struct.Reg* %14156, i32 0, i32 0
  %EAX.i99 = bitcast %union.anon* %14157 to i32*
  %14158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14159 = getelementptr inbounds %struct.GPR, %struct.GPR* %14158, i32 0, i32 15
  %14160 = getelementptr inbounds %struct.Reg, %struct.Reg* %14159, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %14160 to i64*
  %14161 = load i64, i64* %RBP.i100
  %14162 = sub i64 %14161, 804
  %14163 = load i32, i32* %EAX.i99
  %14164 = zext i32 %14163 to i64
  %14165 = load i64, i64* %PC.i98
  %14166 = add i64 %14165, 6
  store i64 %14166, i64* %PC.i98
  %14167 = inttoptr i64 %14162 to i32*
  store i32 %14163, i32* %14167
  store %struct.Memory* %loadMem_45fe66, %struct.Memory** %MEMORY
  %loadMem_45fe6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14169 = getelementptr inbounds %struct.GPR, %struct.GPR* %14168, i32 0, i32 33
  %14170 = getelementptr inbounds %struct.Reg, %struct.Reg* %14169, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %14170 to i64*
  %14171 = load i64, i64* %PC.i97
  %14172 = add i64 %14171, 36
  %14173 = load i64, i64* %PC.i97
  %14174 = add i64 %14173, 5
  store i64 %14174, i64* %PC.i97
  %14175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14172, i64* %14175, align 8
  store %struct.Memory* %loadMem_45fe6c, %struct.Memory** %MEMORY
  br label %block_.L_45fe90

block_.L_45fe71:                                  ; preds = %block_45fe2b
  %loadMem_45fe71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14177 = getelementptr inbounds %struct.GPR, %struct.GPR* %14176, i32 0, i32 33
  %14178 = getelementptr inbounds %struct.Reg, %struct.Reg* %14177, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %14178 to i64*
  %14179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14180 = getelementptr inbounds %struct.GPR, %struct.GPR* %14179, i32 0, i32 1
  %14181 = getelementptr inbounds %struct.Reg, %struct.Reg* %14180, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %14181 to i64*
  %14182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14183 = getelementptr inbounds %struct.GPR, %struct.GPR* %14182, i32 0, i32 15
  %14184 = getelementptr inbounds %struct.Reg, %struct.Reg* %14183, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %14184 to i64*
  %14185 = load i64, i64* %RBP.i96
  %14186 = sub i64 %14185, 544
  %14187 = load i64, i64* %PC.i94
  %14188 = add i64 %14187, 7
  store i64 %14188, i64* %PC.i94
  store i64 %14186, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_45fe71, %struct.Memory** %MEMORY
  %loadMem_45fe78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14190 = getelementptr inbounds %struct.GPR, %struct.GPR* %14189, i32 0, i32 33
  %14191 = getelementptr inbounds %struct.Reg, %struct.Reg* %14190, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %14191 to i64*
  %14192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14193 = getelementptr inbounds %struct.GPR, %struct.GPR* %14192, i32 0, i32 5
  %14194 = getelementptr inbounds %struct.Reg, %struct.Reg* %14193, i32 0, i32 0
  %RCX.i92 = bitcast %union.anon* %14194 to i64*
  %14195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14196 = getelementptr inbounds %struct.GPR, %struct.GPR* %14195, i32 0, i32 15
  %14197 = getelementptr inbounds %struct.Reg, %struct.Reg* %14196, i32 0, i32 0
  %RBP.i93 = bitcast %union.anon* %14197 to i64*
  %14198 = load i64, i64* %RBP.i93
  %14199 = sub i64 %14198, 20
  %14200 = load i64, i64* %PC.i91
  %14201 = add i64 %14200, 4
  store i64 %14201, i64* %PC.i91
  %14202 = inttoptr i64 %14199 to i32*
  %14203 = load i32, i32* %14202
  %14204 = sext i32 %14203 to i64
  store i64 %14204, i64* %RCX.i92, align 8
  store %struct.Memory* %loadMem_45fe78, %struct.Memory** %MEMORY
  %loadMem_45fe7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14206 = getelementptr inbounds %struct.GPR, %struct.GPR* %14205, i32 0, i32 33
  %14207 = getelementptr inbounds %struct.Reg, %struct.Reg* %14206, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %14207 to i64*
  %14208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14209 = getelementptr inbounds %struct.GPR, %struct.GPR* %14208, i32 0, i32 5
  %14210 = getelementptr inbounds %struct.Reg, %struct.Reg* %14209, i32 0, i32 0
  %RCX.i90 = bitcast %union.anon* %14210 to i64*
  %14211 = load i64, i64* %RCX.i90
  %14212 = load i64, i64* %PC.i89
  %14213 = add i64 %14212, 4
  store i64 %14213, i64* %PC.i89
  %14214 = shl i64 %14211, 4
  %14215 = icmp slt i64 %14214, 0
  %14216 = shl i64 %14214, 1
  store i64 %14216, i64* %RCX.i90, align 8
  %14217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %14218 = zext i1 %14215 to i8
  store i8 %14218, i8* %14217, align 1
  %14219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14220 = trunc i64 %14216 to i32
  %14221 = and i32 %14220, 254
  %14222 = call i32 @llvm.ctpop.i32(i32 %14221)
  %14223 = trunc i32 %14222 to i8
  %14224 = and i8 %14223, 1
  %14225 = xor i8 %14224, 1
  store i8 %14225, i8* %14219, align 1
  %14226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14226, align 1
  %14227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14228 = icmp eq i64 %14216, 0
  %14229 = zext i1 %14228 to i8
  store i8 %14229, i8* %14227, align 1
  %14230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14231 = lshr i64 %14216, 63
  %14232 = trunc i64 %14231 to i8
  store i8 %14232, i8* %14230, align 1
  %14233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14233, align 1
  store %struct.Memory* %loadMem_45fe7c, %struct.Memory** %MEMORY
  %loadMem_45fe80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14235 = getelementptr inbounds %struct.GPR, %struct.GPR* %14234, i32 0, i32 33
  %14236 = getelementptr inbounds %struct.Reg, %struct.Reg* %14235, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %14236 to i64*
  %14237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14238 = getelementptr inbounds %struct.GPR, %struct.GPR* %14237, i32 0, i32 1
  %14239 = getelementptr inbounds %struct.Reg, %struct.Reg* %14238, i32 0, i32 0
  %RAX.i87 = bitcast %union.anon* %14239 to i64*
  %14240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14241 = getelementptr inbounds %struct.GPR, %struct.GPR* %14240, i32 0, i32 5
  %14242 = getelementptr inbounds %struct.Reg, %struct.Reg* %14241, i32 0, i32 0
  %RCX.i88 = bitcast %union.anon* %14242 to i64*
  %14243 = load i64, i64* %RAX.i87
  %14244 = load i64, i64* %RCX.i88
  %14245 = load i64, i64* %PC.i86
  %14246 = add i64 %14245, 3
  store i64 %14246, i64* %PC.i86
  %14247 = add i64 %14244, %14243
  store i64 %14247, i64* %RAX.i87, align 8
  %14248 = icmp ult i64 %14247, %14243
  %14249 = icmp ult i64 %14247, %14244
  %14250 = or i1 %14248, %14249
  %14251 = zext i1 %14250 to i8
  %14252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14251, i8* %14252, align 1
  %14253 = trunc i64 %14247 to i32
  %14254 = and i32 %14253, 255
  %14255 = call i32 @llvm.ctpop.i32(i32 %14254)
  %14256 = trunc i32 %14255 to i8
  %14257 = and i8 %14256, 1
  %14258 = xor i8 %14257, 1
  %14259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14258, i8* %14259, align 1
  %14260 = xor i64 %14244, %14243
  %14261 = xor i64 %14260, %14247
  %14262 = lshr i64 %14261, 4
  %14263 = trunc i64 %14262 to i8
  %14264 = and i8 %14263, 1
  %14265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14264, i8* %14265, align 1
  %14266 = icmp eq i64 %14247, 0
  %14267 = zext i1 %14266 to i8
  %14268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14267, i8* %14268, align 1
  %14269 = lshr i64 %14247, 63
  %14270 = trunc i64 %14269 to i8
  %14271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14270, i8* %14271, align 1
  %14272 = lshr i64 %14243, 63
  %14273 = lshr i64 %14244, 63
  %14274 = xor i64 %14269, %14272
  %14275 = xor i64 %14269, %14273
  %14276 = add i64 %14274, %14275
  %14277 = icmp eq i64 %14276, 2
  %14278 = zext i1 %14277 to i8
  %14279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14278, i8* %14279, align 1
  store %struct.Memory* %loadMem_45fe80, %struct.Memory** %MEMORY
  %loadMem_45fe83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14281 = getelementptr inbounds %struct.GPR, %struct.GPR* %14280, i32 0, i32 33
  %14282 = getelementptr inbounds %struct.Reg, %struct.Reg* %14281, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %14282 to i64*
  %14283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14284 = getelementptr inbounds %struct.GPR, %struct.GPR* %14283, i32 0, i32 5
  %14285 = getelementptr inbounds %struct.Reg, %struct.Reg* %14284, i32 0, i32 0
  %RCX.i84 = bitcast %union.anon* %14285 to i64*
  %14286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14287 = getelementptr inbounds %struct.GPR, %struct.GPR* %14286, i32 0, i32 15
  %14288 = getelementptr inbounds %struct.Reg, %struct.Reg* %14287, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %14288 to i64*
  %14289 = load i64, i64* %RBP.i85
  %14290 = sub i64 %14289, 16
  %14291 = load i64, i64* %PC.i83
  %14292 = add i64 %14291, 4
  store i64 %14292, i64* %PC.i83
  %14293 = inttoptr i64 %14290 to i32*
  %14294 = load i32, i32* %14293
  %14295 = sext i32 %14294 to i64
  store i64 %14295, i64* %RCX.i84, align 8
  store %struct.Memory* %loadMem_45fe83, %struct.Memory** %MEMORY
  %loadMem_45fe87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14297 = getelementptr inbounds %struct.GPR, %struct.GPR* %14296, i32 0, i32 33
  %14298 = getelementptr inbounds %struct.Reg, %struct.Reg* %14297, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %14298 to i64*
  %14299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14300 = getelementptr inbounds %struct.GPR, %struct.GPR* %14299, i32 0, i32 1
  %14301 = getelementptr inbounds %struct.Reg, %struct.Reg* %14300, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %14301 to i64*
  %14302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14303 = getelementptr inbounds %struct.GPR, %struct.GPR* %14302, i32 0, i32 5
  %14304 = getelementptr inbounds %struct.Reg, %struct.Reg* %14303, i32 0, i32 0
  %RCX.i81 = bitcast %union.anon* %14304 to i64*
  %14305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14306 = getelementptr inbounds %struct.GPR, %struct.GPR* %14305, i32 0, i32 7
  %14307 = getelementptr inbounds %struct.Reg, %struct.Reg* %14306, i32 0, i32 0
  %RDX.i82 = bitcast %union.anon* %14307 to i64*
  %14308 = load i64, i64* %RAX.i80
  %14309 = load i64, i64* %RCX.i81
  %14310 = mul i64 %14309, 4
  %14311 = add i64 %14310, %14308
  %14312 = load i64, i64* %PC.i79
  %14313 = add i64 %14312, 3
  store i64 %14313, i64* %PC.i79
  %14314 = inttoptr i64 %14311 to i32*
  %14315 = load i32, i32* %14314
  %14316 = zext i32 %14315 to i64
  store i64 %14316, i64* %RDX.i82, align 8
  store %struct.Memory* %loadMem_45fe87, %struct.Memory** %MEMORY
  %loadMem_45fe8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14318 = getelementptr inbounds %struct.GPR, %struct.GPR* %14317, i32 0, i32 33
  %14319 = getelementptr inbounds %struct.Reg, %struct.Reg* %14318, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %14319 to i64*
  %14320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14321 = getelementptr inbounds %struct.GPR, %struct.GPR* %14320, i32 0, i32 7
  %14322 = getelementptr inbounds %struct.Reg, %struct.Reg* %14321, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %14322 to i32*
  %14323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14324 = getelementptr inbounds %struct.GPR, %struct.GPR* %14323, i32 0, i32 15
  %14325 = getelementptr inbounds %struct.Reg, %struct.Reg* %14324, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %14325 to i64*
  %14326 = load i64, i64* %RBP.i78
  %14327 = sub i64 %14326, 804
  %14328 = load i32, i32* %EDX.i
  %14329 = zext i32 %14328 to i64
  %14330 = load i64, i64* %PC.i77
  %14331 = add i64 %14330, 6
  store i64 %14331, i64* %PC.i77
  %14332 = inttoptr i64 %14327 to i32*
  store i32 %14328, i32* %14332
  store %struct.Memory* %loadMem_45fe8a, %struct.Memory** %MEMORY
  br label %block_.L_45fe90

block_.L_45fe90:                                  ; preds = %block_.L_45fe71, %block_45fe4b
  %loadMem_45fe90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14334 = getelementptr inbounds %struct.GPR, %struct.GPR* %14333, i32 0, i32 33
  %14335 = getelementptr inbounds %struct.Reg, %struct.Reg* %14334, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %14335 to i64*
  %14336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14337 = getelementptr inbounds %struct.GPR, %struct.GPR* %14336, i32 0, i32 1
  %14338 = getelementptr inbounds %struct.Reg, %struct.Reg* %14337, i32 0, i32 0
  %RAX.i75 = bitcast %union.anon* %14338 to i64*
  %14339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14340 = getelementptr inbounds %struct.GPR, %struct.GPR* %14339, i32 0, i32 15
  %14341 = getelementptr inbounds %struct.Reg, %struct.Reg* %14340, i32 0, i32 0
  %RBP.i76 = bitcast %union.anon* %14341 to i64*
  %14342 = load i64, i64* %RBP.i76
  %14343 = sub i64 %14342, 804
  %14344 = load i64, i64* %PC.i74
  %14345 = add i64 %14344, 6
  store i64 %14345, i64* %PC.i74
  %14346 = inttoptr i64 %14343 to i32*
  %14347 = load i32, i32* %14346
  %14348 = zext i32 %14347 to i64
  store i64 %14348, i64* %RAX.i75, align 8
  store %struct.Memory* %loadMem_45fe90, %struct.Memory** %MEMORY
  %loadMem_45fe96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14350 = getelementptr inbounds %struct.GPR, %struct.GPR* %14349, i32 0, i32 33
  %14351 = getelementptr inbounds %struct.Reg, %struct.Reg* %14350, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %14351 to i64*
  %14352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14353 = getelementptr inbounds %struct.GPR, %struct.GPR* %14352, i32 0, i32 1
  %14354 = getelementptr inbounds %struct.Reg, %struct.Reg* %14353, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %14354 to i64*
  %14355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14356 = getelementptr inbounds %struct.GPR, %struct.GPR* %14355, i32 0, i32 15
  %14357 = getelementptr inbounds %struct.Reg, %struct.Reg* %14356, i32 0, i32 0
  %RBP.i73 = bitcast %union.anon* %14357 to i64*
  %14358 = load i64, i64* %RAX.i72
  %14359 = load i64, i64* %RBP.i73
  %14360 = sub i64 %14359, 24
  %14361 = load i64, i64* %PC.i71
  %14362 = add i64 %14361, 3
  store i64 %14362, i64* %PC.i71
  %14363 = trunc i64 %14358 to i32
  %14364 = inttoptr i64 %14360 to i32*
  %14365 = load i32, i32* %14364
  %14366 = add i32 %14365, %14363
  %14367 = zext i32 %14366 to i64
  store i64 %14367, i64* %RAX.i72, align 8
  %14368 = icmp ult i32 %14366, %14363
  %14369 = icmp ult i32 %14366, %14365
  %14370 = or i1 %14368, %14369
  %14371 = zext i1 %14370 to i8
  %14372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14371, i8* %14372, align 1
  %14373 = and i32 %14366, 255
  %14374 = call i32 @llvm.ctpop.i32(i32 %14373)
  %14375 = trunc i32 %14374 to i8
  %14376 = and i8 %14375, 1
  %14377 = xor i8 %14376, 1
  %14378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14377, i8* %14378, align 1
  %14379 = xor i32 %14365, %14363
  %14380 = xor i32 %14379, %14366
  %14381 = lshr i32 %14380, 4
  %14382 = trunc i32 %14381 to i8
  %14383 = and i8 %14382, 1
  %14384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14383, i8* %14384, align 1
  %14385 = icmp eq i32 %14366, 0
  %14386 = zext i1 %14385 to i8
  %14387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14386, i8* %14387, align 1
  %14388 = lshr i32 %14366, 31
  %14389 = trunc i32 %14388 to i8
  %14390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14389, i8* %14390, align 1
  %14391 = lshr i32 %14363, 31
  %14392 = lshr i32 %14365, 31
  %14393 = xor i32 %14388, %14391
  %14394 = xor i32 %14388, %14392
  %14395 = add i32 %14393, %14394
  %14396 = icmp eq i32 %14395, 2
  %14397 = zext i1 %14396 to i8
  %14398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14397, i8* %14398, align 1
  store %struct.Memory* %loadMem_45fe96, %struct.Memory** %MEMORY
  %loadMem_45fe99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14400 = getelementptr inbounds %struct.GPR, %struct.GPR* %14399, i32 0, i32 33
  %14401 = getelementptr inbounds %struct.Reg, %struct.Reg* %14400, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %14401 to i64*
  %14402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14403 = getelementptr inbounds %struct.GPR, %struct.GPR* %14402, i32 0, i32 1
  %14404 = getelementptr inbounds %struct.Reg, %struct.Reg* %14403, i32 0, i32 0
  %EAX.i69 = bitcast %union.anon* %14404 to i32*
  %14405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14406 = getelementptr inbounds %struct.GPR, %struct.GPR* %14405, i32 0, i32 15
  %14407 = getelementptr inbounds %struct.Reg, %struct.Reg* %14406, i32 0, i32 0
  %RBP.i70 = bitcast %union.anon* %14407 to i64*
  %14408 = load i64, i64* %RBP.i70
  %14409 = sub i64 %14408, 24
  %14410 = load i32, i32* %EAX.i69
  %14411 = zext i32 %14410 to i64
  %14412 = load i64, i64* %PC.i68
  %14413 = add i64 %14412, 3
  store i64 %14413, i64* %PC.i68
  %14414 = inttoptr i64 %14409 to i32*
  store i32 %14410, i32* %14414
  store %struct.Memory* %loadMem_45fe99, %struct.Memory** %MEMORY
  %loadMem_45fe9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14416 = getelementptr inbounds %struct.GPR, %struct.GPR* %14415, i32 0, i32 33
  %14417 = getelementptr inbounds %struct.Reg, %struct.Reg* %14416, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %14417 to i64*
  %14418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14419 = getelementptr inbounds %struct.GPR, %struct.GPR* %14418, i32 0, i32 1
  %14420 = getelementptr inbounds %struct.Reg, %struct.Reg* %14419, i32 0, i32 0
  %RAX.i66 = bitcast %union.anon* %14420 to i64*
  %14421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14422 = getelementptr inbounds %struct.GPR, %struct.GPR* %14421, i32 0, i32 15
  %14423 = getelementptr inbounds %struct.Reg, %struct.Reg* %14422, i32 0, i32 0
  %RBP.i67 = bitcast %union.anon* %14423 to i64*
  %14424 = load i64, i64* %RBP.i67
  %14425 = sub i64 %14424, 16
  %14426 = load i64, i64* %PC.i65
  %14427 = add i64 %14426, 3
  store i64 %14427, i64* %PC.i65
  %14428 = inttoptr i64 %14425 to i32*
  %14429 = load i32, i32* %14428
  %14430 = zext i32 %14429 to i64
  store i64 %14430, i64* %RAX.i66, align 8
  store %struct.Memory* %loadMem_45fe9c, %struct.Memory** %MEMORY
  %loadMem_45fe9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14432 = getelementptr inbounds %struct.GPR, %struct.GPR* %14431, i32 0, i32 33
  %14433 = getelementptr inbounds %struct.Reg, %struct.Reg* %14432, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %14433 to i64*
  %14434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14435 = getelementptr inbounds %struct.GPR, %struct.GPR* %14434, i32 0, i32 1
  %14436 = getelementptr inbounds %struct.Reg, %struct.Reg* %14435, i32 0, i32 0
  %RAX.i64 = bitcast %union.anon* %14436 to i64*
  %14437 = load i64, i64* %RAX.i64
  %14438 = load i64, i64* %PC.i63
  %14439 = add i64 %14438, 3
  store i64 %14439, i64* %PC.i63
  %14440 = trunc i64 %14437 to i32
  %14441 = add i32 1, %14440
  %14442 = zext i32 %14441 to i64
  store i64 %14442, i64* %RAX.i64, align 8
  %14443 = icmp ult i32 %14441, %14440
  %14444 = icmp ult i32 %14441, 1
  %14445 = or i1 %14443, %14444
  %14446 = zext i1 %14445 to i8
  %14447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14446, i8* %14447, align 1
  %14448 = and i32 %14441, 255
  %14449 = call i32 @llvm.ctpop.i32(i32 %14448)
  %14450 = trunc i32 %14449 to i8
  %14451 = and i8 %14450, 1
  %14452 = xor i8 %14451, 1
  %14453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14452, i8* %14453, align 1
  %14454 = xor i64 1, %14437
  %14455 = trunc i64 %14454 to i32
  %14456 = xor i32 %14455, %14441
  %14457 = lshr i32 %14456, 4
  %14458 = trunc i32 %14457 to i8
  %14459 = and i8 %14458, 1
  %14460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14459, i8* %14460, align 1
  %14461 = icmp eq i32 %14441, 0
  %14462 = zext i1 %14461 to i8
  %14463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14462, i8* %14463, align 1
  %14464 = lshr i32 %14441, 31
  %14465 = trunc i32 %14464 to i8
  %14466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14465, i8* %14466, align 1
  %14467 = lshr i32 %14440, 31
  %14468 = xor i32 %14464, %14467
  %14469 = add i32 %14468, %14464
  %14470 = icmp eq i32 %14469, 2
  %14471 = zext i1 %14470 to i8
  %14472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14471, i8* %14472, align 1
  store %struct.Memory* %loadMem_45fe9f, %struct.Memory** %MEMORY
  %loadMem_45fea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14474 = getelementptr inbounds %struct.GPR, %struct.GPR* %14473, i32 0, i32 33
  %14475 = getelementptr inbounds %struct.Reg, %struct.Reg* %14474, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %14475 to i64*
  %14476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14477 = getelementptr inbounds %struct.GPR, %struct.GPR* %14476, i32 0, i32 1
  %14478 = getelementptr inbounds %struct.Reg, %struct.Reg* %14477, i32 0, i32 0
  %EAX.i61 = bitcast %union.anon* %14478 to i32*
  %14479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14480 = getelementptr inbounds %struct.GPR, %struct.GPR* %14479, i32 0, i32 15
  %14481 = getelementptr inbounds %struct.Reg, %struct.Reg* %14480, i32 0, i32 0
  %RBP.i62 = bitcast %union.anon* %14481 to i64*
  %14482 = load i64, i64* %RBP.i62
  %14483 = sub i64 %14482, 16
  %14484 = load i32, i32* %EAX.i61
  %14485 = zext i32 %14484 to i64
  %14486 = load i64, i64* %PC.i60
  %14487 = add i64 %14486, 3
  store i64 %14487, i64* %PC.i60
  %14488 = inttoptr i64 %14483 to i32*
  store i32 %14484, i32* %14488
  store %struct.Memory* %loadMem_45fea2, %struct.Memory** %MEMORY
  %loadMem_45fea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14490 = getelementptr inbounds %struct.GPR, %struct.GPR* %14489, i32 0, i32 33
  %14491 = getelementptr inbounds %struct.Reg, %struct.Reg* %14490, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %14491 to i64*
  %14492 = load i64, i64* %PC.i59
  %14493 = add i64 %14492, -132
  %14494 = load i64, i64* %PC.i59
  %14495 = add i64 %14494, 5
  store i64 %14495, i64* %PC.i59
  %14496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14493, i64* %14496, align 8
  store %struct.Memory* %loadMem_45fea5, %struct.Memory** %MEMORY
  br label %block_.L_45fe21

block_.L_45feaa:                                  ; preds = %block_.L_45fe21
  %loadMem_45feaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %14497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14498 = getelementptr inbounds %struct.GPR, %struct.GPR* %14497, i32 0, i32 33
  %14499 = getelementptr inbounds %struct.Reg, %struct.Reg* %14498, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %14499 to i64*
  %14500 = load i64, i64* %PC.i58
  %14501 = add i64 %14500, 5
  %14502 = load i64, i64* %PC.i58
  %14503 = add i64 %14502, 5
  store i64 %14503, i64* %PC.i58
  %14504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14501, i64* %14504, align 8
  store %struct.Memory* %loadMem_45feaa, %struct.Memory** %MEMORY
  br label %block_.L_45feaf

block_.L_45feaf:                                  ; preds = %block_.L_45feaa
  %loadMem_45feaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14506 = getelementptr inbounds %struct.GPR, %struct.GPR* %14505, i32 0, i32 33
  %14507 = getelementptr inbounds %struct.Reg, %struct.Reg* %14506, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %14507 to i64*
  %14508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14509 = getelementptr inbounds %struct.GPR, %struct.GPR* %14508, i32 0, i32 1
  %14510 = getelementptr inbounds %struct.Reg, %struct.Reg* %14509, i32 0, i32 0
  %RAX.i56 = bitcast %union.anon* %14510 to i64*
  %14511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14512 = getelementptr inbounds %struct.GPR, %struct.GPR* %14511, i32 0, i32 15
  %14513 = getelementptr inbounds %struct.Reg, %struct.Reg* %14512, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %14513 to i64*
  %14514 = load i64, i64* %RBP.i57
  %14515 = sub i64 %14514, 20
  %14516 = load i64, i64* %PC.i55
  %14517 = add i64 %14516, 3
  store i64 %14517, i64* %PC.i55
  %14518 = inttoptr i64 %14515 to i32*
  %14519 = load i32, i32* %14518
  %14520 = zext i32 %14519 to i64
  store i64 %14520, i64* %RAX.i56, align 8
  store %struct.Memory* %loadMem_45feaf, %struct.Memory** %MEMORY
  %loadMem_45feb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14522 = getelementptr inbounds %struct.GPR, %struct.GPR* %14521, i32 0, i32 33
  %14523 = getelementptr inbounds %struct.Reg, %struct.Reg* %14522, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %14523 to i64*
  %14524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14525 = getelementptr inbounds %struct.GPR, %struct.GPR* %14524, i32 0, i32 1
  %14526 = getelementptr inbounds %struct.Reg, %struct.Reg* %14525, i32 0, i32 0
  %RAX.i54 = bitcast %union.anon* %14526 to i64*
  %14527 = load i64, i64* %RAX.i54
  %14528 = load i64, i64* %PC.i53
  %14529 = add i64 %14528, 3
  store i64 %14529, i64* %PC.i53
  %14530 = trunc i64 %14527 to i32
  %14531 = add i32 1, %14530
  %14532 = zext i32 %14531 to i64
  store i64 %14532, i64* %RAX.i54, align 8
  %14533 = icmp ult i32 %14531, %14530
  %14534 = icmp ult i32 %14531, 1
  %14535 = or i1 %14533, %14534
  %14536 = zext i1 %14535 to i8
  %14537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14536, i8* %14537, align 1
  %14538 = and i32 %14531, 255
  %14539 = call i32 @llvm.ctpop.i32(i32 %14538)
  %14540 = trunc i32 %14539 to i8
  %14541 = and i8 %14540, 1
  %14542 = xor i8 %14541, 1
  %14543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14542, i8* %14543, align 1
  %14544 = xor i64 1, %14527
  %14545 = trunc i64 %14544 to i32
  %14546 = xor i32 %14545, %14531
  %14547 = lshr i32 %14546, 4
  %14548 = trunc i32 %14547 to i8
  %14549 = and i8 %14548, 1
  %14550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14549, i8* %14550, align 1
  %14551 = icmp eq i32 %14531, 0
  %14552 = zext i1 %14551 to i8
  %14553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14552, i8* %14553, align 1
  %14554 = lshr i32 %14531, 31
  %14555 = trunc i32 %14554 to i8
  %14556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14555, i8* %14556, align 1
  %14557 = lshr i32 %14530, 31
  %14558 = xor i32 %14554, %14557
  %14559 = add i32 %14558, %14554
  %14560 = icmp eq i32 %14559, 2
  %14561 = zext i1 %14560 to i8
  %14562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14561, i8* %14562, align 1
  store %struct.Memory* %loadMem_45feb2, %struct.Memory** %MEMORY
  %loadMem_45feb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14564 = getelementptr inbounds %struct.GPR, %struct.GPR* %14563, i32 0, i32 33
  %14565 = getelementptr inbounds %struct.Reg, %struct.Reg* %14564, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %14565 to i64*
  %14566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14567 = getelementptr inbounds %struct.GPR, %struct.GPR* %14566, i32 0, i32 1
  %14568 = getelementptr inbounds %struct.Reg, %struct.Reg* %14567, i32 0, i32 0
  %EAX.i51 = bitcast %union.anon* %14568 to i32*
  %14569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14570 = getelementptr inbounds %struct.GPR, %struct.GPR* %14569, i32 0, i32 15
  %14571 = getelementptr inbounds %struct.Reg, %struct.Reg* %14570, i32 0, i32 0
  %RBP.i52 = bitcast %union.anon* %14571 to i64*
  %14572 = load i64, i64* %RBP.i52
  %14573 = sub i64 %14572, 20
  %14574 = load i32, i32* %EAX.i51
  %14575 = zext i32 %14574 to i64
  %14576 = load i64, i64* %PC.i50
  %14577 = add i64 %14576, 3
  store i64 %14577, i64* %PC.i50
  %14578 = inttoptr i64 %14573 to i32*
  store i32 %14574, i32* %14578
  store %struct.Memory* %loadMem_45feb5, %struct.Memory** %MEMORY
  %loadMem_45feb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14580 = getelementptr inbounds %struct.GPR, %struct.GPR* %14579, i32 0, i32 33
  %14581 = getelementptr inbounds %struct.Reg, %struct.Reg* %14580, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %14581 to i64*
  %14582 = load i64, i64* %PC.i49
  %14583 = add i64 %14582, -168
  %14584 = load i64, i64* %PC.i49
  %14585 = add i64 %14584, 5
  store i64 %14585, i64* %PC.i49
  %14586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14583, i64* %14586, align 8
  store %struct.Memory* %loadMem_45feb8, %struct.Memory** %MEMORY
  br label %block_.L_45fe10

block_.L_45febd:                                  ; preds = %block_.L_45fe10
  %loadMem_45febd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14588 = getelementptr inbounds %struct.GPR, %struct.GPR* %14587, i32 0, i32 33
  %14589 = getelementptr inbounds %struct.Reg, %struct.Reg* %14588, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %14589 to i64*
  %14590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14591 = getelementptr inbounds %struct.GPR, %struct.GPR* %14590, i32 0, i32 1
  %14592 = getelementptr inbounds %struct.Reg, %struct.Reg* %14591, i32 0, i32 0
  %RAX.i47 = bitcast %union.anon* %14592 to i64*
  %14593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14594 = getelementptr inbounds %struct.GPR, %struct.GPR* %14593, i32 0, i32 15
  %14595 = getelementptr inbounds %struct.Reg, %struct.Reg* %14594, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %14595 to i64*
  %14596 = load i64, i64* %RBP.i48
  %14597 = sub i64 %14596, 24
  %14598 = load i64, i64* %PC.i46
  %14599 = add i64 %14598, 3
  store i64 %14599, i64* %PC.i46
  %14600 = inttoptr i64 %14597 to i32*
  %14601 = load i32, i32* %14600
  %14602 = zext i32 %14601 to i64
  store i64 %14602, i64* %RAX.i47, align 8
  store %struct.Memory* %loadMem_45febd, %struct.Memory** %MEMORY
  %loadMem_45fec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14604 = getelementptr inbounds %struct.GPR, %struct.GPR* %14603, i32 0, i32 33
  %14605 = getelementptr inbounds %struct.Reg, %struct.Reg* %14604, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %14605 to i64*
  %14606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14607 = getelementptr inbounds %struct.GPR, %struct.GPR* %14606, i32 0, i32 1
  %14608 = getelementptr inbounds %struct.Reg, %struct.Reg* %14607, i32 0, i32 0
  %RAX.i45 = bitcast %union.anon* %14608 to i64*
  %14609 = load i64, i64* %RAX.i45
  %14610 = load i64, i64* %PC.i44
  %14611 = add i64 %14610, 3
  store i64 %14611, i64* %PC.i44
  %14612 = trunc i64 %14609 to i32
  %14613 = add i32 2, %14612
  %14614 = zext i32 %14613 to i64
  store i64 %14614, i64* %RAX.i45, align 8
  %14615 = icmp ult i32 %14613, %14612
  %14616 = icmp ult i32 %14613, 2
  %14617 = or i1 %14615, %14616
  %14618 = zext i1 %14617 to i8
  %14619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14618, i8* %14619, align 1
  %14620 = and i32 %14613, 255
  %14621 = call i32 @llvm.ctpop.i32(i32 %14620)
  %14622 = trunc i32 %14621 to i8
  %14623 = and i8 %14622, 1
  %14624 = xor i8 %14623, 1
  %14625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14624, i8* %14625, align 1
  %14626 = xor i64 2, %14609
  %14627 = trunc i64 %14626 to i32
  %14628 = xor i32 %14627, %14613
  %14629 = lshr i32 %14628, 4
  %14630 = trunc i32 %14629 to i8
  %14631 = and i8 %14630, 1
  %14632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14631, i8* %14632, align 1
  %14633 = icmp eq i32 %14613, 0
  %14634 = zext i1 %14633 to i8
  %14635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14634, i8* %14635, align 1
  %14636 = lshr i32 %14613, 31
  %14637 = trunc i32 %14636 to i8
  %14638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14637, i8* %14638, align 1
  %14639 = lshr i32 %14612, 31
  %14640 = xor i32 %14636, %14639
  %14641 = add i32 %14640, %14636
  %14642 = icmp eq i32 %14641, 2
  %14643 = zext i1 %14642 to i8
  %14644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14643, i8* %14644, align 1
  store %struct.Memory* %loadMem_45fec0, %struct.Memory** %MEMORY
  %loadMem_45fec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14646 = getelementptr inbounds %struct.GPR, %struct.GPR* %14645, i32 0, i32 33
  %14647 = getelementptr inbounds %struct.Reg, %struct.Reg* %14646, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %14647 to i64*
  %14648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14649 = getelementptr inbounds %struct.GPR, %struct.GPR* %14648, i32 0, i32 1
  %14650 = getelementptr inbounds %struct.Reg, %struct.Reg* %14649, i32 0, i32 0
  %RAX.i43 = bitcast %union.anon* %14650 to i64*
  %14651 = load i64, i64* %RAX.i43
  %14652 = load i64, i64* %PC.i42
  %14653 = add i64 %14652, 3
  store i64 %14653, i64* %PC.i42
  %14654 = shl i64 %14651, 32
  %14655 = ashr exact i64 %14654, 32
  %14656 = ashr i64 %14655, 1
  %14657 = lshr i64 %14656, 1
  %14658 = trunc i64 %14656 to i8
  %14659 = and i8 %14658, 1
  %14660 = trunc i64 %14657 to i32
  %14661 = and i64 %14657, 4294967295
  store i64 %14661, i64* %RAX.i43, align 8
  %14662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14659, i8* %14662, align 1
  %14663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %14664 = and i32 %14660, 255
  %14665 = call i32 @llvm.ctpop.i32(i32 %14664)
  %14666 = trunc i32 %14665 to i8
  %14667 = and i8 %14666, 1
  %14668 = xor i8 %14667, 1
  store i8 %14668, i8* %14663, align 1
  %14669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14669, align 1
  %14670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14671 = icmp eq i32 %14660, 0
  %14672 = zext i1 %14671 to i8
  store i8 %14672, i8* %14670, align 1
  %14673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14674 = lshr i32 %14660, 31
  %14675 = trunc i32 %14674 to i8
  store i8 %14675, i8* %14673, align 1
  %14676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14676, align 1
  store %struct.Memory* %loadMem_45fec3, %struct.Memory** %MEMORY
  %loadMem_45fec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14678 = getelementptr inbounds %struct.GPR, %struct.GPR* %14677, i32 0, i32 33
  %14679 = getelementptr inbounds %struct.Reg, %struct.Reg* %14678, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %14679 to i64*
  %14680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14681 = getelementptr inbounds %struct.GPR, %struct.GPR* %14680, i32 0, i32 1
  %14682 = getelementptr inbounds %struct.Reg, %struct.Reg* %14681, i32 0, i32 0
  %EAX.i40 = bitcast %union.anon* %14682 to i32*
  %14683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14684 = getelementptr inbounds %struct.GPR, %struct.GPR* %14683, i32 0, i32 15
  %14685 = getelementptr inbounds %struct.Reg, %struct.Reg* %14684, i32 0, i32 0
  %RBP.i41 = bitcast %union.anon* %14685 to i64*
  %14686 = load i64, i64* %RBP.i41
  %14687 = sub i64 %14686, 24
  %14688 = load i32, i32* %EAX.i40
  %14689 = zext i32 %14688 to i64
  %14690 = load i64, i64* %PC.i39
  %14691 = add i64 %14690, 3
  store i64 %14691, i64* %PC.i39
  %14692 = inttoptr i64 %14687 to i32*
  store i32 %14688, i32* %14692
  store %struct.Memory* %loadMem_45fec6, %struct.Memory** %MEMORY
  %loadMem_45fec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14694 = getelementptr inbounds %struct.GPR, %struct.GPR* %14693, i32 0, i32 33
  %14695 = getelementptr inbounds %struct.Reg, %struct.Reg* %14694, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %14695 to i64*
  %14696 = load i64, i64* %PC.i38
  %14697 = add i64 %14696, 70
  %14698 = load i64, i64* %PC.i38
  %14699 = add i64 %14698, 5
  store i64 %14699, i64* %PC.i38
  %14700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14697, i64* %14700, align 8
  store %struct.Memory* %loadMem_45fec9, %struct.Memory** %MEMORY
  br label %block_.L_45ff0f

block_.L_45fece:                                  ; preds = %entry
  %loadMem_45fece = load %struct.Memory*, %struct.Memory** %MEMORY
  %14701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14702 = getelementptr inbounds %struct.GPR, %struct.GPR* %14701, i32 0, i32 33
  %14703 = getelementptr inbounds %struct.Reg, %struct.Reg* %14702, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %14703 to i64*
  %14704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14705 = getelementptr inbounds %struct.GPR, %struct.GPR* %14704, i32 0, i32 15
  %14706 = getelementptr inbounds %struct.Reg, %struct.Reg* %14705, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %14706 to i64*
  %14707 = load i64, i64* %RBP.i37
  %14708 = sub i64 %14707, 16
  %14709 = load i64, i64* %PC.i36
  %14710 = add i64 %14709, 7
  store i64 %14710, i64* %PC.i36
  %14711 = inttoptr i64 %14708 to i32*
  store i32 0, i32* %14711
  store %struct.Memory* %loadMem_45fece, %struct.Memory** %MEMORY
  br label %block_.L_45fed5

block_.L_45fed5:                                  ; preds = %block_45fedf, %block_.L_45fece
  %loadMem_45fed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14713 = getelementptr inbounds %struct.GPR, %struct.GPR* %14712, i32 0, i32 33
  %14714 = getelementptr inbounds %struct.Reg, %struct.Reg* %14713, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %14714 to i64*
  %14715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14716 = getelementptr inbounds %struct.GPR, %struct.GPR* %14715, i32 0, i32 15
  %14717 = getelementptr inbounds %struct.Reg, %struct.Reg* %14716, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %14717 to i64*
  %14718 = load i64, i64* %RBP.i35
  %14719 = sub i64 %14718, 16
  %14720 = load i64, i64* %PC.i34
  %14721 = add i64 %14720, 4
  store i64 %14721, i64* %PC.i34
  %14722 = inttoptr i64 %14719 to i32*
  %14723 = load i32, i32* %14722
  %14724 = sub i32 %14723, 64
  %14725 = icmp ult i32 %14723, 64
  %14726 = zext i1 %14725 to i8
  %14727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14726, i8* %14727, align 1
  %14728 = and i32 %14724, 255
  %14729 = call i32 @llvm.ctpop.i32(i32 %14728)
  %14730 = trunc i32 %14729 to i8
  %14731 = and i8 %14730, 1
  %14732 = xor i8 %14731, 1
  %14733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14732, i8* %14733, align 1
  %14734 = xor i32 %14723, 64
  %14735 = xor i32 %14734, %14724
  %14736 = lshr i32 %14735, 4
  %14737 = trunc i32 %14736 to i8
  %14738 = and i8 %14737, 1
  %14739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14738, i8* %14739, align 1
  %14740 = icmp eq i32 %14724, 0
  %14741 = zext i1 %14740 to i8
  %14742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14741, i8* %14742, align 1
  %14743 = lshr i32 %14724, 31
  %14744 = trunc i32 %14743 to i8
  %14745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14744, i8* %14745, align 1
  %14746 = lshr i32 %14723, 31
  %14747 = xor i32 %14743, %14746
  %14748 = add i32 %14747, %14746
  %14749 = icmp eq i32 %14748, 2
  %14750 = zext i1 %14749 to i8
  %14751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14750, i8* %14751, align 1
  store %struct.Memory* %loadMem_45fed5, %struct.Memory** %MEMORY
  %loadMem_45fed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14753 = getelementptr inbounds %struct.GPR, %struct.GPR* %14752, i32 0, i32 33
  %14754 = getelementptr inbounds %struct.Reg, %struct.Reg* %14753, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %14754 to i64*
  %14755 = load i64, i64* %PC.i33
  %14756 = add i64 %14755, 49
  %14757 = load i64, i64* %PC.i33
  %14758 = add i64 %14757, 6
  %14759 = load i64, i64* %PC.i33
  %14760 = add i64 %14759, 6
  store i64 %14760, i64* %PC.i33
  %14761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14762 = load i8, i8* %14761, align 1
  %14763 = icmp ne i8 %14762, 0
  %14764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14765 = load i8, i8* %14764, align 1
  %14766 = icmp ne i8 %14765, 0
  %14767 = xor i1 %14763, %14766
  %14768 = xor i1 %14767, true
  %14769 = zext i1 %14768 to i8
  store i8 %14769, i8* %BRANCH_TAKEN, align 1
  %14770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14771 = select i1 %14767, i64 %14758, i64 %14756
  store i64 %14771, i64* %14770, align 8
  store %struct.Memory* %loadMem_45fed9, %struct.Memory** %MEMORY
  %loadBr_45fed9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_45fed9 = icmp eq i8 %loadBr_45fed9, 1
  br i1 %cmpBr_45fed9, label %block_.L_45ff0a, label %block_45fedf

block_45fedf:                                     ; preds = %block_.L_45fed5
  %loadMem_45fedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %14772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14773 = getelementptr inbounds %struct.GPR, %struct.GPR* %14772, i32 0, i32 33
  %14774 = getelementptr inbounds %struct.Reg, %struct.Reg* %14773, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %14774 to i64*
  %14775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14776 = getelementptr inbounds %struct.GPR, %struct.GPR* %14775, i32 0, i32 1
  %14777 = getelementptr inbounds %struct.Reg, %struct.Reg* %14776, i32 0, i32 0
  %RAX.i32 = bitcast %union.anon* %14777 to i64*
  %14778 = load i64, i64* %PC.i31
  %14779 = add i64 %14778, 8
  store i64 %14779, i64* %PC.i31
  %14780 = load i64, i64* bitcast (%G_0x726840_type* @G_0x726840 to i64*)
  store i64 %14780, i64* %RAX.i32, align 8
  store %struct.Memory* %loadMem_45fedf, %struct.Memory** %MEMORY
  %loadMem_45fee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14782 = getelementptr inbounds %struct.GPR, %struct.GPR* %14781, i32 0, i32 33
  %14783 = getelementptr inbounds %struct.Reg, %struct.Reg* %14782, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %14783 to i64*
  %14784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14785 = getelementptr inbounds %struct.GPR, %struct.GPR* %14784, i32 0, i32 5
  %14786 = getelementptr inbounds %struct.Reg, %struct.Reg* %14785, i32 0, i32 0
  %RCX.i29 = bitcast %union.anon* %14786 to i64*
  %14787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14788 = getelementptr inbounds %struct.GPR, %struct.GPR* %14787, i32 0, i32 15
  %14789 = getelementptr inbounds %struct.Reg, %struct.Reg* %14788, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %14789 to i64*
  %14790 = load i64, i64* %RBP.i30
  %14791 = sub i64 %14790, 8
  %14792 = load i64, i64* %PC.i28
  %14793 = add i64 %14792, 4
  store i64 %14793, i64* %PC.i28
  %14794 = inttoptr i64 %14791 to i64*
  %14795 = load i64, i64* %14794
  store i64 %14795, i64* %RCX.i29, align 8
  store %struct.Memory* %loadMem_45fee7, %struct.Memory** %MEMORY
  %loadMem_45feeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14797 = getelementptr inbounds %struct.GPR, %struct.GPR* %14796, i32 0, i32 33
  %14798 = getelementptr inbounds %struct.Reg, %struct.Reg* %14797, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %14798 to i64*
  %14799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14800 = getelementptr inbounds %struct.GPR, %struct.GPR* %14799, i32 0, i32 7
  %14801 = getelementptr inbounds %struct.Reg, %struct.Reg* %14800, i32 0, i32 0
  %RDX.i26 = bitcast %union.anon* %14801 to i64*
  %14802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14803 = getelementptr inbounds %struct.GPR, %struct.GPR* %14802, i32 0, i32 15
  %14804 = getelementptr inbounds %struct.Reg, %struct.Reg* %14803, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %14804 to i64*
  %14805 = load i64, i64* %RBP.i27
  %14806 = sub i64 %14805, 16
  %14807 = load i64, i64* %PC.i25
  %14808 = add i64 %14807, 4
  store i64 %14808, i64* %PC.i25
  %14809 = inttoptr i64 %14806 to i32*
  %14810 = load i32, i32* %14809
  %14811 = sext i32 %14810 to i64
  store i64 %14811, i64* %RDX.i26, align 8
  store %struct.Memory* %loadMem_45feeb, %struct.Memory** %MEMORY
  %loadMem_45feef = load %struct.Memory*, %struct.Memory** %MEMORY
  %14812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14813 = getelementptr inbounds %struct.GPR, %struct.GPR* %14812, i32 0, i32 33
  %14814 = getelementptr inbounds %struct.Reg, %struct.Reg* %14813, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %14814 to i64*
  %14815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14816 = getelementptr inbounds %struct.GPR, %struct.GPR* %14815, i32 0, i32 5
  %14817 = getelementptr inbounds %struct.Reg, %struct.Reg* %14816, i32 0, i32 0
  %RCX.i24 = bitcast %union.anon* %14817 to i64*
  %14818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14819 = getelementptr inbounds %struct.GPR, %struct.GPR* %14818, i32 0, i32 7
  %14820 = getelementptr inbounds %struct.Reg, %struct.Reg* %14819, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %14820 to i64*
  %14821 = load i64, i64* %RCX.i24
  %14822 = load i64, i64* %RDX.i
  %14823 = mul i64 %14822, 4
  %14824 = add i64 %14823, %14821
  %14825 = load i64, i64* %PC.i23
  %14826 = add i64 %14825, 4
  store i64 %14826, i64* %PC.i23
  %14827 = inttoptr i64 %14824 to i32*
  %14828 = load i32, i32* %14827
  %14829 = sext i32 %14828 to i64
  store i64 %14829, i64* %RCX.i24, align 8
  store %struct.Memory* %loadMem_45feef, %struct.Memory** %MEMORY
  %loadMem_45fef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14831 = getelementptr inbounds %struct.GPR, %struct.GPR* %14830, i32 0, i32 33
  %14832 = getelementptr inbounds %struct.Reg, %struct.Reg* %14831, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %14832 to i64*
  %14833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14834 = getelementptr inbounds %struct.GPR, %struct.GPR* %14833, i32 0, i32 1
  %14835 = getelementptr inbounds %struct.Reg, %struct.Reg* %14834, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %14835 to i64*
  %14836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14837 = getelementptr inbounds %struct.GPR, %struct.GPR* %14836, i32 0, i32 5
  %14838 = getelementptr inbounds %struct.Reg, %struct.Reg* %14837, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %14838 to i64*
  %14839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14840 = getelementptr inbounds %struct.GPR, %struct.GPR* %14839, i32 0, i32 9
  %14841 = getelementptr inbounds %struct.Reg, %struct.Reg* %14840, i32 0, i32 0
  %RSI.i22 = bitcast %union.anon* %14841 to i64*
  %14842 = load i64, i64* %RAX.i21
  %14843 = load i64, i64* %RCX.i
  %14844 = mul i64 %14843, 4
  %14845 = add i64 %14844, %14842
  %14846 = load i64, i64* %PC.i20
  %14847 = add i64 %14846, 3
  store i64 %14847, i64* %PC.i20
  %14848 = inttoptr i64 %14845 to i32*
  %14849 = load i32, i32* %14848
  %14850 = zext i32 %14849 to i64
  store i64 %14850, i64* %RSI.i22, align 8
  store %struct.Memory* %loadMem_45fef3, %struct.Memory** %MEMORY
  %loadMem_45fef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14852 = getelementptr inbounds %struct.GPR, %struct.GPR* %14851, i32 0, i32 33
  %14853 = getelementptr inbounds %struct.Reg, %struct.Reg* %14852, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %14853 to i64*
  %14854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14855 = getelementptr inbounds %struct.GPR, %struct.GPR* %14854, i32 0, i32 9
  %14856 = getelementptr inbounds %struct.Reg, %struct.Reg* %14855, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %14856 to i64*
  %14857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14858 = getelementptr inbounds %struct.GPR, %struct.GPR* %14857, i32 0, i32 15
  %14859 = getelementptr inbounds %struct.Reg, %struct.Reg* %14858, i32 0, i32 0
  %RBP.i19 = bitcast %union.anon* %14859 to i64*
  %14860 = load i64, i64* %RSI.i
  %14861 = load i64, i64* %RBP.i19
  %14862 = sub i64 %14861, 24
  %14863 = load i64, i64* %PC.i18
  %14864 = add i64 %14863, 3
  store i64 %14864, i64* %PC.i18
  %14865 = trunc i64 %14860 to i32
  %14866 = inttoptr i64 %14862 to i32*
  %14867 = load i32, i32* %14866
  %14868 = add i32 %14867, %14865
  %14869 = zext i32 %14868 to i64
  store i64 %14869, i64* %RSI.i, align 8
  %14870 = icmp ult i32 %14868, %14865
  %14871 = icmp ult i32 %14868, %14867
  %14872 = or i1 %14870, %14871
  %14873 = zext i1 %14872 to i8
  %14874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14873, i8* %14874, align 1
  %14875 = and i32 %14868, 255
  %14876 = call i32 @llvm.ctpop.i32(i32 %14875)
  %14877 = trunc i32 %14876 to i8
  %14878 = and i8 %14877, 1
  %14879 = xor i8 %14878, 1
  %14880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14879, i8* %14880, align 1
  %14881 = xor i32 %14867, %14865
  %14882 = xor i32 %14881, %14868
  %14883 = lshr i32 %14882, 4
  %14884 = trunc i32 %14883 to i8
  %14885 = and i8 %14884, 1
  %14886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14885, i8* %14886, align 1
  %14887 = icmp eq i32 %14868, 0
  %14888 = zext i1 %14887 to i8
  %14889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14888, i8* %14889, align 1
  %14890 = lshr i32 %14868, 31
  %14891 = trunc i32 %14890 to i8
  %14892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14891, i8* %14892, align 1
  %14893 = lshr i32 %14865, 31
  %14894 = lshr i32 %14867, 31
  %14895 = xor i32 %14890, %14893
  %14896 = xor i32 %14890, %14894
  %14897 = add i32 %14895, %14896
  %14898 = icmp eq i32 %14897, 2
  %14899 = zext i1 %14898 to i8
  %14900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14899, i8* %14900, align 1
  store %struct.Memory* %loadMem_45fef6, %struct.Memory** %MEMORY
  %loadMem_45fef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14902 = getelementptr inbounds %struct.GPR, %struct.GPR* %14901, i32 0, i32 33
  %14903 = getelementptr inbounds %struct.Reg, %struct.Reg* %14902, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %14903 to i64*
  %14904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14905 = getelementptr inbounds %struct.GPR, %struct.GPR* %14904, i32 0, i32 9
  %14906 = getelementptr inbounds %struct.Reg, %struct.Reg* %14905, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %14906 to i32*
  %14907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14908 = getelementptr inbounds %struct.GPR, %struct.GPR* %14907, i32 0, i32 15
  %14909 = getelementptr inbounds %struct.Reg, %struct.Reg* %14908, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %14909 to i64*
  %14910 = load i64, i64* %RBP.i17
  %14911 = sub i64 %14910, 24
  %14912 = load i32, i32* %ESI.i
  %14913 = zext i32 %14912 to i64
  %14914 = load i64, i64* %PC.i16
  %14915 = add i64 %14914, 3
  store i64 %14915, i64* %PC.i16
  %14916 = inttoptr i64 %14911 to i32*
  store i32 %14912, i32* %14916
  store %struct.Memory* %loadMem_45fef9, %struct.Memory** %MEMORY
  %loadMem_45fefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14918 = getelementptr inbounds %struct.GPR, %struct.GPR* %14917, i32 0, i32 33
  %14919 = getelementptr inbounds %struct.Reg, %struct.Reg* %14918, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %14919 to i64*
  %14920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14921 = getelementptr inbounds %struct.GPR, %struct.GPR* %14920, i32 0, i32 1
  %14922 = getelementptr inbounds %struct.Reg, %struct.Reg* %14921, i32 0, i32 0
  %RAX.i14 = bitcast %union.anon* %14922 to i64*
  %14923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14924 = getelementptr inbounds %struct.GPR, %struct.GPR* %14923, i32 0, i32 15
  %14925 = getelementptr inbounds %struct.Reg, %struct.Reg* %14924, i32 0, i32 0
  %RBP.i15 = bitcast %union.anon* %14925 to i64*
  %14926 = load i64, i64* %RBP.i15
  %14927 = sub i64 %14926, 16
  %14928 = load i64, i64* %PC.i13
  %14929 = add i64 %14928, 3
  store i64 %14929, i64* %PC.i13
  %14930 = inttoptr i64 %14927 to i32*
  %14931 = load i32, i32* %14930
  %14932 = zext i32 %14931 to i64
  store i64 %14932, i64* %RAX.i14, align 8
  store %struct.Memory* %loadMem_45fefc, %struct.Memory** %MEMORY
  %loadMem_45feff = load %struct.Memory*, %struct.Memory** %MEMORY
  %14933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14934 = getelementptr inbounds %struct.GPR, %struct.GPR* %14933, i32 0, i32 33
  %14935 = getelementptr inbounds %struct.Reg, %struct.Reg* %14934, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %14935 to i64*
  %14936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14937 = getelementptr inbounds %struct.GPR, %struct.GPR* %14936, i32 0, i32 1
  %14938 = getelementptr inbounds %struct.Reg, %struct.Reg* %14937, i32 0, i32 0
  %RAX.i12 = bitcast %union.anon* %14938 to i64*
  %14939 = load i64, i64* %RAX.i12
  %14940 = load i64, i64* %PC.i11
  %14941 = add i64 %14940, 3
  store i64 %14941, i64* %PC.i11
  %14942 = trunc i64 %14939 to i32
  %14943 = add i32 1, %14942
  %14944 = zext i32 %14943 to i64
  store i64 %14944, i64* %RAX.i12, align 8
  %14945 = icmp ult i32 %14943, %14942
  %14946 = icmp ult i32 %14943, 1
  %14947 = or i1 %14945, %14946
  %14948 = zext i1 %14947 to i8
  %14949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14948, i8* %14949, align 1
  %14950 = and i32 %14943, 255
  %14951 = call i32 @llvm.ctpop.i32(i32 %14950)
  %14952 = trunc i32 %14951 to i8
  %14953 = and i8 %14952, 1
  %14954 = xor i8 %14953, 1
  %14955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14954, i8* %14955, align 1
  %14956 = xor i64 1, %14939
  %14957 = trunc i64 %14956 to i32
  %14958 = xor i32 %14957, %14943
  %14959 = lshr i32 %14958, 4
  %14960 = trunc i32 %14959 to i8
  %14961 = and i8 %14960, 1
  %14962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14961, i8* %14962, align 1
  %14963 = icmp eq i32 %14943, 0
  %14964 = zext i1 %14963 to i8
  %14965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14964, i8* %14965, align 1
  %14966 = lshr i32 %14943, 31
  %14967 = trunc i32 %14966 to i8
  %14968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14967, i8* %14968, align 1
  %14969 = lshr i32 %14942, 31
  %14970 = xor i32 %14966, %14969
  %14971 = add i32 %14970, %14966
  %14972 = icmp eq i32 %14971, 2
  %14973 = zext i1 %14972 to i8
  %14974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14973, i8* %14974, align 1
  store %struct.Memory* %loadMem_45feff, %struct.Memory** %MEMORY
  %loadMem_45ff02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14976 = getelementptr inbounds %struct.GPR, %struct.GPR* %14975, i32 0, i32 33
  %14977 = getelementptr inbounds %struct.Reg, %struct.Reg* %14976, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %14977 to i64*
  %14978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14979 = getelementptr inbounds %struct.GPR, %struct.GPR* %14978, i32 0, i32 1
  %14980 = getelementptr inbounds %struct.Reg, %struct.Reg* %14979, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %14980 to i32*
  %14981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14982 = getelementptr inbounds %struct.GPR, %struct.GPR* %14981, i32 0, i32 15
  %14983 = getelementptr inbounds %struct.Reg, %struct.Reg* %14982, i32 0, i32 0
  %RBP.i10 = bitcast %union.anon* %14983 to i64*
  %14984 = load i64, i64* %RBP.i10
  %14985 = sub i64 %14984, 16
  %14986 = load i32, i32* %EAX.i
  %14987 = zext i32 %14986 to i64
  %14988 = load i64, i64* %PC.i9
  %14989 = add i64 %14988, 3
  store i64 %14989, i64* %PC.i9
  %14990 = inttoptr i64 %14985 to i32*
  store i32 %14986, i32* %14990
  store %struct.Memory* %loadMem_45ff02, %struct.Memory** %MEMORY
  %loadMem_45ff05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14992 = getelementptr inbounds %struct.GPR, %struct.GPR* %14991, i32 0, i32 33
  %14993 = getelementptr inbounds %struct.Reg, %struct.Reg* %14992, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %14993 to i64*
  %14994 = load i64, i64* %PC.i8
  %14995 = add i64 %14994, -48
  %14996 = load i64, i64* %PC.i8
  %14997 = add i64 %14996, 5
  store i64 %14997, i64* %PC.i8
  %14998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14995, i64* %14998, align 8
  store %struct.Memory* %loadMem_45ff05, %struct.Memory** %MEMORY
  br label %block_.L_45fed5

block_.L_45ff0a:                                  ; preds = %block_.L_45fed5
  %loadMem_45ff0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15000 = getelementptr inbounds %struct.GPR, %struct.GPR* %14999, i32 0, i32 33
  %15001 = getelementptr inbounds %struct.Reg, %struct.Reg* %15000, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %15001 to i64*
  %15002 = load i64, i64* %PC.i7
  %15003 = add i64 %15002, 5
  %15004 = load i64, i64* %PC.i7
  %15005 = add i64 %15004, 5
  store i64 %15005, i64* %PC.i7
  %15006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15003, i64* %15006, align 8
  store %struct.Memory* %loadMem_45ff0a, %struct.Memory** %MEMORY
  br label %block_.L_45ff0f

block_.L_45ff0f:                                  ; preds = %block_.L_45ff0a, %block_.L_45febd
  %loadMem_45ff0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15008 = getelementptr inbounds %struct.GPR, %struct.GPR* %15007, i32 0, i32 33
  %15009 = getelementptr inbounds %struct.Reg, %struct.Reg* %15008, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %15009 to i64*
  %15010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15011 = getelementptr inbounds %struct.GPR, %struct.GPR* %15010, i32 0, i32 1
  %15012 = getelementptr inbounds %struct.Reg, %struct.Reg* %15011, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %15012 to i64*
  %15013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15014 = getelementptr inbounds %struct.GPR, %struct.GPR* %15013, i32 0, i32 15
  %15015 = getelementptr inbounds %struct.Reg, %struct.Reg* %15014, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %15015 to i64*
  %15016 = load i64, i64* %RBP.i6
  %15017 = sub i64 %15016, 24
  %15018 = load i64, i64* %PC.i5
  %15019 = add i64 %15018, 3
  store i64 %15019, i64* %PC.i5
  %15020 = inttoptr i64 %15017 to i32*
  %15021 = load i32, i32* %15020
  %15022 = zext i32 %15021 to i64
  store i64 %15022, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_45ff0f, %struct.Memory** %MEMORY
  %loadMem_45ff12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15024 = getelementptr inbounds %struct.GPR, %struct.GPR* %15023, i32 0, i32 33
  %15025 = getelementptr inbounds %struct.Reg, %struct.Reg* %15024, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %15025 to i64*
  %15026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15027 = getelementptr inbounds %struct.GPR, %struct.GPR* %15026, i32 0, i32 13
  %15028 = getelementptr inbounds %struct.Reg, %struct.Reg* %15027, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %15028 to i64*
  %15029 = load i64, i64* %RSP.i
  %15030 = load i64, i64* %PC.i4
  %15031 = add i64 %15030, 7
  store i64 %15031, i64* %PC.i4
  %15032 = add i64 688, %15029
  store i64 %15032, i64* %RSP.i, align 8
  %15033 = icmp ult i64 %15032, %15029
  %15034 = icmp ult i64 %15032, 688
  %15035 = or i1 %15033, %15034
  %15036 = zext i1 %15035 to i8
  %15037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15036, i8* %15037, align 1
  %15038 = trunc i64 %15032 to i32
  %15039 = and i32 %15038, 255
  %15040 = call i32 @llvm.ctpop.i32(i32 %15039)
  %15041 = trunc i32 %15040 to i8
  %15042 = and i8 %15041, 1
  %15043 = xor i8 %15042, 1
  %15044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15043, i8* %15044, align 1
  %15045 = xor i64 688, %15029
  %15046 = xor i64 %15045, %15032
  %15047 = lshr i64 %15046, 4
  %15048 = trunc i64 %15047 to i8
  %15049 = and i8 %15048, 1
  %15050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15049, i8* %15050, align 1
  %15051 = icmp eq i64 %15032, 0
  %15052 = zext i1 %15051 to i8
  %15053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15052, i8* %15053, align 1
  %15054 = lshr i64 %15032, 63
  %15055 = trunc i64 %15054 to i8
  %15056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15055, i8* %15056, align 1
  %15057 = lshr i64 %15029, 63
  %15058 = xor i64 %15054, %15057
  %15059 = add i64 %15058, %15054
  %15060 = icmp eq i64 %15059, 2
  %15061 = zext i1 %15060 to i8
  %15062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15061, i8* %15062, align 1
  store %struct.Memory* %loadMem_45ff12, %struct.Memory** %MEMORY
  %loadMem_45ff19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15064 = getelementptr inbounds %struct.GPR, %struct.GPR* %15063, i32 0, i32 33
  %15065 = getelementptr inbounds %struct.Reg, %struct.Reg* %15064, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %15065 to i64*
  %15066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15067 = getelementptr inbounds %struct.GPR, %struct.GPR* %15066, i32 0, i32 15
  %15068 = getelementptr inbounds %struct.Reg, %struct.Reg* %15067, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %15068 to i64*
  %15069 = load i64, i64* %PC.i2
  %15070 = add i64 %15069, 1
  store i64 %15070, i64* %PC.i2
  %15071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15072 = load i64, i64* %15071, align 8
  %15073 = add i64 %15072, 8
  %15074 = inttoptr i64 %15072 to i64*
  %15075 = load i64, i64* %15074
  store i64 %15075, i64* %RBP.i3, align 8
  store i64 %15073, i64* %15071, align 8
  store %struct.Memory* %loadMem_45ff19, %struct.Memory** %MEMORY
  %loadMem_45ff1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %15076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15077 = getelementptr inbounds %struct.GPR, %struct.GPR* %15076, i32 0, i32 33
  %15078 = getelementptr inbounds %struct.Reg, %struct.Reg* %15077, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %15078 to i64*
  %15079 = load i64, i64* %PC.i1
  %15080 = add i64 %15079, 1
  store i64 %15080, i64* %PC.i1
  %15081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15083 = load i64, i64* %15082, align 8
  %15084 = inttoptr i64 %15083 to i64*
  %15085 = load i64, i64* %15084
  store i64 %15085, i64* %15081, align 8
  %15086 = add i64 %15083, 8
  store i64 %15086, i64* %15082, align 8
  store %struct.Memory* %loadMem_45ff1a, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_45ff1a
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x2b0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 688
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 688
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 688, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_45fece(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_45faed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x220__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x120__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = and i64 %9, 4294967295
  %13 = shl i64 %12, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  %16 = shl i32 %14, 1
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %19 = zext i1 %15 to i8
  store i8 %19, i8* %18, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %21 = and i32 %16, 254
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  store i8 %25, i8* %20, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %28 = icmp eq i32 %16, 0
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %27, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %31 = lshr i32 %16, 31
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rdi_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RDI
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shll__0x3___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = and i64 %11, 4294967295
  %15 = shl i64 %14, 2
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %16, 0
  %18 = shl i32 %16, 1
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %9, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %21 = zext i1 %17 to i8
  store i8 %21, i8* %20, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %23 = and i32 %18, 254
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  store i8 %27, i8* %22, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %30 = icmp eq i32 %18, 0
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %33 = lshr i32 %18, 31
  %34 = trunc i32 %33 to i8
  store i8 %34, i8* %32, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x4___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 4, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 4
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 4, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__r8d___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rdx__rdi_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = add i32 %24, %22
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RSI, align 8
  %27 = icmp ult i32 %25, %22
  %28 = icmp ult i32 %25, %24
  %29 = or i1 %27, %28
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %30, i8* %31, align 1
  %32 = and i32 %25, 255
  %33 = call i32 @llvm.ctpop.i32(i32 %32)
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = xor i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %36, i8* %37, align 1
  %38 = xor i32 %24, %22
  %39 = xor i32 %38, %25
  %40 = lshr i32 %39, 4
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %42, i8* %43, align 1
  %44 = icmp eq i32 %25, 0
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %45, i8* %46, align 1
  %47 = lshr i32 %25, 31
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %48, i8* %49, align 1
  %50 = lshr i32 %22, 31
  %51 = lshr i32 %24, 31
  %52 = xor i32 %47, %50
  %53 = xor i32 %47, %51
  %54 = add i32 %52, %53
  %55 = icmp eq i32 %54, 2
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %56, i8* %57, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x5___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 5, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 5
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 5, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x4__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x2___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 2, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 2
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 2, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x6___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 6, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 6
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 6, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x3___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 3, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 3
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 3, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x7___r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = add i32 7, %10
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %9, align 8
  %16 = icmp ult i32 %14, %10
  %17 = icmp ult i32 %14, 7
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i64 7, %11
  %28 = trunc i64 %27 to i32
  %29 = xor i32 %28, %14
  %30 = lshr i32 %29, 4
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %32, i8* %33, align 1
  %34 = icmp eq i32 %14, 0
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %10, 31
  %41 = xor i32 %37, %40
  %42 = add i32 %41, %37
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0xc__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rdx__rdi_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RDX
  %17 = load i64, i64* %RDI
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RSI, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x10__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 16
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x14__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 20
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x18__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x1c__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 28
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x8__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0xc__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x8__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0xc__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x18__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x1c__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x18__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x1c__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x4__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x4__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x14__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x14__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDI
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x18__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x1c__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 28
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x1c__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 28
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_45f5da(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x8__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 8
  %16 = icmp ult i32 %14, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 8
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_45fe09(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x220__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -544
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x1a0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -416
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x320__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -800
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x200__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -512
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x180__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -384
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x300__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -768
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1e0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -480
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x160__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -352
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2e0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -736
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -448
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x140__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -320
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -704
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x1a0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -416
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2a0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -672
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x180__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -384
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x280__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -640
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x160__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -352
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x260__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -608
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x140__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -320
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x240__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -576
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x320__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -800
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2e0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -736
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x120__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -288
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x300__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -768
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x2c0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -704
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x100__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -256
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x2e0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -736
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xe0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -224
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x2c0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -704
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xc0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -192
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2a0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -672
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x260__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -608
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xa0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -160
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x280__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -640
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x240__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -576
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x80__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -128
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x260__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -608
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x60__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -96
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x240__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -576
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x40__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -64
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x120__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -288
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x100__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -256
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x220__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -544
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x100__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -256
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x200__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -512
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xe0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -224
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0xc0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -192
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1e0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -480
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0xc0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -192
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 7
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1c0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -448
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xa0__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -160
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x80__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1a0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -416
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x80__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -128
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x180__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -384
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x60__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -96
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x40__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %26, %23
  %29 = icmp ult i32 %26, %25
  %30 = or i1 %28, %29
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %32, align 1
  %33 = and i32 %26, 255
  %34 = call i32 @llvm.ctpop.i32(i32 %33)
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = xor i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %37, i8* %38, align 1
  %39 = xor i32 %25, %23
  %40 = xor i32 %39, %26
  %41 = lshr i32 %40, 4
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %43, i8* %44, align 1
  %45 = icmp eq i32 %26, 0
  %46 = zext i1 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %26, 31
  %49 = trunc i32 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %49, i8* %50, align 1
  %51 = lshr i32 %23, 31
  %52 = lshr i32 %25, 31
  %53 = xor i32 %48, %51
  %54 = xor i32 %48, %52
  %55 = add i32 %53, %54
  %56 = icmp eq i32 %55, 2
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %57, i8* %58, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x160__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -352
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x40__rbp__rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RBP
  %17 = load i64, i64* %RAX
  %18 = mul i64 %17, 4
  %19 = add i64 %16, -64
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 4
  store i64 %22, i64* %PC
  %23 = trunc i64 %15 to i32
  %24 = inttoptr i64 %20 to i32*
  %25 = load i32, i32* %24
  %26 = sub i32 %23, %25
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %RCX, align 8
  %28 = icmp ult i32 %23, %25
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %29, i8* %30, align 1
  %31 = and i32 %26, 255
  %32 = call i32 @llvm.ctpop.i32(i32 %31)
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %35, i8* %36, align 1
  %37 = xor i32 %25, %23
  %38 = xor i32 %37, %26
  %39 = lshr i32 %38, 4
  %40 = trunc i32 %39 to i8
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %41, i8* %42, align 1
  %43 = icmp eq i32 %26, 0
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %44, i8* %45, align 1
  %46 = lshr i32 %26, 31
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %47, i8* %48, align 1
  %49 = lshr i32 %23, 31
  %50 = lshr i32 %25, 31
  %51 = xor i32 %50, %49
  %52 = xor i32 %46, %49
  %53 = add i32 %52, %51
  %54 = icmp eq i32 %53, 2
  %55 = zext i1 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %55, i8* %56, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x140__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -320
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x10__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_45faf4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_45febd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_45feaa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %19, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = xor i32 %31, %34
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_45fe71(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x220__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x10__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl___rcx__rdx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = load i64, i64* %RDX
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = trunc i64 %15 to i32
  %23 = inttoptr i64 %19 to i32*
  %24 = load i32, i32* %23
  %25 = sub i32 %22, %24
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %RAX, align 8
  %27 = icmp ult i32 %22, %24
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %28, i8* %29, align 1
  %30 = and i32 %25, 255
  %31 = call i32 @llvm.ctpop.i32(i32 %30)
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = xor i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %34, i8* %35, align 1
  %36 = xor i32 %24, %22
  %37 = xor i32 %36, %25
  %38 = lshr i32 %37, 4
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i32 %25, 0
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %25, 31
  %46 = trunc i32 %45 to i8
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %46, i8* %47, align 1
  %48 = lshr i32 %22, 31
  %49 = lshr i32 %24, 31
  %50 = xor i32 %49, %48
  %51 = xor i32 %45, %48
  %52 = add i32 %51, %50
  %53 = icmp eq i32 %52, 2
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %54, i8* %55, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x324__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_45fe90(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x324__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x324__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 804
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_45fe21(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_45feaf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_45fe10(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 2, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 2
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 2, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr exact i64 %12, 32
  %14 = ashr i64 %13, 1
  %15 = lshr i64 %14, 1
  %16 = trunc i64 %14 to i8
  %17 = and i8 %16, 1
  %18 = trunc i64 %15 to i32
  %19 = and i64 %15, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  store i8 %26, i8* %21, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %29 = icmp eq i32 %18, 0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %32 = lshr i32 %18, 31
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_45ff0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x40__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 64
  %16 = icmp ult i32 %14, 64
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 64
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_45ff0a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x726840___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x726840_type* @G_0x726840 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rcx__rdx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x18__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 24
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_45fed5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x2b0___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 688, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 688
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 688, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
